// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Encyclopedia.proto

#ifndef PROTOBUF_E_5fEncyclopedia_2eproto__INCLUDED
#define PROTOBUF_E_5fEncyclopedia_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

class E_EncyclopediaHandbookLviattributeDesc;
class E_EncyclopediaHandbookStariattributeDesc;
class E_EncyclopediaHandbook;
class Sheet_EncyclopediaHandbook;
class E_EncyclopediaHandbookfateAttributeDesc;
class E_EncyclopediaHandbookfate;
class Sheet_EncyclopediaHandbookfate;
class E_EncyclopediaHandbookresolve;
class Sheet_EncyclopediaHandbookresolve;
class E_EncyclopediaHandbooklv_attr;
class Sheet_EncyclopediaHandbooklv_attr;
class E_EncyclopediaHandbookstar_attr;
class Sheet_EncyclopediaHandbookstar_attr;
class E_EncyclopediaBeastBeastDesc;
class E_EncyclopediaBeast;
class Sheet_EncyclopediaBeast;
class E_EncyclopediaEquipexpvalueBeaststarDesc;
class E_EncyclopediaEquipexpvalueGoldstarDesc;
class E_EncyclopediaEquipexpvalue;
class Sheet_EncyclopediaEquipexpvalue;
class E_EncyclopediaBeastexpand;
class Sheet_EncyclopediaBeastexpand;
class E_EncyclopediaBeastprivilegeAttributeDesc;
class E_EncyclopediaBeastprivilege;
class Sheet_EncyclopediaBeastprivilege;
class E_EncyclopediaBeastexp;
class Sheet_EncyclopediaBeastexp;
class E_EncyclopediaEmployLviattributeDesc;
class E_EncyclopediaEmploy;
class Sheet_EncyclopediaEmploy;
class E_EncyclopediaTableLviattributeDesc;
class E_EncyclopediaTable;
class Sheet_EncyclopediaTable;

// ===================================================================

class E_EncyclopediaHandbookLviattributeDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbookLviattributeDesc();
  virtual ~E_EncyclopediaHandbookLviattributeDesc();

  E_EncyclopediaHandbookLviattributeDesc(const E_EncyclopediaHandbookLviattributeDesc& from);

  inline E_EncyclopediaHandbookLviattributeDesc& operator=(const E_EncyclopediaHandbookLviattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbookLviattributeDesc& default_instance();

  void Swap(E_EncyclopediaHandbookLviattributeDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbookLviattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbookLviattributeDesc& from);
  void MergeFrom(const E_EncyclopediaHandbookLviattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int64 m_value() const;
  inline void set_m_value(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbookLviattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbookLviattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbookStariattributeDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbookStariattributeDesc();
  virtual ~E_EncyclopediaHandbookStariattributeDesc();

  E_EncyclopediaHandbookStariattributeDesc(const E_EncyclopediaHandbookStariattributeDesc& from);

  inline E_EncyclopediaHandbookStariattributeDesc& operator=(const E_EncyclopediaHandbookStariattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbookStariattributeDesc& default_instance();

  void Swap(E_EncyclopediaHandbookStariattributeDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbookStariattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbookStariattributeDesc& from);
  void MergeFrom(const E_EncyclopediaHandbookStariattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int64 m_value() const;
  inline void set_m_value(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbookStariattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbookStariattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbook : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbook();
  virtual ~E_EncyclopediaHandbook();

  E_EncyclopediaHandbook(const E_EncyclopediaHandbook& from);

  inline E_EncyclopediaHandbook& operator=(const E_EncyclopediaHandbook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbook& default_instance();

  void Swap(E_EncyclopediaHandbook* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbook& from);
  void MergeFrom(const E_EncyclopediaHandbook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_handbookid = 1;
  inline bool has_m_handbookid() const;
  inline void clear_m_handbookid();
  static const int kMHandbookidFieldNumber = 1;
  inline ::google::protobuf::int64 m_handbookid() const;
  inline void set_m_handbookid(::google::protobuf::int64 value);

  // optional int64 m_itemid = 2;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 2;
  inline ::google::protobuf::int64 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int64 value);

  // optional string m_handbookname = 3;
  inline bool has_m_handbookname() const;
  inline void clear_m_handbookname();
  static const int kMHandbooknameFieldNumber = 3;
  inline const ::std::string& m_handbookname() const;
  inline void set_m_handbookname(const ::std::string& value);
  inline void set_m_handbookname(const char* value);
  inline void set_m_handbookname(const char* value, size_t size);
  inline ::std::string* mutable_m_handbookname();
  inline ::std::string* release_m_handbookname();
  inline void set_allocated_m_handbookname(::std::string* m_handbookname);

  // optional int32 m_handbookquality = 4;
  inline bool has_m_handbookquality() const;
  inline void clear_m_handbookquality();
  static const int kMHandbookqualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_handbookquality() const;
  inline void set_m_handbookquality(::google::protobuf::int32 value);

  // optional int32 m_handbooktype = 5;
  inline bool has_m_handbooktype() const;
  inline void clear_m_handbooktype();
  static const int kMHandbooktypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_handbooktype() const;
  inline void set_m_handbooktype(::google::protobuf::int32 value);

  // optional string m_handbooktype_name = 6;
  inline bool has_m_handbooktype_name() const;
  inline void clear_m_handbooktype_name();
  static const int kMHandbooktypeNameFieldNumber = 6;
  inline const ::std::string& m_handbooktype_name() const;
  inline void set_m_handbooktype_name(const ::std::string& value);
  inline void set_m_handbooktype_name(const char* value);
  inline void set_m_handbooktype_name(const char* value, size_t size);
  inline ::std::string* mutable_m_handbooktype_name();
  inline ::std::string* release_m_handbooktype_name();
  inline void set_allocated_m_handbooktype_name(::std::string* m_handbooktype_name);

  // optional int32 m_handz = 7;
  inline bool has_m_handz() const;
  inline void clear_m_handz();
  static const int kMHandzFieldNumber = 7;
  inline ::google::protobuf::int32 m_handz() const;
  inline void set_m_handz(::google::protobuf::int32 value);

  // optional string m_handzname = 8;
  inline bool has_m_handzname() const;
  inline void clear_m_handzname();
  static const int kMHandznameFieldNumber = 8;
  inline const ::std::string& m_handzname() const;
  inline void set_m_handzname(const ::std::string& value);
  inline void set_m_handzname(const char* value);
  inline void set_m_handzname(const char* value, size_t size);
  inline ::std::string* mutable_m_handzname();
  inline ::std::string* release_m_handzname();
  inline void set_allocated_m_handzname(::std::string* m_handzname);

  // optional int32 m_handbooklv = 9;
  inline bool has_m_handbooklv() const;
  inline void clear_m_handbooklv();
  static const int kMHandbooklvFieldNumber = 9;
  inline ::google::protobuf::int32 m_handbooklv() const;
  inline void set_m_handbooklv(::google::protobuf::int32 value);

  // optional int64 m_lvid = 10;
  inline bool has_m_lvid() const;
  inline void clear_m_lvid();
  static const int kMLvidFieldNumber = 10;
  inline ::google::protobuf::int64 m_lvid() const;
  inline void set_m_lvid(::google::protobuf::int64 value);

  // optional string m_lvnum = 11;
  inline bool has_m_lvnum() const;
  inline void clear_m_lvnum();
  static const int kMLvnumFieldNumber = 11;
  inline const ::std::string& m_lvnum() const;
  inline void set_m_lvnum(const ::std::string& value);
  inline void set_m_lvnum(const char* value);
  inline void set_m_lvnum(const char* value, size_t size);
  inline ::std::string* mutable_m_lvnum();
  inline ::std::string* release_m_lvnum();
  inline void set_allocated_m_lvnum(::std::string* m_lvnum);

  // optional int64 m_starid = 12;
  inline bool has_m_starid() const;
  inline void clear_m_starid();
  static const int kMStaridFieldNumber = 12;
  inline ::google::protobuf::int64 m_starid() const;
  inline void set_m_starid(::google::protobuf::int64 value);

  // optional string m_starnum = 13;
  inline bool has_m_starnum() const;
  inline void clear_m_starnum();
  static const int kMStarnumFieldNumber = 13;
  inline const ::std::string& m_starnum() const;
  inline void set_m_starnum(const ::std::string& value);
  inline void set_m_starnum(const char* value);
  inline void set_m_starnum(const char* value, size_t size);
  inline ::std::string* mutable_m_starnum();
  inline ::std::string* release_m_starnum();
  inline void set_allocated_m_starnum(::std::string* m_starnum);

  // repeated .proto_ff.E_EncyclopediaHandbookLviattributeDesc m_lviattribute = 14;
  inline int m_lviattribute_size() const;
  inline void clear_m_lviattribute();
  static const int kMLviattributeFieldNumber = 14;
  inline const ::proto_ff::E_EncyclopediaHandbookLviattributeDesc& m_lviattribute(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbookLviattributeDesc* mutable_m_lviattribute(int index);
  inline ::proto_ff::E_EncyclopediaHandbookLviattributeDesc* add_m_lviattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookLviattributeDesc >&
      m_lviattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookLviattributeDesc >*
      mutable_m_lviattribute();

  // repeated int32 m_awakeskill = 15;
  inline int m_awakeskill_size() const;
  inline void clear_m_awakeskill();
  static const int kMAwakeskillFieldNumber = 15;
  inline ::google::protobuf::int32 m_awakeskill(int index) const;
  inline void set_m_awakeskill(int index, ::google::protobuf::int32 value);
  inline void add_m_awakeskill(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_awakeskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_awakeskill();

  // repeated .proto_ff.E_EncyclopediaHandbookStariattributeDesc m_stariattribute = 16;
  inline int m_stariattribute_size() const;
  inline void clear_m_stariattribute();
  static const int kMStariattributeFieldNumber = 16;
  inline const ::proto_ff::E_EncyclopediaHandbookStariattributeDesc& m_stariattribute(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbookStariattributeDesc* mutable_m_stariattribute(int index);
  inline ::proto_ff::E_EncyclopediaHandbookStariattributeDesc* add_m_stariattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookStariattributeDesc >&
      m_stariattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookStariattributeDesc >*
      mutable_m_stariattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbook)
 private:
  inline void set_has_m_handbookid();
  inline void clear_has_m_handbookid();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_handbookname();
  inline void clear_has_m_handbookname();
  inline void set_has_m_handbookquality();
  inline void clear_has_m_handbookquality();
  inline void set_has_m_handbooktype();
  inline void clear_has_m_handbooktype();
  inline void set_has_m_handbooktype_name();
  inline void clear_has_m_handbooktype_name();
  inline void set_has_m_handz();
  inline void clear_has_m_handz();
  inline void set_has_m_handzname();
  inline void clear_has_m_handzname();
  inline void set_has_m_handbooklv();
  inline void clear_has_m_handbooklv();
  inline void set_has_m_lvid();
  inline void clear_has_m_lvid();
  inline void set_has_m_lvnum();
  inline void clear_has_m_lvnum();
  inline void set_has_m_starid();
  inline void clear_has_m_starid();
  inline void set_has_m_starnum();
  inline void clear_has_m_starnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_handbookid_;
  ::google::protobuf::int64 m_itemid_;
  ::std::string* m_handbookname_;
  ::google::protobuf::int32 m_handbookquality_;
  ::google::protobuf::int32 m_handbooktype_;
  ::std::string* m_handbooktype_name_;
  ::std::string* m_handzname_;
  ::google::protobuf::int32 m_handz_;
  ::google::protobuf::int32 m_handbooklv_;
  ::google::protobuf::int64 m_lvid_;
  ::std::string* m_lvnum_;
  ::google::protobuf::int64 m_starid_;
  ::std::string* m_starnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookLviattributeDesc > m_lviattribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_awakeskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookStariattributeDesc > m_stariattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbook* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaHandbook : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaHandbook();
  virtual ~Sheet_EncyclopediaHandbook();

  Sheet_EncyclopediaHandbook(const Sheet_EncyclopediaHandbook& from);

  inline Sheet_EncyclopediaHandbook& operator=(const Sheet_EncyclopediaHandbook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaHandbook& default_instance();

  void Swap(Sheet_EncyclopediaHandbook* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaHandbook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaHandbook& from);
  void MergeFrom(const Sheet_EncyclopediaHandbook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaHandbook E_EncyclopediaHandbook_List = 1;
  inline int e_encyclopediahandbook_list_size() const;
  inline void clear_e_encyclopediahandbook_list();
  static const int kEEncyclopediaHandbookListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaHandbook& e_encyclopediahandbook_list(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbook* mutable_e_encyclopediahandbook_list(int index);
  inline ::proto_ff::E_EncyclopediaHandbook* add_e_encyclopediahandbook_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbook >&
      e_encyclopediahandbook_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbook >*
      mutable_e_encyclopediahandbook_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaHandbook)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbook > e_encyclopediahandbook_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaHandbook* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbookfateAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbookfateAttributeDesc();
  virtual ~E_EncyclopediaHandbookfateAttributeDesc();

  E_EncyclopediaHandbookfateAttributeDesc(const E_EncyclopediaHandbookfateAttributeDesc& from);

  inline E_EncyclopediaHandbookfateAttributeDesc& operator=(const E_EncyclopediaHandbookfateAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbookfateAttributeDesc& default_instance();

  void Swap(E_EncyclopediaHandbookfateAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbookfateAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbookfateAttributeDesc& from);
  void MergeFrom(const E_EncyclopediaHandbookfateAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int64 m_value() const;
  inline void set_m_value(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbookfateAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbookfateAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbookfate : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbookfate();
  virtual ~E_EncyclopediaHandbookfate();

  E_EncyclopediaHandbookfate(const E_EncyclopediaHandbookfate& from);

  inline E_EncyclopediaHandbookfate& operator=(const E_EncyclopediaHandbookfate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbookfate& default_instance();

  void Swap(E_EncyclopediaHandbookfate* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbookfate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbookfate& from);
  void MergeFrom(const E_EncyclopediaHandbookfate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_fateid = 1;
  inline bool has_m_fateid() const;
  inline void clear_m_fateid();
  static const int kMFateidFieldNumber = 1;
  inline ::google::protobuf::int64 m_fateid() const;
  inline void set_m_fateid(::google::protobuf::int64 value);

  // optional string m_fatename = 2;
  inline bool has_m_fatename() const;
  inline void clear_m_fatename();
  static const int kMFatenameFieldNumber = 2;
  inline const ::std::string& m_fatename() const;
  inline void set_m_fatename(const ::std::string& value);
  inline void set_m_fatename(const char* value);
  inline void set_m_fatename(const char* value, size_t size);
  inline ::std::string* mutable_m_fatename();
  inline ::std::string* release_m_fatename();
  inline void set_allocated_m_fatename(::std::string* m_fatename);

  // optional int32 m_fatequality = 3;
  inline bool has_m_fatequality() const;
  inline void clear_m_fatequality();
  static const int kMFatequalityFieldNumber = 3;
  inline ::google::protobuf::int32 m_fatequality() const;
  inline void set_m_fatequality(::google::protobuf::int32 value);

  // repeated int64 m_fatehand = 4;
  inline int m_fatehand_size() const;
  inline void clear_m_fatehand();
  static const int kMFatehandFieldNumber = 4;
  inline ::google::protobuf::int64 m_fatehand(int index) const;
  inline void set_m_fatehand(int index, ::google::protobuf::int64 value);
  inline void add_m_fatehand(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      m_fatehand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_m_fatehand();

  // repeated .proto_ff.E_EncyclopediaHandbookfateAttributeDesc m_attribute = 5;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 5;
  inline const ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbookfate)
 private:
  inline void set_has_m_fateid();
  inline void clear_has_m_fateid();
  inline void set_has_m_fatename();
  inline void clear_has_m_fatename();
  inline void set_has_m_fatequality();
  inline void clear_has_m_fatequality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_fateid_;
  ::std::string* m_fatename_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > m_fatehand_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_fatequality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbookfate* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaHandbookfate : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaHandbookfate();
  virtual ~Sheet_EncyclopediaHandbookfate();

  Sheet_EncyclopediaHandbookfate(const Sheet_EncyclopediaHandbookfate& from);

  inline Sheet_EncyclopediaHandbookfate& operator=(const Sheet_EncyclopediaHandbookfate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaHandbookfate& default_instance();

  void Swap(Sheet_EncyclopediaHandbookfate* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaHandbookfate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaHandbookfate& from);
  void MergeFrom(const Sheet_EncyclopediaHandbookfate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaHandbookfate E_EncyclopediaHandbookfate_List = 1;
  inline int e_encyclopediahandbookfate_list_size() const;
  inline void clear_e_encyclopediahandbookfate_list();
  static const int kEEncyclopediaHandbookfateListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaHandbookfate& e_encyclopediahandbookfate_list(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbookfate* mutable_e_encyclopediahandbookfate_list(int index);
  inline ::proto_ff::E_EncyclopediaHandbookfate* add_e_encyclopediahandbookfate_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfate >&
      e_encyclopediahandbookfate_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfate >*
      mutable_e_encyclopediahandbookfate_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaHandbookfate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfate > e_encyclopediahandbookfate_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaHandbookfate* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbookresolve : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbookresolve();
  virtual ~E_EncyclopediaHandbookresolve();

  E_EncyclopediaHandbookresolve(const E_EncyclopediaHandbookresolve& from);

  inline E_EncyclopediaHandbookresolve& operator=(const E_EncyclopediaHandbookresolve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbookresolve& default_instance();

  void Swap(E_EncyclopediaHandbookresolve* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbookresolve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbookresolve& from);
  void MergeFrom(const E_EncyclopediaHandbookresolve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_handbookquality = 1;
  inline bool has_m_handbookquality() const;
  inline void clear_m_handbookquality();
  static const int kMHandbookqualityFieldNumber = 1;
  inline ::google::protobuf::int32 m_handbookquality() const;
  inline void set_m_handbookquality(::google::protobuf::int32 value);

  // optional int32 m_resolveitem = 2;
  inline bool has_m_resolveitem() const;
  inline void clear_m_resolveitem();
  static const int kMResolveitemFieldNumber = 2;
  inline ::google::protobuf::int32 m_resolveitem() const;
  inline void set_m_resolveitem(::google::protobuf::int32 value);

  // optional int32 m_resolvenum = 3;
  inline bool has_m_resolvenum() const;
  inline void clear_m_resolvenum();
  static const int kMResolvenumFieldNumber = 3;
  inline ::google::protobuf::int32 m_resolvenum() const;
  inline void set_m_resolvenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbookresolve)
 private:
  inline void set_has_m_handbookquality();
  inline void clear_has_m_handbookquality();
  inline void set_has_m_resolveitem();
  inline void clear_has_m_resolveitem();
  inline void set_has_m_resolvenum();
  inline void clear_has_m_resolvenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_handbookquality_;
  ::google::protobuf::int32 m_resolveitem_;
  ::google::protobuf::int32 m_resolvenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbookresolve* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaHandbookresolve : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaHandbookresolve();
  virtual ~Sheet_EncyclopediaHandbookresolve();

  Sheet_EncyclopediaHandbookresolve(const Sheet_EncyclopediaHandbookresolve& from);

  inline Sheet_EncyclopediaHandbookresolve& operator=(const Sheet_EncyclopediaHandbookresolve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaHandbookresolve& default_instance();

  void Swap(Sheet_EncyclopediaHandbookresolve* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaHandbookresolve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaHandbookresolve& from);
  void MergeFrom(const Sheet_EncyclopediaHandbookresolve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaHandbookresolve E_EncyclopediaHandbookresolve_List = 1;
  inline int e_encyclopediahandbookresolve_list_size() const;
  inline void clear_e_encyclopediahandbookresolve_list();
  static const int kEEncyclopediaHandbookresolveListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaHandbookresolve& e_encyclopediahandbookresolve_list(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbookresolve* mutable_e_encyclopediahandbookresolve_list(int index);
  inline ::proto_ff::E_EncyclopediaHandbookresolve* add_e_encyclopediahandbookresolve_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookresolve >&
      e_encyclopediahandbookresolve_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookresolve >*
      mutable_e_encyclopediahandbookresolve_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaHandbookresolve)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookresolve > e_encyclopediahandbookresolve_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaHandbookresolve* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbooklv_attr : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbooklv_attr();
  virtual ~E_EncyclopediaHandbooklv_attr();

  E_EncyclopediaHandbooklv_attr(const E_EncyclopediaHandbooklv_attr& from);

  inline E_EncyclopediaHandbooklv_attr& operator=(const E_EncyclopediaHandbooklv_attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbooklv_attr& default_instance();

  void Swap(E_EncyclopediaHandbooklv_attr* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbooklv_attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbooklv_attr& from);
  void MergeFrom(const E_EncyclopediaHandbooklv_attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_attid = 1;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 1;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // repeated int32 m_att = 2;
  inline int m_att_size() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att(int index) const;
  inline void set_m_att(int index, ::google::protobuf::int32 value);
  inline void add_m_att(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_att() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_att();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbooklv_attr)
 private:
  inline void set_has_m_attid();
  inline void clear_has_m_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbooklv_attr* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaHandbooklv_attr : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaHandbooklv_attr();
  virtual ~Sheet_EncyclopediaHandbooklv_attr();

  Sheet_EncyclopediaHandbooklv_attr(const Sheet_EncyclopediaHandbooklv_attr& from);

  inline Sheet_EncyclopediaHandbooklv_attr& operator=(const Sheet_EncyclopediaHandbooklv_attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaHandbooklv_attr& default_instance();

  void Swap(Sheet_EncyclopediaHandbooklv_attr* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaHandbooklv_attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaHandbooklv_attr& from);
  void MergeFrom(const Sheet_EncyclopediaHandbooklv_attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaHandbooklv_attr E_EncyclopediaHandbooklv_attr_List = 1;
  inline int e_encyclopediahandbooklv_attr_list_size() const;
  inline void clear_e_encyclopediahandbooklv_attr_list();
  static const int kEEncyclopediaHandbooklvAttrListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaHandbooklv_attr& e_encyclopediahandbooklv_attr_list(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbooklv_attr* mutable_e_encyclopediahandbooklv_attr_list(int index);
  inline ::proto_ff::E_EncyclopediaHandbooklv_attr* add_e_encyclopediahandbooklv_attr_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbooklv_attr >&
      e_encyclopediahandbooklv_attr_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbooklv_attr >*
      mutable_e_encyclopediahandbooklv_attr_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaHandbooklv_attr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbooklv_attr > e_encyclopediahandbooklv_attr_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaHandbooklv_attr* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaHandbookstar_attr : public ::google::protobuf::Message {
 public:
  E_EncyclopediaHandbookstar_attr();
  virtual ~E_EncyclopediaHandbookstar_attr();

  E_EncyclopediaHandbookstar_attr(const E_EncyclopediaHandbookstar_attr& from);

  inline E_EncyclopediaHandbookstar_attr& operator=(const E_EncyclopediaHandbookstar_attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaHandbookstar_attr& default_instance();

  void Swap(E_EncyclopediaHandbookstar_attr* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaHandbookstar_attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaHandbookstar_attr& from);
  void MergeFrom(const E_EncyclopediaHandbookstar_attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_attid = 1;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 1;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // repeated int32 m_att = 2;
  inline int m_att_size() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att(int index) const;
  inline void set_m_att(int index, ::google::protobuf::int32 value);
  inline void add_m_att(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_att() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_att();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaHandbookstar_attr)
 private:
  inline void set_has_m_attid();
  inline void clear_has_m_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaHandbookstar_attr* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaHandbookstar_attr : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaHandbookstar_attr();
  virtual ~Sheet_EncyclopediaHandbookstar_attr();

  Sheet_EncyclopediaHandbookstar_attr(const Sheet_EncyclopediaHandbookstar_attr& from);

  inline Sheet_EncyclopediaHandbookstar_attr& operator=(const Sheet_EncyclopediaHandbookstar_attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaHandbookstar_attr& default_instance();

  void Swap(Sheet_EncyclopediaHandbookstar_attr* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaHandbookstar_attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaHandbookstar_attr& from);
  void MergeFrom(const Sheet_EncyclopediaHandbookstar_attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaHandbookstar_attr E_EncyclopediaHandbookstar_attr_List = 1;
  inline int e_encyclopediahandbookstar_attr_list_size() const;
  inline void clear_e_encyclopediahandbookstar_attr_list();
  static const int kEEncyclopediaHandbookstarAttrListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaHandbookstar_attr& e_encyclopediahandbookstar_attr_list(int index) const;
  inline ::proto_ff::E_EncyclopediaHandbookstar_attr* mutable_e_encyclopediahandbookstar_attr_list(int index);
  inline ::proto_ff::E_EncyclopediaHandbookstar_attr* add_e_encyclopediahandbookstar_attr_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookstar_attr >&
      e_encyclopediahandbookstar_attr_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookstar_attr >*
      mutable_e_encyclopediahandbookstar_attr_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaHandbookstar_attr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookstar_attr > e_encyclopediahandbookstar_attr_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaHandbookstar_attr* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaBeastBeastDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaBeastBeastDesc();
  virtual ~E_EncyclopediaBeastBeastDesc();

  E_EncyclopediaBeastBeastDesc(const E_EncyclopediaBeastBeastDesc& from);

  inline E_EncyclopediaBeastBeastDesc& operator=(const E_EncyclopediaBeastBeastDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaBeastBeastDesc& default_instance();

  void Swap(E_EncyclopediaBeastBeastDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaBeastBeastDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaBeastBeastDesc& from);
  void MergeFrom(const E_EncyclopediaBeastBeastDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_att = 2;
  inline bool has_m_att() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att() const;
  inline void set_m_att(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaBeastBeastDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_att();
  inline void clear_has_m_att();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaBeastBeastDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaBeast : public ::google::protobuf::Message {
 public:
  E_EncyclopediaBeast();
  virtual ~E_EncyclopediaBeast();

  E_EncyclopediaBeast(const E_EncyclopediaBeast& from);

  inline E_EncyclopediaBeast& operator=(const E_EncyclopediaBeast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaBeast& default_instance();

  void Swap(E_EncyclopediaBeast* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaBeast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaBeast& from);
  void MergeFrom(const E_EncyclopediaBeast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // repeated int32 m_pos = 3;
  inline int m_pos_size() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 3;
  inline ::google::protobuf::int32 m_pos(int index) const;
  inline void set_m_pos(int index, ::google::protobuf::int32 value);
  inline void add_m_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_pos();

  // repeated .proto_ff.E_EncyclopediaBeastBeastDesc m_beast = 4;
  inline int m_beast_size() const;
  inline void clear_m_beast();
  static const int kMBeastFieldNumber = 4;
  inline const ::proto_ff::E_EncyclopediaBeastBeastDesc& m_beast(int index) const;
  inline ::proto_ff::E_EncyclopediaBeastBeastDesc* mutable_m_beast(int index);
  inline ::proto_ff::E_EncyclopediaBeastBeastDesc* add_m_beast();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastBeastDesc >&
      m_beast() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastBeastDesc >*
      mutable_m_beast();

  // repeated int64 m_skill = 5;
  inline int m_skill_size() const;
  inline void clear_m_skill();
  static const int kMSkillFieldNumber = 5;
  inline ::google::protobuf::int64 m_skill(int index) const;
  inline void set_m_skill(int index, ::google::protobuf::int64 value);
  inline void add_m_skill(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      m_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_m_skill();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaBeast)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_pos_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastBeastDesc > m_beast_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > m_skill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaBeast* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaBeast : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaBeast();
  virtual ~Sheet_EncyclopediaBeast();

  Sheet_EncyclopediaBeast(const Sheet_EncyclopediaBeast& from);

  inline Sheet_EncyclopediaBeast& operator=(const Sheet_EncyclopediaBeast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaBeast& default_instance();

  void Swap(Sheet_EncyclopediaBeast* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaBeast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaBeast& from);
  void MergeFrom(const Sheet_EncyclopediaBeast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaBeast E_EncyclopediaBeast_List = 1;
  inline int e_encyclopediabeast_list_size() const;
  inline void clear_e_encyclopediabeast_list();
  static const int kEEncyclopediaBeastListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaBeast& e_encyclopediabeast_list(int index) const;
  inline ::proto_ff::E_EncyclopediaBeast* mutable_e_encyclopediabeast_list(int index);
  inline ::proto_ff::E_EncyclopediaBeast* add_e_encyclopediabeast_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeast >&
      e_encyclopediabeast_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeast >*
      mutable_e_encyclopediabeast_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaBeast)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeast > e_encyclopediabeast_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaBeast* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaEquipexpvalueBeaststarDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaEquipexpvalueBeaststarDesc();
  virtual ~E_EncyclopediaEquipexpvalueBeaststarDesc();

  E_EncyclopediaEquipexpvalueBeaststarDesc(const E_EncyclopediaEquipexpvalueBeaststarDesc& from);

  inline E_EncyclopediaEquipexpvalueBeaststarDesc& operator=(const E_EncyclopediaEquipexpvalueBeaststarDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaEquipexpvalueBeaststarDesc& default_instance();

  void Swap(E_EncyclopediaEquipexpvalueBeaststarDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaEquipexpvalueBeaststarDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaEquipexpvalueBeaststarDesc& from);
  void MergeFrom(const E_EncyclopediaEquipexpvalueBeaststarDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_att = 2;
  inline bool has_m_att() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att() const;
  inline void set_m_att(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaEquipexpvalueBeaststarDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_att();
  inline void clear_has_m_att();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaEquipexpvalueBeaststarDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaEquipexpvalueGoldstarDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaEquipexpvalueGoldstarDesc();
  virtual ~E_EncyclopediaEquipexpvalueGoldstarDesc();

  E_EncyclopediaEquipexpvalueGoldstarDesc(const E_EncyclopediaEquipexpvalueGoldstarDesc& from);

  inline E_EncyclopediaEquipexpvalueGoldstarDesc& operator=(const E_EncyclopediaEquipexpvalueGoldstarDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaEquipexpvalueGoldstarDesc& default_instance();

  void Swap(E_EncyclopediaEquipexpvalueGoldstarDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaEquipexpvalueGoldstarDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaEquipexpvalueGoldstarDesc& from);
  void MergeFrom(const E_EncyclopediaEquipexpvalueGoldstarDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_att = 2;
  inline bool has_m_att() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att() const;
  inline void set_m_att(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaEquipexpvalueGoldstarDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_att();
  inline void clear_has_m_att();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaEquipexpvalueGoldstarDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaEquipexpvalue : public ::google::protobuf::Message {
 public:
  E_EncyclopediaEquipexpvalue();
  virtual ~E_EncyclopediaEquipexpvalue();

  E_EncyclopediaEquipexpvalue(const E_EncyclopediaEquipexpvalue& from);

  inline E_EncyclopediaEquipexpvalue& operator=(const E_EncyclopediaEquipexpvalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaEquipexpvalue& default_instance();

  void Swap(E_EncyclopediaEquipexpvalue* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaEquipexpvalue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaEquipexpvalue& from);
  void MergeFrom(const E_EncyclopediaEquipexpvalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int64 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int64 m_type() const;
  inline void set_m_type(::google::protobuf::int64 value);

  // optional string m_name = 3;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 3;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_exp = 4;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 4;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int64 m_link = 5;
  inline bool has_m_link() const;
  inline void clear_m_link();
  static const int kMLinkFieldNumber = 5;
  inline ::google::protobuf::int64 m_link() const;
  inline void set_m_link(::google::protobuf::int64 value);

  // optional int32 m_goldattall = 6;
  inline bool has_m_goldattall() const;
  inline void clear_m_goldattall();
  static const int kMGoldattallFieldNumber = 6;
  inline ::google::protobuf::int32 m_goldattall() const;
  inline void set_m_goldattall(::google::protobuf::int32 value);

  // optional int32 m_goldatt = 7;
  inline bool has_m_goldatt() const;
  inline void clear_m_goldatt();
  static const int kMGoldattFieldNumber = 7;
  inline ::google::protobuf::int32 m_goldatt() const;
  inline void set_m_goldatt(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EncyclopediaEquipexpvalueBeaststarDesc m_beaststar = 8;
  inline int m_beaststar_size() const;
  inline void clear_m_beaststar();
  static const int kMBeaststarFieldNumber = 8;
  inline const ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc& m_beaststar(int index) const;
  inline ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc* mutable_m_beaststar(int index);
  inline ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc* add_m_beaststar();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc >&
      m_beaststar() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc >*
      mutable_m_beaststar();

  // repeated .proto_ff.E_EncyclopediaEquipexpvalueGoldstarDesc m_goldstar = 9;
  inline int m_goldstar_size() const;
  inline void clear_m_goldstar();
  static const int kMGoldstarFieldNumber = 9;
  inline const ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc& m_goldstar(int index) const;
  inline ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc* mutable_m_goldstar(int index);
  inline ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc* add_m_goldstar();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc >&
      m_goldstar() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc >*
      mutable_m_goldstar();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaEquipexpvalue)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_link();
  inline void clear_has_m_link();
  inline void set_has_m_goldattall();
  inline void clear_has_m_goldattall();
  inline void set_has_m_goldatt();
  inline void clear_has_m_goldatt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int64 m_type_;
  ::std::string* m_name_;
  ::google::protobuf::int64 m_link_;
  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_goldattall_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc > m_beaststar_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc > m_goldstar_;
  ::google::protobuf::int32 m_goldatt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaEquipexpvalue* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaEquipexpvalue : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaEquipexpvalue();
  virtual ~Sheet_EncyclopediaEquipexpvalue();

  Sheet_EncyclopediaEquipexpvalue(const Sheet_EncyclopediaEquipexpvalue& from);

  inline Sheet_EncyclopediaEquipexpvalue& operator=(const Sheet_EncyclopediaEquipexpvalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaEquipexpvalue& default_instance();

  void Swap(Sheet_EncyclopediaEquipexpvalue* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaEquipexpvalue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaEquipexpvalue& from);
  void MergeFrom(const Sheet_EncyclopediaEquipexpvalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaEquipexpvalue E_EncyclopediaEquipexpvalue_List = 1;
  inline int e_encyclopediaequipexpvalue_list_size() const;
  inline void clear_e_encyclopediaequipexpvalue_list();
  static const int kEEncyclopediaEquipexpvalueListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaEquipexpvalue& e_encyclopediaequipexpvalue_list(int index) const;
  inline ::proto_ff::E_EncyclopediaEquipexpvalue* mutable_e_encyclopediaequipexpvalue_list(int index);
  inline ::proto_ff::E_EncyclopediaEquipexpvalue* add_e_encyclopediaequipexpvalue_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalue >&
      e_encyclopediaequipexpvalue_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalue >*
      mutable_e_encyclopediaequipexpvalue_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaEquipexpvalue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalue > e_encyclopediaequipexpvalue_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaEquipexpvalue* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaBeastexpand : public ::google::protobuf::Message {
 public:
  E_EncyclopediaBeastexpand();
  virtual ~E_EncyclopediaBeastexpand();

  E_EncyclopediaBeastexpand(const E_EncyclopediaBeastexpand& from);

  inline E_EncyclopediaBeastexpand& operator=(const E_EncyclopediaBeastexpand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaBeastexpand& default_instance();

  void Swap(E_EncyclopediaBeastexpand* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaBeastexpand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaBeastexpand& from);
  void MergeFrom(const E_EncyclopediaBeastexpand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_number = 1;
  inline bool has_m_number() const;
  inline void clear_m_number();
  static const int kMNumberFieldNumber = 1;
  inline ::google::protobuf::int32 m_number() const;
  inline void set_m_number(::google::protobuf::int32 value);

  // optional int32 m_lv = 2;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int64 m_id = 3;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 3;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_num = 4;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 4;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaBeastexpand)
 private:
  inline void set_has_m_number();
  inline void clear_has_m_number();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_number_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaBeastexpand* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaBeastexpand : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaBeastexpand();
  virtual ~Sheet_EncyclopediaBeastexpand();

  Sheet_EncyclopediaBeastexpand(const Sheet_EncyclopediaBeastexpand& from);

  inline Sheet_EncyclopediaBeastexpand& operator=(const Sheet_EncyclopediaBeastexpand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaBeastexpand& default_instance();

  void Swap(Sheet_EncyclopediaBeastexpand* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaBeastexpand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaBeastexpand& from);
  void MergeFrom(const Sheet_EncyclopediaBeastexpand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaBeastexpand E_EncyclopediaBeastexpand_List = 1;
  inline int e_encyclopediabeastexpand_list_size() const;
  inline void clear_e_encyclopediabeastexpand_list();
  static const int kEEncyclopediaBeastexpandListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaBeastexpand& e_encyclopediabeastexpand_list(int index) const;
  inline ::proto_ff::E_EncyclopediaBeastexpand* mutable_e_encyclopediabeastexpand_list(int index);
  inline ::proto_ff::E_EncyclopediaBeastexpand* add_e_encyclopediabeastexpand_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexpand >&
      e_encyclopediabeastexpand_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexpand >*
      mutable_e_encyclopediabeastexpand_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaBeastexpand)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexpand > e_encyclopediabeastexpand_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaBeastexpand* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaBeastprivilegeAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaBeastprivilegeAttributeDesc();
  virtual ~E_EncyclopediaBeastprivilegeAttributeDesc();

  E_EncyclopediaBeastprivilegeAttributeDesc(const E_EncyclopediaBeastprivilegeAttributeDesc& from);

  inline E_EncyclopediaBeastprivilegeAttributeDesc& operator=(const E_EncyclopediaBeastprivilegeAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaBeastprivilegeAttributeDesc& default_instance();

  void Swap(E_EncyclopediaBeastprivilegeAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaBeastprivilegeAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaBeastprivilegeAttributeDesc& from);
  void MergeFrom(const E_EncyclopediaBeastprivilegeAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int64 m_value() const;
  inline void set_m_value(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaBeastprivilegeAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaBeastprivilegeAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaBeastprivilege : public ::google::protobuf::Message {
 public:
  E_EncyclopediaBeastprivilege();
  virtual ~E_EncyclopediaBeastprivilege();

  E_EncyclopediaBeastprivilege(const E_EncyclopediaBeastprivilege& from);

  inline E_EncyclopediaBeastprivilege& operator=(const E_EncyclopediaBeastprivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaBeastprivilege& default_instance();

  void Swap(E_EncyclopediaBeastprivilege* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaBeastprivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaBeastprivilege& from);
  void MergeFrom(const E_EncyclopediaBeastprivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_privilegetype = 1;
  inline bool has_m_privilegetype() const;
  inline void clear_m_privilegetype();
  static const int kMPrivilegetypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_privilegetype() const;
  inline void set_m_privilegetype(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_price = 3;
  inline bool has_m_price() const;
  inline void clear_m_price();
  static const int kMPriceFieldNumber = 3;
  inline ::google::protobuf::int32 m_price() const;
  inline void set_m_price(::google::protobuf::int32 value);

  // optional int64 m_expaddition = 4;
  inline bool has_m_expaddition() const;
  inline void clear_m_expaddition();
  static const int kMExpadditionFieldNumber = 4;
  inline ::google::protobuf::int64 m_expaddition() const;
  inline void set_m_expaddition(::google::protobuf::int64 value);

  // repeated .proto_ff.E_EncyclopediaBeastprivilegeAttributeDesc m_attribute = 5;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 5;
  inline const ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaBeastprivilege)
 private:
  inline void set_has_m_privilegetype();
  inline void clear_has_m_privilegetype();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_price();
  inline void clear_has_m_price();
  inline void set_has_m_expaddition();
  inline void clear_has_m_expaddition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_privilegetype_;
  ::google::protobuf::int32 m_price_;
  ::google::protobuf::int64 m_expaddition_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaBeastprivilege* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaBeastprivilege : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaBeastprivilege();
  virtual ~Sheet_EncyclopediaBeastprivilege();

  Sheet_EncyclopediaBeastprivilege(const Sheet_EncyclopediaBeastprivilege& from);

  inline Sheet_EncyclopediaBeastprivilege& operator=(const Sheet_EncyclopediaBeastprivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaBeastprivilege& default_instance();

  void Swap(Sheet_EncyclopediaBeastprivilege* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaBeastprivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaBeastprivilege& from);
  void MergeFrom(const Sheet_EncyclopediaBeastprivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaBeastprivilege E_EncyclopediaBeastprivilege_List = 1;
  inline int e_encyclopediabeastprivilege_list_size() const;
  inline void clear_e_encyclopediabeastprivilege_list();
  static const int kEEncyclopediaBeastprivilegeListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaBeastprivilege& e_encyclopediabeastprivilege_list(int index) const;
  inline ::proto_ff::E_EncyclopediaBeastprivilege* mutable_e_encyclopediabeastprivilege_list(int index);
  inline ::proto_ff::E_EncyclopediaBeastprivilege* add_e_encyclopediabeastprivilege_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilege >&
      e_encyclopediabeastprivilege_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilege >*
      mutable_e_encyclopediabeastprivilege_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaBeastprivilege)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilege > e_encyclopediabeastprivilege_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaBeastprivilege* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaBeastexp : public ::google::protobuf::Message {
 public:
  E_EncyclopediaBeastexp();
  virtual ~E_EncyclopediaBeastexp();

  E_EncyclopediaBeastexp(const E_EncyclopediaBeastexp& from);

  inline E_EncyclopediaBeastexp& operator=(const E_EncyclopediaBeastexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaBeastexp& default_instance();

  void Swap(E_EncyclopediaBeastexp* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaBeastexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaBeastexp& from);
  void MergeFrom(const E_EncyclopediaBeastexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaBeastexp)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaBeastexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaBeastexp : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaBeastexp();
  virtual ~Sheet_EncyclopediaBeastexp();

  Sheet_EncyclopediaBeastexp(const Sheet_EncyclopediaBeastexp& from);

  inline Sheet_EncyclopediaBeastexp& operator=(const Sheet_EncyclopediaBeastexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaBeastexp& default_instance();

  void Swap(Sheet_EncyclopediaBeastexp* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaBeastexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaBeastexp& from);
  void MergeFrom(const Sheet_EncyclopediaBeastexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaBeastexp E_EncyclopediaBeastexp_List = 1;
  inline int e_encyclopediabeastexp_list_size() const;
  inline void clear_e_encyclopediabeastexp_list();
  static const int kEEncyclopediaBeastexpListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaBeastexp& e_encyclopediabeastexp_list(int index) const;
  inline ::proto_ff::E_EncyclopediaBeastexp* mutable_e_encyclopediabeastexp_list(int index);
  inline ::proto_ff::E_EncyclopediaBeastexp* add_e_encyclopediabeastexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexp >&
      e_encyclopediabeastexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexp >*
      mutable_e_encyclopediabeastexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaBeastexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexp > e_encyclopediabeastexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaBeastexp* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaEmployLviattributeDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaEmployLviattributeDesc();
  virtual ~E_EncyclopediaEmployLviattributeDesc();

  E_EncyclopediaEmployLviattributeDesc(const E_EncyclopediaEmployLviattributeDesc& from);

  inline E_EncyclopediaEmployLviattributeDesc& operator=(const E_EncyclopediaEmployLviattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaEmployLviattributeDesc& default_instance();

  void Swap(E_EncyclopediaEmployLviattributeDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaEmployLviattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaEmployLviattributeDesc& from);
  void MergeFrom(const E_EncyclopediaEmployLviattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int64 m_value() const;
  inline void set_m_value(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaEmployLviattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaEmployLviattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaEmploy : public ::google::protobuf::Message {
 public:
  E_EncyclopediaEmploy();
  virtual ~E_EncyclopediaEmploy();

  E_EncyclopediaEmploy(const E_EncyclopediaEmploy& from);

  inline E_EncyclopediaEmploy& operator=(const E_EncyclopediaEmploy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaEmploy& default_instance();

  void Swap(E_EncyclopediaEmploy* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaEmploy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaEmploy& from);
  void MergeFrom(const E_EncyclopediaEmploy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_employid = 1;
  inline bool has_m_employid() const;
  inline void clear_m_employid();
  static const int kMEmployidFieldNumber = 1;
  inline ::google::protobuf::int64 m_employid() const;
  inline void set_m_employid(::google::protobuf::int64 value);

  // optional int64 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int64 m_type() const;
  inline void set_m_type(::google::protobuf::int64 value);

  // optional int64 m_itemid = 3;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 3;
  inline ::google::protobuf::int64 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int64 value);

  // optional string m_employname = 4;
  inline bool has_m_employname() const;
  inline void clear_m_employname();
  static const int kMEmploynameFieldNumber = 4;
  inline const ::std::string& m_employname() const;
  inline void set_m_employname(const ::std::string& value);
  inline void set_m_employname(const char* value);
  inline void set_m_employname(const char* value, size_t size);
  inline ::std::string* mutable_m_employname();
  inline ::std::string* release_m_employname();
  inline void set_allocated_m_employname(::std::string* m_employname);

  // optional int32 m_employquality = 5;
  inline bool has_m_employquality() const;
  inline void clear_m_employquality();
  static const int kMEmployqualityFieldNumber = 5;
  inline ::google::protobuf::int32 m_employquality() const;
  inline void set_m_employquality(::google::protobuf::int32 value);

  // optional int32 m_employtype = 6;
  inline bool has_m_employtype() const;
  inline void clear_m_employtype();
  static const int kMEmploytypeFieldNumber = 6;
  inline ::google::protobuf::int32 m_employtype() const;
  inline void set_m_employtype(::google::protobuf::int32 value);

  // optional string m_employtype_name = 7;
  inline bool has_m_employtype_name() const;
  inline void clear_m_employtype_name();
  static const int kMEmploytypeNameFieldNumber = 7;
  inline const ::std::string& m_employtype_name() const;
  inline void set_m_employtype_name(const ::std::string& value);
  inline void set_m_employtype_name(const char* value);
  inline void set_m_employtype_name(const char* value, size_t size);
  inline ::std::string* mutable_m_employtype_name();
  inline ::std::string* release_m_employtype_name();
  inline void set_allocated_m_employtype_name(::std::string* m_employtype_name);

  // optional int32 m_employz = 8;
  inline bool has_m_employz() const;
  inline void clear_m_employz();
  static const int kMEmployzFieldNumber = 8;
  inline ::google::protobuf::int32 m_employz() const;
  inline void set_m_employz(::google::protobuf::int32 value);

  // optional string m_employzname = 9;
  inline bool has_m_employzname() const;
  inline void clear_m_employzname();
  static const int kMEmployznameFieldNumber = 9;
  inline const ::std::string& m_employzname() const;
  inline void set_m_employzname(const ::std::string& value);
  inline void set_m_employzname(const char* value);
  inline void set_m_employzname(const char* value, size_t size);
  inline ::std::string* mutable_m_employzname();
  inline ::std::string* release_m_employzname();
  inline void set_allocated_m_employzname(::std::string* m_employzname);

  // repeated .proto_ff.E_EncyclopediaEmployLviattributeDesc m_lviattribute = 10;
  inline int m_lviattribute_size() const;
  inline void clear_m_lviattribute();
  static const int kMLviattributeFieldNumber = 10;
  inline const ::proto_ff::E_EncyclopediaEmployLviattributeDesc& m_lviattribute(int index) const;
  inline ::proto_ff::E_EncyclopediaEmployLviattributeDesc* mutable_m_lviattribute(int index);
  inline ::proto_ff::E_EncyclopediaEmployLviattributeDesc* add_m_lviattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmployLviattributeDesc >&
      m_lviattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmployLviattributeDesc >*
      mutable_m_lviattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaEmploy)
 private:
  inline void set_has_m_employid();
  inline void clear_has_m_employid();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_employname();
  inline void clear_has_m_employname();
  inline void set_has_m_employquality();
  inline void clear_has_m_employquality();
  inline void set_has_m_employtype();
  inline void clear_has_m_employtype();
  inline void set_has_m_employtype_name();
  inline void clear_has_m_employtype_name();
  inline void set_has_m_employz();
  inline void clear_has_m_employz();
  inline void set_has_m_employzname();
  inline void clear_has_m_employzname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_employid_;
  ::google::protobuf::int64 m_type_;
  ::google::protobuf::int64 m_itemid_;
  ::std::string* m_employname_;
  ::google::protobuf::int32 m_employquality_;
  ::google::protobuf::int32 m_employtype_;
  ::std::string* m_employtype_name_;
  ::std::string* m_employzname_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmployLviattributeDesc > m_lviattribute_;
  ::google::protobuf::int32 m_employz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaEmploy* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaEmploy : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaEmploy();
  virtual ~Sheet_EncyclopediaEmploy();

  Sheet_EncyclopediaEmploy(const Sheet_EncyclopediaEmploy& from);

  inline Sheet_EncyclopediaEmploy& operator=(const Sheet_EncyclopediaEmploy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaEmploy& default_instance();

  void Swap(Sheet_EncyclopediaEmploy* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaEmploy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaEmploy& from);
  void MergeFrom(const Sheet_EncyclopediaEmploy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaEmploy E_EncyclopediaEmploy_List = 1;
  inline int e_encyclopediaemploy_list_size() const;
  inline void clear_e_encyclopediaemploy_list();
  static const int kEEncyclopediaEmployListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaEmploy& e_encyclopediaemploy_list(int index) const;
  inline ::proto_ff::E_EncyclopediaEmploy* mutable_e_encyclopediaemploy_list(int index);
  inline ::proto_ff::E_EncyclopediaEmploy* add_e_encyclopediaemploy_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmploy >&
      e_encyclopediaemploy_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmploy >*
      mutable_e_encyclopediaemploy_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaEmploy)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmploy > e_encyclopediaemploy_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaEmploy* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaTableLviattributeDesc : public ::google::protobuf::Message {
 public:
  E_EncyclopediaTableLviattributeDesc();
  virtual ~E_EncyclopediaTableLviattributeDesc();

  E_EncyclopediaTableLviattributeDesc(const E_EncyclopediaTableLviattributeDesc& from);

  inline E_EncyclopediaTableLviattributeDesc& operator=(const E_EncyclopediaTableLviattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaTableLviattributeDesc& default_instance();

  void Swap(E_EncyclopediaTableLviattributeDesc* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaTableLviattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaTableLviattributeDesc& from);
  void MergeFrom(const E_EncyclopediaTableLviattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int64 m_value() const;
  inline void set_m_value(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaTableLviattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaTableLviattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EncyclopediaTable : public ::google::protobuf::Message {
 public:
  E_EncyclopediaTable();
  virtual ~E_EncyclopediaTable();

  E_EncyclopediaTable(const E_EncyclopediaTable& from);

  inline E_EncyclopediaTable& operator=(const E_EncyclopediaTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EncyclopediaTable& default_instance();

  void Swap(E_EncyclopediaTable* other);

  // implements Message ----------------------------------------------

  E_EncyclopediaTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EncyclopediaTable& from);
  void MergeFrom(const E_EncyclopediaTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int64 m_tableid = 2;
  inline bool has_m_tableid() const;
  inline void clear_m_tableid();
  static const int kMTableidFieldNumber = 2;
  inline ::google::protobuf::int64 m_tableid() const;
  inline void set_m_tableid(::google::protobuf::int64 value);

  // optional string m_tablename = 3;
  inline bool has_m_tablename() const;
  inline void clear_m_tablename();
  static const int kMTablenameFieldNumber = 3;
  inline const ::std::string& m_tablename() const;
  inline void set_m_tablename(const ::std::string& value);
  inline void set_m_tablename(const char* value);
  inline void set_m_tablename(const char* value, size_t size);
  inline ::std::string* mutable_m_tablename();
  inline ::std::string* release_m_tablename();
  inline void set_allocated_m_tablename(::std::string* m_tablename);

  // repeated .proto_ff.E_EncyclopediaTableLviattributeDesc m_lviattribute = 4;
  inline int m_lviattribute_size() const;
  inline void clear_m_lviattribute();
  static const int kMLviattributeFieldNumber = 4;
  inline const ::proto_ff::E_EncyclopediaTableLviattributeDesc& m_lviattribute(int index) const;
  inline ::proto_ff::E_EncyclopediaTableLviattributeDesc* mutable_m_lviattribute(int index);
  inline ::proto_ff::E_EncyclopediaTableLviattributeDesc* add_m_lviattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTableLviattributeDesc >&
      m_lviattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTableLviattributeDesc >*
      mutable_m_lviattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EncyclopediaTable)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_tableid();
  inline void clear_has_m_tableid();
  inline void set_has_m_tablename();
  inline void clear_has_m_tablename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int64 m_tableid_;
  ::std::string* m_tablename_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTableLviattributeDesc > m_lviattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static E_EncyclopediaTable* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EncyclopediaTable : public ::google::protobuf::Message {
 public:
  Sheet_EncyclopediaTable();
  virtual ~Sheet_EncyclopediaTable();

  Sheet_EncyclopediaTable(const Sheet_EncyclopediaTable& from);

  inline Sheet_EncyclopediaTable& operator=(const Sheet_EncyclopediaTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EncyclopediaTable& default_instance();

  void Swap(Sheet_EncyclopediaTable* other);

  // implements Message ----------------------------------------------

  Sheet_EncyclopediaTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EncyclopediaTable& from);
  void MergeFrom(const Sheet_EncyclopediaTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EncyclopediaTable E_EncyclopediaTable_List = 1;
  inline int e_encyclopediatable_list_size() const;
  inline void clear_e_encyclopediatable_list();
  static const int kEEncyclopediaTableListFieldNumber = 1;
  inline const ::proto_ff::E_EncyclopediaTable& e_encyclopediatable_list(int index) const;
  inline ::proto_ff::E_EncyclopediaTable* mutable_e_encyclopediatable_list(int index);
  inline ::proto_ff::E_EncyclopediaTable* add_e_encyclopediatable_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTable >&
      e_encyclopediatable_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTable >*
      mutable_e_encyclopediatable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EncyclopediaTable)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTable > e_encyclopediatable_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_AssignDesc_E_5fEncyclopedia_2eproto();
  friend void protobuf_ShutdownFile_E_5fEncyclopedia_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EncyclopediaTable* default_instance_;
};
// ===================================================================


// ===================================================================

// E_EncyclopediaHandbookLviattributeDesc

// optional int64 m_value = 1;
inline bool E_EncyclopediaHandbookLviattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbookLviattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbookLviattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbookLviattributeDesc::clear_m_value() {
  m_value_ = GOOGLE_LONGLONG(0);
  clear_has_m_value();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbookLviattributeDesc::m_value() const {
  return m_value_;
}
inline void E_EncyclopediaHandbookLviattributeDesc::set_m_value(::google::protobuf::int64 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EncyclopediaHandbookLviattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaHandbookLviattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaHandbookLviattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaHandbookLviattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookLviattributeDesc::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaHandbookLviattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbookStariattributeDesc

// optional int64 m_value = 1;
inline bool E_EncyclopediaHandbookStariattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbookStariattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbookStariattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbookStariattributeDesc::clear_m_value() {
  m_value_ = GOOGLE_LONGLONG(0);
  clear_has_m_value();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbookStariattributeDesc::m_value() const {
  return m_value_;
}
inline void E_EncyclopediaHandbookStariattributeDesc::set_m_value(::google::protobuf::int64 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EncyclopediaHandbookStariattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaHandbookStariattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaHandbookStariattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaHandbookStariattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookStariattributeDesc::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaHandbookStariattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbook

// optional int64 m_handbookid = 1;
inline bool E_EncyclopediaHandbook::has_m_handbookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handbookid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handbookid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbook::clear_m_handbookid() {
  m_handbookid_ = GOOGLE_LONGLONG(0);
  clear_has_m_handbookid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbook::m_handbookid() const {
  return m_handbookid_;
}
inline void E_EncyclopediaHandbook::set_m_handbookid(::google::protobuf::int64 value) {
  set_has_m_handbookid();
  m_handbookid_ = value;
}

// optional int64 m_itemid = 2;
inline bool E_EncyclopediaHandbook::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaHandbook::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaHandbook::clear_m_itemid() {
  m_itemid_ = GOOGLE_LONGLONG(0);
  clear_has_m_itemid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbook::m_itemid() const {
  return m_itemid_;
}
inline void E_EncyclopediaHandbook::set_m_itemid(::google::protobuf::int64 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional string m_handbookname = 3;
inline bool E_EncyclopediaHandbook::has_m_handbookname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handbookname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handbookname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaHandbook::clear_m_handbookname() {
  if (m_handbookname_ != &::google::protobuf::internal::kEmptyString) {
    m_handbookname_->clear();
  }
  clear_has_m_handbookname();
}
inline const ::std::string& E_EncyclopediaHandbook::m_handbookname() const {
  return *m_handbookname_;
}
inline void E_EncyclopediaHandbook::set_m_handbookname(const ::std::string& value) {
  set_has_m_handbookname();
  if (m_handbookname_ == &::google::protobuf::internal::kEmptyString) {
    m_handbookname_ = new ::std::string;
  }
  m_handbookname_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_handbookname(const char* value) {
  set_has_m_handbookname();
  if (m_handbookname_ == &::google::protobuf::internal::kEmptyString) {
    m_handbookname_ = new ::std::string;
  }
  m_handbookname_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_handbookname(const char* value, size_t size) {
  set_has_m_handbookname();
  if (m_handbookname_ == &::google::protobuf::internal::kEmptyString) {
    m_handbookname_ = new ::std::string;
  }
  m_handbookname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaHandbook::mutable_m_handbookname() {
  set_has_m_handbookname();
  if (m_handbookname_ == &::google::protobuf::internal::kEmptyString) {
    m_handbookname_ = new ::std::string;
  }
  return m_handbookname_;
}
inline ::std::string* E_EncyclopediaHandbook::release_m_handbookname() {
  clear_has_m_handbookname();
  if (m_handbookname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_handbookname_;
    m_handbookname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaHandbook::set_allocated_m_handbookname(::std::string* m_handbookname) {
  if (m_handbookname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_handbookname_;
  }
  if (m_handbookname) {
    set_has_m_handbookname();
    m_handbookname_ = m_handbookname;
  } else {
    clear_has_m_handbookname();
    m_handbookname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_handbookquality = 4;
inline bool E_EncyclopediaHandbook::has_m_handbookquality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handbookquality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handbookquality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EncyclopediaHandbook::clear_m_handbookquality() {
  m_handbookquality_ = 0;
  clear_has_m_handbookquality();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbook::m_handbookquality() const {
  return m_handbookquality_;
}
inline void E_EncyclopediaHandbook::set_m_handbookquality(::google::protobuf::int32 value) {
  set_has_m_handbookquality();
  m_handbookquality_ = value;
}

// optional int32 m_handbooktype = 5;
inline bool E_EncyclopediaHandbook::has_m_handbooktype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handbooktype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handbooktype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EncyclopediaHandbook::clear_m_handbooktype() {
  m_handbooktype_ = 0;
  clear_has_m_handbooktype();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbook::m_handbooktype() const {
  return m_handbooktype_;
}
inline void E_EncyclopediaHandbook::set_m_handbooktype(::google::protobuf::int32 value) {
  set_has_m_handbooktype();
  m_handbooktype_ = value;
}

// optional string m_handbooktype_name = 6;
inline bool E_EncyclopediaHandbook::has_m_handbooktype_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handbooktype_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handbooktype_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EncyclopediaHandbook::clear_m_handbooktype_name() {
  if (m_handbooktype_name_ != &::google::protobuf::internal::kEmptyString) {
    m_handbooktype_name_->clear();
  }
  clear_has_m_handbooktype_name();
}
inline const ::std::string& E_EncyclopediaHandbook::m_handbooktype_name() const {
  return *m_handbooktype_name_;
}
inline void E_EncyclopediaHandbook::set_m_handbooktype_name(const ::std::string& value) {
  set_has_m_handbooktype_name();
  if (m_handbooktype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_handbooktype_name_ = new ::std::string;
  }
  m_handbooktype_name_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_handbooktype_name(const char* value) {
  set_has_m_handbooktype_name();
  if (m_handbooktype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_handbooktype_name_ = new ::std::string;
  }
  m_handbooktype_name_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_handbooktype_name(const char* value, size_t size) {
  set_has_m_handbooktype_name();
  if (m_handbooktype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_handbooktype_name_ = new ::std::string;
  }
  m_handbooktype_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaHandbook::mutable_m_handbooktype_name() {
  set_has_m_handbooktype_name();
  if (m_handbooktype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_handbooktype_name_ = new ::std::string;
  }
  return m_handbooktype_name_;
}
inline ::std::string* E_EncyclopediaHandbook::release_m_handbooktype_name() {
  clear_has_m_handbooktype_name();
  if (m_handbooktype_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_handbooktype_name_;
    m_handbooktype_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaHandbook::set_allocated_m_handbooktype_name(::std::string* m_handbooktype_name) {
  if (m_handbooktype_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_handbooktype_name_;
  }
  if (m_handbooktype_name) {
    set_has_m_handbooktype_name();
    m_handbooktype_name_ = m_handbooktype_name;
  } else {
    clear_has_m_handbooktype_name();
    m_handbooktype_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_handz = 7;
inline bool E_EncyclopediaHandbook::has_m_handz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EncyclopediaHandbook::clear_m_handz() {
  m_handz_ = 0;
  clear_has_m_handz();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbook::m_handz() const {
  return m_handz_;
}
inline void E_EncyclopediaHandbook::set_m_handz(::google::protobuf::int32 value) {
  set_has_m_handz();
  m_handz_ = value;
}

// optional string m_handzname = 8;
inline bool E_EncyclopediaHandbook::has_m_handzname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handzname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handzname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EncyclopediaHandbook::clear_m_handzname() {
  if (m_handzname_ != &::google::protobuf::internal::kEmptyString) {
    m_handzname_->clear();
  }
  clear_has_m_handzname();
}
inline const ::std::string& E_EncyclopediaHandbook::m_handzname() const {
  return *m_handzname_;
}
inline void E_EncyclopediaHandbook::set_m_handzname(const ::std::string& value) {
  set_has_m_handzname();
  if (m_handzname_ == &::google::protobuf::internal::kEmptyString) {
    m_handzname_ = new ::std::string;
  }
  m_handzname_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_handzname(const char* value) {
  set_has_m_handzname();
  if (m_handzname_ == &::google::protobuf::internal::kEmptyString) {
    m_handzname_ = new ::std::string;
  }
  m_handzname_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_handzname(const char* value, size_t size) {
  set_has_m_handzname();
  if (m_handzname_ == &::google::protobuf::internal::kEmptyString) {
    m_handzname_ = new ::std::string;
  }
  m_handzname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaHandbook::mutable_m_handzname() {
  set_has_m_handzname();
  if (m_handzname_ == &::google::protobuf::internal::kEmptyString) {
    m_handzname_ = new ::std::string;
  }
  return m_handzname_;
}
inline ::std::string* E_EncyclopediaHandbook::release_m_handzname() {
  clear_has_m_handzname();
  if (m_handzname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_handzname_;
    m_handzname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaHandbook::set_allocated_m_handzname(::std::string* m_handzname) {
  if (m_handzname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_handzname_;
  }
  if (m_handzname) {
    set_has_m_handzname();
    m_handzname_ = m_handzname;
  } else {
    clear_has_m_handzname();
    m_handzname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_handbooklv = 9;
inline bool E_EncyclopediaHandbook::has_m_handbooklv() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_handbooklv() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EncyclopediaHandbook::clear_has_m_handbooklv() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EncyclopediaHandbook::clear_m_handbooklv() {
  m_handbooklv_ = 0;
  clear_has_m_handbooklv();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbook::m_handbooklv() const {
  return m_handbooklv_;
}
inline void E_EncyclopediaHandbook::set_m_handbooklv(::google::protobuf::int32 value) {
  set_has_m_handbooklv();
  m_handbooklv_ = value;
}

// optional int64 m_lvid = 10;
inline bool E_EncyclopediaHandbook::has_m_lvid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_lvid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_EncyclopediaHandbook::clear_has_m_lvid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_EncyclopediaHandbook::clear_m_lvid() {
  m_lvid_ = GOOGLE_LONGLONG(0);
  clear_has_m_lvid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbook::m_lvid() const {
  return m_lvid_;
}
inline void E_EncyclopediaHandbook::set_m_lvid(::google::protobuf::int64 value) {
  set_has_m_lvid();
  m_lvid_ = value;
}

// optional string m_lvnum = 11;
inline bool E_EncyclopediaHandbook::has_m_lvnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_lvnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_EncyclopediaHandbook::clear_has_m_lvnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_EncyclopediaHandbook::clear_m_lvnum() {
  if (m_lvnum_ != &::google::protobuf::internal::kEmptyString) {
    m_lvnum_->clear();
  }
  clear_has_m_lvnum();
}
inline const ::std::string& E_EncyclopediaHandbook::m_lvnum() const {
  return *m_lvnum_;
}
inline void E_EncyclopediaHandbook::set_m_lvnum(const ::std::string& value) {
  set_has_m_lvnum();
  if (m_lvnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lvnum_ = new ::std::string;
  }
  m_lvnum_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_lvnum(const char* value) {
  set_has_m_lvnum();
  if (m_lvnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lvnum_ = new ::std::string;
  }
  m_lvnum_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_lvnum(const char* value, size_t size) {
  set_has_m_lvnum();
  if (m_lvnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lvnum_ = new ::std::string;
  }
  m_lvnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaHandbook::mutable_m_lvnum() {
  set_has_m_lvnum();
  if (m_lvnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lvnum_ = new ::std::string;
  }
  return m_lvnum_;
}
inline ::std::string* E_EncyclopediaHandbook::release_m_lvnum() {
  clear_has_m_lvnum();
  if (m_lvnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_lvnum_;
    m_lvnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaHandbook::set_allocated_m_lvnum(::std::string* m_lvnum) {
  if (m_lvnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lvnum_;
  }
  if (m_lvnum) {
    set_has_m_lvnum();
    m_lvnum_ = m_lvnum;
  } else {
    clear_has_m_lvnum();
    m_lvnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 m_starid = 12;
inline bool E_EncyclopediaHandbook::has_m_starid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_starid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_EncyclopediaHandbook::clear_has_m_starid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_EncyclopediaHandbook::clear_m_starid() {
  m_starid_ = GOOGLE_LONGLONG(0);
  clear_has_m_starid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbook::m_starid() const {
  return m_starid_;
}
inline void E_EncyclopediaHandbook::set_m_starid(::google::protobuf::int64 value) {
  set_has_m_starid();
  m_starid_ = value;
}

// optional string m_starnum = 13;
inline bool E_EncyclopediaHandbook::has_m_starnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_EncyclopediaHandbook::set_has_m_starnum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_EncyclopediaHandbook::clear_has_m_starnum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_EncyclopediaHandbook::clear_m_starnum() {
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    m_starnum_->clear();
  }
  clear_has_m_starnum();
}
inline const ::std::string& E_EncyclopediaHandbook::m_starnum() const {
  return *m_starnum_;
}
inline void E_EncyclopediaHandbook::set_m_starnum(const ::std::string& value) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_starnum(const char* value) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(value);
}
inline void E_EncyclopediaHandbook::set_m_starnum(const char* value, size_t size) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaHandbook::mutable_m_starnum() {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  return m_starnum_;
}
inline ::std::string* E_EncyclopediaHandbook::release_m_starnum() {
  clear_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_starnum_;
    m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaHandbook::set_allocated_m_starnum(::std::string* m_starnum) {
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starnum_;
  }
  if (m_starnum) {
    set_has_m_starnum();
    m_starnum_ = m_starnum;
  } else {
    clear_has_m_starnum();
    m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EncyclopediaHandbookLviattributeDesc m_lviattribute = 14;
inline int E_EncyclopediaHandbook::m_lviattribute_size() const {
  return m_lviattribute_.size();
}
inline void E_EncyclopediaHandbook::clear_m_lviattribute() {
  m_lviattribute_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbookLviattributeDesc& E_EncyclopediaHandbook::m_lviattribute(int index) const {
  return m_lviattribute_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbookLviattributeDesc* E_EncyclopediaHandbook::mutable_m_lviattribute(int index) {
  return m_lviattribute_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbookLviattributeDesc* E_EncyclopediaHandbook::add_m_lviattribute() {
  return m_lviattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookLviattributeDesc >&
E_EncyclopediaHandbook::m_lviattribute() const {
  return m_lviattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookLviattributeDesc >*
E_EncyclopediaHandbook::mutable_m_lviattribute() {
  return &m_lviattribute_;
}

// repeated int32 m_awakeskill = 15;
inline int E_EncyclopediaHandbook::m_awakeskill_size() const {
  return m_awakeskill_.size();
}
inline void E_EncyclopediaHandbook::clear_m_awakeskill() {
  m_awakeskill_.Clear();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbook::m_awakeskill(int index) const {
  return m_awakeskill_.Get(index);
}
inline void E_EncyclopediaHandbook::set_m_awakeskill(int index, ::google::protobuf::int32 value) {
  m_awakeskill_.Set(index, value);
}
inline void E_EncyclopediaHandbook::add_m_awakeskill(::google::protobuf::int32 value) {
  m_awakeskill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EncyclopediaHandbook::m_awakeskill() const {
  return m_awakeskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EncyclopediaHandbook::mutable_m_awakeskill() {
  return &m_awakeskill_;
}

// repeated .proto_ff.E_EncyclopediaHandbookStariattributeDesc m_stariattribute = 16;
inline int E_EncyclopediaHandbook::m_stariattribute_size() const {
  return m_stariattribute_.size();
}
inline void E_EncyclopediaHandbook::clear_m_stariattribute() {
  m_stariattribute_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbookStariattributeDesc& E_EncyclopediaHandbook::m_stariattribute(int index) const {
  return m_stariattribute_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbookStariattributeDesc* E_EncyclopediaHandbook::mutable_m_stariattribute(int index) {
  return m_stariattribute_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbookStariattributeDesc* E_EncyclopediaHandbook::add_m_stariattribute() {
  return m_stariattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookStariattributeDesc >&
E_EncyclopediaHandbook::m_stariattribute() const {
  return m_stariattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookStariattributeDesc >*
E_EncyclopediaHandbook::mutable_m_stariattribute() {
  return &m_stariattribute_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaHandbook

// repeated .proto_ff.E_EncyclopediaHandbook E_EncyclopediaHandbook_List = 1;
inline int Sheet_EncyclopediaHandbook::e_encyclopediahandbook_list_size() const {
  return e_encyclopediahandbook_list_.size();
}
inline void Sheet_EncyclopediaHandbook::clear_e_encyclopediahandbook_list() {
  e_encyclopediahandbook_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbook& Sheet_EncyclopediaHandbook::e_encyclopediahandbook_list(int index) const {
  return e_encyclopediahandbook_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbook* Sheet_EncyclopediaHandbook::mutable_e_encyclopediahandbook_list(int index) {
  return e_encyclopediahandbook_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbook* Sheet_EncyclopediaHandbook::add_e_encyclopediahandbook_list() {
  return e_encyclopediahandbook_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbook >&
Sheet_EncyclopediaHandbook::e_encyclopediahandbook_list() const {
  return e_encyclopediahandbook_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbook >*
Sheet_EncyclopediaHandbook::mutable_e_encyclopediahandbook_list() {
  return &e_encyclopediahandbook_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbookfateAttributeDesc

// optional int64 m_value = 1;
inline bool E_EncyclopediaHandbookfateAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::clear_m_value() {
  m_value_ = GOOGLE_LONGLONG(0);
  clear_has_m_value();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbookfateAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::set_m_value(::google::protobuf::int64 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EncyclopediaHandbookfateAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookfateAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaHandbookfateAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbookfate

// optional int64 m_fateid = 1;
inline bool E_EncyclopediaHandbookfate::has_m_fateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbookfate::set_has_m_fateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbookfate::clear_has_m_fateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbookfate::clear_m_fateid() {
  m_fateid_ = GOOGLE_LONGLONG(0);
  clear_has_m_fateid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbookfate::m_fateid() const {
  return m_fateid_;
}
inline void E_EncyclopediaHandbookfate::set_m_fateid(::google::protobuf::int64 value) {
  set_has_m_fateid();
  m_fateid_ = value;
}

// optional string m_fatename = 2;
inline bool E_EncyclopediaHandbookfate::has_m_fatename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaHandbookfate::set_has_m_fatename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaHandbookfate::clear_has_m_fatename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaHandbookfate::clear_m_fatename() {
  if (m_fatename_ != &::google::protobuf::internal::kEmptyString) {
    m_fatename_->clear();
  }
  clear_has_m_fatename();
}
inline const ::std::string& E_EncyclopediaHandbookfate::m_fatename() const {
  return *m_fatename_;
}
inline void E_EncyclopediaHandbookfate::set_m_fatename(const ::std::string& value) {
  set_has_m_fatename();
  if (m_fatename_ == &::google::protobuf::internal::kEmptyString) {
    m_fatename_ = new ::std::string;
  }
  m_fatename_->assign(value);
}
inline void E_EncyclopediaHandbookfate::set_m_fatename(const char* value) {
  set_has_m_fatename();
  if (m_fatename_ == &::google::protobuf::internal::kEmptyString) {
    m_fatename_ = new ::std::string;
  }
  m_fatename_->assign(value);
}
inline void E_EncyclopediaHandbookfate::set_m_fatename(const char* value, size_t size) {
  set_has_m_fatename();
  if (m_fatename_ == &::google::protobuf::internal::kEmptyString) {
    m_fatename_ = new ::std::string;
  }
  m_fatename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaHandbookfate::mutable_m_fatename() {
  set_has_m_fatename();
  if (m_fatename_ == &::google::protobuf::internal::kEmptyString) {
    m_fatename_ = new ::std::string;
  }
  return m_fatename_;
}
inline ::std::string* E_EncyclopediaHandbookfate::release_m_fatename() {
  clear_has_m_fatename();
  if (m_fatename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_fatename_;
    m_fatename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaHandbookfate::set_allocated_m_fatename(::std::string* m_fatename) {
  if (m_fatename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fatename_;
  }
  if (m_fatename) {
    set_has_m_fatename();
    m_fatename_ = m_fatename;
  } else {
    clear_has_m_fatename();
    m_fatename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_fatequality = 3;
inline bool E_EncyclopediaHandbookfate::has_m_fatequality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaHandbookfate::set_has_m_fatequality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaHandbookfate::clear_has_m_fatequality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaHandbookfate::clear_m_fatequality() {
  m_fatequality_ = 0;
  clear_has_m_fatequality();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookfate::m_fatequality() const {
  return m_fatequality_;
}
inline void E_EncyclopediaHandbookfate::set_m_fatequality(::google::protobuf::int32 value) {
  set_has_m_fatequality();
  m_fatequality_ = value;
}

// repeated int64 m_fatehand = 4;
inline int E_EncyclopediaHandbookfate::m_fatehand_size() const {
  return m_fatehand_.size();
}
inline void E_EncyclopediaHandbookfate::clear_m_fatehand() {
  m_fatehand_.Clear();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbookfate::m_fatehand(int index) const {
  return m_fatehand_.Get(index);
}
inline void E_EncyclopediaHandbookfate::set_m_fatehand(int index, ::google::protobuf::int64 value) {
  m_fatehand_.Set(index, value);
}
inline void E_EncyclopediaHandbookfate::add_m_fatehand(::google::protobuf::int64 value) {
  m_fatehand_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
E_EncyclopediaHandbookfate::m_fatehand() const {
  return m_fatehand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
E_EncyclopediaHandbookfate::mutable_m_fatehand() {
  return &m_fatehand_;
}

// repeated .proto_ff.E_EncyclopediaHandbookfateAttributeDesc m_attribute = 5;
inline int E_EncyclopediaHandbookfate::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EncyclopediaHandbookfate::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc& E_EncyclopediaHandbookfate::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc* E_EncyclopediaHandbookfate::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc* E_EncyclopediaHandbookfate::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc >&
E_EncyclopediaHandbookfate::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfateAttributeDesc >*
E_EncyclopediaHandbookfate::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaHandbookfate

// repeated .proto_ff.E_EncyclopediaHandbookfate E_EncyclopediaHandbookfate_List = 1;
inline int Sheet_EncyclopediaHandbookfate::e_encyclopediahandbookfate_list_size() const {
  return e_encyclopediahandbookfate_list_.size();
}
inline void Sheet_EncyclopediaHandbookfate::clear_e_encyclopediahandbookfate_list() {
  e_encyclopediahandbookfate_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbookfate& Sheet_EncyclopediaHandbookfate::e_encyclopediahandbookfate_list(int index) const {
  return e_encyclopediahandbookfate_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbookfate* Sheet_EncyclopediaHandbookfate::mutable_e_encyclopediahandbookfate_list(int index) {
  return e_encyclopediahandbookfate_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbookfate* Sheet_EncyclopediaHandbookfate::add_e_encyclopediahandbookfate_list() {
  return e_encyclopediahandbookfate_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfate >&
Sheet_EncyclopediaHandbookfate::e_encyclopediahandbookfate_list() const {
  return e_encyclopediahandbookfate_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookfate >*
Sheet_EncyclopediaHandbookfate::mutable_e_encyclopediahandbookfate_list() {
  return &e_encyclopediahandbookfate_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbookresolve

// optional int32 m_handbookquality = 1;
inline bool E_EncyclopediaHandbookresolve::has_m_handbookquality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbookresolve::set_has_m_handbookquality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbookresolve::clear_has_m_handbookquality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbookresolve::clear_m_handbookquality() {
  m_handbookquality_ = 0;
  clear_has_m_handbookquality();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookresolve::m_handbookquality() const {
  return m_handbookquality_;
}
inline void E_EncyclopediaHandbookresolve::set_m_handbookquality(::google::protobuf::int32 value) {
  set_has_m_handbookquality();
  m_handbookquality_ = value;
}

// optional int32 m_resolveitem = 2;
inline bool E_EncyclopediaHandbookresolve::has_m_resolveitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaHandbookresolve::set_has_m_resolveitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaHandbookresolve::clear_has_m_resolveitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaHandbookresolve::clear_m_resolveitem() {
  m_resolveitem_ = 0;
  clear_has_m_resolveitem();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookresolve::m_resolveitem() const {
  return m_resolveitem_;
}
inline void E_EncyclopediaHandbookresolve::set_m_resolveitem(::google::protobuf::int32 value) {
  set_has_m_resolveitem();
  m_resolveitem_ = value;
}

// optional int32 m_resolvenum = 3;
inline bool E_EncyclopediaHandbookresolve::has_m_resolvenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaHandbookresolve::set_has_m_resolvenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaHandbookresolve::clear_has_m_resolvenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaHandbookresolve::clear_m_resolvenum() {
  m_resolvenum_ = 0;
  clear_has_m_resolvenum();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookresolve::m_resolvenum() const {
  return m_resolvenum_;
}
inline void E_EncyclopediaHandbookresolve::set_m_resolvenum(::google::protobuf::int32 value) {
  set_has_m_resolvenum();
  m_resolvenum_ = value;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaHandbookresolve

// repeated .proto_ff.E_EncyclopediaHandbookresolve E_EncyclopediaHandbookresolve_List = 1;
inline int Sheet_EncyclopediaHandbookresolve::e_encyclopediahandbookresolve_list_size() const {
  return e_encyclopediahandbookresolve_list_.size();
}
inline void Sheet_EncyclopediaHandbookresolve::clear_e_encyclopediahandbookresolve_list() {
  e_encyclopediahandbookresolve_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbookresolve& Sheet_EncyclopediaHandbookresolve::e_encyclopediahandbookresolve_list(int index) const {
  return e_encyclopediahandbookresolve_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbookresolve* Sheet_EncyclopediaHandbookresolve::mutable_e_encyclopediahandbookresolve_list(int index) {
  return e_encyclopediahandbookresolve_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbookresolve* Sheet_EncyclopediaHandbookresolve::add_e_encyclopediahandbookresolve_list() {
  return e_encyclopediahandbookresolve_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookresolve >&
Sheet_EncyclopediaHandbookresolve::e_encyclopediahandbookresolve_list() const {
  return e_encyclopediahandbookresolve_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookresolve >*
Sheet_EncyclopediaHandbookresolve::mutable_e_encyclopediahandbookresolve_list() {
  return &e_encyclopediahandbookresolve_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbooklv_attr

// optional int64 m_attid = 1;
inline bool E_EncyclopediaHandbooklv_attr::has_m_attid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbooklv_attr::set_has_m_attid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbooklv_attr::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbooklv_attr::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbooklv_attr::m_attid() const {
  return m_attid_;
}
inline void E_EncyclopediaHandbooklv_attr::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// repeated int32 m_att = 2;
inline int E_EncyclopediaHandbooklv_attr::m_att_size() const {
  return m_att_.size();
}
inline void E_EncyclopediaHandbooklv_attr::clear_m_att() {
  m_att_.Clear();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbooklv_attr::m_att(int index) const {
  return m_att_.Get(index);
}
inline void E_EncyclopediaHandbooklv_attr::set_m_att(int index, ::google::protobuf::int32 value) {
  m_att_.Set(index, value);
}
inline void E_EncyclopediaHandbooklv_attr::add_m_att(::google::protobuf::int32 value) {
  m_att_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EncyclopediaHandbooklv_attr::m_att() const {
  return m_att_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EncyclopediaHandbooklv_attr::mutable_m_att() {
  return &m_att_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaHandbooklv_attr

// repeated .proto_ff.E_EncyclopediaHandbooklv_attr E_EncyclopediaHandbooklv_attr_List = 1;
inline int Sheet_EncyclopediaHandbooklv_attr::e_encyclopediahandbooklv_attr_list_size() const {
  return e_encyclopediahandbooklv_attr_list_.size();
}
inline void Sheet_EncyclopediaHandbooklv_attr::clear_e_encyclopediahandbooklv_attr_list() {
  e_encyclopediahandbooklv_attr_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbooklv_attr& Sheet_EncyclopediaHandbooklv_attr::e_encyclopediahandbooklv_attr_list(int index) const {
  return e_encyclopediahandbooklv_attr_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbooklv_attr* Sheet_EncyclopediaHandbooklv_attr::mutable_e_encyclopediahandbooklv_attr_list(int index) {
  return e_encyclopediahandbooklv_attr_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbooklv_attr* Sheet_EncyclopediaHandbooklv_attr::add_e_encyclopediahandbooklv_attr_list() {
  return e_encyclopediahandbooklv_attr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbooklv_attr >&
Sheet_EncyclopediaHandbooklv_attr::e_encyclopediahandbooklv_attr_list() const {
  return e_encyclopediahandbooklv_attr_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbooklv_attr >*
Sheet_EncyclopediaHandbooklv_attr::mutable_e_encyclopediahandbooklv_attr_list() {
  return &e_encyclopediahandbooklv_attr_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaHandbookstar_attr

// optional int64 m_attid = 1;
inline bool E_EncyclopediaHandbookstar_attr::has_m_attid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaHandbookstar_attr::set_has_m_attid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaHandbookstar_attr::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaHandbookstar_attr::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_EncyclopediaHandbookstar_attr::m_attid() const {
  return m_attid_;
}
inline void E_EncyclopediaHandbookstar_attr::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// repeated int32 m_att = 2;
inline int E_EncyclopediaHandbookstar_attr::m_att_size() const {
  return m_att_.size();
}
inline void E_EncyclopediaHandbookstar_attr::clear_m_att() {
  m_att_.Clear();
}
inline ::google::protobuf::int32 E_EncyclopediaHandbookstar_attr::m_att(int index) const {
  return m_att_.Get(index);
}
inline void E_EncyclopediaHandbookstar_attr::set_m_att(int index, ::google::protobuf::int32 value) {
  m_att_.Set(index, value);
}
inline void E_EncyclopediaHandbookstar_attr::add_m_att(::google::protobuf::int32 value) {
  m_att_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EncyclopediaHandbookstar_attr::m_att() const {
  return m_att_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EncyclopediaHandbookstar_attr::mutable_m_att() {
  return &m_att_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaHandbookstar_attr

// repeated .proto_ff.E_EncyclopediaHandbookstar_attr E_EncyclopediaHandbookstar_attr_List = 1;
inline int Sheet_EncyclopediaHandbookstar_attr::e_encyclopediahandbookstar_attr_list_size() const {
  return e_encyclopediahandbookstar_attr_list_.size();
}
inline void Sheet_EncyclopediaHandbookstar_attr::clear_e_encyclopediahandbookstar_attr_list() {
  e_encyclopediahandbookstar_attr_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaHandbookstar_attr& Sheet_EncyclopediaHandbookstar_attr::e_encyclopediahandbookstar_attr_list(int index) const {
  return e_encyclopediahandbookstar_attr_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaHandbookstar_attr* Sheet_EncyclopediaHandbookstar_attr::mutable_e_encyclopediahandbookstar_attr_list(int index) {
  return e_encyclopediahandbookstar_attr_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaHandbookstar_attr* Sheet_EncyclopediaHandbookstar_attr::add_e_encyclopediahandbookstar_attr_list() {
  return e_encyclopediahandbookstar_attr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookstar_attr >&
Sheet_EncyclopediaHandbookstar_attr::e_encyclopediahandbookstar_attr_list() const {
  return e_encyclopediahandbookstar_attr_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaHandbookstar_attr >*
Sheet_EncyclopediaHandbookstar_attr::mutable_e_encyclopediahandbookstar_attr_list() {
  return &e_encyclopediahandbookstar_attr_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaBeastBeastDesc

// optional int32 m_num = 1;
inline bool E_EncyclopediaBeastBeastDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaBeastBeastDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaBeastBeastDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaBeastBeastDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastBeastDesc::m_num() const {
  return m_num_;
}
inline void E_EncyclopediaBeastBeastDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_att = 2;
inline bool E_EncyclopediaBeastBeastDesc::has_m_att() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaBeastBeastDesc::set_has_m_att() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaBeastBeastDesc::clear_has_m_att() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaBeastBeastDesc::clear_m_att() {
  m_att_ = 0;
  clear_has_m_att();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastBeastDesc::m_att() const {
  return m_att_;
}
inline void E_EncyclopediaBeastBeastDesc::set_m_att(::google::protobuf::int32 value) {
  set_has_m_att();
  m_att_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaBeast

// optional int64 m_id = 1;
inline bool E_EncyclopediaBeast::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaBeast::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaBeast::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaBeast::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EncyclopediaBeast::m_id() const {
  return m_id_;
}
inline void E_EncyclopediaBeast::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_EncyclopediaBeast::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaBeast::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaBeast::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaBeast::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_EncyclopediaBeast::m_name() const {
  return *m_name_;
}
inline void E_EncyclopediaBeast::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EncyclopediaBeast::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EncyclopediaBeast::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaBeast::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_EncyclopediaBeast::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaBeast::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 m_pos = 3;
inline int E_EncyclopediaBeast::m_pos_size() const {
  return m_pos_.size();
}
inline void E_EncyclopediaBeast::clear_m_pos() {
  m_pos_.Clear();
}
inline ::google::protobuf::int32 E_EncyclopediaBeast::m_pos(int index) const {
  return m_pos_.Get(index);
}
inline void E_EncyclopediaBeast::set_m_pos(int index, ::google::protobuf::int32 value) {
  m_pos_.Set(index, value);
}
inline void E_EncyclopediaBeast::add_m_pos(::google::protobuf::int32 value) {
  m_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EncyclopediaBeast::m_pos() const {
  return m_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EncyclopediaBeast::mutable_m_pos() {
  return &m_pos_;
}

// repeated .proto_ff.E_EncyclopediaBeastBeastDesc m_beast = 4;
inline int E_EncyclopediaBeast::m_beast_size() const {
  return m_beast_.size();
}
inline void E_EncyclopediaBeast::clear_m_beast() {
  m_beast_.Clear();
}
inline const ::proto_ff::E_EncyclopediaBeastBeastDesc& E_EncyclopediaBeast::m_beast(int index) const {
  return m_beast_.Get(index);
}
inline ::proto_ff::E_EncyclopediaBeastBeastDesc* E_EncyclopediaBeast::mutable_m_beast(int index) {
  return m_beast_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaBeastBeastDesc* E_EncyclopediaBeast::add_m_beast() {
  return m_beast_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastBeastDesc >&
E_EncyclopediaBeast::m_beast() const {
  return m_beast_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastBeastDesc >*
E_EncyclopediaBeast::mutable_m_beast() {
  return &m_beast_;
}

// repeated int64 m_skill = 5;
inline int E_EncyclopediaBeast::m_skill_size() const {
  return m_skill_.size();
}
inline void E_EncyclopediaBeast::clear_m_skill() {
  m_skill_.Clear();
}
inline ::google::protobuf::int64 E_EncyclopediaBeast::m_skill(int index) const {
  return m_skill_.Get(index);
}
inline void E_EncyclopediaBeast::set_m_skill(int index, ::google::protobuf::int64 value) {
  m_skill_.Set(index, value);
}
inline void E_EncyclopediaBeast::add_m_skill(::google::protobuf::int64 value) {
  m_skill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
E_EncyclopediaBeast::m_skill() const {
  return m_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
E_EncyclopediaBeast::mutable_m_skill() {
  return &m_skill_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaBeast

// repeated .proto_ff.E_EncyclopediaBeast E_EncyclopediaBeast_List = 1;
inline int Sheet_EncyclopediaBeast::e_encyclopediabeast_list_size() const {
  return e_encyclopediabeast_list_.size();
}
inline void Sheet_EncyclopediaBeast::clear_e_encyclopediabeast_list() {
  e_encyclopediabeast_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaBeast& Sheet_EncyclopediaBeast::e_encyclopediabeast_list(int index) const {
  return e_encyclopediabeast_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaBeast* Sheet_EncyclopediaBeast::mutable_e_encyclopediabeast_list(int index) {
  return e_encyclopediabeast_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaBeast* Sheet_EncyclopediaBeast::add_e_encyclopediabeast_list() {
  return e_encyclopediabeast_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeast >&
Sheet_EncyclopediaBeast::e_encyclopediabeast_list() const {
  return e_encyclopediabeast_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeast >*
Sheet_EncyclopediaBeast::mutable_e_encyclopediabeast_list() {
  return &e_encyclopediabeast_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaEquipexpvalueBeaststarDesc

// optional int32 m_num = 1;
inline bool E_EncyclopediaEquipexpvalueBeaststarDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalueBeaststarDesc::m_num() const {
  return m_num_;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_att = 2;
inline bool E_EncyclopediaEquipexpvalueBeaststarDesc::has_m_att() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::set_has_m_att() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::clear_has_m_att() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::clear_m_att() {
  m_att_ = 0;
  clear_has_m_att();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalueBeaststarDesc::m_att() const {
  return m_att_;
}
inline void E_EncyclopediaEquipexpvalueBeaststarDesc::set_m_att(::google::protobuf::int32 value) {
  set_has_m_att();
  m_att_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaEquipexpvalueGoldstarDesc

// optional int32 m_num = 1;
inline bool E_EncyclopediaEquipexpvalueGoldstarDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalueGoldstarDesc::m_num() const {
  return m_num_;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_att = 2;
inline bool E_EncyclopediaEquipexpvalueGoldstarDesc::has_m_att() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::set_has_m_att() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::clear_has_m_att() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::clear_m_att() {
  m_att_ = 0;
  clear_has_m_att();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalueGoldstarDesc::m_att() const {
  return m_att_;
}
inline void E_EncyclopediaEquipexpvalueGoldstarDesc::set_m_att(::google::protobuf::int32 value) {
  set_has_m_att();
  m_att_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaEquipexpvalue

// optional int64 m_id = 1;
inline bool E_EncyclopediaEquipexpvalue::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EncyclopediaEquipexpvalue::m_id() const {
  return m_id_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_type = 2;
inline bool E_EncyclopediaEquipexpvalue::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_type() {
  m_type_ = GOOGLE_LONGLONG(0);
  clear_has_m_type();
}
inline ::google::protobuf::int64 E_EncyclopediaEquipexpvalue::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_type(::google::protobuf::int64 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional string m_name = 3;
inline bool E_EncyclopediaEquipexpvalue::has_m_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_EncyclopediaEquipexpvalue::m_name() const {
  return *m_name_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EncyclopediaEquipexpvalue::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EncyclopediaEquipexpvalue::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaEquipexpvalue::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_EncyclopediaEquipexpvalue::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaEquipexpvalue::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_exp = 4;
inline bool E_EncyclopediaEquipexpvalue::has_m_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalue::m_exp() const {
  return m_exp_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int64 m_link = 5;
inline bool E_EncyclopediaEquipexpvalue::has_m_link() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_link() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_link() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_link() {
  m_link_ = GOOGLE_LONGLONG(0);
  clear_has_m_link();
}
inline ::google::protobuf::int64 E_EncyclopediaEquipexpvalue::m_link() const {
  return m_link_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_link(::google::protobuf::int64 value) {
  set_has_m_link();
  m_link_ = value;
}

// optional int32 m_goldattall = 6;
inline bool E_EncyclopediaEquipexpvalue::has_m_goldattall() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_goldattall() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_goldattall() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_goldattall() {
  m_goldattall_ = 0;
  clear_has_m_goldattall();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalue::m_goldattall() const {
  return m_goldattall_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_goldattall(::google::protobuf::int32 value) {
  set_has_m_goldattall();
  m_goldattall_ = value;
}

// optional int32 m_goldatt = 7;
inline bool E_EncyclopediaEquipexpvalue::has_m_goldatt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EncyclopediaEquipexpvalue::set_has_m_goldatt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EncyclopediaEquipexpvalue::clear_has_m_goldatt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EncyclopediaEquipexpvalue::clear_m_goldatt() {
  m_goldatt_ = 0;
  clear_has_m_goldatt();
}
inline ::google::protobuf::int32 E_EncyclopediaEquipexpvalue::m_goldatt() const {
  return m_goldatt_;
}
inline void E_EncyclopediaEquipexpvalue::set_m_goldatt(::google::protobuf::int32 value) {
  set_has_m_goldatt();
  m_goldatt_ = value;
}

// repeated .proto_ff.E_EncyclopediaEquipexpvalueBeaststarDesc m_beaststar = 8;
inline int E_EncyclopediaEquipexpvalue::m_beaststar_size() const {
  return m_beaststar_.size();
}
inline void E_EncyclopediaEquipexpvalue::clear_m_beaststar() {
  m_beaststar_.Clear();
}
inline const ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc& E_EncyclopediaEquipexpvalue::m_beaststar(int index) const {
  return m_beaststar_.Get(index);
}
inline ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc* E_EncyclopediaEquipexpvalue::mutable_m_beaststar(int index) {
  return m_beaststar_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc* E_EncyclopediaEquipexpvalue::add_m_beaststar() {
  return m_beaststar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc >&
E_EncyclopediaEquipexpvalue::m_beaststar() const {
  return m_beaststar_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueBeaststarDesc >*
E_EncyclopediaEquipexpvalue::mutable_m_beaststar() {
  return &m_beaststar_;
}

// repeated .proto_ff.E_EncyclopediaEquipexpvalueGoldstarDesc m_goldstar = 9;
inline int E_EncyclopediaEquipexpvalue::m_goldstar_size() const {
  return m_goldstar_.size();
}
inline void E_EncyclopediaEquipexpvalue::clear_m_goldstar() {
  m_goldstar_.Clear();
}
inline const ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc& E_EncyclopediaEquipexpvalue::m_goldstar(int index) const {
  return m_goldstar_.Get(index);
}
inline ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc* E_EncyclopediaEquipexpvalue::mutable_m_goldstar(int index) {
  return m_goldstar_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc* E_EncyclopediaEquipexpvalue::add_m_goldstar() {
  return m_goldstar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc >&
E_EncyclopediaEquipexpvalue::m_goldstar() const {
  return m_goldstar_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalueGoldstarDesc >*
E_EncyclopediaEquipexpvalue::mutable_m_goldstar() {
  return &m_goldstar_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaEquipexpvalue

// repeated .proto_ff.E_EncyclopediaEquipexpvalue E_EncyclopediaEquipexpvalue_List = 1;
inline int Sheet_EncyclopediaEquipexpvalue::e_encyclopediaequipexpvalue_list_size() const {
  return e_encyclopediaequipexpvalue_list_.size();
}
inline void Sheet_EncyclopediaEquipexpvalue::clear_e_encyclopediaequipexpvalue_list() {
  e_encyclopediaequipexpvalue_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaEquipexpvalue& Sheet_EncyclopediaEquipexpvalue::e_encyclopediaequipexpvalue_list(int index) const {
  return e_encyclopediaequipexpvalue_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaEquipexpvalue* Sheet_EncyclopediaEquipexpvalue::mutable_e_encyclopediaequipexpvalue_list(int index) {
  return e_encyclopediaequipexpvalue_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaEquipexpvalue* Sheet_EncyclopediaEquipexpvalue::add_e_encyclopediaequipexpvalue_list() {
  return e_encyclopediaequipexpvalue_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalue >&
Sheet_EncyclopediaEquipexpvalue::e_encyclopediaequipexpvalue_list() const {
  return e_encyclopediaequipexpvalue_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEquipexpvalue >*
Sheet_EncyclopediaEquipexpvalue::mutable_e_encyclopediaequipexpvalue_list() {
  return &e_encyclopediaequipexpvalue_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaBeastexpand

// optional int32 m_number = 1;
inline bool E_EncyclopediaBeastexpand::has_m_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaBeastexpand::set_has_m_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaBeastexpand::clear_has_m_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaBeastexpand::clear_m_number() {
  m_number_ = 0;
  clear_has_m_number();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastexpand::m_number() const {
  return m_number_;
}
inline void E_EncyclopediaBeastexpand::set_m_number(::google::protobuf::int32 value) {
  set_has_m_number();
  m_number_ = value;
}

// optional int32 m_lv = 2;
inline bool E_EncyclopediaBeastexpand::has_m_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaBeastexpand::set_has_m_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaBeastexpand::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaBeastexpand::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastexpand::m_lv() const {
  return m_lv_;
}
inline void E_EncyclopediaBeastexpand::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int64 m_id = 3;
inline bool E_EncyclopediaBeastexpand::has_m_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaBeastexpand::set_has_m_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaBeastexpand::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaBeastexpand::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EncyclopediaBeastexpand::m_id() const {
  return m_id_;
}
inline void E_EncyclopediaBeastexpand::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_num = 4;
inline bool E_EncyclopediaBeastexpand::has_m_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EncyclopediaBeastexpand::set_has_m_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EncyclopediaBeastexpand::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EncyclopediaBeastexpand::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastexpand::m_num() const {
  return m_num_;
}
inline void E_EncyclopediaBeastexpand::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaBeastexpand

// repeated .proto_ff.E_EncyclopediaBeastexpand E_EncyclopediaBeastexpand_List = 1;
inline int Sheet_EncyclopediaBeastexpand::e_encyclopediabeastexpand_list_size() const {
  return e_encyclopediabeastexpand_list_.size();
}
inline void Sheet_EncyclopediaBeastexpand::clear_e_encyclopediabeastexpand_list() {
  e_encyclopediabeastexpand_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaBeastexpand& Sheet_EncyclopediaBeastexpand::e_encyclopediabeastexpand_list(int index) const {
  return e_encyclopediabeastexpand_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaBeastexpand* Sheet_EncyclopediaBeastexpand::mutable_e_encyclopediabeastexpand_list(int index) {
  return e_encyclopediabeastexpand_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaBeastexpand* Sheet_EncyclopediaBeastexpand::add_e_encyclopediabeastexpand_list() {
  return e_encyclopediabeastexpand_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexpand >&
Sheet_EncyclopediaBeastexpand::e_encyclopediabeastexpand_list() const {
  return e_encyclopediabeastexpand_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexpand >*
Sheet_EncyclopediaBeastexpand::mutable_e_encyclopediabeastexpand_list() {
  return &e_encyclopediabeastexpand_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaBeastprivilegeAttributeDesc

// optional int64 m_value = 1;
inline bool E_EncyclopediaBeastprivilegeAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::clear_m_value() {
  m_value_ = GOOGLE_LONGLONG(0);
  clear_has_m_value();
}
inline ::google::protobuf::int64 E_EncyclopediaBeastprivilegeAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::set_m_value(::google::protobuf::int64 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EncyclopediaBeastprivilegeAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastprivilegeAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaBeastprivilegeAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaBeastprivilege

// optional int32 m_privilegetype = 1;
inline bool E_EncyclopediaBeastprivilege::has_m_privilegetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaBeastprivilege::set_has_m_privilegetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaBeastprivilege::clear_has_m_privilegetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaBeastprivilege::clear_m_privilegetype() {
  m_privilegetype_ = 0;
  clear_has_m_privilegetype();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastprivilege::m_privilegetype() const {
  return m_privilegetype_;
}
inline void E_EncyclopediaBeastprivilege::set_m_privilegetype(::google::protobuf::int32 value) {
  set_has_m_privilegetype();
  m_privilegetype_ = value;
}

// optional string m_name = 2;
inline bool E_EncyclopediaBeastprivilege::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaBeastprivilege::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaBeastprivilege::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaBeastprivilege::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_EncyclopediaBeastprivilege::m_name() const {
  return *m_name_;
}
inline void E_EncyclopediaBeastprivilege::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EncyclopediaBeastprivilege::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EncyclopediaBeastprivilege::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaBeastprivilege::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_EncyclopediaBeastprivilege::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaBeastprivilege::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_price = 3;
inline bool E_EncyclopediaBeastprivilege::has_m_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaBeastprivilege::set_has_m_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaBeastprivilege::clear_has_m_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaBeastprivilege::clear_m_price() {
  m_price_ = 0;
  clear_has_m_price();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastprivilege::m_price() const {
  return m_price_;
}
inline void E_EncyclopediaBeastprivilege::set_m_price(::google::protobuf::int32 value) {
  set_has_m_price();
  m_price_ = value;
}

// optional int64 m_expaddition = 4;
inline bool E_EncyclopediaBeastprivilege::has_m_expaddition() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EncyclopediaBeastprivilege::set_has_m_expaddition() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EncyclopediaBeastprivilege::clear_has_m_expaddition() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EncyclopediaBeastprivilege::clear_m_expaddition() {
  m_expaddition_ = GOOGLE_LONGLONG(0);
  clear_has_m_expaddition();
}
inline ::google::protobuf::int64 E_EncyclopediaBeastprivilege::m_expaddition() const {
  return m_expaddition_;
}
inline void E_EncyclopediaBeastprivilege::set_m_expaddition(::google::protobuf::int64 value) {
  set_has_m_expaddition();
  m_expaddition_ = value;
}

// repeated .proto_ff.E_EncyclopediaBeastprivilegeAttributeDesc m_attribute = 5;
inline int E_EncyclopediaBeastprivilege::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EncyclopediaBeastprivilege::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc& E_EncyclopediaBeastprivilege::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc* E_EncyclopediaBeastprivilege::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc* E_EncyclopediaBeastprivilege::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc >&
E_EncyclopediaBeastprivilege::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilegeAttributeDesc >*
E_EncyclopediaBeastprivilege::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaBeastprivilege

// repeated .proto_ff.E_EncyclopediaBeastprivilege E_EncyclopediaBeastprivilege_List = 1;
inline int Sheet_EncyclopediaBeastprivilege::e_encyclopediabeastprivilege_list_size() const {
  return e_encyclopediabeastprivilege_list_.size();
}
inline void Sheet_EncyclopediaBeastprivilege::clear_e_encyclopediabeastprivilege_list() {
  e_encyclopediabeastprivilege_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaBeastprivilege& Sheet_EncyclopediaBeastprivilege::e_encyclopediabeastprivilege_list(int index) const {
  return e_encyclopediabeastprivilege_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaBeastprivilege* Sheet_EncyclopediaBeastprivilege::mutable_e_encyclopediabeastprivilege_list(int index) {
  return e_encyclopediabeastprivilege_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaBeastprivilege* Sheet_EncyclopediaBeastprivilege::add_e_encyclopediabeastprivilege_list() {
  return e_encyclopediabeastprivilege_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilege >&
Sheet_EncyclopediaBeastprivilege::e_encyclopediabeastprivilege_list() const {
  return e_encyclopediabeastprivilege_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastprivilege >*
Sheet_EncyclopediaBeastprivilege::mutable_e_encyclopediabeastprivilege_list() {
  return &e_encyclopediabeastprivilege_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaBeastexp

// optional int32 m_lv = 1;
inline bool E_EncyclopediaBeastexp::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaBeastexp::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaBeastexp::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaBeastexp::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastexp::m_lv() const {
  return m_lv_;
}
inline void E_EncyclopediaBeastexp::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_exp = 2;
inline bool E_EncyclopediaBeastexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaBeastexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaBeastexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaBeastexp::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_EncyclopediaBeastexp::m_exp() const {
  return m_exp_;
}
inline void E_EncyclopediaBeastexp::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaBeastexp

// repeated .proto_ff.E_EncyclopediaBeastexp E_EncyclopediaBeastexp_List = 1;
inline int Sheet_EncyclopediaBeastexp::e_encyclopediabeastexp_list_size() const {
  return e_encyclopediabeastexp_list_.size();
}
inline void Sheet_EncyclopediaBeastexp::clear_e_encyclopediabeastexp_list() {
  e_encyclopediabeastexp_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaBeastexp& Sheet_EncyclopediaBeastexp::e_encyclopediabeastexp_list(int index) const {
  return e_encyclopediabeastexp_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaBeastexp* Sheet_EncyclopediaBeastexp::mutable_e_encyclopediabeastexp_list(int index) {
  return e_encyclopediabeastexp_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaBeastexp* Sheet_EncyclopediaBeastexp::add_e_encyclopediabeastexp_list() {
  return e_encyclopediabeastexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexp >&
Sheet_EncyclopediaBeastexp::e_encyclopediabeastexp_list() const {
  return e_encyclopediabeastexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaBeastexp >*
Sheet_EncyclopediaBeastexp::mutable_e_encyclopediabeastexp_list() {
  return &e_encyclopediabeastexp_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaEmployLviattributeDesc

// optional int64 m_value = 1;
inline bool E_EncyclopediaEmployLviattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaEmployLviattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaEmployLviattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaEmployLviattributeDesc::clear_m_value() {
  m_value_ = GOOGLE_LONGLONG(0);
  clear_has_m_value();
}
inline ::google::protobuf::int64 E_EncyclopediaEmployLviattributeDesc::m_value() const {
  return m_value_;
}
inline void E_EncyclopediaEmployLviattributeDesc::set_m_value(::google::protobuf::int64 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EncyclopediaEmployLviattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaEmployLviattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaEmployLviattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaEmployLviattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EncyclopediaEmployLviattributeDesc::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaEmployLviattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaEmploy

// optional int64 m_employid = 1;
inline bool E_EncyclopediaEmploy::has_m_employid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaEmploy::clear_m_employid() {
  m_employid_ = GOOGLE_LONGLONG(0);
  clear_has_m_employid();
}
inline ::google::protobuf::int64 E_EncyclopediaEmploy::m_employid() const {
  return m_employid_;
}
inline void E_EncyclopediaEmploy::set_m_employid(::google::protobuf::int64 value) {
  set_has_m_employid();
  m_employid_ = value;
}

// optional int64 m_type = 2;
inline bool E_EncyclopediaEmploy::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaEmploy::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaEmploy::clear_m_type() {
  m_type_ = GOOGLE_LONGLONG(0);
  clear_has_m_type();
}
inline ::google::protobuf::int64 E_EncyclopediaEmploy::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaEmploy::set_m_type(::google::protobuf::int64 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int64 m_itemid = 3;
inline bool E_EncyclopediaEmploy::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaEmploy::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaEmploy::clear_m_itemid() {
  m_itemid_ = GOOGLE_LONGLONG(0);
  clear_has_m_itemid();
}
inline ::google::protobuf::int64 E_EncyclopediaEmploy::m_itemid() const {
  return m_itemid_;
}
inline void E_EncyclopediaEmploy::set_m_itemid(::google::protobuf::int64 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional string m_employname = 4;
inline bool E_EncyclopediaEmploy::has_m_employname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EncyclopediaEmploy::clear_m_employname() {
  if (m_employname_ != &::google::protobuf::internal::kEmptyString) {
    m_employname_->clear();
  }
  clear_has_m_employname();
}
inline const ::std::string& E_EncyclopediaEmploy::m_employname() const {
  return *m_employname_;
}
inline void E_EncyclopediaEmploy::set_m_employname(const ::std::string& value) {
  set_has_m_employname();
  if (m_employname_ == &::google::protobuf::internal::kEmptyString) {
    m_employname_ = new ::std::string;
  }
  m_employname_->assign(value);
}
inline void E_EncyclopediaEmploy::set_m_employname(const char* value) {
  set_has_m_employname();
  if (m_employname_ == &::google::protobuf::internal::kEmptyString) {
    m_employname_ = new ::std::string;
  }
  m_employname_->assign(value);
}
inline void E_EncyclopediaEmploy::set_m_employname(const char* value, size_t size) {
  set_has_m_employname();
  if (m_employname_ == &::google::protobuf::internal::kEmptyString) {
    m_employname_ = new ::std::string;
  }
  m_employname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaEmploy::mutable_m_employname() {
  set_has_m_employname();
  if (m_employname_ == &::google::protobuf::internal::kEmptyString) {
    m_employname_ = new ::std::string;
  }
  return m_employname_;
}
inline ::std::string* E_EncyclopediaEmploy::release_m_employname() {
  clear_has_m_employname();
  if (m_employname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_employname_;
    m_employname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaEmploy::set_allocated_m_employname(::std::string* m_employname) {
  if (m_employname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_employname_;
  }
  if (m_employname) {
    set_has_m_employname();
    m_employname_ = m_employname;
  } else {
    clear_has_m_employname();
    m_employname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_employquality = 5;
inline bool E_EncyclopediaEmploy::has_m_employquality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employquality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employquality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EncyclopediaEmploy::clear_m_employquality() {
  m_employquality_ = 0;
  clear_has_m_employquality();
}
inline ::google::protobuf::int32 E_EncyclopediaEmploy::m_employquality() const {
  return m_employquality_;
}
inline void E_EncyclopediaEmploy::set_m_employquality(::google::protobuf::int32 value) {
  set_has_m_employquality();
  m_employquality_ = value;
}

// optional int32 m_employtype = 6;
inline bool E_EncyclopediaEmploy::has_m_employtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EncyclopediaEmploy::clear_m_employtype() {
  m_employtype_ = 0;
  clear_has_m_employtype();
}
inline ::google::protobuf::int32 E_EncyclopediaEmploy::m_employtype() const {
  return m_employtype_;
}
inline void E_EncyclopediaEmploy::set_m_employtype(::google::protobuf::int32 value) {
  set_has_m_employtype();
  m_employtype_ = value;
}

// optional string m_employtype_name = 7;
inline bool E_EncyclopediaEmploy::has_m_employtype_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employtype_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employtype_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EncyclopediaEmploy::clear_m_employtype_name() {
  if (m_employtype_name_ != &::google::protobuf::internal::kEmptyString) {
    m_employtype_name_->clear();
  }
  clear_has_m_employtype_name();
}
inline const ::std::string& E_EncyclopediaEmploy::m_employtype_name() const {
  return *m_employtype_name_;
}
inline void E_EncyclopediaEmploy::set_m_employtype_name(const ::std::string& value) {
  set_has_m_employtype_name();
  if (m_employtype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_employtype_name_ = new ::std::string;
  }
  m_employtype_name_->assign(value);
}
inline void E_EncyclopediaEmploy::set_m_employtype_name(const char* value) {
  set_has_m_employtype_name();
  if (m_employtype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_employtype_name_ = new ::std::string;
  }
  m_employtype_name_->assign(value);
}
inline void E_EncyclopediaEmploy::set_m_employtype_name(const char* value, size_t size) {
  set_has_m_employtype_name();
  if (m_employtype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_employtype_name_ = new ::std::string;
  }
  m_employtype_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaEmploy::mutable_m_employtype_name() {
  set_has_m_employtype_name();
  if (m_employtype_name_ == &::google::protobuf::internal::kEmptyString) {
    m_employtype_name_ = new ::std::string;
  }
  return m_employtype_name_;
}
inline ::std::string* E_EncyclopediaEmploy::release_m_employtype_name() {
  clear_has_m_employtype_name();
  if (m_employtype_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_employtype_name_;
    m_employtype_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaEmploy::set_allocated_m_employtype_name(::std::string* m_employtype_name) {
  if (m_employtype_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_employtype_name_;
  }
  if (m_employtype_name) {
    set_has_m_employtype_name();
    m_employtype_name_ = m_employtype_name;
  } else {
    clear_has_m_employtype_name();
    m_employtype_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_employz = 8;
inline bool E_EncyclopediaEmploy::has_m_employz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employz() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employz() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EncyclopediaEmploy::clear_m_employz() {
  m_employz_ = 0;
  clear_has_m_employz();
}
inline ::google::protobuf::int32 E_EncyclopediaEmploy::m_employz() const {
  return m_employz_;
}
inline void E_EncyclopediaEmploy::set_m_employz(::google::protobuf::int32 value) {
  set_has_m_employz();
  m_employz_ = value;
}

// optional string m_employzname = 9;
inline bool E_EncyclopediaEmploy::has_m_employzname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EncyclopediaEmploy::set_has_m_employzname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EncyclopediaEmploy::clear_has_m_employzname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EncyclopediaEmploy::clear_m_employzname() {
  if (m_employzname_ != &::google::protobuf::internal::kEmptyString) {
    m_employzname_->clear();
  }
  clear_has_m_employzname();
}
inline const ::std::string& E_EncyclopediaEmploy::m_employzname() const {
  return *m_employzname_;
}
inline void E_EncyclopediaEmploy::set_m_employzname(const ::std::string& value) {
  set_has_m_employzname();
  if (m_employzname_ == &::google::protobuf::internal::kEmptyString) {
    m_employzname_ = new ::std::string;
  }
  m_employzname_->assign(value);
}
inline void E_EncyclopediaEmploy::set_m_employzname(const char* value) {
  set_has_m_employzname();
  if (m_employzname_ == &::google::protobuf::internal::kEmptyString) {
    m_employzname_ = new ::std::string;
  }
  m_employzname_->assign(value);
}
inline void E_EncyclopediaEmploy::set_m_employzname(const char* value, size_t size) {
  set_has_m_employzname();
  if (m_employzname_ == &::google::protobuf::internal::kEmptyString) {
    m_employzname_ = new ::std::string;
  }
  m_employzname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaEmploy::mutable_m_employzname() {
  set_has_m_employzname();
  if (m_employzname_ == &::google::protobuf::internal::kEmptyString) {
    m_employzname_ = new ::std::string;
  }
  return m_employzname_;
}
inline ::std::string* E_EncyclopediaEmploy::release_m_employzname() {
  clear_has_m_employzname();
  if (m_employzname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_employzname_;
    m_employzname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaEmploy::set_allocated_m_employzname(::std::string* m_employzname) {
  if (m_employzname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_employzname_;
  }
  if (m_employzname) {
    set_has_m_employzname();
    m_employzname_ = m_employzname;
  } else {
    clear_has_m_employzname();
    m_employzname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EncyclopediaEmployLviattributeDesc m_lviattribute = 10;
inline int E_EncyclopediaEmploy::m_lviattribute_size() const {
  return m_lviattribute_.size();
}
inline void E_EncyclopediaEmploy::clear_m_lviattribute() {
  m_lviattribute_.Clear();
}
inline const ::proto_ff::E_EncyclopediaEmployLviattributeDesc& E_EncyclopediaEmploy::m_lviattribute(int index) const {
  return m_lviattribute_.Get(index);
}
inline ::proto_ff::E_EncyclopediaEmployLviattributeDesc* E_EncyclopediaEmploy::mutable_m_lviattribute(int index) {
  return m_lviattribute_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaEmployLviattributeDesc* E_EncyclopediaEmploy::add_m_lviattribute() {
  return m_lviattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmployLviattributeDesc >&
E_EncyclopediaEmploy::m_lviattribute() const {
  return m_lviattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmployLviattributeDesc >*
E_EncyclopediaEmploy::mutable_m_lviattribute() {
  return &m_lviattribute_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaEmploy

// repeated .proto_ff.E_EncyclopediaEmploy E_EncyclopediaEmploy_List = 1;
inline int Sheet_EncyclopediaEmploy::e_encyclopediaemploy_list_size() const {
  return e_encyclopediaemploy_list_.size();
}
inline void Sheet_EncyclopediaEmploy::clear_e_encyclopediaemploy_list() {
  e_encyclopediaemploy_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaEmploy& Sheet_EncyclopediaEmploy::e_encyclopediaemploy_list(int index) const {
  return e_encyclopediaemploy_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaEmploy* Sheet_EncyclopediaEmploy::mutable_e_encyclopediaemploy_list(int index) {
  return e_encyclopediaemploy_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaEmploy* Sheet_EncyclopediaEmploy::add_e_encyclopediaemploy_list() {
  return e_encyclopediaemploy_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmploy >&
Sheet_EncyclopediaEmploy::e_encyclopediaemploy_list() const {
  return e_encyclopediaemploy_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaEmploy >*
Sheet_EncyclopediaEmploy::mutable_e_encyclopediaemploy_list() {
  return &e_encyclopediaemploy_list_;
}

// -------------------------------------------------------------------

// E_EncyclopediaTableLviattributeDesc

// optional int64 m_value = 1;
inline bool E_EncyclopediaTableLviattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaTableLviattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaTableLviattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaTableLviattributeDesc::clear_m_value() {
  m_value_ = GOOGLE_LONGLONG(0);
  clear_has_m_value();
}
inline ::google::protobuf::int64 E_EncyclopediaTableLviattributeDesc::m_value() const {
  return m_value_;
}
inline void E_EncyclopediaTableLviattributeDesc::set_m_value(::google::protobuf::int64 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EncyclopediaTableLviattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaTableLviattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaTableLviattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaTableLviattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EncyclopediaTableLviattributeDesc::m_type() const {
  return m_type_;
}
inline void E_EncyclopediaTableLviattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EncyclopediaTable

// optional int64 m_id = 1;
inline bool E_EncyclopediaTable::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EncyclopediaTable::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EncyclopediaTable::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EncyclopediaTable::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EncyclopediaTable::m_id() const {
  return m_id_;
}
inline void E_EncyclopediaTable::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_tableid = 2;
inline bool E_EncyclopediaTable::has_m_tableid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EncyclopediaTable::set_has_m_tableid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EncyclopediaTable::clear_has_m_tableid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EncyclopediaTable::clear_m_tableid() {
  m_tableid_ = GOOGLE_LONGLONG(0);
  clear_has_m_tableid();
}
inline ::google::protobuf::int64 E_EncyclopediaTable::m_tableid() const {
  return m_tableid_;
}
inline void E_EncyclopediaTable::set_m_tableid(::google::protobuf::int64 value) {
  set_has_m_tableid();
  m_tableid_ = value;
}

// optional string m_tablename = 3;
inline bool E_EncyclopediaTable::has_m_tablename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EncyclopediaTable::set_has_m_tablename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EncyclopediaTable::clear_has_m_tablename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EncyclopediaTable::clear_m_tablename() {
  if (m_tablename_ != &::google::protobuf::internal::kEmptyString) {
    m_tablename_->clear();
  }
  clear_has_m_tablename();
}
inline const ::std::string& E_EncyclopediaTable::m_tablename() const {
  return *m_tablename_;
}
inline void E_EncyclopediaTable::set_m_tablename(const ::std::string& value) {
  set_has_m_tablename();
  if (m_tablename_ == &::google::protobuf::internal::kEmptyString) {
    m_tablename_ = new ::std::string;
  }
  m_tablename_->assign(value);
}
inline void E_EncyclopediaTable::set_m_tablename(const char* value) {
  set_has_m_tablename();
  if (m_tablename_ == &::google::protobuf::internal::kEmptyString) {
    m_tablename_ = new ::std::string;
  }
  m_tablename_->assign(value);
}
inline void E_EncyclopediaTable::set_m_tablename(const char* value, size_t size) {
  set_has_m_tablename();
  if (m_tablename_ == &::google::protobuf::internal::kEmptyString) {
    m_tablename_ = new ::std::string;
  }
  m_tablename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EncyclopediaTable::mutable_m_tablename() {
  set_has_m_tablename();
  if (m_tablename_ == &::google::protobuf::internal::kEmptyString) {
    m_tablename_ = new ::std::string;
  }
  return m_tablename_;
}
inline ::std::string* E_EncyclopediaTable::release_m_tablename() {
  clear_has_m_tablename();
  if (m_tablename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_tablename_;
    m_tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EncyclopediaTable::set_allocated_m_tablename(::std::string* m_tablename) {
  if (m_tablename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_tablename_;
  }
  if (m_tablename) {
    set_has_m_tablename();
    m_tablename_ = m_tablename;
  } else {
    clear_has_m_tablename();
    m_tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EncyclopediaTableLviattributeDesc m_lviattribute = 4;
inline int E_EncyclopediaTable::m_lviattribute_size() const {
  return m_lviattribute_.size();
}
inline void E_EncyclopediaTable::clear_m_lviattribute() {
  m_lviattribute_.Clear();
}
inline const ::proto_ff::E_EncyclopediaTableLviattributeDesc& E_EncyclopediaTable::m_lviattribute(int index) const {
  return m_lviattribute_.Get(index);
}
inline ::proto_ff::E_EncyclopediaTableLviattributeDesc* E_EncyclopediaTable::mutable_m_lviattribute(int index) {
  return m_lviattribute_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaTableLviattributeDesc* E_EncyclopediaTable::add_m_lviattribute() {
  return m_lviattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTableLviattributeDesc >&
E_EncyclopediaTable::m_lviattribute() const {
  return m_lviattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTableLviattributeDesc >*
E_EncyclopediaTable::mutable_m_lviattribute() {
  return &m_lviattribute_;
}

// -------------------------------------------------------------------

// Sheet_EncyclopediaTable

// repeated .proto_ff.E_EncyclopediaTable E_EncyclopediaTable_List = 1;
inline int Sheet_EncyclopediaTable::e_encyclopediatable_list_size() const {
  return e_encyclopediatable_list_.size();
}
inline void Sheet_EncyclopediaTable::clear_e_encyclopediatable_list() {
  e_encyclopediatable_list_.Clear();
}
inline const ::proto_ff::E_EncyclopediaTable& Sheet_EncyclopediaTable::e_encyclopediatable_list(int index) const {
  return e_encyclopediatable_list_.Get(index);
}
inline ::proto_ff::E_EncyclopediaTable* Sheet_EncyclopediaTable::mutable_e_encyclopediatable_list(int index) {
  return e_encyclopediatable_list_.Mutable(index);
}
inline ::proto_ff::E_EncyclopediaTable* Sheet_EncyclopediaTable::add_e_encyclopediatable_list() {
  return e_encyclopediatable_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTable >&
Sheet_EncyclopediaTable::e_encyclopediatable_list() const {
  return e_encyclopediatable_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EncyclopediaTable >*
Sheet_EncyclopediaTable::mutable_e_encyclopediatable_list() {
  return &e_encyclopediatable_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fEncyclopedia_2eproto__INCLUDED
