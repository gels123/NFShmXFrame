// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Role.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Role.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_RoleBornItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleBornItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleBornMailDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleBornMailDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleBorn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleBorn_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleBorn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleBorn_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleMastermaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleMastermaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleMastermale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleMastermale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleMastermale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleMastermale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleMasterfemaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleMasterfemaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleMasterfemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleMasterfemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleMasterfemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleMasterfemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSicklemaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSicklemaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSicklemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSicklemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleSicklemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleSicklemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSicklefemaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSicklefemaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSicklefemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSicklefemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleSicklefemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleSicklefemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSwordmaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSwordmaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSwordmale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSwordmale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleSwordmale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleSwordmale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSwordfemaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSwordfemaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSwordfemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSwordfemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleSwordfemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleSwordfemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleTaidaomaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleTaidaomaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleTaidaomale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleTaidaomale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleTaidaomale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleTaidaomale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleTaidaofemaleAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleTaidaofemaleAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleTaidaofemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleTaidaofemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleTaidaofemale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleTaidaofemale_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleSkilltype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleSkilltype_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleSkilltype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleSkilltype_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleAddskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleAddskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleAddskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleAddskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RoleWorldexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RoleWorldexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RoleWorldexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RoleWorldexp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fRole_2eproto() {
  protobuf_AddDesc_E_5fRole_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Role.proto");
  GOOGLE_CHECK(file != NULL);
  E_RoleBornItemDesc_descriptor_ = file->message_type(0);
  static const int E_RoleBornItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornItemDesc, m_name_),
  };
  E_RoleBornItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleBornItemDesc_descriptor_,
      E_RoleBornItemDesc::default_instance_,
      E_RoleBornItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleBornItemDesc));
  E_RoleBornMailDesc_descriptor_ = file->message_type(1);
  static const int E_RoleBornMailDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornMailDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornMailDesc, m_name_),
  };
  E_RoleBornMailDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleBornMailDesc_descriptor_,
      E_RoleBornMailDesc::default_instance_,
      E_RoleBornMailDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornMailDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBornMailDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleBornMailDesc));
  E_RoleBorn_descriptor_ = file->message_type(2);
  static const int E_RoleBorn_offsets_[43] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_bornid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_professionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_professionname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_placement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_bornlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_borntitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_diamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_binddiamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_birthface_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_icons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_loginavata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_newweapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_newclothing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_weaponavata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_roleavata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_marryavata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_haircolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_clothescolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_skincolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryweapons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryarmor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carrycloak_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryshoes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carrynecklace_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryamulet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carrybracer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryfashionweapons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carryfashionarmor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_carrywings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_mspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_view_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_sheny_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_shenw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_actbuff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_actskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, m_mail_),
  };
  E_RoleBorn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleBorn_descriptor_,
      E_RoleBorn::default_instance_,
      E_RoleBorn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleBorn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleBorn));
  Sheet_RoleBorn_descriptor_ = file->message_type(3);
  static const int Sheet_RoleBorn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleBorn, e_roleborn_list_),
  };
  Sheet_RoleBorn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleBorn_descriptor_,
      Sheet_RoleBorn::default_instance_,
      Sheet_RoleBorn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleBorn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleBorn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleBorn));
  E_RoleMastermaleAttributeDesc_descriptor_ = file->message_type(4);
  static const int E_RoleMastermaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermaleAttributeDesc, m_type_),
  };
  E_RoleMastermaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleMastermaleAttributeDesc_descriptor_,
      E_RoleMastermaleAttributeDesc::default_instance_,
      E_RoleMastermaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleMastermaleAttributeDesc));
  E_RoleMastermale_descriptor_ = file->message_type(5);
  static const int E_RoleMastermale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermale, m_attribute_),
  };
  E_RoleMastermale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleMastermale_descriptor_,
      E_RoleMastermale::default_instance_,
      E_RoleMastermale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMastermale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleMastermale));
  Sheet_RoleMastermale_descriptor_ = file->message_type(6);
  static const int Sheet_RoleMastermale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleMastermale, e_rolemastermale_list_),
  };
  Sheet_RoleMastermale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleMastermale_descriptor_,
      Sheet_RoleMastermale::default_instance_,
      Sheet_RoleMastermale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleMastermale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleMastermale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleMastermale));
  E_RoleMasterfemaleAttributeDesc_descriptor_ = file->message_type(7);
  static const int E_RoleMasterfemaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemaleAttributeDesc, m_type_),
  };
  E_RoleMasterfemaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleMasterfemaleAttributeDesc_descriptor_,
      E_RoleMasterfemaleAttributeDesc::default_instance_,
      E_RoleMasterfemaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleMasterfemaleAttributeDesc));
  E_RoleMasterfemale_descriptor_ = file->message_type(8);
  static const int E_RoleMasterfemale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemale, m_attribute_),
  };
  E_RoleMasterfemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleMasterfemale_descriptor_,
      E_RoleMasterfemale::default_instance_,
      E_RoleMasterfemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleMasterfemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleMasterfemale));
  Sheet_RoleMasterfemale_descriptor_ = file->message_type(9);
  static const int Sheet_RoleMasterfemale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleMasterfemale, e_rolemasterfemale_list_),
  };
  Sheet_RoleMasterfemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleMasterfemale_descriptor_,
      Sheet_RoleMasterfemale::default_instance_,
      Sheet_RoleMasterfemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleMasterfemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleMasterfemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleMasterfemale));
  E_RoleSicklemaleAttributeDesc_descriptor_ = file->message_type(10);
  static const int E_RoleSicklemaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemaleAttributeDesc, m_type_),
  };
  E_RoleSicklemaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSicklemaleAttributeDesc_descriptor_,
      E_RoleSicklemaleAttributeDesc::default_instance_,
      E_RoleSicklemaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSicklemaleAttributeDesc));
  E_RoleSicklemale_descriptor_ = file->message_type(11);
  static const int E_RoleSicklemale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemale, m_attribute_),
  };
  E_RoleSicklemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSicklemale_descriptor_,
      E_RoleSicklemale::default_instance_,
      E_RoleSicklemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSicklemale));
  Sheet_RoleSicklemale_descriptor_ = file->message_type(12);
  static const int Sheet_RoleSicklemale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSicklemale, e_rolesicklemale_list_),
  };
  Sheet_RoleSicklemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleSicklemale_descriptor_,
      Sheet_RoleSicklemale::default_instance_,
      Sheet_RoleSicklemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSicklemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSicklemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleSicklemale));
  E_RoleSicklefemaleAttributeDesc_descriptor_ = file->message_type(13);
  static const int E_RoleSicklefemaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemaleAttributeDesc, m_type_),
  };
  E_RoleSicklefemaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSicklefemaleAttributeDesc_descriptor_,
      E_RoleSicklefemaleAttributeDesc::default_instance_,
      E_RoleSicklefemaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSicklefemaleAttributeDesc));
  E_RoleSicklefemale_descriptor_ = file->message_type(14);
  static const int E_RoleSicklefemale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemale, m_attribute_),
  };
  E_RoleSicklefemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSicklefemale_descriptor_,
      E_RoleSicklefemale::default_instance_,
      E_RoleSicklefemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSicklefemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSicklefemale));
  Sheet_RoleSicklefemale_descriptor_ = file->message_type(15);
  static const int Sheet_RoleSicklefemale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSicklefemale, e_rolesicklefemale_list_),
  };
  Sheet_RoleSicklefemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleSicklefemale_descriptor_,
      Sheet_RoleSicklefemale::default_instance_,
      Sheet_RoleSicklefemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSicklefemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSicklefemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleSicklefemale));
  E_RoleSwordmaleAttributeDesc_descriptor_ = file->message_type(16);
  static const int E_RoleSwordmaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmaleAttributeDesc, m_type_),
  };
  E_RoleSwordmaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSwordmaleAttributeDesc_descriptor_,
      E_RoleSwordmaleAttributeDesc::default_instance_,
      E_RoleSwordmaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSwordmaleAttributeDesc));
  E_RoleSwordmale_descriptor_ = file->message_type(17);
  static const int E_RoleSwordmale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmale, m_attribute_),
  };
  E_RoleSwordmale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSwordmale_descriptor_,
      E_RoleSwordmale::default_instance_,
      E_RoleSwordmale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordmale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSwordmale));
  Sheet_RoleSwordmale_descriptor_ = file->message_type(18);
  static const int Sheet_RoleSwordmale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSwordmale, e_roleswordmale_list_),
  };
  Sheet_RoleSwordmale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleSwordmale_descriptor_,
      Sheet_RoleSwordmale::default_instance_,
      Sheet_RoleSwordmale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSwordmale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSwordmale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleSwordmale));
  E_RoleSwordfemaleAttributeDesc_descriptor_ = file->message_type(19);
  static const int E_RoleSwordfemaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemaleAttributeDesc, m_type_),
  };
  E_RoleSwordfemaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSwordfemaleAttributeDesc_descriptor_,
      E_RoleSwordfemaleAttributeDesc::default_instance_,
      E_RoleSwordfemaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSwordfemaleAttributeDesc));
  E_RoleSwordfemale_descriptor_ = file->message_type(20);
  static const int E_RoleSwordfemale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemale, m_attribute_),
  };
  E_RoleSwordfemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSwordfemale_descriptor_,
      E_RoleSwordfemale::default_instance_,
      E_RoleSwordfemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSwordfemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSwordfemale));
  Sheet_RoleSwordfemale_descriptor_ = file->message_type(21);
  static const int Sheet_RoleSwordfemale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSwordfemale, e_roleswordfemale_list_),
  };
  Sheet_RoleSwordfemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleSwordfemale_descriptor_,
      Sheet_RoleSwordfemale::default_instance_,
      Sheet_RoleSwordfemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSwordfemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSwordfemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleSwordfemale));
  E_RoleTaidaomaleAttributeDesc_descriptor_ = file->message_type(22);
  static const int E_RoleTaidaomaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomaleAttributeDesc, m_type_),
  };
  E_RoleTaidaomaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleTaidaomaleAttributeDesc_descriptor_,
      E_RoleTaidaomaleAttributeDesc::default_instance_,
      E_RoleTaidaomaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleTaidaomaleAttributeDesc));
  E_RoleTaidaomale_descriptor_ = file->message_type(23);
  static const int E_RoleTaidaomale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomale, m_attribute_),
  };
  E_RoleTaidaomale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleTaidaomale_descriptor_,
      E_RoleTaidaomale::default_instance_,
      E_RoleTaidaomale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaomale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleTaidaomale));
  Sheet_RoleTaidaomale_descriptor_ = file->message_type(24);
  static const int Sheet_RoleTaidaomale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleTaidaomale, e_roletaidaomale_list_),
  };
  Sheet_RoleTaidaomale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleTaidaomale_descriptor_,
      Sheet_RoleTaidaomale::default_instance_,
      Sheet_RoleTaidaomale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleTaidaomale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleTaidaomale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleTaidaomale));
  E_RoleTaidaofemaleAttributeDesc_descriptor_ = file->message_type(25);
  static const int E_RoleTaidaofemaleAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemaleAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemaleAttributeDesc, m_type_),
  };
  E_RoleTaidaofemaleAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleTaidaofemaleAttributeDesc_descriptor_,
      E_RoleTaidaofemaleAttributeDesc::default_instance_,
      E_RoleTaidaofemaleAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemaleAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemaleAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleTaidaofemaleAttributeDesc));
  E_RoleTaidaofemale_descriptor_ = file->message_type(26);
  static const int E_RoleTaidaofemale_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemale, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemale, m_upgradepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemale, m_attribute_),
  };
  E_RoleTaidaofemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleTaidaofemale_descriptor_,
      E_RoleTaidaofemale::default_instance_,
      E_RoleTaidaofemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleTaidaofemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleTaidaofemale));
  Sheet_RoleTaidaofemale_descriptor_ = file->message_type(27);
  static const int Sheet_RoleTaidaofemale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleTaidaofemale, e_roletaidaofemale_list_),
  };
  Sheet_RoleTaidaofemale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleTaidaofemale_descriptor_,
      Sheet_RoleTaidaofemale::default_instance_,
      Sheet_RoleTaidaofemale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleTaidaofemale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleTaidaofemale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleTaidaofemale));
  E_RoleExp_descriptor_ = file->message_type(28);
  static const int E_RoleExp_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_skillpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_preparemodedexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_fengshen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_pet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_dragon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_arena_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_solo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_multibattle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_qingyun_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_yaochi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_wedding_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, m_bagua_),
  };
  E_RoleExp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleExp_descriptor_,
      E_RoleExp::default_instance_,
      E_RoleExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleExp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleExp));
  Sheet_RoleExp_descriptor_ = file->message_type(29);
  static const int Sheet_RoleExp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleExp, e_roleexp_list_),
  };
  Sheet_RoleExp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleExp_descriptor_,
      Sheet_RoleExp::default_instance_,
      Sheet_RoleExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleExp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleExp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleExp));
  E_RoleSkilltype_descriptor_ = file->message_type(30);
  static const int E_RoleSkilltype_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSkilltype, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSkilltype, m_skilltype_),
  };
  E_RoleSkilltype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleSkilltype_descriptor_,
      E_RoleSkilltype::default_instance_,
      E_RoleSkilltype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSkilltype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleSkilltype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleSkilltype));
  Sheet_RoleSkilltype_descriptor_ = file->message_type(31);
  static const int Sheet_RoleSkilltype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSkilltype, e_roleskilltype_list_),
  };
  Sheet_RoleSkilltype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleSkilltype_descriptor_,
      Sheet_RoleSkilltype::default_instance_,
      Sheet_RoleSkilltype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSkilltype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleSkilltype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleSkilltype));
  E_RoleAddskill_descriptor_ = file->message_type(32);
  static const int E_RoleAddskill_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleAddskill, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleAddskill, m_skillid_),
  };
  E_RoleAddskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleAddskill_descriptor_,
      E_RoleAddskill::default_instance_,
      E_RoleAddskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleAddskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleAddskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleAddskill));
  Sheet_RoleAddskill_descriptor_ = file->message_type(33);
  static const int Sheet_RoleAddskill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleAddskill, e_roleaddskill_list_),
  };
  Sheet_RoleAddskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleAddskill_descriptor_,
      Sheet_RoleAddskill::default_instance_,
      Sheet_RoleAddskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleAddskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleAddskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleAddskill));
  E_RoleWorldexp_descriptor_ = file->message_type(34);
  static const int E_RoleWorldexp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleWorldexp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleWorldexp, m_worldexp_),
  };
  E_RoleWorldexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RoleWorldexp_descriptor_,
      E_RoleWorldexp::default_instance_,
      E_RoleWorldexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleWorldexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RoleWorldexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RoleWorldexp));
  Sheet_RoleWorldexp_descriptor_ = file->message_type(35);
  static const int Sheet_RoleWorldexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleWorldexp, e_roleworldexp_list_),
  };
  Sheet_RoleWorldexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RoleWorldexp_descriptor_,
      Sheet_RoleWorldexp::default_instance_,
      Sheet_RoleWorldexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleWorldexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RoleWorldexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RoleWorldexp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fRole_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleBornItemDesc_descriptor_, &E_RoleBornItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleBornMailDesc_descriptor_, &E_RoleBornMailDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleBorn_descriptor_, &E_RoleBorn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleBorn_descriptor_, &Sheet_RoleBorn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleMastermaleAttributeDesc_descriptor_, &E_RoleMastermaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleMastermale_descriptor_, &E_RoleMastermale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleMastermale_descriptor_, &Sheet_RoleMastermale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleMasterfemaleAttributeDesc_descriptor_, &E_RoleMasterfemaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleMasterfemale_descriptor_, &E_RoleMasterfemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleMasterfemale_descriptor_, &Sheet_RoleMasterfemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSicklemaleAttributeDesc_descriptor_, &E_RoleSicklemaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSicklemale_descriptor_, &E_RoleSicklemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleSicklemale_descriptor_, &Sheet_RoleSicklemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSicklefemaleAttributeDesc_descriptor_, &E_RoleSicklefemaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSicklefemale_descriptor_, &E_RoleSicklefemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleSicklefemale_descriptor_, &Sheet_RoleSicklefemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSwordmaleAttributeDesc_descriptor_, &E_RoleSwordmaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSwordmale_descriptor_, &E_RoleSwordmale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleSwordmale_descriptor_, &Sheet_RoleSwordmale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSwordfemaleAttributeDesc_descriptor_, &E_RoleSwordfemaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSwordfemale_descriptor_, &E_RoleSwordfemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleSwordfemale_descriptor_, &Sheet_RoleSwordfemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleTaidaomaleAttributeDesc_descriptor_, &E_RoleTaidaomaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleTaidaomale_descriptor_, &E_RoleTaidaomale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleTaidaomale_descriptor_, &Sheet_RoleTaidaomale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleTaidaofemaleAttributeDesc_descriptor_, &E_RoleTaidaofemaleAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleTaidaofemale_descriptor_, &E_RoleTaidaofemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleTaidaofemale_descriptor_, &Sheet_RoleTaidaofemale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleExp_descriptor_, &E_RoleExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleExp_descriptor_, &Sheet_RoleExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleSkilltype_descriptor_, &E_RoleSkilltype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleSkilltype_descriptor_, &Sheet_RoleSkilltype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleAddskill_descriptor_, &E_RoleAddskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleAddskill_descriptor_, &Sheet_RoleAddskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RoleWorldexp_descriptor_, &E_RoleWorldexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RoleWorldexp_descriptor_, &Sheet_RoleWorldexp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fRole_2eproto() {
  delete E_RoleBornItemDesc::default_instance_;
  delete E_RoleBornItemDesc_reflection_;
  delete E_RoleBornMailDesc::default_instance_;
  delete E_RoleBornMailDesc_reflection_;
  delete E_RoleBorn::default_instance_;
  delete E_RoleBorn_reflection_;
  delete Sheet_RoleBorn::default_instance_;
  delete Sheet_RoleBorn_reflection_;
  delete E_RoleMastermaleAttributeDesc::default_instance_;
  delete E_RoleMastermaleAttributeDesc_reflection_;
  delete E_RoleMastermale::default_instance_;
  delete E_RoleMastermale_reflection_;
  delete Sheet_RoleMastermale::default_instance_;
  delete Sheet_RoleMastermale_reflection_;
  delete E_RoleMasterfemaleAttributeDesc::default_instance_;
  delete E_RoleMasterfemaleAttributeDesc_reflection_;
  delete E_RoleMasterfemale::default_instance_;
  delete E_RoleMasterfemale_reflection_;
  delete Sheet_RoleMasterfemale::default_instance_;
  delete Sheet_RoleMasterfemale_reflection_;
  delete E_RoleSicklemaleAttributeDesc::default_instance_;
  delete E_RoleSicklemaleAttributeDesc_reflection_;
  delete E_RoleSicklemale::default_instance_;
  delete E_RoleSicklemale_reflection_;
  delete Sheet_RoleSicklemale::default_instance_;
  delete Sheet_RoleSicklemale_reflection_;
  delete E_RoleSicklefemaleAttributeDesc::default_instance_;
  delete E_RoleSicklefemaleAttributeDesc_reflection_;
  delete E_RoleSicklefemale::default_instance_;
  delete E_RoleSicklefemale_reflection_;
  delete Sheet_RoleSicklefemale::default_instance_;
  delete Sheet_RoleSicklefemale_reflection_;
  delete E_RoleSwordmaleAttributeDesc::default_instance_;
  delete E_RoleSwordmaleAttributeDesc_reflection_;
  delete E_RoleSwordmale::default_instance_;
  delete E_RoleSwordmale_reflection_;
  delete Sheet_RoleSwordmale::default_instance_;
  delete Sheet_RoleSwordmale_reflection_;
  delete E_RoleSwordfemaleAttributeDesc::default_instance_;
  delete E_RoleSwordfemaleAttributeDesc_reflection_;
  delete E_RoleSwordfemale::default_instance_;
  delete E_RoleSwordfemale_reflection_;
  delete Sheet_RoleSwordfemale::default_instance_;
  delete Sheet_RoleSwordfemale_reflection_;
  delete E_RoleTaidaomaleAttributeDesc::default_instance_;
  delete E_RoleTaidaomaleAttributeDesc_reflection_;
  delete E_RoleTaidaomale::default_instance_;
  delete E_RoleTaidaomale_reflection_;
  delete Sheet_RoleTaidaomale::default_instance_;
  delete Sheet_RoleTaidaomale_reflection_;
  delete E_RoleTaidaofemaleAttributeDesc::default_instance_;
  delete E_RoleTaidaofemaleAttributeDesc_reflection_;
  delete E_RoleTaidaofemale::default_instance_;
  delete E_RoleTaidaofemale_reflection_;
  delete Sheet_RoleTaidaofemale::default_instance_;
  delete Sheet_RoleTaidaofemale_reflection_;
  delete E_RoleExp::default_instance_;
  delete E_RoleExp_reflection_;
  delete Sheet_RoleExp::default_instance_;
  delete Sheet_RoleExp_reflection_;
  delete E_RoleSkilltype::default_instance_;
  delete E_RoleSkilltype_reflection_;
  delete Sheet_RoleSkilltype::default_instance_;
  delete Sheet_RoleSkilltype_reflection_;
  delete E_RoleAddskill::default_instance_;
  delete E_RoleAddskill_reflection_;
  delete Sheet_RoleAddskill::default_instance_;
  delete Sheet_RoleAddskill_reflection_;
  delete E_RoleWorldexp::default_instance_;
  delete E_RoleWorldexp_reflection_;
  delete Sheet_RoleWorldexp::default_instance_;
  delete Sheet_RoleWorldexp_reflection_;
}

void protobuf_AddDesc_E_5fRole_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014E_Role.proto\022\010proto_ff\032\025yd_fieldoption"
    "s.proto\"K\n\022E_RoleBornItemDesc\022\031\n\005m_num\030\001"
    " \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\032\n\006m_name\030\002 \001(\003B\n\302\377\024\006\345\220"
    "\215\347\247\260\"K\n\022E_RoleBornMailDesc\022\031\n\005m_num\030\001 \001("
    "\005B\n\302\377\024\006\346\225\260\351\207\217\022\032\n\006m_name\030\002 \001(\003B\n\302\377\024\006\345\220\215\347\247"
    "\260\"\270\016\n\nE_RoleBorn\022\036\n\010m_bornID\030\001 \001(\003B\014\302\377\024\010"
    "\344\270\273\351\224\256ID\022$\n\016m_professionID\030\002 \001(\005B\014\302\377\024\010\350\201"
    "\214\344\270\232ID\022.\n\020m_professionName\030\003 \001(\tB\024\302\377\024\014\350\201"
    "\214\344\270\232\345\220\215\347\247\260\220\301\024@\022)\n\013m_placement\030\004 \001(\tB\024\302\377\024"
    "\014\350\201\214\344\270\232\344\273\213\347\273\215\220\301\024@\022\034\n\010m_gender\030\005 \001(\005B\n\302\377\024"
    "\006\346\200\247\345\210\253\022%\n\013m_bornLevel\030\006 \001(\005B\020\302\377\024\014\345\207\272\347\224\237"
    "\347\255\211\347\272\247\022%\n\013m_bornTitle\030\007 \001(\005B\020\302\377\024\014\346\220\272\345\270\246\347"
    "\247\260\345\217\267\022#\n\tm_diamond\030\010 \001(\003B\020\302\377\024\014\346\220\272\345\270\246\351\222\273\347"
    "\237\263\022-\n\rm_bindDiamond\030\t \001(\003B\026\302\377\024\022\346\220\272\345\270\246\347\273\221"
    "\345\256\232\351\222\273\347\237\263\022 \n\006m_gold\030\n \001(\003B\020\302\377\024\014\346\220\272\345\270\246\351\207\221"
    "\345\270\201\022#\n\007m_mapID\030\013 \001(\003B\022\302\377\024\016\345\207\272\347\224\237\345\234\260\345\233\276ID"
    "\022%\n\013m_birthFace\030\014 \001(\005B\020\302\377\024\014\345\207\272\347\224\237\346\234\235\345\220\221\022"
    "%\n\007m_icons\030\r \001(\tB\024\302\377\024\014\345\244\264\345\203\217\345\233\276\346\240\207\220\301\024@\0220"
    "\n\014m_loginAvata\030\016 \001(\tB\032\302\377\024\022\345\210\233\350\247\222\347\225\214\351\235\242\346\250"
    "\241\345\236\213\220\301\024@\0225\n\013m_newweapon\030\017 \001(\tB \302\377\024\030\346\226\260\346\211"
    "\213\345\211\257\346\234\254\346\255\246\345\231\250\346\250\241\345\236\213\220\301\024@\0227\n\rm_newclothing"
    "\030\020 \001(\tB \302\377\024\030\346\226\260\346\211\213\345\211\257\346\234\254\350\241\243\346\234\215\346\250\241\345\236\213\220\301\024@"
    "\0224\n\rm_weaponAvata\030\021 \001(\tB\035\302\377\024\025\345\207\272\347\224\237\346\227\266\346\255"
    "\246\345\231\250\346\250\241\345\236\213\220\301\024@\022,\n\013m_roleAvata\030\022 \001(\tB\027\302\377\024"
    "\017\345\207\272\347\224\237\346\227\266\346\250\241\345\236\213\220\301\024@\022-\n\014m_marryAvata\030\023 \001"
    "(\tB\027\302\377\024\017\345\207\272\347\224\237\346\227\266\346\250\241\345\236\213\220\301\024@\022%\n\013m_hairCol"
    "or\030\024 \001(\005B\020\302\377\024\014\345\244\264\345\217\221\350\211\262\345\200\274\022(\n\016m_clothesC"
    "olor\030\025 \001(\005B\020\302\377\024\014\350\241\243\346\234\215\350\211\262\345\200\274\022%\n\013m_skinCo"
    "lor\030\026 \001(\005B\020\302\377\024\014\347\232\256\350\202\244\350\211\262\345\200\274\022(\n\016m_carryWe"
    "apons\030\027 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\346\255\246\345\231\250\022&\n\014m_carry"
    "Armor\030\030 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\350\241\243\346\234\215\022&\n\014m_carry"
    "Cloak\030\031 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\346\212\253\351\243\216\022&\n\014m_carry"
    "Shoes\030\032 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\351\236\213\345\255\220\022)\n\017m_carry"
    "Necklace\030\033 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\351\241\271\351\223\276\022\'\n\rm_ca"
    "rryAmulet\030\034 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\346\212\244\347\254\246\022\'\n\rm_c"
    "arryBracer\030\035 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\346\212\244\350\205\225\022%\n\013m_"
    "carryRing\030\036 \001(\003B\020\302\377\024\014\350\243\205\345\244\207\346\210\222\346\214\207\022;\n\025m_c"
    "arryFashionWeapons\030\037 \001(\003B\034\302\377\024\030\350\243\205\345\244\207\346\227\266\350"
    "\243\205\357\274\210\346\255\246\345\231\250\357\274\211\0229\n\023m_carryFashionArmor\030  "
    "\001(\003B\034\302\377\024\030\350\243\205\345\244\207\346\227\266\350\243\205\357\274\210\350\241\243\346\234\215\357\274\211\022 \n\014m_c"
    "arryWings\030! \001(\003B\n\302\377\024\006\347\277\205\350\206\200\022(\n\010m_mSpeed\030"
    "\" \001(\005B\026\302\377\024\022\345\210\235\345\247\213\347\247\273\345\212\250\351\200\237\345\272\246\022\032\n\006m_view\030"
    "# \001(\005B\n\302\377\024\006\350\247\206\351\207\216\022\"\n\010m_radius\030$ \001(\005B\020\302\377\024"
    "\014\344\272\272\347\211\251\345\215\212\345\276\204\022\036\n\007m_group\030% \001(\005B\r\302\377\024\t\346\212\200\350"
    "\203\275\347\273\204\022!\n\007m_sheny\030& \001(\003B\020\302\377\024\014\347\245\236\350\243\205\350\241\243\346\234\215"
    "\022!\n\007m_shenw\030\' \001(\003B\020\302\377\024\014\347\245\236\350\243\205\346\255\246\345\231\250\022%\n\tm"
    "_actBuff\030( \003(\005B\022\302\377\024\n\347\224\237\346\210\220buff\210\301\024\004\022(\n\nm_"
    "actSkill\030) \003(\003B\024\302\377\024\014\347\224\237\346\210\220\346\212\200\350\203\275\210\301\024\016\022B\n\006"
    "m_item\030* \003(\0132\034.proto_ff.E_RoleBornItemDe"
    "scB\024\302\377\024\014\350\203\214\345\214\205\347\211\251\345\223\201\210\301\024#\022B\n\006m_mail\030+ \003(\013"
    "2\034.proto_ff.E_RoleBornMailDescB\024\302\377\024\014\351\202\256\344"
    "\273\266\347\211\251\345\223\201\210\301\024\001\"E\n\016Sheet_RoleBorn\0223\n\017E_Role"
    "Born_List\030\001 \003(\0132\024.proto_ff.E_RoleBornB\004\210"
    "\301\024\020\"U\n\035E_RoleMastermaleAttributeDesc\022\030\n\007"
    "m_Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001(\005B\n"
    "\302\377\024\006\347\261\273\345\236\213\"\260\001\n\020E_RoleMastermale\022\036\n\004m_lv\030"
    "\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgradePoin"
    "t\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022L\n\013m_att"
    "ribute\030\003 \003(\0132\'.proto_ff.E_RoleMastermale"
    "AttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"X\n\024Sheet_R"
    "oleMastermale\022@\n\025E_RoleMastermale_List\030\001"
    " \003(\0132\032.proto_ff.E_RoleMastermaleB\005\210\301\024\200\020\""
    "W\n\037E_RoleMasterfemaleAttributeDesc\022\030\n\007m_"
    "Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001(\005B\n\302\377"
    "\024\006\347\261\273\345\236\213\"\264\001\n\022E_RoleMasterfemale\022\036\n\004m_lv\030"
    "\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgradePoin"
    "t\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022N\n\013m_att"
    "ribute\030\003 \003(\0132).proto_ff.E_RoleMasterfema"
    "leAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"^\n\026Sheet"
    "_RoleMasterfemale\022D\n\027E_RoleMasterfemale_"
    "List\030\001 \003(\0132\034.proto_ff.E_RoleMasterfemale"
    "B\005\210\301\024\200\020\"U\n\035E_RoleSicklemaleAttributeDesc"
    "\022\030\n\007m_Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001"
    "(\005B\n\302\377\024\006\347\261\273\345\236\213\"\260\001\n\020E_RoleSicklemale\022\036\n\004m"
    "_lv\030\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgrade"
    "Point\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022L\n\013m"
    "_attribute\030\003 \003(\0132\'.proto_ff.E_RoleSickle"
    "maleAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"X\n\024She"
    "et_RoleSicklemale\022@\n\025E_RoleSicklemale_Li"
    "st\030\001 \003(\0132\032.proto_ff.E_RoleSicklemaleB\005\210\301"
    "\024\200\020\"W\n\037E_RoleSicklefemaleAttributeDesc\022\030"
    "\n\007m_Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001(\005"
    "B\n\302\377\024\006\347\261\273\345\236\213\"\264\001\n\022E_RoleSicklefemale\022\036\n\004m"
    "_lv\030\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgrade"
    "Point\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022N\n\013m"
    "_attribute\030\003 \003(\0132).proto_ff.E_RoleSickle"
    "femaleAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"^\n\026S"
    "heet_RoleSicklefemale\022D\n\027E_RoleSicklefem"
    "ale_List\030\001 \003(\0132\034.proto_ff.E_RoleSicklefe"
    "maleB\005\210\301\024\200\020\"T\n\034E_RoleSwordmaleAttributeD"
    "esc\022\030\n\007m_Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030"
    "\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\256\001\n\017E_RoleSwordmale\022\036\n"
    "\004m_lv\030\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgra"
    "dePoint\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022K\n"
    "\013m_attribute\030\003 \003(\0132&.proto_ff.E_RoleSwor"
    "dmaleAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"U\n\023Sh"
    "eet_RoleSwordmale\022>\n\024E_RoleSwordmale_Lis"
    "t\030\001 \003(\0132\031.proto_ff.E_RoleSwordmaleB\005\210\301\024\200"
    "\020\"V\n\036E_RoleSwordfemaleAttributeDesc\022\030\n\007m"
    "_Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001(\005B\n\302"
    "\377\024\006\347\261\273\345\236\213\"\262\001\n\021E_RoleSwordfemale\022\036\n\004m_lv\030"
    "\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgradePoin"
    "t\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022M\n\013m_att"
    "ribute\030\003 \003(\0132(.proto_ff.E_RoleSwordfemal"
    "eAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"[\n\025Sheet_"
    "RoleSwordfemale\022B\n\026E_RoleSwordfemale_Lis"
    "t\030\001 \003(\0132\033.proto_ff.E_RoleSwordfemaleB\005\210\301"
    "\024\200\020\"U\n\035E_RoleTaidaomaleAttributeDesc\022\030\n\007"
    "m_Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001(\005B\n"
    "\302\377\024\006\347\261\273\345\236\213\"\260\001\n\020E_RoleTaidaomale\022\036\n\004m_lv\030"
    "\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgradePoin"
    "t\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022L\n\013m_att"
    "ribute\030\003 \003(\0132\'.proto_ff.E_RoleTaidaomale"
    "AttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"X\n\024Sheet_R"
    "oleTaidaomale\022@\n\025E_RoleTaidaomale_List\030\001"
    " \003(\0132\032.proto_ff.E_RoleTaidaomaleB\005\210\301\024\200\020\""
    "W\n\037E_RoleTaidaofemaleAttributeDesc\022\030\n\007m_"
    "Value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_Type\030\002 \001(\005B\n\302\377"
    "\024\006\347\261\273\345\236\213\"\264\001\n\022E_RoleTaidaofemale\022\036\n\004m_lv\030"
    "\001 \001(\005B\020\302\377\024\014\347\216\251\345\256\266\347\255\211\347\272\247\022.\n\016m_upgradePoin"
    "t\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\350\216\267\345\276\227\347\202\271\346\225\260\022N\n\013m_att"
    "ribute\030\003 \003(\0132).proto_ff.E_RoleTaidaofema"
    "leAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024F\"^\n\026Sheet"
    "_RoleTaidaofemale\022D\n\027E_RoleTaidaofemale_"
    "List\030\001 \003(\0132\034.proto_ff.E_RoleTaidaofemale"
    "B\005\210\301\024\200\020\"\255\004\n\tE_RoleExp\022\030\n\004m_lv\030\001 \001(\005B\n\302\377\024"
    "\006\347\255\211\347\272\247\0221\n\005m_exp\030\002 \001(\003B\"\302\377\024\036\345\275\223\345\211\215\347\255\211\347\272\247"
    "\345\215\207\347\272\247\351\234\200\350\246\201\347\273\217\351\252\214\022#\n\014m_skillPoint\030\003 \001(\005"
    "B\r\302\377\024\t\345\244\251\350\265\213\347\202\271\022=\n\021m_prepareModeDexp\030\004 \001"
    "(\005B\"\302\377\024\036\346\264\273\345\212\250\347\216\251\346\263\225\345\234\272\345\234\260\345\212\250\346\200\201\347\273\217\351\252\214\022!"
    "\n\nm_fengshen\030\005 \001(\005B\r\302\377\024\t\345\260\201\347\245\236\345\217\260\022\037\n\005m_p"
    "et\030\006 \001(\005B\020\302\377\024\014\345\256\240\347\211\251\345\211\257\346\234\254\022\037\n\010m_dragon\030\007"
    " \001(\005B\r\302\377\024\t\345\205\273\351\276\231\345\257\272\022!\n\007m_equip\030\010 \001(\005B\020\302\377"
    "\024\014\350\243\205\345\244\207\345\211\257\346\234\254\022\036\n\007m_arena\030\t \001(\005B\r\302\377\024\t\347\253\236"
    "\346\212\200\345\234\272\022\034\n\006m_solo\030\n \001(\005B\014\302\377\024\010\345\215\225\344\272\272pk\022$\n\r"
    "m_multiBattle\030\013 \001(\005B\r\302\377\024\t\344\270\211\344\272\272\347\273\204\022#\n\tm_"
    "qingyun\030\014 \001(\005B\020\302\377\024\014\351\235\222\344\272\221\344\271\213\345\267\205\022\034\n\010m_yao"
    "chi\030\r \001(\005B\n\302\377\024\006\347\221\266\346\261\240\022\035\n\tm_wedding\030\016 \001(\005"
    "B\n\302\377\024\006\345\251\232\347\244\274\022!\n\007m_bagua\030\017 \001(\005B\020\302\377\024\014\345\205\253\345\215"
    "\246\350\277\267\351\230\265\"C\n\rSheet_RoleExp\0222\n\016E_RoleExp_Li"
    "st\030\001 \003(\0132\023.proto_ff.E_RoleExpB\005\210\301\024\200\020\"Y\n\017"
    "E_RoleSkilltype\022\037\n\tm_skillId\030\001 \001(\003B\014\302\377\024\010"
    "\346\212\200\350\203\275ID\022%\n\013m_skillType\030\002 \001(\005B\020\302\377\024\014\346\212\200\350\203"
    "\275\347\261\273\345\236\213\"U\n\023Sheet_RoleSkilltype\022>\n\024E_Role"
    "Skilltype_List\030\001 \003(\0132\031.proto_ff.E_RoleSk"
    "illtypeB\005\210\301\024\200\001\"K\n\016E_RoleAddskill\022\024\n\004m_Id"
    "\030\001 \001(\005B\006\302\377\024\002ID\022#\n\tm_skillId\030\002 \001(\003B\020\302\377\024\014\346"
    "\212\200\350\203\275\347\261\273\345\236\213\"Q\n\022Sheet_RoleAddskill\022;\n\023E_R"
    "oleAddskill_List\030\001 \003(\0132\030.proto_ff.E_Role"
    "AddskillB\004\210\301\024\002\"S\n\016E_RoleWorldexp\022\033\n\004m_lv"
    "\030\001 \001(\003B\r\302\377\024\t\347\255\211\347\272\247\345\267\256\022$\n\nm_worldExp\030\002 \001("
    "\005B\020\302\377\024\014\347\273\217\351\252\214\345\212\240\346\210\220\"R\n\022Sheet_RoleWorldex"
    "p\022<\n\023E_RoleWorldexp_List\030\001 \003(\0132\030.proto_f"
    "f.E_RoleWorldexpB\005\210\301\024\200\004", 6143);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Role.proto", &protobuf_RegisterTypes);
  E_RoleBornItemDesc::default_instance_ = new E_RoleBornItemDesc();
  E_RoleBornMailDesc::default_instance_ = new E_RoleBornMailDesc();
  E_RoleBorn::default_instance_ = new E_RoleBorn();
  Sheet_RoleBorn::default_instance_ = new Sheet_RoleBorn();
  E_RoleMastermaleAttributeDesc::default_instance_ = new E_RoleMastermaleAttributeDesc();
  E_RoleMastermale::default_instance_ = new E_RoleMastermale();
  Sheet_RoleMastermale::default_instance_ = new Sheet_RoleMastermale();
  E_RoleMasterfemaleAttributeDesc::default_instance_ = new E_RoleMasterfemaleAttributeDesc();
  E_RoleMasterfemale::default_instance_ = new E_RoleMasterfemale();
  Sheet_RoleMasterfemale::default_instance_ = new Sheet_RoleMasterfemale();
  E_RoleSicklemaleAttributeDesc::default_instance_ = new E_RoleSicklemaleAttributeDesc();
  E_RoleSicklemale::default_instance_ = new E_RoleSicklemale();
  Sheet_RoleSicklemale::default_instance_ = new Sheet_RoleSicklemale();
  E_RoleSicklefemaleAttributeDesc::default_instance_ = new E_RoleSicklefemaleAttributeDesc();
  E_RoleSicklefemale::default_instance_ = new E_RoleSicklefemale();
  Sheet_RoleSicklefemale::default_instance_ = new Sheet_RoleSicklefemale();
  E_RoleSwordmaleAttributeDesc::default_instance_ = new E_RoleSwordmaleAttributeDesc();
  E_RoleSwordmale::default_instance_ = new E_RoleSwordmale();
  Sheet_RoleSwordmale::default_instance_ = new Sheet_RoleSwordmale();
  E_RoleSwordfemaleAttributeDesc::default_instance_ = new E_RoleSwordfemaleAttributeDesc();
  E_RoleSwordfemale::default_instance_ = new E_RoleSwordfemale();
  Sheet_RoleSwordfemale::default_instance_ = new Sheet_RoleSwordfemale();
  E_RoleTaidaomaleAttributeDesc::default_instance_ = new E_RoleTaidaomaleAttributeDesc();
  E_RoleTaidaomale::default_instance_ = new E_RoleTaidaomale();
  Sheet_RoleTaidaomale::default_instance_ = new Sheet_RoleTaidaomale();
  E_RoleTaidaofemaleAttributeDesc::default_instance_ = new E_RoleTaidaofemaleAttributeDesc();
  E_RoleTaidaofemale::default_instance_ = new E_RoleTaidaofemale();
  Sheet_RoleTaidaofemale::default_instance_ = new Sheet_RoleTaidaofemale();
  E_RoleExp::default_instance_ = new E_RoleExp();
  Sheet_RoleExp::default_instance_ = new Sheet_RoleExp();
  E_RoleSkilltype::default_instance_ = new E_RoleSkilltype();
  Sheet_RoleSkilltype::default_instance_ = new Sheet_RoleSkilltype();
  E_RoleAddskill::default_instance_ = new E_RoleAddskill();
  Sheet_RoleAddskill::default_instance_ = new Sheet_RoleAddskill();
  E_RoleWorldexp::default_instance_ = new E_RoleWorldexp();
  Sheet_RoleWorldexp::default_instance_ = new Sheet_RoleWorldexp();
  E_RoleBornItemDesc::default_instance_->InitAsDefaultInstance();
  E_RoleBornMailDesc::default_instance_->InitAsDefaultInstance();
  E_RoleBorn::default_instance_->InitAsDefaultInstance();
  Sheet_RoleBorn::default_instance_->InitAsDefaultInstance();
  E_RoleMastermaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleMastermale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleMastermale::default_instance_->InitAsDefaultInstance();
  E_RoleMasterfemaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleMasterfemale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleMasterfemale::default_instance_->InitAsDefaultInstance();
  E_RoleSicklemaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleSicklemale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleSicklemale::default_instance_->InitAsDefaultInstance();
  E_RoleSicklefemaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleSicklefemale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleSicklefemale::default_instance_->InitAsDefaultInstance();
  E_RoleSwordmaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleSwordmale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleSwordmale::default_instance_->InitAsDefaultInstance();
  E_RoleSwordfemaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleSwordfemale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleSwordfemale::default_instance_->InitAsDefaultInstance();
  E_RoleTaidaomaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleTaidaomale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleTaidaomale::default_instance_->InitAsDefaultInstance();
  E_RoleTaidaofemaleAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_RoleTaidaofemale::default_instance_->InitAsDefaultInstance();
  Sheet_RoleTaidaofemale::default_instance_->InitAsDefaultInstance();
  E_RoleExp::default_instance_->InitAsDefaultInstance();
  Sheet_RoleExp::default_instance_->InitAsDefaultInstance();
  E_RoleSkilltype::default_instance_->InitAsDefaultInstance();
  Sheet_RoleSkilltype::default_instance_->InitAsDefaultInstance();
  E_RoleAddskill::default_instance_->InitAsDefaultInstance();
  Sheet_RoleAddskill::default_instance_->InitAsDefaultInstance();
  E_RoleWorldexp::default_instance_->InitAsDefaultInstance();
  Sheet_RoleWorldexp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fRole_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fRole_2eproto {
  StaticDescriptorInitializer_E_5fRole_2eproto() {
    protobuf_AddDesc_E_5fRole_2eproto();
  }
} static_descriptor_initializer_E_5fRole_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_RoleBornItemDesc::kMNumFieldNumber;
const int E_RoleBornItemDesc::kMNameFieldNumber;
#endif  // !_MSC_VER

E_RoleBornItemDesc::E_RoleBornItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleBornItemDesc::InitAsDefaultInstance() {
}

E_RoleBornItemDesc::E_RoleBornItemDesc(const E_RoleBornItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleBornItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_name_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleBornItemDesc::~E_RoleBornItemDesc() {
  SharedDtor();
}

void E_RoleBornItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleBornItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleBornItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleBornItemDesc_descriptor_;
}

const E_RoleBornItemDesc& E_RoleBornItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleBornItemDesc* E_RoleBornItemDesc::default_instance_ = NULL;

E_RoleBornItemDesc* E_RoleBornItemDesc::New() const {
  return new E_RoleBornItemDesc;
}

void E_RoleBornItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_name_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleBornItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_name;
        break;
      }

      // optional int64 m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_name:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_name_)));
          set_has_m_name();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleBornItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleBornItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_name = 2;
  if (has_m_name()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleBornItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleBornItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleBornItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleBornItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleBornItemDesc::MergeFrom(const E_RoleBornItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleBornItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleBornItemDesc::CopyFrom(const E_RoleBornItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleBornItemDesc::IsInitialized() const {

  return true;
}

void E_RoleBornItemDesc::Swap(E_RoleBornItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_name_, other->m_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleBornItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleBornItemDesc_descriptor_;
  metadata.reflection = E_RoleBornItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleBornMailDesc::kMNumFieldNumber;
const int E_RoleBornMailDesc::kMNameFieldNumber;
#endif  // !_MSC_VER

E_RoleBornMailDesc::E_RoleBornMailDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleBornMailDesc::InitAsDefaultInstance() {
}

E_RoleBornMailDesc::E_RoleBornMailDesc(const E_RoleBornMailDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleBornMailDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_name_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleBornMailDesc::~E_RoleBornMailDesc() {
  SharedDtor();
}

void E_RoleBornMailDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleBornMailDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleBornMailDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleBornMailDesc_descriptor_;
}

const E_RoleBornMailDesc& E_RoleBornMailDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleBornMailDesc* E_RoleBornMailDesc::default_instance_ = NULL;

E_RoleBornMailDesc* E_RoleBornMailDesc::New() const {
  return new E_RoleBornMailDesc;
}

void E_RoleBornMailDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_name_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleBornMailDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_name;
        break;
      }

      // optional int64 m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_name:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_name_)));
          set_has_m_name();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleBornMailDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleBornMailDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_name = 2;
  if (has_m_name()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleBornMailDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleBornMailDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleBornMailDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleBornMailDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleBornMailDesc::MergeFrom(const E_RoleBornMailDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleBornMailDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleBornMailDesc::CopyFrom(const E_RoleBornMailDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleBornMailDesc::IsInitialized() const {

  return true;
}

void E_RoleBornMailDesc::Swap(E_RoleBornMailDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_name_, other->m_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleBornMailDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleBornMailDesc_descriptor_;
  metadata.reflection = E_RoleBornMailDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleBorn::kMBornIDFieldNumber;
const int E_RoleBorn::kMProfessionIDFieldNumber;
const int E_RoleBorn::kMProfessionNameFieldNumber;
const int E_RoleBorn::kMPlacementFieldNumber;
const int E_RoleBorn::kMGenderFieldNumber;
const int E_RoleBorn::kMBornLevelFieldNumber;
const int E_RoleBorn::kMBornTitleFieldNumber;
const int E_RoleBorn::kMDiamondFieldNumber;
const int E_RoleBorn::kMBindDiamondFieldNumber;
const int E_RoleBorn::kMGoldFieldNumber;
const int E_RoleBorn::kMMapIDFieldNumber;
const int E_RoleBorn::kMBirthFaceFieldNumber;
const int E_RoleBorn::kMIconsFieldNumber;
const int E_RoleBorn::kMLoginAvataFieldNumber;
const int E_RoleBorn::kMNewweaponFieldNumber;
const int E_RoleBorn::kMNewclothingFieldNumber;
const int E_RoleBorn::kMWeaponAvataFieldNumber;
const int E_RoleBorn::kMRoleAvataFieldNumber;
const int E_RoleBorn::kMMarryAvataFieldNumber;
const int E_RoleBorn::kMHairColorFieldNumber;
const int E_RoleBorn::kMClothesColorFieldNumber;
const int E_RoleBorn::kMSkinColorFieldNumber;
const int E_RoleBorn::kMCarryWeaponsFieldNumber;
const int E_RoleBorn::kMCarryArmorFieldNumber;
const int E_RoleBorn::kMCarryCloakFieldNumber;
const int E_RoleBorn::kMCarryShoesFieldNumber;
const int E_RoleBorn::kMCarryNecklaceFieldNumber;
const int E_RoleBorn::kMCarryAmuletFieldNumber;
const int E_RoleBorn::kMCarryBracerFieldNumber;
const int E_RoleBorn::kMCarryRingFieldNumber;
const int E_RoleBorn::kMCarryFashionWeaponsFieldNumber;
const int E_RoleBorn::kMCarryFashionArmorFieldNumber;
const int E_RoleBorn::kMCarryWingsFieldNumber;
const int E_RoleBorn::kMMSpeedFieldNumber;
const int E_RoleBorn::kMViewFieldNumber;
const int E_RoleBorn::kMRadiusFieldNumber;
const int E_RoleBorn::kMGroupFieldNumber;
const int E_RoleBorn::kMShenyFieldNumber;
const int E_RoleBorn::kMShenwFieldNumber;
const int E_RoleBorn::kMActBuffFieldNumber;
const int E_RoleBorn::kMActSkillFieldNumber;
const int E_RoleBorn::kMItemFieldNumber;
const int E_RoleBorn::kMMailFieldNumber;
#endif  // !_MSC_VER

E_RoleBorn::E_RoleBorn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleBorn::InitAsDefaultInstance() {
}

E_RoleBorn::E_RoleBorn(const E_RoleBorn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleBorn::SharedCtor() {
  _cached_size_ = 0;
  m_bornid_ = GOOGLE_LONGLONG(0);
  m_professionid_ = 0;
  m_professionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_placement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_gender_ = 0;
  m_bornlevel_ = 0;
  m_borntitle_ = 0;
  m_diamond_ = GOOGLE_LONGLONG(0);
  m_binddiamond_ = GOOGLE_LONGLONG(0);
  m_gold_ = GOOGLE_LONGLONG(0);
  m_mapid_ = GOOGLE_LONGLONG(0);
  m_birthface_ = 0;
  m_icons_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_loginavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_newweapon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_newclothing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_weaponavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_roleavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_marryavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_haircolor_ = 0;
  m_clothescolor_ = 0;
  m_skincolor_ = 0;
  m_carryweapons_ = GOOGLE_LONGLONG(0);
  m_carryarmor_ = GOOGLE_LONGLONG(0);
  m_carrycloak_ = GOOGLE_LONGLONG(0);
  m_carryshoes_ = GOOGLE_LONGLONG(0);
  m_carrynecklace_ = GOOGLE_LONGLONG(0);
  m_carryamulet_ = GOOGLE_LONGLONG(0);
  m_carrybracer_ = GOOGLE_LONGLONG(0);
  m_carryring_ = GOOGLE_LONGLONG(0);
  m_carryfashionweapons_ = GOOGLE_LONGLONG(0);
  m_carryfashionarmor_ = GOOGLE_LONGLONG(0);
  m_carrywings_ = GOOGLE_LONGLONG(0);
  m_mspeed_ = 0;
  m_view_ = 0;
  m_radius_ = 0;
  m_group_ = 0;
  m_sheny_ = GOOGLE_LONGLONG(0);
  m_shenw_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleBorn::~E_RoleBorn() {
  SharedDtor();
}

void E_RoleBorn::SharedDtor() {
  if (m_professionname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_professionname_;
  }
  if (m_placement_ != &::google::protobuf::internal::kEmptyString) {
    delete m_placement_;
  }
  if (m_icons_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icons_;
  }
  if (m_loginavata_ != &::google::protobuf::internal::kEmptyString) {
    delete m_loginavata_;
  }
  if (m_newweapon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_newweapon_;
  }
  if (m_newclothing_ != &::google::protobuf::internal::kEmptyString) {
    delete m_newclothing_;
  }
  if (m_weaponavata_ != &::google::protobuf::internal::kEmptyString) {
    delete m_weaponavata_;
  }
  if (m_roleavata_ != &::google::protobuf::internal::kEmptyString) {
    delete m_roleavata_;
  }
  if (m_marryavata_ != &::google::protobuf::internal::kEmptyString) {
    delete m_marryavata_;
  }
  if (this != default_instance_) {
  }
}

void E_RoleBorn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleBorn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleBorn_descriptor_;
}

const E_RoleBorn& E_RoleBorn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleBorn* E_RoleBorn::default_instance_ = NULL;

E_RoleBorn* E_RoleBorn::New() const {
  return new E_RoleBorn;
}

void E_RoleBorn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_bornid_ = GOOGLE_LONGLONG(0);
    m_professionid_ = 0;
    if (has_m_professionname()) {
      if (m_professionname_ != &::google::protobuf::internal::kEmptyString) {
        m_professionname_->clear();
      }
    }
    if (has_m_placement()) {
      if (m_placement_ != &::google::protobuf::internal::kEmptyString) {
        m_placement_->clear();
      }
    }
    m_gender_ = 0;
    m_bornlevel_ = 0;
    m_borntitle_ = 0;
    m_diamond_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_binddiamond_ = GOOGLE_LONGLONG(0);
    m_gold_ = GOOGLE_LONGLONG(0);
    m_mapid_ = GOOGLE_LONGLONG(0);
    m_birthface_ = 0;
    if (has_m_icons()) {
      if (m_icons_ != &::google::protobuf::internal::kEmptyString) {
        m_icons_->clear();
      }
    }
    if (has_m_loginavata()) {
      if (m_loginavata_ != &::google::protobuf::internal::kEmptyString) {
        m_loginavata_->clear();
      }
    }
    if (has_m_newweapon()) {
      if (m_newweapon_ != &::google::protobuf::internal::kEmptyString) {
        m_newweapon_->clear();
      }
    }
    if (has_m_newclothing()) {
      if (m_newclothing_ != &::google::protobuf::internal::kEmptyString) {
        m_newclothing_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_m_weaponavata()) {
      if (m_weaponavata_ != &::google::protobuf::internal::kEmptyString) {
        m_weaponavata_->clear();
      }
    }
    if (has_m_roleavata()) {
      if (m_roleavata_ != &::google::protobuf::internal::kEmptyString) {
        m_roleavata_->clear();
      }
    }
    if (has_m_marryavata()) {
      if (m_marryavata_ != &::google::protobuf::internal::kEmptyString) {
        m_marryavata_->clear();
      }
    }
    m_haircolor_ = 0;
    m_clothescolor_ = 0;
    m_skincolor_ = 0;
    m_carryweapons_ = GOOGLE_LONGLONG(0);
    m_carryarmor_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    m_carrycloak_ = GOOGLE_LONGLONG(0);
    m_carryshoes_ = GOOGLE_LONGLONG(0);
    m_carrynecklace_ = GOOGLE_LONGLONG(0);
    m_carryamulet_ = GOOGLE_LONGLONG(0);
    m_carrybracer_ = GOOGLE_LONGLONG(0);
    m_carryring_ = GOOGLE_LONGLONG(0);
    m_carryfashionweapons_ = GOOGLE_LONGLONG(0);
    m_carryfashionarmor_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    m_carrywings_ = GOOGLE_LONGLONG(0);
    m_mspeed_ = 0;
    m_view_ = 0;
    m_radius_ = 0;
    m_group_ = 0;
    m_sheny_ = GOOGLE_LONGLONG(0);
    m_shenw_ = GOOGLE_LONGLONG(0);
  }
  m_actbuff_.Clear();
  m_actskill_.Clear();
  m_item_.Clear();
  m_mail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleBorn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_bornID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_bornid_)));
          set_has_m_bornid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_professionID;
        break;
      }

      // optional int32 m_professionID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_professionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_professionid_)));
          set_has_m_professionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_professionName;
        break;
      }

      // optional string m_professionName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_professionName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_professionname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_professionname().data(), this->m_professionname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_placement;
        break;
      }

      // optional string m_placement = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_placement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_placement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_placement().data(), this->m_placement().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_gender;
        break;
      }

      // optional int32 m_gender = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gender_)));
          set_has_m_gender();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_bornLevel;
        break;
      }

      // optional int32 m_bornLevel = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bornLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bornlevel_)));
          set_has_m_bornlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_bornTitle;
        break;
      }

      // optional int32 m_bornTitle = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bornTitle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_borntitle_)));
          set_has_m_borntitle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_diamond;
        break;
      }

      // optional int64 m_diamond = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_diamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_diamond_)));
          set_has_m_diamond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_bindDiamond;
        break;
      }

      // optional int64 m_bindDiamond = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bindDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_binddiamond_)));
          set_has_m_binddiamond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_gold;
        break;
      }

      // optional int64 m_gold = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_gold_)));
          set_has_m_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_mapID;
        break;
      }

      // optional int64 m_mapID = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mapID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_mapid_)));
          set_has_m_mapid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_birthFace;
        break;
      }

      // optional int32 m_birthFace = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_birthFace:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_birthface_)));
          set_has_m_birthface();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_icons;
        break;
      }

      // optional string m_icons = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_icons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icons()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icons().data(), this->m_icons().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_loginAvata;
        break;
      }

      // optional string m_loginAvata = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_loginAvata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_loginavata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_loginavata().data(), this->m_loginavata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_m_newweapon;
        break;
      }

      // optional string m_newweapon = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_newweapon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_newweapon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_newweapon().data(), this->m_newweapon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_m_newclothing;
        break;
      }

      // optional string m_newclothing = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_newclothing:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_newclothing()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_newclothing().data(), this->m_newclothing().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_m_weaponAvata;
        break;
      }

      // optional string m_weaponAvata = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_weaponAvata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_weaponavata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_weaponavata().data(), this->m_weaponavata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_roleAvata;
        break;
      }

      // optional string m_roleAvata = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_roleAvata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_roleavata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_roleavata().data(), this->m_roleavata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_m_marryAvata;
        break;
      }

      // optional string m_marryAvata = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_marryAvata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_marryavata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_marryavata().data(), this->m_marryavata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_m_hairColor;
        break;
      }

      // optional int32 m_hairColor = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_hairColor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_haircolor_)));
          set_has_m_haircolor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_m_clothesColor;
        break;
      }

      // optional int32 m_clothesColor = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_clothesColor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_clothescolor_)));
          set_has_m_clothescolor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_m_skinColor;
        break;
      }

      // optional int32 m_skinColor = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skinColor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skincolor_)));
          set_has_m_skincolor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_m_carryWeapons;
        break;
      }

      // optional int64 m_carryWeapons = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryWeapons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryweapons_)));
          set_has_m_carryweapons();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_m_carryArmor;
        break;
      }

      // optional int64 m_carryArmor = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryArmor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryarmor_)));
          set_has_m_carryarmor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_m_carryCloak;
        break;
      }

      // optional int64 m_carryCloak = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryCloak:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carrycloak_)));
          set_has_m_carrycloak();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_m_carryShoes;
        break;
      }

      // optional int64 m_carryShoes = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryShoes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryshoes_)));
          set_has_m_carryshoes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_m_carryNecklace;
        break;
      }

      // optional int64 m_carryNecklace = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryNecklace:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carrynecklace_)));
          set_has_m_carrynecklace();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_m_carryAmulet;
        break;
      }

      // optional int64 m_carryAmulet = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryAmulet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryamulet_)));
          set_has_m_carryamulet();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_m_carryBracer;
        break;
      }

      // optional int64 m_carryBracer = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryBracer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carrybracer_)));
          set_has_m_carrybracer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_m_carryRing;
        break;
      }

      // optional int64 m_carryRing = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryRing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryring_)));
          set_has_m_carryring();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_m_carryFashionWeapons;
        break;
      }

      // optional int64 m_carryFashionWeapons = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryFashionWeapons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryfashionweapons_)));
          set_has_m_carryfashionweapons();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_m_carryFashionArmor;
        break;
      }

      // optional int64 m_carryFashionArmor = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryFashionArmor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carryfashionarmor_)));
          set_has_m_carryfashionarmor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_m_carryWings;
        break;
      }

      // optional int64 m_carryWings = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_carryWings:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_carrywings_)));
          set_has_m_carrywings();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_m_mSpeed;
        break;
      }

      // optional int32 m_mSpeed = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mspeed_)));
          set_has_m_mspeed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_m_view;
        break;
      }

      // optional int32 m_view = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_view:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_view_)));
          set_has_m_view();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_m_radius;
        break;
      }

      // optional int32 m_radius = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_radius_)));
          set_has_m_radius();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_m_group;
        break;
      }

      // optional int32 m_group = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_)));
          set_has_m_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_m_sheny;
        break;
      }

      // optional int64 m_sheny = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_sheny:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_sheny_)));
          set_has_m_sheny();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_m_shenw;
        break;
      }

      // optional int64 m_shenw = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_shenw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_shenw_)));
          set_has_m_shenw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_m_actBuff;
        break;
      }

      // repeated int32 m_actBuff = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_actBuff:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 320, input, this->mutable_m_actbuff())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_actbuff())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_m_actBuff;
        if (input->ExpectTag(328)) goto parse_m_actSkill;
        break;
      }

      // repeated int64 m_actSkill = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_actSkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 328, input, this->mutable_m_actskill())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_m_actskill())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_m_actSkill;
        if (input->ExpectTag(338)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_RoleBornItemDesc m_item = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(338)) goto parse_m_item;
        if (input->ExpectTag(346)) goto parse_m_mail;
        break;
      }

      // repeated .proto_ff.E_RoleBornMailDesc m_mail = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_mail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(346)) goto parse_m_mail;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleBorn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_bornID = 1;
  if (has_m_bornid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_bornid(), output);
  }

  // optional int32 m_professionID = 2;
  if (has_m_professionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_professionid(), output);
  }

  // optional string m_professionName = 3;
  if (has_m_professionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_professionname().data(), this->m_professionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_professionname(), output);
  }

  // optional string m_placement = 4;
  if (has_m_placement()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_placement().data(), this->m_placement().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_placement(), output);
  }

  // optional int32 m_gender = 5;
  if (has_m_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_gender(), output);
  }

  // optional int32 m_bornLevel = 6;
  if (has_m_bornlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_bornlevel(), output);
  }

  // optional int32 m_bornTitle = 7;
  if (has_m_borntitle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_borntitle(), output);
  }

  // optional int64 m_diamond = 8;
  if (has_m_diamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->m_diamond(), output);
  }

  // optional int64 m_bindDiamond = 9;
  if (has_m_binddiamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->m_binddiamond(), output);
  }

  // optional int64 m_gold = 10;
  if (has_m_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->m_gold(), output);
  }

  // optional int64 m_mapID = 11;
  if (has_m_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->m_mapid(), output);
  }

  // optional int32 m_birthFace = 12;
  if (has_m_birthface()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_birthface(), output);
  }

  // optional string m_icons = 13;
  if (has_m_icons()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icons().data(), this->m_icons().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->m_icons(), output);
  }

  // optional string m_loginAvata = 14;
  if (has_m_loginavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_loginavata().data(), this->m_loginavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->m_loginavata(), output);
  }

  // optional string m_newweapon = 15;
  if (has_m_newweapon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_newweapon().data(), this->m_newweapon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->m_newweapon(), output);
  }

  // optional string m_newclothing = 16;
  if (has_m_newclothing()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_newclothing().data(), this->m_newclothing().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->m_newclothing(), output);
  }

  // optional string m_weaponAvata = 17;
  if (has_m_weaponavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_weaponavata().data(), this->m_weaponavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->m_weaponavata(), output);
  }

  // optional string m_roleAvata = 18;
  if (has_m_roleavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_roleavata().data(), this->m_roleavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->m_roleavata(), output);
  }

  // optional string m_marryAvata = 19;
  if (has_m_marryavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_marryavata().data(), this->m_marryavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->m_marryavata(), output);
  }

  // optional int32 m_hairColor = 20;
  if (has_m_haircolor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->m_haircolor(), output);
  }

  // optional int32 m_clothesColor = 21;
  if (has_m_clothescolor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->m_clothescolor(), output);
  }

  // optional int32 m_skinColor = 22;
  if (has_m_skincolor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->m_skincolor(), output);
  }

  // optional int64 m_carryWeapons = 23;
  if (has_m_carryweapons()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->m_carryweapons(), output);
  }

  // optional int64 m_carryArmor = 24;
  if (has_m_carryarmor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->m_carryarmor(), output);
  }

  // optional int64 m_carryCloak = 25;
  if (has_m_carrycloak()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->m_carrycloak(), output);
  }

  // optional int64 m_carryShoes = 26;
  if (has_m_carryshoes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->m_carryshoes(), output);
  }

  // optional int64 m_carryNecklace = 27;
  if (has_m_carrynecklace()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->m_carrynecklace(), output);
  }

  // optional int64 m_carryAmulet = 28;
  if (has_m_carryamulet()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->m_carryamulet(), output);
  }

  // optional int64 m_carryBracer = 29;
  if (has_m_carrybracer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(29, this->m_carrybracer(), output);
  }

  // optional int64 m_carryRing = 30;
  if (has_m_carryring()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->m_carryring(), output);
  }

  // optional int64 m_carryFashionWeapons = 31;
  if (has_m_carryfashionweapons()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(31, this->m_carryfashionweapons(), output);
  }

  // optional int64 m_carryFashionArmor = 32;
  if (has_m_carryfashionarmor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(32, this->m_carryfashionarmor(), output);
  }

  // optional int64 m_carryWings = 33;
  if (has_m_carrywings()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(33, this->m_carrywings(), output);
  }

  // optional int32 m_mSpeed = 34;
  if (has_m_mspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->m_mspeed(), output);
  }

  // optional int32 m_view = 35;
  if (has_m_view()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->m_view(), output);
  }

  // optional int32 m_radius = 36;
  if (has_m_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->m_radius(), output);
  }

  // optional int32 m_group = 37;
  if (has_m_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->m_group(), output);
  }

  // optional int64 m_sheny = 38;
  if (has_m_sheny()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(38, this->m_sheny(), output);
  }

  // optional int64 m_shenw = 39;
  if (has_m_shenw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(39, this->m_shenw(), output);
  }

  // repeated int32 m_actBuff = 40;
  for (int i = 0; i < this->m_actbuff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      40, this->m_actbuff(i), output);
  }

  // repeated int64 m_actSkill = 41;
  for (int i = 0; i < this->m_actskill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      41, this->m_actskill(i), output);
  }

  // repeated .proto_ff.E_RoleBornItemDesc m_item = 42;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->m_item(i), output);
  }

  // repeated .proto_ff.E_RoleBornMailDesc m_mail = 43;
  for (int i = 0; i < this->m_mail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->m_mail(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleBorn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_bornID = 1;
  if (has_m_bornid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_bornid(), target);
  }

  // optional int32 m_professionID = 2;
  if (has_m_professionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_professionid(), target);
  }

  // optional string m_professionName = 3;
  if (has_m_professionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_professionname().data(), this->m_professionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_professionname(), target);
  }

  // optional string m_placement = 4;
  if (has_m_placement()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_placement().data(), this->m_placement().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_placement(), target);
  }

  // optional int32 m_gender = 5;
  if (has_m_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_gender(), target);
  }

  // optional int32 m_bornLevel = 6;
  if (has_m_bornlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_bornlevel(), target);
  }

  // optional int32 m_bornTitle = 7;
  if (has_m_borntitle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_borntitle(), target);
  }

  // optional int64 m_diamond = 8;
  if (has_m_diamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->m_diamond(), target);
  }

  // optional int64 m_bindDiamond = 9;
  if (has_m_binddiamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->m_binddiamond(), target);
  }

  // optional int64 m_gold = 10;
  if (has_m_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->m_gold(), target);
  }

  // optional int64 m_mapID = 11;
  if (has_m_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->m_mapid(), target);
  }

  // optional int32 m_birthFace = 12;
  if (has_m_birthface()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_birthface(), target);
  }

  // optional string m_icons = 13;
  if (has_m_icons()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icons().data(), this->m_icons().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->m_icons(), target);
  }

  // optional string m_loginAvata = 14;
  if (has_m_loginavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_loginavata().data(), this->m_loginavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->m_loginavata(), target);
  }

  // optional string m_newweapon = 15;
  if (has_m_newweapon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_newweapon().data(), this->m_newweapon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->m_newweapon(), target);
  }

  // optional string m_newclothing = 16;
  if (has_m_newclothing()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_newclothing().data(), this->m_newclothing().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->m_newclothing(), target);
  }

  // optional string m_weaponAvata = 17;
  if (has_m_weaponavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_weaponavata().data(), this->m_weaponavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->m_weaponavata(), target);
  }

  // optional string m_roleAvata = 18;
  if (has_m_roleavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_roleavata().data(), this->m_roleavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->m_roleavata(), target);
  }

  // optional string m_marryAvata = 19;
  if (has_m_marryavata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_marryavata().data(), this->m_marryavata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->m_marryavata(), target);
  }

  // optional int32 m_hairColor = 20;
  if (has_m_haircolor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->m_haircolor(), target);
  }

  // optional int32 m_clothesColor = 21;
  if (has_m_clothescolor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->m_clothescolor(), target);
  }

  // optional int32 m_skinColor = 22;
  if (has_m_skincolor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->m_skincolor(), target);
  }

  // optional int64 m_carryWeapons = 23;
  if (has_m_carryweapons()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->m_carryweapons(), target);
  }

  // optional int64 m_carryArmor = 24;
  if (has_m_carryarmor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->m_carryarmor(), target);
  }

  // optional int64 m_carryCloak = 25;
  if (has_m_carrycloak()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->m_carrycloak(), target);
  }

  // optional int64 m_carryShoes = 26;
  if (has_m_carryshoes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->m_carryshoes(), target);
  }

  // optional int64 m_carryNecklace = 27;
  if (has_m_carrynecklace()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->m_carrynecklace(), target);
  }

  // optional int64 m_carryAmulet = 28;
  if (has_m_carryamulet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->m_carryamulet(), target);
  }

  // optional int64 m_carryBracer = 29;
  if (has_m_carrybracer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(29, this->m_carrybracer(), target);
  }

  // optional int64 m_carryRing = 30;
  if (has_m_carryring()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->m_carryring(), target);
  }

  // optional int64 m_carryFashionWeapons = 31;
  if (has_m_carryfashionweapons()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(31, this->m_carryfashionweapons(), target);
  }

  // optional int64 m_carryFashionArmor = 32;
  if (has_m_carryfashionarmor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(32, this->m_carryfashionarmor(), target);
  }

  // optional int64 m_carryWings = 33;
  if (has_m_carrywings()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(33, this->m_carrywings(), target);
  }

  // optional int32 m_mSpeed = 34;
  if (has_m_mspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->m_mspeed(), target);
  }

  // optional int32 m_view = 35;
  if (has_m_view()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->m_view(), target);
  }

  // optional int32 m_radius = 36;
  if (has_m_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->m_radius(), target);
  }

  // optional int32 m_group = 37;
  if (has_m_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->m_group(), target);
  }

  // optional int64 m_sheny = 38;
  if (has_m_sheny()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(38, this->m_sheny(), target);
  }

  // optional int64 m_shenw = 39;
  if (has_m_shenw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(39, this->m_shenw(), target);
  }

  // repeated int32 m_actBuff = 40;
  for (int i = 0; i < this->m_actbuff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(40, this->m_actbuff(i), target);
  }

  // repeated int64 m_actSkill = 41;
  for (int i = 0; i < this->m_actskill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(41, this->m_actskill(i), target);
  }

  // repeated .proto_ff.E_RoleBornItemDesc m_item = 42;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        42, this->m_item(i), target);
  }

  // repeated .proto_ff.E_RoleBornMailDesc m_mail = 43;
  for (int i = 0; i < this->m_mail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        43, this->m_mail(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleBorn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_bornID = 1;
    if (has_m_bornid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_bornid());
    }

    // optional int32 m_professionID = 2;
    if (has_m_professionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_professionid());
    }

    // optional string m_professionName = 3;
    if (has_m_professionname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_professionname());
    }

    // optional string m_placement = 4;
    if (has_m_placement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_placement());
    }

    // optional int32 m_gender = 5;
    if (has_m_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gender());
    }

    // optional int32 m_bornLevel = 6;
    if (has_m_bornlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bornlevel());
    }

    // optional int32 m_bornTitle = 7;
    if (has_m_borntitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_borntitle());
    }

    // optional int64 m_diamond = 8;
    if (has_m_diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_diamond());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 m_bindDiamond = 9;
    if (has_m_binddiamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_binddiamond());
    }

    // optional int64 m_gold = 10;
    if (has_m_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_gold());
    }

    // optional int64 m_mapID = 11;
    if (has_m_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_mapid());
    }

    // optional int32 m_birthFace = 12;
    if (has_m_birthface()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_birthface());
    }

    // optional string m_icons = 13;
    if (has_m_icons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icons());
    }

    // optional string m_loginAvata = 14;
    if (has_m_loginavata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_loginavata());
    }

    // optional string m_newweapon = 15;
    if (has_m_newweapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_newweapon());
    }

    // optional string m_newclothing = 16;
    if (has_m_newclothing()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_newclothing());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string m_weaponAvata = 17;
    if (has_m_weaponavata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_weaponavata());
    }

    // optional string m_roleAvata = 18;
    if (has_m_roleavata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_roleavata());
    }

    // optional string m_marryAvata = 19;
    if (has_m_marryavata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_marryavata());
    }

    // optional int32 m_hairColor = 20;
    if (has_m_haircolor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_haircolor());
    }

    // optional int32 m_clothesColor = 21;
    if (has_m_clothescolor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_clothescolor());
    }

    // optional int32 m_skinColor = 22;
    if (has_m_skincolor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skincolor());
    }

    // optional int64 m_carryWeapons = 23;
    if (has_m_carryweapons()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryweapons());
    }

    // optional int64 m_carryArmor = 24;
    if (has_m_carryarmor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryarmor());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int64 m_carryCloak = 25;
    if (has_m_carrycloak()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carrycloak());
    }

    // optional int64 m_carryShoes = 26;
    if (has_m_carryshoes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryshoes());
    }

    // optional int64 m_carryNecklace = 27;
    if (has_m_carrynecklace()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carrynecklace());
    }

    // optional int64 m_carryAmulet = 28;
    if (has_m_carryamulet()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryamulet());
    }

    // optional int64 m_carryBracer = 29;
    if (has_m_carrybracer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carrybracer());
    }

    // optional int64 m_carryRing = 30;
    if (has_m_carryring()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryring());
    }

    // optional int64 m_carryFashionWeapons = 31;
    if (has_m_carryfashionweapons()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryfashionweapons());
    }

    // optional int64 m_carryFashionArmor = 32;
    if (has_m_carryfashionarmor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carryfashionarmor());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional int64 m_carryWings = 33;
    if (has_m_carrywings()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_carrywings());
    }

    // optional int32 m_mSpeed = 34;
    if (has_m_mspeed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mspeed());
    }

    // optional int32 m_view = 35;
    if (has_m_view()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_view());
    }

    // optional int32 m_radius = 36;
    if (has_m_radius()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_radius());
    }

    // optional int32 m_group = 37;
    if (has_m_group()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group());
    }

    // optional int64 m_sheny = 38;
    if (has_m_sheny()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_sheny());
    }

    // optional int64 m_shenw = 39;
    if (has_m_shenw()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_shenw());
    }

  }
  // repeated int32 m_actBuff = 40;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_actbuff_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_actbuff(i));
    }
    total_size += 2 * this->m_actbuff_size() + data_size;
  }

  // repeated int64 m_actSkill = 41;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_actskill_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->m_actskill(i));
    }
    total_size += 2 * this->m_actskill_size() + data_size;
  }

  // repeated .proto_ff.E_RoleBornItemDesc m_item = 42;
  total_size += 2 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_RoleBornMailDesc m_mail = 43;
  total_size += 2 * this->m_mail_size();
  for (int i = 0; i < this->m_mail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_mail(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleBorn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleBorn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleBorn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleBorn::MergeFrom(const E_RoleBorn& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_actbuff_.MergeFrom(from.m_actbuff_);
  m_actskill_.MergeFrom(from.m_actskill_);
  m_item_.MergeFrom(from.m_item_);
  m_mail_.MergeFrom(from.m_mail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_bornid()) {
      set_m_bornid(from.m_bornid());
    }
    if (from.has_m_professionid()) {
      set_m_professionid(from.m_professionid());
    }
    if (from.has_m_professionname()) {
      set_m_professionname(from.m_professionname());
    }
    if (from.has_m_placement()) {
      set_m_placement(from.m_placement());
    }
    if (from.has_m_gender()) {
      set_m_gender(from.m_gender());
    }
    if (from.has_m_bornlevel()) {
      set_m_bornlevel(from.m_bornlevel());
    }
    if (from.has_m_borntitle()) {
      set_m_borntitle(from.m_borntitle());
    }
    if (from.has_m_diamond()) {
      set_m_diamond(from.m_diamond());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_binddiamond()) {
      set_m_binddiamond(from.m_binddiamond());
    }
    if (from.has_m_gold()) {
      set_m_gold(from.m_gold());
    }
    if (from.has_m_mapid()) {
      set_m_mapid(from.m_mapid());
    }
    if (from.has_m_birthface()) {
      set_m_birthface(from.m_birthface());
    }
    if (from.has_m_icons()) {
      set_m_icons(from.m_icons());
    }
    if (from.has_m_loginavata()) {
      set_m_loginavata(from.m_loginavata());
    }
    if (from.has_m_newweapon()) {
      set_m_newweapon(from.m_newweapon());
    }
    if (from.has_m_newclothing()) {
      set_m_newclothing(from.m_newclothing());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_weaponavata()) {
      set_m_weaponavata(from.m_weaponavata());
    }
    if (from.has_m_roleavata()) {
      set_m_roleavata(from.m_roleavata());
    }
    if (from.has_m_marryavata()) {
      set_m_marryavata(from.m_marryavata());
    }
    if (from.has_m_haircolor()) {
      set_m_haircolor(from.m_haircolor());
    }
    if (from.has_m_clothescolor()) {
      set_m_clothescolor(from.m_clothescolor());
    }
    if (from.has_m_skincolor()) {
      set_m_skincolor(from.m_skincolor());
    }
    if (from.has_m_carryweapons()) {
      set_m_carryweapons(from.m_carryweapons());
    }
    if (from.has_m_carryarmor()) {
      set_m_carryarmor(from.m_carryarmor());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_m_carrycloak()) {
      set_m_carrycloak(from.m_carrycloak());
    }
    if (from.has_m_carryshoes()) {
      set_m_carryshoes(from.m_carryshoes());
    }
    if (from.has_m_carrynecklace()) {
      set_m_carrynecklace(from.m_carrynecklace());
    }
    if (from.has_m_carryamulet()) {
      set_m_carryamulet(from.m_carryamulet());
    }
    if (from.has_m_carrybracer()) {
      set_m_carrybracer(from.m_carrybracer());
    }
    if (from.has_m_carryring()) {
      set_m_carryring(from.m_carryring());
    }
    if (from.has_m_carryfashionweapons()) {
      set_m_carryfashionweapons(from.m_carryfashionweapons());
    }
    if (from.has_m_carryfashionarmor()) {
      set_m_carryfashionarmor(from.m_carryfashionarmor());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_m_carrywings()) {
      set_m_carrywings(from.m_carrywings());
    }
    if (from.has_m_mspeed()) {
      set_m_mspeed(from.m_mspeed());
    }
    if (from.has_m_view()) {
      set_m_view(from.m_view());
    }
    if (from.has_m_radius()) {
      set_m_radius(from.m_radius());
    }
    if (from.has_m_group()) {
      set_m_group(from.m_group());
    }
    if (from.has_m_sheny()) {
      set_m_sheny(from.m_sheny());
    }
    if (from.has_m_shenw()) {
      set_m_shenw(from.m_shenw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleBorn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleBorn::CopyFrom(const E_RoleBorn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleBorn::IsInitialized() const {

  return true;
}

void E_RoleBorn::Swap(E_RoleBorn* other) {
  if (other != this) {
    std::swap(m_bornid_, other->m_bornid_);
    std::swap(m_professionid_, other->m_professionid_);
    std::swap(m_professionname_, other->m_professionname_);
    std::swap(m_placement_, other->m_placement_);
    std::swap(m_gender_, other->m_gender_);
    std::swap(m_bornlevel_, other->m_bornlevel_);
    std::swap(m_borntitle_, other->m_borntitle_);
    std::swap(m_diamond_, other->m_diamond_);
    std::swap(m_binddiamond_, other->m_binddiamond_);
    std::swap(m_gold_, other->m_gold_);
    std::swap(m_mapid_, other->m_mapid_);
    std::swap(m_birthface_, other->m_birthface_);
    std::swap(m_icons_, other->m_icons_);
    std::swap(m_loginavata_, other->m_loginavata_);
    std::swap(m_newweapon_, other->m_newweapon_);
    std::swap(m_newclothing_, other->m_newclothing_);
    std::swap(m_weaponavata_, other->m_weaponavata_);
    std::swap(m_roleavata_, other->m_roleavata_);
    std::swap(m_marryavata_, other->m_marryavata_);
    std::swap(m_haircolor_, other->m_haircolor_);
    std::swap(m_clothescolor_, other->m_clothescolor_);
    std::swap(m_skincolor_, other->m_skincolor_);
    std::swap(m_carryweapons_, other->m_carryweapons_);
    std::swap(m_carryarmor_, other->m_carryarmor_);
    std::swap(m_carrycloak_, other->m_carrycloak_);
    std::swap(m_carryshoes_, other->m_carryshoes_);
    std::swap(m_carrynecklace_, other->m_carrynecklace_);
    std::swap(m_carryamulet_, other->m_carryamulet_);
    std::swap(m_carrybracer_, other->m_carrybracer_);
    std::swap(m_carryring_, other->m_carryring_);
    std::swap(m_carryfashionweapons_, other->m_carryfashionweapons_);
    std::swap(m_carryfashionarmor_, other->m_carryfashionarmor_);
    std::swap(m_carrywings_, other->m_carrywings_);
    std::swap(m_mspeed_, other->m_mspeed_);
    std::swap(m_view_, other->m_view_);
    std::swap(m_radius_, other->m_radius_);
    std::swap(m_group_, other->m_group_);
    std::swap(m_sheny_, other->m_sheny_);
    std::swap(m_shenw_, other->m_shenw_);
    m_actbuff_.Swap(&other->m_actbuff_);
    m_actskill_.Swap(&other->m_actskill_);
    m_item_.Swap(&other->m_item_);
    m_mail_.Swap(&other->m_mail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleBorn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleBorn_descriptor_;
  metadata.reflection = E_RoleBorn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleBorn::kERoleBornListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleBorn::Sheet_RoleBorn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleBorn::InitAsDefaultInstance() {
}

Sheet_RoleBorn::Sheet_RoleBorn(const Sheet_RoleBorn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleBorn::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleBorn::~Sheet_RoleBorn() {
  SharedDtor();
}

void Sheet_RoleBorn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleBorn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleBorn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleBorn_descriptor_;
}

const Sheet_RoleBorn& Sheet_RoleBorn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleBorn* Sheet_RoleBorn::default_instance_ = NULL;

Sheet_RoleBorn* Sheet_RoleBorn::New() const {
  return new Sheet_RoleBorn;
}

void Sheet_RoleBorn::Clear() {
  e_roleborn_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleBorn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleBorn E_RoleBorn_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleBorn_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleborn_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleBorn_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleBorn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleBorn E_RoleBorn_List = 1;
  for (int i = 0; i < this->e_roleborn_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleborn_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleBorn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleBorn E_RoleBorn_List = 1;
  for (int i = 0; i < this->e_roleborn_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleborn_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleBorn::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleBorn E_RoleBorn_List = 1;
  total_size += 1 * this->e_roleborn_list_size();
  for (int i = 0; i < this->e_roleborn_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleborn_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleBorn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleBorn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleBorn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleBorn::MergeFrom(const Sheet_RoleBorn& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleborn_list_.MergeFrom(from.e_roleborn_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleBorn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleBorn::CopyFrom(const Sheet_RoleBorn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleBorn::IsInitialized() const {

  return true;
}

void Sheet_RoleBorn::Swap(Sheet_RoleBorn* other) {
  if (other != this) {
    e_roleborn_list_.Swap(&other->e_roleborn_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleBorn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleBorn_descriptor_;
  metadata.reflection = Sheet_RoleBorn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleMastermaleAttributeDesc::kMValueFieldNumber;
const int E_RoleMastermaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleMastermaleAttributeDesc::E_RoleMastermaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleMastermaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleMastermaleAttributeDesc::E_RoleMastermaleAttributeDesc(const E_RoleMastermaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleMastermaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleMastermaleAttributeDesc::~E_RoleMastermaleAttributeDesc() {
  SharedDtor();
}

void E_RoleMastermaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleMastermaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleMastermaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleMastermaleAttributeDesc_descriptor_;
}

const E_RoleMastermaleAttributeDesc& E_RoleMastermaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleMastermaleAttributeDesc* E_RoleMastermaleAttributeDesc::default_instance_ = NULL;

E_RoleMastermaleAttributeDesc* E_RoleMastermaleAttributeDesc::New() const {
  return new E_RoleMastermaleAttributeDesc;
}

void E_RoleMastermaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleMastermaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleMastermaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleMastermaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleMastermaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleMastermaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleMastermaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleMastermaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleMastermaleAttributeDesc::MergeFrom(const E_RoleMastermaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleMastermaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleMastermaleAttributeDesc::CopyFrom(const E_RoleMastermaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleMastermaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleMastermaleAttributeDesc::Swap(E_RoleMastermaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleMastermaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleMastermaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleMastermaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleMastermale::kMLvFieldNumber;
const int E_RoleMastermale::kMUpgradePointFieldNumber;
const int E_RoleMastermale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleMastermale::E_RoleMastermale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleMastermale::InitAsDefaultInstance() {
}

E_RoleMastermale::E_RoleMastermale(const E_RoleMastermale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleMastermale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleMastermale::~E_RoleMastermale() {
  SharedDtor();
}

void E_RoleMastermale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleMastermale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleMastermale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleMastermale_descriptor_;
}

const E_RoleMastermale& E_RoleMastermale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleMastermale* E_RoleMastermale::default_instance_ = NULL;

E_RoleMastermale* E_RoleMastermale::New() const {
  return new E_RoleMastermale;
}

void E_RoleMastermale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleMastermale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleMastermaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleMastermale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleMastermaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleMastermale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleMastermaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleMastermale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleMastermaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleMastermale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleMastermale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleMastermale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleMastermale::MergeFrom(const E_RoleMastermale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleMastermale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleMastermale::CopyFrom(const E_RoleMastermale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleMastermale::IsInitialized() const {

  return true;
}

void E_RoleMastermale::Swap(E_RoleMastermale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleMastermale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleMastermale_descriptor_;
  metadata.reflection = E_RoleMastermale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleMastermale::kERoleMastermaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleMastermale::Sheet_RoleMastermale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleMastermale::InitAsDefaultInstance() {
}

Sheet_RoleMastermale::Sheet_RoleMastermale(const Sheet_RoleMastermale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleMastermale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleMastermale::~Sheet_RoleMastermale() {
  SharedDtor();
}

void Sheet_RoleMastermale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleMastermale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleMastermale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleMastermale_descriptor_;
}

const Sheet_RoleMastermale& Sheet_RoleMastermale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleMastermale* Sheet_RoleMastermale::default_instance_ = NULL;

Sheet_RoleMastermale* Sheet_RoleMastermale::New() const {
  return new Sheet_RoleMastermale;
}

void Sheet_RoleMastermale::Clear() {
  e_rolemastermale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleMastermale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleMastermale E_RoleMastermale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleMastermale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rolemastermale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleMastermale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleMastermale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleMastermale E_RoleMastermale_List = 1;
  for (int i = 0; i < this->e_rolemastermale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rolemastermale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleMastermale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleMastermale E_RoleMastermale_List = 1;
  for (int i = 0; i < this->e_rolemastermale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rolemastermale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleMastermale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleMastermale E_RoleMastermale_List = 1;
  total_size += 1 * this->e_rolemastermale_list_size();
  for (int i = 0; i < this->e_rolemastermale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rolemastermale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleMastermale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleMastermale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleMastermale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleMastermale::MergeFrom(const Sheet_RoleMastermale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rolemastermale_list_.MergeFrom(from.e_rolemastermale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleMastermale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleMastermale::CopyFrom(const Sheet_RoleMastermale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleMastermale::IsInitialized() const {

  return true;
}

void Sheet_RoleMastermale::Swap(Sheet_RoleMastermale* other) {
  if (other != this) {
    e_rolemastermale_list_.Swap(&other->e_rolemastermale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleMastermale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleMastermale_descriptor_;
  metadata.reflection = Sheet_RoleMastermale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleMasterfemaleAttributeDesc::kMValueFieldNumber;
const int E_RoleMasterfemaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleMasterfemaleAttributeDesc::E_RoleMasterfemaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleMasterfemaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleMasterfemaleAttributeDesc::E_RoleMasterfemaleAttributeDesc(const E_RoleMasterfemaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleMasterfemaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleMasterfemaleAttributeDesc::~E_RoleMasterfemaleAttributeDesc() {
  SharedDtor();
}

void E_RoleMasterfemaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleMasterfemaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleMasterfemaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleMasterfemaleAttributeDesc_descriptor_;
}

const E_RoleMasterfemaleAttributeDesc& E_RoleMasterfemaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleMasterfemaleAttributeDesc* E_RoleMasterfemaleAttributeDesc::default_instance_ = NULL;

E_RoleMasterfemaleAttributeDesc* E_RoleMasterfemaleAttributeDesc::New() const {
  return new E_RoleMasterfemaleAttributeDesc;
}

void E_RoleMasterfemaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleMasterfemaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleMasterfemaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleMasterfemaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleMasterfemaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleMasterfemaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleMasterfemaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleMasterfemaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleMasterfemaleAttributeDesc::MergeFrom(const E_RoleMasterfemaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleMasterfemaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleMasterfemaleAttributeDesc::CopyFrom(const E_RoleMasterfemaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleMasterfemaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleMasterfemaleAttributeDesc::Swap(E_RoleMasterfemaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleMasterfemaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleMasterfemaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleMasterfemaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleMasterfemale::kMLvFieldNumber;
const int E_RoleMasterfemale::kMUpgradePointFieldNumber;
const int E_RoleMasterfemale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleMasterfemale::E_RoleMasterfemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleMasterfemale::InitAsDefaultInstance() {
}

E_RoleMasterfemale::E_RoleMasterfemale(const E_RoleMasterfemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleMasterfemale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleMasterfemale::~E_RoleMasterfemale() {
  SharedDtor();
}

void E_RoleMasterfemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleMasterfemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleMasterfemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleMasterfemale_descriptor_;
}

const E_RoleMasterfemale& E_RoleMasterfemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleMasterfemale* E_RoleMasterfemale::default_instance_ = NULL;

E_RoleMasterfemale* E_RoleMasterfemale::New() const {
  return new E_RoleMasterfemale;
}

void E_RoleMasterfemale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleMasterfemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleMasterfemaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleMasterfemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleMasterfemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleMasterfemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleMasterfemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleMasterfemale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleMasterfemaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleMasterfemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleMasterfemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleMasterfemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleMasterfemale::MergeFrom(const E_RoleMasterfemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleMasterfemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleMasterfemale::CopyFrom(const E_RoleMasterfemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleMasterfemale::IsInitialized() const {

  return true;
}

void E_RoleMasterfemale::Swap(E_RoleMasterfemale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleMasterfemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleMasterfemale_descriptor_;
  metadata.reflection = E_RoleMasterfemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleMasterfemale::kERoleMasterfemaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleMasterfemale::Sheet_RoleMasterfemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleMasterfemale::InitAsDefaultInstance() {
}

Sheet_RoleMasterfemale::Sheet_RoleMasterfemale(const Sheet_RoleMasterfemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleMasterfemale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleMasterfemale::~Sheet_RoleMasterfemale() {
  SharedDtor();
}

void Sheet_RoleMasterfemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleMasterfemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleMasterfemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleMasterfemale_descriptor_;
}

const Sheet_RoleMasterfemale& Sheet_RoleMasterfemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleMasterfemale* Sheet_RoleMasterfemale::default_instance_ = NULL;

Sheet_RoleMasterfemale* Sheet_RoleMasterfemale::New() const {
  return new Sheet_RoleMasterfemale;
}

void Sheet_RoleMasterfemale::Clear() {
  e_rolemasterfemale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleMasterfemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleMasterfemale E_RoleMasterfemale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleMasterfemale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rolemasterfemale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleMasterfemale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleMasterfemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleMasterfemale E_RoleMasterfemale_List = 1;
  for (int i = 0; i < this->e_rolemasterfemale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rolemasterfemale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleMasterfemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleMasterfemale E_RoleMasterfemale_List = 1;
  for (int i = 0; i < this->e_rolemasterfemale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rolemasterfemale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleMasterfemale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleMasterfemale E_RoleMasterfemale_List = 1;
  total_size += 1 * this->e_rolemasterfemale_list_size();
  for (int i = 0; i < this->e_rolemasterfemale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rolemasterfemale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleMasterfemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleMasterfemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleMasterfemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleMasterfemale::MergeFrom(const Sheet_RoleMasterfemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rolemasterfemale_list_.MergeFrom(from.e_rolemasterfemale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleMasterfemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleMasterfemale::CopyFrom(const Sheet_RoleMasterfemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleMasterfemale::IsInitialized() const {

  return true;
}

void Sheet_RoleMasterfemale::Swap(Sheet_RoleMasterfemale* other) {
  if (other != this) {
    e_rolemasterfemale_list_.Swap(&other->e_rolemasterfemale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleMasterfemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleMasterfemale_descriptor_;
  metadata.reflection = Sheet_RoleMasterfemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSicklemaleAttributeDesc::kMValueFieldNumber;
const int E_RoleSicklemaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleSicklemaleAttributeDesc::E_RoleSicklemaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSicklemaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleSicklemaleAttributeDesc::E_RoleSicklemaleAttributeDesc(const E_RoleSicklemaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSicklemaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSicklemaleAttributeDesc::~E_RoleSicklemaleAttributeDesc() {
  SharedDtor();
}

void E_RoleSicklemaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSicklemaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSicklemaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSicklemaleAttributeDesc_descriptor_;
}

const E_RoleSicklemaleAttributeDesc& E_RoleSicklemaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSicklemaleAttributeDesc* E_RoleSicklemaleAttributeDesc::default_instance_ = NULL;

E_RoleSicklemaleAttributeDesc* E_RoleSicklemaleAttributeDesc::New() const {
  return new E_RoleSicklemaleAttributeDesc;
}

void E_RoleSicklemaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSicklemaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSicklemaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSicklemaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSicklemaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSicklemaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSicklemaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSicklemaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSicklemaleAttributeDesc::MergeFrom(const E_RoleSicklemaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSicklemaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSicklemaleAttributeDesc::CopyFrom(const E_RoleSicklemaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSicklemaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleSicklemaleAttributeDesc::Swap(E_RoleSicklemaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSicklemaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSicklemaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleSicklemaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSicklemale::kMLvFieldNumber;
const int E_RoleSicklemale::kMUpgradePointFieldNumber;
const int E_RoleSicklemale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleSicklemale::E_RoleSicklemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSicklemale::InitAsDefaultInstance() {
}

E_RoleSicklemale::E_RoleSicklemale(const E_RoleSicklemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSicklemale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSicklemale::~E_RoleSicklemale() {
  SharedDtor();
}

void E_RoleSicklemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSicklemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSicklemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSicklemale_descriptor_;
}

const E_RoleSicklemale& E_RoleSicklemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSicklemale* E_RoleSicklemale::default_instance_ = NULL;

E_RoleSicklemale* E_RoleSicklemale::New() const {
  return new E_RoleSicklemale;
}

void E_RoleSicklemale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSicklemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleSicklemaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSicklemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleSicklemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSicklemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleSicklemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSicklemale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleSicklemaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSicklemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSicklemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSicklemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSicklemale::MergeFrom(const E_RoleSicklemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSicklemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSicklemale::CopyFrom(const E_RoleSicklemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSicklemale::IsInitialized() const {

  return true;
}

void E_RoleSicklemale::Swap(E_RoleSicklemale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSicklemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSicklemale_descriptor_;
  metadata.reflection = E_RoleSicklemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleSicklemale::kERoleSicklemaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleSicklemale::Sheet_RoleSicklemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleSicklemale::InitAsDefaultInstance() {
}

Sheet_RoleSicklemale::Sheet_RoleSicklemale(const Sheet_RoleSicklemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleSicklemale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleSicklemale::~Sheet_RoleSicklemale() {
  SharedDtor();
}

void Sheet_RoleSicklemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleSicklemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleSicklemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleSicklemale_descriptor_;
}

const Sheet_RoleSicklemale& Sheet_RoleSicklemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleSicklemale* Sheet_RoleSicklemale::default_instance_ = NULL;

Sheet_RoleSicklemale* Sheet_RoleSicklemale::New() const {
  return new Sheet_RoleSicklemale;
}

void Sheet_RoleSicklemale::Clear() {
  e_rolesicklemale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleSicklemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleSicklemale E_RoleSicklemale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleSicklemale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rolesicklemale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleSicklemale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleSicklemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleSicklemale E_RoleSicklemale_List = 1;
  for (int i = 0; i < this->e_rolesicklemale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rolesicklemale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleSicklemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleSicklemale E_RoleSicklemale_List = 1;
  for (int i = 0; i < this->e_rolesicklemale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rolesicklemale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleSicklemale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleSicklemale E_RoleSicklemale_List = 1;
  total_size += 1 * this->e_rolesicklemale_list_size();
  for (int i = 0; i < this->e_rolesicklemale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rolesicklemale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleSicklemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleSicklemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleSicklemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleSicklemale::MergeFrom(const Sheet_RoleSicklemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rolesicklemale_list_.MergeFrom(from.e_rolesicklemale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleSicklemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleSicklemale::CopyFrom(const Sheet_RoleSicklemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleSicklemale::IsInitialized() const {

  return true;
}

void Sheet_RoleSicklemale::Swap(Sheet_RoleSicklemale* other) {
  if (other != this) {
    e_rolesicklemale_list_.Swap(&other->e_rolesicklemale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleSicklemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleSicklemale_descriptor_;
  metadata.reflection = Sheet_RoleSicklemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSicklefemaleAttributeDesc::kMValueFieldNumber;
const int E_RoleSicklefemaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleSicklefemaleAttributeDesc::E_RoleSicklefemaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSicklefemaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleSicklefemaleAttributeDesc::E_RoleSicklefemaleAttributeDesc(const E_RoleSicklefemaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSicklefemaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSicklefemaleAttributeDesc::~E_RoleSicklefemaleAttributeDesc() {
  SharedDtor();
}

void E_RoleSicklefemaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSicklefemaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSicklefemaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSicklefemaleAttributeDesc_descriptor_;
}

const E_RoleSicklefemaleAttributeDesc& E_RoleSicklefemaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSicklefemaleAttributeDesc* E_RoleSicklefemaleAttributeDesc::default_instance_ = NULL;

E_RoleSicklefemaleAttributeDesc* E_RoleSicklefemaleAttributeDesc::New() const {
  return new E_RoleSicklefemaleAttributeDesc;
}

void E_RoleSicklefemaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSicklefemaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSicklefemaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSicklefemaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSicklefemaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSicklefemaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSicklefemaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSicklefemaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSicklefemaleAttributeDesc::MergeFrom(const E_RoleSicklefemaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSicklefemaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSicklefemaleAttributeDesc::CopyFrom(const E_RoleSicklefemaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSicklefemaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleSicklefemaleAttributeDesc::Swap(E_RoleSicklefemaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSicklefemaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSicklefemaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleSicklefemaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSicklefemale::kMLvFieldNumber;
const int E_RoleSicklefemale::kMUpgradePointFieldNumber;
const int E_RoleSicklefemale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleSicklefemale::E_RoleSicklefemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSicklefemale::InitAsDefaultInstance() {
}

E_RoleSicklefemale::E_RoleSicklefemale(const E_RoleSicklefemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSicklefemale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSicklefemale::~E_RoleSicklefemale() {
  SharedDtor();
}

void E_RoleSicklefemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSicklefemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSicklefemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSicklefemale_descriptor_;
}

const E_RoleSicklefemale& E_RoleSicklefemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSicklefemale* E_RoleSicklefemale::default_instance_ = NULL;

E_RoleSicklefemale* E_RoleSicklefemale::New() const {
  return new E_RoleSicklefemale;
}

void E_RoleSicklefemale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSicklefemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleSicklefemaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSicklefemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleSicklefemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSicklefemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleSicklefemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSicklefemale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleSicklefemaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSicklefemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSicklefemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSicklefemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSicklefemale::MergeFrom(const E_RoleSicklefemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSicklefemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSicklefemale::CopyFrom(const E_RoleSicklefemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSicklefemale::IsInitialized() const {

  return true;
}

void E_RoleSicklefemale::Swap(E_RoleSicklefemale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSicklefemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSicklefemale_descriptor_;
  metadata.reflection = E_RoleSicklefemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleSicklefemale::kERoleSicklefemaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleSicklefemale::Sheet_RoleSicklefemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleSicklefemale::InitAsDefaultInstance() {
}

Sheet_RoleSicklefemale::Sheet_RoleSicklefemale(const Sheet_RoleSicklefemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleSicklefemale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleSicklefemale::~Sheet_RoleSicklefemale() {
  SharedDtor();
}

void Sheet_RoleSicklefemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleSicklefemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleSicklefemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleSicklefemale_descriptor_;
}

const Sheet_RoleSicklefemale& Sheet_RoleSicklefemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleSicklefemale* Sheet_RoleSicklefemale::default_instance_ = NULL;

Sheet_RoleSicklefemale* Sheet_RoleSicklefemale::New() const {
  return new Sheet_RoleSicklefemale;
}

void Sheet_RoleSicklefemale::Clear() {
  e_rolesicklefemale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleSicklefemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleSicklefemale E_RoleSicklefemale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleSicklefemale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rolesicklefemale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleSicklefemale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleSicklefemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleSicklefemale E_RoleSicklefemale_List = 1;
  for (int i = 0; i < this->e_rolesicklefemale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rolesicklefemale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleSicklefemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleSicklefemale E_RoleSicklefemale_List = 1;
  for (int i = 0; i < this->e_rolesicklefemale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rolesicklefemale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleSicklefemale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleSicklefemale E_RoleSicklefemale_List = 1;
  total_size += 1 * this->e_rolesicklefemale_list_size();
  for (int i = 0; i < this->e_rolesicklefemale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rolesicklefemale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleSicklefemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleSicklefemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleSicklefemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleSicklefemale::MergeFrom(const Sheet_RoleSicklefemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rolesicklefemale_list_.MergeFrom(from.e_rolesicklefemale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleSicklefemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleSicklefemale::CopyFrom(const Sheet_RoleSicklefemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleSicklefemale::IsInitialized() const {

  return true;
}

void Sheet_RoleSicklefemale::Swap(Sheet_RoleSicklefemale* other) {
  if (other != this) {
    e_rolesicklefemale_list_.Swap(&other->e_rolesicklefemale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleSicklefemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleSicklefemale_descriptor_;
  metadata.reflection = Sheet_RoleSicklefemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSwordmaleAttributeDesc::kMValueFieldNumber;
const int E_RoleSwordmaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleSwordmaleAttributeDesc::E_RoleSwordmaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSwordmaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleSwordmaleAttributeDesc::E_RoleSwordmaleAttributeDesc(const E_RoleSwordmaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSwordmaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSwordmaleAttributeDesc::~E_RoleSwordmaleAttributeDesc() {
  SharedDtor();
}

void E_RoleSwordmaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSwordmaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSwordmaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSwordmaleAttributeDesc_descriptor_;
}

const E_RoleSwordmaleAttributeDesc& E_RoleSwordmaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSwordmaleAttributeDesc* E_RoleSwordmaleAttributeDesc::default_instance_ = NULL;

E_RoleSwordmaleAttributeDesc* E_RoleSwordmaleAttributeDesc::New() const {
  return new E_RoleSwordmaleAttributeDesc;
}

void E_RoleSwordmaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSwordmaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSwordmaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSwordmaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSwordmaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSwordmaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSwordmaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSwordmaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSwordmaleAttributeDesc::MergeFrom(const E_RoleSwordmaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSwordmaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSwordmaleAttributeDesc::CopyFrom(const E_RoleSwordmaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSwordmaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleSwordmaleAttributeDesc::Swap(E_RoleSwordmaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSwordmaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSwordmaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleSwordmaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSwordmale::kMLvFieldNumber;
const int E_RoleSwordmale::kMUpgradePointFieldNumber;
const int E_RoleSwordmale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleSwordmale::E_RoleSwordmale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSwordmale::InitAsDefaultInstance() {
}

E_RoleSwordmale::E_RoleSwordmale(const E_RoleSwordmale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSwordmale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSwordmale::~E_RoleSwordmale() {
  SharedDtor();
}

void E_RoleSwordmale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSwordmale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSwordmale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSwordmale_descriptor_;
}

const E_RoleSwordmale& E_RoleSwordmale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSwordmale* E_RoleSwordmale::default_instance_ = NULL;

E_RoleSwordmale* E_RoleSwordmale::New() const {
  return new E_RoleSwordmale;
}

void E_RoleSwordmale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSwordmale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleSwordmaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSwordmale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleSwordmaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSwordmale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleSwordmaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSwordmale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleSwordmaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSwordmale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSwordmale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSwordmale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSwordmale::MergeFrom(const E_RoleSwordmale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSwordmale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSwordmale::CopyFrom(const E_RoleSwordmale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSwordmale::IsInitialized() const {

  return true;
}

void E_RoleSwordmale::Swap(E_RoleSwordmale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSwordmale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSwordmale_descriptor_;
  metadata.reflection = E_RoleSwordmale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleSwordmale::kERoleSwordmaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleSwordmale::Sheet_RoleSwordmale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleSwordmale::InitAsDefaultInstance() {
}

Sheet_RoleSwordmale::Sheet_RoleSwordmale(const Sheet_RoleSwordmale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleSwordmale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleSwordmale::~Sheet_RoleSwordmale() {
  SharedDtor();
}

void Sheet_RoleSwordmale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleSwordmale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleSwordmale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleSwordmale_descriptor_;
}

const Sheet_RoleSwordmale& Sheet_RoleSwordmale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleSwordmale* Sheet_RoleSwordmale::default_instance_ = NULL;

Sheet_RoleSwordmale* Sheet_RoleSwordmale::New() const {
  return new Sheet_RoleSwordmale;
}

void Sheet_RoleSwordmale::Clear() {
  e_roleswordmale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleSwordmale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleSwordmale E_RoleSwordmale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleSwordmale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleswordmale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleSwordmale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleSwordmale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleSwordmale E_RoleSwordmale_List = 1;
  for (int i = 0; i < this->e_roleswordmale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleswordmale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleSwordmale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleSwordmale E_RoleSwordmale_List = 1;
  for (int i = 0; i < this->e_roleswordmale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleswordmale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleSwordmale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleSwordmale E_RoleSwordmale_List = 1;
  total_size += 1 * this->e_roleswordmale_list_size();
  for (int i = 0; i < this->e_roleswordmale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleswordmale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleSwordmale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleSwordmale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleSwordmale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleSwordmale::MergeFrom(const Sheet_RoleSwordmale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleswordmale_list_.MergeFrom(from.e_roleswordmale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleSwordmale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleSwordmale::CopyFrom(const Sheet_RoleSwordmale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleSwordmale::IsInitialized() const {

  return true;
}

void Sheet_RoleSwordmale::Swap(Sheet_RoleSwordmale* other) {
  if (other != this) {
    e_roleswordmale_list_.Swap(&other->e_roleswordmale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleSwordmale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleSwordmale_descriptor_;
  metadata.reflection = Sheet_RoleSwordmale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSwordfemaleAttributeDesc::kMValueFieldNumber;
const int E_RoleSwordfemaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleSwordfemaleAttributeDesc::E_RoleSwordfemaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSwordfemaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleSwordfemaleAttributeDesc::E_RoleSwordfemaleAttributeDesc(const E_RoleSwordfemaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSwordfemaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSwordfemaleAttributeDesc::~E_RoleSwordfemaleAttributeDesc() {
  SharedDtor();
}

void E_RoleSwordfemaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSwordfemaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSwordfemaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSwordfemaleAttributeDesc_descriptor_;
}

const E_RoleSwordfemaleAttributeDesc& E_RoleSwordfemaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSwordfemaleAttributeDesc* E_RoleSwordfemaleAttributeDesc::default_instance_ = NULL;

E_RoleSwordfemaleAttributeDesc* E_RoleSwordfemaleAttributeDesc::New() const {
  return new E_RoleSwordfemaleAttributeDesc;
}

void E_RoleSwordfemaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSwordfemaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSwordfemaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSwordfemaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSwordfemaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSwordfemaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSwordfemaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSwordfemaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSwordfemaleAttributeDesc::MergeFrom(const E_RoleSwordfemaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSwordfemaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSwordfemaleAttributeDesc::CopyFrom(const E_RoleSwordfemaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSwordfemaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleSwordfemaleAttributeDesc::Swap(E_RoleSwordfemaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSwordfemaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSwordfemaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleSwordfemaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSwordfemale::kMLvFieldNumber;
const int E_RoleSwordfemale::kMUpgradePointFieldNumber;
const int E_RoleSwordfemale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleSwordfemale::E_RoleSwordfemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSwordfemale::InitAsDefaultInstance() {
}

E_RoleSwordfemale::E_RoleSwordfemale(const E_RoleSwordfemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSwordfemale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSwordfemale::~E_RoleSwordfemale() {
  SharedDtor();
}

void E_RoleSwordfemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSwordfemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSwordfemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSwordfemale_descriptor_;
}

const E_RoleSwordfemale& E_RoleSwordfemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSwordfemale* E_RoleSwordfemale::default_instance_ = NULL;

E_RoleSwordfemale* E_RoleSwordfemale::New() const {
  return new E_RoleSwordfemale;
}

void E_RoleSwordfemale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSwordfemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleSwordfemaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSwordfemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleSwordfemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSwordfemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleSwordfemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSwordfemale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleSwordfemaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSwordfemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSwordfemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSwordfemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSwordfemale::MergeFrom(const E_RoleSwordfemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSwordfemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSwordfemale::CopyFrom(const E_RoleSwordfemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSwordfemale::IsInitialized() const {

  return true;
}

void E_RoleSwordfemale::Swap(E_RoleSwordfemale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSwordfemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSwordfemale_descriptor_;
  metadata.reflection = E_RoleSwordfemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleSwordfemale::kERoleSwordfemaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleSwordfemale::Sheet_RoleSwordfemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleSwordfemale::InitAsDefaultInstance() {
}

Sheet_RoleSwordfemale::Sheet_RoleSwordfemale(const Sheet_RoleSwordfemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleSwordfemale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleSwordfemale::~Sheet_RoleSwordfemale() {
  SharedDtor();
}

void Sheet_RoleSwordfemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleSwordfemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleSwordfemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleSwordfemale_descriptor_;
}

const Sheet_RoleSwordfemale& Sheet_RoleSwordfemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleSwordfemale* Sheet_RoleSwordfemale::default_instance_ = NULL;

Sheet_RoleSwordfemale* Sheet_RoleSwordfemale::New() const {
  return new Sheet_RoleSwordfemale;
}

void Sheet_RoleSwordfemale::Clear() {
  e_roleswordfemale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleSwordfemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleSwordfemale E_RoleSwordfemale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleSwordfemale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleswordfemale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleSwordfemale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleSwordfemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleSwordfemale E_RoleSwordfemale_List = 1;
  for (int i = 0; i < this->e_roleswordfemale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleswordfemale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleSwordfemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleSwordfemale E_RoleSwordfemale_List = 1;
  for (int i = 0; i < this->e_roleswordfemale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleswordfemale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleSwordfemale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleSwordfemale E_RoleSwordfemale_List = 1;
  total_size += 1 * this->e_roleswordfemale_list_size();
  for (int i = 0; i < this->e_roleswordfemale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleswordfemale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleSwordfemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleSwordfemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleSwordfemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleSwordfemale::MergeFrom(const Sheet_RoleSwordfemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleswordfemale_list_.MergeFrom(from.e_roleswordfemale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleSwordfemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleSwordfemale::CopyFrom(const Sheet_RoleSwordfemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleSwordfemale::IsInitialized() const {

  return true;
}

void Sheet_RoleSwordfemale::Swap(Sheet_RoleSwordfemale* other) {
  if (other != this) {
    e_roleswordfemale_list_.Swap(&other->e_roleswordfemale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleSwordfemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleSwordfemale_descriptor_;
  metadata.reflection = Sheet_RoleSwordfemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleTaidaomaleAttributeDesc::kMValueFieldNumber;
const int E_RoleTaidaomaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleTaidaomaleAttributeDesc::E_RoleTaidaomaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleTaidaomaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleTaidaomaleAttributeDesc::E_RoleTaidaomaleAttributeDesc(const E_RoleTaidaomaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleTaidaomaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleTaidaomaleAttributeDesc::~E_RoleTaidaomaleAttributeDesc() {
  SharedDtor();
}

void E_RoleTaidaomaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleTaidaomaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleTaidaomaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleTaidaomaleAttributeDesc_descriptor_;
}

const E_RoleTaidaomaleAttributeDesc& E_RoleTaidaomaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleTaidaomaleAttributeDesc* E_RoleTaidaomaleAttributeDesc::default_instance_ = NULL;

E_RoleTaidaomaleAttributeDesc* E_RoleTaidaomaleAttributeDesc::New() const {
  return new E_RoleTaidaomaleAttributeDesc;
}

void E_RoleTaidaomaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleTaidaomaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleTaidaomaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleTaidaomaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleTaidaomaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleTaidaomaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleTaidaomaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleTaidaomaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleTaidaomaleAttributeDesc::MergeFrom(const E_RoleTaidaomaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleTaidaomaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleTaidaomaleAttributeDesc::CopyFrom(const E_RoleTaidaomaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleTaidaomaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleTaidaomaleAttributeDesc::Swap(E_RoleTaidaomaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleTaidaomaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleTaidaomaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleTaidaomaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleTaidaomale::kMLvFieldNumber;
const int E_RoleTaidaomale::kMUpgradePointFieldNumber;
const int E_RoleTaidaomale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleTaidaomale::E_RoleTaidaomale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleTaidaomale::InitAsDefaultInstance() {
}

E_RoleTaidaomale::E_RoleTaidaomale(const E_RoleTaidaomale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleTaidaomale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleTaidaomale::~E_RoleTaidaomale() {
  SharedDtor();
}

void E_RoleTaidaomale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleTaidaomale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleTaidaomale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleTaidaomale_descriptor_;
}

const E_RoleTaidaomale& E_RoleTaidaomale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleTaidaomale* E_RoleTaidaomale::default_instance_ = NULL;

E_RoleTaidaomale* E_RoleTaidaomale::New() const {
  return new E_RoleTaidaomale;
}

void E_RoleTaidaomale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleTaidaomale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleTaidaomaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleTaidaomale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleTaidaomaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleTaidaomale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleTaidaomaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleTaidaomale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleTaidaomaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleTaidaomale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleTaidaomale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleTaidaomale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleTaidaomale::MergeFrom(const E_RoleTaidaomale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleTaidaomale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleTaidaomale::CopyFrom(const E_RoleTaidaomale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleTaidaomale::IsInitialized() const {

  return true;
}

void E_RoleTaidaomale::Swap(E_RoleTaidaomale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleTaidaomale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleTaidaomale_descriptor_;
  metadata.reflection = E_RoleTaidaomale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleTaidaomale::kERoleTaidaomaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleTaidaomale::Sheet_RoleTaidaomale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleTaidaomale::InitAsDefaultInstance() {
}

Sheet_RoleTaidaomale::Sheet_RoleTaidaomale(const Sheet_RoleTaidaomale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleTaidaomale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleTaidaomale::~Sheet_RoleTaidaomale() {
  SharedDtor();
}

void Sheet_RoleTaidaomale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleTaidaomale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleTaidaomale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleTaidaomale_descriptor_;
}

const Sheet_RoleTaidaomale& Sheet_RoleTaidaomale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleTaidaomale* Sheet_RoleTaidaomale::default_instance_ = NULL;

Sheet_RoleTaidaomale* Sheet_RoleTaidaomale::New() const {
  return new Sheet_RoleTaidaomale;
}

void Sheet_RoleTaidaomale::Clear() {
  e_roletaidaomale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleTaidaomale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleTaidaomale E_RoleTaidaomale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleTaidaomale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roletaidaomale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleTaidaomale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleTaidaomale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleTaidaomale E_RoleTaidaomale_List = 1;
  for (int i = 0; i < this->e_roletaidaomale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roletaidaomale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleTaidaomale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleTaidaomale E_RoleTaidaomale_List = 1;
  for (int i = 0; i < this->e_roletaidaomale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roletaidaomale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleTaidaomale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleTaidaomale E_RoleTaidaomale_List = 1;
  total_size += 1 * this->e_roletaidaomale_list_size();
  for (int i = 0; i < this->e_roletaidaomale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roletaidaomale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleTaidaomale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleTaidaomale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleTaidaomale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleTaidaomale::MergeFrom(const Sheet_RoleTaidaomale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roletaidaomale_list_.MergeFrom(from.e_roletaidaomale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleTaidaomale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleTaidaomale::CopyFrom(const Sheet_RoleTaidaomale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleTaidaomale::IsInitialized() const {

  return true;
}

void Sheet_RoleTaidaomale::Swap(Sheet_RoleTaidaomale* other) {
  if (other != this) {
    e_roletaidaomale_list_.Swap(&other->e_roletaidaomale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleTaidaomale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleTaidaomale_descriptor_;
  metadata.reflection = Sheet_RoleTaidaomale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleTaidaofemaleAttributeDesc::kMValueFieldNumber;
const int E_RoleTaidaofemaleAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleTaidaofemaleAttributeDesc::E_RoleTaidaofemaleAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleTaidaofemaleAttributeDesc::InitAsDefaultInstance() {
}

E_RoleTaidaofemaleAttributeDesc::E_RoleTaidaofemaleAttributeDesc(const E_RoleTaidaofemaleAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleTaidaofemaleAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleTaidaofemaleAttributeDesc::~E_RoleTaidaofemaleAttributeDesc() {
  SharedDtor();
}

void E_RoleTaidaofemaleAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleTaidaofemaleAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleTaidaofemaleAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleTaidaofemaleAttributeDesc_descriptor_;
}

const E_RoleTaidaofemaleAttributeDesc& E_RoleTaidaofemaleAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleTaidaofemaleAttributeDesc* E_RoleTaidaofemaleAttributeDesc::default_instance_ = NULL;

E_RoleTaidaofemaleAttributeDesc* E_RoleTaidaofemaleAttributeDesc::New() const {
  return new E_RoleTaidaofemaleAttributeDesc;
}

void E_RoleTaidaofemaleAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleTaidaofemaleAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Type;
        break;
      }

      // optional int32 m_Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleTaidaofemaleAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleTaidaofemaleAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_Type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleTaidaofemaleAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_Type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleTaidaofemaleAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleTaidaofemaleAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleTaidaofemaleAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleTaidaofemaleAttributeDesc::MergeFrom(const E_RoleTaidaofemaleAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleTaidaofemaleAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleTaidaofemaleAttributeDesc::CopyFrom(const E_RoleTaidaofemaleAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleTaidaofemaleAttributeDesc::IsInitialized() const {

  return true;
}

void E_RoleTaidaofemaleAttributeDesc::Swap(E_RoleTaidaofemaleAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleTaidaofemaleAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleTaidaofemaleAttributeDesc_descriptor_;
  metadata.reflection = E_RoleTaidaofemaleAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleTaidaofemale::kMLvFieldNumber;
const int E_RoleTaidaofemale::kMUpgradePointFieldNumber;
const int E_RoleTaidaofemale::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_RoleTaidaofemale::E_RoleTaidaofemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleTaidaofemale::InitAsDefaultInstance() {
}

E_RoleTaidaofemale::E_RoleTaidaofemale(const E_RoleTaidaofemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleTaidaofemale::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_upgradepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleTaidaofemale::~E_RoleTaidaofemale() {
  SharedDtor();
}

void E_RoleTaidaofemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleTaidaofemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleTaidaofemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleTaidaofemale_descriptor_;
}

const E_RoleTaidaofemale& E_RoleTaidaofemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleTaidaofemale* E_RoleTaidaofemale::default_instance_ = NULL;

E_RoleTaidaofemale* E_RoleTaidaofemale::New() const {
  return new E_RoleTaidaofemale;
}

void E_RoleTaidaofemale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_upgradepoint_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleTaidaofemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upgradePoint;
        break;
      }

      // optional int32 m_upgradePoint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upgradePoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upgradepoint_)));
          set_has_m_upgradepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_RoleTaidaofemaleAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleTaidaofemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upgradepoint(), output);
  }

  // repeated .proto_ff.E_RoleTaidaofemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleTaidaofemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_upgradePoint = 2;
  if (has_m_upgradepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upgradepoint(), target);
  }

  // repeated .proto_ff.E_RoleTaidaofemaleAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleTaidaofemale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_upgradePoint = 2;
    if (has_m_upgradepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upgradepoint());
    }

  }
  // repeated .proto_ff.E_RoleTaidaofemaleAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleTaidaofemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleTaidaofemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleTaidaofemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleTaidaofemale::MergeFrom(const E_RoleTaidaofemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_upgradepoint()) {
      set_m_upgradepoint(from.m_upgradepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleTaidaofemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleTaidaofemale::CopyFrom(const E_RoleTaidaofemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleTaidaofemale::IsInitialized() const {

  return true;
}

void E_RoleTaidaofemale::Swap(E_RoleTaidaofemale* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_upgradepoint_, other->m_upgradepoint_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleTaidaofemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleTaidaofemale_descriptor_;
  metadata.reflection = E_RoleTaidaofemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleTaidaofemale::kERoleTaidaofemaleListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleTaidaofemale::Sheet_RoleTaidaofemale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleTaidaofemale::InitAsDefaultInstance() {
}

Sheet_RoleTaidaofemale::Sheet_RoleTaidaofemale(const Sheet_RoleTaidaofemale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleTaidaofemale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleTaidaofemale::~Sheet_RoleTaidaofemale() {
  SharedDtor();
}

void Sheet_RoleTaidaofemale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleTaidaofemale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleTaidaofemale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleTaidaofemale_descriptor_;
}

const Sheet_RoleTaidaofemale& Sheet_RoleTaidaofemale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleTaidaofemale* Sheet_RoleTaidaofemale::default_instance_ = NULL;

Sheet_RoleTaidaofemale* Sheet_RoleTaidaofemale::New() const {
  return new Sheet_RoleTaidaofemale;
}

void Sheet_RoleTaidaofemale::Clear() {
  e_roletaidaofemale_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleTaidaofemale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleTaidaofemale E_RoleTaidaofemale_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleTaidaofemale_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roletaidaofemale_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleTaidaofemale_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleTaidaofemale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleTaidaofemale E_RoleTaidaofemale_List = 1;
  for (int i = 0; i < this->e_roletaidaofemale_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roletaidaofemale_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleTaidaofemale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleTaidaofemale E_RoleTaidaofemale_List = 1;
  for (int i = 0; i < this->e_roletaidaofemale_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roletaidaofemale_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleTaidaofemale::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleTaidaofemale E_RoleTaidaofemale_List = 1;
  total_size += 1 * this->e_roletaidaofemale_list_size();
  for (int i = 0; i < this->e_roletaidaofemale_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roletaidaofemale_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleTaidaofemale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleTaidaofemale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleTaidaofemale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleTaidaofemale::MergeFrom(const Sheet_RoleTaidaofemale& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roletaidaofemale_list_.MergeFrom(from.e_roletaidaofemale_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleTaidaofemale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleTaidaofemale::CopyFrom(const Sheet_RoleTaidaofemale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleTaidaofemale::IsInitialized() const {

  return true;
}

void Sheet_RoleTaidaofemale::Swap(Sheet_RoleTaidaofemale* other) {
  if (other != this) {
    e_roletaidaofemale_list_.Swap(&other->e_roletaidaofemale_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleTaidaofemale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleTaidaofemale_descriptor_;
  metadata.reflection = Sheet_RoleTaidaofemale_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleExp::kMLvFieldNumber;
const int E_RoleExp::kMExpFieldNumber;
const int E_RoleExp::kMSkillPointFieldNumber;
const int E_RoleExp::kMPrepareModeDexpFieldNumber;
const int E_RoleExp::kMFengshenFieldNumber;
const int E_RoleExp::kMPetFieldNumber;
const int E_RoleExp::kMDragonFieldNumber;
const int E_RoleExp::kMEquipFieldNumber;
const int E_RoleExp::kMArenaFieldNumber;
const int E_RoleExp::kMSoloFieldNumber;
const int E_RoleExp::kMMultiBattleFieldNumber;
const int E_RoleExp::kMQingyunFieldNumber;
const int E_RoleExp::kMYaochiFieldNumber;
const int E_RoleExp::kMWeddingFieldNumber;
const int E_RoleExp::kMBaguaFieldNumber;
#endif  // !_MSC_VER

E_RoleExp::E_RoleExp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleExp::InitAsDefaultInstance() {
}

E_RoleExp::E_RoleExp(const E_RoleExp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleExp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = GOOGLE_LONGLONG(0);
  m_skillpoint_ = 0;
  m_preparemodedexp_ = 0;
  m_fengshen_ = 0;
  m_pet_ = 0;
  m_dragon_ = 0;
  m_equip_ = 0;
  m_arena_ = 0;
  m_solo_ = 0;
  m_multibattle_ = 0;
  m_qingyun_ = 0;
  m_yaochi_ = 0;
  m_wedding_ = 0;
  m_bagua_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleExp::~E_RoleExp() {
  SharedDtor();
}

void E_RoleExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleExp_descriptor_;
}

const E_RoleExp& E_RoleExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleExp* E_RoleExp::default_instance_ = NULL;

E_RoleExp* E_RoleExp::New() const {
  return new E_RoleExp;
}

void E_RoleExp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = GOOGLE_LONGLONG(0);
    m_skillpoint_ = 0;
    m_preparemodedexp_ = 0;
    m_fengshen_ = 0;
    m_pet_ = 0;
    m_dragon_ = 0;
    m_equip_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_arena_ = 0;
    m_solo_ = 0;
    m_multibattle_ = 0;
    m_qingyun_ = 0;
    m_yaochi_ = 0;
    m_wedding_ = 0;
    m_bagua_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int64 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_skillPoint;
        break;
      }

      // optional int32 m_skillPoint = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillPoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillpoint_)));
          set_has_m_skillpoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_prepareModeDexp;
        break;
      }

      // optional int32 m_prepareModeDexp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_prepareModeDexp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_preparemodedexp_)));
          set_has_m_preparemodedexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_fengshen;
        break;
      }

      // optional int32 m_fengshen = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fengshen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_fengshen_)));
          set_has_m_fengshen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_pet;
        break;
      }

      // optional int32 m_pet = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_pet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_pet_)));
          set_has_m_pet();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_dragon;
        break;
      }

      // optional int32 m_dragon = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dragon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dragon_)));
          set_has_m_dragon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_equip;
        break;
      }

      // optional int32 m_equip = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equip_)));
          set_has_m_equip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_arena;
        break;
      }

      // optional int32 m_arena = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_arena:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_arena_)));
          set_has_m_arena();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_solo;
        break;
      }

      // optional int32 m_solo = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_solo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_solo_)));
          set_has_m_solo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_multiBattle;
        break;
      }

      // optional int32 m_multiBattle = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_multiBattle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_multibattle_)));
          set_has_m_multibattle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_qingyun;
        break;
      }

      // optional int32 m_qingyun = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_qingyun:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_qingyun_)));
          set_has_m_qingyun();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_yaochi;
        break;
      }

      // optional int32 m_yaochi = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_yaochi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_yaochi_)));
          set_has_m_yaochi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_wedding;
        break;
      }

      // optional int32 m_wedding = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wedding:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wedding_)));
          set_has_m_wedding();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_bagua;
        break;
      }

      // optional int32 m_bagua = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bagua:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bagua_)));
          set_has_m_bagua();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_exp(), output);
  }

  // optional int32 m_skillPoint = 3;
  if (has_m_skillpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_skillpoint(), output);
  }

  // optional int32 m_prepareModeDexp = 4;
  if (has_m_preparemodedexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_preparemodedexp(), output);
  }

  // optional int32 m_fengshen = 5;
  if (has_m_fengshen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_fengshen(), output);
  }

  // optional int32 m_pet = 6;
  if (has_m_pet()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_pet(), output);
  }

  // optional int32 m_dragon = 7;
  if (has_m_dragon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_dragon(), output);
  }

  // optional int32 m_equip = 8;
  if (has_m_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_equip(), output);
  }

  // optional int32 m_arena = 9;
  if (has_m_arena()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_arena(), output);
  }

  // optional int32 m_solo = 10;
  if (has_m_solo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_solo(), output);
  }

  // optional int32 m_multiBattle = 11;
  if (has_m_multibattle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_multibattle(), output);
  }

  // optional int32 m_qingyun = 12;
  if (has_m_qingyun()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_qingyun(), output);
  }

  // optional int32 m_yaochi = 13;
  if (has_m_yaochi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_yaochi(), output);
  }

  // optional int32 m_wedding = 14;
  if (has_m_wedding()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_wedding(), output);
  }

  // optional int32 m_bagua = 15;
  if (has_m_bagua()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_bagua(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_exp(), target);
  }

  // optional int32 m_skillPoint = 3;
  if (has_m_skillpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_skillpoint(), target);
  }

  // optional int32 m_prepareModeDexp = 4;
  if (has_m_preparemodedexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_preparemodedexp(), target);
  }

  // optional int32 m_fengshen = 5;
  if (has_m_fengshen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_fengshen(), target);
  }

  // optional int32 m_pet = 6;
  if (has_m_pet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_pet(), target);
  }

  // optional int32 m_dragon = 7;
  if (has_m_dragon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_dragon(), target);
  }

  // optional int32 m_equip = 8;
  if (has_m_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_equip(), target);
  }

  // optional int32 m_arena = 9;
  if (has_m_arena()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_arena(), target);
  }

  // optional int32 m_solo = 10;
  if (has_m_solo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_solo(), target);
  }

  // optional int32 m_multiBattle = 11;
  if (has_m_multibattle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_multibattle(), target);
  }

  // optional int32 m_qingyun = 12;
  if (has_m_qingyun()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_qingyun(), target);
  }

  // optional int32 m_yaochi = 13;
  if (has_m_yaochi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_yaochi(), target);
  }

  // optional int32 m_wedding = 14;
  if (has_m_wedding()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_wedding(), target);
  }

  // optional int32 m_bagua = 15;
  if (has_m_bagua()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_bagua(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleExp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int64 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_exp());
    }

    // optional int32 m_skillPoint = 3;
    if (has_m_skillpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillpoint());
    }

    // optional int32 m_prepareModeDexp = 4;
    if (has_m_preparemodedexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_preparemodedexp());
    }

    // optional int32 m_fengshen = 5;
    if (has_m_fengshen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_fengshen());
    }

    // optional int32 m_pet = 6;
    if (has_m_pet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_pet());
    }

    // optional int32 m_dragon = 7;
    if (has_m_dragon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dragon());
    }

    // optional int32 m_equip = 8;
    if (has_m_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equip());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_arena = 9;
    if (has_m_arena()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_arena());
    }

    // optional int32 m_solo = 10;
    if (has_m_solo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_solo());
    }

    // optional int32 m_multiBattle = 11;
    if (has_m_multibattle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_multibattle());
    }

    // optional int32 m_qingyun = 12;
    if (has_m_qingyun()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_qingyun());
    }

    // optional int32 m_yaochi = 13;
    if (has_m_yaochi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_yaochi());
    }

    // optional int32 m_wedding = 14;
    if (has_m_wedding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wedding());
    }

    // optional int32 m_bagua = 15;
    if (has_m_bagua()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bagua());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleExp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleExp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleExp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleExp::MergeFrom(const E_RoleExp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_skillpoint()) {
      set_m_skillpoint(from.m_skillpoint());
    }
    if (from.has_m_preparemodedexp()) {
      set_m_preparemodedexp(from.m_preparemodedexp());
    }
    if (from.has_m_fengshen()) {
      set_m_fengshen(from.m_fengshen());
    }
    if (from.has_m_pet()) {
      set_m_pet(from.m_pet());
    }
    if (from.has_m_dragon()) {
      set_m_dragon(from.m_dragon());
    }
    if (from.has_m_equip()) {
      set_m_equip(from.m_equip());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_arena()) {
      set_m_arena(from.m_arena());
    }
    if (from.has_m_solo()) {
      set_m_solo(from.m_solo());
    }
    if (from.has_m_multibattle()) {
      set_m_multibattle(from.m_multibattle());
    }
    if (from.has_m_qingyun()) {
      set_m_qingyun(from.m_qingyun());
    }
    if (from.has_m_yaochi()) {
      set_m_yaochi(from.m_yaochi());
    }
    if (from.has_m_wedding()) {
      set_m_wedding(from.m_wedding());
    }
    if (from.has_m_bagua()) {
      set_m_bagua(from.m_bagua());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleExp::CopyFrom(const E_RoleExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleExp::IsInitialized() const {

  return true;
}

void E_RoleExp::Swap(E_RoleExp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_skillpoint_, other->m_skillpoint_);
    std::swap(m_preparemodedexp_, other->m_preparemodedexp_);
    std::swap(m_fengshen_, other->m_fengshen_);
    std::swap(m_pet_, other->m_pet_);
    std::swap(m_dragon_, other->m_dragon_);
    std::swap(m_equip_, other->m_equip_);
    std::swap(m_arena_, other->m_arena_);
    std::swap(m_solo_, other->m_solo_);
    std::swap(m_multibattle_, other->m_multibattle_);
    std::swap(m_qingyun_, other->m_qingyun_);
    std::swap(m_yaochi_, other->m_yaochi_);
    std::swap(m_wedding_, other->m_wedding_);
    std::swap(m_bagua_, other->m_bagua_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleExp_descriptor_;
  metadata.reflection = E_RoleExp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleExp::kERoleExpListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleExp::Sheet_RoleExp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleExp::InitAsDefaultInstance() {
}

Sheet_RoleExp::Sheet_RoleExp(const Sheet_RoleExp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleExp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleExp::~Sheet_RoleExp() {
  SharedDtor();
}

void Sheet_RoleExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleExp_descriptor_;
}

const Sheet_RoleExp& Sheet_RoleExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleExp* Sheet_RoleExp::default_instance_ = NULL;

Sheet_RoleExp* Sheet_RoleExp::New() const {
  return new Sheet_RoleExp;
}

void Sheet_RoleExp::Clear() {
  e_roleexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleExp E_RoleExp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleExp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleExp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleExp E_RoleExp_List = 1;
  for (int i = 0; i < this->e_roleexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleExp E_RoleExp_List = 1;
  for (int i = 0; i < this->e_roleexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleExp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleExp E_RoleExp_List = 1;
  total_size += 1 * this->e_roleexp_list_size();
  for (int i = 0; i < this->e_roleexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleExp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleExp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleExp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleExp::MergeFrom(const Sheet_RoleExp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleexp_list_.MergeFrom(from.e_roleexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleExp::CopyFrom(const Sheet_RoleExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleExp::IsInitialized() const {

  return true;
}

void Sheet_RoleExp::Swap(Sheet_RoleExp* other) {
  if (other != this) {
    e_roleexp_list_.Swap(&other->e_roleexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleExp_descriptor_;
  metadata.reflection = Sheet_RoleExp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleSkilltype::kMSkillIdFieldNumber;
const int E_RoleSkilltype::kMSkillTypeFieldNumber;
#endif  // !_MSC_VER

E_RoleSkilltype::E_RoleSkilltype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleSkilltype::InitAsDefaultInstance() {
}

E_RoleSkilltype::E_RoleSkilltype(const E_RoleSkilltype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleSkilltype::SharedCtor() {
  _cached_size_ = 0;
  m_skillid_ = GOOGLE_LONGLONG(0);
  m_skilltype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleSkilltype::~E_RoleSkilltype() {
  SharedDtor();
}

void E_RoleSkilltype::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleSkilltype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleSkilltype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleSkilltype_descriptor_;
}

const E_RoleSkilltype& E_RoleSkilltype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleSkilltype* E_RoleSkilltype::default_instance_ = NULL;

E_RoleSkilltype* E_RoleSkilltype::New() const {
  return new E_RoleSkilltype;
}

void E_RoleSkilltype::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_skillid_ = GOOGLE_LONGLONG(0);
    m_skilltype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleSkilltype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_skillId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_skillType;
        break;
      }

      // optional int32 m_skillType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skilltype_)));
          set_has_m_skilltype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleSkilltype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_skillId = 1;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_skillid(), output);
  }

  // optional int32 m_skillType = 2;
  if (has_m_skilltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_skilltype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleSkilltype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_skillId = 1;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_skillid(), target);
  }

  // optional int32 m_skillType = 2;
  if (has_m_skilltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_skilltype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleSkilltype::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_skillId = 1;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_skillid());
    }

    // optional int32 m_skillType = 2;
    if (has_m_skilltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skilltype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleSkilltype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleSkilltype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleSkilltype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleSkilltype::MergeFrom(const E_RoleSkilltype& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_skilltype()) {
      set_m_skilltype(from.m_skilltype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleSkilltype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleSkilltype::CopyFrom(const E_RoleSkilltype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleSkilltype::IsInitialized() const {

  return true;
}

void E_RoleSkilltype::Swap(E_RoleSkilltype* other) {
  if (other != this) {
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_skilltype_, other->m_skilltype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleSkilltype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleSkilltype_descriptor_;
  metadata.reflection = E_RoleSkilltype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleSkilltype::kERoleSkilltypeListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleSkilltype::Sheet_RoleSkilltype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleSkilltype::InitAsDefaultInstance() {
}

Sheet_RoleSkilltype::Sheet_RoleSkilltype(const Sheet_RoleSkilltype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleSkilltype::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleSkilltype::~Sheet_RoleSkilltype() {
  SharedDtor();
}

void Sheet_RoleSkilltype::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleSkilltype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleSkilltype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleSkilltype_descriptor_;
}

const Sheet_RoleSkilltype& Sheet_RoleSkilltype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleSkilltype* Sheet_RoleSkilltype::default_instance_ = NULL;

Sheet_RoleSkilltype* Sheet_RoleSkilltype::New() const {
  return new Sheet_RoleSkilltype;
}

void Sheet_RoleSkilltype::Clear() {
  e_roleskilltype_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleSkilltype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleSkilltype E_RoleSkilltype_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleSkilltype_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleskilltype_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleSkilltype_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleSkilltype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleSkilltype E_RoleSkilltype_List = 1;
  for (int i = 0; i < this->e_roleskilltype_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleskilltype_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleSkilltype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleSkilltype E_RoleSkilltype_List = 1;
  for (int i = 0; i < this->e_roleskilltype_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleskilltype_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleSkilltype::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleSkilltype E_RoleSkilltype_List = 1;
  total_size += 1 * this->e_roleskilltype_list_size();
  for (int i = 0; i < this->e_roleskilltype_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleskilltype_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleSkilltype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleSkilltype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleSkilltype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleSkilltype::MergeFrom(const Sheet_RoleSkilltype& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleskilltype_list_.MergeFrom(from.e_roleskilltype_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleSkilltype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleSkilltype::CopyFrom(const Sheet_RoleSkilltype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleSkilltype::IsInitialized() const {

  return true;
}

void Sheet_RoleSkilltype::Swap(Sheet_RoleSkilltype* other) {
  if (other != this) {
    e_roleskilltype_list_.Swap(&other->e_roleskilltype_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleSkilltype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleSkilltype_descriptor_;
  metadata.reflection = Sheet_RoleSkilltype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleAddskill::kMIdFieldNumber;
const int E_RoleAddskill::kMSkillIdFieldNumber;
#endif  // !_MSC_VER

E_RoleAddskill::E_RoleAddskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleAddskill::InitAsDefaultInstance() {
}

E_RoleAddskill::E_RoleAddskill(const E_RoleAddskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleAddskill::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_skillid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleAddskill::~E_RoleAddskill() {
  SharedDtor();
}

void E_RoleAddskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleAddskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleAddskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleAddskill_descriptor_;
}

const E_RoleAddskill& E_RoleAddskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleAddskill* E_RoleAddskill::default_instance_ = NULL;

E_RoleAddskill* E_RoleAddskill::New() const {
  return new E_RoleAddskill;
}

void E_RoleAddskill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_skillid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleAddskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_skillId;
        break;
      }

      // optional int64 m_skillId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleAddskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int64 m_skillId = 2;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleAddskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int64 m_skillId = 2;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleAddskill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int64 m_skillId = 2;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleAddskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleAddskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleAddskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleAddskill::MergeFrom(const E_RoleAddskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleAddskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleAddskill::CopyFrom(const E_RoleAddskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleAddskill::IsInitialized() const {

  return true;
}

void E_RoleAddskill::Swap(E_RoleAddskill* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleAddskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleAddskill_descriptor_;
  metadata.reflection = E_RoleAddskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleAddskill::kERoleAddskillListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleAddskill::Sheet_RoleAddskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleAddskill::InitAsDefaultInstance() {
}

Sheet_RoleAddskill::Sheet_RoleAddskill(const Sheet_RoleAddskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleAddskill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleAddskill::~Sheet_RoleAddskill() {
  SharedDtor();
}

void Sheet_RoleAddskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleAddskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleAddskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleAddskill_descriptor_;
}

const Sheet_RoleAddskill& Sheet_RoleAddskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleAddskill* Sheet_RoleAddskill::default_instance_ = NULL;

Sheet_RoleAddskill* Sheet_RoleAddskill::New() const {
  return new Sheet_RoleAddskill;
}

void Sheet_RoleAddskill::Clear() {
  e_roleaddskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleAddskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleAddskill E_RoleAddskill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleAddskill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleaddskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleAddskill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleAddskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleAddskill E_RoleAddskill_List = 1;
  for (int i = 0; i < this->e_roleaddskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleaddskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleAddskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleAddskill E_RoleAddskill_List = 1;
  for (int i = 0; i < this->e_roleaddskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleaddskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleAddskill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleAddskill E_RoleAddskill_List = 1;
  total_size += 1 * this->e_roleaddskill_list_size();
  for (int i = 0; i < this->e_roleaddskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleaddskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleAddskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleAddskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleAddskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleAddskill::MergeFrom(const Sheet_RoleAddskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleaddskill_list_.MergeFrom(from.e_roleaddskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleAddskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleAddskill::CopyFrom(const Sheet_RoleAddskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleAddskill::IsInitialized() const {

  return true;
}

void Sheet_RoleAddskill::Swap(Sheet_RoleAddskill* other) {
  if (other != this) {
    e_roleaddskill_list_.Swap(&other->e_roleaddskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleAddskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleAddskill_descriptor_;
  metadata.reflection = Sheet_RoleAddskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RoleWorldexp::kMLvFieldNumber;
const int E_RoleWorldexp::kMWorldExpFieldNumber;
#endif  // !_MSC_VER

E_RoleWorldexp::E_RoleWorldexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RoleWorldexp::InitAsDefaultInstance() {
}

E_RoleWorldexp::E_RoleWorldexp(const E_RoleWorldexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RoleWorldexp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = GOOGLE_LONGLONG(0);
  m_worldexp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RoleWorldexp::~E_RoleWorldexp() {
  SharedDtor();
}

void E_RoleWorldexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RoleWorldexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RoleWorldexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RoleWorldexp_descriptor_;
}

const E_RoleWorldexp& E_RoleWorldexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

E_RoleWorldexp* E_RoleWorldexp::default_instance_ = NULL;

E_RoleWorldexp* E_RoleWorldexp::New() const {
  return new E_RoleWorldexp;
}

void E_RoleWorldexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = GOOGLE_LONGLONG(0);
    m_worldexp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RoleWorldexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_worldExp;
        break;
      }

      // optional int32 m_worldExp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_worldExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_worldexp_)));
          set_has_m_worldexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RoleWorldexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_lv(), output);
  }

  // optional int32 m_worldExp = 2;
  if (has_m_worldexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_worldexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RoleWorldexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_worldExp = 2;
  if (has_m_worldexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_worldexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RoleWorldexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_lv());
    }

    // optional int32 m_worldExp = 2;
    if (has_m_worldexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_worldexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RoleWorldexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RoleWorldexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RoleWorldexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RoleWorldexp::MergeFrom(const E_RoleWorldexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_worldexp()) {
      set_m_worldexp(from.m_worldexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RoleWorldexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RoleWorldexp::CopyFrom(const E_RoleWorldexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RoleWorldexp::IsInitialized() const {

  return true;
}

void E_RoleWorldexp::Swap(E_RoleWorldexp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_worldexp_, other->m_worldexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RoleWorldexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RoleWorldexp_descriptor_;
  metadata.reflection = E_RoleWorldexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RoleWorldexp::kERoleWorldexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_RoleWorldexp::Sheet_RoleWorldexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RoleWorldexp::InitAsDefaultInstance() {
}

Sheet_RoleWorldexp::Sheet_RoleWorldexp(const Sheet_RoleWorldexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RoleWorldexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RoleWorldexp::~Sheet_RoleWorldexp() {
  SharedDtor();
}

void Sheet_RoleWorldexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RoleWorldexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RoleWorldexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RoleWorldexp_descriptor_;
}

const Sheet_RoleWorldexp& Sheet_RoleWorldexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRole_2eproto();
  return *default_instance_;
}

Sheet_RoleWorldexp* Sheet_RoleWorldexp::default_instance_ = NULL;

Sheet_RoleWorldexp* Sheet_RoleWorldexp::New() const {
  return new Sheet_RoleWorldexp;
}

void Sheet_RoleWorldexp::Clear() {
  e_roleworldexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RoleWorldexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RoleWorldexp E_RoleWorldexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RoleWorldexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_roleworldexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RoleWorldexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RoleWorldexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RoleWorldexp E_RoleWorldexp_List = 1;
  for (int i = 0; i < this->e_roleworldexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_roleworldexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RoleWorldexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RoleWorldexp E_RoleWorldexp_List = 1;
  for (int i = 0; i < this->e_roleworldexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_roleworldexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RoleWorldexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RoleWorldexp E_RoleWorldexp_List = 1;
  total_size += 1 * this->e_roleworldexp_list_size();
  for (int i = 0; i < this->e_roleworldexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_roleworldexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RoleWorldexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RoleWorldexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RoleWorldexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RoleWorldexp::MergeFrom(const Sheet_RoleWorldexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_roleworldexp_list_.MergeFrom(from.e_roleworldexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RoleWorldexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RoleWorldexp::CopyFrom(const Sheet_RoleWorldexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RoleWorldexp::IsInitialized() const {

  return true;
}

void Sheet_RoleWorldexp::Swap(Sheet_RoleWorldexp* other) {
  if (other != this) {
    e_roleworldexp_list_.Swap(&other->e_roleworldexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RoleWorldexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RoleWorldexp_descriptor_;
  metadata.reflection = Sheet_RoleWorldexp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
