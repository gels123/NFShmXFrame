// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Ranking.proto

#ifndef PROTOBUF_E_5fRanking_2eproto__INCLUDED
#define PROTOBUF_E_5fRanking_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fRanking_2eproto();
void protobuf_AssignDesc_E_5fRanking_2eproto();
void protobuf_ShutdownFile_E_5fRanking_2eproto();

class E_RankingRanking;
class Sheet_RankingRanking;
class E_RankingDate;
class Sheet_RankingDate;
class E_RankingButton;
class Sheet_RankingButton;

// ===================================================================

class E_RankingRanking : public ::google::protobuf::Message {
 public:
  E_RankingRanking();
  virtual ~E_RankingRanking();

  E_RankingRanking(const E_RankingRanking& from);

  inline E_RankingRanking& operator=(const E_RankingRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RankingRanking& default_instance();

  void Swap(E_RankingRanking* other);

  // implements Message ----------------------------------------------

  E_RankingRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RankingRanking& from);
  void MergeFrom(const E_RankingRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_rankingid = 1;
  inline bool has_m_rankingid() const;
  inline void clear_m_rankingid();
  static const int kMRankingidFieldNumber = 1;
  inline ::google::protobuf::int32 m_rankingid() const;
  inline void set_m_rankingid(::google::protobuf::int32 value);

  // optional string m_rankingname = 2;
  inline bool has_m_rankingname() const;
  inline void clear_m_rankingname();
  static const int kMRankingnameFieldNumber = 2;
  inline const ::std::string& m_rankingname() const;
  inline void set_m_rankingname(const ::std::string& value);
  inline void set_m_rankingname(const char* value);
  inline void set_m_rankingname(const char* value, size_t size);
  inline ::std::string* mutable_m_rankingname();
  inline ::std::string* release_m_rankingname();
  inline void set_allocated_m_rankingname(::std::string* m_rankingname);

  // optional string m_title = 3;
  inline bool has_m_title() const;
  inline void clear_m_title();
  static const int kMTitleFieldNumber = 3;
  inline const ::std::string& m_title() const;
  inline void set_m_title(const ::std::string& value);
  inline void set_m_title(const char* value);
  inline void set_m_title(const char* value, size_t size);
  inline ::std::string* mutable_m_title();
  inline ::std::string* release_m_title();
  inline void set_allocated_m_title(::std::string* m_title);

  // optional int32 m_capacity = 4;
  inline bool has_m_capacity() const;
  inline void clear_m_capacity();
  static const int kMCapacityFieldNumber = 4;
  inline ::google::protobuf::int32 m_capacity() const;
  inline void set_m_capacity(::google::protobuf::int32 value);

  // optional int32 m_showsize = 5;
  inline bool has_m_showsize() const;
  inline void clear_m_showsize();
  static const int kMShowsizeFieldNumber = 5;
  inline ::google::protobuf::int32 m_showsize() const;
  inline void set_m_showsize(::google::protobuf::int32 value);

  // optional int32 m_rankhide = 6;
  inline bool has_m_rankhide() const;
  inline void clear_m_rankhide();
  static const int kMRankhideFieldNumber = 6;
  inline ::google::protobuf::int32 m_rankhide() const;
  inline void set_m_rankhide(::google::protobuf::int32 value);

  // repeated int32 m_dateid = 7;
  inline int m_dateid_size() const;
  inline void clear_m_dateid();
  static const int kMDateidFieldNumber = 7;
  inline ::google::protobuf::int32 m_dateid(int index) const;
  inline void set_m_dateid(int index, ::google::protobuf::int32 value);
  inline void add_m_dateid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_dateid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_dateid();

  // @@protoc_insertion_point(class_scope:proto_ff.E_RankingRanking)
 private:
  inline void set_has_m_rankingid();
  inline void clear_has_m_rankingid();
  inline void set_has_m_rankingname();
  inline void clear_has_m_rankingname();
  inline void set_has_m_title();
  inline void clear_has_m_title();
  inline void set_has_m_capacity();
  inline void clear_has_m_capacity();
  inline void set_has_m_showsize();
  inline void clear_has_m_showsize();
  inline void set_has_m_rankhide();
  inline void clear_has_m_rankhide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_rankingname_;
  ::google::protobuf::int32 m_rankingid_;
  ::google::protobuf::int32 m_capacity_;
  ::std::string* m_title_;
  ::google::protobuf::int32 m_showsize_;
  ::google::protobuf::int32 m_rankhide_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_dateid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fRanking_2eproto();
  friend void protobuf_AssignDesc_E_5fRanking_2eproto();
  friend void protobuf_ShutdownFile_E_5fRanking_2eproto();

  void InitAsDefaultInstance();
  static E_RankingRanking* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RankingRanking : public ::google::protobuf::Message {
 public:
  Sheet_RankingRanking();
  virtual ~Sheet_RankingRanking();

  Sheet_RankingRanking(const Sheet_RankingRanking& from);

  inline Sheet_RankingRanking& operator=(const Sheet_RankingRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RankingRanking& default_instance();

  void Swap(Sheet_RankingRanking* other);

  // implements Message ----------------------------------------------

  Sheet_RankingRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RankingRanking& from);
  void MergeFrom(const Sheet_RankingRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RankingRanking E_RankingRanking_List = 1;
  inline int e_rankingranking_list_size() const;
  inline void clear_e_rankingranking_list();
  static const int kERankingRankingListFieldNumber = 1;
  inline const ::proto_ff::E_RankingRanking& e_rankingranking_list(int index) const;
  inline ::proto_ff::E_RankingRanking* mutable_e_rankingranking_list(int index);
  inline ::proto_ff::E_RankingRanking* add_e_rankingranking_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingRanking >&
      e_rankingranking_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingRanking >*
      mutable_e_rankingranking_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RankingRanking)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingRanking > e_rankingranking_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fRanking_2eproto();
  friend void protobuf_AssignDesc_E_5fRanking_2eproto();
  friend void protobuf_ShutdownFile_E_5fRanking_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RankingRanking* default_instance_;
};
// -------------------------------------------------------------------

class E_RankingDate : public ::google::protobuf::Message {
 public:
  E_RankingDate();
  virtual ~E_RankingDate();

  E_RankingDate(const E_RankingDate& from);

  inline E_RankingDate& operator=(const E_RankingDate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RankingDate& default_instance();

  void Swap(E_RankingDate* other);

  // implements Message ----------------------------------------------

  E_RankingDate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RankingDate& from);
  void MergeFrom(const E_RankingDate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_dateid = 1;
  inline bool has_m_dateid() const;
  inline void clear_m_dateid();
  static const int kMDateidFieldNumber = 1;
  inline ::google::protobuf::int32 m_dateid() const;
  inline void set_m_dateid(::google::protobuf::int32 value);

  // optional string m_datename = 2;
  inline bool has_m_datename() const;
  inline void clear_m_datename();
  static const int kMDatenameFieldNumber = 2;
  inline const ::std::string& m_datename() const;
  inline void set_m_datename(const ::std::string& value);
  inline void set_m_datename(const char* value);
  inline void set_m_datename(const char* value, size_t size);
  inline ::std::string* mutable_m_datename();
  inline ::std::string* release_m_datename();
  inline void set_allocated_m_datename(::std::string* m_datename);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RankingDate)
 private:
  inline void set_has_m_dateid();
  inline void clear_has_m_dateid();
  inline void set_has_m_datename();
  inline void clear_has_m_datename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_datename_;
  ::google::protobuf::int32 m_dateid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fRanking_2eproto();
  friend void protobuf_AssignDesc_E_5fRanking_2eproto();
  friend void protobuf_ShutdownFile_E_5fRanking_2eproto();

  void InitAsDefaultInstance();
  static E_RankingDate* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RankingDate : public ::google::protobuf::Message {
 public:
  Sheet_RankingDate();
  virtual ~Sheet_RankingDate();

  Sheet_RankingDate(const Sheet_RankingDate& from);

  inline Sheet_RankingDate& operator=(const Sheet_RankingDate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RankingDate& default_instance();

  void Swap(Sheet_RankingDate* other);

  // implements Message ----------------------------------------------

  Sheet_RankingDate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RankingDate& from);
  void MergeFrom(const Sheet_RankingDate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RankingDate E_RankingDate_List = 1;
  inline int e_rankingdate_list_size() const;
  inline void clear_e_rankingdate_list();
  static const int kERankingDateListFieldNumber = 1;
  inline const ::proto_ff::E_RankingDate& e_rankingdate_list(int index) const;
  inline ::proto_ff::E_RankingDate* mutable_e_rankingdate_list(int index);
  inline ::proto_ff::E_RankingDate* add_e_rankingdate_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingDate >&
      e_rankingdate_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingDate >*
      mutable_e_rankingdate_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RankingDate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingDate > e_rankingdate_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fRanking_2eproto();
  friend void protobuf_AssignDesc_E_5fRanking_2eproto();
  friend void protobuf_ShutdownFile_E_5fRanking_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RankingDate* default_instance_;
};
// -------------------------------------------------------------------

class E_RankingButton : public ::google::protobuf::Message {
 public:
  E_RankingButton();
  virtual ~E_RankingButton();

  E_RankingButton(const E_RankingButton& from);

  inline E_RankingButton& operator=(const E_RankingButton& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RankingButton& default_instance();

  void Swap(E_RankingButton* other);

  // implements Message ----------------------------------------------

  E_RankingButton* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RankingButton& from);
  void MergeFrom(const E_RankingButton& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_buttonid = 1;
  inline bool has_m_buttonid() const;
  inline void clear_m_buttonid();
  static const int kMButtonidFieldNumber = 1;
  inline ::google::protobuf::int32 m_buttonid() const;
  inline void set_m_buttonid(::google::protobuf::int32 value);

  // optional string m_buttonname = 2;
  inline bool has_m_buttonname() const;
  inline void clear_m_buttonname();
  static const int kMButtonnameFieldNumber = 2;
  inline const ::std::string& m_buttonname() const;
  inline void set_m_buttonname(const ::std::string& value);
  inline void set_m_buttonname(const char* value);
  inline void set_m_buttonname(const char* value, size_t size);
  inline ::std::string* mutable_m_buttonname();
  inline ::std::string* release_m_buttonname();
  inline void set_allocated_m_buttonname(::std::string* m_buttonname);

  // optional int32 m_display = 3;
  inline bool has_m_display() const;
  inline void clear_m_display();
  static const int kMDisplayFieldNumber = 3;
  inline ::google::protobuf::int32 m_display() const;
  inline void set_m_display(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RankingButton)
 private:
  inline void set_has_m_buttonid();
  inline void clear_has_m_buttonid();
  inline void set_has_m_buttonname();
  inline void clear_has_m_buttonname();
  inline void set_has_m_display();
  inline void clear_has_m_display();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_buttonname_;
  ::google::protobuf::int32 m_buttonid_;
  ::google::protobuf::int32 m_display_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fRanking_2eproto();
  friend void protobuf_AssignDesc_E_5fRanking_2eproto();
  friend void protobuf_ShutdownFile_E_5fRanking_2eproto();

  void InitAsDefaultInstance();
  static E_RankingButton* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RankingButton : public ::google::protobuf::Message {
 public:
  Sheet_RankingButton();
  virtual ~Sheet_RankingButton();

  Sheet_RankingButton(const Sheet_RankingButton& from);

  inline Sheet_RankingButton& operator=(const Sheet_RankingButton& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RankingButton& default_instance();

  void Swap(Sheet_RankingButton* other);

  // implements Message ----------------------------------------------

  Sheet_RankingButton* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RankingButton& from);
  void MergeFrom(const Sheet_RankingButton& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RankingButton E_RankingButton_List = 1;
  inline int e_rankingbutton_list_size() const;
  inline void clear_e_rankingbutton_list();
  static const int kERankingButtonListFieldNumber = 1;
  inline const ::proto_ff::E_RankingButton& e_rankingbutton_list(int index) const;
  inline ::proto_ff::E_RankingButton* mutable_e_rankingbutton_list(int index);
  inline ::proto_ff::E_RankingButton* add_e_rankingbutton_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingButton >&
      e_rankingbutton_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingButton >*
      mutable_e_rankingbutton_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RankingButton)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingButton > e_rankingbutton_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fRanking_2eproto();
  friend void protobuf_AssignDesc_E_5fRanking_2eproto();
  friend void protobuf_ShutdownFile_E_5fRanking_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RankingButton* default_instance_;
};
// ===================================================================


// ===================================================================

// E_RankingRanking

// optional int32 m_rankingid = 1;
inline bool E_RankingRanking::has_m_rankingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RankingRanking::set_has_m_rankingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RankingRanking::clear_has_m_rankingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RankingRanking::clear_m_rankingid() {
  m_rankingid_ = 0;
  clear_has_m_rankingid();
}
inline ::google::protobuf::int32 E_RankingRanking::m_rankingid() const {
  return m_rankingid_;
}
inline void E_RankingRanking::set_m_rankingid(::google::protobuf::int32 value) {
  set_has_m_rankingid();
  m_rankingid_ = value;
}

// optional string m_rankingname = 2;
inline bool E_RankingRanking::has_m_rankingname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RankingRanking::set_has_m_rankingname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RankingRanking::clear_has_m_rankingname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RankingRanking::clear_m_rankingname() {
  if (m_rankingname_ != &::google::protobuf::internal::kEmptyString) {
    m_rankingname_->clear();
  }
  clear_has_m_rankingname();
}
inline const ::std::string& E_RankingRanking::m_rankingname() const {
  return *m_rankingname_;
}
inline void E_RankingRanking::set_m_rankingname(const ::std::string& value) {
  set_has_m_rankingname();
  if (m_rankingname_ == &::google::protobuf::internal::kEmptyString) {
    m_rankingname_ = new ::std::string;
  }
  m_rankingname_->assign(value);
}
inline void E_RankingRanking::set_m_rankingname(const char* value) {
  set_has_m_rankingname();
  if (m_rankingname_ == &::google::protobuf::internal::kEmptyString) {
    m_rankingname_ = new ::std::string;
  }
  m_rankingname_->assign(value);
}
inline void E_RankingRanking::set_m_rankingname(const char* value, size_t size) {
  set_has_m_rankingname();
  if (m_rankingname_ == &::google::protobuf::internal::kEmptyString) {
    m_rankingname_ = new ::std::string;
  }
  m_rankingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RankingRanking::mutable_m_rankingname() {
  set_has_m_rankingname();
  if (m_rankingname_ == &::google::protobuf::internal::kEmptyString) {
    m_rankingname_ = new ::std::string;
  }
  return m_rankingname_;
}
inline ::std::string* E_RankingRanking::release_m_rankingname() {
  clear_has_m_rankingname();
  if (m_rankingname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rankingname_;
    m_rankingname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RankingRanking::set_allocated_m_rankingname(::std::string* m_rankingname) {
  if (m_rankingname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rankingname_;
  }
  if (m_rankingname) {
    set_has_m_rankingname();
    m_rankingname_ = m_rankingname;
  } else {
    clear_has_m_rankingname();
    m_rankingname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_title = 3;
inline bool E_RankingRanking::has_m_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_RankingRanking::set_has_m_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_RankingRanking::clear_has_m_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_RankingRanking::clear_m_title() {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    m_title_->clear();
  }
  clear_has_m_title();
}
inline const ::std::string& E_RankingRanking::m_title() const {
  return *m_title_;
}
inline void E_RankingRanking::set_m_title(const ::std::string& value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void E_RankingRanking::set_m_title(const char* value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void E_RankingRanking::set_m_title(const char* value, size_t size) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RankingRanking::mutable_m_title() {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  return m_title_;
}
inline ::std::string* E_RankingRanking::release_m_title() {
  clear_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_title_;
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RankingRanking::set_allocated_m_title(::std::string* m_title) {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    delete m_title_;
  }
  if (m_title) {
    set_has_m_title();
    m_title_ = m_title;
  } else {
    clear_has_m_title();
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_capacity = 4;
inline bool E_RankingRanking::has_m_capacity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_RankingRanking::set_has_m_capacity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_RankingRanking::clear_has_m_capacity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_RankingRanking::clear_m_capacity() {
  m_capacity_ = 0;
  clear_has_m_capacity();
}
inline ::google::protobuf::int32 E_RankingRanking::m_capacity() const {
  return m_capacity_;
}
inline void E_RankingRanking::set_m_capacity(::google::protobuf::int32 value) {
  set_has_m_capacity();
  m_capacity_ = value;
}

// optional int32 m_showsize = 5;
inline bool E_RankingRanking::has_m_showsize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_RankingRanking::set_has_m_showsize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_RankingRanking::clear_has_m_showsize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_RankingRanking::clear_m_showsize() {
  m_showsize_ = 0;
  clear_has_m_showsize();
}
inline ::google::protobuf::int32 E_RankingRanking::m_showsize() const {
  return m_showsize_;
}
inline void E_RankingRanking::set_m_showsize(::google::protobuf::int32 value) {
  set_has_m_showsize();
  m_showsize_ = value;
}

// optional int32 m_rankhide = 6;
inline bool E_RankingRanking::has_m_rankhide() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_RankingRanking::set_has_m_rankhide() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_RankingRanking::clear_has_m_rankhide() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_RankingRanking::clear_m_rankhide() {
  m_rankhide_ = 0;
  clear_has_m_rankhide();
}
inline ::google::protobuf::int32 E_RankingRanking::m_rankhide() const {
  return m_rankhide_;
}
inline void E_RankingRanking::set_m_rankhide(::google::protobuf::int32 value) {
  set_has_m_rankhide();
  m_rankhide_ = value;
}

// repeated int32 m_dateid = 7;
inline int E_RankingRanking::m_dateid_size() const {
  return m_dateid_.size();
}
inline void E_RankingRanking::clear_m_dateid() {
  m_dateid_.Clear();
}
inline ::google::protobuf::int32 E_RankingRanking::m_dateid(int index) const {
  return m_dateid_.Get(index);
}
inline void E_RankingRanking::set_m_dateid(int index, ::google::protobuf::int32 value) {
  m_dateid_.Set(index, value);
}
inline void E_RankingRanking::add_m_dateid(::google::protobuf::int32 value) {
  m_dateid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_RankingRanking::m_dateid() const {
  return m_dateid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_RankingRanking::mutable_m_dateid() {
  return &m_dateid_;
}

// -------------------------------------------------------------------

// Sheet_RankingRanking

// repeated .proto_ff.E_RankingRanking E_RankingRanking_List = 1;
inline int Sheet_RankingRanking::e_rankingranking_list_size() const {
  return e_rankingranking_list_.size();
}
inline void Sheet_RankingRanking::clear_e_rankingranking_list() {
  e_rankingranking_list_.Clear();
}
inline const ::proto_ff::E_RankingRanking& Sheet_RankingRanking::e_rankingranking_list(int index) const {
  return e_rankingranking_list_.Get(index);
}
inline ::proto_ff::E_RankingRanking* Sheet_RankingRanking::mutable_e_rankingranking_list(int index) {
  return e_rankingranking_list_.Mutable(index);
}
inline ::proto_ff::E_RankingRanking* Sheet_RankingRanking::add_e_rankingranking_list() {
  return e_rankingranking_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingRanking >&
Sheet_RankingRanking::e_rankingranking_list() const {
  return e_rankingranking_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingRanking >*
Sheet_RankingRanking::mutable_e_rankingranking_list() {
  return &e_rankingranking_list_;
}

// -------------------------------------------------------------------

// E_RankingDate

// optional int32 m_dateid = 1;
inline bool E_RankingDate::has_m_dateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RankingDate::set_has_m_dateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RankingDate::clear_has_m_dateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RankingDate::clear_m_dateid() {
  m_dateid_ = 0;
  clear_has_m_dateid();
}
inline ::google::protobuf::int32 E_RankingDate::m_dateid() const {
  return m_dateid_;
}
inline void E_RankingDate::set_m_dateid(::google::protobuf::int32 value) {
  set_has_m_dateid();
  m_dateid_ = value;
}

// optional string m_datename = 2;
inline bool E_RankingDate::has_m_datename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RankingDate::set_has_m_datename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RankingDate::clear_has_m_datename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RankingDate::clear_m_datename() {
  if (m_datename_ != &::google::protobuf::internal::kEmptyString) {
    m_datename_->clear();
  }
  clear_has_m_datename();
}
inline const ::std::string& E_RankingDate::m_datename() const {
  return *m_datename_;
}
inline void E_RankingDate::set_m_datename(const ::std::string& value) {
  set_has_m_datename();
  if (m_datename_ == &::google::protobuf::internal::kEmptyString) {
    m_datename_ = new ::std::string;
  }
  m_datename_->assign(value);
}
inline void E_RankingDate::set_m_datename(const char* value) {
  set_has_m_datename();
  if (m_datename_ == &::google::protobuf::internal::kEmptyString) {
    m_datename_ = new ::std::string;
  }
  m_datename_->assign(value);
}
inline void E_RankingDate::set_m_datename(const char* value, size_t size) {
  set_has_m_datename();
  if (m_datename_ == &::google::protobuf::internal::kEmptyString) {
    m_datename_ = new ::std::string;
  }
  m_datename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RankingDate::mutable_m_datename() {
  set_has_m_datename();
  if (m_datename_ == &::google::protobuf::internal::kEmptyString) {
    m_datename_ = new ::std::string;
  }
  return m_datename_;
}
inline ::std::string* E_RankingDate::release_m_datename() {
  clear_has_m_datename();
  if (m_datename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_datename_;
    m_datename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RankingDate::set_allocated_m_datename(::std::string* m_datename) {
  if (m_datename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_datename_;
  }
  if (m_datename) {
    set_has_m_datename();
    m_datename_ = m_datename;
  } else {
    clear_has_m_datename();
    m_datename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RankingDate

// repeated .proto_ff.E_RankingDate E_RankingDate_List = 1;
inline int Sheet_RankingDate::e_rankingdate_list_size() const {
  return e_rankingdate_list_.size();
}
inline void Sheet_RankingDate::clear_e_rankingdate_list() {
  e_rankingdate_list_.Clear();
}
inline const ::proto_ff::E_RankingDate& Sheet_RankingDate::e_rankingdate_list(int index) const {
  return e_rankingdate_list_.Get(index);
}
inline ::proto_ff::E_RankingDate* Sheet_RankingDate::mutable_e_rankingdate_list(int index) {
  return e_rankingdate_list_.Mutable(index);
}
inline ::proto_ff::E_RankingDate* Sheet_RankingDate::add_e_rankingdate_list() {
  return e_rankingdate_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingDate >&
Sheet_RankingDate::e_rankingdate_list() const {
  return e_rankingdate_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingDate >*
Sheet_RankingDate::mutable_e_rankingdate_list() {
  return &e_rankingdate_list_;
}

// -------------------------------------------------------------------

// E_RankingButton

// optional int32 m_buttonid = 1;
inline bool E_RankingButton::has_m_buttonid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RankingButton::set_has_m_buttonid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RankingButton::clear_has_m_buttonid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RankingButton::clear_m_buttonid() {
  m_buttonid_ = 0;
  clear_has_m_buttonid();
}
inline ::google::protobuf::int32 E_RankingButton::m_buttonid() const {
  return m_buttonid_;
}
inline void E_RankingButton::set_m_buttonid(::google::protobuf::int32 value) {
  set_has_m_buttonid();
  m_buttonid_ = value;
}

// optional string m_buttonname = 2;
inline bool E_RankingButton::has_m_buttonname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RankingButton::set_has_m_buttonname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RankingButton::clear_has_m_buttonname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RankingButton::clear_m_buttonname() {
  if (m_buttonname_ != &::google::protobuf::internal::kEmptyString) {
    m_buttonname_->clear();
  }
  clear_has_m_buttonname();
}
inline const ::std::string& E_RankingButton::m_buttonname() const {
  return *m_buttonname_;
}
inline void E_RankingButton::set_m_buttonname(const ::std::string& value) {
  set_has_m_buttonname();
  if (m_buttonname_ == &::google::protobuf::internal::kEmptyString) {
    m_buttonname_ = new ::std::string;
  }
  m_buttonname_->assign(value);
}
inline void E_RankingButton::set_m_buttonname(const char* value) {
  set_has_m_buttonname();
  if (m_buttonname_ == &::google::protobuf::internal::kEmptyString) {
    m_buttonname_ = new ::std::string;
  }
  m_buttonname_->assign(value);
}
inline void E_RankingButton::set_m_buttonname(const char* value, size_t size) {
  set_has_m_buttonname();
  if (m_buttonname_ == &::google::protobuf::internal::kEmptyString) {
    m_buttonname_ = new ::std::string;
  }
  m_buttonname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RankingButton::mutable_m_buttonname() {
  set_has_m_buttonname();
  if (m_buttonname_ == &::google::protobuf::internal::kEmptyString) {
    m_buttonname_ = new ::std::string;
  }
  return m_buttonname_;
}
inline ::std::string* E_RankingButton::release_m_buttonname() {
  clear_has_m_buttonname();
  if (m_buttonname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_buttonname_;
    m_buttonname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RankingButton::set_allocated_m_buttonname(::std::string* m_buttonname) {
  if (m_buttonname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_buttonname_;
  }
  if (m_buttonname) {
    set_has_m_buttonname();
    m_buttonname_ = m_buttonname;
  } else {
    clear_has_m_buttonname();
    m_buttonname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_display = 3;
inline bool E_RankingButton::has_m_display() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_RankingButton::set_has_m_display() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_RankingButton::clear_has_m_display() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_RankingButton::clear_m_display() {
  m_display_ = 0;
  clear_has_m_display();
}
inline ::google::protobuf::int32 E_RankingButton::m_display() const {
  return m_display_;
}
inline void E_RankingButton::set_m_display(::google::protobuf::int32 value) {
  set_has_m_display();
  m_display_ = value;
}

// -------------------------------------------------------------------

// Sheet_RankingButton

// repeated .proto_ff.E_RankingButton E_RankingButton_List = 1;
inline int Sheet_RankingButton::e_rankingbutton_list_size() const {
  return e_rankingbutton_list_.size();
}
inline void Sheet_RankingButton::clear_e_rankingbutton_list() {
  e_rankingbutton_list_.Clear();
}
inline const ::proto_ff::E_RankingButton& Sheet_RankingButton::e_rankingbutton_list(int index) const {
  return e_rankingbutton_list_.Get(index);
}
inline ::proto_ff::E_RankingButton* Sheet_RankingButton::mutable_e_rankingbutton_list(int index) {
  return e_rankingbutton_list_.Mutable(index);
}
inline ::proto_ff::E_RankingButton* Sheet_RankingButton::add_e_rankingbutton_list() {
  return e_rankingbutton_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingButton >&
Sheet_RankingButton::e_rankingbutton_list() const {
  return e_rankingbutton_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RankingButton >*
Sheet_RankingButton::mutable_e_rankingbutton_list() {
  return &e_rankingbutton_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fRanking_2eproto__INCLUDED
