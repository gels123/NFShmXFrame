// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Package.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Package.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* ItemTipProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemTipProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MutItemTipProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MutItemTipProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageSortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageSortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageSortRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageSortRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* StorageOperateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StorageOperateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StorageOperateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StorageOperateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPackageUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPackageUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageUseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageUseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageUseRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageUseRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageSellReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageSellReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageSellRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageSellRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageExpandReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageExpandReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackageExpandRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackageExpandRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Package_2eproto() {
  protobuf_AddDesc_Package_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Package.proto");
  GOOGLE_CHECK(file != NULL);
  ItemTipProto_descriptor_ = file->message_type(0);
  static const int ItemTipProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemTipProto, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemTipProto, item_num_),
  };
  ItemTipProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemTipProto_descriptor_,
      ItemTipProto::default_instance_,
      ItemTipProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemTipProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemTipProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemTipProto));
  MutItemTipProto_descriptor_ = file->message_type(1);
  static const int MutItemTipProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutItemTipProto, mut_tip_),
  };
  MutItemTipProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MutItemTipProto_descriptor_,
      MutItemTipProto::default_instance_,
      MutItemTipProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutItemTipProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutItemTipProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MutItemTipProto));
  PackageInfoReq_descriptor_ = file->message_type(2);
  static const int PackageInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoReq, package_type_),
  };
  PackageInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageInfoReq_descriptor_,
      PackageInfoReq::default_instance_,
      PackageInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageInfoReq));
  PackageInfoRsp_descriptor_ = file->message_type(3);
  static const int PackageInfoRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, package_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, init_all_grid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, expand_grid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, max_grid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, item_list_),
  };
  PackageInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageInfoRsp_descriptor_,
      PackageInfoRsp::default_instance_,
      PackageInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageInfoRsp));
  PackageSortReq_descriptor_ = file->message_type(4);
  static const int PackageSortReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortReq, package_type_),
  };
  PackageSortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageSortReq_descriptor_,
      PackageSortReq::default_instance_,
      PackageSortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageSortReq));
  PackageSortRsp_descriptor_ = file->message_type(5);
  static const int PackageSortRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortRsp, package_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortRsp, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortRsp, item_list_),
  };
  PackageSortRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageSortRsp_descriptor_,
      PackageSortRsp::default_instance_,
      PackageSortRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSortRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageSortRsp));
  StorageOperateReq_descriptor_ = file->message_type(6);
  static const int StorageOperateReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateReq, operate_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateReq, operate_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateReq, operate_num_),
  };
  StorageOperateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StorageOperateReq_descriptor_,
      StorageOperateReq::default_instance_,
      StorageOperateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StorageOperateReq));
  StorageOperateRsp_descriptor_ = file->message_type(7);
  static const int StorageOperateRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateRsp, retcode_),
  };
  StorageOperateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StorageOperateRsp_descriptor_,
      StorageOperateRsp::default_instance_,
      StorageOperateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageOperateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StorageOperateRsp));
  NotifyPackageUpdate_descriptor_ = file->message_type(8);
  static const int NotifyPackageUpdate_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPackageUpdate, package_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPackageUpdate, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPackageUpdate, item_tip_),
  };
  NotifyPackageUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyPackageUpdate_descriptor_,
      NotifyPackageUpdate::default_instance_,
      NotifyPackageUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPackageUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPackageUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyPackageUpdate));
  PackageUseReq_descriptor_ = file->message_type(9);
  static const int PackageUseReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseReq, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseReq, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseReq, item_lst_),
  };
  PackageUseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageUseReq_descriptor_,
      PackageUseReq::default_instance_,
      PackageUseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageUseReq));
  PackageUseRet_descriptor_ = file->message_type(10);
  static const int PackageUseRet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseRet, retcode_),
  };
  PackageUseRet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageUseRet_descriptor_,
      PackageUseRet::default_instance_,
      PackageUseRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseRet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageUseRet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageUseRet));
  PackageSellReq_descriptor_ = file->message_type(11);
  static const int PackageSellReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSellReq, sell_),
  };
  PackageSellReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageSellReq_descriptor_,
      PackageSellReq::default_instance_,
      PackageSellReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSellReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSellReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageSellReq));
  PackageSellRet_descriptor_ = file->message_type(12);
  static const int PackageSellRet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSellRet, retcode_),
  };
  PackageSellRet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageSellRet_descriptor_,
      PackageSellRet::default_instance_,
      PackageSellRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSellRet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageSellRet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageSellRet));
  PackageExpandReq_descriptor_ = file->message_type(13);
  static const int PackageExpandReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandReq, package_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandReq, expand_grid_),
  };
  PackageExpandReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageExpandReq_descriptor_,
      PackageExpandReq::default_instance_,
      PackageExpandReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageExpandReq));
  PackageExpandRsp_descriptor_ = file->message_type(14);
  static const int PackageExpandRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandRsp, package_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandRsp, expand_grid_),
  };
  PackageExpandRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PackageExpandRsp_descriptor_,
      PackageExpandRsp::default_instance_,
      PackageExpandRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackageExpandRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PackageExpandRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Package_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemTipProto_descriptor_, &ItemTipProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MutItemTipProto_descriptor_, &MutItemTipProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageInfoReq_descriptor_, &PackageInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageInfoRsp_descriptor_, &PackageInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageSortReq_descriptor_, &PackageSortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageSortRsp_descriptor_, &PackageSortRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StorageOperateReq_descriptor_, &StorageOperateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StorageOperateRsp_descriptor_, &StorageOperateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyPackageUpdate_descriptor_, &NotifyPackageUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageUseReq_descriptor_, &PackageUseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageUseRet_descriptor_, &PackageUseRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageSellReq_descriptor_, &PackageSellReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageSellRet_descriptor_, &PackageSellRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageExpandReq_descriptor_, &PackageExpandReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PackageExpandRsp_descriptor_, &PackageExpandRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Package_2eproto() {
  delete ItemTipProto::default_instance_;
  delete ItemTipProto_reflection_;
  delete MutItemTipProto::default_instance_;
  delete MutItemTipProto_reflection_;
  delete PackageInfoReq::default_instance_;
  delete PackageInfoReq_reflection_;
  delete PackageInfoRsp::default_instance_;
  delete PackageInfoRsp_reflection_;
  delete PackageSortReq::default_instance_;
  delete PackageSortReq_reflection_;
  delete PackageSortRsp::default_instance_;
  delete PackageSortRsp_reflection_;
  delete StorageOperateReq::default_instance_;
  delete StorageOperateReq_reflection_;
  delete StorageOperateRsp::default_instance_;
  delete StorageOperateRsp_reflection_;
  delete NotifyPackageUpdate::default_instance_;
  delete NotifyPackageUpdate_reflection_;
  delete PackageUseReq::default_instance_;
  delete PackageUseReq_reflection_;
  delete PackageUseRet::default_instance_;
  delete PackageUseRet_reflection_;
  delete PackageSellReq::default_instance_;
  delete PackageSellReq_reflection_;
  delete PackageSellRet::default_instance_;
  delete PackageSellRet_reflection_;
  delete PackageExpandReq::default_instance_;
  delete PackageExpandReq_reflection_;
  delete PackageExpandRsp::default_instance_;
  delete PackageExpandRsp_reflection_;
}

void protobuf_AddDesc_Package_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rPackage.proto\022\010proto_ff\032\tCom.proto\032\017Co"
    "mDefine.proto\"1\n\014ItemTipProto\022\017\n\007item_id"
    "\030\001 \001(\004\022\020\n\010item_num\030\002 \001(\r\":\n\017MutItemTipPr"
    "oto\022\'\n\007mut_tip\030\001 \003(\0132\026.proto_ff.ItemTipP"
    "roto\"&\n\016PackageInfoReq\022\024\n\014package_type\030\001"
    " \002(\005\"\220\001\n\016PackageInfoRsp\022\024\n\014package_type\030"
    "\001 \002(\005\022\025\n\rinit_all_grid\030\002 \002(\005\022\023\n\013expand_g"
    "rid\030\003 \002(\005\022\020\n\010max_grid\030\004 \002(\005\022*\n\titem_list"
    "\030\005 \003(\0132\027.proto_ff.ItemProtoInfo\"&\n\016Packa"
    "geSortReq\022\024\n\014package_type\030\001 \002(\005\"c\n\016Packa"
    "geSortRsp\022\024\n\014package_type\030\001 \002(\005\022\017\n\007retco"
    "de\030\002 \002(\005\022*\n\titem_list\030\003 \003(\0132\027.proto_ff.I"
    "temProtoInfo\"U\n\021StorageOperateReq\022\024\n\014ope"
    "rate_type\030\001 \002(\005\022\025\n\roperate_index\030\002 \002(\005\022\023"
    "\n\013operate_num\030\003 \001(\005\"$\n\021StorageOperateRsp"
    "\022\017\n\007retcode\030\001 \002(\005\"\204\001\n\023NotifyPackageUpdat"
    "e\022\024\n\014package_type\030\001 \002(\r\022*\n\titem_list\030\002 \003"
    "(\0132\027.proto_ff.ItemProtoInfo\022+\n\010item_tip\030"
    "\003 \001(\0132\031.proto_ff.MutItemTipProto\"=\n\rPack"
    "ageUseReq\022\r\n\005index\030\001 \002(\005\022\013\n\003num\030\002 \001(\005\022\020\n"
    "\010item_lst\030\003 \003(\004\" \n\rPackageUseRet\022\017\n\007retc"
    "ode\030\001 \002(\005\"7\n\016PackageSellReq\022%\n\004sell\030\001 \003("
    "\0132\027.proto_ff.ItemSellProto\"!\n\016PackageSel"
    "lRet\022\017\n\007retcode\030\001 \002(\005\"=\n\020PackageExpandRe"
    "q\022\024\n\014package_type\030\001 \001(\005\022\023\n\013expand_grid\030\002"
    " \001(\005\"J\n\020PackageExpandRsp\022\013\n\003ret\030\001 \001(\005\022\024\n"
    "\014package_type\030\002 \001(\005\022\023\n\013expand_grid\030\003 \001(\005", 1080);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Package.proto", &protobuf_RegisterTypes);
  ItemTipProto::default_instance_ = new ItemTipProto();
  MutItemTipProto::default_instance_ = new MutItemTipProto();
  PackageInfoReq::default_instance_ = new PackageInfoReq();
  PackageInfoRsp::default_instance_ = new PackageInfoRsp();
  PackageSortReq::default_instance_ = new PackageSortReq();
  PackageSortRsp::default_instance_ = new PackageSortRsp();
  StorageOperateReq::default_instance_ = new StorageOperateReq();
  StorageOperateRsp::default_instance_ = new StorageOperateRsp();
  NotifyPackageUpdate::default_instance_ = new NotifyPackageUpdate();
  PackageUseReq::default_instance_ = new PackageUseReq();
  PackageUseRet::default_instance_ = new PackageUseRet();
  PackageSellReq::default_instance_ = new PackageSellReq();
  PackageSellRet::default_instance_ = new PackageSellRet();
  PackageExpandReq::default_instance_ = new PackageExpandReq();
  PackageExpandRsp::default_instance_ = new PackageExpandRsp();
  ItemTipProto::default_instance_->InitAsDefaultInstance();
  MutItemTipProto::default_instance_->InitAsDefaultInstance();
  PackageInfoReq::default_instance_->InitAsDefaultInstance();
  PackageInfoRsp::default_instance_->InitAsDefaultInstance();
  PackageSortReq::default_instance_->InitAsDefaultInstance();
  PackageSortRsp::default_instance_->InitAsDefaultInstance();
  StorageOperateReq::default_instance_->InitAsDefaultInstance();
  StorageOperateRsp::default_instance_->InitAsDefaultInstance();
  NotifyPackageUpdate::default_instance_->InitAsDefaultInstance();
  PackageUseReq::default_instance_->InitAsDefaultInstance();
  PackageUseRet::default_instance_->InitAsDefaultInstance();
  PackageSellReq::default_instance_->InitAsDefaultInstance();
  PackageSellRet::default_instance_->InitAsDefaultInstance();
  PackageExpandReq::default_instance_->InitAsDefaultInstance();
  PackageExpandRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Package_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Package_2eproto {
  StaticDescriptorInitializer_Package_2eproto() {
    protobuf_AddDesc_Package_2eproto();
  }
} static_descriptor_initializer_Package_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemTipProto::kItemIdFieldNumber;
const int ItemTipProto::kItemNumFieldNumber;
#endif  // !_MSC_VER

ItemTipProto::ItemTipProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemTipProto::InitAsDefaultInstance() {
}

ItemTipProto::ItemTipProto(const ItemTipProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemTipProto::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  item_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemTipProto::~ItemTipProto() {
  SharedDtor();
}

void ItemTipProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemTipProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemTipProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemTipProto_descriptor_;
}

const ItemTipProto& ItemTipProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

ItemTipProto* ItemTipProto::default_instance_ = NULL;

ItemTipProto* ItemTipProto::New() const {
  return new ItemTipProto;
}

void ItemTipProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = GOOGLE_ULONGLONG(0);
    item_num_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemTipProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }

      // optional uint32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemTipProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 item_num = 2;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemTipProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 item_num = 2;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemTipProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemTipProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemTipProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemTipProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemTipProto::MergeFrom(const ItemTipProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemTipProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemTipProto::CopyFrom(const ItemTipProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemTipProto::IsInitialized() const {

  return true;
}

void ItemTipProto::Swap(ItemTipProto* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemTipProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemTipProto_descriptor_;
  metadata.reflection = ItemTipProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MutItemTipProto::kMutTipFieldNumber;
#endif  // !_MSC_VER

MutItemTipProto::MutItemTipProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MutItemTipProto::InitAsDefaultInstance() {
}

MutItemTipProto::MutItemTipProto(const MutItemTipProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MutItemTipProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MutItemTipProto::~MutItemTipProto() {
  SharedDtor();
}

void MutItemTipProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MutItemTipProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutItemTipProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MutItemTipProto_descriptor_;
}

const MutItemTipProto& MutItemTipProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

MutItemTipProto* MutItemTipProto::default_instance_ = NULL;

MutItemTipProto* MutItemTipProto::New() const {
  return new MutItemTipProto;
}

void MutItemTipProto::Clear() {
  mut_tip_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MutItemTipProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.ItemTipProto mut_tip = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mut_tip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mut_tip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mut_tip;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MutItemTipProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.ItemTipProto mut_tip = 1;
  for (int i = 0; i < this->mut_tip_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mut_tip(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MutItemTipProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.ItemTipProto mut_tip = 1;
  for (int i = 0; i < this->mut_tip_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mut_tip(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MutItemTipProto::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.ItemTipProto mut_tip = 1;
  total_size += 1 * this->mut_tip_size();
  for (int i = 0; i < this->mut_tip_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mut_tip(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutItemTipProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MutItemTipProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MutItemTipProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MutItemTipProto::MergeFrom(const MutItemTipProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mut_tip_.MergeFrom(from.mut_tip_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MutItemTipProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutItemTipProto::CopyFrom(const MutItemTipProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutItemTipProto::IsInitialized() const {

  return true;
}

void MutItemTipProto::Swap(MutItemTipProto* other) {
  if (other != this) {
    mut_tip_.Swap(&other->mut_tip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MutItemTipProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MutItemTipProto_descriptor_;
  metadata.reflection = MutItemTipProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageInfoReq::kPackageTypeFieldNumber;
#endif  // !_MSC_VER

PackageInfoReq::PackageInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageInfoReq::InitAsDefaultInstance() {
}

PackageInfoReq::PackageInfoReq(const PackageInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageInfoReq::SharedCtor() {
  _cached_size_ = 0;
  package_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageInfoReq::~PackageInfoReq() {
  SharedDtor();
}

void PackageInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageInfoReq_descriptor_;
}

const PackageInfoReq& PackageInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageInfoReq* PackageInfoReq::default_instance_ = NULL;

PackageInfoReq* PackageInfoReq::New() const {
  return new PackageInfoReq;
}

void PackageInfoReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 package_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->package_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->package_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 package_type = 1;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageInfoReq::MergeFrom(const PackageInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageInfoReq::CopyFrom(const PackageInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PackageInfoReq::Swap(PackageInfoReq* other) {
  if (other != this) {
    std::swap(package_type_, other->package_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageInfoReq_descriptor_;
  metadata.reflection = PackageInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageInfoRsp::kPackageTypeFieldNumber;
const int PackageInfoRsp::kInitAllGridFieldNumber;
const int PackageInfoRsp::kExpandGridFieldNumber;
const int PackageInfoRsp::kMaxGridFieldNumber;
const int PackageInfoRsp::kItemListFieldNumber;
#endif  // !_MSC_VER

PackageInfoRsp::PackageInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageInfoRsp::InitAsDefaultInstance() {
}

PackageInfoRsp::PackageInfoRsp(const PackageInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  package_type_ = 0;
  init_all_grid_ = 0;
  expand_grid_ = 0;
  max_grid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageInfoRsp::~PackageInfoRsp() {
  SharedDtor();
}

void PackageInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageInfoRsp_descriptor_;
}

const PackageInfoRsp& PackageInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageInfoRsp* PackageInfoRsp::default_instance_ = NULL;

PackageInfoRsp* PackageInfoRsp::New() const {
  return new PackageInfoRsp;
}

void PackageInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_type_ = 0;
    init_all_grid_ = 0;
    expand_grid_ = 0;
    max_grid_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 package_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_init_all_grid;
        break;
      }

      // required int32 init_all_grid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_init_all_grid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &init_all_grid_)));
          set_has_init_all_grid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_expand_grid;
        break;
      }

      // required int32 expand_grid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expand_grid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expand_grid_)));
          set_has_expand_grid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_max_grid;
        break;
      }

      // required int32 max_grid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_grid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_grid_)));
          set_has_max_grid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_list;
        break;
      }

      // repeated .proto_ff.ItemProtoInfo item_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->package_type(), output);
  }

  // required int32 init_all_grid = 2;
  if (has_init_all_grid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->init_all_grid(), output);
  }

  // required int32 expand_grid = 3;
  if (has_expand_grid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->expand_grid(), output);
  }

  // required int32 max_grid = 4;
  if (has_max_grid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_grid(), output);
  }

  // repeated .proto_ff.ItemProtoInfo item_list = 5;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->package_type(), target);
  }

  // required int32 init_all_grid = 2;
  if (has_init_all_grid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->init_all_grid(), target);
  }

  // required int32 expand_grid = 3;
  if (has_expand_grid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->expand_grid(), target);
  }

  // required int32 max_grid = 4;
  if (has_max_grid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_grid(), target);
  }

  // repeated .proto_ff.ItemProtoInfo item_list = 5;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->item_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 package_type = 1;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }

    // required int32 init_all_grid = 2;
    if (has_init_all_grid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->init_all_grid());
    }

    // required int32 expand_grid = 3;
    if (has_expand_grid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expand_grid());
    }

    // required int32 max_grid = 4;
    if (has_max_grid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_grid());
    }

  }
  // repeated .proto_ff.ItemProtoInfo item_list = 5;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageInfoRsp::MergeFrom(const PackageInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
    if (from.has_init_all_grid()) {
      set_init_all_grid(from.init_all_grid());
    }
    if (from.has_expand_grid()) {
      set_expand_grid(from.expand_grid());
    }
    if (from.has_max_grid()) {
      set_max_grid(from.max_grid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageInfoRsp::CopyFrom(const PackageInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfoRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  for (int i = 0; i < item_list_size(); i++) {
    if (!this->item_list(i).IsInitialized()) return false;
  }
  return true;
}

void PackageInfoRsp::Swap(PackageInfoRsp* other) {
  if (other != this) {
    std::swap(package_type_, other->package_type_);
    std::swap(init_all_grid_, other->init_all_grid_);
    std::swap(expand_grid_, other->expand_grid_);
    std::swap(max_grid_, other->max_grid_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageInfoRsp_descriptor_;
  metadata.reflection = PackageInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageSortReq::kPackageTypeFieldNumber;
#endif  // !_MSC_VER

PackageSortReq::PackageSortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageSortReq::InitAsDefaultInstance() {
}

PackageSortReq::PackageSortReq(const PackageSortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageSortReq::SharedCtor() {
  _cached_size_ = 0;
  package_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageSortReq::~PackageSortReq() {
  SharedDtor();
}

void PackageSortReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageSortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageSortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageSortReq_descriptor_;
}

const PackageSortReq& PackageSortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageSortReq* PackageSortReq::default_instance_ = NULL;

PackageSortReq* PackageSortReq::New() const {
  return new PackageSortReq;
}

void PackageSortReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageSortReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 package_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageSortReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->package_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageSortReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->package_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageSortReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 package_type = 1;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageSortReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageSortReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageSortReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageSortReq::MergeFrom(const PackageSortReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageSortReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageSortReq::CopyFrom(const PackageSortReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageSortReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PackageSortReq::Swap(PackageSortReq* other) {
  if (other != this) {
    std::swap(package_type_, other->package_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageSortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageSortReq_descriptor_;
  metadata.reflection = PackageSortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageSortRsp::kPackageTypeFieldNumber;
const int PackageSortRsp::kRetcodeFieldNumber;
const int PackageSortRsp::kItemListFieldNumber;
#endif  // !_MSC_VER

PackageSortRsp::PackageSortRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageSortRsp::InitAsDefaultInstance() {
}

PackageSortRsp::PackageSortRsp(const PackageSortRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageSortRsp::SharedCtor() {
  _cached_size_ = 0;
  package_type_ = 0;
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageSortRsp::~PackageSortRsp() {
  SharedDtor();
}

void PackageSortRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageSortRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageSortRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageSortRsp_descriptor_;
}

const PackageSortRsp& PackageSortRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageSortRsp* PackageSortRsp::default_instance_ = NULL;

PackageSortRsp* PackageSortRsp::New() const {
  return new PackageSortRsp;
}

void PackageSortRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_type_ = 0;
    retcode_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageSortRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 package_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_retcode;
        break;
      }

      // required int32 retcode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_retcode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }

      // repeated .proto_ff.ItemProtoInfo item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageSortRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->package_type(), output);
  }

  // required int32 retcode = 2;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // repeated .proto_ff.ItemProtoInfo item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageSortRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 package_type = 1;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->package_type(), target);
  }

  // required int32 retcode = 2;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // repeated .proto_ff.ItemProtoInfo item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageSortRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 package_type = 1;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }

    // required int32 retcode = 2;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

  }
  // repeated .proto_ff.ItemProtoInfo item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageSortRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageSortRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageSortRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageSortRsp::MergeFrom(const PackageSortRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageSortRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageSortRsp::CopyFrom(const PackageSortRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageSortRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < item_list_size(); i++) {
    if (!this->item_list(i).IsInitialized()) return false;
  }
  return true;
}

void PackageSortRsp::Swap(PackageSortRsp* other) {
  if (other != this) {
    std::swap(package_type_, other->package_type_);
    std::swap(retcode_, other->retcode_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageSortRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageSortRsp_descriptor_;
  metadata.reflection = PackageSortRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StorageOperateReq::kOperateTypeFieldNumber;
const int StorageOperateReq::kOperateIndexFieldNumber;
const int StorageOperateReq::kOperateNumFieldNumber;
#endif  // !_MSC_VER

StorageOperateReq::StorageOperateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StorageOperateReq::InitAsDefaultInstance() {
}

StorageOperateReq::StorageOperateReq(const StorageOperateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StorageOperateReq::SharedCtor() {
  _cached_size_ = 0;
  operate_type_ = 0;
  operate_index_ = 0;
  operate_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StorageOperateReq::~StorageOperateReq() {
  SharedDtor();
}

void StorageOperateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StorageOperateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageOperateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StorageOperateReq_descriptor_;
}

const StorageOperateReq& StorageOperateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

StorageOperateReq* StorageOperateReq::default_instance_ = NULL;

StorageOperateReq* StorageOperateReq::New() const {
  return new StorageOperateReq;
}

void StorageOperateReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    operate_type_ = 0;
    operate_index_ = 0;
    operate_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StorageOperateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 operate_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_type_)));
          set_has_operate_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_operate_index;
        break;
      }

      // required int32 operate_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_operate_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_index_)));
          set_has_operate_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_operate_num;
        break;
      }

      // optional int32 operate_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_operate_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_num_)));
          set_has_operate_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StorageOperateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 operate_type = 1;
  if (has_operate_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operate_type(), output);
  }

  // required int32 operate_index = 2;
  if (has_operate_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->operate_index(), output);
  }

  // optional int32 operate_num = 3;
  if (has_operate_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->operate_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StorageOperateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 operate_type = 1;
  if (has_operate_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operate_type(), target);
  }

  // required int32 operate_index = 2;
  if (has_operate_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->operate_index(), target);
  }

  // optional int32 operate_num = 3;
  if (has_operate_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->operate_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StorageOperateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 operate_type = 1;
    if (has_operate_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate_type());
    }

    // required int32 operate_index = 2;
    if (has_operate_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate_index());
    }

    // optional int32 operate_num = 3;
    if (has_operate_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageOperateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StorageOperateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StorageOperateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StorageOperateReq::MergeFrom(const StorageOperateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operate_type()) {
      set_operate_type(from.operate_type());
    }
    if (from.has_operate_index()) {
      set_operate_index(from.operate_index());
    }
    if (from.has_operate_num()) {
      set_operate_num(from.operate_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StorageOperateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageOperateReq::CopyFrom(const StorageOperateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageOperateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void StorageOperateReq::Swap(StorageOperateReq* other) {
  if (other != this) {
    std::swap(operate_type_, other->operate_type_);
    std::swap(operate_index_, other->operate_index_);
    std::swap(operate_num_, other->operate_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StorageOperateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StorageOperateReq_descriptor_;
  metadata.reflection = StorageOperateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StorageOperateRsp::kRetcodeFieldNumber;
#endif  // !_MSC_VER

StorageOperateRsp::StorageOperateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StorageOperateRsp::InitAsDefaultInstance() {
}

StorageOperateRsp::StorageOperateRsp(const StorageOperateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StorageOperateRsp::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StorageOperateRsp::~StorageOperateRsp() {
  SharedDtor();
}

void StorageOperateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StorageOperateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageOperateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StorageOperateRsp_descriptor_;
}

const StorageOperateRsp& StorageOperateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

StorageOperateRsp* StorageOperateRsp::default_instance_ = NULL;

StorageOperateRsp* StorageOperateRsp::New() const {
  return new StorageOperateRsp;
}

void StorageOperateRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StorageOperateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StorageOperateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StorageOperateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StorageOperateRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageOperateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StorageOperateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StorageOperateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StorageOperateRsp::MergeFrom(const StorageOperateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StorageOperateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageOperateRsp::CopyFrom(const StorageOperateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageOperateRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StorageOperateRsp::Swap(StorageOperateRsp* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StorageOperateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StorageOperateRsp_descriptor_;
  metadata.reflection = StorageOperateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyPackageUpdate::kPackageTypeFieldNumber;
const int NotifyPackageUpdate::kItemListFieldNumber;
const int NotifyPackageUpdate::kItemTipFieldNumber;
#endif  // !_MSC_VER

NotifyPackageUpdate::NotifyPackageUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyPackageUpdate::InitAsDefaultInstance() {
  item_tip_ = const_cast< ::proto_ff::MutItemTipProto*>(&::proto_ff::MutItemTipProto::default_instance());
}

NotifyPackageUpdate::NotifyPackageUpdate(const NotifyPackageUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyPackageUpdate::SharedCtor() {
  _cached_size_ = 0;
  package_type_ = 0u;
  item_tip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPackageUpdate::~NotifyPackageUpdate() {
  SharedDtor();
}

void NotifyPackageUpdate::SharedDtor() {
  if (this != default_instance_) {
    delete item_tip_;
  }
}

void NotifyPackageUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPackageUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPackageUpdate_descriptor_;
}

const NotifyPackageUpdate& NotifyPackageUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

NotifyPackageUpdate* NotifyPackageUpdate::default_instance_ = NULL;

NotifyPackageUpdate* NotifyPackageUpdate::New() const {
  return new NotifyPackageUpdate;
}

void NotifyPackageUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_type_ = 0u;
    if (has_item_tip()) {
      if (item_tip_ != NULL) item_tip_->::proto_ff::MutItemTipProto::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyPackageUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 package_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        break;
      }

      // repeated .proto_ff.ItemProtoInfo item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        if (input->ExpectTag(26)) goto parse_item_tip;
        break;
      }

      // optional .proto_ff.MutItemTipProto item_tip = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_tip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_tip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyPackageUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 package_type = 1;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_type(), output);
  }

  // repeated .proto_ff.ItemProtoInfo item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(i), output);
  }

  // optional .proto_ff.MutItemTipProto item_tip = 3;
  if (has_item_tip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_tip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyPackageUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 package_type = 1;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_type(), target);
  }

  // repeated .proto_ff.ItemProtoInfo item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_list(i), target);
  }

  // optional .proto_ff.MutItemTipProto item_tip = 3;
  if (has_item_tip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_tip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyPackageUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 package_type = 1;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_type());
    }

    // optional .proto_ff.MutItemTipProto item_tip = 3;
    if (has_item_tip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_tip());
    }

  }
  // repeated .proto_ff.ItemProtoInfo item_list = 2;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPackageUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyPackageUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyPackageUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyPackageUpdate::MergeFrom(const NotifyPackageUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
    if (from.has_item_tip()) {
      mutable_item_tip()->::proto_ff::MutItemTipProto::MergeFrom(from.item_tip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyPackageUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPackageUpdate::CopyFrom(const NotifyPackageUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPackageUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < item_list_size(); i++) {
    if (!this->item_list(i).IsInitialized()) return false;
  }
  return true;
}

void NotifyPackageUpdate::Swap(NotifyPackageUpdate* other) {
  if (other != this) {
    std::swap(package_type_, other->package_type_);
    item_list_.Swap(&other->item_list_);
    std::swap(item_tip_, other->item_tip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyPackageUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPackageUpdate_descriptor_;
  metadata.reflection = NotifyPackageUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageUseReq::kIndexFieldNumber;
const int PackageUseReq::kNumFieldNumber;
const int PackageUseReq::kItemLstFieldNumber;
#endif  // !_MSC_VER

PackageUseReq::PackageUseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageUseReq::InitAsDefaultInstance() {
}

PackageUseReq::PackageUseReq(const PackageUseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageUseReq::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageUseReq::~PackageUseReq() {
  SharedDtor();
}

void PackageUseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageUseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageUseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageUseReq_descriptor_;
}

const PackageUseReq& PackageUseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageUseReq* PackageUseReq::default_instance_ = NULL;

PackageUseReq* PackageUseReq::New() const {
  return new PackageUseReq;
}

void PackageUseReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    num_ = 0;
  }
  item_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageUseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_lst;
        break;
      }

      // repeated uint64 item_lst = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_item_lst())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_lst())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageUseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // repeated uint64 item_lst = 3;
  for (int i = 0; i < this->item_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->item_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageUseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // repeated uint64 item_lst = 3;
  for (int i = 0; i < this->item_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->item_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageUseReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  // repeated uint64 item_lst = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->item_lst(i));
    }
    total_size += 1 * this->item_lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageUseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageUseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageUseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageUseReq::MergeFrom(const PackageUseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_lst_.MergeFrom(from.item_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageUseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageUseReq::CopyFrom(const PackageUseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageUseReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PackageUseReq::Swap(PackageUseReq* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(num_, other->num_);
    item_lst_.Swap(&other->item_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageUseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageUseReq_descriptor_;
  metadata.reflection = PackageUseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageUseRet::kRetcodeFieldNumber;
#endif  // !_MSC_VER

PackageUseRet::PackageUseRet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageUseRet::InitAsDefaultInstance() {
}

PackageUseRet::PackageUseRet(const PackageUseRet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageUseRet::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageUseRet::~PackageUseRet() {
  SharedDtor();
}

void PackageUseRet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageUseRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageUseRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageUseRet_descriptor_;
}

const PackageUseRet& PackageUseRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageUseRet* PackageUseRet::default_instance_ = NULL;

PackageUseRet* PackageUseRet::New() const {
  return new PackageUseRet;
}

void PackageUseRet::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageUseRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageUseRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageUseRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageUseRet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageUseRet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageUseRet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageUseRet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageUseRet::MergeFrom(const PackageUseRet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageUseRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageUseRet::CopyFrom(const PackageUseRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageUseRet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PackageUseRet::Swap(PackageUseRet* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageUseRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageUseRet_descriptor_;
  metadata.reflection = PackageUseRet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageSellReq::kSellFieldNumber;
#endif  // !_MSC_VER

PackageSellReq::PackageSellReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageSellReq::InitAsDefaultInstance() {
}

PackageSellReq::PackageSellReq(const PackageSellReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageSellReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageSellReq::~PackageSellReq() {
  SharedDtor();
}

void PackageSellReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageSellReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageSellReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageSellReq_descriptor_;
}

const PackageSellReq& PackageSellReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageSellReq* PackageSellReq::default_instance_ = NULL;

PackageSellReq* PackageSellReq::New() const {
  return new PackageSellReq;
}

void PackageSellReq::Clear() {
  sell_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageSellReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.ItemSellProto sell = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sell()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sell;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageSellReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.ItemSellProto sell = 1;
  for (int i = 0; i < this->sell_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sell(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageSellReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.ItemSellProto sell = 1;
  for (int i = 0; i < this->sell_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sell(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageSellReq::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.ItemSellProto sell = 1;
  total_size += 1 * this->sell_size();
  for (int i = 0; i < this->sell_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sell(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageSellReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageSellReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageSellReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageSellReq::MergeFrom(const PackageSellReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  sell_.MergeFrom(from.sell_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageSellReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageSellReq::CopyFrom(const PackageSellReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageSellReq::IsInitialized() const {

  for (int i = 0; i < sell_size(); i++) {
    if (!this->sell(i).IsInitialized()) return false;
  }
  return true;
}

void PackageSellReq::Swap(PackageSellReq* other) {
  if (other != this) {
    sell_.Swap(&other->sell_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageSellReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageSellReq_descriptor_;
  metadata.reflection = PackageSellReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageSellRet::kRetcodeFieldNumber;
#endif  // !_MSC_VER

PackageSellRet::PackageSellRet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageSellRet::InitAsDefaultInstance() {
}

PackageSellRet::PackageSellRet(const PackageSellRet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageSellRet::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageSellRet::~PackageSellRet() {
  SharedDtor();
}

void PackageSellRet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageSellRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageSellRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageSellRet_descriptor_;
}

const PackageSellRet& PackageSellRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageSellRet* PackageSellRet::default_instance_ = NULL;

PackageSellRet* PackageSellRet::New() const {
  return new PackageSellRet;
}

void PackageSellRet::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageSellRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageSellRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageSellRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageSellRet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageSellRet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageSellRet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageSellRet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageSellRet::MergeFrom(const PackageSellRet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageSellRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageSellRet::CopyFrom(const PackageSellRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageSellRet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PackageSellRet::Swap(PackageSellRet* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageSellRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageSellRet_descriptor_;
  metadata.reflection = PackageSellRet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageExpandReq::kPackageTypeFieldNumber;
const int PackageExpandReq::kExpandGridFieldNumber;
#endif  // !_MSC_VER

PackageExpandReq::PackageExpandReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageExpandReq::InitAsDefaultInstance() {
}

PackageExpandReq::PackageExpandReq(const PackageExpandReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageExpandReq::SharedCtor() {
  _cached_size_ = 0;
  package_type_ = 0;
  expand_grid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageExpandReq::~PackageExpandReq() {
  SharedDtor();
}

void PackageExpandReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageExpandReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageExpandReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageExpandReq_descriptor_;
}

const PackageExpandReq& PackageExpandReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageExpandReq* PackageExpandReq::default_instance_ = NULL;

PackageExpandReq* PackageExpandReq::New() const {
  return new PackageExpandReq;
}

void PackageExpandReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    package_type_ = 0;
    expand_grid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageExpandReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 package_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_expand_grid;
        break;
      }

      // optional int32 expand_grid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expand_grid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expand_grid_)));
          set_has_expand_grid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageExpandReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 package_type = 1;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->package_type(), output);
  }

  // optional int32 expand_grid = 2;
  if (has_expand_grid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->expand_grid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageExpandReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 package_type = 1;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->package_type(), target);
  }

  // optional int32 expand_grid = 2;
  if (has_expand_grid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->expand_grid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageExpandReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 package_type = 1;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }

    // optional int32 expand_grid = 2;
    if (has_expand_grid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expand_grid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageExpandReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageExpandReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageExpandReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageExpandReq::MergeFrom(const PackageExpandReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
    if (from.has_expand_grid()) {
      set_expand_grid(from.expand_grid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageExpandReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageExpandReq::CopyFrom(const PackageExpandReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageExpandReq::IsInitialized() const {

  return true;
}

void PackageExpandReq::Swap(PackageExpandReq* other) {
  if (other != this) {
    std::swap(package_type_, other->package_type_);
    std::swap(expand_grid_, other->expand_grid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageExpandReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageExpandReq_descriptor_;
  metadata.reflection = PackageExpandReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PackageExpandRsp::kRetFieldNumber;
const int PackageExpandRsp::kPackageTypeFieldNumber;
const int PackageExpandRsp::kExpandGridFieldNumber;
#endif  // !_MSC_VER

PackageExpandRsp::PackageExpandRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PackageExpandRsp::InitAsDefaultInstance() {
}

PackageExpandRsp::PackageExpandRsp(const PackageExpandRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PackageExpandRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  package_type_ = 0;
  expand_grid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PackageExpandRsp::~PackageExpandRsp() {
  SharedDtor();
}

void PackageExpandRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackageExpandRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackageExpandRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackageExpandRsp_descriptor_;
}

const PackageExpandRsp& PackageExpandRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Package_2eproto();
  return *default_instance_;
}

PackageExpandRsp* PackageExpandRsp::default_instance_ = NULL;

PackageExpandRsp* PackageExpandRsp::New() const {
  return new PackageExpandRsp;
}

void PackageExpandRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    package_type_ = 0;
    expand_grid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PackageExpandRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_package_type;
        break;
      }

      // optional int32 package_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_package_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_expand_grid;
        break;
      }

      // optional int32 expand_grid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expand_grid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expand_grid_)));
          set_has_expand_grid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PackageExpandRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 package_type = 2;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->package_type(), output);
  }

  // optional int32 expand_grid = 3;
  if (has_expand_grid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->expand_grid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PackageExpandRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 package_type = 2;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->package_type(), target);
  }

  // optional int32 expand_grid = 3;
  if (has_expand_grid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->expand_grid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PackageExpandRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 package_type = 2;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }

    // optional int32 expand_grid = 3;
    if (has_expand_grid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expand_grid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackageExpandRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PackageExpandRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PackageExpandRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackageExpandRsp::MergeFrom(const PackageExpandRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
    if (from.has_expand_grid()) {
      set_expand_grid(from.expand_grid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PackageExpandRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageExpandRsp::CopyFrom(const PackageExpandRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageExpandRsp::IsInitialized() const {

  return true;
}

void PackageExpandRsp::Swap(PackageExpandRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(package_type_, other->package_type_);
    std::swap(expand_grid_, other->expand_grid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PackageExpandRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackageExpandRsp_descriptor_;
  metadata.reflection = PackageExpandRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
