// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fashion.proto

#ifndef PROTOBUF_fashion_2eproto__INCLUDED
#define PROTOBUF_fashion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fashion_2eproto();
void protobuf_AssignDesc_fashion_2eproto();
void protobuf_ShutdownFile_fashion_2eproto();

class fashionfashionattributeDesc;
class fashionfashionActiveAttributeDesc;
class fashionfashion;
class Sheet_fashionfashion;

// ===================================================================

class fashionfashionattributeDesc : public ::google::protobuf::Message {
 public:
  fashionfashionattributeDesc();
  virtual ~fashionfashionattributeDesc();

  fashionfashionattributeDesc(const fashionfashionattributeDesc& from);

  inline fashionfashionattributeDesc& operator=(const fashionfashionattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fashionfashionattributeDesc& default_instance();

  void Swap(fashionfashionattributeDesc* other);

  // implements Message ----------------------------------------------

  fashionfashionattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fashionfashionattributeDesc& from);
  void MergeFrom(const fashionfashionattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fashionfashionattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fashion_2eproto();
  friend void protobuf_AssignDesc_fashion_2eproto();
  friend void protobuf_ShutdownFile_fashion_2eproto();

  void InitAsDefaultInstance();
  static fashionfashionattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class fashionfashionActiveAttributeDesc : public ::google::protobuf::Message {
 public:
  fashionfashionActiveAttributeDesc();
  virtual ~fashionfashionActiveAttributeDesc();

  fashionfashionActiveAttributeDesc(const fashionfashionActiveAttributeDesc& from);

  inline fashionfashionActiveAttributeDesc& operator=(const fashionfashionActiveAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fashionfashionActiveAttributeDesc& default_instance();

  void Swap(fashionfashionActiveAttributeDesc* other);

  // implements Message ----------------------------------------------

  fashionfashionActiveAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fashionfashionActiveAttributeDesc& from);
  void MergeFrom(const fashionfashionActiveAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fashionfashionActiveAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fashion_2eproto();
  friend void protobuf_AssignDesc_fashion_2eproto();
  friend void protobuf_ShutdownFile_fashion_2eproto();

  void InitAsDefaultInstance();
  static fashionfashionActiveAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class fashionfashion : public ::google::protobuf::Message {
 public:
  fashionfashion();
  virtual ~fashionfashion();

  fashionfashion(const fashionfashion& from);

  inline fashionfashion& operator=(const fashionfashion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fashionfashion& default_instance();

  void Swap(fashionfashion* other);

  // implements Message ----------------------------------------------

  fashionfashion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fashionfashion& from);
  void MergeFrom(const fashionfashion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional string professionLimit = 5;
  inline bool has_professionlimit() const;
  inline void clear_professionlimit();
  static const int kProfessionLimitFieldNumber = 5;
  inline const ::std::string& professionlimit() const;
  inline void set_professionlimit(const ::std::string& value);
  inline void set_professionlimit(const char* value);
  inline void set_professionlimit(const char* value, size_t size);
  inline ::std::string* mutable_professionlimit();
  inline ::std::string* release_professionlimit();
  inline void set_allocated_professionlimit(::std::string* professionlimit);

  // optional int64 activationItem = 6;
  inline bool has_activationitem() const;
  inline void clear_activationitem();
  static const int kActivationItemFieldNumber = 6;
  inline ::google::protobuf::int64 activationitem() const;
  inline void set_activationitem(::google::protobuf::int64 value);

  // optional int32 activationNum = 7;
  inline bool has_activationnum() const;
  inline void clear_activationnum();
  static const int kActivationNumFieldNumber = 7;
  inline ::google::protobuf::int32 activationnum() const;
  inline void set_activationnum(::google::protobuf::int32 value);

  // optional int64 starId = 8;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIdFieldNumber = 8;
  inline ::google::protobuf::int64 starid() const;
  inline void set_starid(::google::protobuf::int64 value);

  // optional string starNum = 9;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 9;
  inline const ::std::string& starnum() const;
  inline void set_starnum(const ::std::string& value);
  inline void set_starnum(const char* value);
  inline void set_starnum(const char* value, size_t size);
  inline ::std::string* mutable_starnum();
  inline ::std::string* release_starnum();
  inline void set_allocated_starnum(::std::string* starnum);

  // optional int32 starUp = 10;
  inline bool has_starup() const;
  inline void clear_starup();
  static const int kStarUpFieldNumber = 10;
  inline ::google::protobuf::int32 starup() const;
  inline void set_starup(::google::protobuf::int32 value);

  // optional int32 starBer = 11;
  inline bool has_starber() const;
  inline void clear_starber();
  static const int kStarBerFieldNumber = 11;
  inline ::google::protobuf::int32 starber() const;
  inline void set_starber(::google::protobuf::int32 value);

  // repeated .proto_ff.fashionfashionattributeDesc attribute = 12;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 12;
  inline const ::proto_ff::fashionfashionattributeDesc& attribute(int index) const;
  inline ::proto_ff::fashionfashionattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::fashionfashionattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionattributeDesc >*
      mutable_attribute();

  // repeated .proto_ff.fashionfashionActiveAttributeDesc ActiveAttribute = 13;
  inline int activeattribute_size() const;
  inline void clear_activeattribute();
  static const int kActiveAttributeFieldNumber = 13;
  inline const ::proto_ff::fashionfashionActiveAttributeDesc& activeattribute(int index) const;
  inline ::proto_ff::fashionfashionActiveAttributeDesc* mutable_activeattribute(int index);
  inline ::proto_ff::fashionfashionActiveAttributeDesc* add_activeattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionActiveAttributeDesc >&
      activeattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionActiveAttributeDesc >*
      mutable_activeattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.fashionfashion)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_professionlimit();
  inline void clear_has_professionlimit();
  inline void set_has_activationitem();
  inline void clear_has_activationitem();
  inline void set_has_activationnum();
  inline void clear_has_activationnum();
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_starup();
  inline void clear_has_starup();
  inline void set_has_starber();
  inline void clear_has_starber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 quality_;
  ::std::string* professionlimit_;
  ::google::protobuf::int64 activationitem_;
  ::google::protobuf::int64 starid_;
  ::google::protobuf::int32 activationnum_;
  ::google::protobuf::int32 starup_;
  ::std::string* starnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionattributeDesc > attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionActiveAttributeDesc > activeattribute_;
  ::google::protobuf::int32 starber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_fashion_2eproto();
  friend void protobuf_AssignDesc_fashion_2eproto();
  friend void protobuf_ShutdownFile_fashion_2eproto();

  void InitAsDefaultInstance();
  static fashionfashion* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fashionfashion : public ::google::protobuf::Message {
 public:
  Sheet_fashionfashion();
  virtual ~Sheet_fashionfashion();

  Sheet_fashionfashion(const Sheet_fashionfashion& from);

  inline Sheet_fashionfashion& operator=(const Sheet_fashionfashion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fashionfashion& default_instance();

  void Swap(Sheet_fashionfashion* other);

  // implements Message ----------------------------------------------

  Sheet_fashionfashion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fashionfashion& from);
  void MergeFrom(const Sheet_fashionfashion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fashionfashion fashionfashion_List = 1;
  inline int fashionfashion_list_size() const;
  inline void clear_fashionfashion_list();
  static const int kFashionfashionListFieldNumber = 1;
  inline const ::proto_ff::fashionfashion& fashionfashion_list(int index) const;
  inline ::proto_ff::fashionfashion* mutable_fashionfashion_list(int index);
  inline ::proto_ff::fashionfashion* add_fashionfashion_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashion >&
      fashionfashion_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashion >*
      mutable_fashionfashion_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fashionfashion)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashion > fashionfashion_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_fashion_2eproto();
  friend void protobuf_AssignDesc_fashion_2eproto();
  friend void protobuf_ShutdownFile_fashion_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fashionfashion* default_instance_;
};
// ===================================================================


// ===================================================================

// fashionfashionattributeDesc

// optional int32 type = 1;
inline bool fashionfashionattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fashionfashionattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fashionfashionattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fashionfashionattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 fashionfashionattributeDesc::type() const {
  return type_;
}
inline void fashionfashionattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool fashionfashionattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fashionfashionattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fashionfashionattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fashionfashionattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 fashionfashionattributeDesc::value() const {
  return value_;
}
inline void fashionfashionattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// fashionfashionActiveAttributeDesc

// optional int32 type = 1;
inline bool fashionfashionActiveAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fashionfashionActiveAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fashionfashionActiveAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fashionfashionActiveAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 fashionfashionActiveAttributeDesc::type() const {
  return type_;
}
inline void fashionfashionActiveAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool fashionfashionActiveAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fashionfashionActiveAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fashionfashionActiveAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fashionfashionActiveAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 fashionfashionActiveAttributeDesc::value() const {
  return value_;
}
inline void fashionfashionActiveAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// fashionfashion

// optional int64 ID = 1;
inline bool fashionfashion::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fashionfashion::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fashionfashion::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fashionfashion::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 fashionfashion::id() const {
  return id_;
}
inline void fashionfashion::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool fashionfashion::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fashionfashion::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fashionfashion::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fashionfashion::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& fashionfashion::name() const {
  return *name_;
}
inline void fashionfashion::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void fashionfashion::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void fashionfashion::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fashionfashion::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* fashionfashion::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fashionfashion::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 type = 3;
inline bool fashionfashion::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fashionfashion::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fashionfashion::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fashionfashion::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 fashionfashion::type() const {
  return type_;
}
inline void fashionfashion::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 quality = 4;
inline bool fashionfashion::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void fashionfashion::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void fashionfashion::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void fashionfashion::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 fashionfashion::quality() const {
  return quality_;
}
inline void fashionfashion::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional string professionLimit = 5;
inline bool fashionfashion::has_professionlimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void fashionfashion::set_has_professionlimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void fashionfashion::clear_has_professionlimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void fashionfashion::clear_professionlimit() {
  if (professionlimit_ != &::google::protobuf::internal::kEmptyString) {
    professionlimit_->clear();
  }
  clear_has_professionlimit();
}
inline const ::std::string& fashionfashion::professionlimit() const {
  return *professionlimit_;
}
inline void fashionfashion::set_professionlimit(const ::std::string& value) {
  set_has_professionlimit();
  if (professionlimit_ == &::google::protobuf::internal::kEmptyString) {
    professionlimit_ = new ::std::string;
  }
  professionlimit_->assign(value);
}
inline void fashionfashion::set_professionlimit(const char* value) {
  set_has_professionlimit();
  if (professionlimit_ == &::google::protobuf::internal::kEmptyString) {
    professionlimit_ = new ::std::string;
  }
  professionlimit_->assign(value);
}
inline void fashionfashion::set_professionlimit(const char* value, size_t size) {
  set_has_professionlimit();
  if (professionlimit_ == &::google::protobuf::internal::kEmptyString) {
    professionlimit_ = new ::std::string;
  }
  professionlimit_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fashionfashion::mutable_professionlimit() {
  set_has_professionlimit();
  if (professionlimit_ == &::google::protobuf::internal::kEmptyString) {
    professionlimit_ = new ::std::string;
  }
  return professionlimit_;
}
inline ::std::string* fashionfashion::release_professionlimit() {
  clear_has_professionlimit();
  if (professionlimit_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = professionlimit_;
    professionlimit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fashionfashion::set_allocated_professionlimit(::std::string* professionlimit) {
  if (professionlimit_ != &::google::protobuf::internal::kEmptyString) {
    delete professionlimit_;
  }
  if (professionlimit) {
    set_has_professionlimit();
    professionlimit_ = professionlimit;
  } else {
    clear_has_professionlimit();
    professionlimit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 activationItem = 6;
inline bool fashionfashion::has_activationitem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void fashionfashion::set_has_activationitem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void fashionfashion::clear_has_activationitem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void fashionfashion::clear_activationitem() {
  activationitem_ = GOOGLE_LONGLONG(0);
  clear_has_activationitem();
}
inline ::google::protobuf::int64 fashionfashion::activationitem() const {
  return activationitem_;
}
inline void fashionfashion::set_activationitem(::google::protobuf::int64 value) {
  set_has_activationitem();
  activationitem_ = value;
}

// optional int32 activationNum = 7;
inline bool fashionfashion::has_activationnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void fashionfashion::set_has_activationnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void fashionfashion::clear_has_activationnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void fashionfashion::clear_activationnum() {
  activationnum_ = 0;
  clear_has_activationnum();
}
inline ::google::protobuf::int32 fashionfashion::activationnum() const {
  return activationnum_;
}
inline void fashionfashion::set_activationnum(::google::protobuf::int32 value) {
  set_has_activationnum();
  activationnum_ = value;
}

// optional int64 starId = 8;
inline bool fashionfashion::has_starid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void fashionfashion::set_has_starid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void fashionfashion::clear_has_starid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void fashionfashion::clear_starid() {
  starid_ = GOOGLE_LONGLONG(0);
  clear_has_starid();
}
inline ::google::protobuf::int64 fashionfashion::starid() const {
  return starid_;
}
inline void fashionfashion::set_starid(::google::protobuf::int64 value) {
  set_has_starid();
  starid_ = value;
}

// optional string starNum = 9;
inline bool fashionfashion::has_starnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void fashionfashion::set_has_starnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void fashionfashion::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void fashionfashion::clear_starnum() {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    starnum_->clear();
  }
  clear_has_starnum();
}
inline const ::std::string& fashionfashion::starnum() const {
  return *starnum_;
}
inline void fashionfashion::set_starnum(const ::std::string& value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void fashionfashion::set_starnum(const char* value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void fashionfashion::set_starnum(const char* value, size_t size) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fashionfashion::mutable_starnum() {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  return starnum_;
}
inline ::std::string* fashionfashion::release_starnum() {
  clear_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = starnum_;
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fashionfashion::set_allocated_starnum(::std::string* starnum) {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (starnum) {
    set_has_starnum();
    starnum_ = starnum;
  } else {
    clear_has_starnum();
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 starUp = 10;
inline bool fashionfashion::has_starup() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void fashionfashion::set_has_starup() {
  _has_bits_[0] |= 0x00000200u;
}
inline void fashionfashion::clear_has_starup() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void fashionfashion::clear_starup() {
  starup_ = 0;
  clear_has_starup();
}
inline ::google::protobuf::int32 fashionfashion::starup() const {
  return starup_;
}
inline void fashionfashion::set_starup(::google::protobuf::int32 value) {
  set_has_starup();
  starup_ = value;
}

// optional int32 starBer = 11;
inline bool fashionfashion::has_starber() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void fashionfashion::set_has_starber() {
  _has_bits_[0] |= 0x00000400u;
}
inline void fashionfashion::clear_has_starber() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void fashionfashion::clear_starber() {
  starber_ = 0;
  clear_has_starber();
}
inline ::google::protobuf::int32 fashionfashion::starber() const {
  return starber_;
}
inline void fashionfashion::set_starber(::google::protobuf::int32 value) {
  set_has_starber();
  starber_ = value;
}

// repeated .proto_ff.fashionfashionattributeDesc attribute = 12;
inline int fashionfashion::attribute_size() const {
  return attribute_.size();
}
inline void fashionfashion::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::fashionfashionattributeDesc& fashionfashion::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::fashionfashionattributeDesc* fashionfashion::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::fashionfashionattributeDesc* fashionfashion::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionattributeDesc >&
fashionfashion::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionattributeDesc >*
fashionfashion::mutable_attribute() {
  return &attribute_;
}

// repeated .proto_ff.fashionfashionActiveAttributeDesc ActiveAttribute = 13;
inline int fashionfashion::activeattribute_size() const {
  return activeattribute_.size();
}
inline void fashionfashion::clear_activeattribute() {
  activeattribute_.Clear();
}
inline const ::proto_ff::fashionfashionActiveAttributeDesc& fashionfashion::activeattribute(int index) const {
  return activeattribute_.Get(index);
}
inline ::proto_ff::fashionfashionActiveAttributeDesc* fashionfashion::mutable_activeattribute(int index) {
  return activeattribute_.Mutable(index);
}
inline ::proto_ff::fashionfashionActiveAttributeDesc* fashionfashion::add_activeattribute() {
  return activeattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionActiveAttributeDesc >&
fashionfashion::activeattribute() const {
  return activeattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashionActiveAttributeDesc >*
fashionfashion::mutable_activeattribute() {
  return &activeattribute_;
}

// -------------------------------------------------------------------

// Sheet_fashionfashion

// repeated .proto_ff.fashionfashion fashionfashion_List = 1;
inline int Sheet_fashionfashion::fashionfashion_list_size() const {
  return fashionfashion_list_.size();
}
inline void Sheet_fashionfashion::clear_fashionfashion_list() {
  fashionfashion_list_.Clear();
}
inline const ::proto_ff::fashionfashion& Sheet_fashionfashion::fashionfashion_list(int index) const {
  return fashionfashion_list_.Get(index);
}
inline ::proto_ff::fashionfashion* Sheet_fashionfashion::mutable_fashionfashion_list(int index) {
  return fashionfashion_list_.Mutable(index);
}
inline ::proto_ff::fashionfashion* Sheet_fashionfashion::add_fashionfashion_list() {
  return fashionfashion_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashion >&
Sheet_fashionfashion::fashionfashion_list() const {
  return fashionfashion_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fashionfashion >*
Sheet_fashionfashion::mutable_fashionfashion_list() {
  return &fashionfashion_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fashion_2eproto__INCLUDED
