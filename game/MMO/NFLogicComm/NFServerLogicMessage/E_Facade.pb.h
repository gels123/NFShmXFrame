// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Facade.proto

#ifndef PROTOBUF_E_5fFacade_2eproto__INCLUDED
#define PROTOBUF_E_5fFacade_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fFacade_2eproto();
void protobuf_AssignDesc_E_5fFacade_2eproto();
void protobuf_ShutdownFile_E_5fFacade_2eproto();

class E_FacadeDisplayMaterialDesc;
class E_FacadeDisplay;
class Sheet_FacadeDisplay;
class E_FacadeValueWingattributeDesc;
class E_FacadeValueTreasureattributeDesc;
class E_FacadeValueArtifactattributeDesc;
class E_FacadeValueBladeattributeDesc;
class E_FacadeValue;
class Sheet_FacadeValue;
class E_FacadeType;
class Sheet_FacadeType;
class E_FacadeFragmentAttributeDesc;
class E_FacadeFragment;
class Sheet_FacadeFragment;
class E_FacadeChangeAttributeDesc;
class E_FacadeChangeActiveattributeDesc;
class E_FacadeChange;
class Sheet_FacadeChange;
class E_FacadeStarupUpattributeDesc;
class E_FacadeStarup;
class Sheet_FacadeStarup;
class E_FacadeSoulAttributeDesc;
class E_FacadeSoul;
class Sheet_FacadeSoul;
class E_FacadeSoulactiveUnlockDesc;
class E_FacadeSoulactive;
class Sheet_FacadeSoulactive;
class E_FacadeSoullvAttributeDesc;
class E_FacadeSoullv;
class Sheet_FacadeSoullv;
class E_FacadeSoulachievement;
class Sheet_FacadeSoulachievement;

// ===================================================================

class E_FacadeDisplayMaterialDesc : public ::google::protobuf::Message {
 public:
  E_FacadeDisplayMaterialDesc();
  virtual ~E_FacadeDisplayMaterialDesc();

  E_FacadeDisplayMaterialDesc(const E_FacadeDisplayMaterialDesc& from);

  inline E_FacadeDisplayMaterialDesc& operator=(const E_FacadeDisplayMaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeDisplayMaterialDesc& default_instance();

  void Swap(E_FacadeDisplayMaterialDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeDisplayMaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeDisplayMaterialDesc& from);
  void MergeFrom(const E_FacadeDisplayMaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_exp = 1;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 1;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int64 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeDisplayMaterialDesc)
 private:
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeDisplayMaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeDisplay : public ::google::protobuf::Message {
 public:
  E_FacadeDisplay();
  virtual ~E_FacadeDisplay();

  E_FacadeDisplay(const E_FacadeDisplay& from);

  inline E_FacadeDisplay& operator=(const E_FacadeDisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeDisplay& default_instance();

  void Swap(E_FacadeDisplay* other);

  // implements Message ----------------------------------------------

  E_FacadeDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeDisplay& from);
  void MergeFrom(const E_FacadeDisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional string m_resource = 3;
  inline bool has_m_resource() const;
  inline void clear_m_resource();
  static const int kMResourceFieldNumber = 3;
  inline const ::std::string& m_resource() const;
  inline void set_m_resource(const ::std::string& value);
  inline void set_m_resource(const char* value);
  inline void set_m_resource(const char* value, size_t size);
  inline ::std::string* mutable_m_resource();
  inline ::std::string* release_m_resource();
  inline void set_allocated_m_resource(::std::string* m_resource);

  // optional string m_name = 4;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 4;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional string m_activedesc = 5;
  inline bool has_m_activedesc() const;
  inline void clear_m_activedesc();
  static const int kMActivedescFieldNumber = 5;
  inline const ::std::string& m_activedesc() const;
  inline void set_m_activedesc(const ::std::string& value);
  inline void set_m_activedesc(const char* value);
  inline void set_m_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_m_activedesc();
  inline ::std::string* release_m_activedesc();
  inline void set_allocated_m_activedesc(::std::string* m_activedesc);

  // optional string m_professionid = 6;
  inline bool has_m_professionid() const;
  inline void clear_m_professionid();
  static const int kMProfessionidFieldNumber = 6;
  inline const ::std::string& m_professionid() const;
  inline void set_m_professionid(const ::std::string& value);
  inline void set_m_professionid(const char* value);
  inline void set_m_professionid(const char* value, size_t size);
  inline ::std::string* mutable_m_professionid();
  inline ::std::string* release_m_professionid();
  inline void set_allocated_m_professionid(::std::string* m_professionid);

  // optional string m_skillid = 7;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 7;
  inline const ::std::string& m_skillid() const;
  inline void set_m_skillid(const ::std::string& value);
  inline void set_m_skillid(const char* value);
  inline void set_m_skillid(const char* value, size_t size);
  inline ::std::string* mutable_m_skillid();
  inline ::std::string* release_m_skillid();
  inline void set_allocated_m_skillid(::std::string* m_skillid);

  // optional int32 m_souliid = 8;
  inline bool has_m_souliid() const;
  inline void clear_m_souliid();
  static const int kMSouliidFieldNumber = 8;
  inline ::google::protobuf::int32 m_souliid() const;
  inline void set_m_souliid(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FacadeDisplayMaterialDesc m_material = 9;
  inline int m_material_size() const;
  inline void clear_m_material();
  static const int kMMaterialFieldNumber = 9;
  inline const ::proto_ff::E_FacadeDisplayMaterialDesc& m_material(int index) const;
  inline ::proto_ff::E_FacadeDisplayMaterialDesc* mutable_m_material(int index);
  inline ::proto_ff::E_FacadeDisplayMaterialDesc* add_m_material();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplayMaterialDesc >&
      m_material() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplayMaterialDesc >*
      mutable_m_material();

  // repeated int64 m_fragmentid = 10;
  inline int m_fragmentid_size() const;
  inline void clear_m_fragmentid();
  static const int kMFragmentidFieldNumber = 10;
  inline ::google::protobuf::int64 m_fragmentid(int index) const;
  inline void set_m_fragmentid(int index, ::google::protobuf::int64 value);
  inline void add_m_fragmentid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      m_fragmentid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_m_fragmentid();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeDisplay)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_resource();
  inline void clear_has_m_resource();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_activedesc();
  inline void clear_has_m_activedesc();
  inline void set_has_m_professionid();
  inline void clear_has_m_professionid();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_souliid();
  inline void clear_has_m_souliid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_resource_;
  ::std::string* m_name_;
  ::std::string* m_activedesc_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_souliid_;
  ::std::string* m_professionid_;
  ::std::string* m_skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplayMaterialDesc > m_material_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > m_fragmentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeDisplay* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeDisplay : public ::google::protobuf::Message {
 public:
  Sheet_FacadeDisplay();
  virtual ~Sheet_FacadeDisplay();

  Sheet_FacadeDisplay(const Sheet_FacadeDisplay& from);

  inline Sheet_FacadeDisplay& operator=(const Sheet_FacadeDisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeDisplay& default_instance();

  void Swap(Sheet_FacadeDisplay* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeDisplay& from);
  void MergeFrom(const Sheet_FacadeDisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeDisplay E_FacadeDisplay_List = 1;
  inline int e_facadedisplay_list_size() const;
  inline void clear_e_facadedisplay_list();
  static const int kEFacadeDisplayListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeDisplay& e_facadedisplay_list(int index) const;
  inline ::proto_ff::E_FacadeDisplay* mutable_e_facadedisplay_list(int index);
  inline ::proto_ff::E_FacadeDisplay* add_e_facadedisplay_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplay >&
      e_facadedisplay_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplay >*
      mutable_e_facadedisplay_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeDisplay)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplay > e_facadedisplay_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeDisplay* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeValueWingattributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeValueWingattributeDesc();
  virtual ~E_FacadeValueWingattributeDesc();

  E_FacadeValueWingattributeDesc(const E_FacadeValueWingattributeDesc& from);

  inline E_FacadeValueWingattributeDesc& operator=(const E_FacadeValueWingattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeValueWingattributeDesc& default_instance();

  void Swap(E_FacadeValueWingattributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeValueWingattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeValueWingattributeDesc& from);
  void MergeFrom(const E_FacadeValueWingattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeValueWingattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeValueWingattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeValueTreasureattributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeValueTreasureattributeDesc();
  virtual ~E_FacadeValueTreasureattributeDesc();

  E_FacadeValueTreasureattributeDesc(const E_FacadeValueTreasureattributeDesc& from);

  inline E_FacadeValueTreasureattributeDesc& operator=(const E_FacadeValueTreasureattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeValueTreasureattributeDesc& default_instance();

  void Swap(E_FacadeValueTreasureattributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeValueTreasureattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeValueTreasureattributeDesc& from);
  void MergeFrom(const E_FacadeValueTreasureattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeValueTreasureattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeValueTreasureattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeValueArtifactattributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeValueArtifactattributeDesc();
  virtual ~E_FacadeValueArtifactattributeDesc();

  E_FacadeValueArtifactattributeDesc(const E_FacadeValueArtifactattributeDesc& from);

  inline E_FacadeValueArtifactattributeDesc& operator=(const E_FacadeValueArtifactattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeValueArtifactattributeDesc& default_instance();

  void Swap(E_FacadeValueArtifactattributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeValueArtifactattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeValueArtifactattributeDesc& from);
  void MergeFrom(const E_FacadeValueArtifactattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeValueArtifactattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeValueArtifactattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeValueBladeattributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeValueBladeattributeDesc();
  virtual ~E_FacadeValueBladeattributeDesc();

  E_FacadeValueBladeattributeDesc(const E_FacadeValueBladeattributeDesc& from);

  inline E_FacadeValueBladeattributeDesc& operator=(const E_FacadeValueBladeattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeValueBladeattributeDesc& default_instance();

  void Swap(E_FacadeValueBladeattributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeValueBladeattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeValueBladeattributeDesc& from);
  void MergeFrom(const E_FacadeValueBladeattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeValueBladeattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeValueBladeattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeValue : public ::google::protobuf::Message {
 public:
  E_FacadeValue();
  virtual ~E_FacadeValue();

  E_FacadeValue(const E_FacadeValue& from);

  inline E_FacadeValue& operator=(const E_FacadeValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeValue& default_instance();

  void Swap(E_FacadeValue* other);

  // implements Message ----------------------------------------------

  E_FacadeValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeValue& from);
  void MergeFrom(const E_FacadeValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int64 m_wingexp = 2;
  inline bool has_m_wingexp() const;
  inline void clear_m_wingexp();
  static const int kMWingexpFieldNumber = 2;
  inline ::google::protobuf::int64 m_wingexp() const;
  inline void set_m_wingexp(::google::protobuf::int64 value);

  // optional int64 m_treasureexp = 3;
  inline bool has_m_treasureexp() const;
  inline void clear_m_treasureexp();
  static const int kMTreasureexpFieldNumber = 3;
  inline ::google::protobuf::int64 m_treasureexp() const;
  inline void set_m_treasureexp(::google::protobuf::int64 value);

  // optional int64 m_artifactexp = 4;
  inline bool has_m_artifactexp() const;
  inline void clear_m_artifactexp();
  static const int kMArtifactexpFieldNumber = 4;
  inline ::google::protobuf::int64 m_artifactexp() const;
  inline void set_m_artifactexp(::google::protobuf::int64 value);

  // optional int64 m_bladeexp = 5;
  inline bool has_m_bladeexp() const;
  inline void clear_m_bladeexp();
  static const int kMBladeexpFieldNumber = 5;
  inline ::google::protobuf::int64 m_bladeexp() const;
  inline void set_m_bladeexp(::google::protobuf::int64 value);

  // repeated .proto_ff.E_FacadeValueWingattributeDesc m_wingattribute = 6;
  inline int m_wingattribute_size() const;
  inline void clear_m_wingattribute();
  static const int kMWingattributeFieldNumber = 6;
  inline const ::proto_ff::E_FacadeValueWingattributeDesc& m_wingattribute(int index) const;
  inline ::proto_ff::E_FacadeValueWingattributeDesc* mutable_m_wingattribute(int index);
  inline ::proto_ff::E_FacadeValueWingattributeDesc* add_m_wingattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueWingattributeDesc >&
      m_wingattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueWingattributeDesc >*
      mutable_m_wingattribute();

  // repeated .proto_ff.E_FacadeValueTreasureattributeDesc m_treasureattribute = 7;
  inline int m_treasureattribute_size() const;
  inline void clear_m_treasureattribute();
  static const int kMTreasureattributeFieldNumber = 7;
  inline const ::proto_ff::E_FacadeValueTreasureattributeDesc& m_treasureattribute(int index) const;
  inline ::proto_ff::E_FacadeValueTreasureattributeDesc* mutable_m_treasureattribute(int index);
  inline ::proto_ff::E_FacadeValueTreasureattributeDesc* add_m_treasureattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueTreasureattributeDesc >&
      m_treasureattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueTreasureattributeDesc >*
      mutable_m_treasureattribute();

  // repeated .proto_ff.E_FacadeValueArtifactattributeDesc m_artifactattribute = 8;
  inline int m_artifactattribute_size() const;
  inline void clear_m_artifactattribute();
  static const int kMArtifactattributeFieldNumber = 8;
  inline const ::proto_ff::E_FacadeValueArtifactattributeDesc& m_artifactattribute(int index) const;
  inline ::proto_ff::E_FacadeValueArtifactattributeDesc* mutable_m_artifactattribute(int index);
  inline ::proto_ff::E_FacadeValueArtifactattributeDesc* add_m_artifactattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueArtifactattributeDesc >&
      m_artifactattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueArtifactattributeDesc >*
      mutable_m_artifactattribute();

  // repeated .proto_ff.E_FacadeValueBladeattributeDesc m_bladeattribute = 9;
  inline int m_bladeattribute_size() const;
  inline void clear_m_bladeattribute();
  static const int kMBladeattributeFieldNumber = 9;
  inline const ::proto_ff::E_FacadeValueBladeattributeDesc& m_bladeattribute(int index) const;
  inline ::proto_ff::E_FacadeValueBladeattributeDesc* mutable_m_bladeattribute(int index);
  inline ::proto_ff::E_FacadeValueBladeattributeDesc* add_m_bladeattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueBladeattributeDesc >&
      m_bladeattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueBladeattributeDesc >*
      mutable_m_bladeattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeValue)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_wingexp();
  inline void clear_has_m_wingexp();
  inline void set_has_m_treasureexp();
  inline void clear_has_m_treasureexp();
  inline void set_has_m_artifactexp();
  inline void clear_has_m_artifactexp();
  inline void set_has_m_bladeexp();
  inline void clear_has_m_bladeexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_wingexp_;
  ::google::protobuf::int64 m_treasureexp_;
  ::google::protobuf::int64 m_artifactexp_;
  ::google::protobuf::int64 m_bladeexp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueWingattributeDesc > m_wingattribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueTreasureattributeDesc > m_treasureattribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueArtifactattributeDesc > m_artifactattribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueBladeattributeDesc > m_bladeattribute_;
  ::google::protobuf::int32 m_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeValue* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeValue : public ::google::protobuf::Message {
 public:
  Sheet_FacadeValue();
  virtual ~Sheet_FacadeValue();

  Sheet_FacadeValue(const Sheet_FacadeValue& from);

  inline Sheet_FacadeValue& operator=(const Sheet_FacadeValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeValue& default_instance();

  void Swap(Sheet_FacadeValue* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeValue& from);
  void MergeFrom(const Sheet_FacadeValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeValue E_FacadeValue_List = 1;
  inline int e_facadevalue_list_size() const;
  inline void clear_e_facadevalue_list();
  static const int kEFacadeValueListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeValue& e_facadevalue_list(int index) const;
  inline ::proto_ff::E_FacadeValue* mutable_e_facadevalue_list(int index);
  inline ::proto_ff::E_FacadeValue* add_e_facadevalue_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValue >&
      e_facadevalue_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValue >*
      mutable_e_facadevalue_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeValue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValue > e_facadevalue_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeValue* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeType : public ::google::protobuf::Message {
 public:
  E_FacadeType();
  virtual ~E_FacadeType();

  E_FacadeType(const E_FacadeType& from);

  inline E_FacadeType& operator=(const E_FacadeType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeType& default_instance();

  void Swap(E_FacadeType* other);

  // implements Message ----------------------------------------------

  E_FacadeType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeType& from);
  void MergeFrom(const E_FacadeType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_soucename = 2;
  inline bool has_m_soucename() const;
  inline void clear_m_soucename();
  static const int kMSoucenameFieldNumber = 2;
  inline const ::std::string& m_soucename() const;
  inline void set_m_soucename(const ::std::string& value);
  inline void set_m_soucename(const char* value);
  inline void set_m_soucename(const char* value, size_t size);
  inline ::std::string* mutable_m_soucename();
  inline ::std::string* release_m_soucename();
  inline void set_allocated_m_soucename(::std::string* m_soucename);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeType)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_soucename();
  inline void clear_has_m_soucename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_soucename_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeType* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeType : public ::google::protobuf::Message {
 public:
  Sheet_FacadeType();
  virtual ~Sheet_FacadeType();

  Sheet_FacadeType(const Sheet_FacadeType& from);

  inline Sheet_FacadeType& operator=(const Sheet_FacadeType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeType& default_instance();

  void Swap(Sheet_FacadeType* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeType& from);
  void MergeFrom(const Sheet_FacadeType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeType E_FacadeType_List = 1;
  inline int e_facadetype_list_size() const;
  inline void clear_e_facadetype_list();
  static const int kEFacadeTypeListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeType& e_facadetype_list(int index) const;
  inline ::proto_ff::E_FacadeType* mutable_e_facadetype_list(int index);
  inline ::proto_ff::E_FacadeType* add_e_facadetype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeType >&
      e_facadetype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeType >*
      mutable_e_facadetype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeType > e_facadetype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeType* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeFragmentAttributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeFragmentAttributeDesc();
  virtual ~E_FacadeFragmentAttributeDesc();

  E_FacadeFragmentAttributeDesc(const E_FacadeFragmentAttributeDesc& from);

  inline E_FacadeFragmentAttributeDesc& operator=(const E_FacadeFragmentAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeFragmentAttributeDesc& default_instance();

  void Swap(E_FacadeFragmentAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeFragmentAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeFragmentAttributeDesc& from);
  void MergeFrom(const E_FacadeFragmentAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeFragmentAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeFragmentAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeFragment : public ::google::protobuf::Message {
 public:
  E_FacadeFragment();
  virtual ~E_FacadeFragment();

  E_FacadeFragment(const E_FacadeFragment& from);

  inline E_FacadeFragment& operator=(const E_FacadeFragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeFragment& default_instance();

  void Swap(E_FacadeFragment* other);

  // implements Message ----------------------------------------------

  E_FacadeFragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeFragment& from);
  void MergeFrom(const E_FacadeFragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_fragmentid = 1;
  inline bool has_m_fragmentid() const;
  inline void clear_m_fragmentid();
  static const int kMFragmentidFieldNumber = 1;
  inline ::google::protobuf::int64 m_fragmentid() const;
  inline void set_m_fragmentid(::google::protobuf::int64 value);

  // optional int64 m_item = 2;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline ::google::protobuf::int64 m_item() const;
  inline void set_m_item(::google::protobuf::int64 value);

  // optional int32 m_itemnum = 3;
  inline bool has_m_itemnum() const;
  inline void clear_m_itemnum();
  static const int kMItemnumFieldNumber = 3;
  inline ::google::protobuf::int32 m_itemnum() const;
  inline void set_m_itemnum(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FacadeFragmentAttributeDesc m_attribute = 4;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 4;
  inline const ::proto_ff::E_FacadeFragmentAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_FacadeFragmentAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_FacadeFragmentAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragmentAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragmentAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeFragment)
 private:
  inline void set_has_m_fragmentid();
  inline void clear_has_m_fragmentid();
  inline void set_has_m_item();
  inline void clear_has_m_item();
  inline void set_has_m_itemnum();
  inline void clear_has_m_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_fragmentid_;
  ::google::protobuf::int64 m_item_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragmentAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeFragment* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeFragment : public ::google::protobuf::Message {
 public:
  Sheet_FacadeFragment();
  virtual ~Sheet_FacadeFragment();

  Sheet_FacadeFragment(const Sheet_FacadeFragment& from);

  inline Sheet_FacadeFragment& operator=(const Sheet_FacadeFragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeFragment& default_instance();

  void Swap(Sheet_FacadeFragment* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeFragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeFragment& from);
  void MergeFrom(const Sheet_FacadeFragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeFragment E_FacadeFragment_List = 1;
  inline int e_facadefragment_list_size() const;
  inline void clear_e_facadefragment_list();
  static const int kEFacadeFragmentListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeFragment& e_facadefragment_list(int index) const;
  inline ::proto_ff::E_FacadeFragment* mutable_e_facadefragment_list(int index);
  inline ::proto_ff::E_FacadeFragment* add_e_facadefragment_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragment >&
      e_facadefragment_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragment >*
      mutable_e_facadefragment_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeFragment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragment > e_facadefragment_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeFragment* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeChangeAttributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeChangeAttributeDesc();
  virtual ~E_FacadeChangeAttributeDesc();

  E_FacadeChangeAttributeDesc(const E_FacadeChangeAttributeDesc& from);

  inline E_FacadeChangeAttributeDesc& operator=(const E_FacadeChangeAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeChangeAttributeDesc& default_instance();

  void Swap(E_FacadeChangeAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeChangeAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeChangeAttributeDesc& from);
  void MergeFrom(const E_FacadeChangeAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeChangeAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeChangeAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeChangeActiveattributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeChangeActiveattributeDesc();
  virtual ~E_FacadeChangeActiveattributeDesc();

  E_FacadeChangeActiveattributeDesc(const E_FacadeChangeActiveattributeDesc& from);

  inline E_FacadeChangeActiveattributeDesc& operator=(const E_FacadeChangeActiveattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeChangeActiveattributeDesc& default_instance();

  void Swap(E_FacadeChangeActiveattributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeChangeActiveattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeChangeActiveattributeDesc& from);
  void MergeFrom(const E_FacadeChangeActiveattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeChangeActiveattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeChangeActiveattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeChange : public ::google::protobuf::Message {
 public:
  E_FacadeChange();
  virtual ~E_FacadeChange();

  E_FacadeChange(const E_FacadeChange& from);

  inline E_FacadeChange& operator=(const E_FacadeChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeChange& default_instance();

  void Swap(E_FacadeChange* other);

  // implements Message ----------------------------------------------

  E_FacadeChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeChange& from);
  void MergeFrom(const E_FacadeChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional string m_resource = 3;
  inline bool has_m_resource() const;
  inline void clear_m_resource();
  static const int kMResourceFieldNumber = 3;
  inline const ::std::string& m_resource() const;
  inline void set_m_resource(const ::std::string& value);
  inline void set_m_resource(const char* value);
  inline void set_m_resource(const char* value, size_t size);
  inline ::std::string* mutable_m_resource();
  inline ::std::string* release_m_resource();
  inline void set_allocated_m_resource(::std::string* m_resource);

  // optional string m_professionid = 4;
  inline bool has_m_professionid() const;
  inline void clear_m_professionid();
  static const int kMProfessionidFieldNumber = 4;
  inline const ::std::string& m_professionid() const;
  inline void set_m_professionid(const ::std::string& value);
  inline void set_m_professionid(const char* value);
  inline void set_m_professionid(const char* value, size_t size);
  inline ::std::string* mutable_m_professionid();
  inline ::std::string* release_m_professionid();
  inline void set_allocated_m_professionid(::std::string* m_professionid);

  // optional string m_name = 5;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 5;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional string m_activedesc = 6;
  inline bool has_m_activedesc() const;
  inline void clear_m_activedesc();
  static const int kMActivedescFieldNumber = 6;
  inline const ::std::string& m_activedesc() const;
  inline void set_m_activedesc(const ::std::string& value);
  inline void set_m_activedesc(const char* value);
  inline void set_m_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_m_activedesc();
  inline ::std::string* release_m_activedesc();
  inline void set_allocated_m_activedesc(::std::string* m_activedesc);

  // optional int32 m_quality = 7;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 7;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int64 m_activationitem = 8;
  inline bool has_m_activationitem() const;
  inline void clear_m_activationitem();
  static const int kMActivationitemFieldNumber = 8;
  inline ::google::protobuf::int64 m_activationitem() const;
  inline void set_m_activationitem(::google::protobuf::int64 value);

  // optional int32 m_activationnum = 9;
  inline bool has_m_activationnum() const;
  inline void clear_m_activationnum();
  static const int kMActivationnumFieldNumber = 9;
  inline ::google::protobuf::int32 m_activationnum() const;
  inline void set_m_activationnum(::google::protobuf::int32 value);

  // optional int64 m_starid = 10;
  inline bool has_m_starid() const;
  inline void clear_m_starid();
  static const int kMStaridFieldNumber = 10;
  inline ::google::protobuf::int64 m_starid() const;
  inline void set_m_starid(::google::protobuf::int64 value);

  // optional string m_starnum = 11;
  inline bool has_m_starnum() const;
  inline void clear_m_starnum();
  static const int kMStarnumFieldNumber = 11;
  inline const ::std::string& m_starnum() const;
  inline void set_m_starnum(const ::std::string& value);
  inline void set_m_starnum(const char* value);
  inline void set_m_starnum(const char* value, size_t size);
  inline ::std::string* mutable_m_starnum();
  inline ::std::string* release_m_starnum();
  inline void set_allocated_m_starnum(::std::string* m_starnum);

  // optional int32 m_starup = 12;
  inline bool has_m_starup() const;
  inline void clear_m_starup();
  static const int kMStarupFieldNumber = 12;
  inline ::google::protobuf::int32 m_starup() const;
  inline void set_m_starup(::google::protobuf::int32 value);

  // optional int32 m_starber = 13;
  inline bool has_m_starber() const;
  inline void clear_m_starber();
  static const int kMStarberFieldNumber = 13;
  inline ::google::protobuf::int32 m_starber() const;
  inline void set_m_starber(::google::protobuf::int32 value);

  // optional int64 m_upattributeid = 14;
  inline bool has_m_upattributeid() const;
  inline void clear_m_upattributeid();
  static const int kMUpattributeidFieldNumber = 14;
  inline ::google::protobuf::int64 m_upattributeid() const;
  inline void set_m_upattributeid(::google::protobuf::int64 value);

  // optional int32 m_activeskill = 15;
  inline bool has_m_activeskill() const;
  inline void clear_m_activeskill();
  static const int kMActiveskillFieldNumber = 15;
  inline ::google::protobuf::int32 m_activeskill() const;
  inline void set_m_activeskill(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FacadeChangeAttributeDesc m_attribute = 16;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 16;
  inline const ::proto_ff::E_FacadeChangeAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_FacadeChangeAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_FacadeChangeAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeAttributeDesc >*
      mutable_m_attribute();

  // repeated .proto_ff.E_FacadeChangeActiveattributeDesc m_activeattribute = 17;
  inline int m_activeattribute_size() const;
  inline void clear_m_activeattribute();
  static const int kMActiveattributeFieldNumber = 17;
  inline const ::proto_ff::E_FacadeChangeActiveattributeDesc& m_activeattribute(int index) const;
  inline ::proto_ff::E_FacadeChangeActiveattributeDesc* mutable_m_activeattribute(int index);
  inline ::proto_ff::E_FacadeChangeActiveattributeDesc* add_m_activeattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeActiveattributeDesc >&
      m_activeattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeActiveattributeDesc >*
      mutable_m_activeattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeChange)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_resource();
  inline void clear_has_m_resource();
  inline void set_has_m_professionid();
  inline void clear_has_m_professionid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_activedesc();
  inline void clear_has_m_activedesc();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_activationitem();
  inline void clear_has_m_activationitem();
  inline void set_has_m_activationnum();
  inline void clear_has_m_activationnum();
  inline void set_has_m_starid();
  inline void clear_has_m_starid();
  inline void set_has_m_starnum();
  inline void clear_has_m_starnum();
  inline void set_has_m_starup();
  inline void clear_has_m_starup();
  inline void set_has_m_starber();
  inline void clear_has_m_starber();
  inline void set_has_m_upattributeid();
  inline void clear_has_m_upattributeid();
  inline void set_has_m_activeskill();
  inline void clear_has_m_activeskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_resource_;
  ::std::string* m_professionid_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_quality_;
  ::std::string* m_name_;
  ::std::string* m_activedesc_;
  ::google::protobuf::int64 m_activationitem_;
  ::google::protobuf::int64 m_starid_;
  ::google::protobuf::int32 m_activationnum_;
  ::google::protobuf::int32 m_starup_;
  ::std::string* m_starnum_;
  ::google::protobuf::int64 m_upattributeid_;
  ::google::protobuf::int32 m_starber_;
  ::google::protobuf::int32 m_activeskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeActiveattributeDesc > m_activeattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeChange* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeChange : public ::google::protobuf::Message {
 public:
  Sheet_FacadeChange();
  virtual ~Sheet_FacadeChange();

  Sheet_FacadeChange(const Sheet_FacadeChange& from);

  inline Sheet_FacadeChange& operator=(const Sheet_FacadeChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeChange& default_instance();

  void Swap(Sheet_FacadeChange* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeChange& from);
  void MergeFrom(const Sheet_FacadeChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeChange E_FacadeChange_List = 1;
  inline int e_facadechange_list_size() const;
  inline void clear_e_facadechange_list();
  static const int kEFacadeChangeListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeChange& e_facadechange_list(int index) const;
  inline ::proto_ff::E_FacadeChange* mutable_e_facadechange_list(int index);
  inline ::proto_ff::E_FacadeChange* add_e_facadechange_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChange >&
      e_facadechange_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChange >*
      mutable_e_facadechange_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeChange)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChange > e_facadechange_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeChange* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeStarupUpattributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeStarupUpattributeDesc();
  virtual ~E_FacadeStarupUpattributeDesc();

  E_FacadeStarupUpattributeDesc(const E_FacadeStarupUpattributeDesc& from);

  inline E_FacadeStarupUpattributeDesc& operator=(const E_FacadeStarupUpattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeStarupUpattributeDesc& default_instance();

  void Swap(E_FacadeStarupUpattributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeStarupUpattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeStarupUpattributeDesc& from);
  void MergeFrom(const E_FacadeStarupUpattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeStarupUpattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeStarupUpattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeStarup : public ::google::protobuf::Message {
 public:
  E_FacadeStarup();
  virtual ~E_FacadeStarup();

  E_FacadeStarup(const E_FacadeStarup& from);

  inline E_FacadeStarup& operator=(const E_FacadeStarup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeStarup& default_instance();

  void Swap(E_FacadeStarup* other);

  // implements Message ----------------------------------------------

  E_FacadeStarup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeStarup& from);
  void MergeFrom(const E_FacadeStarup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int64 m_upattributeid = 2;
  inline bool has_m_upattributeid() const;
  inline void clear_m_upattributeid();
  static const int kMUpattributeidFieldNumber = 2;
  inline ::google::protobuf::int64 m_upattributeid() const;
  inline void set_m_upattributeid(::google::protobuf::int64 value);

  // optional int32 m_starid = 3;
  inline bool has_m_starid() const;
  inline void clear_m_starid();
  static const int kMStaridFieldNumber = 3;
  inline ::google::protobuf::int32 m_starid() const;
  inline void set_m_starid(::google::protobuf::int32 value);

  // optional int32 m_skillid = 4;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 4;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FacadeStarupUpattributeDesc m_upattribute = 5;
  inline int m_upattribute_size() const;
  inline void clear_m_upattribute();
  static const int kMUpattributeFieldNumber = 5;
  inline const ::proto_ff::E_FacadeStarupUpattributeDesc& m_upattribute(int index) const;
  inline ::proto_ff::E_FacadeStarupUpattributeDesc* mutable_m_upattribute(int index);
  inline ::proto_ff::E_FacadeStarupUpattributeDesc* add_m_upattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarupUpattributeDesc >&
      m_upattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarupUpattributeDesc >*
      mutable_m_upattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeStarup)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_upattributeid();
  inline void clear_has_m_upattributeid();
  inline void set_has_m_starid();
  inline void clear_has_m_starid();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_upattributeid_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_starid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarupUpattributeDesc > m_upattribute_;
  ::google::protobuf::int32 m_skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeStarup* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeStarup : public ::google::protobuf::Message {
 public:
  Sheet_FacadeStarup();
  virtual ~Sheet_FacadeStarup();

  Sheet_FacadeStarup(const Sheet_FacadeStarup& from);

  inline Sheet_FacadeStarup& operator=(const Sheet_FacadeStarup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeStarup& default_instance();

  void Swap(Sheet_FacadeStarup* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeStarup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeStarup& from);
  void MergeFrom(const Sheet_FacadeStarup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeStarup E_FacadeStarup_List = 1;
  inline int e_facadestarup_list_size() const;
  inline void clear_e_facadestarup_list();
  static const int kEFacadeStarupListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeStarup& e_facadestarup_list(int index) const;
  inline ::proto_ff::E_FacadeStarup* mutable_e_facadestarup_list(int index);
  inline ::proto_ff::E_FacadeStarup* add_e_facadestarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarup >&
      e_facadestarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarup >*
      mutable_e_facadestarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeStarup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarup > e_facadestarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeStarup* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoulAttributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeSoulAttributeDesc();
  virtual ~E_FacadeSoulAttributeDesc();

  E_FacadeSoulAttributeDesc(const E_FacadeSoulAttributeDesc& from);

  inline E_FacadeSoulAttributeDesc& operator=(const E_FacadeSoulAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoulAttributeDesc& default_instance();

  void Swap(E_FacadeSoulAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeSoulAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoulAttributeDesc& from);
  void MergeFrom(const E_FacadeSoulAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoulAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoulAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoul : public ::google::protobuf::Message {
 public:
  E_FacadeSoul();
  virtual ~E_FacadeSoul();

  E_FacadeSoul(const E_FacadeSoul& from);

  inline E_FacadeSoul& operator=(const E_FacadeSoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoul& default_instance();

  void Swap(E_FacadeSoul* other);

  // implements Message ----------------------------------------------

  E_FacadeSoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoul& from);
  void MergeFrom(const E_FacadeSoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_rechargeid = 2;
  inline bool has_m_rechargeid() const;
  inline void clear_m_rechargeid();
  static const int kMRechargeidFieldNumber = 2;
  inline ::google::protobuf::int32 m_rechargeid() const;
  inline void set_m_rechargeid(::google::protobuf::int32 value);

  // optional int32 m_mainskill = 3;
  inline bool has_m_mainskill() const;
  inline void clear_m_mainskill();
  static const int kMMainskillFieldNumber = 3;
  inline ::google::protobuf::int32 m_mainskill() const;
  inline void set_m_mainskill(::google::protobuf::int32 value);

  // optional string m_attributetype = 4;
  inline bool has_m_attributetype() const;
  inline void clear_m_attributetype();
  static const int kMAttributetypeFieldNumber = 4;
  inline const ::std::string& m_attributetype() const;
  inline void set_m_attributetype(const ::std::string& value);
  inline void set_m_attributetype(const char* value);
  inline void set_m_attributetype(const char* value, size_t size);
  inline ::std::string* mutable_m_attributetype();
  inline ::std::string* release_m_attributetype();
  inline void set_allocated_m_attributetype(::std::string* m_attributetype);

  // repeated int32 m_minorskill = 5;
  inline int m_minorskill_size() const;
  inline void clear_m_minorskill();
  static const int kMMinorskillFieldNumber = 5;
  inline ::google::protobuf::int32 m_minorskill(int index) const;
  inline void set_m_minorskill(int index, ::google::protobuf::int32 value);
  inline void add_m_minorskill(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_minorskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_minorskill();

  // repeated .proto_ff.E_FacadeSoulAttributeDesc m_attribute = 6;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 6;
  inline const ::proto_ff::E_FacadeSoulAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_FacadeSoulAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_FacadeSoulAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoul)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_rechargeid();
  inline void clear_has_m_rechargeid();
  inline void set_has_m_mainskill();
  inline void clear_has_m_mainskill();
  inline void set_has_m_attributetype();
  inline void clear_has_m_attributetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_rechargeid_;
  ::google::protobuf::int32 m_mainskill_;
  ::std::string* m_attributetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_minorskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoul* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeSoul : public ::google::protobuf::Message {
 public:
  Sheet_FacadeSoul();
  virtual ~Sheet_FacadeSoul();

  Sheet_FacadeSoul(const Sheet_FacadeSoul& from);

  inline Sheet_FacadeSoul& operator=(const Sheet_FacadeSoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeSoul& default_instance();

  void Swap(Sheet_FacadeSoul* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeSoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeSoul& from);
  void MergeFrom(const Sheet_FacadeSoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeSoul E_FacadeSoul_List = 1;
  inline int e_facadesoul_list_size() const;
  inline void clear_e_facadesoul_list();
  static const int kEFacadeSoulListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeSoul& e_facadesoul_list(int index) const;
  inline ::proto_ff::E_FacadeSoul* mutable_e_facadesoul_list(int index);
  inline ::proto_ff::E_FacadeSoul* add_e_facadesoul_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoul >&
      e_facadesoul_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoul >*
      mutable_e_facadesoul_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeSoul)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoul > e_facadesoul_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeSoul* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoulactiveUnlockDesc : public ::google::protobuf::Message {
 public:
  E_FacadeSoulactiveUnlockDesc();
  virtual ~E_FacadeSoulactiveUnlockDesc();

  E_FacadeSoulactiveUnlockDesc(const E_FacadeSoulactiveUnlockDesc& from);

  inline E_FacadeSoulactiveUnlockDesc& operator=(const E_FacadeSoulactiveUnlockDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoulactiveUnlockDesc& default_instance();

  void Swap(E_FacadeSoulactiveUnlockDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeSoulactiveUnlockDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoulactiveUnlockDesc& from);
  void MergeFrom(const E_FacadeSoulactiveUnlockDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_parama = 1;
  inline bool has_m_parama() const;
  inline void clear_m_parama();
  static const int kMParamaFieldNumber = 1;
  inline const ::std::string& m_parama() const;
  inline void set_m_parama(const ::std::string& value);
  inline void set_m_parama(const char* value);
  inline void set_m_parama(const char* value, size_t size);
  inline ::std::string* mutable_m_parama();
  inline ::std::string* release_m_parama();
  inline void set_allocated_m_parama(::std::string* m_parama);

  // optional int32 m_condition = 2;
  inline bool has_m_condition() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 2;
  inline ::google::protobuf::int32 m_condition() const;
  inline void set_m_condition(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoulactiveUnlockDesc)
 private:
  inline void set_has_m_parama();
  inline void clear_has_m_parama();
  inline void set_has_m_condition();
  inline void clear_has_m_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_parama_;
  ::google::protobuf::int32 m_condition_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoulactiveUnlockDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoulactive : public ::google::protobuf::Message {
 public:
  E_FacadeSoulactive();
  virtual ~E_FacadeSoulactive();

  E_FacadeSoulactive(const E_FacadeSoulactive& from);

  inline E_FacadeSoulactive& operator=(const E_FacadeSoulactive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoulactive& default_instance();

  void Swap(E_FacadeSoulactive* other);

  // implements Message ----------------------------------------------

  E_FacadeSoulactive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoulactive& from);
  void MergeFrom(const E_FacadeSoulactive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // repeated .proto_ff.E_FacadeSoulactiveUnlockDesc m_unlock = 2;
  inline int m_unlock_size() const;
  inline void clear_m_unlock();
  static const int kMUnlockFieldNumber = 2;
  inline const ::proto_ff::E_FacadeSoulactiveUnlockDesc& m_unlock(int index) const;
  inline ::proto_ff::E_FacadeSoulactiveUnlockDesc* mutable_m_unlock(int index);
  inline ::proto_ff::E_FacadeSoulactiveUnlockDesc* add_m_unlock();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactiveUnlockDesc >&
      m_unlock() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactiveUnlockDesc >*
      mutable_m_unlock();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoulactive)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactiveUnlockDesc > m_unlock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoulactive* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeSoulactive : public ::google::protobuf::Message {
 public:
  Sheet_FacadeSoulactive();
  virtual ~Sheet_FacadeSoulactive();

  Sheet_FacadeSoulactive(const Sheet_FacadeSoulactive& from);

  inline Sheet_FacadeSoulactive& operator=(const Sheet_FacadeSoulactive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeSoulactive& default_instance();

  void Swap(Sheet_FacadeSoulactive* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeSoulactive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeSoulactive& from);
  void MergeFrom(const Sheet_FacadeSoulactive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeSoulactive E_FacadeSoulactive_List = 1;
  inline int e_facadesoulactive_list_size() const;
  inline void clear_e_facadesoulactive_list();
  static const int kEFacadeSoulactiveListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeSoulactive& e_facadesoulactive_list(int index) const;
  inline ::proto_ff::E_FacadeSoulactive* mutable_e_facadesoulactive_list(int index);
  inline ::proto_ff::E_FacadeSoulactive* add_e_facadesoulactive_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactive >&
      e_facadesoulactive_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactive >*
      mutable_e_facadesoulactive_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeSoulactive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactive > e_facadesoulactive_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeSoulactive* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoullvAttributeDesc : public ::google::protobuf::Message {
 public:
  E_FacadeSoullvAttributeDesc();
  virtual ~E_FacadeSoullvAttributeDesc();

  E_FacadeSoullvAttributeDesc(const E_FacadeSoullvAttributeDesc& from);

  inline E_FacadeSoullvAttributeDesc& operator=(const E_FacadeSoullvAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoullvAttributeDesc& default_instance();

  void Swap(E_FacadeSoullvAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_FacadeSoullvAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoullvAttributeDesc& from);
  void MergeFrom(const E_FacadeSoullvAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoullvAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoullvAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoullv : public ::google::protobuf::Message {
 public:
  E_FacadeSoullv();
  virtual ~E_FacadeSoullv();

  E_FacadeSoullv(const E_FacadeSoullv& from);

  inline E_FacadeSoullv& operator=(const E_FacadeSoullv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoullv& default_instance();

  void Swap(E_FacadeSoullv* other);

  // implements Message ----------------------------------------------

  E_FacadeSoullv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoullv& from);
  void MergeFrom(const E_FacadeSoullv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_soulllv = 2;
  inline bool has_m_soulllv() const;
  inline void clear_m_soulllv();
  static const int kMSoulllvFieldNumber = 2;
  inline ::google::protobuf::int32 m_soulllv() const;
  inline void set_m_soulllv(::google::protobuf::int32 value);

  // optional int32 m_soulid = 3;
  inline bool has_m_soulid() const;
  inline void clear_m_soulid();
  static const int kMSoulidFieldNumber = 3;
  inline ::google::protobuf::int32 m_soulid() const;
  inline void set_m_soulid(::google::protobuf::int32 value);

  // optional int32 m_itemid = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 5;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_successrate = 6;
  inline bool has_m_successrate() const;
  inline void clear_m_successrate();
  static const int kMSuccessrateFieldNumber = 6;
  inline ::google::protobuf::int32 m_successrate() const;
  inline void set_m_successrate(::google::protobuf::int32 value);

  // optional int32 m_downlv = 7;
  inline bool has_m_downlv() const;
  inline void clear_m_downlv();
  static const int kMDownlvFieldNumber = 7;
  inline ::google::protobuf::int32 m_downlv() const;
  inline void set_m_downlv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FacadeSoullvAttributeDesc m_attribute = 8;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 8;
  inline const ::proto_ff::E_FacadeSoullvAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_FacadeSoullvAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_FacadeSoullvAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullvAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullvAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoullv)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_soulllv();
  inline void clear_has_m_soulllv();
  inline void set_has_m_soulid();
  inline void clear_has_m_soulid();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_successrate();
  inline void clear_has_m_successrate();
  inline void set_has_m_downlv();
  inline void clear_has_m_downlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_soulllv_;
  ::google::protobuf::int32 m_soulid_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_successrate_;
  ::google::protobuf::int32 m_downlv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullvAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoullv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeSoullv : public ::google::protobuf::Message {
 public:
  Sheet_FacadeSoullv();
  virtual ~Sheet_FacadeSoullv();

  Sheet_FacadeSoullv(const Sheet_FacadeSoullv& from);

  inline Sheet_FacadeSoullv& operator=(const Sheet_FacadeSoullv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeSoullv& default_instance();

  void Swap(Sheet_FacadeSoullv* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeSoullv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeSoullv& from);
  void MergeFrom(const Sheet_FacadeSoullv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeSoullv E_FacadeSoullv_List = 1;
  inline int e_facadesoullv_list_size() const;
  inline void clear_e_facadesoullv_list();
  static const int kEFacadeSoullvListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeSoullv& e_facadesoullv_list(int index) const;
  inline ::proto_ff::E_FacadeSoullv* mutable_e_facadesoullv_list(int index);
  inline ::proto_ff::E_FacadeSoullv* add_e_facadesoullv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullv >&
      e_facadesoullv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullv >*
      mutable_e_facadesoullv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeSoullv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullv > e_facadesoullv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeSoullv* default_instance_;
};
// -------------------------------------------------------------------

class E_FacadeSoulachievement : public ::google::protobuf::Message {
 public:
  E_FacadeSoulachievement();
  virtual ~E_FacadeSoulachievement();

  E_FacadeSoulachievement(const E_FacadeSoulachievement& from);

  inline E_FacadeSoulachievement& operator=(const E_FacadeSoulachievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FacadeSoulachievement& default_instance();

  void Swap(E_FacadeSoulachievement* other);

  // implements Message ----------------------------------------------

  E_FacadeSoulachievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FacadeSoulachievement& from);
  void MergeFrom(const E_FacadeSoulachievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_soulid = 2;
  inline bool has_m_soulid() const;
  inline void clear_m_soulid();
  static const int kMSoulidFieldNumber = 2;
  inline ::google::protobuf::int32 m_soulid() const;
  inline void set_m_soulid(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_parama = 4;
  inline bool has_m_parama() const;
  inline void clear_m_parama();
  static const int kMParamaFieldNumber = 4;
  inline ::google::protobuf::int32 m_parama() const;
  inline void set_m_parama(::google::protobuf::int32 value);

  // optional int32 m_itemid = 5;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 5;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 6;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 6;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FacadeSoulachievement)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_soulid();
  inline void clear_has_m_soulid();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_parama();
  inline void clear_has_m_parama();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_soulid_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_parama_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static E_FacadeSoulachievement* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FacadeSoulachievement : public ::google::protobuf::Message {
 public:
  Sheet_FacadeSoulachievement();
  virtual ~Sheet_FacadeSoulachievement();

  Sheet_FacadeSoulachievement(const Sheet_FacadeSoulachievement& from);

  inline Sheet_FacadeSoulachievement& operator=(const Sheet_FacadeSoulachievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FacadeSoulachievement& default_instance();

  void Swap(Sheet_FacadeSoulachievement* other);

  // implements Message ----------------------------------------------

  Sheet_FacadeSoulachievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FacadeSoulachievement& from);
  void MergeFrom(const Sheet_FacadeSoulachievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FacadeSoulachievement E_FacadeSoulachievement_List = 1;
  inline int e_facadesoulachievement_list_size() const;
  inline void clear_e_facadesoulachievement_list();
  static const int kEFacadeSoulachievementListFieldNumber = 1;
  inline const ::proto_ff::E_FacadeSoulachievement& e_facadesoulachievement_list(int index) const;
  inline ::proto_ff::E_FacadeSoulachievement* mutable_e_facadesoulachievement_list(int index);
  inline ::proto_ff::E_FacadeSoulachievement* add_e_facadesoulachievement_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulachievement >&
      e_facadesoulachievement_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulachievement >*
      mutable_e_facadesoulachievement_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FacadeSoulachievement)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulachievement > e_facadesoulachievement_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFacade_2eproto();
  friend void protobuf_AssignDesc_E_5fFacade_2eproto();
  friend void protobuf_ShutdownFile_E_5fFacade_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FacadeSoulachievement* default_instance_;
};
// ===================================================================


// ===================================================================

// E_FacadeDisplayMaterialDesc

// optional int32 m_exp = 1;
inline bool E_FacadeDisplayMaterialDesc::has_m_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeDisplayMaterialDesc::set_has_m_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeDisplayMaterialDesc::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeDisplayMaterialDesc::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_FacadeDisplayMaterialDesc::m_exp() const {
  return m_exp_;
}
inline void E_FacadeDisplayMaterialDesc::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int64 m_id = 2;
inline bool E_FacadeDisplayMaterialDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeDisplayMaterialDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeDisplayMaterialDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeDisplayMaterialDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeDisplayMaterialDesc::m_id() const {
  return m_id_;
}
inline void E_FacadeDisplayMaterialDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_FacadeDisplay

// optional int64 m_id = 1;
inline bool E_FacadeDisplay::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeDisplay::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeDisplay::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeDisplay::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeDisplay::m_id() const {
  return m_id_;
}
inline void E_FacadeDisplay::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeDisplay::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeDisplay::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeDisplay::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeDisplay::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeDisplay::m_type() const {
  return m_type_;
}
inline void E_FacadeDisplay::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional string m_resource = 3;
inline bool E_FacadeDisplay::has_m_resource() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeDisplay::set_has_m_resource() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeDisplay::clear_has_m_resource() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeDisplay::clear_m_resource() {
  if (m_resource_ != &::google::protobuf::internal::kEmptyString) {
    m_resource_->clear();
  }
  clear_has_m_resource();
}
inline const ::std::string& E_FacadeDisplay::m_resource() const {
  return *m_resource_;
}
inline void E_FacadeDisplay::set_m_resource(const ::std::string& value) {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  m_resource_->assign(value);
}
inline void E_FacadeDisplay::set_m_resource(const char* value) {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  m_resource_->assign(value);
}
inline void E_FacadeDisplay::set_m_resource(const char* value, size_t size) {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  m_resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeDisplay::mutable_m_resource() {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  return m_resource_;
}
inline ::std::string* E_FacadeDisplay::release_m_resource() {
  clear_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_resource_;
    m_resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeDisplay::set_allocated_m_resource(::std::string* m_resource) {
  if (m_resource_ != &::google::protobuf::internal::kEmptyString) {
    delete m_resource_;
  }
  if (m_resource) {
    set_has_m_resource();
    m_resource_ = m_resource;
  } else {
    clear_has_m_resource();
    m_resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_name = 4;
inline bool E_FacadeDisplay::has_m_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeDisplay::set_has_m_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeDisplay::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeDisplay::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_FacadeDisplay::m_name() const {
  return *m_name_;
}
inline void E_FacadeDisplay::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_FacadeDisplay::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_FacadeDisplay::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeDisplay::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_FacadeDisplay::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeDisplay::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_activedesc = 5;
inline bool E_FacadeDisplay::has_m_activedesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FacadeDisplay::set_has_m_activedesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FacadeDisplay::clear_has_m_activedesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FacadeDisplay::clear_m_activedesc() {
  if (m_activedesc_ != &::google::protobuf::internal::kEmptyString) {
    m_activedesc_->clear();
  }
  clear_has_m_activedesc();
}
inline const ::std::string& E_FacadeDisplay::m_activedesc() const {
  return *m_activedesc_;
}
inline void E_FacadeDisplay::set_m_activedesc(const ::std::string& value) {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  m_activedesc_->assign(value);
}
inline void E_FacadeDisplay::set_m_activedesc(const char* value) {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  m_activedesc_->assign(value);
}
inline void E_FacadeDisplay::set_m_activedesc(const char* value, size_t size) {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  m_activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeDisplay::mutable_m_activedesc() {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  return m_activedesc_;
}
inline ::std::string* E_FacadeDisplay::release_m_activedesc() {
  clear_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_activedesc_;
    m_activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeDisplay::set_allocated_m_activedesc(::std::string* m_activedesc) {
  if (m_activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete m_activedesc_;
  }
  if (m_activedesc) {
    set_has_m_activedesc();
    m_activedesc_ = m_activedesc;
  } else {
    clear_has_m_activedesc();
    m_activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_professionid = 6;
inline bool E_FacadeDisplay::has_m_professionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_FacadeDisplay::set_has_m_professionid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_FacadeDisplay::clear_has_m_professionid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_FacadeDisplay::clear_m_professionid() {
  if (m_professionid_ != &::google::protobuf::internal::kEmptyString) {
    m_professionid_->clear();
  }
  clear_has_m_professionid();
}
inline const ::std::string& E_FacadeDisplay::m_professionid() const {
  return *m_professionid_;
}
inline void E_FacadeDisplay::set_m_professionid(const ::std::string& value) {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  m_professionid_->assign(value);
}
inline void E_FacadeDisplay::set_m_professionid(const char* value) {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  m_professionid_->assign(value);
}
inline void E_FacadeDisplay::set_m_professionid(const char* value, size_t size) {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  m_professionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeDisplay::mutable_m_professionid() {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  return m_professionid_;
}
inline ::std::string* E_FacadeDisplay::release_m_professionid() {
  clear_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_professionid_;
    m_professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeDisplay::set_allocated_m_professionid(::std::string* m_professionid) {
  if (m_professionid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_professionid_;
  }
  if (m_professionid) {
    set_has_m_professionid();
    m_professionid_ = m_professionid;
  } else {
    clear_has_m_professionid();
    m_professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_skillid = 7;
inline bool E_FacadeDisplay::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_FacadeDisplay::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_FacadeDisplay::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_FacadeDisplay::clear_m_skillid() {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    m_skillid_->clear();
  }
  clear_has_m_skillid();
}
inline const ::std::string& E_FacadeDisplay::m_skillid() const {
  return *m_skillid_;
}
inline void E_FacadeDisplay::set_m_skillid(const ::std::string& value) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(value);
}
inline void E_FacadeDisplay::set_m_skillid(const char* value) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(value);
}
inline void E_FacadeDisplay::set_m_skillid(const char* value, size_t size) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeDisplay::mutable_m_skillid() {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  return m_skillid_;
}
inline ::std::string* E_FacadeDisplay::release_m_skillid() {
  clear_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_skillid_;
    m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeDisplay::set_allocated_m_skillid(::std::string* m_skillid) {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_skillid) {
    set_has_m_skillid();
    m_skillid_ = m_skillid;
  } else {
    clear_has_m_skillid();
    m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_souliid = 8;
inline bool E_FacadeDisplay::has_m_souliid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_FacadeDisplay::set_has_m_souliid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_FacadeDisplay::clear_has_m_souliid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_FacadeDisplay::clear_m_souliid() {
  m_souliid_ = 0;
  clear_has_m_souliid();
}
inline ::google::protobuf::int32 E_FacadeDisplay::m_souliid() const {
  return m_souliid_;
}
inline void E_FacadeDisplay::set_m_souliid(::google::protobuf::int32 value) {
  set_has_m_souliid();
  m_souliid_ = value;
}

// repeated .proto_ff.E_FacadeDisplayMaterialDesc m_material = 9;
inline int E_FacadeDisplay::m_material_size() const {
  return m_material_.size();
}
inline void E_FacadeDisplay::clear_m_material() {
  m_material_.Clear();
}
inline const ::proto_ff::E_FacadeDisplayMaterialDesc& E_FacadeDisplay::m_material(int index) const {
  return m_material_.Get(index);
}
inline ::proto_ff::E_FacadeDisplayMaterialDesc* E_FacadeDisplay::mutable_m_material(int index) {
  return m_material_.Mutable(index);
}
inline ::proto_ff::E_FacadeDisplayMaterialDesc* E_FacadeDisplay::add_m_material() {
  return m_material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplayMaterialDesc >&
E_FacadeDisplay::m_material() const {
  return m_material_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplayMaterialDesc >*
E_FacadeDisplay::mutable_m_material() {
  return &m_material_;
}

// repeated int64 m_fragmentid = 10;
inline int E_FacadeDisplay::m_fragmentid_size() const {
  return m_fragmentid_.size();
}
inline void E_FacadeDisplay::clear_m_fragmentid() {
  m_fragmentid_.Clear();
}
inline ::google::protobuf::int64 E_FacadeDisplay::m_fragmentid(int index) const {
  return m_fragmentid_.Get(index);
}
inline void E_FacadeDisplay::set_m_fragmentid(int index, ::google::protobuf::int64 value) {
  m_fragmentid_.Set(index, value);
}
inline void E_FacadeDisplay::add_m_fragmentid(::google::protobuf::int64 value) {
  m_fragmentid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
E_FacadeDisplay::m_fragmentid() const {
  return m_fragmentid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
E_FacadeDisplay::mutable_m_fragmentid() {
  return &m_fragmentid_;
}

// -------------------------------------------------------------------

// Sheet_FacadeDisplay

// repeated .proto_ff.E_FacadeDisplay E_FacadeDisplay_List = 1;
inline int Sheet_FacadeDisplay::e_facadedisplay_list_size() const {
  return e_facadedisplay_list_.size();
}
inline void Sheet_FacadeDisplay::clear_e_facadedisplay_list() {
  e_facadedisplay_list_.Clear();
}
inline const ::proto_ff::E_FacadeDisplay& Sheet_FacadeDisplay::e_facadedisplay_list(int index) const {
  return e_facadedisplay_list_.Get(index);
}
inline ::proto_ff::E_FacadeDisplay* Sheet_FacadeDisplay::mutable_e_facadedisplay_list(int index) {
  return e_facadedisplay_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeDisplay* Sheet_FacadeDisplay::add_e_facadedisplay_list() {
  return e_facadedisplay_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplay >&
Sheet_FacadeDisplay::e_facadedisplay_list() const {
  return e_facadedisplay_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeDisplay >*
Sheet_FacadeDisplay::mutable_e_facadedisplay_list() {
  return &e_facadedisplay_list_;
}

// -------------------------------------------------------------------

// E_FacadeValueWingattributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeValueWingattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeValueWingattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeValueWingattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeValueWingattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeValueWingattributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeValueWingattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeValueWingattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeValueWingattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeValueWingattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeValueWingattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeValueWingattributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeValueWingattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeValueTreasureattributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeValueTreasureattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeValueTreasureattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeValueTreasureattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeValueTreasureattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeValueTreasureattributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeValueTreasureattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeValueTreasureattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeValueTreasureattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeValueTreasureattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeValueTreasureattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeValueTreasureattributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeValueTreasureattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeValueArtifactattributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeValueArtifactattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeValueArtifactattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeValueArtifactattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeValueArtifactattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeValueArtifactattributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeValueArtifactattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeValueArtifactattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeValueArtifactattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeValueArtifactattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeValueArtifactattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeValueArtifactattributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeValueArtifactattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeValueBladeattributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeValueBladeattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeValueBladeattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeValueBladeattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeValueBladeattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeValueBladeattributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeValueBladeattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeValueBladeattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeValueBladeattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeValueBladeattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeValueBladeattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeValueBladeattributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeValueBladeattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeValue

// optional int32 m_lv = 1;
inline bool E_FacadeValue::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeValue::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeValue::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeValue::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_FacadeValue::m_lv() const {
  return m_lv_;
}
inline void E_FacadeValue::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int64 m_wingexp = 2;
inline bool E_FacadeValue::has_m_wingexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeValue::set_has_m_wingexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeValue::clear_has_m_wingexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeValue::clear_m_wingexp() {
  m_wingexp_ = GOOGLE_LONGLONG(0);
  clear_has_m_wingexp();
}
inline ::google::protobuf::int64 E_FacadeValue::m_wingexp() const {
  return m_wingexp_;
}
inline void E_FacadeValue::set_m_wingexp(::google::protobuf::int64 value) {
  set_has_m_wingexp();
  m_wingexp_ = value;
}

// optional int64 m_treasureexp = 3;
inline bool E_FacadeValue::has_m_treasureexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeValue::set_has_m_treasureexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeValue::clear_has_m_treasureexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeValue::clear_m_treasureexp() {
  m_treasureexp_ = GOOGLE_LONGLONG(0);
  clear_has_m_treasureexp();
}
inline ::google::protobuf::int64 E_FacadeValue::m_treasureexp() const {
  return m_treasureexp_;
}
inline void E_FacadeValue::set_m_treasureexp(::google::protobuf::int64 value) {
  set_has_m_treasureexp();
  m_treasureexp_ = value;
}

// optional int64 m_artifactexp = 4;
inline bool E_FacadeValue::has_m_artifactexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeValue::set_has_m_artifactexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeValue::clear_has_m_artifactexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeValue::clear_m_artifactexp() {
  m_artifactexp_ = GOOGLE_LONGLONG(0);
  clear_has_m_artifactexp();
}
inline ::google::protobuf::int64 E_FacadeValue::m_artifactexp() const {
  return m_artifactexp_;
}
inline void E_FacadeValue::set_m_artifactexp(::google::protobuf::int64 value) {
  set_has_m_artifactexp();
  m_artifactexp_ = value;
}

// optional int64 m_bladeexp = 5;
inline bool E_FacadeValue::has_m_bladeexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FacadeValue::set_has_m_bladeexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FacadeValue::clear_has_m_bladeexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FacadeValue::clear_m_bladeexp() {
  m_bladeexp_ = GOOGLE_LONGLONG(0);
  clear_has_m_bladeexp();
}
inline ::google::protobuf::int64 E_FacadeValue::m_bladeexp() const {
  return m_bladeexp_;
}
inline void E_FacadeValue::set_m_bladeexp(::google::protobuf::int64 value) {
  set_has_m_bladeexp();
  m_bladeexp_ = value;
}

// repeated .proto_ff.E_FacadeValueWingattributeDesc m_wingattribute = 6;
inline int E_FacadeValue::m_wingattribute_size() const {
  return m_wingattribute_.size();
}
inline void E_FacadeValue::clear_m_wingattribute() {
  m_wingattribute_.Clear();
}
inline const ::proto_ff::E_FacadeValueWingattributeDesc& E_FacadeValue::m_wingattribute(int index) const {
  return m_wingattribute_.Get(index);
}
inline ::proto_ff::E_FacadeValueWingattributeDesc* E_FacadeValue::mutable_m_wingattribute(int index) {
  return m_wingattribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeValueWingattributeDesc* E_FacadeValue::add_m_wingattribute() {
  return m_wingattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueWingattributeDesc >&
E_FacadeValue::m_wingattribute() const {
  return m_wingattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueWingattributeDesc >*
E_FacadeValue::mutable_m_wingattribute() {
  return &m_wingattribute_;
}

// repeated .proto_ff.E_FacadeValueTreasureattributeDesc m_treasureattribute = 7;
inline int E_FacadeValue::m_treasureattribute_size() const {
  return m_treasureattribute_.size();
}
inline void E_FacadeValue::clear_m_treasureattribute() {
  m_treasureattribute_.Clear();
}
inline const ::proto_ff::E_FacadeValueTreasureattributeDesc& E_FacadeValue::m_treasureattribute(int index) const {
  return m_treasureattribute_.Get(index);
}
inline ::proto_ff::E_FacadeValueTreasureattributeDesc* E_FacadeValue::mutable_m_treasureattribute(int index) {
  return m_treasureattribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeValueTreasureattributeDesc* E_FacadeValue::add_m_treasureattribute() {
  return m_treasureattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueTreasureattributeDesc >&
E_FacadeValue::m_treasureattribute() const {
  return m_treasureattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueTreasureattributeDesc >*
E_FacadeValue::mutable_m_treasureattribute() {
  return &m_treasureattribute_;
}

// repeated .proto_ff.E_FacadeValueArtifactattributeDesc m_artifactattribute = 8;
inline int E_FacadeValue::m_artifactattribute_size() const {
  return m_artifactattribute_.size();
}
inline void E_FacadeValue::clear_m_artifactattribute() {
  m_artifactattribute_.Clear();
}
inline const ::proto_ff::E_FacadeValueArtifactattributeDesc& E_FacadeValue::m_artifactattribute(int index) const {
  return m_artifactattribute_.Get(index);
}
inline ::proto_ff::E_FacadeValueArtifactattributeDesc* E_FacadeValue::mutable_m_artifactattribute(int index) {
  return m_artifactattribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeValueArtifactattributeDesc* E_FacadeValue::add_m_artifactattribute() {
  return m_artifactattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueArtifactattributeDesc >&
E_FacadeValue::m_artifactattribute() const {
  return m_artifactattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueArtifactattributeDesc >*
E_FacadeValue::mutable_m_artifactattribute() {
  return &m_artifactattribute_;
}

// repeated .proto_ff.E_FacadeValueBladeattributeDesc m_bladeattribute = 9;
inline int E_FacadeValue::m_bladeattribute_size() const {
  return m_bladeattribute_.size();
}
inline void E_FacadeValue::clear_m_bladeattribute() {
  m_bladeattribute_.Clear();
}
inline const ::proto_ff::E_FacadeValueBladeattributeDesc& E_FacadeValue::m_bladeattribute(int index) const {
  return m_bladeattribute_.Get(index);
}
inline ::proto_ff::E_FacadeValueBladeattributeDesc* E_FacadeValue::mutable_m_bladeattribute(int index) {
  return m_bladeattribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeValueBladeattributeDesc* E_FacadeValue::add_m_bladeattribute() {
  return m_bladeattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueBladeattributeDesc >&
E_FacadeValue::m_bladeattribute() const {
  return m_bladeattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValueBladeattributeDesc >*
E_FacadeValue::mutable_m_bladeattribute() {
  return &m_bladeattribute_;
}

// -------------------------------------------------------------------

// Sheet_FacadeValue

// repeated .proto_ff.E_FacadeValue E_FacadeValue_List = 1;
inline int Sheet_FacadeValue::e_facadevalue_list_size() const {
  return e_facadevalue_list_.size();
}
inline void Sheet_FacadeValue::clear_e_facadevalue_list() {
  e_facadevalue_list_.Clear();
}
inline const ::proto_ff::E_FacadeValue& Sheet_FacadeValue::e_facadevalue_list(int index) const {
  return e_facadevalue_list_.Get(index);
}
inline ::proto_ff::E_FacadeValue* Sheet_FacadeValue::mutable_e_facadevalue_list(int index) {
  return e_facadevalue_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeValue* Sheet_FacadeValue::add_e_facadevalue_list() {
  return e_facadevalue_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValue >&
Sheet_FacadeValue::e_facadevalue_list() const {
  return e_facadevalue_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeValue >*
Sheet_FacadeValue::mutable_e_facadevalue_list() {
  return &e_facadevalue_list_;
}

// -------------------------------------------------------------------

// E_FacadeType

// optional int32 m_id = 1;
inline bool E_FacadeType::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeType::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeType::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeType::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_FacadeType::m_id() const {
  return m_id_;
}
inline void E_FacadeType::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_soucename = 2;
inline bool E_FacadeType::has_m_soucename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeType::set_has_m_soucename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeType::clear_has_m_soucename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeType::clear_m_soucename() {
  if (m_soucename_ != &::google::protobuf::internal::kEmptyString) {
    m_soucename_->clear();
  }
  clear_has_m_soucename();
}
inline const ::std::string& E_FacadeType::m_soucename() const {
  return *m_soucename_;
}
inline void E_FacadeType::set_m_soucename(const ::std::string& value) {
  set_has_m_soucename();
  if (m_soucename_ == &::google::protobuf::internal::kEmptyString) {
    m_soucename_ = new ::std::string;
  }
  m_soucename_->assign(value);
}
inline void E_FacadeType::set_m_soucename(const char* value) {
  set_has_m_soucename();
  if (m_soucename_ == &::google::protobuf::internal::kEmptyString) {
    m_soucename_ = new ::std::string;
  }
  m_soucename_->assign(value);
}
inline void E_FacadeType::set_m_soucename(const char* value, size_t size) {
  set_has_m_soucename();
  if (m_soucename_ == &::google::protobuf::internal::kEmptyString) {
    m_soucename_ = new ::std::string;
  }
  m_soucename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeType::mutable_m_soucename() {
  set_has_m_soucename();
  if (m_soucename_ == &::google::protobuf::internal::kEmptyString) {
    m_soucename_ = new ::std::string;
  }
  return m_soucename_;
}
inline ::std::string* E_FacadeType::release_m_soucename() {
  clear_has_m_soucename();
  if (m_soucename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_soucename_;
    m_soucename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeType::set_allocated_m_soucename(::std::string* m_soucename) {
  if (m_soucename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_soucename_;
  }
  if (m_soucename) {
    set_has_m_soucename();
    m_soucename_ = m_soucename;
  } else {
    clear_has_m_soucename();
    m_soucename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_FacadeType

// repeated .proto_ff.E_FacadeType E_FacadeType_List = 1;
inline int Sheet_FacadeType::e_facadetype_list_size() const {
  return e_facadetype_list_.size();
}
inline void Sheet_FacadeType::clear_e_facadetype_list() {
  e_facadetype_list_.Clear();
}
inline const ::proto_ff::E_FacadeType& Sheet_FacadeType::e_facadetype_list(int index) const {
  return e_facadetype_list_.Get(index);
}
inline ::proto_ff::E_FacadeType* Sheet_FacadeType::mutable_e_facadetype_list(int index) {
  return e_facadetype_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeType* Sheet_FacadeType::add_e_facadetype_list() {
  return e_facadetype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeType >&
Sheet_FacadeType::e_facadetype_list() const {
  return e_facadetype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeType >*
Sheet_FacadeType::mutable_e_facadetype_list() {
  return &e_facadetype_list_;
}

// -------------------------------------------------------------------

// E_FacadeFragmentAttributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeFragmentAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeFragmentAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeFragmentAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeFragmentAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeFragmentAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeFragmentAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeFragmentAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeFragmentAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeFragmentAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeFragmentAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeFragmentAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeFragmentAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeFragment

// optional int64 m_fragmentid = 1;
inline bool E_FacadeFragment::has_m_fragmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeFragment::set_has_m_fragmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeFragment::clear_has_m_fragmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeFragment::clear_m_fragmentid() {
  m_fragmentid_ = GOOGLE_LONGLONG(0);
  clear_has_m_fragmentid();
}
inline ::google::protobuf::int64 E_FacadeFragment::m_fragmentid() const {
  return m_fragmentid_;
}
inline void E_FacadeFragment::set_m_fragmentid(::google::protobuf::int64 value) {
  set_has_m_fragmentid();
  m_fragmentid_ = value;
}

// optional int64 m_item = 2;
inline bool E_FacadeFragment::has_m_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeFragment::set_has_m_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeFragment::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeFragment::clear_m_item() {
  m_item_ = GOOGLE_LONGLONG(0);
  clear_has_m_item();
}
inline ::google::protobuf::int64 E_FacadeFragment::m_item() const {
  return m_item_;
}
inline void E_FacadeFragment::set_m_item(::google::protobuf::int64 value) {
  set_has_m_item();
  m_item_ = value;
}

// optional int32 m_itemnum = 3;
inline bool E_FacadeFragment::has_m_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeFragment::set_has_m_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeFragment::clear_has_m_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeFragment::clear_m_itemnum() {
  m_itemnum_ = 0;
  clear_has_m_itemnum();
}
inline ::google::protobuf::int32 E_FacadeFragment::m_itemnum() const {
  return m_itemnum_;
}
inline void E_FacadeFragment::set_m_itemnum(::google::protobuf::int32 value) {
  set_has_m_itemnum();
  m_itemnum_ = value;
}

// repeated .proto_ff.E_FacadeFragmentAttributeDesc m_attribute = 4;
inline int E_FacadeFragment::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_FacadeFragment::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_FacadeFragmentAttributeDesc& E_FacadeFragment::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_FacadeFragmentAttributeDesc* E_FacadeFragment::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeFragmentAttributeDesc* E_FacadeFragment::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragmentAttributeDesc >&
E_FacadeFragment::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragmentAttributeDesc >*
E_FacadeFragment::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_FacadeFragment

// repeated .proto_ff.E_FacadeFragment E_FacadeFragment_List = 1;
inline int Sheet_FacadeFragment::e_facadefragment_list_size() const {
  return e_facadefragment_list_.size();
}
inline void Sheet_FacadeFragment::clear_e_facadefragment_list() {
  e_facadefragment_list_.Clear();
}
inline const ::proto_ff::E_FacadeFragment& Sheet_FacadeFragment::e_facadefragment_list(int index) const {
  return e_facadefragment_list_.Get(index);
}
inline ::proto_ff::E_FacadeFragment* Sheet_FacadeFragment::mutable_e_facadefragment_list(int index) {
  return e_facadefragment_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeFragment* Sheet_FacadeFragment::add_e_facadefragment_list() {
  return e_facadefragment_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragment >&
Sheet_FacadeFragment::e_facadefragment_list() const {
  return e_facadefragment_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeFragment >*
Sheet_FacadeFragment::mutable_e_facadefragment_list() {
  return &e_facadefragment_list_;
}

// -------------------------------------------------------------------

// E_FacadeChangeAttributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeChangeAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeChangeAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeChangeAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeChangeAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeChangeAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeChangeAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeChangeAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeChangeAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeChangeAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeChangeAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeChangeAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeChangeAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeChangeActiveattributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeChangeActiveattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeChangeActiveattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeChangeActiveattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeChangeActiveattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeChangeActiveattributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeChangeActiveattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeChangeActiveattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeChangeActiveattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeChangeActiveattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeChangeActiveattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeChangeActiveattributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeChangeActiveattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeChange

// optional int64 m_id = 1;
inline bool E_FacadeChange::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeChange::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeChange::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeChange::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeChange::m_id() const {
  return m_id_;
}
inline void E_FacadeChange::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeChange::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeChange::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeChange::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeChange::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeChange::m_type() const {
  return m_type_;
}
inline void E_FacadeChange::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional string m_resource = 3;
inline bool E_FacadeChange::has_m_resource() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeChange::set_has_m_resource() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeChange::clear_has_m_resource() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeChange::clear_m_resource() {
  if (m_resource_ != &::google::protobuf::internal::kEmptyString) {
    m_resource_->clear();
  }
  clear_has_m_resource();
}
inline const ::std::string& E_FacadeChange::m_resource() const {
  return *m_resource_;
}
inline void E_FacadeChange::set_m_resource(const ::std::string& value) {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  m_resource_->assign(value);
}
inline void E_FacadeChange::set_m_resource(const char* value) {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  m_resource_->assign(value);
}
inline void E_FacadeChange::set_m_resource(const char* value, size_t size) {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  m_resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeChange::mutable_m_resource() {
  set_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    m_resource_ = new ::std::string;
  }
  return m_resource_;
}
inline ::std::string* E_FacadeChange::release_m_resource() {
  clear_has_m_resource();
  if (m_resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_resource_;
    m_resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeChange::set_allocated_m_resource(::std::string* m_resource) {
  if (m_resource_ != &::google::protobuf::internal::kEmptyString) {
    delete m_resource_;
  }
  if (m_resource) {
    set_has_m_resource();
    m_resource_ = m_resource;
  } else {
    clear_has_m_resource();
    m_resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_professionid = 4;
inline bool E_FacadeChange::has_m_professionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeChange::set_has_m_professionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeChange::clear_has_m_professionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeChange::clear_m_professionid() {
  if (m_professionid_ != &::google::protobuf::internal::kEmptyString) {
    m_professionid_->clear();
  }
  clear_has_m_professionid();
}
inline const ::std::string& E_FacadeChange::m_professionid() const {
  return *m_professionid_;
}
inline void E_FacadeChange::set_m_professionid(const ::std::string& value) {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  m_professionid_->assign(value);
}
inline void E_FacadeChange::set_m_professionid(const char* value) {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  m_professionid_->assign(value);
}
inline void E_FacadeChange::set_m_professionid(const char* value, size_t size) {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  m_professionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeChange::mutable_m_professionid() {
  set_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    m_professionid_ = new ::std::string;
  }
  return m_professionid_;
}
inline ::std::string* E_FacadeChange::release_m_professionid() {
  clear_has_m_professionid();
  if (m_professionid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_professionid_;
    m_professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeChange::set_allocated_m_professionid(::std::string* m_professionid) {
  if (m_professionid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_professionid_;
  }
  if (m_professionid) {
    set_has_m_professionid();
    m_professionid_ = m_professionid;
  } else {
    clear_has_m_professionid();
    m_professionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_name = 5;
inline bool E_FacadeChange::has_m_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FacadeChange::set_has_m_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FacadeChange::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FacadeChange::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_FacadeChange::m_name() const {
  return *m_name_;
}
inline void E_FacadeChange::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_FacadeChange::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_FacadeChange::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeChange::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_FacadeChange::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeChange::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_activedesc = 6;
inline bool E_FacadeChange::has_m_activedesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_FacadeChange::set_has_m_activedesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_FacadeChange::clear_has_m_activedesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_FacadeChange::clear_m_activedesc() {
  if (m_activedesc_ != &::google::protobuf::internal::kEmptyString) {
    m_activedesc_->clear();
  }
  clear_has_m_activedesc();
}
inline const ::std::string& E_FacadeChange::m_activedesc() const {
  return *m_activedesc_;
}
inline void E_FacadeChange::set_m_activedesc(const ::std::string& value) {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  m_activedesc_->assign(value);
}
inline void E_FacadeChange::set_m_activedesc(const char* value) {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  m_activedesc_->assign(value);
}
inline void E_FacadeChange::set_m_activedesc(const char* value, size_t size) {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  m_activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeChange::mutable_m_activedesc() {
  set_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    m_activedesc_ = new ::std::string;
  }
  return m_activedesc_;
}
inline ::std::string* E_FacadeChange::release_m_activedesc() {
  clear_has_m_activedesc();
  if (m_activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_activedesc_;
    m_activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeChange::set_allocated_m_activedesc(::std::string* m_activedesc) {
  if (m_activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete m_activedesc_;
  }
  if (m_activedesc) {
    set_has_m_activedesc();
    m_activedesc_ = m_activedesc;
  } else {
    clear_has_m_activedesc();
    m_activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_quality = 7;
inline bool E_FacadeChange::has_m_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_FacadeChange::set_has_m_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_FacadeChange::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_FacadeChange::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_FacadeChange::m_quality() const {
  return m_quality_;
}
inline void E_FacadeChange::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int64 m_activationitem = 8;
inline bool E_FacadeChange::has_m_activationitem() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_FacadeChange::set_has_m_activationitem() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_FacadeChange::clear_has_m_activationitem() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_FacadeChange::clear_m_activationitem() {
  m_activationitem_ = GOOGLE_LONGLONG(0);
  clear_has_m_activationitem();
}
inline ::google::protobuf::int64 E_FacadeChange::m_activationitem() const {
  return m_activationitem_;
}
inline void E_FacadeChange::set_m_activationitem(::google::protobuf::int64 value) {
  set_has_m_activationitem();
  m_activationitem_ = value;
}

// optional int32 m_activationnum = 9;
inline bool E_FacadeChange::has_m_activationnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_FacadeChange::set_has_m_activationnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_FacadeChange::clear_has_m_activationnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_FacadeChange::clear_m_activationnum() {
  m_activationnum_ = 0;
  clear_has_m_activationnum();
}
inline ::google::protobuf::int32 E_FacadeChange::m_activationnum() const {
  return m_activationnum_;
}
inline void E_FacadeChange::set_m_activationnum(::google::protobuf::int32 value) {
  set_has_m_activationnum();
  m_activationnum_ = value;
}

// optional int64 m_starid = 10;
inline bool E_FacadeChange::has_m_starid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_FacadeChange::set_has_m_starid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_FacadeChange::clear_has_m_starid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_FacadeChange::clear_m_starid() {
  m_starid_ = GOOGLE_LONGLONG(0);
  clear_has_m_starid();
}
inline ::google::protobuf::int64 E_FacadeChange::m_starid() const {
  return m_starid_;
}
inline void E_FacadeChange::set_m_starid(::google::protobuf::int64 value) {
  set_has_m_starid();
  m_starid_ = value;
}

// optional string m_starnum = 11;
inline bool E_FacadeChange::has_m_starnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_FacadeChange::set_has_m_starnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_FacadeChange::clear_has_m_starnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_FacadeChange::clear_m_starnum() {
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    m_starnum_->clear();
  }
  clear_has_m_starnum();
}
inline const ::std::string& E_FacadeChange::m_starnum() const {
  return *m_starnum_;
}
inline void E_FacadeChange::set_m_starnum(const ::std::string& value) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(value);
}
inline void E_FacadeChange::set_m_starnum(const char* value) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(value);
}
inline void E_FacadeChange::set_m_starnum(const char* value, size_t size) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeChange::mutable_m_starnum() {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  return m_starnum_;
}
inline ::std::string* E_FacadeChange::release_m_starnum() {
  clear_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_starnum_;
    m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeChange::set_allocated_m_starnum(::std::string* m_starnum) {
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starnum_;
  }
  if (m_starnum) {
    set_has_m_starnum();
    m_starnum_ = m_starnum;
  } else {
    clear_has_m_starnum();
    m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_starup = 12;
inline bool E_FacadeChange::has_m_starup() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_FacadeChange::set_has_m_starup() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_FacadeChange::clear_has_m_starup() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_FacadeChange::clear_m_starup() {
  m_starup_ = 0;
  clear_has_m_starup();
}
inline ::google::protobuf::int32 E_FacadeChange::m_starup() const {
  return m_starup_;
}
inline void E_FacadeChange::set_m_starup(::google::protobuf::int32 value) {
  set_has_m_starup();
  m_starup_ = value;
}

// optional int32 m_starber = 13;
inline bool E_FacadeChange::has_m_starber() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_FacadeChange::set_has_m_starber() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_FacadeChange::clear_has_m_starber() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_FacadeChange::clear_m_starber() {
  m_starber_ = 0;
  clear_has_m_starber();
}
inline ::google::protobuf::int32 E_FacadeChange::m_starber() const {
  return m_starber_;
}
inline void E_FacadeChange::set_m_starber(::google::protobuf::int32 value) {
  set_has_m_starber();
  m_starber_ = value;
}

// optional int64 m_upattributeid = 14;
inline bool E_FacadeChange::has_m_upattributeid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_FacadeChange::set_has_m_upattributeid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_FacadeChange::clear_has_m_upattributeid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_FacadeChange::clear_m_upattributeid() {
  m_upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_m_upattributeid();
}
inline ::google::protobuf::int64 E_FacadeChange::m_upattributeid() const {
  return m_upattributeid_;
}
inline void E_FacadeChange::set_m_upattributeid(::google::protobuf::int64 value) {
  set_has_m_upattributeid();
  m_upattributeid_ = value;
}

// optional int32 m_activeskill = 15;
inline bool E_FacadeChange::has_m_activeskill() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_FacadeChange::set_has_m_activeskill() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_FacadeChange::clear_has_m_activeskill() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_FacadeChange::clear_m_activeskill() {
  m_activeskill_ = 0;
  clear_has_m_activeskill();
}
inline ::google::protobuf::int32 E_FacadeChange::m_activeskill() const {
  return m_activeskill_;
}
inline void E_FacadeChange::set_m_activeskill(::google::protobuf::int32 value) {
  set_has_m_activeskill();
  m_activeskill_ = value;
}

// repeated .proto_ff.E_FacadeChangeAttributeDesc m_attribute = 16;
inline int E_FacadeChange::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_FacadeChange::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_FacadeChangeAttributeDesc& E_FacadeChange::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_FacadeChangeAttributeDesc* E_FacadeChange::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeChangeAttributeDesc* E_FacadeChange::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeAttributeDesc >&
E_FacadeChange::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeAttributeDesc >*
E_FacadeChange::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated .proto_ff.E_FacadeChangeActiveattributeDesc m_activeattribute = 17;
inline int E_FacadeChange::m_activeattribute_size() const {
  return m_activeattribute_.size();
}
inline void E_FacadeChange::clear_m_activeattribute() {
  m_activeattribute_.Clear();
}
inline const ::proto_ff::E_FacadeChangeActiveattributeDesc& E_FacadeChange::m_activeattribute(int index) const {
  return m_activeattribute_.Get(index);
}
inline ::proto_ff::E_FacadeChangeActiveattributeDesc* E_FacadeChange::mutable_m_activeattribute(int index) {
  return m_activeattribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeChangeActiveattributeDesc* E_FacadeChange::add_m_activeattribute() {
  return m_activeattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeActiveattributeDesc >&
E_FacadeChange::m_activeattribute() const {
  return m_activeattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChangeActiveattributeDesc >*
E_FacadeChange::mutable_m_activeattribute() {
  return &m_activeattribute_;
}

// -------------------------------------------------------------------

// Sheet_FacadeChange

// repeated .proto_ff.E_FacadeChange E_FacadeChange_List = 1;
inline int Sheet_FacadeChange::e_facadechange_list_size() const {
  return e_facadechange_list_.size();
}
inline void Sheet_FacadeChange::clear_e_facadechange_list() {
  e_facadechange_list_.Clear();
}
inline const ::proto_ff::E_FacadeChange& Sheet_FacadeChange::e_facadechange_list(int index) const {
  return e_facadechange_list_.Get(index);
}
inline ::proto_ff::E_FacadeChange* Sheet_FacadeChange::mutable_e_facadechange_list(int index) {
  return e_facadechange_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeChange* Sheet_FacadeChange::add_e_facadechange_list() {
  return e_facadechange_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChange >&
Sheet_FacadeChange::e_facadechange_list() const {
  return e_facadechange_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeChange >*
Sheet_FacadeChange::mutable_e_facadechange_list() {
  return &e_facadechange_list_;
}

// -------------------------------------------------------------------

// E_FacadeStarupUpattributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeStarupUpattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeStarupUpattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeStarupUpattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeStarupUpattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeStarupUpattributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeStarupUpattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeStarupUpattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeStarupUpattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeStarupUpattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeStarupUpattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeStarupUpattributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeStarupUpattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeStarup

// optional int32 m_id = 1;
inline bool E_FacadeStarup::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeStarup::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeStarup::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeStarup::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_FacadeStarup::m_id() const {
  return m_id_;
}
inline void E_FacadeStarup::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_upattributeid = 2;
inline bool E_FacadeStarup::has_m_upattributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeStarup::set_has_m_upattributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeStarup::clear_has_m_upattributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeStarup::clear_m_upattributeid() {
  m_upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_m_upattributeid();
}
inline ::google::protobuf::int64 E_FacadeStarup::m_upattributeid() const {
  return m_upattributeid_;
}
inline void E_FacadeStarup::set_m_upattributeid(::google::protobuf::int64 value) {
  set_has_m_upattributeid();
  m_upattributeid_ = value;
}

// optional int32 m_starid = 3;
inline bool E_FacadeStarup::has_m_starid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeStarup::set_has_m_starid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeStarup::clear_has_m_starid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeStarup::clear_m_starid() {
  m_starid_ = 0;
  clear_has_m_starid();
}
inline ::google::protobuf::int32 E_FacadeStarup::m_starid() const {
  return m_starid_;
}
inline void E_FacadeStarup::set_m_starid(::google::protobuf::int32 value) {
  set_has_m_starid();
  m_starid_ = value;
}

// optional int32 m_skillid = 4;
inline bool E_FacadeStarup::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeStarup::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeStarup::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeStarup::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_FacadeStarup::m_skillid() const {
  return m_skillid_;
}
inline void E_FacadeStarup::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// repeated .proto_ff.E_FacadeStarupUpattributeDesc m_upattribute = 5;
inline int E_FacadeStarup::m_upattribute_size() const {
  return m_upattribute_.size();
}
inline void E_FacadeStarup::clear_m_upattribute() {
  m_upattribute_.Clear();
}
inline const ::proto_ff::E_FacadeStarupUpattributeDesc& E_FacadeStarup::m_upattribute(int index) const {
  return m_upattribute_.Get(index);
}
inline ::proto_ff::E_FacadeStarupUpattributeDesc* E_FacadeStarup::mutable_m_upattribute(int index) {
  return m_upattribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeStarupUpattributeDesc* E_FacadeStarup::add_m_upattribute() {
  return m_upattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarupUpattributeDesc >&
E_FacadeStarup::m_upattribute() const {
  return m_upattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarupUpattributeDesc >*
E_FacadeStarup::mutable_m_upattribute() {
  return &m_upattribute_;
}

// -------------------------------------------------------------------

// Sheet_FacadeStarup

// repeated .proto_ff.E_FacadeStarup E_FacadeStarup_List = 1;
inline int Sheet_FacadeStarup::e_facadestarup_list_size() const {
  return e_facadestarup_list_.size();
}
inline void Sheet_FacadeStarup::clear_e_facadestarup_list() {
  e_facadestarup_list_.Clear();
}
inline const ::proto_ff::E_FacadeStarup& Sheet_FacadeStarup::e_facadestarup_list(int index) const {
  return e_facadestarup_list_.Get(index);
}
inline ::proto_ff::E_FacadeStarup* Sheet_FacadeStarup::mutable_e_facadestarup_list(int index) {
  return e_facadestarup_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeStarup* Sheet_FacadeStarup::add_e_facadestarup_list() {
  return e_facadestarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarup >&
Sheet_FacadeStarup::e_facadestarup_list() const {
  return e_facadestarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeStarup >*
Sheet_FacadeStarup::mutable_e_facadestarup_list() {
  return &e_facadestarup_list_;
}

// -------------------------------------------------------------------

// E_FacadeSoulAttributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeSoulAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoulAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoulAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoulAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeSoulAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeSoulAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeSoulAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeSoulAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeSoulAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeSoulAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeSoulAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeSoulAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeSoul

// optional int64 m_id = 1;
inline bool E_FacadeSoul::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoul::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoul::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoul::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeSoul::m_id() const {
  return m_id_;
}
inline void E_FacadeSoul::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_rechargeid = 2;
inline bool E_FacadeSoul::has_m_rechargeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeSoul::set_has_m_rechargeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeSoul::clear_has_m_rechargeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeSoul::clear_m_rechargeid() {
  m_rechargeid_ = 0;
  clear_has_m_rechargeid();
}
inline ::google::protobuf::int32 E_FacadeSoul::m_rechargeid() const {
  return m_rechargeid_;
}
inline void E_FacadeSoul::set_m_rechargeid(::google::protobuf::int32 value) {
  set_has_m_rechargeid();
  m_rechargeid_ = value;
}

// optional int32 m_mainskill = 3;
inline bool E_FacadeSoul::has_m_mainskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeSoul::set_has_m_mainskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeSoul::clear_has_m_mainskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeSoul::clear_m_mainskill() {
  m_mainskill_ = 0;
  clear_has_m_mainskill();
}
inline ::google::protobuf::int32 E_FacadeSoul::m_mainskill() const {
  return m_mainskill_;
}
inline void E_FacadeSoul::set_m_mainskill(::google::protobuf::int32 value) {
  set_has_m_mainskill();
  m_mainskill_ = value;
}

// optional string m_attributetype = 4;
inline bool E_FacadeSoul::has_m_attributetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeSoul::set_has_m_attributetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeSoul::clear_has_m_attributetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeSoul::clear_m_attributetype() {
  if (m_attributetype_ != &::google::protobuf::internal::kEmptyString) {
    m_attributetype_->clear();
  }
  clear_has_m_attributetype();
}
inline const ::std::string& E_FacadeSoul::m_attributetype() const {
  return *m_attributetype_;
}
inline void E_FacadeSoul::set_m_attributetype(const ::std::string& value) {
  set_has_m_attributetype();
  if (m_attributetype_ == &::google::protobuf::internal::kEmptyString) {
    m_attributetype_ = new ::std::string;
  }
  m_attributetype_->assign(value);
}
inline void E_FacadeSoul::set_m_attributetype(const char* value) {
  set_has_m_attributetype();
  if (m_attributetype_ == &::google::protobuf::internal::kEmptyString) {
    m_attributetype_ = new ::std::string;
  }
  m_attributetype_->assign(value);
}
inline void E_FacadeSoul::set_m_attributetype(const char* value, size_t size) {
  set_has_m_attributetype();
  if (m_attributetype_ == &::google::protobuf::internal::kEmptyString) {
    m_attributetype_ = new ::std::string;
  }
  m_attributetype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeSoul::mutable_m_attributetype() {
  set_has_m_attributetype();
  if (m_attributetype_ == &::google::protobuf::internal::kEmptyString) {
    m_attributetype_ = new ::std::string;
  }
  return m_attributetype_;
}
inline ::std::string* E_FacadeSoul::release_m_attributetype() {
  clear_has_m_attributetype();
  if (m_attributetype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_attributetype_;
    m_attributetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeSoul::set_allocated_m_attributetype(::std::string* m_attributetype) {
  if (m_attributetype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_attributetype_;
  }
  if (m_attributetype) {
    set_has_m_attributetype();
    m_attributetype_ = m_attributetype;
  } else {
    clear_has_m_attributetype();
    m_attributetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 m_minorskill = 5;
inline int E_FacadeSoul::m_minorskill_size() const {
  return m_minorskill_.size();
}
inline void E_FacadeSoul::clear_m_minorskill() {
  m_minorskill_.Clear();
}
inline ::google::protobuf::int32 E_FacadeSoul::m_minorskill(int index) const {
  return m_minorskill_.Get(index);
}
inline void E_FacadeSoul::set_m_minorskill(int index, ::google::protobuf::int32 value) {
  m_minorskill_.Set(index, value);
}
inline void E_FacadeSoul::add_m_minorskill(::google::protobuf::int32 value) {
  m_minorskill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_FacadeSoul::m_minorskill() const {
  return m_minorskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_FacadeSoul::mutable_m_minorskill() {
  return &m_minorskill_;
}

// repeated .proto_ff.E_FacadeSoulAttributeDesc m_attribute = 6;
inline int E_FacadeSoul::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_FacadeSoul::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_FacadeSoulAttributeDesc& E_FacadeSoul::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_FacadeSoulAttributeDesc* E_FacadeSoul::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoulAttributeDesc* E_FacadeSoul::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulAttributeDesc >&
E_FacadeSoul::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulAttributeDesc >*
E_FacadeSoul::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_FacadeSoul

// repeated .proto_ff.E_FacadeSoul E_FacadeSoul_List = 1;
inline int Sheet_FacadeSoul::e_facadesoul_list_size() const {
  return e_facadesoul_list_.size();
}
inline void Sheet_FacadeSoul::clear_e_facadesoul_list() {
  e_facadesoul_list_.Clear();
}
inline const ::proto_ff::E_FacadeSoul& Sheet_FacadeSoul::e_facadesoul_list(int index) const {
  return e_facadesoul_list_.Get(index);
}
inline ::proto_ff::E_FacadeSoul* Sheet_FacadeSoul::mutable_e_facadesoul_list(int index) {
  return e_facadesoul_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoul* Sheet_FacadeSoul::add_e_facadesoul_list() {
  return e_facadesoul_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoul >&
Sheet_FacadeSoul::e_facadesoul_list() const {
  return e_facadesoul_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoul >*
Sheet_FacadeSoul::mutable_e_facadesoul_list() {
  return &e_facadesoul_list_;
}

// -------------------------------------------------------------------

// E_FacadeSoulactiveUnlockDesc

// optional string m_parama = 1;
inline bool E_FacadeSoulactiveUnlockDesc::has_m_parama() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoulactiveUnlockDesc::set_has_m_parama() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoulactiveUnlockDesc::clear_has_m_parama() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoulactiveUnlockDesc::clear_m_parama() {
  if (m_parama_ != &::google::protobuf::internal::kEmptyString) {
    m_parama_->clear();
  }
  clear_has_m_parama();
}
inline const ::std::string& E_FacadeSoulactiveUnlockDesc::m_parama() const {
  return *m_parama_;
}
inline void E_FacadeSoulactiveUnlockDesc::set_m_parama(const ::std::string& value) {
  set_has_m_parama();
  if (m_parama_ == &::google::protobuf::internal::kEmptyString) {
    m_parama_ = new ::std::string;
  }
  m_parama_->assign(value);
}
inline void E_FacadeSoulactiveUnlockDesc::set_m_parama(const char* value) {
  set_has_m_parama();
  if (m_parama_ == &::google::protobuf::internal::kEmptyString) {
    m_parama_ = new ::std::string;
  }
  m_parama_->assign(value);
}
inline void E_FacadeSoulactiveUnlockDesc::set_m_parama(const char* value, size_t size) {
  set_has_m_parama();
  if (m_parama_ == &::google::protobuf::internal::kEmptyString) {
    m_parama_ = new ::std::string;
  }
  m_parama_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FacadeSoulactiveUnlockDesc::mutable_m_parama() {
  set_has_m_parama();
  if (m_parama_ == &::google::protobuf::internal::kEmptyString) {
    m_parama_ = new ::std::string;
  }
  return m_parama_;
}
inline ::std::string* E_FacadeSoulactiveUnlockDesc::release_m_parama() {
  clear_has_m_parama();
  if (m_parama_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_parama_;
    m_parama_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FacadeSoulactiveUnlockDesc::set_allocated_m_parama(::std::string* m_parama) {
  if (m_parama_ != &::google::protobuf::internal::kEmptyString) {
    delete m_parama_;
  }
  if (m_parama) {
    set_has_m_parama();
    m_parama_ = m_parama;
  } else {
    clear_has_m_parama();
    m_parama_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_condition = 2;
inline bool E_FacadeSoulactiveUnlockDesc::has_m_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeSoulactiveUnlockDesc::set_has_m_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeSoulactiveUnlockDesc::clear_has_m_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeSoulactiveUnlockDesc::clear_m_condition() {
  m_condition_ = 0;
  clear_has_m_condition();
}
inline ::google::protobuf::int32 E_FacadeSoulactiveUnlockDesc::m_condition() const {
  return m_condition_;
}
inline void E_FacadeSoulactiveUnlockDesc::set_m_condition(::google::protobuf::int32 value) {
  set_has_m_condition();
  m_condition_ = value;
}

// -------------------------------------------------------------------

// E_FacadeSoulactive

// optional int64 m_id = 1;
inline bool E_FacadeSoulactive::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoulactive::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoulactive::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoulactive::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeSoulactive::m_id() const {
  return m_id_;
}
inline void E_FacadeSoulactive::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// repeated .proto_ff.E_FacadeSoulactiveUnlockDesc m_unlock = 2;
inline int E_FacadeSoulactive::m_unlock_size() const {
  return m_unlock_.size();
}
inline void E_FacadeSoulactive::clear_m_unlock() {
  m_unlock_.Clear();
}
inline const ::proto_ff::E_FacadeSoulactiveUnlockDesc& E_FacadeSoulactive::m_unlock(int index) const {
  return m_unlock_.Get(index);
}
inline ::proto_ff::E_FacadeSoulactiveUnlockDesc* E_FacadeSoulactive::mutable_m_unlock(int index) {
  return m_unlock_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoulactiveUnlockDesc* E_FacadeSoulactive::add_m_unlock() {
  return m_unlock_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactiveUnlockDesc >&
E_FacadeSoulactive::m_unlock() const {
  return m_unlock_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactiveUnlockDesc >*
E_FacadeSoulactive::mutable_m_unlock() {
  return &m_unlock_;
}

// -------------------------------------------------------------------

// Sheet_FacadeSoulactive

// repeated .proto_ff.E_FacadeSoulactive E_FacadeSoulactive_List = 1;
inline int Sheet_FacadeSoulactive::e_facadesoulactive_list_size() const {
  return e_facadesoulactive_list_.size();
}
inline void Sheet_FacadeSoulactive::clear_e_facadesoulactive_list() {
  e_facadesoulactive_list_.Clear();
}
inline const ::proto_ff::E_FacadeSoulactive& Sheet_FacadeSoulactive::e_facadesoulactive_list(int index) const {
  return e_facadesoulactive_list_.Get(index);
}
inline ::proto_ff::E_FacadeSoulactive* Sheet_FacadeSoulactive::mutable_e_facadesoulactive_list(int index) {
  return e_facadesoulactive_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoulactive* Sheet_FacadeSoulactive::add_e_facadesoulactive_list() {
  return e_facadesoulactive_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactive >&
Sheet_FacadeSoulactive::e_facadesoulactive_list() const {
  return e_facadesoulactive_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulactive >*
Sheet_FacadeSoulactive::mutable_e_facadesoulactive_list() {
  return &e_facadesoulactive_list_;
}

// -------------------------------------------------------------------

// E_FacadeSoullvAttributeDesc

// optional int32 m_value = 1;
inline bool E_FacadeSoullvAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoullvAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoullvAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoullvAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_FacadeSoullvAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_FacadeSoullvAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_FacadeSoullvAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeSoullvAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeSoullvAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeSoullvAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeSoullvAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_FacadeSoullvAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_FacadeSoullv

// optional int64 m_id = 1;
inline bool E_FacadeSoullv::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoullv::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoullv::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoullv::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeSoullv::m_id() const {
  return m_id_;
}
inline void E_FacadeSoullv::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_soulllv = 2;
inline bool E_FacadeSoullv::has_m_soulllv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeSoullv::set_has_m_soulllv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeSoullv::clear_has_m_soulllv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeSoullv::clear_m_soulllv() {
  m_soulllv_ = 0;
  clear_has_m_soulllv();
}
inline ::google::protobuf::int32 E_FacadeSoullv::m_soulllv() const {
  return m_soulllv_;
}
inline void E_FacadeSoullv::set_m_soulllv(::google::protobuf::int32 value) {
  set_has_m_soulllv();
  m_soulllv_ = value;
}

// optional int32 m_soulid = 3;
inline bool E_FacadeSoullv::has_m_soulid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeSoullv::set_has_m_soulid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeSoullv::clear_has_m_soulid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeSoullv::clear_m_soulid() {
  m_soulid_ = 0;
  clear_has_m_soulid();
}
inline ::google::protobuf::int32 E_FacadeSoullv::m_soulid() const {
  return m_soulid_;
}
inline void E_FacadeSoullv::set_m_soulid(::google::protobuf::int32 value) {
  set_has_m_soulid();
  m_soulid_ = value;
}

// optional int32 m_itemid = 4;
inline bool E_FacadeSoullv::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeSoullv::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeSoullv::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeSoullv::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_FacadeSoullv::m_itemid() const {
  return m_itemid_;
}
inline void E_FacadeSoullv::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 5;
inline bool E_FacadeSoullv::has_m_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FacadeSoullv::set_has_m_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FacadeSoullv::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FacadeSoullv::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_FacadeSoullv::m_num() const {
  return m_num_;
}
inline void E_FacadeSoullv::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_successrate = 6;
inline bool E_FacadeSoullv::has_m_successrate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_FacadeSoullv::set_has_m_successrate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_FacadeSoullv::clear_has_m_successrate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_FacadeSoullv::clear_m_successrate() {
  m_successrate_ = 0;
  clear_has_m_successrate();
}
inline ::google::protobuf::int32 E_FacadeSoullv::m_successrate() const {
  return m_successrate_;
}
inline void E_FacadeSoullv::set_m_successrate(::google::protobuf::int32 value) {
  set_has_m_successrate();
  m_successrate_ = value;
}

// optional int32 m_downlv = 7;
inline bool E_FacadeSoullv::has_m_downlv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_FacadeSoullv::set_has_m_downlv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_FacadeSoullv::clear_has_m_downlv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_FacadeSoullv::clear_m_downlv() {
  m_downlv_ = 0;
  clear_has_m_downlv();
}
inline ::google::protobuf::int32 E_FacadeSoullv::m_downlv() const {
  return m_downlv_;
}
inline void E_FacadeSoullv::set_m_downlv(::google::protobuf::int32 value) {
  set_has_m_downlv();
  m_downlv_ = value;
}

// repeated .proto_ff.E_FacadeSoullvAttributeDesc m_attribute = 8;
inline int E_FacadeSoullv::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_FacadeSoullv::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_FacadeSoullvAttributeDesc& E_FacadeSoullv::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_FacadeSoullvAttributeDesc* E_FacadeSoullv::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoullvAttributeDesc* E_FacadeSoullv::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullvAttributeDesc >&
E_FacadeSoullv::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullvAttributeDesc >*
E_FacadeSoullv::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_FacadeSoullv

// repeated .proto_ff.E_FacadeSoullv E_FacadeSoullv_List = 1;
inline int Sheet_FacadeSoullv::e_facadesoullv_list_size() const {
  return e_facadesoullv_list_.size();
}
inline void Sheet_FacadeSoullv::clear_e_facadesoullv_list() {
  e_facadesoullv_list_.Clear();
}
inline const ::proto_ff::E_FacadeSoullv& Sheet_FacadeSoullv::e_facadesoullv_list(int index) const {
  return e_facadesoullv_list_.Get(index);
}
inline ::proto_ff::E_FacadeSoullv* Sheet_FacadeSoullv::mutable_e_facadesoullv_list(int index) {
  return e_facadesoullv_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoullv* Sheet_FacadeSoullv::add_e_facadesoullv_list() {
  return e_facadesoullv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullv >&
Sheet_FacadeSoullv::e_facadesoullv_list() const {
  return e_facadesoullv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoullv >*
Sheet_FacadeSoullv::mutable_e_facadesoullv_list() {
  return &e_facadesoullv_list_;
}

// -------------------------------------------------------------------

// E_FacadeSoulachievement

// optional int64 m_id = 1;
inline bool E_FacadeSoulachievement::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FacadeSoulachievement::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FacadeSoulachievement::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FacadeSoulachievement::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FacadeSoulachievement::m_id() const {
  return m_id_;
}
inline void E_FacadeSoulachievement::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_soulid = 2;
inline bool E_FacadeSoulachievement::has_m_soulid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FacadeSoulachievement::set_has_m_soulid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FacadeSoulachievement::clear_has_m_soulid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FacadeSoulachievement::clear_m_soulid() {
  m_soulid_ = 0;
  clear_has_m_soulid();
}
inline ::google::protobuf::int32 E_FacadeSoulachievement::m_soulid() const {
  return m_soulid_;
}
inline void E_FacadeSoulachievement::set_m_soulid(::google::protobuf::int32 value) {
  set_has_m_soulid();
  m_soulid_ = value;
}

// optional int32 m_type = 3;
inline bool E_FacadeSoulachievement::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FacadeSoulachievement::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FacadeSoulachievement::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FacadeSoulachievement::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_FacadeSoulachievement::m_type() const {
  return m_type_;
}
inline void E_FacadeSoulachievement::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_parama = 4;
inline bool E_FacadeSoulachievement::has_m_parama() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FacadeSoulachievement::set_has_m_parama() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FacadeSoulachievement::clear_has_m_parama() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FacadeSoulachievement::clear_m_parama() {
  m_parama_ = 0;
  clear_has_m_parama();
}
inline ::google::protobuf::int32 E_FacadeSoulachievement::m_parama() const {
  return m_parama_;
}
inline void E_FacadeSoulachievement::set_m_parama(::google::protobuf::int32 value) {
  set_has_m_parama();
  m_parama_ = value;
}

// optional int32 m_itemid = 5;
inline bool E_FacadeSoulachievement::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FacadeSoulachievement::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FacadeSoulachievement::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FacadeSoulachievement::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_FacadeSoulachievement::m_itemid() const {
  return m_itemid_;
}
inline void E_FacadeSoulachievement::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 6;
inline bool E_FacadeSoulachievement::has_m_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_FacadeSoulachievement::set_has_m_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_FacadeSoulachievement::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_FacadeSoulachievement::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_FacadeSoulachievement::m_num() const {
  return m_num_;
}
inline void E_FacadeSoulachievement::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// -------------------------------------------------------------------

// Sheet_FacadeSoulachievement

// repeated .proto_ff.E_FacadeSoulachievement E_FacadeSoulachievement_List = 1;
inline int Sheet_FacadeSoulachievement::e_facadesoulachievement_list_size() const {
  return e_facadesoulachievement_list_.size();
}
inline void Sheet_FacadeSoulachievement::clear_e_facadesoulachievement_list() {
  e_facadesoulachievement_list_.Clear();
}
inline const ::proto_ff::E_FacadeSoulachievement& Sheet_FacadeSoulachievement::e_facadesoulachievement_list(int index) const {
  return e_facadesoulachievement_list_.Get(index);
}
inline ::proto_ff::E_FacadeSoulachievement* Sheet_FacadeSoulachievement::mutable_e_facadesoulachievement_list(int index) {
  return e_facadesoulachievement_list_.Mutable(index);
}
inline ::proto_ff::E_FacadeSoulachievement* Sheet_FacadeSoulachievement::add_e_facadesoulachievement_list() {
  return e_facadesoulachievement_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulachievement >&
Sheet_FacadeSoulachievement::e_facadesoulachievement_list() const {
  return e_facadesoulachievement_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FacadeSoulachievement >*
Sheet_FacadeSoulachievement::mutable_e_facadesoulachievement_list() {
  return &e_facadesoulachievement_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fFacade_2eproto__INCLUDED
