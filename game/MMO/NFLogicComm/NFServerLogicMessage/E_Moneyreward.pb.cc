// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Moneyreward.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Moneyreward.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_MoneyrewardMoneyreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MoneyrewardMoneyreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MoneyrewardMoneyreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MoneyrewardMoneyreward_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fMoneyreward_2eproto() {
  protobuf_AddDesc_E_5fMoneyreward_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Moneyreward.proto");
  GOOGLE_CHECK(file != NULL);
  E_MoneyrewardMoneyreward_descriptor_ = file->message_type(0);
  static const int E_MoneyrewardMoneyreward_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_taskreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_boxtaskreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_boxnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_taskmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_oneprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_freeunlocklv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_viplv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_timeget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_timegetmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, m_timego_),
  };
  E_MoneyrewardMoneyreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MoneyrewardMoneyreward_descriptor_,
      E_MoneyrewardMoneyreward::default_instance_,
      E_MoneyrewardMoneyreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MoneyrewardMoneyreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MoneyrewardMoneyreward));
  Sheet_MoneyrewardMoneyreward_descriptor_ = file->message_type(1);
  static const int Sheet_MoneyrewardMoneyreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MoneyrewardMoneyreward, e_moneyrewardmoneyreward_list_),
  };
  Sheet_MoneyrewardMoneyreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MoneyrewardMoneyreward_descriptor_,
      Sheet_MoneyrewardMoneyreward::default_instance_,
      Sheet_MoneyrewardMoneyreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MoneyrewardMoneyreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MoneyrewardMoneyreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MoneyrewardMoneyreward));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fMoneyreward_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MoneyrewardMoneyreward_descriptor_, &E_MoneyrewardMoneyreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MoneyrewardMoneyreward_descriptor_, &Sheet_MoneyrewardMoneyreward::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fMoneyreward_2eproto() {
  delete E_MoneyrewardMoneyreward::default_instance_;
  delete E_MoneyrewardMoneyreward_reflection_;
  delete Sheet_MoneyrewardMoneyreward::default_instance_;
  delete Sheet_MoneyrewardMoneyreward_reflection_;
}

void protobuf_AddDesc_E_5fMoneyreward_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023E_Moneyreward.proto\022\010proto_ff\032\025yd_fiel"
    "doptions.proto\"\311\004\n\030E_MoneyrewardMoneyrew"
    "ard\022,\n\014m_taskreward\030\001 \001(\005B\026\302\377\024\022\344\273\273\345\212\241\345\245\226"
    "\345\212\261\347\261\273\345\236\213\022-\n\017m_boxtaskreward\030\002 \001(\tB\024\302\377\024\014"
    "\345\256\235\347\256\261\345\245\226\345\212\261\220\301\024@\0222\n\010m_boxnum\030\003 \001(\tB \302\377\024\030"
    "\345\256\235\347\256\261\345\245\226\345\212\261\346\254\241\346\225\260\346\235\241\344\273\266\220\301\024@\022)\n\006m_task\030\004"
    " \001(\005B\031\302\377\024\025\346\212\275\345\217\226\347\232\204\344\273\273\345\212\241\347\261\273\345\236\213\0225\n\tm_tas"
    "kmax\030\005 \001(\005B\"\302\377\024\036\344\273\273\345\212\241\344\270\212\351\231\220\357\274\210\346\212\275\345\217\226\346\254\241"
    "\346\225\260\357\274\211\022:\n\nm_oneprice\030\006 \001(\tB&\302\377\024\036\344\270\200\351\224\256\345\256"
    "\214\346\210\220\345\215\225\346\254\241\350\264\247\345\270\201\344\273\267\346\240\274\220\301\024@\022>\n\016m_freeunlo"
    "cklv\030\007 \001(\tB&\302\377\024\036\345\205\215\350\264\271\344\270\200\351\224\256\345\274\200\346\224\276\347\255\211\347\272\247"
    "\345\222\214VIP\220\301\024@\022*\n\007m_viplv\030\010 \001(\005B\031\302\377\024\025\345\217\214\345\200\215\351"
    "\234\200\346\261\202vip\347\255\211\347\272\247\0222\n\tm_timeget\030\t \001(\005B\037\302\377\024\033\346"
    "\216\245\345\217\226\344\273\273\345\212\241\345\200\222\350\256\241\346\227\266\346\227\266\351\227\264\0221\n\016m_timegetm"
    "oney\030\n \001(\005B\031\302\377\024\025\351\242\206\345\217\226\345\200\222\350\256\241\346\227\266\346\227\266\351\227\264\022+\n"
    "\010m_timego\030\013 \001(\005B\031\302\377\024\025\345\211\215\345\276\200\345\200\222\350\256\241\346\227\266\346\227\266\351"
    "\227\264\"o\n\034Sheet_MoneyrewardMoneyreward\022O\n\035E_"
    "MoneyrewardMoneyreward_List\030\001 \003(\0132\".prot"
    "o_ff.E_MoneyrewardMoneyrewardB\004\210\301\024\004", 755);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Moneyreward.proto", &protobuf_RegisterTypes);
  E_MoneyrewardMoneyreward::default_instance_ = new E_MoneyrewardMoneyreward();
  Sheet_MoneyrewardMoneyreward::default_instance_ = new Sheet_MoneyrewardMoneyreward();
  E_MoneyrewardMoneyreward::default_instance_->InitAsDefaultInstance();
  Sheet_MoneyrewardMoneyreward::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fMoneyreward_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fMoneyreward_2eproto {
  StaticDescriptorInitializer_E_5fMoneyreward_2eproto() {
    protobuf_AddDesc_E_5fMoneyreward_2eproto();
  }
} static_descriptor_initializer_E_5fMoneyreward_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_MoneyrewardMoneyreward::kMTaskrewardFieldNumber;
const int E_MoneyrewardMoneyreward::kMBoxtaskrewardFieldNumber;
const int E_MoneyrewardMoneyreward::kMBoxnumFieldNumber;
const int E_MoneyrewardMoneyreward::kMTaskFieldNumber;
const int E_MoneyrewardMoneyreward::kMTaskmaxFieldNumber;
const int E_MoneyrewardMoneyreward::kMOnepriceFieldNumber;
const int E_MoneyrewardMoneyreward::kMFreeunlocklvFieldNumber;
const int E_MoneyrewardMoneyreward::kMViplvFieldNumber;
const int E_MoneyrewardMoneyreward::kMTimegetFieldNumber;
const int E_MoneyrewardMoneyreward::kMTimegetmoneyFieldNumber;
const int E_MoneyrewardMoneyreward::kMTimegoFieldNumber;
#endif  // !_MSC_VER

E_MoneyrewardMoneyreward::E_MoneyrewardMoneyreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MoneyrewardMoneyreward::InitAsDefaultInstance() {
}

E_MoneyrewardMoneyreward::E_MoneyrewardMoneyreward(const E_MoneyrewardMoneyreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MoneyrewardMoneyreward::SharedCtor() {
  _cached_size_ = 0;
  m_taskreward_ = 0;
  m_boxtaskreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_boxnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_task_ = 0;
  m_taskmax_ = 0;
  m_oneprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_freeunlocklv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_viplv_ = 0;
  m_timeget_ = 0;
  m_timegetmoney_ = 0;
  m_timego_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MoneyrewardMoneyreward::~E_MoneyrewardMoneyreward() {
  SharedDtor();
}

void E_MoneyrewardMoneyreward::SharedDtor() {
  if (m_boxtaskreward_ != &::google::protobuf::internal::kEmptyString) {
    delete m_boxtaskreward_;
  }
  if (m_boxnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_boxnum_;
  }
  if (m_oneprice_ != &::google::protobuf::internal::kEmptyString) {
    delete m_oneprice_;
  }
  if (m_freeunlocklv_ != &::google::protobuf::internal::kEmptyString) {
    delete m_freeunlocklv_;
  }
  if (this != default_instance_) {
  }
}

void E_MoneyrewardMoneyreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MoneyrewardMoneyreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MoneyrewardMoneyreward_descriptor_;
}

const E_MoneyrewardMoneyreward& E_MoneyrewardMoneyreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMoneyreward_2eproto();
  return *default_instance_;
}

E_MoneyrewardMoneyreward* E_MoneyrewardMoneyreward::default_instance_ = NULL;

E_MoneyrewardMoneyreward* E_MoneyrewardMoneyreward::New() const {
  return new E_MoneyrewardMoneyreward;
}

void E_MoneyrewardMoneyreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_taskreward_ = 0;
    if (has_m_boxtaskreward()) {
      if (m_boxtaskreward_ != &::google::protobuf::internal::kEmptyString) {
        m_boxtaskreward_->clear();
      }
    }
    if (has_m_boxnum()) {
      if (m_boxnum_ != &::google::protobuf::internal::kEmptyString) {
        m_boxnum_->clear();
      }
    }
    m_task_ = 0;
    m_taskmax_ = 0;
    if (has_m_oneprice()) {
      if (m_oneprice_ != &::google::protobuf::internal::kEmptyString) {
        m_oneprice_->clear();
      }
    }
    if (has_m_freeunlocklv()) {
      if (m_freeunlocklv_ != &::google::protobuf::internal::kEmptyString) {
        m_freeunlocklv_->clear();
      }
    }
    m_viplv_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_timeget_ = 0;
    m_timegetmoney_ = 0;
    m_timego_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MoneyrewardMoneyreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_taskreward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_taskreward_)));
          set_has_m_taskreward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_boxtaskreward;
        break;
      }

      // optional string m_boxtaskreward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_boxtaskreward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_boxtaskreward()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_boxtaskreward().data(), this->m_boxtaskreward().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_boxnum;
        break;
      }

      // optional string m_boxnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_boxnum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_boxnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_boxnum().data(), this->m_boxnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_task;
        break;
      }

      // optional int32 m_task = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_task:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_task_)));
          set_has_m_task();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_taskmax;
        break;
      }

      // optional int32 m_taskmax = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_taskmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_taskmax_)));
          set_has_m_taskmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_oneprice;
        break;
      }

      // optional string m_oneprice = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_oneprice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_oneprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_oneprice().data(), this->m_oneprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_freeunlocklv;
        break;
      }

      // optional string m_freeunlocklv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_freeunlocklv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_freeunlocklv()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_freeunlocklv().data(), this->m_freeunlocklv().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_viplv;
        break;
      }

      // optional int32 m_viplv = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_viplv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_viplv_)));
          set_has_m_viplv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_timeget;
        break;
      }

      // optional int32 m_timeget = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_timeget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_timeget_)));
          set_has_m_timeget();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_timegetmoney;
        break;
      }

      // optional int32 m_timegetmoney = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_timegetmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_timegetmoney_)));
          set_has_m_timegetmoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_timego;
        break;
      }

      // optional int32 m_timego = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_timego:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_timego_)));
          set_has_m_timego();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MoneyrewardMoneyreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_taskreward = 1;
  if (has_m_taskreward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_taskreward(), output);
  }

  // optional string m_boxtaskreward = 2;
  if (has_m_boxtaskreward()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_boxtaskreward().data(), this->m_boxtaskreward().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_boxtaskreward(), output);
  }

  // optional string m_boxnum = 3;
  if (has_m_boxnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_boxnum().data(), this->m_boxnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_boxnum(), output);
  }

  // optional int32 m_task = 4;
  if (has_m_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_task(), output);
  }

  // optional int32 m_taskmax = 5;
  if (has_m_taskmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_taskmax(), output);
  }

  // optional string m_oneprice = 6;
  if (has_m_oneprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_oneprice().data(), this->m_oneprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_oneprice(), output);
  }

  // optional string m_freeunlocklv = 7;
  if (has_m_freeunlocklv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_freeunlocklv().data(), this->m_freeunlocklv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_freeunlocklv(), output);
  }

  // optional int32 m_viplv = 8;
  if (has_m_viplv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_viplv(), output);
  }

  // optional int32 m_timeget = 9;
  if (has_m_timeget()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_timeget(), output);
  }

  // optional int32 m_timegetmoney = 10;
  if (has_m_timegetmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_timegetmoney(), output);
  }

  // optional int32 m_timego = 11;
  if (has_m_timego()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_timego(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MoneyrewardMoneyreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_taskreward = 1;
  if (has_m_taskreward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_taskreward(), target);
  }

  // optional string m_boxtaskreward = 2;
  if (has_m_boxtaskreward()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_boxtaskreward().data(), this->m_boxtaskreward().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_boxtaskreward(), target);
  }

  // optional string m_boxnum = 3;
  if (has_m_boxnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_boxnum().data(), this->m_boxnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_boxnum(), target);
  }

  // optional int32 m_task = 4;
  if (has_m_task()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_task(), target);
  }

  // optional int32 m_taskmax = 5;
  if (has_m_taskmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_taskmax(), target);
  }

  // optional string m_oneprice = 6;
  if (has_m_oneprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_oneprice().data(), this->m_oneprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_oneprice(), target);
  }

  // optional string m_freeunlocklv = 7;
  if (has_m_freeunlocklv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_freeunlocklv().data(), this->m_freeunlocklv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_freeunlocklv(), target);
  }

  // optional int32 m_viplv = 8;
  if (has_m_viplv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_viplv(), target);
  }

  // optional int32 m_timeget = 9;
  if (has_m_timeget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_timeget(), target);
  }

  // optional int32 m_timegetmoney = 10;
  if (has_m_timegetmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_timegetmoney(), target);
  }

  // optional int32 m_timego = 11;
  if (has_m_timego()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_timego(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MoneyrewardMoneyreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_taskreward = 1;
    if (has_m_taskreward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_taskreward());
    }

    // optional string m_boxtaskreward = 2;
    if (has_m_boxtaskreward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_boxtaskreward());
    }

    // optional string m_boxnum = 3;
    if (has_m_boxnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_boxnum());
    }

    // optional int32 m_task = 4;
    if (has_m_task()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_task());
    }

    // optional int32 m_taskmax = 5;
    if (has_m_taskmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_taskmax());
    }

    // optional string m_oneprice = 6;
    if (has_m_oneprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_oneprice());
    }

    // optional string m_freeunlocklv = 7;
    if (has_m_freeunlocklv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_freeunlocklv());
    }

    // optional int32 m_viplv = 8;
    if (has_m_viplv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_viplv());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_timeget = 9;
    if (has_m_timeget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_timeget());
    }

    // optional int32 m_timegetmoney = 10;
    if (has_m_timegetmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_timegetmoney());
    }

    // optional int32 m_timego = 11;
    if (has_m_timego()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_timego());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MoneyrewardMoneyreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MoneyrewardMoneyreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MoneyrewardMoneyreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MoneyrewardMoneyreward::MergeFrom(const E_MoneyrewardMoneyreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_taskreward()) {
      set_m_taskreward(from.m_taskreward());
    }
    if (from.has_m_boxtaskreward()) {
      set_m_boxtaskreward(from.m_boxtaskreward());
    }
    if (from.has_m_boxnum()) {
      set_m_boxnum(from.m_boxnum());
    }
    if (from.has_m_task()) {
      set_m_task(from.m_task());
    }
    if (from.has_m_taskmax()) {
      set_m_taskmax(from.m_taskmax());
    }
    if (from.has_m_oneprice()) {
      set_m_oneprice(from.m_oneprice());
    }
    if (from.has_m_freeunlocklv()) {
      set_m_freeunlocklv(from.m_freeunlocklv());
    }
    if (from.has_m_viplv()) {
      set_m_viplv(from.m_viplv());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_timeget()) {
      set_m_timeget(from.m_timeget());
    }
    if (from.has_m_timegetmoney()) {
      set_m_timegetmoney(from.m_timegetmoney());
    }
    if (from.has_m_timego()) {
      set_m_timego(from.m_timego());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MoneyrewardMoneyreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MoneyrewardMoneyreward::CopyFrom(const E_MoneyrewardMoneyreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MoneyrewardMoneyreward::IsInitialized() const {

  return true;
}

void E_MoneyrewardMoneyreward::Swap(E_MoneyrewardMoneyreward* other) {
  if (other != this) {
    std::swap(m_taskreward_, other->m_taskreward_);
    std::swap(m_boxtaskreward_, other->m_boxtaskreward_);
    std::swap(m_boxnum_, other->m_boxnum_);
    std::swap(m_task_, other->m_task_);
    std::swap(m_taskmax_, other->m_taskmax_);
    std::swap(m_oneprice_, other->m_oneprice_);
    std::swap(m_freeunlocklv_, other->m_freeunlocklv_);
    std::swap(m_viplv_, other->m_viplv_);
    std::swap(m_timeget_, other->m_timeget_);
    std::swap(m_timegetmoney_, other->m_timegetmoney_);
    std::swap(m_timego_, other->m_timego_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MoneyrewardMoneyreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MoneyrewardMoneyreward_descriptor_;
  metadata.reflection = E_MoneyrewardMoneyreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MoneyrewardMoneyreward::kEMoneyrewardMoneyrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_MoneyrewardMoneyreward::Sheet_MoneyrewardMoneyreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MoneyrewardMoneyreward::InitAsDefaultInstance() {
}

Sheet_MoneyrewardMoneyreward::Sheet_MoneyrewardMoneyreward(const Sheet_MoneyrewardMoneyreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MoneyrewardMoneyreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MoneyrewardMoneyreward::~Sheet_MoneyrewardMoneyreward() {
  SharedDtor();
}

void Sheet_MoneyrewardMoneyreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MoneyrewardMoneyreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MoneyrewardMoneyreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MoneyrewardMoneyreward_descriptor_;
}

const Sheet_MoneyrewardMoneyreward& Sheet_MoneyrewardMoneyreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMoneyreward_2eproto();
  return *default_instance_;
}

Sheet_MoneyrewardMoneyreward* Sheet_MoneyrewardMoneyreward::default_instance_ = NULL;

Sheet_MoneyrewardMoneyreward* Sheet_MoneyrewardMoneyreward::New() const {
  return new Sheet_MoneyrewardMoneyreward;
}

void Sheet_MoneyrewardMoneyreward::Clear() {
  e_moneyrewardmoneyreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MoneyrewardMoneyreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MoneyrewardMoneyreward E_MoneyrewardMoneyreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MoneyrewardMoneyreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_moneyrewardmoneyreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MoneyrewardMoneyreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MoneyrewardMoneyreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MoneyrewardMoneyreward E_MoneyrewardMoneyreward_List = 1;
  for (int i = 0; i < this->e_moneyrewardmoneyreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_moneyrewardmoneyreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MoneyrewardMoneyreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MoneyrewardMoneyreward E_MoneyrewardMoneyreward_List = 1;
  for (int i = 0; i < this->e_moneyrewardmoneyreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_moneyrewardmoneyreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MoneyrewardMoneyreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MoneyrewardMoneyreward E_MoneyrewardMoneyreward_List = 1;
  total_size += 1 * this->e_moneyrewardmoneyreward_list_size();
  for (int i = 0; i < this->e_moneyrewardmoneyreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_moneyrewardmoneyreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MoneyrewardMoneyreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MoneyrewardMoneyreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MoneyrewardMoneyreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MoneyrewardMoneyreward::MergeFrom(const Sheet_MoneyrewardMoneyreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_moneyrewardmoneyreward_list_.MergeFrom(from.e_moneyrewardmoneyreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MoneyrewardMoneyreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MoneyrewardMoneyreward::CopyFrom(const Sheet_MoneyrewardMoneyreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MoneyrewardMoneyreward::IsInitialized() const {

  return true;
}

void Sheet_MoneyrewardMoneyreward::Swap(Sheet_MoneyrewardMoneyreward* other) {
  if (other != this) {
    e_moneyrewardmoneyreward_list_.Swap(&other->e_moneyrewardmoneyreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MoneyrewardMoneyreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MoneyrewardMoneyreward_descriptor_;
  metadata.reflection = Sheet_MoneyrewardMoneyreward_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
