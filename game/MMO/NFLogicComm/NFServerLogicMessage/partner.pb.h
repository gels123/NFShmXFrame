// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner.proto

#ifndef PROTOBUF_partner_2eproto__INCLUDED
#define PROTOBUF_partner_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_partner_2eproto();
void protobuf_AssignDesc_partner_2eproto();
void protobuf_ShutdownFile_partner_2eproto();

class partnerpartnerattributeDesc;
class partnerpartner;
class Sheet_partnerpartner;
class partnerchangeattributeDesc;
class partnerchange;
class Sheet_partnerchange;
class partnerstarUpupAttributeDesc;
class partnerstarUp;
class Sheet_partnerstarUp;
class partnerfragmentattributeDesc;
class partnerfragment;
class Sheet_partnerfragment;
class partnerattributeattributeDesc;
class partnerattribute;
class Sheet_partnerattribute;
class partnerexp;
class Sheet_partnerexp;
class partnerequipattributeDesc;
class partnerequip;
class Sheet_partnerequip;
class partnerrefine;
class Sheet_partnerrefine;
class partnerslot;
class Sheet_partnerslot;

// ===================================================================

class partnerpartnerattributeDesc : public ::google::protobuf::Message {
 public:
  partnerpartnerattributeDesc();
  virtual ~partnerpartnerattributeDesc();

  partnerpartnerattributeDesc(const partnerpartnerattributeDesc& from);

  inline partnerpartnerattributeDesc& operator=(const partnerpartnerattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerpartnerattributeDesc& default_instance();

  void Swap(partnerpartnerattributeDesc* other);

  // implements Message ----------------------------------------------

  partnerpartnerattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerpartnerattributeDesc& from);
  void MergeFrom(const partnerpartnerattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerpartnerattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerpartnerattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class partnerpartner : public ::google::protobuf::Message {
 public:
  partnerpartner();
  virtual ~partnerpartner();

  partnerpartner(const partnerpartner& from);

  inline partnerpartner& operator=(const partnerpartner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerpartner& default_instance();

  void Swap(partnerpartner* other);

  // implements Message ----------------------------------------------

  partnerpartner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerpartner& from);
  void MergeFrom(const partnerpartner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string activeDesc = 4;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 4;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional string partnerSkill = 5;
  inline bool has_partnerskill() const;
  inline void clear_partnerskill();
  static const int kPartnerSkillFieldNumber = 5;
  inline const ::std::string& partnerskill() const;
  inline void set_partnerskill(const ::std::string& value);
  inline void set_partnerskill(const char* value);
  inline void set_partnerskill(const char* value, size_t size);
  inline ::std::string* mutable_partnerskill();
  inline ::std::string* release_partnerskill();
  inline void set_allocated_partnerskill(::std::string* partnerskill);

  // optional int32 realLevel = 6;
  inline bool has_reallevel() const;
  inline void clear_reallevel();
  static const int kRealLevelFieldNumber = 6;
  inline ::google::protobuf::int32 reallevel() const;
  inline void set_reallevel(::google::protobuf::int32 value);

  // optional int64 materialID = 7;
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialIDFieldNumber = 7;
  inline ::google::protobuf::int64 materialid() const;
  inline void set_materialid(::google::protobuf::int64 value);

  // optional int32 materialEXP = 8;
  inline bool has_materialexp() const;
  inline void clear_materialexp();
  static const int kMaterialEXPFieldNumber = 8;
  inline ::google::protobuf::int32 materialexp() const;
  inline void set_materialexp(::google::protobuf::int32 value);

  // optional int32 exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int64 BreakMaterialID = 10;
  inline bool has_breakmaterialid() const;
  inline void clear_breakmaterialid();
  static const int kBreakMaterialIDFieldNumber = 10;
  inline ::google::protobuf::int64 breakmaterialid() const;
  inline void set_breakmaterialid(::google::protobuf::int64 value);

  // optional int32 BreakMaterialCost = 11;
  inline bool has_breakmaterialcost() const;
  inline void clear_breakmaterialcost();
  static const int kBreakMaterialCostFieldNumber = 11;
  inline ::google::protobuf::int32 breakmaterialcost() const;
  inline void set_breakmaterialcost(::google::protobuf::int32 value);

  // optional int64 skillID = 12;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 12;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // optional int64 aiId = 13;
  inline bool has_aiid() const;
  inline void clear_aiid();
  static const int kAiIdFieldNumber = 13;
  inline ::google::protobuf::int64 aiid() const;
  inline void set_aiid(::google::protobuf::int64 value);

  // repeated .proto_ff.partnerpartnerattributeDesc attribute = 14;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 14;
  inline const ::proto_ff::partnerpartnerattributeDesc& attribute(int index) const;
  inline ::proto_ff::partnerpartnerattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::partnerpartnerattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartnerattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartnerattributeDesc >*
      mutable_attribute();

  // repeated int64 fragmentID = 15;
  inline int fragmentid_size() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 15;
  inline ::google::protobuf::int64 fragmentid(int index) const;
  inline void set_fragmentid(int index, ::google::protobuf::int64 value);
  inline void add_fragmentid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      fragmentid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_fragmentid();

  // @@protoc_insertion_point(class_scope:proto_ff.partnerpartner)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_partnerskill();
  inline void clear_has_partnerskill();
  inline void set_has_reallevel();
  inline void clear_has_reallevel();
  inline void set_has_materialid();
  inline void clear_has_materialid();
  inline void set_has_materialexp();
  inline void clear_has_materialexp();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_breakmaterialid();
  inline void clear_has_breakmaterialid();
  inline void set_has_breakmaterialcost();
  inline void clear_has_breakmaterialcost();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_aiid();
  inline void clear_has_aiid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::std::string* name_;
  ::std::string* activedesc_;
  ::std::string* partnerskill_;
  ::google::protobuf::int64 materialid_;
  ::google::protobuf::int32 reallevel_;
  ::google::protobuf::int32 materialexp_;
  ::google::protobuf::int64 breakmaterialid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 breakmaterialcost_;
  ::google::protobuf::int64 skillid_;
  ::google::protobuf::int64 aiid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartnerattributeDesc > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > fragmentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerpartner* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerpartner : public ::google::protobuf::Message {
 public:
  Sheet_partnerpartner();
  virtual ~Sheet_partnerpartner();

  Sheet_partnerpartner(const Sheet_partnerpartner& from);

  inline Sheet_partnerpartner& operator=(const Sheet_partnerpartner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerpartner& default_instance();

  void Swap(Sheet_partnerpartner* other);

  // implements Message ----------------------------------------------

  Sheet_partnerpartner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerpartner& from);
  void MergeFrom(const Sheet_partnerpartner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerpartner partnerpartner_List = 1;
  inline int partnerpartner_list_size() const;
  inline void clear_partnerpartner_list();
  static const int kPartnerpartnerListFieldNumber = 1;
  inline const ::proto_ff::partnerpartner& partnerpartner_list(int index) const;
  inline ::proto_ff::partnerpartner* mutable_partnerpartner_list(int index);
  inline ::proto_ff::partnerpartner* add_partnerpartner_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartner >&
      partnerpartner_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartner >*
      mutable_partnerpartner_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerpartner)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartner > partnerpartner_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerpartner* default_instance_;
};
// -------------------------------------------------------------------

class partnerchangeattributeDesc : public ::google::protobuf::Message {
 public:
  partnerchangeattributeDesc();
  virtual ~partnerchangeattributeDesc();

  partnerchangeattributeDesc(const partnerchangeattributeDesc& from);

  inline partnerchangeattributeDesc& operator=(const partnerchangeattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerchangeattributeDesc& default_instance();

  void Swap(partnerchangeattributeDesc* other);

  // implements Message ----------------------------------------------

  partnerchangeattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerchangeattributeDesc& from);
  void MergeFrom(const partnerchangeattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerchangeattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerchangeattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class partnerchange : public ::google::protobuf::Message {
 public:
  partnerchange();
  virtual ~partnerchange();

  partnerchange(const partnerchange& from);

  inline partnerchange& operator=(const partnerchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerchange& default_instance();

  void Swap(partnerchange* other);

  // implements Message ----------------------------------------------

  partnerchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerchange& from);
  void MergeFrom(const partnerchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string activeDesc = 4;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 4;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int64 starId = 6;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIdFieldNumber = 6;
  inline ::google::protobuf::int64 starid() const;
  inline void set_starid(::google::protobuf::int64 value);

  // optional string starNum = 7;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 7;
  inline const ::std::string& starnum() const;
  inline void set_starnum(const ::std::string& value);
  inline void set_starnum(const char* value);
  inline void set_starnum(const char* value, size_t size);
  inline ::std::string* mutable_starnum();
  inline ::std::string* release_starnum();
  inline void set_allocated_starnum(::std::string* starnum);

  // optional int32 starUp = 8;
  inline bool has_starup() const;
  inline void clear_starup();
  static const int kStarUpFieldNumber = 8;
  inline ::google::protobuf::int32 starup() const;
  inline void set_starup(::google::protobuf::int32 value);

  // optional string partnerSkill = 9;
  inline bool has_partnerskill() const;
  inline void clear_partnerskill();
  static const int kPartnerSkillFieldNumber = 9;
  inline const ::std::string& partnerskill() const;
  inline void set_partnerskill(const ::std::string& value);
  inline void set_partnerskill(const char* value);
  inline void set_partnerskill(const char* value, size_t size);
  inline ::std::string* mutable_partnerskill();
  inline ::std::string* release_partnerskill();
  inline void set_allocated_partnerskill(::std::string* partnerskill);

  // optional int32 starBer = 10;
  inline bool has_starber() const;
  inline void clear_starber();
  static const int kStarBerFieldNumber = 10;
  inline ::google::protobuf::int32 starber() const;
  inline void set_starber(::google::protobuf::int32 value);

  // optional int64 occupation = 11;
  inline bool has_occupation() const;
  inline void clear_occupation();
  static const int kOccupationFieldNumber = 11;
  inline ::google::protobuf::int64 occupation() const;
  inline void set_occupation(::google::protobuf::int64 value);

  // optional int64 aiId = 12;
  inline bool has_aiid() const;
  inline void clear_aiid();
  static const int kAiIdFieldNumber = 12;
  inline ::google::protobuf::int64 aiid() const;
  inline void set_aiid(::google::protobuf::int64 value);

  // optional int64 upAttributeId = 13;
  inline bool has_upattributeid() const;
  inline void clear_upattributeid();
  static const int kUpAttributeIdFieldNumber = 13;
  inline ::google::protobuf::int64 upattributeid() const;
  inline void set_upattributeid(::google::protobuf::int64 value);

  // repeated .proto_ff.partnerchangeattributeDesc attribute = 14;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 14;
  inline const ::proto_ff::partnerchangeattributeDesc& attribute(int index) const;
  inline ::proto_ff::partnerchangeattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::partnerchangeattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchangeattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchangeattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.partnerchange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_starup();
  inline void clear_has_starup();
  inline void set_has_partnerskill();
  inline void clear_has_partnerskill();
  inline void set_has_starber();
  inline void clear_has_starber();
  inline void set_has_occupation();
  inline void clear_has_occupation();
  inline void set_has_aiid();
  inline void clear_has_aiid();
  inline void set_has_upattributeid();
  inline void clear_has_upattributeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::std::string* name_;
  ::std::string* activedesc_;
  ::google::protobuf::int64 starid_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 starup_;
  ::std::string* starnum_;
  ::std::string* partnerskill_;
  ::google::protobuf::int64 occupation_;
  ::google::protobuf::int64 aiid_;
  ::google::protobuf::int64 upattributeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchangeattributeDesc > attribute_;
  ::google::protobuf::int32 starber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerchange* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerchange : public ::google::protobuf::Message {
 public:
  Sheet_partnerchange();
  virtual ~Sheet_partnerchange();

  Sheet_partnerchange(const Sheet_partnerchange& from);

  inline Sheet_partnerchange& operator=(const Sheet_partnerchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerchange& default_instance();

  void Swap(Sheet_partnerchange* other);

  // implements Message ----------------------------------------------

  Sheet_partnerchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerchange& from);
  void MergeFrom(const Sheet_partnerchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerchange partnerchange_List = 1;
  inline int partnerchange_list_size() const;
  inline void clear_partnerchange_list();
  static const int kPartnerchangeListFieldNumber = 1;
  inline const ::proto_ff::partnerchange& partnerchange_list(int index) const;
  inline ::proto_ff::partnerchange* mutable_partnerchange_list(int index);
  inline ::proto_ff::partnerchange* add_partnerchange_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchange >&
      partnerchange_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchange >*
      mutable_partnerchange_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerchange)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchange > partnerchange_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerchange* default_instance_;
};
// -------------------------------------------------------------------

class partnerstarUpupAttributeDesc : public ::google::protobuf::Message {
 public:
  partnerstarUpupAttributeDesc();
  virtual ~partnerstarUpupAttributeDesc();

  partnerstarUpupAttributeDesc(const partnerstarUpupAttributeDesc& from);

  inline partnerstarUpupAttributeDesc& operator=(const partnerstarUpupAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerstarUpupAttributeDesc& default_instance();

  void Swap(partnerstarUpupAttributeDesc* other);

  // implements Message ----------------------------------------------

  partnerstarUpupAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerstarUpupAttributeDesc& from);
  void MergeFrom(const partnerstarUpupAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerstarUpupAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerstarUpupAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class partnerstarUp : public ::google::protobuf::Message {
 public:
  partnerstarUp();
  virtual ~partnerstarUp();

  partnerstarUp(const partnerstarUp& from);

  inline partnerstarUp& operator=(const partnerstarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerstarUp& default_instance();

  void Swap(partnerstarUp* other);

  // implements Message ----------------------------------------------

  partnerstarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerstarUp& from);
  void MergeFrom(const partnerstarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 upAttributeId = 2;
  inline bool has_upattributeid() const;
  inline void clear_upattributeid();
  static const int kUpAttributeIdFieldNumber = 2;
  inline ::google::protobuf::int64 upattributeid() const;
  inline void set_upattributeid(::google::protobuf::int64 value);

  // optional int32 starID = 3;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIDFieldNumber = 3;
  inline ::google::protobuf::int32 starid() const;
  inline void set_starid(::google::protobuf::int32 value);

  // repeated .proto_ff.partnerstarUpupAttributeDesc upAttribute = 4;
  inline int upattribute_size() const;
  inline void clear_upattribute();
  static const int kUpAttributeFieldNumber = 4;
  inline const ::proto_ff::partnerstarUpupAttributeDesc& upattribute(int index) const;
  inline ::proto_ff::partnerstarUpupAttributeDesc* mutable_upattribute(int index);
  inline ::proto_ff::partnerstarUpupAttributeDesc* add_upattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUpupAttributeDesc >&
      upattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUpupAttributeDesc >*
      mutable_upattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.partnerstarUp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_upattributeid();
  inline void clear_has_upattributeid();
  inline void set_has_starid();
  inline void clear_has_starid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 upattributeid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 starid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUpupAttributeDesc > upattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerstarUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerstarUp : public ::google::protobuf::Message {
 public:
  Sheet_partnerstarUp();
  virtual ~Sheet_partnerstarUp();

  Sheet_partnerstarUp(const Sheet_partnerstarUp& from);

  inline Sheet_partnerstarUp& operator=(const Sheet_partnerstarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerstarUp& default_instance();

  void Swap(Sheet_partnerstarUp* other);

  // implements Message ----------------------------------------------

  Sheet_partnerstarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerstarUp& from);
  void MergeFrom(const Sheet_partnerstarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerstarUp partnerstarUp_List = 1;
  inline int partnerstarup_list_size() const;
  inline void clear_partnerstarup_list();
  static const int kPartnerstarUpListFieldNumber = 1;
  inline const ::proto_ff::partnerstarUp& partnerstarup_list(int index) const;
  inline ::proto_ff::partnerstarUp* mutable_partnerstarup_list(int index);
  inline ::proto_ff::partnerstarUp* add_partnerstarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUp >&
      partnerstarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUp >*
      mutable_partnerstarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerstarUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUp > partnerstarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerstarUp* default_instance_;
};
// -------------------------------------------------------------------

class partnerfragmentattributeDesc : public ::google::protobuf::Message {
 public:
  partnerfragmentattributeDesc();
  virtual ~partnerfragmentattributeDesc();

  partnerfragmentattributeDesc(const partnerfragmentattributeDesc& from);

  inline partnerfragmentattributeDesc& operator=(const partnerfragmentattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerfragmentattributeDesc& default_instance();

  void Swap(partnerfragmentattributeDesc* other);

  // implements Message ----------------------------------------------

  partnerfragmentattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerfragmentattributeDesc& from);
  void MergeFrom(const partnerfragmentattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerfragmentattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerfragmentattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class partnerfragment : public ::google::protobuf::Message {
 public:
  partnerfragment();
  virtual ~partnerfragment();

  partnerfragment(const partnerfragment& from);

  inline partnerfragment& operator=(const partnerfragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerfragment& default_instance();

  void Swap(partnerfragment* other);

  // implements Message ----------------------------------------------

  partnerfragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerfragment& from);
  void MergeFrom(const partnerfragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fragmentID = 1;
  inline bool has_fragmentid() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 1;
  inline ::google::protobuf::int64 fragmentid() const;
  inline void set_fragmentid(::google::protobuf::int64 value);

  // optional int64 item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::int64 item() const;
  inline void set_item(::google::protobuf::int64 value);

  // optional int32 itemNum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // repeated .proto_ff.partnerfragmentattributeDesc attribute = 4;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 4;
  inline const ::proto_ff::partnerfragmentattributeDesc& attribute(int index) const;
  inline ::proto_ff::partnerfragmentattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::partnerfragmentattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragmentattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragmentattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.partnerfragment)
 private:
  inline void set_has_fragmentid();
  inline void clear_has_fragmentid();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 fragmentid_;
  ::google::protobuf::int64 item_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragmentattributeDesc > attribute_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerfragment* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerfragment : public ::google::protobuf::Message {
 public:
  Sheet_partnerfragment();
  virtual ~Sheet_partnerfragment();

  Sheet_partnerfragment(const Sheet_partnerfragment& from);

  inline Sheet_partnerfragment& operator=(const Sheet_partnerfragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerfragment& default_instance();

  void Swap(Sheet_partnerfragment* other);

  // implements Message ----------------------------------------------

  Sheet_partnerfragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerfragment& from);
  void MergeFrom(const Sheet_partnerfragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerfragment partnerfragment_List = 1;
  inline int partnerfragment_list_size() const;
  inline void clear_partnerfragment_list();
  static const int kPartnerfragmentListFieldNumber = 1;
  inline const ::proto_ff::partnerfragment& partnerfragment_list(int index) const;
  inline ::proto_ff::partnerfragment* mutable_partnerfragment_list(int index);
  inline ::proto_ff::partnerfragment* add_partnerfragment_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragment >&
      partnerfragment_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragment >*
      mutable_partnerfragment_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerfragment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragment > partnerfragment_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerfragment* default_instance_;
};
// -------------------------------------------------------------------

class partnerattributeattributeDesc : public ::google::protobuf::Message {
 public:
  partnerattributeattributeDesc();
  virtual ~partnerattributeattributeDesc();

  partnerattributeattributeDesc(const partnerattributeattributeDesc& from);

  inline partnerattributeattributeDesc& operator=(const partnerattributeattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerattributeattributeDesc& default_instance();

  void Swap(partnerattributeattributeDesc* other);

  // implements Message ----------------------------------------------

  partnerattributeattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerattributeattributeDesc& from);
  void MergeFrom(const partnerattributeattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerattributeattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerattributeattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class partnerattribute : public ::google::protobuf::Message {
 public:
  partnerattribute();
  virtual ~partnerattribute();

  partnerattribute(const partnerattribute& from);

  inline partnerattribute& operator=(const partnerattribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerattribute& default_instance();

  void Swap(partnerattribute* other);

  // implements Message ----------------------------------------------

  partnerattribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerattribute& from);
  void MergeFrom(const partnerattribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // repeated .proto_ff.partnerattributeattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::partnerattributeattributeDesc& attribute(int index) const;
  inline ::proto_ff::partnerattributeattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::partnerattributeattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattributeattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattributeattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.partnerattribute)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattributeattributeDesc > attribute_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerattribute* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerattribute : public ::google::protobuf::Message {
 public:
  Sheet_partnerattribute();
  virtual ~Sheet_partnerattribute();

  Sheet_partnerattribute(const Sheet_partnerattribute& from);

  inline Sheet_partnerattribute& operator=(const Sheet_partnerattribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerattribute& default_instance();

  void Swap(Sheet_partnerattribute* other);

  // implements Message ----------------------------------------------

  Sheet_partnerattribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerattribute& from);
  void MergeFrom(const Sheet_partnerattribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerattribute partnerattribute_List = 1;
  inline int partnerattribute_list_size() const;
  inline void clear_partnerattribute_list();
  static const int kPartnerattributeListFieldNumber = 1;
  inline const ::proto_ff::partnerattribute& partnerattribute_list(int index) const;
  inline ::proto_ff::partnerattribute* mutable_partnerattribute_list(int index);
  inline ::proto_ff::partnerattribute* add_partnerattribute_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattribute >&
      partnerattribute_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattribute >*
      mutable_partnerattribute_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerattribute)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattribute > partnerattribute_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerattribute* default_instance_;
};
// -------------------------------------------------------------------

class partnerexp : public ::google::protobuf::Message {
 public:
  partnerexp();
  virtual ~partnerexp();

  partnerexp(const partnerexp& from);

  inline partnerexp& operator=(const partnerexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerexp& default_instance();

  void Swap(partnerexp* other);

  // implements Message ----------------------------------------------

  partnerexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerexp& from);
  void MergeFrom(const partnerexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 wearQuality = 3;
  inline bool has_wearquality() const;
  inline void clear_wearquality();
  static const int kWearQualityFieldNumber = 3;
  inline ::google::protobuf::int32 wearquality() const;
  inline void set_wearquality(::google::protobuf::int32 value);

  // optional int32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerexp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_wearquality();
  inline void clear_has_wearquality();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 wearquality_;
  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerexp : public ::google::protobuf::Message {
 public:
  Sheet_partnerexp();
  virtual ~Sheet_partnerexp();

  Sheet_partnerexp(const Sheet_partnerexp& from);

  inline Sheet_partnerexp& operator=(const Sheet_partnerexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerexp& default_instance();

  void Swap(Sheet_partnerexp* other);

  // implements Message ----------------------------------------------

  Sheet_partnerexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerexp& from);
  void MergeFrom(const Sheet_partnerexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerexp partnerexp_List = 1;
  inline int partnerexp_list_size() const;
  inline void clear_partnerexp_list();
  static const int kPartnerexpListFieldNumber = 1;
  inline const ::proto_ff::partnerexp& partnerexp_list(int index) const;
  inline ::proto_ff::partnerexp* mutable_partnerexp_list(int index);
  inline ::proto_ff::partnerexp* add_partnerexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerexp >&
      partnerexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerexp >*
      mutable_partnerexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerexp > partnerexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerexp* default_instance_;
};
// -------------------------------------------------------------------

class partnerequipattributeDesc : public ::google::protobuf::Message {
 public:
  partnerequipattributeDesc();
  virtual ~partnerequipattributeDesc();

  partnerequipattributeDesc(const partnerequipattributeDesc& from);

  inline partnerequipattributeDesc& operator=(const partnerequipattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerequipattributeDesc& default_instance();

  void Swap(partnerequipattributeDesc* other);

  // implements Message ----------------------------------------------

  partnerequipattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerequipattributeDesc& from);
  void MergeFrom(const partnerequipattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerequipattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerequipattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class partnerequip : public ::google::protobuf::Message {
 public:
  partnerequip();
  virtual ~partnerequip();

  partnerequip(const partnerequip& from);

  inline partnerequip& operator=(const partnerequip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerequip& default_instance();

  void Swap(partnerequip* other);

  // implements Message ----------------------------------------------

  partnerequip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerequip& from);
  void MergeFrom(const partnerequip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // optional int32 refineLv = 3;
  inline bool has_refinelv() const;
  inline void clear_refinelv();
  static const int kRefineLvFieldNumber = 3;
  inline ::google::protobuf::int32 refinelv() const;
  inline void set_refinelv(::google::protobuf::int32 value);

  // optional int32 refineNum = 4;
  inline bool has_refinenum() const;
  inline void clear_refinenum();
  static const int kRefineNumFieldNumber = 4;
  inline ::google::protobuf::int32 refinenum() const;
  inline void set_refinenum(::google::protobuf::int32 value);

  // repeated .proto_ff.partnerequipattributeDesc attribute = 5;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 5;
  inline const ::proto_ff::partnerequipattributeDesc& attribute(int index) const;
  inline ::proto_ff::partnerequipattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::partnerequipattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequipattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequipattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.partnerequip)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_refinelv();
  inline void clear_has_refinelv();
  inline void set_has_refinenum();
  inline void clear_has_refinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 refinelv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequipattributeDesc > attribute_;
  ::google::protobuf::int32 refinenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerequip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerequip : public ::google::protobuf::Message {
 public:
  Sheet_partnerequip();
  virtual ~Sheet_partnerequip();

  Sheet_partnerequip(const Sheet_partnerequip& from);

  inline Sheet_partnerequip& operator=(const Sheet_partnerequip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerequip& default_instance();

  void Swap(Sheet_partnerequip* other);

  // implements Message ----------------------------------------------

  Sheet_partnerequip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerequip& from);
  void MergeFrom(const Sheet_partnerequip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerequip partnerequip_List = 1;
  inline int partnerequip_list_size() const;
  inline void clear_partnerequip_list();
  static const int kPartnerequipListFieldNumber = 1;
  inline const ::proto_ff::partnerequip& partnerequip_list(int index) const;
  inline ::proto_ff::partnerequip* mutable_partnerequip_list(int index);
  inline ::proto_ff::partnerequip* add_partnerequip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequip >&
      partnerequip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequip >*
      mutable_partnerequip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerequip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequip > partnerequip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerequip* default_instance_;
};
// -------------------------------------------------------------------

class partnerrefine : public ::google::protobuf::Message {
 public:
  partnerrefine();
  virtual ~partnerrefine();

  partnerrefine(const partnerrefine& from);

  inline partnerrefine& operator=(const partnerrefine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerrefine& default_instance();

  void Swap(partnerrefine* other);

  // implements Message ----------------------------------------------

  partnerrefine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerrefine& from);
  void MergeFrom(const partnerrefine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 refineId = 2;
  inline bool has_refineid() const;
  inline void clear_refineid();
  static const int kRefineIdFieldNumber = 2;
  inline ::google::protobuf::int64 refineid() const;
  inline void set_refineid(::google::protobuf::int64 value);

  // optional int32 refineNum = 3;
  inline bool has_refinenum() const;
  inline void clear_refinenum();
  static const int kRefineNumFieldNumber = 3;
  inline ::google::protobuf::int32 refinenum() const;
  inline void set_refinenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerrefine)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_refineid();
  inline void clear_has_refineid();
  inline void set_has_refinenum();
  inline void clear_has_refinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 refineid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 refinenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerrefine* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerrefine : public ::google::protobuf::Message {
 public:
  Sheet_partnerrefine();
  virtual ~Sheet_partnerrefine();

  Sheet_partnerrefine(const Sheet_partnerrefine& from);

  inline Sheet_partnerrefine& operator=(const Sheet_partnerrefine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerrefine& default_instance();

  void Swap(Sheet_partnerrefine* other);

  // implements Message ----------------------------------------------

  Sheet_partnerrefine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerrefine& from);
  void MergeFrom(const Sheet_partnerrefine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerrefine partnerrefine_List = 1;
  inline int partnerrefine_list_size() const;
  inline void clear_partnerrefine_list();
  static const int kPartnerrefineListFieldNumber = 1;
  inline const ::proto_ff::partnerrefine& partnerrefine_list(int index) const;
  inline ::proto_ff::partnerrefine* mutable_partnerrefine_list(int index);
  inline ::proto_ff::partnerrefine* add_partnerrefine_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerrefine >&
      partnerrefine_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerrefine >*
      mutable_partnerrefine_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerrefine)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerrefine > partnerrefine_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerrefine* default_instance_;
};
// -------------------------------------------------------------------

class partnerslot : public ::google::protobuf::Message {
 public:
  partnerslot();
  virtual ~partnerslot();

  partnerslot(const partnerslot& from);

  inline partnerslot& operator=(const partnerslot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const partnerslot& default_instance();

  void Swap(partnerslot* other);

  // implements Message ----------------------------------------------

  partnerslot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const partnerslot& from);
  void MergeFrom(const partnerslot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // optional int32 refineLv = 2;
  inline bool has_refinelv() const;
  inline void clear_refinelv();
  static const int kRefineLvFieldNumber = 2;
  inline ::google::protobuf::int32 refinelv() const;
  inline void set_refinelv(::google::protobuf::int32 value);

  // optional int32 refineNum = 3;
  inline bool has_refinenum() const;
  inline void clear_refinenum();
  static const int kRefineNumFieldNumber = 3;
  inline ::google::protobuf::int32 refinenum() const;
  inline void set_refinenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.partnerslot)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_refinelv();
  inline void clear_has_refinelv();
  inline void set_has_refinenum();
  inline void clear_has_refinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 refinelv_;
  ::google::protobuf::int32 refinenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static partnerslot* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_partnerslot : public ::google::protobuf::Message {
 public:
  Sheet_partnerslot();
  virtual ~Sheet_partnerslot();

  Sheet_partnerslot(const Sheet_partnerslot& from);

  inline Sheet_partnerslot& operator=(const Sheet_partnerslot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_partnerslot& default_instance();

  void Swap(Sheet_partnerslot* other);

  // implements Message ----------------------------------------------

  Sheet_partnerslot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_partnerslot& from);
  void MergeFrom(const Sheet_partnerslot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.partnerslot partnerslot_List = 1;
  inline int partnerslot_list_size() const;
  inline void clear_partnerslot_list();
  static const int kPartnerslotListFieldNumber = 1;
  inline const ::proto_ff::partnerslot& partnerslot_list(int index) const;
  inline ::proto_ff::partnerslot* mutable_partnerslot_list(int index);
  inline ::proto_ff::partnerslot* add_partnerslot_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerslot >&
      partnerslot_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerslot >*
      mutable_partnerslot_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_partnerslot)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerslot > partnerslot_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_partner_2eproto();
  friend void protobuf_AssignDesc_partner_2eproto();
  friend void protobuf_ShutdownFile_partner_2eproto();

  void InitAsDefaultInstance();
  static Sheet_partnerslot* default_instance_;
};
// ===================================================================


// ===================================================================

// partnerpartnerattributeDesc

// optional int32 type = 1;
inline bool partnerpartnerattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerpartnerattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerpartnerattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerpartnerattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 partnerpartnerattributeDesc::type() const {
  return type_;
}
inline void partnerpartnerattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool partnerpartnerattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerpartnerattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerpartnerattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerpartnerattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 partnerpartnerattributeDesc::value() const {
  return value_;
}
inline void partnerpartnerattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// partnerpartner

// optional int64 id = 1;
inline bool partnerpartner::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerpartner::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerpartner::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerpartner::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 partnerpartner::id() const {
  return id_;
}
inline void partnerpartner::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string resource = 2;
inline bool partnerpartner::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerpartner::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerpartner::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerpartner::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& partnerpartner::resource() const {
  return *resource_;
}
inline void partnerpartner::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void partnerpartner::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void partnerpartner::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerpartner::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* partnerpartner::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerpartner::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 3;
inline bool partnerpartner::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerpartner::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerpartner::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerpartner::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& partnerpartner::name() const {
  return *name_;
}
inline void partnerpartner::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void partnerpartner::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void partnerpartner::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerpartner::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* partnerpartner::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerpartner::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string activeDesc = 4;
inline bool partnerpartner::has_activedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void partnerpartner::set_has_activedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void partnerpartner::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void partnerpartner::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& partnerpartner::activedesc() const {
  return *activedesc_;
}
inline void partnerpartner::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void partnerpartner::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void partnerpartner::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerpartner::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* partnerpartner::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerpartner::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string partnerSkill = 5;
inline bool partnerpartner::has_partnerskill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void partnerpartner::set_has_partnerskill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void partnerpartner::clear_has_partnerskill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void partnerpartner::clear_partnerskill() {
  if (partnerskill_ != &::google::protobuf::internal::kEmptyString) {
    partnerskill_->clear();
  }
  clear_has_partnerskill();
}
inline const ::std::string& partnerpartner::partnerskill() const {
  return *partnerskill_;
}
inline void partnerpartner::set_partnerskill(const ::std::string& value) {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  partnerskill_->assign(value);
}
inline void partnerpartner::set_partnerskill(const char* value) {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  partnerskill_->assign(value);
}
inline void partnerpartner::set_partnerskill(const char* value, size_t size) {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  partnerskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerpartner::mutable_partnerskill() {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  return partnerskill_;
}
inline ::std::string* partnerpartner::release_partnerskill() {
  clear_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = partnerskill_;
    partnerskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerpartner::set_allocated_partnerskill(::std::string* partnerskill) {
  if (partnerskill_ != &::google::protobuf::internal::kEmptyString) {
    delete partnerskill_;
  }
  if (partnerskill) {
    set_has_partnerskill();
    partnerskill_ = partnerskill;
  } else {
    clear_has_partnerskill();
    partnerskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 realLevel = 6;
inline bool partnerpartner::has_reallevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void partnerpartner::set_has_reallevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void partnerpartner::clear_has_reallevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void partnerpartner::clear_reallevel() {
  reallevel_ = 0;
  clear_has_reallevel();
}
inline ::google::protobuf::int32 partnerpartner::reallevel() const {
  return reallevel_;
}
inline void partnerpartner::set_reallevel(::google::protobuf::int32 value) {
  set_has_reallevel();
  reallevel_ = value;
}

// optional int64 materialID = 7;
inline bool partnerpartner::has_materialid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void partnerpartner::set_has_materialid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void partnerpartner::clear_has_materialid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void partnerpartner::clear_materialid() {
  materialid_ = GOOGLE_LONGLONG(0);
  clear_has_materialid();
}
inline ::google::protobuf::int64 partnerpartner::materialid() const {
  return materialid_;
}
inline void partnerpartner::set_materialid(::google::protobuf::int64 value) {
  set_has_materialid();
  materialid_ = value;
}

// optional int32 materialEXP = 8;
inline bool partnerpartner::has_materialexp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void partnerpartner::set_has_materialexp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void partnerpartner::clear_has_materialexp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void partnerpartner::clear_materialexp() {
  materialexp_ = 0;
  clear_has_materialexp();
}
inline ::google::protobuf::int32 partnerpartner::materialexp() const {
  return materialexp_;
}
inline void partnerpartner::set_materialexp(::google::protobuf::int32 value) {
  set_has_materialexp();
  materialexp_ = value;
}

// optional int32 exp = 9;
inline bool partnerpartner::has_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void partnerpartner::set_has_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void partnerpartner::clear_has_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void partnerpartner::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 partnerpartner::exp() const {
  return exp_;
}
inline void partnerpartner::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int64 BreakMaterialID = 10;
inline bool partnerpartner::has_breakmaterialid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void partnerpartner::set_has_breakmaterialid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void partnerpartner::clear_has_breakmaterialid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void partnerpartner::clear_breakmaterialid() {
  breakmaterialid_ = GOOGLE_LONGLONG(0);
  clear_has_breakmaterialid();
}
inline ::google::protobuf::int64 partnerpartner::breakmaterialid() const {
  return breakmaterialid_;
}
inline void partnerpartner::set_breakmaterialid(::google::protobuf::int64 value) {
  set_has_breakmaterialid();
  breakmaterialid_ = value;
}

// optional int32 BreakMaterialCost = 11;
inline bool partnerpartner::has_breakmaterialcost() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void partnerpartner::set_has_breakmaterialcost() {
  _has_bits_[0] |= 0x00000400u;
}
inline void partnerpartner::clear_has_breakmaterialcost() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void partnerpartner::clear_breakmaterialcost() {
  breakmaterialcost_ = 0;
  clear_has_breakmaterialcost();
}
inline ::google::protobuf::int32 partnerpartner::breakmaterialcost() const {
  return breakmaterialcost_;
}
inline void partnerpartner::set_breakmaterialcost(::google::protobuf::int32 value) {
  set_has_breakmaterialcost();
  breakmaterialcost_ = value;
}

// optional int64 skillID = 12;
inline bool partnerpartner::has_skillid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void partnerpartner::set_has_skillid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void partnerpartner::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void partnerpartner::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 partnerpartner::skillid() const {
  return skillid_;
}
inline void partnerpartner::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int64 aiId = 13;
inline bool partnerpartner::has_aiid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void partnerpartner::set_has_aiid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void partnerpartner::clear_has_aiid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void partnerpartner::clear_aiid() {
  aiid_ = GOOGLE_LONGLONG(0);
  clear_has_aiid();
}
inline ::google::protobuf::int64 partnerpartner::aiid() const {
  return aiid_;
}
inline void partnerpartner::set_aiid(::google::protobuf::int64 value) {
  set_has_aiid();
  aiid_ = value;
}

// repeated .proto_ff.partnerpartnerattributeDesc attribute = 14;
inline int partnerpartner::attribute_size() const {
  return attribute_.size();
}
inline void partnerpartner::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::partnerpartnerattributeDesc& partnerpartner::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::partnerpartnerattributeDesc* partnerpartner::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::partnerpartnerattributeDesc* partnerpartner::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartnerattributeDesc >&
partnerpartner::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartnerattributeDesc >*
partnerpartner::mutable_attribute() {
  return &attribute_;
}

// repeated int64 fragmentID = 15;
inline int partnerpartner::fragmentid_size() const {
  return fragmentid_.size();
}
inline void partnerpartner::clear_fragmentid() {
  fragmentid_.Clear();
}
inline ::google::protobuf::int64 partnerpartner::fragmentid(int index) const {
  return fragmentid_.Get(index);
}
inline void partnerpartner::set_fragmentid(int index, ::google::protobuf::int64 value) {
  fragmentid_.Set(index, value);
}
inline void partnerpartner::add_fragmentid(::google::protobuf::int64 value) {
  fragmentid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
partnerpartner::fragmentid() const {
  return fragmentid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
partnerpartner::mutable_fragmentid() {
  return &fragmentid_;
}

// -------------------------------------------------------------------

// Sheet_partnerpartner

// repeated .proto_ff.partnerpartner partnerpartner_List = 1;
inline int Sheet_partnerpartner::partnerpartner_list_size() const {
  return partnerpartner_list_.size();
}
inline void Sheet_partnerpartner::clear_partnerpartner_list() {
  partnerpartner_list_.Clear();
}
inline const ::proto_ff::partnerpartner& Sheet_partnerpartner::partnerpartner_list(int index) const {
  return partnerpartner_list_.Get(index);
}
inline ::proto_ff::partnerpartner* Sheet_partnerpartner::mutable_partnerpartner_list(int index) {
  return partnerpartner_list_.Mutable(index);
}
inline ::proto_ff::partnerpartner* Sheet_partnerpartner::add_partnerpartner_list() {
  return partnerpartner_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartner >&
Sheet_partnerpartner::partnerpartner_list() const {
  return partnerpartner_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerpartner >*
Sheet_partnerpartner::mutable_partnerpartner_list() {
  return &partnerpartner_list_;
}

// -------------------------------------------------------------------

// partnerchangeattributeDesc

// optional int32 type = 1;
inline bool partnerchangeattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerchangeattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerchangeattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerchangeattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 partnerchangeattributeDesc::type() const {
  return type_;
}
inline void partnerchangeattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool partnerchangeattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerchangeattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerchangeattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerchangeattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 partnerchangeattributeDesc::value() const {
  return value_;
}
inline void partnerchangeattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// partnerchange

// optional int64 id = 1;
inline bool partnerchange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerchange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerchange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerchange::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 partnerchange::id() const {
  return id_;
}
inline void partnerchange::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string resource = 2;
inline bool partnerchange::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerchange::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerchange::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerchange::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& partnerchange::resource() const {
  return *resource_;
}
inline void partnerchange::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void partnerchange::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void partnerchange::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerchange::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* partnerchange::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerchange::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 3;
inline bool partnerchange::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerchange::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerchange::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerchange::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& partnerchange::name() const {
  return *name_;
}
inline void partnerchange::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void partnerchange::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void partnerchange::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerchange::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* partnerchange::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerchange::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string activeDesc = 4;
inline bool partnerchange::has_activedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void partnerchange::set_has_activedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void partnerchange::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void partnerchange::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& partnerchange::activedesc() const {
  return *activedesc_;
}
inline void partnerchange::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void partnerchange::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void partnerchange::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerchange::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* partnerchange::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerchange::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 quality = 5;
inline bool partnerchange::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void partnerchange::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void partnerchange::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void partnerchange::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 partnerchange::quality() const {
  return quality_;
}
inline void partnerchange::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int64 starId = 6;
inline bool partnerchange::has_starid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void partnerchange::set_has_starid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void partnerchange::clear_has_starid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void partnerchange::clear_starid() {
  starid_ = GOOGLE_LONGLONG(0);
  clear_has_starid();
}
inline ::google::protobuf::int64 partnerchange::starid() const {
  return starid_;
}
inline void partnerchange::set_starid(::google::protobuf::int64 value) {
  set_has_starid();
  starid_ = value;
}

// optional string starNum = 7;
inline bool partnerchange::has_starnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void partnerchange::set_has_starnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void partnerchange::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void partnerchange::clear_starnum() {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    starnum_->clear();
  }
  clear_has_starnum();
}
inline const ::std::string& partnerchange::starnum() const {
  return *starnum_;
}
inline void partnerchange::set_starnum(const ::std::string& value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void partnerchange::set_starnum(const char* value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void partnerchange::set_starnum(const char* value, size_t size) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerchange::mutable_starnum() {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  return starnum_;
}
inline ::std::string* partnerchange::release_starnum() {
  clear_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = starnum_;
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerchange::set_allocated_starnum(::std::string* starnum) {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (starnum) {
    set_has_starnum();
    starnum_ = starnum;
  } else {
    clear_has_starnum();
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 starUp = 8;
inline bool partnerchange::has_starup() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void partnerchange::set_has_starup() {
  _has_bits_[0] |= 0x00000080u;
}
inline void partnerchange::clear_has_starup() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void partnerchange::clear_starup() {
  starup_ = 0;
  clear_has_starup();
}
inline ::google::protobuf::int32 partnerchange::starup() const {
  return starup_;
}
inline void partnerchange::set_starup(::google::protobuf::int32 value) {
  set_has_starup();
  starup_ = value;
}

// optional string partnerSkill = 9;
inline bool partnerchange::has_partnerskill() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void partnerchange::set_has_partnerskill() {
  _has_bits_[0] |= 0x00000100u;
}
inline void partnerchange::clear_has_partnerskill() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void partnerchange::clear_partnerskill() {
  if (partnerskill_ != &::google::protobuf::internal::kEmptyString) {
    partnerskill_->clear();
  }
  clear_has_partnerskill();
}
inline const ::std::string& partnerchange::partnerskill() const {
  return *partnerskill_;
}
inline void partnerchange::set_partnerskill(const ::std::string& value) {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  partnerskill_->assign(value);
}
inline void partnerchange::set_partnerskill(const char* value) {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  partnerskill_->assign(value);
}
inline void partnerchange::set_partnerskill(const char* value, size_t size) {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  partnerskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* partnerchange::mutable_partnerskill() {
  set_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    partnerskill_ = new ::std::string;
  }
  return partnerskill_;
}
inline ::std::string* partnerchange::release_partnerskill() {
  clear_has_partnerskill();
  if (partnerskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = partnerskill_;
    partnerskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void partnerchange::set_allocated_partnerskill(::std::string* partnerskill) {
  if (partnerskill_ != &::google::protobuf::internal::kEmptyString) {
    delete partnerskill_;
  }
  if (partnerskill) {
    set_has_partnerskill();
    partnerskill_ = partnerskill;
  } else {
    clear_has_partnerskill();
    partnerskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 starBer = 10;
inline bool partnerchange::has_starber() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void partnerchange::set_has_starber() {
  _has_bits_[0] |= 0x00000200u;
}
inline void partnerchange::clear_has_starber() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void partnerchange::clear_starber() {
  starber_ = 0;
  clear_has_starber();
}
inline ::google::protobuf::int32 partnerchange::starber() const {
  return starber_;
}
inline void partnerchange::set_starber(::google::protobuf::int32 value) {
  set_has_starber();
  starber_ = value;
}

// optional int64 occupation = 11;
inline bool partnerchange::has_occupation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void partnerchange::set_has_occupation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void partnerchange::clear_has_occupation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void partnerchange::clear_occupation() {
  occupation_ = GOOGLE_LONGLONG(0);
  clear_has_occupation();
}
inline ::google::protobuf::int64 partnerchange::occupation() const {
  return occupation_;
}
inline void partnerchange::set_occupation(::google::protobuf::int64 value) {
  set_has_occupation();
  occupation_ = value;
}

// optional int64 aiId = 12;
inline bool partnerchange::has_aiid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void partnerchange::set_has_aiid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void partnerchange::clear_has_aiid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void partnerchange::clear_aiid() {
  aiid_ = GOOGLE_LONGLONG(0);
  clear_has_aiid();
}
inline ::google::protobuf::int64 partnerchange::aiid() const {
  return aiid_;
}
inline void partnerchange::set_aiid(::google::protobuf::int64 value) {
  set_has_aiid();
  aiid_ = value;
}

// optional int64 upAttributeId = 13;
inline bool partnerchange::has_upattributeid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void partnerchange::set_has_upattributeid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void partnerchange::clear_has_upattributeid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void partnerchange::clear_upattributeid() {
  upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_upattributeid();
}
inline ::google::protobuf::int64 partnerchange::upattributeid() const {
  return upattributeid_;
}
inline void partnerchange::set_upattributeid(::google::protobuf::int64 value) {
  set_has_upattributeid();
  upattributeid_ = value;
}

// repeated .proto_ff.partnerchangeattributeDesc attribute = 14;
inline int partnerchange::attribute_size() const {
  return attribute_.size();
}
inline void partnerchange::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::partnerchangeattributeDesc& partnerchange::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::partnerchangeattributeDesc* partnerchange::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::partnerchangeattributeDesc* partnerchange::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchangeattributeDesc >&
partnerchange::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchangeattributeDesc >*
partnerchange::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_partnerchange

// repeated .proto_ff.partnerchange partnerchange_List = 1;
inline int Sheet_partnerchange::partnerchange_list_size() const {
  return partnerchange_list_.size();
}
inline void Sheet_partnerchange::clear_partnerchange_list() {
  partnerchange_list_.Clear();
}
inline const ::proto_ff::partnerchange& Sheet_partnerchange::partnerchange_list(int index) const {
  return partnerchange_list_.Get(index);
}
inline ::proto_ff::partnerchange* Sheet_partnerchange::mutable_partnerchange_list(int index) {
  return partnerchange_list_.Mutable(index);
}
inline ::proto_ff::partnerchange* Sheet_partnerchange::add_partnerchange_list() {
  return partnerchange_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchange >&
Sheet_partnerchange::partnerchange_list() const {
  return partnerchange_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerchange >*
Sheet_partnerchange::mutable_partnerchange_list() {
  return &partnerchange_list_;
}

// -------------------------------------------------------------------

// partnerstarUpupAttributeDesc

// optional int32 type = 1;
inline bool partnerstarUpupAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerstarUpupAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerstarUpupAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerstarUpupAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 partnerstarUpupAttributeDesc::type() const {
  return type_;
}
inline void partnerstarUpupAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool partnerstarUpupAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerstarUpupAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerstarUpupAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerstarUpupAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 partnerstarUpupAttributeDesc::value() const {
  return value_;
}
inline void partnerstarUpupAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// partnerstarUp

// optional int32 ID = 1;
inline bool partnerstarUp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerstarUp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerstarUp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerstarUp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 partnerstarUp::id() const {
  return id_;
}
inline void partnerstarUp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 upAttributeId = 2;
inline bool partnerstarUp::has_upattributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerstarUp::set_has_upattributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerstarUp::clear_has_upattributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerstarUp::clear_upattributeid() {
  upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_upattributeid();
}
inline ::google::protobuf::int64 partnerstarUp::upattributeid() const {
  return upattributeid_;
}
inline void partnerstarUp::set_upattributeid(::google::protobuf::int64 value) {
  set_has_upattributeid();
  upattributeid_ = value;
}

// optional int32 starID = 3;
inline bool partnerstarUp::has_starid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerstarUp::set_has_starid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerstarUp::clear_has_starid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerstarUp::clear_starid() {
  starid_ = 0;
  clear_has_starid();
}
inline ::google::protobuf::int32 partnerstarUp::starid() const {
  return starid_;
}
inline void partnerstarUp::set_starid(::google::protobuf::int32 value) {
  set_has_starid();
  starid_ = value;
}

// repeated .proto_ff.partnerstarUpupAttributeDesc upAttribute = 4;
inline int partnerstarUp::upattribute_size() const {
  return upattribute_.size();
}
inline void partnerstarUp::clear_upattribute() {
  upattribute_.Clear();
}
inline const ::proto_ff::partnerstarUpupAttributeDesc& partnerstarUp::upattribute(int index) const {
  return upattribute_.Get(index);
}
inline ::proto_ff::partnerstarUpupAttributeDesc* partnerstarUp::mutable_upattribute(int index) {
  return upattribute_.Mutable(index);
}
inline ::proto_ff::partnerstarUpupAttributeDesc* partnerstarUp::add_upattribute() {
  return upattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUpupAttributeDesc >&
partnerstarUp::upattribute() const {
  return upattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUpupAttributeDesc >*
partnerstarUp::mutable_upattribute() {
  return &upattribute_;
}

// -------------------------------------------------------------------

// Sheet_partnerstarUp

// repeated .proto_ff.partnerstarUp partnerstarUp_List = 1;
inline int Sheet_partnerstarUp::partnerstarup_list_size() const {
  return partnerstarup_list_.size();
}
inline void Sheet_partnerstarUp::clear_partnerstarup_list() {
  partnerstarup_list_.Clear();
}
inline const ::proto_ff::partnerstarUp& Sheet_partnerstarUp::partnerstarup_list(int index) const {
  return partnerstarup_list_.Get(index);
}
inline ::proto_ff::partnerstarUp* Sheet_partnerstarUp::mutable_partnerstarup_list(int index) {
  return partnerstarup_list_.Mutable(index);
}
inline ::proto_ff::partnerstarUp* Sheet_partnerstarUp::add_partnerstarup_list() {
  return partnerstarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUp >&
Sheet_partnerstarUp::partnerstarup_list() const {
  return partnerstarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerstarUp >*
Sheet_partnerstarUp::mutable_partnerstarup_list() {
  return &partnerstarup_list_;
}

// -------------------------------------------------------------------

// partnerfragmentattributeDesc

// optional int32 type = 1;
inline bool partnerfragmentattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerfragmentattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerfragmentattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerfragmentattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 partnerfragmentattributeDesc::type() const {
  return type_;
}
inline void partnerfragmentattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool partnerfragmentattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerfragmentattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerfragmentattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerfragmentattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 partnerfragmentattributeDesc::value() const {
  return value_;
}
inline void partnerfragmentattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// partnerfragment

// optional int64 fragmentID = 1;
inline bool partnerfragment::has_fragmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerfragment::set_has_fragmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerfragment::clear_has_fragmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerfragment::clear_fragmentid() {
  fragmentid_ = GOOGLE_LONGLONG(0);
  clear_has_fragmentid();
}
inline ::google::protobuf::int64 partnerfragment::fragmentid() const {
  return fragmentid_;
}
inline void partnerfragment::set_fragmentid(::google::protobuf::int64 value) {
  set_has_fragmentid();
  fragmentid_ = value;
}

// optional int64 item = 2;
inline bool partnerfragment::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerfragment::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerfragment::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerfragment::clear_item() {
  item_ = GOOGLE_LONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::int64 partnerfragment::item() const {
  return item_;
}
inline void partnerfragment::set_item(::google::protobuf::int64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 itemNum = 3;
inline bool partnerfragment::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerfragment::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerfragment::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerfragment::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 partnerfragment::itemnum() const {
  return itemnum_;
}
inline void partnerfragment::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// repeated .proto_ff.partnerfragmentattributeDesc attribute = 4;
inline int partnerfragment::attribute_size() const {
  return attribute_.size();
}
inline void partnerfragment::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::partnerfragmentattributeDesc& partnerfragment::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::partnerfragmentattributeDesc* partnerfragment::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::partnerfragmentattributeDesc* partnerfragment::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragmentattributeDesc >&
partnerfragment::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragmentattributeDesc >*
partnerfragment::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_partnerfragment

// repeated .proto_ff.partnerfragment partnerfragment_List = 1;
inline int Sheet_partnerfragment::partnerfragment_list_size() const {
  return partnerfragment_list_.size();
}
inline void Sheet_partnerfragment::clear_partnerfragment_list() {
  partnerfragment_list_.Clear();
}
inline const ::proto_ff::partnerfragment& Sheet_partnerfragment::partnerfragment_list(int index) const {
  return partnerfragment_list_.Get(index);
}
inline ::proto_ff::partnerfragment* Sheet_partnerfragment::mutable_partnerfragment_list(int index) {
  return partnerfragment_list_.Mutable(index);
}
inline ::proto_ff::partnerfragment* Sheet_partnerfragment::add_partnerfragment_list() {
  return partnerfragment_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragment >&
Sheet_partnerfragment::partnerfragment_list() const {
  return partnerfragment_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerfragment >*
Sheet_partnerfragment::mutable_partnerfragment_list() {
  return &partnerfragment_list_;
}

// -------------------------------------------------------------------

// partnerattributeattributeDesc

// optional int32 type = 1;
inline bool partnerattributeattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerattributeattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerattributeattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerattributeattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 partnerattributeattributeDesc::type() const {
  return type_;
}
inline void partnerattributeattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool partnerattributeattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerattributeattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerattributeattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerattributeattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 partnerattributeattributeDesc::value() const {
  return value_;
}
inline void partnerattributeattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// partnerattribute

// optional int32 lv = 1;
inline bool partnerattribute::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerattribute::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerattribute::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerattribute::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 partnerattribute::lv() const {
  return lv_;
}
inline void partnerattribute::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int64 exp = 2;
inline bool partnerattribute::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerattribute::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerattribute::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerattribute::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 partnerattribute::exp() const {
  return exp_;
}
inline void partnerattribute::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// repeated .proto_ff.partnerattributeattributeDesc attribute = 3;
inline int partnerattribute::attribute_size() const {
  return attribute_.size();
}
inline void partnerattribute::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::partnerattributeattributeDesc& partnerattribute::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::partnerattributeattributeDesc* partnerattribute::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::partnerattributeattributeDesc* partnerattribute::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattributeattributeDesc >&
partnerattribute::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattributeattributeDesc >*
partnerattribute::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_partnerattribute

// repeated .proto_ff.partnerattribute partnerattribute_List = 1;
inline int Sheet_partnerattribute::partnerattribute_list_size() const {
  return partnerattribute_list_.size();
}
inline void Sheet_partnerattribute::clear_partnerattribute_list() {
  partnerattribute_list_.Clear();
}
inline const ::proto_ff::partnerattribute& Sheet_partnerattribute::partnerattribute_list(int index) const {
  return partnerattribute_list_.Get(index);
}
inline ::proto_ff::partnerattribute* Sheet_partnerattribute::mutable_partnerattribute_list(int index) {
  return partnerattribute_list_.Mutable(index);
}
inline ::proto_ff::partnerattribute* Sheet_partnerattribute::add_partnerattribute_list() {
  return partnerattribute_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattribute >&
Sheet_partnerattribute::partnerattribute_list() const {
  return partnerattribute_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerattribute >*
Sheet_partnerattribute::mutable_partnerattribute_list() {
  return &partnerattribute_list_;
}

// -------------------------------------------------------------------

// partnerexp

// optional int32 ID = 1;
inline bool partnerexp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerexp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerexp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerexp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 partnerexp::id() const {
  return id_;
}
inline void partnerexp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 exp = 2;
inline bool partnerexp::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerexp::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerexp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerexp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 partnerexp::exp() const {
  return exp_;
}
inline void partnerexp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 wearQuality = 3;
inline bool partnerexp::has_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerexp::set_has_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerexp::clear_has_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerexp::clear_wearquality() {
  wearquality_ = 0;
  clear_has_wearquality();
}
inline ::google::protobuf::int32 partnerexp::wearquality() const {
  return wearquality_;
}
inline void partnerexp::set_wearquality(::google::protobuf::int32 value) {
  set_has_wearquality();
  wearquality_ = value;
}

// optional int32 quality = 4;
inline bool partnerexp::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void partnerexp::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void partnerexp::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void partnerexp::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 partnerexp::quality() const {
  return quality_;
}
inline void partnerexp::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// Sheet_partnerexp

// repeated .proto_ff.partnerexp partnerexp_List = 1;
inline int Sheet_partnerexp::partnerexp_list_size() const {
  return partnerexp_list_.size();
}
inline void Sheet_partnerexp::clear_partnerexp_list() {
  partnerexp_list_.Clear();
}
inline const ::proto_ff::partnerexp& Sheet_partnerexp::partnerexp_list(int index) const {
  return partnerexp_list_.Get(index);
}
inline ::proto_ff::partnerexp* Sheet_partnerexp::mutable_partnerexp_list(int index) {
  return partnerexp_list_.Mutable(index);
}
inline ::proto_ff::partnerexp* Sheet_partnerexp::add_partnerexp_list() {
  return partnerexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerexp >&
Sheet_partnerexp::partnerexp_list() const {
  return partnerexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerexp >*
Sheet_partnerexp::mutable_partnerexp_list() {
  return &partnerexp_list_;
}

// -------------------------------------------------------------------

// partnerequipattributeDesc

// optional int32 type = 1;
inline bool partnerequipattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerequipattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerequipattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerequipattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 partnerequipattributeDesc::type() const {
  return type_;
}
inline void partnerequipattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool partnerequipattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerequipattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerequipattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerequipattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 partnerequipattributeDesc::value() const {
  return value_;
}
inline void partnerequipattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// partnerequip

// optional int64 id = 1;
inline bool partnerequip::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerequip::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerequip::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerequip::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 partnerequip::id() const {
  return id_;
}
inline void partnerequip::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 position = 2;
inline bool partnerequip::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerequip::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerequip::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerequip::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 partnerequip::position() const {
  return position_;
}
inline void partnerequip::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// optional int32 refineLv = 3;
inline bool partnerequip::has_refinelv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerequip::set_has_refinelv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerequip::clear_has_refinelv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerequip::clear_refinelv() {
  refinelv_ = 0;
  clear_has_refinelv();
}
inline ::google::protobuf::int32 partnerequip::refinelv() const {
  return refinelv_;
}
inline void partnerequip::set_refinelv(::google::protobuf::int32 value) {
  set_has_refinelv();
  refinelv_ = value;
}

// optional int32 refineNum = 4;
inline bool partnerequip::has_refinenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void partnerequip::set_has_refinenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void partnerequip::clear_has_refinenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void partnerequip::clear_refinenum() {
  refinenum_ = 0;
  clear_has_refinenum();
}
inline ::google::protobuf::int32 partnerequip::refinenum() const {
  return refinenum_;
}
inline void partnerequip::set_refinenum(::google::protobuf::int32 value) {
  set_has_refinenum();
  refinenum_ = value;
}

// repeated .proto_ff.partnerequipattributeDesc attribute = 5;
inline int partnerequip::attribute_size() const {
  return attribute_.size();
}
inline void partnerequip::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::partnerequipattributeDesc& partnerequip::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::partnerequipattributeDesc* partnerequip::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::partnerequipattributeDesc* partnerequip::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequipattributeDesc >&
partnerequip::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequipattributeDesc >*
partnerequip::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_partnerequip

// repeated .proto_ff.partnerequip partnerequip_List = 1;
inline int Sheet_partnerequip::partnerequip_list_size() const {
  return partnerequip_list_.size();
}
inline void Sheet_partnerequip::clear_partnerequip_list() {
  partnerequip_list_.Clear();
}
inline const ::proto_ff::partnerequip& Sheet_partnerequip::partnerequip_list(int index) const {
  return partnerequip_list_.Get(index);
}
inline ::proto_ff::partnerequip* Sheet_partnerequip::mutable_partnerequip_list(int index) {
  return partnerequip_list_.Mutable(index);
}
inline ::proto_ff::partnerequip* Sheet_partnerequip::add_partnerequip_list() {
  return partnerequip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequip >&
Sheet_partnerequip::partnerequip_list() const {
  return partnerequip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerequip >*
Sheet_partnerequip::mutable_partnerequip_list() {
  return &partnerequip_list_;
}

// -------------------------------------------------------------------

// partnerrefine

// optional int32 id = 1;
inline bool partnerrefine::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerrefine::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerrefine::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerrefine::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 partnerrefine::id() const {
  return id_;
}
inline void partnerrefine::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 refineId = 2;
inline bool partnerrefine::has_refineid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerrefine::set_has_refineid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerrefine::clear_has_refineid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerrefine::clear_refineid() {
  refineid_ = GOOGLE_LONGLONG(0);
  clear_has_refineid();
}
inline ::google::protobuf::int64 partnerrefine::refineid() const {
  return refineid_;
}
inline void partnerrefine::set_refineid(::google::protobuf::int64 value) {
  set_has_refineid();
  refineid_ = value;
}

// optional int32 refineNum = 3;
inline bool partnerrefine::has_refinenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerrefine::set_has_refinenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerrefine::clear_has_refinenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerrefine::clear_refinenum() {
  refinenum_ = 0;
  clear_has_refinenum();
}
inline ::google::protobuf::int32 partnerrefine::refinenum() const {
  return refinenum_;
}
inline void partnerrefine::set_refinenum(::google::protobuf::int32 value) {
  set_has_refinenum();
  refinenum_ = value;
}

// -------------------------------------------------------------------

// Sheet_partnerrefine

// repeated .proto_ff.partnerrefine partnerrefine_List = 1;
inline int Sheet_partnerrefine::partnerrefine_list_size() const {
  return partnerrefine_list_.size();
}
inline void Sheet_partnerrefine::clear_partnerrefine_list() {
  partnerrefine_list_.Clear();
}
inline const ::proto_ff::partnerrefine& Sheet_partnerrefine::partnerrefine_list(int index) const {
  return partnerrefine_list_.Get(index);
}
inline ::proto_ff::partnerrefine* Sheet_partnerrefine::mutable_partnerrefine_list(int index) {
  return partnerrefine_list_.Mutable(index);
}
inline ::proto_ff::partnerrefine* Sheet_partnerrefine::add_partnerrefine_list() {
  return partnerrefine_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerrefine >&
Sheet_partnerrefine::partnerrefine_list() const {
  return partnerrefine_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerrefine >*
Sheet_partnerrefine::mutable_partnerrefine_list() {
  return &partnerrefine_list_;
}

// -------------------------------------------------------------------

// partnerslot

// optional int32 position = 1;
inline bool partnerslot::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void partnerslot::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void partnerslot::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void partnerslot::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 partnerslot::position() const {
  return position_;
}
inline void partnerslot::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// optional int32 refineLv = 2;
inline bool partnerslot::has_refinelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void partnerslot::set_has_refinelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void partnerslot::clear_has_refinelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void partnerslot::clear_refinelv() {
  refinelv_ = 0;
  clear_has_refinelv();
}
inline ::google::protobuf::int32 partnerslot::refinelv() const {
  return refinelv_;
}
inline void partnerslot::set_refinelv(::google::protobuf::int32 value) {
  set_has_refinelv();
  refinelv_ = value;
}

// optional int32 refineNum = 3;
inline bool partnerslot::has_refinenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void partnerslot::set_has_refinenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void partnerslot::clear_has_refinenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void partnerslot::clear_refinenum() {
  refinenum_ = 0;
  clear_has_refinenum();
}
inline ::google::protobuf::int32 partnerslot::refinenum() const {
  return refinenum_;
}
inline void partnerslot::set_refinenum(::google::protobuf::int32 value) {
  set_has_refinenum();
  refinenum_ = value;
}

// -------------------------------------------------------------------

// Sheet_partnerslot

// repeated .proto_ff.partnerslot partnerslot_List = 1;
inline int Sheet_partnerslot::partnerslot_list_size() const {
  return partnerslot_list_.size();
}
inline void Sheet_partnerslot::clear_partnerslot_list() {
  partnerslot_list_.Clear();
}
inline const ::proto_ff::partnerslot& Sheet_partnerslot::partnerslot_list(int index) const {
  return partnerslot_list_.Get(index);
}
inline ::proto_ff::partnerslot* Sheet_partnerslot::mutable_partnerslot_list(int index) {
  return partnerslot_list_.Mutable(index);
}
inline ::proto_ff::partnerslot* Sheet_partnerslot::add_partnerslot_list() {
  return partnerslot_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerslot >&
Sheet_partnerslot::partnerslot_list() const {
  return partnerslot_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::partnerslot >*
Sheet_partnerslot::mutable_partnerslot_list() {
  return &partnerslot_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_partner_2eproto__INCLUDED
