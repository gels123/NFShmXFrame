// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Welfare.proto

#ifndef PROTOBUF_E_5fWelfare_2eproto__INCLUDED
#define PROTOBUF_E_5fWelfare_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fWelfare_2eproto();
void protobuf_AssignDesc_E_5fWelfare_2eproto();
void protobuf_ShutdownFile_E_5fWelfare_2eproto();

class E_WelfareSign;
class Sheet_WelfareSign;
class E_WelfareAccruereward;
class Sheet_WelfareAccruereward;
class E_WelfareLvreward;
class Sheet_WelfareLvreward;
class E_WelfareOnline;
class Sheet_WelfareOnline;
class E_WelfareFraud;
class Sheet_WelfareFraud;
class E_WelfareWeekendgift;
class Sheet_WelfareWeekendgift;
class E_WelfareConstant;
class Sheet_WelfareConstant;
class E_WelfareQifu;
class Sheet_WelfareQifu;
class E_WelfareWish;
class Sheet_WelfareWish;
class E_WelfareLogon;
class Sheet_WelfareLogon;
class E_WelfareFirstcharge;
class Sheet_WelfareFirstcharge;
class E_WelfareSctype;
class Sheet_WelfareSctype;
class E_WelfareMibao;
class Sheet_WelfareMibao;
class E_WelfareKfleichong;
class Sheet_WelfareKfleichong;
class E_WelfareDailygift;
class Sheet_WelfareDailygift;
class E_WelfareLcgift;
class Sheet_WelfareLcgift;
class E_WelfareLcraffle;
class Sheet_WelfareLcraffle;
class E_WelfareLcturntableRaffleDesc;
class E_WelfareLcturntable;
class Sheet_WelfareLcturntable;
class E_WelfareJackpot;
class Sheet_WelfareJackpot;
class E_WelfareMonthlycard;
class Sheet_WelfareMonthlycard;
class E_WelfareGoal;
class Sheet_WelfareGoal;
class E_WelfareGoaltask;
class Sheet_WelfareGoaltask;
class E_WelfareInvest;
class Sheet_WelfareInvest;
class E_WelfareInvestrewardItemDesc;
class E_WelfareInvestreward;
class Sheet_WelfareInvestreward;
class E_WelfareYttlgift;
class Sheet_WelfareYttlgift;

// ===================================================================

class E_WelfareSign : public ::google::protobuf::Message {
 public:
  E_WelfareSign();
  virtual ~E_WelfareSign();

  E_WelfareSign(const E_WelfareSign& from);

  inline E_WelfareSign& operator=(const E_WelfareSign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareSign& default_instance();

  void Swap(E_WelfareSign* other);

  // implements Message ----------------------------------------------

  E_WelfareSign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareSign& from);
  void MergeFrom(const E_WelfareSign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_month = 2;
  inline bool has_m_month() const;
  inline void clear_m_month();
  static const int kMMonthFieldNumber = 2;
  inline ::google::protobuf::int32 m_month() const;
  inline void set_m_month(::google::protobuf::int32 value);

  // optional int32 m_days = 3;
  inline bool has_m_days() const;
  inline void clear_m_days();
  static const int kMDaysFieldNumber = 3;
  inline ::google::protobuf::int32 m_days() const;
  inline void set_m_days(::google::protobuf::int32 value);

  // optional int32 m_VIP = 4;
  inline bool has_m_vip() const;
  inline void clear_m_vip();
  static const int kMVIPFieldNumber = 4;
  inline ::google::protobuf::int32 m_vip() const;
  inline void set_m_vip(::google::protobuf::int32 value);

  // optional string m_icon = 5;
  inline bool has_m_icon() const;
  inline void clear_m_icon();
  static const int kMIconFieldNumber = 5;
  inline const ::std::string& m_icon() const;
  inline void set_m_icon(const ::std::string& value);
  inline void set_m_icon(const char* value);
  inline void set_m_icon(const char* value, size_t size);
  inline ::std::string* mutable_m_icon();
  inline ::std::string* release_m_icon();
  inline void set_allocated_m_icon(::std::string* m_icon);

  // optional int32 m_reward = 6;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 6;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_rewardNum = 7;
  inline bool has_m_rewardnum() const;
  inline void clear_m_rewardnum();
  static const int kMRewardNumFieldNumber = 7;
  inline ::google::protobuf::int32 m_rewardnum() const;
  inline void set_m_rewardnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareSign)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_month();
  inline void clear_has_m_month();
  inline void set_has_m_days();
  inline void clear_has_m_days();
  inline void set_has_m_vip();
  inline void clear_has_m_vip();
  inline void set_has_m_icon();
  inline void clear_has_m_icon();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_rewardnum();
  inline void clear_has_m_rewardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_month_;
  ::google::protobuf::int32 m_days_;
  ::google::protobuf::int32 m_vip_;
  ::std::string* m_icon_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_rewardnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareSign* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareSign : public ::google::protobuf::Message {
 public:
  Sheet_WelfareSign();
  virtual ~Sheet_WelfareSign();

  Sheet_WelfareSign(const Sheet_WelfareSign& from);

  inline Sheet_WelfareSign& operator=(const Sheet_WelfareSign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareSign& default_instance();

  void Swap(Sheet_WelfareSign* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareSign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareSign& from);
  void MergeFrom(const Sheet_WelfareSign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareSign E_WelfareSign_List = 1;
  inline int e_welfaresign_list_size() const;
  inline void clear_e_welfaresign_list();
  static const int kEWelfareSignListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareSign& e_welfaresign_list(int index) const;
  inline ::proto_ff::E_WelfareSign* mutable_e_welfaresign_list(int index);
  inline ::proto_ff::E_WelfareSign* add_e_welfaresign_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSign >&
      e_welfaresign_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSign >*
      mutable_e_welfaresign_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareSign)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSign > e_welfaresign_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareSign* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareAccruereward : public ::google::protobuf::Message {
 public:
  E_WelfareAccruereward();
  virtual ~E_WelfareAccruereward();

  E_WelfareAccruereward(const E_WelfareAccruereward& from);

  inline E_WelfareAccruereward& operator=(const E_WelfareAccruereward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareAccruereward& default_instance();

  void Swap(E_WelfareAccruereward* other);

  // implements Message ----------------------------------------------

  E_WelfareAccruereward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareAccruereward& from);
  void MergeFrom(const E_WelfareAccruereward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_month = 2;
  inline bool has_m_month() const;
  inline void clear_m_month();
  static const int kMMonthFieldNumber = 2;
  inline ::google::protobuf::int32 m_month() const;
  inline void set_m_month(::google::protobuf::int32 value);

  // optional int32 m_accrueDays = 3;
  inline bool has_m_accruedays() const;
  inline void clear_m_accruedays();
  static const int kMAccrueDaysFieldNumber = 3;
  inline ::google::protobuf::int32 m_accruedays() const;
  inline void set_m_accruedays(::google::protobuf::int32 value);

  // optional int32 m_reward = 4;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 4;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_rewardNum = 5;
  inline bool has_m_rewardnum() const;
  inline void clear_m_rewardnum();
  static const int kMRewardNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_rewardnum() const;
  inline void set_m_rewardnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareAccruereward)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_month();
  inline void clear_has_m_month();
  inline void set_has_m_accruedays();
  inline void clear_has_m_accruedays();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_rewardnum();
  inline void clear_has_m_rewardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_month_;
  ::google::protobuf::int32 m_accruedays_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_rewardnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareAccruereward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareAccruereward : public ::google::protobuf::Message {
 public:
  Sheet_WelfareAccruereward();
  virtual ~Sheet_WelfareAccruereward();

  Sheet_WelfareAccruereward(const Sheet_WelfareAccruereward& from);

  inline Sheet_WelfareAccruereward& operator=(const Sheet_WelfareAccruereward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareAccruereward& default_instance();

  void Swap(Sheet_WelfareAccruereward* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareAccruereward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareAccruereward& from);
  void MergeFrom(const Sheet_WelfareAccruereward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareAccruereward E_WelfareAccruereward_List = 1;
  inline int e_welfareaccruereward_list_size() const;
  inline void clear_e_welfareaccruereward_list();
  static const int kEWelfareAccruerewardListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareAccruereward& e_welfareaccruereward_list(int index) const;
  inline ::proto_ff::E_WelfareAccruereward* mutable_e_welfareaccruereward_list(int index);
  inline ::proto_ff::E_WelfareAccruereward* add_e_welfareaccruereward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareAccruereward >&
      e_welfareaccruereward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareAccruereward >*
      mutable_e_welfareaccruereward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareAccruereward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareAccruereward > e_welfareaccruereward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareAccruereward* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareLvreward : public ::google::protobuf::Message {
 public:
  E_WelfareLvreward();
  virtual ~E_WelfareLvreward();

  E_WelfareLvreward(const E_WelfareLvreward& from);

  inline E_WelfareLvreward& operator=(const E_WelfareLvreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareLvreward& default_instance();

  void Swap(E_WelfareLvreward* other);

  // implements Message ----------------------------------------------

  E_WelfareLvreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareLvreward& from);
  void MergeFrom(const E_WelfareLvreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_lv = 2;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_lvReward = 3;
  inline bool has_m_lvreward() const;
  inline void clear_m_lvreward();
  static const int kMLvRewardFieldNumber = 3;
  inline ::google::protobuf::int32 m_lvreward() const;
  inline void set_m_lvreward(::google::protobuf::int32 value);

  // optional int32 m_vip = 4;
  inline bool has_m_vip() const;
  inline void clear_m_vip();
  static const int kMVipFieldNumber = 4;
  inline ::google::protobuf::int32 m_vip() const;
  inline void set_m_vip(::google::protobuf::int32 value);

  // optional int32 m_vipReward = 5;
  inline bool has_m_vipreward() const;
  inline void clear_m_vipreward();
  static const int kMVipRewardFieldNumber = 5;
  inline ::google::protobuf::int32 m_vipreward() const;
  inline void set_m_vipreward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareLvreward)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_lvreward();
  inline void clear_has_m_lvreward();
  inline void set_has_m_vip();
  inline void clear_has_m_vip();
  inline void set_has_m_vipreward();
  inline void clear_has_m_vipreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_lvreward_;
  ::google::protobuf::int32 m_vip_;
  ::google::protobuf::int32 m_vipreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareLvreward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareLvreward : public ::google::protobuf::Message {
 public:
  Sheet_WelfareLvreward();
  virtual ~Sheet_WelfareLvreward();

  Sheet_WelfareLvreward(const Sheet_WelfareLvreward& from);

  inline Sheet_WelfareLvreward& operator=(const Sheet_WelfareLvreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareLvreward& default_instance();

  void Swap(Sheet_WelfareLvreward* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareLvreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareLvreward& from);
  void MergeFrom(const Sheet_WelfareLvreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareLvreward E_WelfareLvreward_List = 1;
  inline int e_welfarelvreward_list_size() const;
  inline void clear_e_welfarelvreward_list();
  static const int kEWelfareLvrewardListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareLvreward& e_welfarelvreward_list(int index) const;
  inline ::proto_ff::E_WelfareLvreward* mutable_e_welfarelvreward_list(int index);
  inline ::proto_ff::E_WelfareLvreward* add_e_welfarelvreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLvreward >&
      e_welfarelvreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLvreward >*
      mutable_e_welfarelvreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareLvreward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLvreward > e_welfarelvreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareLvreward* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareOnline : public ::google::protobuf::Message {
 public:
  E_WelfareOnline();
  virtual ~E_WelfareOnline();

  E_WelfareOnline(const E_WelfareOnline& from);

  inline E_WelfareOnline& operator=(const E_WelfareOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareOnline& default_instance();

  void Swap(E_WelfareOnline* other);

  // implements Message ----------------------------------------------

  E_WelfareOnline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareOnline& from);
  void MergeFrom(const E_WelfareOnline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_onlineTime = 2;
  inline bool has_m_onlinetime() const;
  inline void clear_m_onlinetime();
  static const int kMOnlineTimeFieldNumber = 2;
  inline ::google::protobuf::int32 m_onlinetime() const;
  inline void set_m_onlinetime(::google::protobuf::int32 value);

  // optional int32 m_lvReward = 3;
  inline bool has_m_lvreward() const;
  inline void clear_m_lvreward();
  static const int kMLvRewardFieldNumber = 3;
  inline ::google::protobuf::int32 m_lvreward() const;
  inline void set_m_lvreward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareOnline)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_onlinetime();
  inline void clear_has_m_onlinetime();
  inline void set_has_m_lvreward();
  inline void clear_has_m_lvreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_onlinetime_;
  ::google::protobuf::int32 m_lvreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareOnline* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareOnline : public ::google::protobuf::Message {
 public:
  Sheet_WelfareOnline();
  virtual ~Sheet_WelfareOnline();

  Sheet_WelfareOnline(const Sheet_WelfareOnline& from);

  inline Sheet_WelfareOnline& operator=(const Sheet_WelfareOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareOnline& default_instance();

  void Swap(Sheet_WelfareOnline* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareOnline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareOnline& from);
  void MergeFrom(const Sheet_WelfareOnline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareOnline E_WelfareOnline_List = 1;
  inline int e_welfareonline_list_size() const;
  inline void clear_e_welfareonline_list();
  static const int kEWelfareOnlineListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareOnline& e_welfareonline_list(int index) const;
  inline ::proto_ff::E_WelfareOnline* mutable_e_welfareonline_list(int index);
  inline ::proto_ff::E_WelfareOnline* add_e_welfareonline_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareOnline >&
      e_welfareonline_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareOnline >*
      mutable_e_welfareonline_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareOnline)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareOnline > e_welfareonline_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareOnline* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareFraud : public ::google::protobuf::Message {
 public:
  E_WelfareFraud();
  virtual ~E_WelfareFraud();

  E_WelfareFraud(const E_WelfareFraud& from);

  inline E_WelfareFraud& operator=(const E_WelfareFraud& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareFraud& default_instance();

  void Swap(E_WelfareFraud* other);

  // implements Message ----------------------------------------------

  E_WelfareFraud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareFraud& from);
  void MergeFrom(const E_WelfareFraud& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_picture = 2;
  inline bool has_m_picture() const;
  inline void clear_m_picture();
  static const int kMPictureFieldNumber = 2;
  inline const ::std::string& m_picture() const;
  inline void set_m_picture(const ::std::string& value);
  inline void set_m_picture(const char* value);
  inline void set_m_picture(const char* value, size_t size);
  inline ::std::string* mutable_m_picture();
  inline ::std::string* release_m_picture();
  inline void set_allocated_m_picture(::std::string* m_picture);

  // optional int32 m_correct = 3;
  inline bool has_m_correct() const;
  inline void clear_m_correct();
  static const int kMCorrectFieldNumber = 3;
  inline ::google::protobuf::int32 m_correct() const;
  inline void set_m_correct(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareFraud)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_picture();
  inline void clear_has_m_picture();
  inline void set_has_m_correct();
  inline void clear_has_m_correct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_picture_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_correct_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareFraud* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareFraud : public ::google::protobuf::Message {
 public:
  Sheet_WelfareFraud();
  virtual ~Sheet_WelfareFraud();

  Sheet_WelfareFraud(const Sheet_WelfareFraud& from);

  inline Sheet_WelfareFraud& operator=(const Sheet_WelfareFraud& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareFraud& default_instance();

  void Swap(Sheet_WelfareFraud* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareFraud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareFraud& from);
  void MergeFrom(const Sheet_WelfareFraud& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareFraud E_WelfareFraud_List = 1;
  inline int e_welfarefraud_list_size() const;
  inline void clear_e_welfarefraud_list();
  static const int kEWelfareFraudListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareFraud& e_welfarefraud_list(int index) const;
  inline ::proto_ff::E_WelfareFraud* mutable_e_welfarefraud_list(int index);
  inline ::proto_ff::E_WelfareFraud* add_e_welfarefraud_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFraud >&
      e_welfarefraud_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFraud >*
      mutable_e_welfarefraud_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareFraud)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFraud > e_welfarefraud_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareFraud* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareWeekendgift : public ::google::protobuf::Message {
 public:
  E_WelfareWeekendgift();
  virtual ~E_WelfareWeekendgift();

  E_WelfareWeekendgift(const E_WelfareWeekendgift& from);

  inline E_WelfareWeekendgift& operator=(const E_WelfareWeekendgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareWeekendgift& default_instance();

  void Swap(E_WelfareWeekendgift* other);

  // implements Message ----------------------------------------------

  E_WelfareWeekendgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareWeekendgift& from);
  void MergeFrom(const E_WelfareWeekendgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_lvMin = 2;
  inline bool has_m_lvmin() const;
  inline void clear_m_lvmin();
  static const int kMLvMinFieldNumber = 2;
  inline ::google::protobuf::int32 m_lvmin() const;
  inline void set_m_lvmin(::google::protobuf::int32 value);

  // optional int32 m_lvMax = 3;
  inline bool has_m_lvmax() const;
  inline void clear_m_lvmax();
  static const int kMLvMaxFieldNumber = 3;
  inline ::google::protobuf::int32 m_lvmax() const;
  inline void set_m_lvmax(::google::protobuf::int32 value);

  // optional int32 m_date = 4;
  inline bool has_m_date() const;
  inline void clear_m_date();
  static const int kMDateFieldNumber = 4;
  inline ::google::protobuf::int32 m_date() const;
  inline void set_m_date(::google::protobuf::int32 value);

  // repeated int32 m_rewards = 5;
  inline int m_rewards_size() const;
  inline void clear_m_rewards();
  static const int kMRewardsFieldNumber = 5;
  inline ::google::protobuf::int32 m_rewards(int index) const;
  inline void set_m_rewards(int index, ::google::protobuf::int32 value);
  inline void add_m_rewards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_rewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_rewards();

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareWeekendgift)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_lvmin();
  inline void clear_has_m_lvmin();
  inline void set_has_m_lvmax();
  inline void clear_has_m_lvmax();
  inline void set_has_m_date();
  inline void clear_has_m_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_lvmin_;
  ::google::protobuf::int32 m_lvmax_;
  ::google::protobuf::int32 m_date_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareWeekendgift* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareWeekendgift : public ::google::protobuf::Message {
 public:
  Sheet_WelfareWeekendgift();
  virtual ~Sheet_WelfareWeekendgift();

  Sheet_WelfareWeekendgift(const Sheet_WelfareWeekendgift& from);

  inline Sheet_WelfareWeekendgift& operator=(const Sheet_WelfareWeekendgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareWeekendgift& default_instance();

  void Swap(Sheet_WelfareWeekendgift* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareWeekendgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareWeekendgift& from);
  void MergeFrom(const Sheet_WelfareWeekendgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareWeekendgift E_WelfareWeekendgift_List = 1;
  inline int e_welfareweekendgift_list_size() const;
  inline void clear_e_welfareweekendgift_list();
  static const int kEWelfareWeekendgiftListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareWeekendgift& e_welfareweekendgift_list(int index) const;
  inline ::proto_ff::E_WelfareWeekendgift* mutable_e_welfareweekendgift_list(int index);
  inline ::proto_ff::E_WelfareWeekendgift* add_e_welfareweekendgift_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWeekendgift >&
      e_welfareweekendgift_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWeekendgift >*
      mutable_e_welfareweekendgift_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareWeekendgift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWeekendgift > e_welfareweekendgift_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareWeekendgift* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareConstant : public ::google::protobuf::Message {
 public:
  E_WelfareConstant();
  virtual ~E_WelfareConstant();

  E_WelfareConstant(const E_WelfareConstant& from);

  inline E_WelfareConstant& operator=(const E_WelfareConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareConstant& default_instance();

  void Swap(E_WelfareConstant* other);

  // implements Message ----------------------------------------------

  E_WelfareConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareConstant& from);
  void MergeFrom(const E_WelfareConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_addSigncost = 2;
  inline bool has_m_addsigncost() const;
  inline void clear_m_addsigncost();
  static const int kMAddSigncostFieldNumber = 2;
  inline ::google::protobuf::int32 m_addsigncost() const;
  inline void set_m_addsigncost(::google::protobuf::int32 value);

  // optional int32 m_addSignprice = 3;
  inline bool has_m_addsignprice() const;
  inline void clear_m_addsignprice();
  static const int kMAddSignpriceFieldNumber = 3;
  inline ::google::protobuf::int32 m_addsignprice() const;
  inline void set_m_addsignprice(::google::protobuf::int32 value);

  // optional int32 m_noticeReward = 4;
  inline bool has_m_noticereward() const;
  inline void clear_m_noticereward();
  static const int kMNoticeRewardFieldNumber = 4;
  inline ::google::protobuf::int32 m_noticereward() const;
  inline void set_m_noticereward(::google::protobuf::int32 value);

  // optional int32 m_wrongMin = 5;
  inline bool has_m_wrongmin() const;
  inline void clear_m_wrongmin();
  static const int kMWrongMinFieldNumber = 5;
  inline ::google::protobuf::int32 m_wrongmin() const;
  inline void set_m_wrongmin(::google::protobuf::int32 value);

  // optional int32 m_wrongMax = 6;
  inline bool has_m_wrongmax() const;
  inline void clear_m_wrongmax();
  static const int kMWrongMaxFieldNumber = 6;
  inline ::google::protobuf::int32 m_wrongmax() const;
  inline void set_m_wrongmax(::google::protobuf::int32 value);

  // optional int32 m_fraudReward = 7;
  inline bool has_m_fraudreward() const;
  inline void clear_m_fraudreward();
  static const int kMFraudRewardFieldNumber = 7;
  inline ::google::protobuf::int32 m_fraudreward() const;
  inline void set_m_fraudreward(::google::protobuf::int32 value);

  // optional int32 m_firstRcharge = 8;
  inline bool has_m_firstrcharge() const;
  inline void clear_m_firstrcharge();
  static const int kMFirstRchargeFieldNumber = 8;
  inline ::google::protobuf::int32 m_firstrcharge() const;
  inline void set_m_firstrcharge(::google::protobuf::int32 value);

  // optional int32 m_secondRcharge = 9;
  inline bool has_m_secondrcharge() const;
  inline void clear_m_secondrcharge();
  static const int kMSecondRchargeFieldNumber = 9;
  inline ::google::protobuf::int32 m_secondrcharge() const;
  inline void set_m_secondrcharge(::google::protobuf::int32 value);

  // optional int32 m_gemMB = 10;
  inline bool has_m_gemmb() const;
  inline void clear_m_gemmb();
  static const int kMGemMBFieldNumber = 10;
  inline ::google::protobuf::int32 m_gemmb() const;
  inline void set_m_gemmb(::google::protobuf::int32 value);

  // optional int32 m_starMB = 11;
  inline bool has_m_starmb() const;
  inline void clear_m_starmb();
  static const int kMStarMBFieldNumber = 11;
  inline ::google::protobuf::int32 m_starmb() const;
  inline void set_m_starmb(::google::protobuf::int32 value);

  // optional int32 m_kingMB = 12;
  inline bool has_m_kingmb() const;
  inline void clear_m_kingmb();
  static const int kMKingMBFieldNumber = 12;
  inline ::google::protobuf::int32 m_kingmb() const;
  inline void set_m_kingmb(::google::protobuf::int32 value);

  // optional int32 m_keyRebate = 13;
  inline bool has_m_keyrebate() const;
  inline void clear_m_keyrebate();
  static const int kMKeyRebateFieldNumber = 13;
  inline ::google::protobuf::int32 m_keyrebate() const;
  inline void set_m_keyrebate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareConstant)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_addsigncost();
  inline void clear_has_m_addsigncost();
  inline void set_has_m_addsignprice();
  inline void clear_has_m_addsignprice();
  inline void set_has_m_noticereward();
  inline void clear_has_m_noticereward();
  inline void set_has_m_wrongmin();
  inline void clear_has_m_wrongmin();
  inline void set_has_m_wrongmax();
  inline void clear_has_m_wrongmax();
  inline void set_has_m_fraudreward();
  inline void clear_has_m_fraudreward();
  inline void set_has_m_firstrcharge();
  inline void clear_has_m_firstrcharge();
  inline void set_has_m_secondrcharge();
  inline void clear_has_m_secondrcharge();
  inline void set_has_m_gemmb();
  inline void clear_has_m_gemmb();
  inline void set_has_m_starmb();
  inline void clear_has_m_starmb();
  inline void set_has_m_kingmb();
  inline void clear_has_m_kingmb();
  inline void set_has_m_keyrebate();
  inline void clear_has_m_keyrebate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_addsigncost_;
  ::google::protobuf::int32 m_addsignprice_;
  ::google::protobuf::int32 m_noticereward_;
  ::google::protobuf::int32 m_wrongmin_;
  ::google::protobuf::int32 m_wrongmax_;
  ::google::protobuf::int32 m_fraudreward_;
  ::google::protobuf::int32 m_firstrcharge_;
  ::google::protobuf::int32 m_secondrcharge_;
  ::google::protobuf::int32 m_gemmb_;
  ::google::protobuf::int32 m_starmb_;
  ::google::protobuf::int32 m_kingmb_;
  ::google::protobuf::int32 m_keyrebate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareConstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareConstant : public ::google::protobuf::Message {
 public:
  Sheet_WelfareConstant();
  virtual ~Sheet_WelfareConstant();

  Sheet_WelfareConstant(const Sheet_WelfareConstant& from);

  inline Sheet_WelfareConstant& operator=(const Sheet_WelfareConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareConstant& default_instance();

  void Swap(Sheet_WelfareConstant* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareConstant& from);
  void MergeFrom(const Sheet_WelfareConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareConstant E_WelfareConstant_List = 1;
  inline int e_welfareconstant_list_size() const;
  inline void clear_e_welfareconstant_list();
  static const int kEWelfareConstantListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareConstant& e_welfareconstant_list(int index) const;
  inline ::proto_ff::E_WelfareConstant* mutable_e_welfareconstant_list(int index);
  inline ::proto_ff::E_WelfareConstant* add_e_welfareconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareConstant >&
      e_welfareconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareConstant >*
      mutable_e_welfareconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareConstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareConstant > e_welfareconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareConstant* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareQifu : public ::google::protobuf::Message {
 public:
  E_WelfareQifu();
  virtual ~E_WelfareQifu();

  E_WelfareQifu(const E_WelfareQifu& from);

  inline E_WelfareQifu& operator=(const E_WelfareQifu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareQifu& default_instance();

  void Swap(E_WelfareQifu* other);

  // implements Message ----------------------------------------------

  E_WelfareQifu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareQifu& from);
  void MergeFrom(const E_WelfareQifu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_constantid = 1;
  inline bool has_m_constantid() const;
  inline void clear_m_constantid();
  static const int kMConstantidFieldNumber = 1;
  inline ::google::protobuf::int32 m_constantid() const;
  inline void set_m_constantid(::google::protobuf::int32 value);

  // optional int32 m_constantdata = 2;
  inline bool has_m_constantdata() const;
  inline void clear_m_constantdata();
  static const int kMConstantdataFieldNumber = 2;
  inline ::google::protobuf::int32 m_constantdata() const;
  inline void set_m_constantdata(::google::protobuf::int32 value);

  // optional string m_stringdata = 3;
  inline bool has_m_stringdata() const;
  inline void clear_m_stringdata();
  static const int kMStringdataFieldNumber = 3;
  inline const ::std::string& m_stringdata() const;
  inline void set_m_stringdata(const ::std::string& value);
  inline void set_m_stringdata(const char* value);
  inline void set_m_stringdata(const char* value, size_t size);
  inline ::std::string* mutable_m_stringdata();
  inline ::std::string* release_m_stringdata();
  inline void set_allocated_m_stringdata(::std::string* m_stringdata);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareQifu)
 private:
  inline void set_has_m_constantid();
  inline void clear_has_m_constantid();
  inline void set_has_m_constantdata();
  inline void clear_has_m_constantdata();
  inline void set_has_m_stringdata();
  inline void clear_has_m_stringdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_constantid_;
  ::google::protobuf::int32 m_constantdata_;
  ::std::string* m_stringdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareQifu* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareQifu : public ::google::protobuf::Message {
 public:
  Sheet_WelfareQifu();
  virtual ~Sheet_WelfareQifu();

  Sheet_WelfareQifu(const Sheet_WelfareQifu& from);

  inline Sheet_WelfareQifu& operator=(const Sheet_WelfareQifu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareQifu& default_instance();

  void Swap(Sheet_WelfareQifu* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareQifu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareQifu& from);
  void MergeFrom(const Sheet_WelfareQifu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareQifu E_WelfareQifu_List = 1;
  inline int e_welfareqifu_list_size() const;
  inline void clear_e_welfareqifu_list();
  static const int kEWelfareQifuListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareQifu& e_welfareqifu_list(int index) const;
  inline ::proto_ff::E_WelfareQifu* mutable_e_welfareqifu_list(int index);
  inline ::proto_ff::E_WelfareQifu* add_e_welfareqifu_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareQifu >&
      e_welfareqifu_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareQifu >*
      mutable_e_welfareqifu_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareQifu)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareQifu > e_welfareqifu_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareQifu* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareWish : public ::google::protobuf::Message {
 public:
  E_WelfareWish();
  virtual ~E_WelfareWish();

  E_WelfareWish(const E_WelfareWish& from);

  inline E_WelfareWish& operator=(const E_WelfareWish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareWish& default_instance();

  void Swap(E_WelfareWish* other);

  // implements Message ----------------------------------------------

  E_WelfareWish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareWish& from);
  void MergeFrom(const E_WelfareWish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_level = 1;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 1;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int64 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int64 m_exp() const;
  inline void set_m_exp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareWish)
 private:
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_exp_;
  ::google::protobuf::int32 m_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareWish* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareWish : public ::google::protobuf::Message {
 public:
  Sheet_WelfareWish();
  virtual ~Sheet_WelfareWish();

  Sheet_WelfareWish(const Sheet_WelfareWish& from);

  inline Sheet_WelfareWish& operator=(const Sheet_WelfareWish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareWish& default_instance();

  void Swap(Sheet_WelfareWish* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareWish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareWish& from);
  void MergeFrom(const Sheet_WelfareWish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareWish E_WelfareWish_List = 1;
  inline int e_welfarewish_list_size() const;
  inline void clear_e_welfarewish_list();
  static const int kEWelfareWishListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareWish& e_welfarewish_list(int index) const;
  inline ::proto_ff::E_WelfareWish* mutable_e_welfarewish_list(int index);
  inline ::proto_ff::E_WelfareWish* add_e_welfarewish_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWish >&
      e_welfarewish_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWish >*
      mutable_e_welfarewish_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareWish)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWish > e_welfarewish_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareWish* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareLogon : public ::google::protobuf::Message {
 public:
  E_WelfareLogon();
  virtual ~E_WelfareLogon();

  E_WelfareLogon(const E_WelfareLogon& from);

  inline E_WelfareLogon& operator=(const E_WelfareLogon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareLogon& default_instance();

  void Swap(E_WelfareLogon* other);

  // implements Message ----------------------------------------------

  E_WelfareLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareLogon& from);
  void MergeFrom(const E_WelfareLogon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_days = 1;
  inline bool has_m_days() const;
  inline void clear_m_days();
  static const int kMDaysFieldNumber = 1;
  inline ::google::protobuf::int32 m_days() const;
  inline void set_m_days(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_icon = 3;
  inline bool has_m_icon() const;
  inline void clear_m_icon();
  static const int kMIconFieldNumber = 3;
  inline ::google::protobuf::int32 m_icon() const;
  inline void set_m_icon(::google::protobuf::int32 value);

  // optional int32 m_showItem = 4;
  inline bool has_m_showitem() const;
  inline void clear_m_showitem();
  static const int kMShowItemFieldNumber = 4;
  inline ::google::protobuf::int32 m_showitem() const;
  inline void set_m_showitem(::google::protobuf::int32 value);

  // optional int32 m_reward = 5;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 5;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareLogon)
 private:
  inline void set_has_m_days();
  inline void clear_has_m_days();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_icon();
  inline void clear_has_m_icon();
  inline void set_has_m_showitem();
  inline void clear_has_m_showitem();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_days_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_icon_;
  ::google::protobuf::int32 m_showitem_;
  ::google::protobuf::int32 m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareLogon* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareLogon : public ::google::protobuf::Message {
 public:
  Sheet_WelfareLogon();
  virtual ~Sheet_WelfareLogon();

  Sheet_WelfareLogon(const Sheet_WelfareLogon& from);

  inline Sheet_WelfareLogon& operator=(const Sheet_WelfareLogon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareLogon& default_instance();

  void Swap(Sheet_WelfareLogon* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareLogon& from);
  void MergeFrom(const Sheet_WelfareLogon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareLogon E_WelfareLogon_List = 1;
  inline int e_welfarelogon_list_size() const;
  inline void clear_e_welfarelogon_list();
  static const int kEWelfareLogonListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareLogon& e_welfarelogon_list(int index) const;
  inline ::proto_ff::E_WelfareLogon* mutable_e_welfarelogon_list(int index);
  inline ::proto_ff::E_WelfareLogon* add_e_welfarelogon_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLogon >&
      e_welfarelogon_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLogon >*
      mutable_e_welfarelogon_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareLogon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLogon > e_welfarelogon_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareLogon* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareFirstcharge : public ::google::protobuf::Message {
 public:
  E_WelfareFirstcharge();
  virtual ~E_WelfareFirstcharge();

  E_WelfareFirstcharge(const E_WelfareFirstcharge& from);

  inline E_WelfareFirstcharge& operator=(const E_WelfareFirstcharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareFirstcharge& default_instance();

  void Swap(E_WelfareFirstcharge* other);

  // implements Message ----------------------------------------------

  E_WelfareFirstcharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareFirstcharge& from);
  void MergeFrom(const E_WelfareFirstcharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_constantid = 1;
  inline bool has_m_constantid() const;
  inline void clear_m_constantid();
  static const int kMConstantidFieldNumber = 1;
  inline ::google::protobuf::int32 m_constantid() const;
  inline void set_m_constantid(::google::protobuf::int32 value);

  // optional int32 m_openlv = 2;
  inline bool has_m_openlv() const;
  inline void clear_m_openlv();
  static const int kMOpenlvFieldNumber = 2;
  inline ::google::protobuf::int32 m_openlv() const;
  inline void set_m_openlv(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_openDays = 4;
  inline bool has_m_opendays() const;
  inline void clear_m_opendays();
  static const int kMOpenDaysFieldNumber = 4;
  inline ::google::protobuf::int32 m_opendays() const;
  inline void set_m_opendays(::google::protobuf::int32 value);

  // optional int32 m_reward = 5;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 5;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // repeated string m_model = 6;
  inline int m_model_size() const;
  inline void clear_m_model();
  static const int kMModelFieldNumber = 6;
  inline const ::std::string& m_model(int index) const;
  inline ::std::string* mutable_m_model(int index);
  inline void set_m_model(int index, const ::std::string& value);
  inline void set_m_model(int index, const char* value);
  inline void set_m_model(int index, const char* value, size_t size);
  inline ::std::string* add_m_model();
  inline void add_m_model(const ::std::string& value);
  inline void add_m_model(const char* value);
  inline void add_m_model(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_model() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_model();

  // repeated int32 m_rewardShow = 7;
  inline int m_rewardshow_size() const;
  inline void clear_m_rewardshow();
  static const int kMRewardShowFieldNumber = 7;
  inline ::google::protobuf::int32 m_rewardshow(int index) const;
  inline void set_m_rewardshow(int index, ::google::protobuf::int32 value);
  inline void add_m_rewardshow(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_rewardshow() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_rewardshow();

  // repeated string m_rewardDes = 8;
  inline int m_rewarddes_size() const;
  inline void clear_m_rewarddes();
  static const int kMRewardDesFieldNumber = 8;
  inline const ::std::string& m_rewarddes(int index) const;
  inline ::std::string* mutable_m_rewarddes(int index);
  inline void set_m_rewarddes(int index, const ::std::string& value);
  inline void set_m_rewarddes(int index, const char* value);
  inline void set_m_rewarddes(int index, const char* value, size_t size);
  inline ::std::string* add_m_rewarddes();
  inline void add_m_rewarddes(const ::std::string& value);
  inline void add_m_rewarddes(const char* value);
  inline void add_m_rewarddes(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_rewarddes() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_rewarddes();

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareFirstcharge)
 private:
  inline void set_has_m_constantid();
  inline void clear_has_m_constantid();
  inline void set_has_m_openlv();
  inline void clear_has_m_openlv();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_opendays();
  inline void clear_has_m_opendays();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_constantid_;
  ::google::protobuf::int32 m_openlv_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_opendays_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_model_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_rewardshow_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_rewarddes_;
  ::google::protobuf::int32 m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareFirstcharge* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareFirstcharge : public ::google::protobuf::Message {
 public:
  Sheet_WelfareFirstcharge();
  virtual ~Sheet_WelfareFirstcharge();

  Sheet_WelfareFirstcharge(const Sheet_WelfareFirstcharge& from);

  inline Sheet_WelfareFirstcharge& operator=(const Sheet_WelfareFirstcharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareFirstcharge& default_instance();

  void Swap(Sheet_WelfareFirstcharge* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareFirstcharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareFirstcharge& from);
  void MergeFrom(const Sheet_WelfareFirstcharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareFirstcharge E_WelfareFirstcharge_List = 1;
  inline int e_welfarefirstcharge_list_size() const;
  inline void clear_e_welfarefirstcharge_list();
  static const int kEWelfareFirstchargeListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareFirstcharge& e_welfarefirstcharge_list(int index) const;
  inline ::proto_ff::E_WelfareFirstcharge* mutable_e_welfarefirstcharge_list(int index);
  inline ::proto_ff::E_WelfareFirstcharge* add_e_welfarefirstcharge_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFirstcharge >&
      e_welfarefirstcharge_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFirstcharge >*
      mutable_e_welfarefirstcharge_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareFirstcharge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFirstcharge > e_welfarefirstcharge_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareFirstcharge* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareSctype : public ::google::protobuf::Message {
 public:
  E_WelfareSctype();
  virtual ~E_WelfareSctype();

  E_WelfareSctype(const E_WelfareSctype& from);

  inline E_WelfareSctype& operator=(const E_WelfareSctype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareSctype& default_instance();

  void Swap(E_WelfareSctype* other);

  // implements Message ----------------------------------------------

  E_WelfareSctype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareSctype& from);
  void MergeFrom(const E_WelfareSctype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_functionid = 2;
  inline bool has_m_functionid() const;
  inline void clear_m_functionid();
  static const int kMFunctionidFieldNumber = 2;
  inline ::google::protobuf::int32 m_functionid() const;
  inline void set_m_functionid(::google::protobuf::int32 value);

  // optional string m_title = 3;
  inline bool has_m_title() const;
  inline void clear_m_title();
  static const int kMTitleFieldNumber = 3;
  inline const ::std::string& m_title() const;
  inline void set_m_title(const ::std::string& value);
  inline void set_m_title(const char* value);
  inline void set_m_title(const char* value, size_t size);
  inline ::std::string* mutable_m_title();
  inline ::std::string* release_m_title();
  inline void set_allocated_m_title(::std::string* m_title);

  // optional string m_baseMap = 4;
  inline bool has_m_basemap() const;
  inline void clear_m_basemap();
  static const int kMBaseMapFieldNumber = 4;
  inline const ::std::string& m_basemap() const;
  inline void set_m_basemap(const ::std::string& value);
  inline void set_m_basemap(const char* value);
  inline void set_m_basemap(const char* value, size_t size);
  inline ::std::string* mutable_m_basemap();
  inline ::std::string* release_m_basemap();
  inline void set_allocated_m_basemap(::std::string* m_basemap);

  // optional int32 m_rcharge = 5;
  inline bool has_m_rcharge() const;
  inline void clear_m_rcharge();
  static const int kMRchargeFieldNumber = 5;
  inline ::google::protobuf::int32 m_rcharge() const;
  inline void set_m_rcharge(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareSctype)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_functionid();
  inline void clear_has_m_functionid();
  inline void set_has_m_title();
  inline void clear_has_m_title();
  inline void set_has_m_basemap();
  inline void clear_has_m_basemap();
  inline void set_has_m_rcharge();
  inline void clear_has_m_rcharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_functionid_;
  ::std::string* m_title_;
  ::std::string* m_basemap_;
  ::google::protobuf::int32 m_rcharge_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareSctype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareSctype : public ::google::protobuf::Message {
 public:
  Sheet_WelfareSctype();
  virtual ~Sheet_WelfareSctype();

  Sheet_WelfareSctype(const Sheet_WelfareSctype& from);

  inline Sheet_WelfareSctype& operator=(const Sheet_WelfareSctype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareSctype& default_instance();

  void Swap(Sheet_WelfareSctype* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareSctype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareSctype& from);
  void MergeFrom(const Sheet_WelfareSctype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareSctype E_WelfareSctype_List = 1;
  inline int e_welfaresctype_list_size() const;
  inline void clear_e_welfaresctype_list();
  static const int kEWelfareSctypeListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareSctype& e_welfaresctype_list(int index) const;
  inline ::proto_ff::E_WelfareSctype* mutable_e_welfaresctype_list(int index);
  inline ::proto_ff::E_WelfareSctype* add_e_welfaresctype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSctype >&
      e_welfaresctype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSctype >*
      mutable_e_welfaresctype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareSctype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSctype > e_welfaresctype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareSctype* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareMibao : public ::google::protobuf::Message {
 public:
  E_WelfareMibao();
  virtual ~E_WelfareMibao();

  E_WelfareMibao(const E_WelfareMibao& from);

  inline E_WelfareMibao& operator=(const E_WelfareMibao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareMibao& default_instance();

  void Swap(E_WelfareMibao* other);

  // implements Message ----------------------------------------------

  E_WelfareMibao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareMibao& from);
  void MergeFrom(const E_WelfareMibao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_openlv = 2;
  inline bool has_m_openlv() const;
  inline void clear_m_openlv();
  static const int kMOpenlvFieldNumber = 2;
  inline ::google::protobuf::int32 m_openlv() const;
  inline void set_m_openlv(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_rank = 4;
  inline bool has_m_rank() const;
  inline void clear_m_rank();
  static const int kMRankFieldNumber = 4;
  inline ::google::protobuf::int32 m_rank() const;
  inline void set_m_rank(::google::protobuf::int32 value);

  // optional int32 m_openDays = 5;
  inline bool has_m_opendays() const;
  inline void clear_m_opendays();
  static const int kMOpenDaysFieldNumber = 5;
  inline ::google::protobuf::int32 m_opendays() const;
  inline void set_m_opendays(::google::protobuf::int32 value);

  // optional int32 m_reward = 6;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 6;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional string m_des = 7;
  inline bool has_m_des() const;
  inline void clear_m_des();
  static const int kMDesFieldNumber = 7;
  inline const ::std::string& m_des() const;
  inline void set_m_des(const ::std::string& value);
  inline void set_m_des(const char* value);
  inline void set_m_des(const char* value, size_t size);
  inline ::std::string* mutable_m_des();
  inline ::std::string* release_m_des();
  inline void set_allocated_m_des(::std::string* m_des);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareMibao)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_openlv();
  inline void clear_has_m_openlv();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_rank();
  inline void clear_has_m_rank();
  inline void set_has_m_opendays();
  inline void clear_has_m_opendays();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_des();
  inline void clear_has_m_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_openlv_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_rank_;
  ::google::protobuf::int32 m_opendays_;
  ::google::protobuf::int32 m_reward_;
  ::std::string* m_des_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareMibao* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareMibao : public ::google::protobuf::Message {
 public:
  Sheet_WelfareMibao();
  virtual ~Sheet_WelfareMibao();

  Sheet_WelfareMibao(const Sheet_WelfareMibao& from);

  inline Sheet_WelfareMibao& operator=(const Sheet_WelfareMibao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareMibao& default_instance();

  void Swap(Sheet_WelfareMibao* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareMibao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareMibao& from);
  void MergeFrom(const Sheet_WelfareMibao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareMibao E_WelfareMibao_List = 1;
  inline int e_welfaremibao_list_size() const;
  inline void clear_e_welfaremibao_list();
  static const int kEWelfareMibaoListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareMibao& e_welfaremibao_list(int index) const;
  inline ::proto_ff::E_WelfareMibao* mutable_e_welfaremibao_list(int index);
  inline ::proto_ff::E_WelfareMibao* add_e_welfaremibao_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMibao >&
      e_welfaremibao_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMibao >*
      mutable_e_welfaremibao_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareMibao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMibao > e_welfaremibao_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareMibao* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareKfleichong : public ::google::protobuf::Message {
 public:
  E_WelfareKfleichong();
  virtual ~E_WelfareKfleichong();

  E_WelfareKfleichong(const E_WelfareKfleichong& from);

  inline E_WelfareKfleichong& operator=(const E_WelfareKfleichong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareKfleichong& default_instance();

  void Swap(E_WelfareKfleichong* other);

  // implements Message ----------------------------------------------

  E_WelfareKfleichong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareKfleichong& from);
  void MergeFrom(const E_WelfareKfleichong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_money = 2;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // optional int32 m_limit = 3;
  inline bool has_m_limit() const;
  inline void clear_m_limit();
  static const int kMLimitFieldNumber = 3;
  inline ::google::protobuf::int32 m_limit() const;
  inline void set_m_limit(::google::protobuf::int32 value);

  // optional int32 m_reward = 4;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 4;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareKfleichong)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_money();
  inline void clear_has_m_money();
  inline void set_has_m_limit();
  inline void clear_has_m_limit();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_money_;
  ::google::protobuf::int32 m_limit_;
  ::google::protobuf::int32 m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareKfleichong* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareKfleichong : public ::google::protobuf::Message {
 public:
  Sheet_WelfareKfleichong();
  virtual ~Sheet_WelfareKfleichong();

  Sheet_WelfareKfleichong(const Sheet_WelfareKfleichong& from);

  inline Sheet_WelfareKfleichong& operator=(const Sheet_WelfareKfleichong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareKfleichong& default_instance();

  void Swap(Sheet_WelfareKfleichong* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareKfleichong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareKfleichong& from);
  void MergeFrom(const Sheet_WelfareKfleichong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareKfleichong E_WelfareKfleichong_List = 1;
  inline int e_welfarekfleichong_list_size() const;
  inline void clear_e_welfarekfleichong_list();
  static const int kEWelfareKfleichongListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareKfleichong& e_welfarekfleichong_list(int index) const;
  inline ::proto_ff::E_WelfareKfleichong* mutable_e_welfarekfleichong_list(int index);
  inline ::proto_ff::E_WelfareKfleichong* add_e_welfarekfleichong_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareKfleichong >&
      e_welfarekfleichong_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareKfleichong >*
      mutable_e_welfarekfleichong_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareKfleichong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareKfleichong > e_welfarekfleichong_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareKfleichong* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareDailygift : public ::google::protobuf::Message {
 public:
  E_WelfareDailygift();
  virtual ~E_WelfareDailygift();

  E_WelfareDailygift(const E_WelfareDailygift& from);

  inline E_WelfareDailygift& operator=(const E_WelfareDailygift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareDailygift& default_instance();

  void Swap(E_WelfareDailygift* other);

  // implements Message ----------------------------------------------

  E_WelfareDailygift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareDailygift& from);
  void MergeFrom(const E_WelfareDailygift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_rechargeId = 3;
  inline bool has_m_rechargeid() const;
  inline void clear_m_rechargeid();
  static const int kMRechargeIdFieldNumber = 3;
  inline ::google::protobuf::int32 m_rechargeid() const;
  inline void set_m_rechargeid(::google::protobuf::int32 value);

  // optional int32 m_OneclickBuy = 4;
  inline bool has_m_oneclickbuy() const;
  inline void clear_m_oneclickbuy();
  static const int kMOneclickBuyFieldNumber = 4;
  inline ::google::protobuf::int32 m_oneclickbuy() const;
  inline void set_m_oneclickbuy(::google::protobuf::int32 value);

  // optional int32 m_reward = 5;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 5;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_quality = 6;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 6;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareDailygift)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_rechargeid();
  inline void clear_has_m_rechargeid();
  inline void set_has_m_oneclickbuy();
  inline void clear_has_m_oneclickbuy();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_rechargeid_;
  ::google::protobuf::int32 m_oneclickbuy_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareDailygift* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareDailygift : public ::google::protobuf::Message {
 public:
  Sheet_WelfareDailygift();
  virtual ~Sheet_WelfareDailygift();

  Sheet_WelfareDailygift(const Sheet_WelfareDailygift& from);

  inline Sheet_WelfareDailygift& operator=(const Sheet_WelfareDailygift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareDailygift& default_instance();

  void Swap(Sheet_WelfareDailygift* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareDailygift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareDailygift& from);
  void MergeFrom(const Sheet_WelfareDailygift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareDailygift E_WelfareDailygift_List = 1;
  inline int e_welfaredailygift_list_size() const;
  inline void clear_e_welfaredailygift_list();
  static const int kEWelfareDailygiftListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareDailygift& e_welfaredailygift_list(int index) const;
  inline ::proto_ff::E_WelfareDailygift* mutable_e_welfaredailygift_list(int index);
  inline ::proto_ff::E_WelfareDailygift* add_e_welfaredailygift_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareDailygift >&
      e_welfaredailygift_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareDailygift >*
      mutable_e_welfaredailygift_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareDailygift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareDailygift > e_welfaredailygift_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareDailygift* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareLcgift : public ::google::protobuf::Message {
 public:
  E_WelfareLcgift();
  virtual ~E_WelfareLcgift();

  E_WelfareLcgift(const E_WelfareLcgift& from);

  inline E_WelfareLcgift& operator=(const E_WelfareLcgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareLcgift& default_instance();

  void Swap(E_WelfareLcgift* other);

  // implements Message ----------------------------------------------

  E_WelfareLcgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareLcgift& from);
  void MergeFrom(const E_WelfareLcgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_limit = 3;
  inline bool has_m_limit() const;
  inline void clear_m_limit();
  static const int kMLimitFieldNumber = 3;
  inline ::google::protobuf::int32 m_limit() const;
  inline void set_m_limit(::google::protobuf::int32 value);

  // optional int32 m_days = 4;
  inline bool has_m_days() const;
  inline void clear_m_days();
  static const int kMDaysFieldNumber = 4;
  inline ::google::protobuf::int32 m_days() const;
  inline void set_m_days(::google::protobuf::int32 value);

  // optional int32 m_starNum = 5;
  inline bool has_m_starnum() const;
  inline void clear_m_starnum();
  static const int kMStarNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_starnum() const;
  inline void set_m_starnum(::google::protobuf::int32 value);

  // optional int32 m_reward = 6;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 6;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_showItem = 7;
  inline bool has_m_showitem() const;
  inline void clear_m_showitem();
  static const int kMShowItemFieldNumber = 7;
  inline ::google::protobuf::int32 m_showitem() const;
  inline void set_m_showitem(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareLcgift)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_limit();
  inline void clear_has_m_limit();
  inline void set_has_m_days();
  inline void clear_has_m_days();
  inline void set_has_m_starnum();
  inline void clear_has_m_starnum();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_showitem();
  inline void clear_has_m_showitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_limit_;
  ::google::protobuf::int32 m_days_;
  ::google::protobuf::int32 m_starnum_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_showitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareLcgift* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareLcgift : public ::google::protobuf::Message {
 public:
  Sheet_WelfareLcgift();
  virtual ~Sheet_WelfareLcgift();

  Sheet_WelfareLcgift(const Sheet_WelfareLcgift& from);

  inline Sheet_WelfareLcgift& operator=(const Sheet_WelfareLcgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareLcgift& default_instance();

  void Swap(Sheet_WelfareLcgift* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareLcgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareLcgift& from);
  void MergeFrom(const Sheet_WelfareLcgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareLcgift E_WelfareLcgift_List = 1;
  inline int e_welfarelcgift_list_size() const;
  inline void clear_e_welfarelcgift_list();
  static const int kEWelfareLcgiftListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareLcgift& e_welfarelcgift_list(int index) const;
  inline ::proto_ff::E_WelfareLcgift* mutable_e_welfarelcgift_list(int index);
  inline ::proto_ff::E_WelfareLcgift* add_e_welfarelcgift_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcgift >&
      e_welfarelcgift_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcgift >*
      mutable_e_welfarelcgift_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareLcgift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcgift > e_welfarelcgift_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareLcgift* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareLcraffle : public ::google::protobuf::Message {
 public:
  E_WelfareLcraffle();
  virtual ~E_WelfareLcraffle();

  E_WelfareLcraffle(const E_WelfareLcraffle& from);

  inline E_WelfareLcraffle& operator=(const E_WelfareLcraffle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareLcraffle& default_instance();

  void Swap(E_WelfareLcraffle* other);

  // implements Message ----------------------------------------------

  E_WelfareLcraffle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareLcraffle& from);
  void MergeFrom(const E_WelfareLcraffle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_money = 2;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // optional int32 m_limit = 3;
  inline bool has_m_limit() const;
  inline void clear_m_limit();
  static const int kMLimitFieldNumber = 3;
  inline ::google::protobuf::int32 m_limit() const;
  inline void set_m_limit(::google::protobuf::int32 value);

  // optional int32 m_reward = 4;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 4;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareLcraffle)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_money();
  inline void clear_has_m_money();
  inline void set_has_m_limit();
  inline void clear_has_m_limit();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_money_;
  ::google::protobuf::int32 m_limit_;
  ::google::protobuf::int32 m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareLcraffle* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareLcraffle : public ::google::protobuf::Message {
 public:
  Sheet_WelfareLcraffle();
  virtual ~Sheet_WelfareLcraffle();

  Sheet_WelfareLcraffle(const Sheet_WelfareLcraffle& from);

  inline Sheet_WelfareLcraffle& operator=(const Sheet_WelfareLcraffle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareLcraffle& default_instance();

  void Swap(Sheet_WelfareLcraffle* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareLcraffle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareLcraffle& from);
  void MergeFrom(const Sheet_WelfareLcraffle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareLcraffle E_WelfareLcraffle_List = 1;
  inline int e_welfarelcraffle_list_size() const;
  inline void clear_e_welfarelcraffle_list();
  static const int kEWelfareLcraffleListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareLcraffle& e_welfarelcraffle_list(int index) const;
  inline ::proto_ff::E_WelfareLcraffle* mutable_e_welfarelcraffle_list(int index);
  inline ::proto_ff::E_WelfareLcraffle* add_e_welfarelcraffle_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcraffle >&
      e_welfarelcraffle_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcraffle >*
      mutable_e_welfarelcraffle_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareLcraffle)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcraffle > e_welfarelcraffle_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareLcraffle* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareLcturntableRaffleDesc : public ::google::protobuf::Message {
 public:
  E_WelfareLcturntableRaffleDesc();
  virtual ~E_WelfareLcturntableRaffleDesc();

  E_WelfareLcturntableRaffleDesc(const E_WelfareLcturntableRaffleDesc& from);

  inline E_WelfareLcturntableRaffleDesc& operator=(const E_WelfareLcturntableRaffleDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareLcturntableRaffleDesc& default_instance();

  void Swap(E_WelfareLcturntableRaffleDesc* other);

  // implements Message ----------------------------------------------

  E_WelfareLcturntableRaffleDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareLcturntableRaffleDesc& from);
  void MergeFrom(const E_WelfareLcturntableRaffleDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_item = 2;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline ::google::protobuf::int32 m_item() const;
  inline void set_m_item(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareLcturntableRaffleDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_item();
  inline void clear_has_m_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareLcturntableRaffleDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareLcturntable : public ::google::protobuf::Message {
 public:
  E_WelfareLcturntable();
  virtual ~E_WelfareLcturntable();

  E_WelfareLcturntable(const E_WelfareLcturntable& from);

  inline E_WelfareLcturntable& operator=(const E_WelfareLcturntable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareLcturntable& default_instance();

  void Swap(E_WelfareLcturntable* other);

  // implements Message ----------------------------------------------

  E_WelfareLcturntable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareLcturntable& from);
  void MergeFrom(const E_WelfareLcturntable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_jackpotType = 2;
  inline bool has_m_jackpottype() const;
  inline void clear_m_jackpottype();
  static const int kMJackpotTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_jackpottype() const;
  inline void set_m_jackpottype(::google::protobuf::int32 value);

  // optional int32 m_raffleTimes = 3;
  inline bool has_m_raffletimes() const;
  inline void clear_m_raffletimes();
  static const int kMRaffleTimesFieldNumber = 3;
  inline ::google::protobuf::int32 m_raffletimes() const;
  inline void set_m_raffletimes(::google::protobuf::int32 value);

  // optional int32 m_raTimesRew = 4;
  inline bool has_m_ratimesrew() const;
  inline void clear_m_ratimesrew();
  static const int kMRaTimesRewFieldNumber = 4;
  inline ::google::protobuf::int32 m_ratimesrew() const;
  inline void set_m_ratimesrew(::google::protobuf::int32 value);

  // repeated .proto_ff.E_WelfareLcturntableRaffleDesc m_raffle = 5;
  inline int m_raffle_size() const;
  inline void clear_m_raffle();
  static const int kMRaffleFieldNumber = 5;
  inline const ::proto_ff::E_WelfareLcturntableRaffleDesc& m_raffle(int index) const;
  inline ::proto_ff::E_WelfareLcturntableRaffleDesc* mutable_m_raffle(int index);
  inline ::proto_ff::E_WelfareLcturntableRaffleDesc* add_m_raffle();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntableRaffleDesc >&
      m_raffle() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntableRaffleDesc >*
      mutable_m_raffle();

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareLcturntable)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_jackpottype();
  inline void clear_has_m_jackpottype();
  inline void set_has_m_raffletimes();
  inline void clear_has_m_raffletimes();
  inline void set_has_m_ratimesrew();
  inline void clear_has_m_ratimesrew();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_jackpottype_;
  ::google::protobuf::int32 m_raffletimes_;
  ::google::protobuf::int32 m_ratimesrew_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntableRaffleDesc > m_raffle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareLcturntable* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareLcturntable : public ::google::protobuf::Message {
 public:
  Sheet_WelfareLcturntable();
  virtual ~Sheet_WelfareLcturntable();

  Sheet_WelfareLcturntable(const Sheet_WelfareLcturntable& from);

  inline Sheet_WelfareLcturntable& operator=(const Sheet_WelfareLcturntable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareLcturntable& default_instance();

  void Swap(Sheet_WelfareLcturntable* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareLcturntable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareLcturntable& from);
  void MergeFrom(const Sheet_WelfareLcturntable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareLcturntable E_WelfareLcturntable_List = 1;
  inline int e_welfarelcturntable_list_size() const;
  inline void clear_e_welfarelcturntable_list();
  static const int kEWelfareLcturntableListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareLcturntable& e_welfarelcturntable_list(int index) const;
  inline ::proto_ff::E_WelfareLcturntable* mutable_e_welfarelcturntable_list(int index);
  inline ::proto_ff::E_WelfareLcturntable* add_e_welfarelcturntable_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntable >&
      e_welfarelcturntable_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntable >*
      mutable_e_welfarelcturntable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareLcturntable)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntable > e_welfarelcturntable_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareLcturntable* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareJackpot : public ::google::protobuf::Message {
 public:
  E_WelfareJackpot();
  virtual ~E_WelfareJackpot();

  E_WelfareJackpot(const E_WelfareJackpot& from);

  inline E_WelfareJackpot& operator=(const E_WelfareJackpot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareJackpot& default_instance();

  void Swap(E_WelfareJackpot* other);

  // implements Message ----------------------------------------------

  E_WelfareJackpot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareJackpot& from);
  void MergeFrom(const E_WelfareJackpot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_rank = 3;
  inline bool has_m_rank() const;
  inline void clear_m_rank();
  static const int kMRankFieldNumber = 3;
  inline ::google::protobuf::int32 m_rank() const;
  inline void set_m_rank(::google::protobuf::int32 value);

  // optional int32 m_item = 4;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 4;
  inline ::google::protobuf::int32 m_item() const;
  inline void set_m_item(::google::protobuf::int32 value);

  // optional int32 m_itemNum = 5;
  inline bool has_m_itemnum() const;
  inline void clear_m_itemnum();
  static const int kMItemNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_itemnum() const;
  inline void set_m_itemnum(::google::protobuf::int32 value);

  // optional int32 m_weight = 6;
  inline bool has_m_weight() const;
  inline void clear_m_weight();
  static const int kMWeightFieldNumber = 6;
  inline ::google::protobuf::int32 m_weight() const;
  inline void set_m_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareJackpot)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_rank();
  inline void clear_has_m_rank();
  inline void set_has_m_item();
  inline void clear_has_m_item();
  inline void set_has_m_itemnum();
  inline void clear_has_m_itemnum();
  inline void set_has_m_weight();
  inline void clear_has_m_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_rank_;
  ::google::protobuf::int32 m_item_;
  ::google::protobuf::int32 m_itemnum_;
  ::google::protobuf::int32 m_weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareJackpot* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareJackpot : public ::google::protobuf::Message {
 public:
  Sheet_WelfareJackpot();
  virtual ~Sheet_WelfareJackpot();

  Sheet_WelfareJackpot(const Sheet_WelfareJackpot& from);

  inline Sheet_WelfareJackpot& operator=(const Sheet_WelfareJackpot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareJackpot& default_instance();

  void Swap(Sheet_WelfareJackpot* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareJackpot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareJackpot& from);
  void MergeFrom(const Sheet_WelfareJackpot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareJackpot E_WelfareJackpot_List = 1;
  inline int e_welfarejackpot_list_size() const;
  inline void clear_e_welfarejackpot_list();
  static const int kEWelfareJackpotListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareJackpot& e_welfarejackpot_list(int index) const;
  inline ::proto_ff::E_WelfareJackpot* mutable_e_welfarejackpot_list(int index);
  inline ::proto_ff::E_WelfareJackpot* add_e_welfarejackpot_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareJackpot >&
      e_welfarejackpot_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareJackpot >*
      mutable_e_welfarejackpot_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareJackpot)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareJackpot > e_welfarejackpot_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareJackpot* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareMonthlycard : public ::google::protobuf::Message {
 public:
  E_WelfareMonthlycard();
  virtual ~E_WelfareMonthlycard();

  E_WelfareMonthlycard(const E_WelfareMonthlycard& from);

  inline E_WelfareMonthlycard& operator=(const E_WelfareMonthlycard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareMonthlycard& default_instance();

  void Swap(E_WelfareMonthlycard* other);

  // implements Message ----------------------------------------------

  E_WelfareMonthlycard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareMonthlycard& from);
  void MergeFrom(const E_WelfareMonthlycard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_cardType = 2;
  inline bool has_m_cardtype() const;
  inline void clear_m_cardtype();
  static const int kMCardTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_cardtype() const;
  inline void set_m_cardtype(::google::protobuf::int32 value);

  // optional int32 m_cardMoney = 3;
  inline bool has_m_cardmoney() const;
  inline void clear_m_cardmoney();
  static const int kMCardMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 m_cardmoney() const;
  inline void set_m_cardmoney(::google::protobuf::int32 value);

  // optional int32 m_cardBuyitem = 4;
  inline bool has_m_cardbuyitem() const;
  inline void clear_m_cardbuyitem();
  static const int kMCardBuyitemFieldNumber = 4;
  inline ::google::protobuf::int32 m_cardbuyitem() const;
  inline void set_m_cardbuyitem(::google::protobuf::int32 value);

  // optional int32 m_cardDailyitem = 5;
  inline bool has_m_carddailyitem() const;
  inline void clear_m_carddailyitem();
  static const int kMCardDailyitemFieldNumber = 5;
  inline ::google::protobuf::int32 m_carddailyitem() const;
  inline void set_m_carddailyitem(::google::protobuf::int32 value);

  // optional int32 m_cardTime = 6;
  inline bool has_m_cardtime() const;
  inline void clear_m_cardtime();
  static const int kMCardTimeFieldNumber = 6;
  inline ::google::protobuf::int32 m_cardtime() const;
  inline void set_m_cardtime(::google::protobuf::int32 value);

  // optional int32 m_Flmultiple = 7;
  inline bool has_m_flmultiple() const;
  inline void clear_m_flmultiple();
  static const int kMFlmultipleFieldNumber = 7;
  inline ::google::protobuf::int32 m_flmultiple() const;
  inline void set_m_flmultiple(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareMonthlycard)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_cardtype();
  inline void clear_has_m_cardtype();
  inline void set_has_m_cardmoney();
  inline void clear_has_m_cardmoney();
  inline void set_has_m_cardbuyitem();
  inline void clear_has_m_cardbuyitem();
  inline void set_has_m_carddailyitem();
  inline void clear_has_m_carddailyitem();
  inline void set_has_m_cardtime();
  inline void clear_has_m_cardtime();
  inline void set_has_m_flmultiple();
  inline void clear_has_m_flmultiple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_cardtype_;
  ::google::protobuf::int32 m_cardmoney_;
  ::google::protobuf::int32 m_cardbuyitem_;
  ::google::protobuf::int32 m_carddailyitem_;
  ::google::protobuf::int32 m_cardtime_;
  ::google::protobuf::int32 m_flmultiple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareMonthlycard* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareMonthlycard : public ::google::protobuf::Message {
 public:
  Sheet_WelfareMonthlycard();
  virtual ~Sheet_WelfareMonthlycard();

  Sheet_WelfareMonthlycard(const Sheet_WelfareMonthlycard& from);

  inline Sheet_WelfareMonthlycard& operator=(const Sheet_WelfareMonthlycard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareMonthlycard& default_instance();

  void Swap(Sheet_WelfareMonthlycard* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareMonthlycard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareMonthlycard& from);
  void MergeFrom(const Sheet_WelfareMonthlycard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareMonthlycard E_WelfareMonthlycard_List = 1;
  inline int e_welfaremonthlycard_list_size() const;
  inline void clear_e_welfaremonthlycard_list();
  static const int kEWelfareMonthlycardListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareMonthlycard& e_welfaremonthlycard_list(int index) const;
  inline ::proto_ff::E_WelfareMonthlycard* mutable_e_welfaremonthlycard_list(int index);
  inline ::proto_ff::E_WelfareMonthlycard* add_e_welfaremonthlycard_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMonthlycard >&
      e_welfaremonthlycard_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMonthlycard >*
      mutable_e_welfaremonthlycard_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareMonthlycard)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMonthlycard > e_welfaremonthlycard_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareMonthlycard* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareGoal : public ::google::protobuf::Message {
 public:
  E_WelfareGoal();
  virtual ~E_WelfareGoal();

  E_WelfareGoal(const E_WelfareGoal& from);

  inline E_WelfareGoal& operator=(const E_WelfareGoal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareGoal& default_instance();

  void Swap(E_WelfareGoal* other);

  // implements Message ----------------------------------------------

  E_WelfareGoal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareGoal& from);
  void MergeFrom(const E_WelfareGoal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_functionid = 2;
  inline bool has_m_functionid() const;
  inline void clear_m_functionid();
  static const int kMFunctionidFieldNumber = 2;
  inline ::google::protobuf::int32 m_functionid() const;
  inline void set_m_functionid(::google::protobuf::int32 value);

  // optional int32 m_taskGroup = 3;
  inline bool has_m_taskgroup() const;
  inline void clear_m_taskgroup();
  static const int kMTaskGroupFieldNumber = 3;
  inline ::google::protobuf::int32 m_taskgroup() const;
  inline void set_m_taskgroup(::google::protobuf::int32 value);

  // optional int32 m_tasknum = 4;
  inline bool has_m_tasknum() const;
  inline void clear_m_tasknum();
  static const int kMTasknumFieldNumber = 4;
  inline ::google::protobuf::int32 m_tasknum() const;
  inline void set_m_tasknum(::google::protobuf::int32 value);

  // optional int32 m_rewrdItem = 5;
  inline bool has_m_rewrditem() const;
  inline void clear_m_rewrditem();
  static const int kMRewrdItemFieldNumber = 5;
  inline ::google::protobuf::int32 m_rewrditem() const;
  inline void set_m_rewrditem(::google::protobuf::int32 value);

  // optional int32 m_time = 6;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 6;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareGoal)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_functionid();
  inline void clear_has_m_functionid();
  inline void set_has_m_taskgroup();
  inline void clear_has_m_taskgroup();
  inline void set_has_m_tasknum();
  inline void clear_has_m_tasknum();
  inline void set_has_m_rewrditem();
  inline void clear_has_m_rewrditem();
  inline void set_has_m_time();
  inline void clear_has_m_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_functionid_;
  ::google::protobuf::int32 m_taskgroup_;
  ::google::protobuf::int32 m_tasknum_;
  ::google::protobuf::int32 m_rewrditem_;
  ::google::protobuf::int32 m_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareGoal* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareGoal : public ::google::protobuf::Message {
 public:
  Sheet_WelfareGoal();
  virtual ~Sheet_WelfareGoal();

  Sheet_WelfareGoal(const Sheet_WelfareGoal& from);

  inline Sheet_WelfareGoal& operator=(const Sheet_WelfareGoal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareGoal& default_instance();

  void Swap(Sheet_WelfareGoal* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareGoal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareGoal& from);
  void MergeFrom(const Sheet_WelfareGoal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareGoal E_WelfareGoal_List = 1;
  inline int e_welfaregoal_list_size() const;
  inline void clear_e_welfaregoal_list();
  static const int kEWelfareGoalListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareGoal& e_welfaregoal_list(int index) const;
  inline ::proto_ff::E_WelfareGoal* mutable_e_welfaregoal_list(int index);
  inline ::proto_ff::E_WelfareGoal* add_e_welfaregoal_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoal >&
      e_welfaregoal_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoal >*
      mutable_e_welfaregoal_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareGoal)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoal > e_welfaregoal_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareGoal* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareGoaltask : public ::google::protobuf::Message {
 public:
  E_WelfareGoaltask();
  virtual ~E_WelfareGoaltask();

  E_WelfareGoaltask(const E_WelfareGoaltask& from);

  inline E_WelfareGoaltask& operator=(const E_WelfareGoaltask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareGoaltask& default_instance();

  void Swap(E_WelfareGoaltask* other);

  // implements Message ----------------------------------------------

  E_WelfareGoaltask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareGoaltask& from);
  void MergeFrom(const E_WelfareGoaltask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_groupID = 2;
  inline bool has_m_groupid() const;
  inline void clear_m_groupid();
  static const int kMGroupIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_groupid() const;
  inline void set_m_groupid(::google::protobuf::int32 value);

  // optional int32 m_eventType = 3;
  inline bool has_m_eventtype() const;
  inline void clear_m_eventtype();
  static const int kMEventTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_eventtype() const;
  inline void set_m_eventtype(::google::protobuf::int32 value);

  // optional int32 m_reachPrice = 4;
  inline bool has_m_reachprice() const;
  inline void clear_m_reachprice();
  static const int kMReachPriceFieldNumber = 4;
  inline ::google::protobuf::int32 m_reachprice() const;
  inline void set_m_reachprice(::google::protobuf::int32 value);

  // optional int32 m_itemID = 5;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemIDFieldNumber = 5;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_itemNum = 6;
  inline bool has_m_itemnum() const;
  inline void clear_m_itemnum();
  static const int kMItemNumFieldNumber = 6;
  inline ::google::protobuf::int32 m_itemnum() const;
  inline void set_m_itemnum(::google::protobuf::int32 value);

  // repeated int32 m_param = 7;
  inline int m_param_size() const;
  inline void clear_m_param();
  static const int kMParamFieldNumber = 7;
  inline ::google::protobuf::int32 m_param(int index) const;
  inline void set_m_param(int index, ::google::protobuf::int32 value);
  inline void add_m_param(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_param();

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareGoaltask)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_groupid();
  inline void clear_has_m_groupid();
  inline void set_has_m_eventtype();
  inline void clear_has_m_eventtype();
  inline void set_has_m_reachprice();
  inline void clear_has_m_reachprice();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_itemnum();
  inline void clear_has_m_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_groupid_;
  ::google::protobuf::int32 m_eventtype_;
  ::google::protobuf::int32 m_reachprice_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_itemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareGoaltask* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareGoaltask : public ::google::protobuf::Message {
 public:
  Sheet_WelfareGoaltask();
  virtual ~Sheet_WelfareGoaltask();

  Sheet_WelfareGoaltask(const Sheet_WelfareGoaltask& from);

  inline Sheet_WelfareGoaltask& operator=(const Sheet_WelfareGoaltask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareGoaltask& default_instance();

  void Swap(Sheet_WelfareGoaltask* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareGoaltask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareGoaltask& from);
  void MergeFrom(const Sheet_WelfareGoaltask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareGoaltask E_WelfareGoaltask_List = 1;
  inline int e_welfaregoaltask_list_size() const;
  inline void clear_e_welfaregoaltask_list();
  static const int kEWelfareGoaltaskListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareGoaltask& e_welfaregoaltask_list(int index) const;
  inline ::proto_ff::E_WelfareGoaltask* mutable_e_welfaregoaltask_list(int index);
  inline ::proto_ff::E_WelfareGoaltask* add_e_welfaregoaltask_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoaltask >&
      e_welfaregoaltask_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoaltask >*
      mutable_e_welfaregoaltask_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareGoaltask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoaltask > e_welfaregoaltask_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareGoaltask* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareInvest : public ::google::protobuf::Message {
 public:
  E_WelfareInvest();
  virtual ~E_WelfareInvest();

  E_WelfareInvest(const E_WelfareInvest& from);

  inline E_WelfareInvest& operator=(const E_WelfareInvest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareInvest& default_instance();

  void Swap(E_WelfareInvest* other);

  // implements Message ----------------------------------------------

  E_WelfareInvest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareInvest& from);
  void MergeFrom(const E_WelfareInvest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_functionID = 2;
  inline bool has_m_functionid() const;
  inline void clear_m_functionid();
  static const int kMFunctionIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_functionid() const;
  inline void set_m_functionid(::google::protobuf::int32 value);

  // optional int32 m_price = 3;
  inline bool has_m_price() const;
  inline void clear_m_price();
  static const int kMPriceFieldNumber = 3;
  inline ::google::protobuf::int32 m_price() const;
  inline void set_m_price(::google::protobuf::int32 value);

  // optional int32 m_rewardItem = 4;
  inline bool has_m_rewarditem() const;
  inline void clear_m_rewarditem();
  static const int kMRewardItemFieldNumber = 4;
  inline ::google::protobuf::int32 m_rewarditem() const;
  inline void set_m_rewarditem(::google::protobuf::int32 value);

  // optional int32 m_rewardGroup = 5;
  inline bool has_m_rewardgroup() const;
  inline void clear_m_rewardgroup();
  static const int kMRewardGroupFieldNumber = 5;
  inline ::google::protobuf::int32 m_rewardgroup() const;
  inline void set_m_rewardgroup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareInvest)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_functionid();
  inline void clear_has_m_functionid();
  inline void set_has_m_price();
  inline void clear_has_m_price();
  inline void set_has_m_rewarditem();
  inline void clear_has_m_rewarditem();
  inline void set_has_m_rewardgroup();
  inline void clear_has_m_rewardgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_functionid_;
  ::google::protobuf::int32 m_price_;
  ::google::protobuf::int32 m_rewarditem_;
  ::google::protobuf::int32 m_rewardgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareInvest* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareInvest : public ::google::protobuf::Message {
 public:
  Sheet_WelfareInvest();
  virtual ~Sheet_WelfareInvest();

  Sheet_WelfareInvest(const Sheet_WelfareInvest& from);

  inline Sheet_WelfareInvest& operator=(const Sheet_WelfareInvest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareInvest& default_instance();

  void Swap(Sheet_WelfareInvest* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareInvest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareInvest& from);
  void MergeFrom(const Sheet_WelfareInvest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareInvest E_WelfareInvest_List = 1;
  inline int e_welfareinvest_list_size() const;
  inline void clear_e_welfareinvest_list();
  static const int kEWelfareInvestListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareInvest& e_welfareinvest_list(int index) const;
  inline ::proto_ff::E_WelfareInvest* mutable_e_welfareinvest_list(int index);
  inline ::proto_ff::E_WelfareInvest* add_e_welfareinvest_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvest >&
      e_welfareinvest_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvest >*
      mutable_e_welfareinvest_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareInvest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvest > e_welfareinvest_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareInvest* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareInvestrewardItemDesc : public ::google::protobuf::Message {
 public:
  E_WelfareInvestrewardItemDesc();
  virtual ~E_WelfareInvestrewardItemDesc();

  E_WelfareInvestrewardItemDesc(const E_WelfareInvestrewardItemDesc& from);

  inline E_WelfareInvestrewardItemDesc& operator=(const E_WelfareInvestrewardItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareInvestrewardItemDesc& default_instance();

  void Swap(E_WelfareInvestrewardItemDesc* other);

  // implements Message ----------------------------------------------

  E_WelfareInvestrewardItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareInvestrewardItemDesc& from);
  void MergeFrom(const E_WelfareInvestrewardItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareInvestrewardItemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareInvestrewardItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareInvestreward : public ::google::protobuf::Message {
 public:
  E_WelfareInvestreward();
  virtual ~E_WelfareInvestreward();

  E_WelfareInvestreward(const E_WelfareInvestreward& from);

  inline E_WelfareInvestreward& operator=(const E_WelfareInvestreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareInvestreward& default_instance();

  void Swap(E_WelfareInvestreward* other);

  // implements Message ----------------------------------------------

  E_WelfareInvestreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareInvestreward& from);
  void MergeFrom(const E_WelfareInvestreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_group = 2;
  inline bool has_m_group() const;
  inline void clear_m_group();
  static const int kMGroupFieldNumber = 2;
  inline ::google::protobuf::int32 m_group() const;
  inline void set_m_group(::google::protobuf::int32 value);

  // optional int32 m_lv = 3;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_WelfareInvestrewardItemDesc m_Item = 4;
  inline int m_item_size() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 4;
  inline const ::proto_ff::E_WelfareInvestrewardItemDesc& m_item(int index) const;
  inline ::proto_ff::E_WelfareInvestrewardItemDesc* mutable_m_item(int index);
  inline ::proto_ff::E_WelfareInvestrewardItemDesc* add_m_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestrewardItemDesc >&
      m_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestrewardItemDesc >*
      mutable_m_item();

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareInvestreward)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_group();
  inline void clear_has_m_group();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_group_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestrewardItemDesc > m_item_;
  ::google::protobuf::int32 m_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareInvestreward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareInvestreward : public ::google::protobuf::Message {
 public:
  Sheet_WelfareInvestreward();
  virtual ~Sheet_WelfareInvestreward();

  Sheet_WelfareInvestreward(const Sheet_WelfareInvestreward& from);

  inline Sheet_WelfareInvestreward& operator=(const Sheet_WelfareInvestreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareInvestreward& default_instance();

  void Swap(Sheet_WelfareInvestreward* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareInvestreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareInvestreward& from);
  void MergeFrom(const Sheet_WelfareInvestreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareInvestreward E_WelfareInvestreward_List = 1;
  inline int e_welfareinvestreward_list_size() const;
  inline void clear_e_welfareinvestreward_list();
  static const int kEWelfareInvestrewardListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareInvestreward& e_welfareinvestreward_list(int index) const;
  inline ::proto_ff::E_WelfareInvestreward* mutable_e_welfareinvestreward_list(int index);
  inline ::proto_ff::E_WelfareInvestreward* add_e_welfareinvestreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestreward >&
      e_welfareinvestreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestreward >*
      mutable_e_welfareinvestreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareInvestreward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestreward > e_welfareinvestreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareInvestreward* default_instance_;
};
// -------------------------------------------------------------------

class E_WelfareYttlgift : public ::google::protobuf::Message {
 public:
  E_WelfareYttlgift();
  virtual ~E_WelfareYttlgift();

  E_WelfareYttlgift(const E_WelfareYttlgift& from);

  inline E_WelfareYttlgift& operator=(const E_WelfareYttlgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_WelfareYttlgift& default_instance();

  void Swap(E_WelfareYttlgift* other);

  // implements Message ----------------------------------------------

  E_WelfareYttlgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_WelfareYttlgift& from);
  void MergeFrom(const E_WelfareYttlgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_rechargeId = 2;
  inline bool has_m_rechargeid() const;
  inline void clear_m_rechargeid();
  static const int kMRechargeIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_rechargeid() const;
  inline void set_m_rechargeid(::google::protobuf::int32 value);

  // optional int32 m_reward = 3;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 3;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_WelfareYttlgift)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_rechargeid();
  inline void clear_has_m_rechargeid();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_rechargeid_;
  ::google::protobuf::int32 m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static E_WelfareYttlgift* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_WelfareYttlgift : public ::google::protobuf::Message {
 public:
  Sheet_WelfareYttlgift();
  virtual ~Sheet_WelfareYttlgift();

  Sheet_WelfareYttlgift(const Sheet_WelfareYttlgift& from);

  inline Sheet_WelfareYttlgift& operator=(const Sheet_WelfareYttlgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_WelfareYttlgift& default_instance();

  void Swap(Sheet_WelfareYttlgift* other);

  // implements Message ----------------------------------------------

  Sheet_WelfareYttlgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_WelfareYttlgift& from);
  void MergeFrom(const Sheet_WelfareYttlgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_WelfareYttlgift E_WelfareYttlgift_List = 1;
  inline int e_welfareyttlgift_list_size() const;
  inline void clear_e_welfareyttlgift_list();
  static const int kEWelfareYttlgiftListFieldNumber = 1;
  inline const ::proto_ff::E_WelfareYttlgift& e_welfareyttlgift_list(int index) const;
  inline ::proto_ff::E_WelfareYttlgift* mutable_e_welfareyttlgift_list(int index);
  inline ::proto_ff::E_WelfareYttlgift* add_e_welfareyttlgift_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareYttlgift >&
      e_welfareyttlgift_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareYttlgift >*
      mutable_e_welfareyttlgift_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_WelfareYttlgift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareYttlgift > e_welfareyttlgift_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fWelfare_2eproto();
  friend void protobuf_AssignDesc_E_5fWelfare_2eproto();
  friend void protobuf_ShutdownFile_E_5fWelfare_2eproto();

  void InitAsDefaultInstance();
  static Sheet_WelfareYttlgift* default_instance_;
};
// ===================================================================


// ===================================================================

// E_WelfareSign

// optional int32 m_id = 1;
inline bool E_WelfareSign::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareSign::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareSign::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareSign::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareSign::m_id() const {
  return m_id_;
}
inline void E_WelfareSign::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_month = 2;
inline bool E_WelfareSign::has_m_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareSign::set_has_m_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareSign::clear_has_m_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareSign::clear_m_month() {
  m_month_ = 0;
  clear_has_m_month();
}
inline ::google::protobuf::int32 E_WelfareSign::m_month() const {
  return m_month_;
}
inline void E_WelfareSign::set_m_month(::google::protobuf::int32 value) {
  set_has_m_month();
  m_month_ = value;
}

// optional int32 m_days = 3;
inline bool E_WelfareSign::has_m_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareSign::set_has_m_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareSign::clear_has_m_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareSign::clear_m_days() {
  m_days_ = 0;
  clear_has_m_days();
}
inline ::google::protobuf::int32 E_WelfareSign::m_days() const {
  return m_days_;
}
inline void E_WelfareSign::set_m_days(::google::protobuf::int32 value) {
  set_has_m_days();
  m_days_ = value;
}

// optional int32 m_VIP = 4;
inline bool E_WelfareSign::has_m_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareSign::set_has_m_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareSign::clear_has_m_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareSign::clear_m_vip() {
  m_vip_ = 0;
  clear_has_m_vip();
}
inline ::google::protobuf::int32 E_WelfareSign::m_vip() const {
  return m_vip_;
}
inline void E_WelfareSign::set_m_vip(::google::protobuf::int32 value) {
  set_has_m_vip();
  m_vip_ = value;
}

// optional string m_icon = 5;
inline bool E_WelfareSign::has_m_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareSign::set_has_m_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareSign::clear_has_m_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareSign::clear_m_icon() {
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    m_icon_->clear();
  }
  clear_has_m_icon();
}
inline const ::std::string& E_WelfareSign::m_icon() const {
  return *m_icon_;
}
inline void E_WelfareSign::set_m_icon(const ::std::string& value) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(value);
}
inline void E_WelfareSign::set_m_icon(const char* value) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(value);
}
inline void E_WelfareSign::set_m_icon(const char* value, size_t size) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareSign::mutable_m_icon() {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  return m_icon_;
}
inline ::std::string* E_WelfareSign::release_m_icon() {
  clear_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_icon_;
    m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_WelfareSign::set_allocated_m_icon(::std::string* m_icon) {
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (m_icon) {
    set_has_m_icon();
    m_icon_ = m_icon;
  } else {
    clear_has_m_icon();
    m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_reward = 6;
inline bool E_WelfareSign::has_m_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareSign::set_has_m_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareSign::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareSign::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareSign::m_reward() const {
  return m_reward_;
}
inline void E_WelfareSign::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_rewardNum = 7;
inline bool E_WelfareSign::has_m_rewardnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_WelfareSign::set_has_m_rewardnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_WelfareSign::clear_has_m_rewardnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_WelfareSign::clear_m_rewardnum() {
  m_rewardnum_ = 0;
  clear_has_m_rewardnum();
}
inline ::google::protobuf::int32 E_WelfareSign::m_rewardnum() const {
  return m_rewardnum_;
}
inline void E_WelfareSign::set_m_rewardnum(::google::protobuf::int32 value) {
  set_has_m_rewardnum();
  m_rewardnum_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareSign

// repeated .proto_ff.E_WelfareSign E_WelfareSign_List = 1;
inline int Sheet_WelfareSign::e_welfaresign_list_size() const {
  return e_welfaresign_list_.size();
}
inline void Sheet_WelfareSign::clear_e_welfaresign_list() {
  e_welfaresign_list_.Clear();
}
inline const ::proto_ff::E_WelfareSign& Sheet_WelfareSign::e_welfaresign_list(int index) const {
  return e_welfaresign_list_.Get(index);
}
inline ::proto_ff::E_WelfareSign* Sheet_WelfareSign::mutable_e_welfaresign_list(int index) {
  return e_welfaresign_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareSign* Sheet_WelfareSign::add_e_welfaresign_list() {
  return e_welfaresign_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSign >&
Sheet_WelfareSign::e_welfaresign_list() const {
  return e_welfaresign_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSign >*
Sheet_WelfareSign::mutable_e_welfaresign_list() {
  return &e_welfaresign_list_;
}

// -------------------------------------------------------------------

// E_WelfareAccruereward

// optional int32 m_id = 1;
inline bool E_WelfareAccruereward::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareAccruereward::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareAccruereward::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareAccruereward::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareAccruereward::m_id() const {
  return m_id_;
}
inline void E_WelfareAccruereward::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_month = 2;
inline bool E_WelfareAccruereward::has_m_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareAccruereward::set_has_m_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareAccruereward::clear_has_m_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareAccruereward::clear_m_month() {
  m_month_ = 0;
  clear_has_m_month();
}
inline ::google::protobuf::int32 E_WelfareAccruereward::m_month() const {
  return m_month_;
}
inline void E_WelfareAccruereward::set_m_month(::google::protobuf::int32 value) {
  set_has_m_month();
  m_month_ = value;
}

// optional int32 m_accrueDays = 3;
inline bool E_WelfareAccruereward::has_m_accruedays() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareAccruereward::set_has_m_accruedays() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareAccruereward::clear_has_m_accruedays() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareAccruereward::clear_m_accruedays() {
  m_accruedays_ = 0;
  clear_has_m_accruedays();
}
inline ::google::protobuf::int32 E_WelfareAccruereward::m_accruedays() const {
  return m_accruedays_;
}
inline void E_WelfareAccruereward::set_m_accruedays(::google::protobuf::int32 value) {
  set_has_m_accruedays();
  m_accruedays_ = value;
}

// optional int32 m_reward = 4;
inline bool E_WelfareAccruereward::has_m_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareAccruereward::set_has_m_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareAccruereward::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareAccruereward::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareAccruereward::m_reward() const {
  return m_reward_;
}
inline void E_WelfareAccruereward::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_rewardNum = 5;
inline bool E_WelfareAccruereward::has_m_rewardnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareAccruereward::set_has_m_rewardnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareAccruereward::clear_has_m_rewardnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareAccruereward::clear_m_rewardnum() {
  m_rewardnum_ = 0;
  clear_has_m_rewardnum();
}
inline ::google::protobuf::int32 E_WelfareAccruereward::m_rewardnum() const {
  return m_rewardnum_;
}
inline void E_WelfareAccruereward::set_m_rewardnum(::google::protobuf::int32 value) {
  set_has_m_rewardnum();
  m_rewardnum_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareAccruereward

// repeated .proto_ff.E_WelfareAccruereward E_WelfareAccruereward_List = 1;
inline int Sheet_WelfareAccruereward::e_welfareaccruereward_list_size() const {
  return e_welfareaccruereward_list_.size();
}
inline void Sheet_WelfareAccruereward::clear_e_welfareaccruereward_list() {
  e_welfareaccruereward_list_.Clear();
}
inline const ::proto_ff::E_WelfareAccruereward& Sheet_WelfareAccruereward::e_welfareaccruereward_list(int index) const {
  return e_welfareaccruereward_list_.Get(index);
}
inline ::proto_ff::E_WelfareAccruereward* Sheet_WelfareAccruereward::mutable_e_welfareaccruereward_list(int index) {
  return e_welfareaccruereward_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareAccruereward* Sheet_WelfareAccruereward::add_e_welfareaccruereward_list() {
  return e_welfareaccruereward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareAccruereward >&
Sheet_WelfareAccruereward::e_welfareaccruereward_list() const {
  return e_welfareaccruereward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareAccruereward >*
Sheet_WelfareAccruereward::mutable_e_welfareaccruereward_list() {
  return &e_welfareaccruereward_list_;
}

// -------------------------------------------------------------------

// E_WelfareLvreward

// optional int32 m_id = 1;
inline bool E_WelfareLvreward::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareLvreward::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareLvreward::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareLvreward::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareLvreward::m_id() const {
  return m_id_;
}
inline void E_WelfareLvreward::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_lv = 2;
inline bool E_WelfareLvreward::has_m_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareLvreward::set_has_m_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareLvreward::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareLvreward::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_WelfareLvreward::m_lv() const {
  return m_lv_;
}
inline void E_WelfareLvreward::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_lvReward = 3;
inline bool E_WelfareLvreward::has_m_lvreward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareLvreward::set_has_m_lvreward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareLvreward::clear_has_m_lvreward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareLvreward::clear_m_lvreward() {
  m_lvreward_ = 0;
  clear_has_m_lvreward();
}
inline ::google::protobuf::int32 E_WelfareLvreward::m_lvreward() const {
  return m_lvreward_;
}
inline void E_WelfareLvreward::set_m_lvreward(::google::protobuf::int32 value) {
  set_has_m_lvreward();
  m_lvreward_ = value;
}

// optional int32 m_vip = 4;
inline bool E_WelfareLvreward::has_m_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareLvreward::set_has_m_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareLvreward::clear_has_m_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareLvreward::clear_m_vip() {
  m_vip_ = 0;
  clear_has_m_vip();
}
inline ::google::protobuf::int32 E_WelfareLvreward::m_vip() const {
  return m_vip_;
}
inline void E_WelfareLvreward::set_m_vip(::google::protobuf::int32 value) {
  set_has_m_vip();
  m_vip_ = value;
}

// optional int32 m_vipReward = 5;
inline bool E_WelfareLvreward::has_m_vipreward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareLvreward::set_has_m_vipreward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareLvreward::clear_has_m_vipreward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareLvreward::clear_m_vipreward() {
  m_vipreward_ = 0;
  clear_has_m_vipreward();
}
inline ::google::protobuf::int32 E_WelfareLvreward::m_vipreward() const {
  return m_vipreward_;
}
inline void E_WelfareLvreward::set_m_vipreward(::google::protobuf::int32 value) {
  set_has_m_vipreward();
  m_vipreward_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareLvreward

// repeated .proto_ff.E_WelfareLvreward E_WelfareLvreward_List = 1;
inline int Sheet_WelfareLvreward::e_welfarelvreward_list_size() const {
  return e_welfarelvreward_list_.size();
}
inline void Sheet_WelfareLvreward::clear_e_welfarelvreward_list() {
  e_welfarelvreward_list_.Clear();
}
inline const ::proto_ff::E_WelfareLvreward& Sheet_WelfareLvreward::e_welfarelvreward_list(int index) const {
  return e_welfarelvreward_list_.Get(index);
}
inline ::proto_ff::E_WelfareLvreward* Sheet_WelfareLvreward::mutable_e_welfarelvreward_list(int index) {
  return e_welfarelvreward_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareLvreward* Sheet_WelfareLvreward::add_e_welfarelvreward_list() {
  return e_welfarelvreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLvreward >&
Sheet_WelfareLvreward::e_welfarelvreward_list() const {
  return e_welfarelvreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLvreward >*
Sheet_WelfareLvreward::mutable_e_welfarelvreward_list() {
  return &e_welfarelvreward_list_;
}

// -------------------------------------------------------------------

// E_WelfareOnline

// optional int32 m_id = 1;
inline bool E_WelfareOnline::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareOnline::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareOnline::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareOnline::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareOnline::m_id() const {
  return m_id_;
}
inline void E_WelfareOnline::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_onlineTime = 2;
inline bool E_WelfareOnline::has_m_onlinetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareOnline::set_has_m_onlinetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareOnline::clear_has_m_onlinetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareOnline::clear_m_onlinetime() {
  m_onlinetime_ = 0;
  clear_has_m_onlinetime();
}
inline ::google::protobuf::int32 E_WelfareOnline::m_onlinetime() const {
  return m_onlinetime_;
}
inline void E_WelfareOnline::set_m_onlinetime(::google::protobuf::int32 value) {
  set_has_m_onlinetime();
  m_onlinetime_ = value;
}

// optional int32 m_lvReward = 3;
inline bool E_WelfareOnline::has_m_lvreward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareOnline::set_has_m_lvreward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareOnline::clear_has_m_lvreward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareOnline::clear_m_lvreward() {
  m_lvreward_ = 0;
  clear_has_m_lvreward();
}
inline ::google::protobuf::int32 E_WelfareOnline::m_lvreward() const {
  return m_lvreward_;
}
inline void E_WelfareOnline::set_m_lvreward(::google::protobuf::int32 value) {
  set_has_m_lvreward();
  m_lvreward_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareOnline

// repeated .proto_ff.E_WelfareOnline E_WelfareOnline_List = 1;
inline int Sheet_WelfareOnline::e_welfareonline_list_size() const {
  return e_welfareonline_list_.size();
}
inline void Sheet_WelfareOnline::clear_e_welfareonline_list() {
  e_welfareonline_list_.Clear();
}
inline const ::proto_ff::E_WelfareOnline& Sheet_WelfareOnline::e_welfareonline_list(int index) const {
  return e_welfareonline_list_.Get(index);
}
inline ::proto_ff::E_WelfareOnline* Sheet_WelfareOnline::mutable_e_welfareonline_list(int index) {
  return e_welfareonline_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareOnline* Sheet_WelfareOnline::add_e_welfareonline_list() {
  return e_welfareonline_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareOnline >&
Sheet_WelfareOnline::e_welfareonline_list() const {
  return e_welfareonline_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareOnline >*
Sheet_WelfareOnline::mutable_e_welfareonline_list() {
  return &e_welfareonline_list_;
}

// -------------------------------------------------------------------

// E_WelfareFraud

// optional int32 m_id = 1;
inline bool E_WelfareFraud::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareFraud::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareFraud::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareFraud::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareFraud::m_id() const {
  return m_id_;
}
inline void E_WelfareFraud::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_picture = 2;
inline bool E_WelfareFraud::has_m_picture() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareFraud::set_has_m_picture() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareFraud::clear_has_m_picture() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareFraud::clear_m_picture() {
  if (m_picture_ != &::google::protobuf::internal::kEmptyString) {
    m_picture_->clear();
  }
  clear_has_m_picture();
}
inline const ::std::string& E_WelfareFraud::m_picture() const {
  return *m_picture_;
}
inline void E_WelfareFraud::set_m_picture(const ::std::string& value) {
  set_has_m_picture();
  if (m_picture_ == &::google::protobuf::internal::kEmptyString) {
    m_picture_ = new ::std::string;
  }
  m_picture_->assign(value);
}
inline void E_WelfareFraud::set_m_picture(const char* value) {
  set_has_m_picture();
  if (m_picture_ == &::google::protobuf::internal::kEmptyString) {
    m_picture_ = new ::std::string;
  }
  m_picture_->assign(value);
}
inline void E_WelfareFraud::set_m_picture(const char* value, size_t size) {
  set_has_m_picture();
  if (m_picture_ == &::google::protobuf::internal::kEmptyString) {
    m_picture_ = new ::std::string;
  }
  m_picture_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareFraud::mutable_m_picture() {
  set_has_m_picture();
  if (m_picture_ == &::google::protobuf::internal::kEmptyString) {
    m_picture_ = new ::std::string;
  }
  return m_picture_;
}
inline ::std::string* E_WelfareFraud::release_m_picture() {
  clear_has_m_picture();
  if (m_picture_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_picture_;
    m_picture_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_WelfareFraud::set_allocated_m_picture(::std::string* m_picture) {
  if (m_picture_ != &::google::protobuf::internal::kEmptyString) {
    delete m_picture_;
  }
  if (m_picture) {
    set_has_m_picture();
    m_picture_ = m_picture;
  } else {
    clear_has_m_picture();
    m_picture_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_correct = 3;
inline bool E_WelfareFraud::has_m_correct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareFraud::set_has_m_correct() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareFraud::clear_has_m_correct() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareFraud::clear_m_correct() {
  m_correct_ = 0;
  clear_has_m_correct();
}
inline ::google::protobuf::int32 E_WelfareFraud::m_correct() const {
  return m_correct_;
}
inline void E_WelfareFraud::set_m_correct(::google::protobuf::int32 value) {
  set_has_m_correct();
  m_correct_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareFraud

// repeated .proto_ff.E_WelfareFraud E_WelfareFraud_List = 1;
inline int Sheet_WelfareFraud::e_welfarefraud_list_size() const {
  return e_welfarefraud_list_.size();
}
inline void Sheet_WelfareFraud::clear_e_welfarefraud_list() {
  e_welfarefraud_list_.Clear();
}
inline const ::proto_ff::E_WelfareFraud& Sheet_WelfareFraud::e_welfarefraud_list(int index) const {
  return e_welfarefraud_list_.Get(index);
}
inline ::proto_ff::E_WelfareFraud* Sheet_WelfareFraud::mutable_e_welfarefraud_list(int index) {
  return e_welfarefraud_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareFraud* Sheet_WelfareFraud::add_e_welfarefraud_list() {
  return e_welfarefraud_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFraud >&
Sheet_WelfareFraud::e_welfarefraud_list() const {
  return e_welfarefraud_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFraud >*
Sheet_WelfareFraud::mutable_e_welfarefraud_list() {
  return &e_welfarefraud_list_;
}

// -------------------------------------------------------------------

// E_WelfareWeekendgift

// optional int32 m_id = 1;
inline bool E_WelfareWeekendgift::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareWeekendgift::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareWeekendgift::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareWeekendgift::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareWeekendgift::m_id() const {
  return m_id_;
}
inline void E_WelfareWeekendgift::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_lvMin = 2;
inline bool E_WelfareWeekendgift::has_m_lvmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareWeekendgift::set_has_m_lvmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareWeekendgift::clear_has_m_lvmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareWeekendgift::clear_m_lvmin() {
  m_lvmin_ = 0;
  clear_has_m_lvmin();
}
inline ::google::protobuf::int32 E_WelfareWeekendgift::m_lvmin() const {
  return m_lvmin_;
}
inline void E_WelfareWeekendgift::set_m_lvmin(::google::protobuf::int32 value) {
  set_has_m_lvmin();
  m_lvmin_ = value;
}

// optional int32 m_lvMax = 3;
inline bool E_WelfareWeekendgift::has_m_lvmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareWeekendgift::set_has_m_lvmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareWeekendgift::clear_has_m_lvmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareWeekendgift::clear_m_lvmax() {
  m_lvmax_ = 0;
  clear_has_m_lvmax();
}
inline ::google::protobuf::int32 E_WelfareWeekendgift::m_lvmax() const {
  return m_lvmax_;
}
inline void E_WelfareWeekendgift::set_m_lvmax(::google::protobuf::int32 value) {
  set_has_m_lvmax();
  m_lvmax_ = value;
}

// optional int32 m_date = 4;
inline bool E_WelfareWeekendgift::has_m_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareWeekendgift::set_has_m_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareWeekendgift::clear_has_m_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareWeekendgift::clear_m_date() {
  m_date_ = 0;
  clear_has_m_date();
}
inline ::google::protobuf::int32 E_WelfareWeekendgift::m_date() const {
  return m_date_;
}
inline void E_WelfareWeekendgift::set_m_date(::google::protobuf::int32 value) {
  set_has_m_date();
  m_date_ = value;
}

// repeated int32 m_rewards = 5;
inline int E_WelfareWeekendgift::m_rewards_size() const {
  return m_rewards_.size();
}
inline void E_WelfareWeekendgift::clear_m_rewards() {
  m_rewards_.Clear();
}
inline ::google::protobuf::int32 E_WelfareWeekendgift::m_rewards(int index) const {
  return m_rewards_.Get(index);
}
inline void E_WelfareWeekendgift::set_m_rewards(int index, ::google::protobuf::int32 value) {
  m_rewards_.Set(index, value);
}
inline void E_WelfareWeekendgift::add_m_rewards(::google::protobuf::int32 value) {
  m_rewards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_WelfareWeekendgift::m_rewards() const {
  return m_rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_WelfareWeekendgift::mutable_m_rewards() {
  return &m_rewards_;
}

// -------------------------------------------------------------------

// Sheet_WelfareWeekendgift

// repeated .proto_ff.E_WelfareWeekendgift E_WelfareWeekendgift_List = 1;
inline int Sheet_WelfareWeekendgift::e_welfareweekendgift_list_size() const {
  return e_welfareweekendgift_list_.size();
}
inline void Sheet_WelfareWeekendgift::clear_e_welfareweekendgift_list() {
  e_welfareweekendgift_list_.Clear();
}
inline const ::proto_ff::E_WelfareWeekendgift& Sheet_WelfareWeekendgift::e_welfareweekendgift_list(int index) const {
  return e_welfareweekendgift_list_.Get(index);
}
inline ::proto_ff::E_WelfareWeekendgift* Sheet_WelfareWeekendgift::mutable_e_welfareweekendgift_list(int index) {
  return e_welfareweekendgift_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareWeekendgift* Sheet_WelfareWeekendgift::add_e_welfareweekendgift_list() {
  return e_welfareweekendgift_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWeekendgift >&
Sheet_WelfareWeekendgift::e_welfareweekendgift_list() const {
  return e_welfareweekendgift_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWeekendgift >*
Sheet_WelfareWeekendgift::mutable_e_welfareweekendgift_list() {
  return &e_welfareweekendgift_list_;
}

// -------------------------------------------------------------------

// E_WelfareConstant

// optional int32 m_id = 1;
inline bool E_WelfareConstant::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareConstant::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareConstant::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareConstant::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_id() const {
  return m_id_;
}
inline void E_WelfareConstant::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_addSigncost = 2;
inline bool E_WelfareConstant::has_m_addsigncost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareConstant::set_has_m_addsigncost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareConstant::clear_has_m_addsigncost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareConstant::clear_m_addsigncost() {
  m_addsigncost_ = 0;
  clear_has_m_addsigncost();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_addsigncost() const {
  return m_addsigncost_;
}
inline void E_WelfareConstant::set_m_addsigncost(::google::protobuf::int32 value) {
  set_has_m_addsigncost();
  m_addsigncost_ = value;
}

// optional int32 m_addSignprice = 3;
inline bool E_WelfareConstant::has_m_addsignprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareConstant::set_has_m_addsignprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareConstant::clear_has_m_addsignprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareConstant::clear_m_addsignprice() {
  m_addsignprice_ = 0;
  clear_has_m_addsignprice();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_addsignprice() const {
  return m_addsignprice_;
}
inline void E_WelfareConstant::set_m_addsignprice(::google::protobuf::int32 value) {
  set_has_m_addsignprice();
  m_addsignprice_ = value;
}

// optional int32 m_noticeReward = 4;
inline bool E_WelfareConstant::has_m_noticereward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareConstant::set_has_m_noticereward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareConstant::clear_has_m_noticereward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareConstant::clear_m_noticereward() {
  m_noticereward_ = 0;
  clear_has_m_noticereward();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_noticereward() const {
  return m_noticereward_;
}
inline void E_WelfareConstant::set_m_noticereward(::google::protobuf::int32 value) {
  set_has_m_noticereward();
  m_noticereward_ = value;
}

// optional int32 m_wrongMin = 5;
inline bool E_WelfareConstant::has_m_wrongmin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareConstant::set_has_m_wrongmin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareConstant::clear_has_m_wrongmin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareConstant::clear_m_wrongmin() {
  m_wrongmin_ = 0;
  clear_has_m_wrongmin();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_wrongmin() const {
  return m_wrongmin_;
}
inline void E_WelfareConstant::set_m_wrongmin(::google::protobuf::int32 value) {
  set_has_m_wrongmin();
  m_wrongmin_ = value;
}

// optional int32 m_wrongMax = 6;
inline bool E_WelfareConstant::has_m_wrongmax() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareConstant::set_has_m_wrongmax() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareConstant::clear_has_m_wrongmax() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareConstant::clear_m_wrongmax() {
  m_wrongmax_ = 0;
  clear_has_m_wrongmax();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_wrongmax() const {
  return m_wrongmax_;
}
inline void E_WelfareConstant::set_m_wrongmax(::google::protobuf::int32 value) {
  set_has_m_wrongmax();
  m_wrongmax_ = value;
}

// optional int32 m_fraudReward = 7;
inline bool E_WelfareConstant::has_m_fraudreward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_WelfareConstant::set_has_m_fraudreward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_WelfareConstant::clear_has_m_fraudreward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_WelfareConstant::clear_m_fraudreward() {
  m_fraudreward_ = 0;
  clear_has_m_fraudreward();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_fraudreward() const {
  return m_fraudreward_;
}
inline void E_WelfareConstant::set_m_fraudreward(::google::protobuf::int32 value) {
  set_has_m_fraudreward();
  m_fraudreward_ = value;
}

// optional int32 m_firstRcharge = 8;
inline bool E_WelfareConstant::has_m_firstrcharge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_WelfareConstant::set_has_m_firstrcharge() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_WelfareConstant::clear_has_m_firstrcharge() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_WelfareConstant::clear_m_firstrcharge() {
  m_firstrcharge_ = 0;
  clear_has_m_firstrcharge();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_firstrcharge() const {
  return m_firstrcharge_;
}
inline void E_WelfareConstant::set_m_firstrcharge(::google::protobuf::int32 value) {
  set_has_m_firstrcharge();
  m_firstrcharge_ = value;
}

// optional int32 m_secondRcharge = 9;
inline bool E_WelfareConstant::has_m_secondrcharge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_WelfareConstant::set_has_m_secondrcharge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_WelfareConstant::clear_has_m_secondrcharge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_WelfareConstant::clear_m_secondrcharge() {
  m_secondrcharge_ = 0;
  clear_has_m_secondrcharge();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_secondrcharge() const {
  return m_secondrcharge_;
}
inline void E_WelfareConstant::set_m_secondrcharge(::google::protobuf::int32 value) {
  set_has_m_secondrcharge();
  m_secondrcharge_ = value;
}

// optional int32 m_gemMB = 10;
inline bool E_WelfareConstant::has_m_gemmb() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_WelfareConstant::set_has_m_gemmb() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_WelfareConstant::clear_has_m_gemmb() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_WelfareConstant::clear_m_gemmb() {
  m_gemmb_ = 0;
  clear_has_m_gemmb();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_gemmb() const {
  return m_gemmb_;
}
inline void E_WelfareConstant::set_m_gemmb(::google::protobuf::int32 value) {
  set_has_m_gemmb();
  m_gemmb_ = value;
}

// optional int32 m_starMB = 11;
inline bool E_WelfareConstant::has_m_starmb() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_WelfareConstant::set_has_m_starmb() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_WelfareConstant::clear_has_m_starmb() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_WelfareConstant::clear_m_starmb() {
  m_starmb_ = 0;
  clear_has_m_starmb();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_starmb() const {
  return m_starmb_;
}
inline void E_WelfareConstant::set_m_starmb(::google::protobuf::int32 value) {
  set_has_m_starmb();
  m_starmb_ = value;
}

// optional int32 m_kingMB = 12;
inline bool E_WelfareConstant::has_m_kingmb() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_WelfareConstant::set_has_m_kingmb() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_WelfareConstant::clear_has_m_kingmb() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_WelfareConstant::clear_m_kingmb() {
  m_kingmb_ = 0;
  clear_has_m_kingmb();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_kingmb() const {
  return m_kingmb_;
}
inline void E_WelfareConstant::set_m_kingmb(::google::protobuf::int32 value) {
  set_has_m_kingmb();
  m_kingmb_ = value;
}

// optional int32 m_keyRebate = 13;
inline bool E_WelfareConstant::has_m_keyrebate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_WelfareConstant::set_has_m_keyrebate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_WelfareConstant::clear_has_m_keyrebate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_WelfareConstant::clear_m_keyrebate() {
  m_keyrebate_ = 0;
  clear_has_m_keyrebate();
}
inline ::google::protobuf::int32 E_WelfareConstant::m_keyrebate() const {
  return m_keyrebate_;
}
inline void E_WelfareConstant::set_m_keyrebate(::google::protobuf::int32 value) {
  set_has_m_keyrebate();
  m_keyrebate_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareConstant

// repeated .proto_ff.E_WelfareConstant E_WelfareConstant_List = 1;
inline int Sheet_WelfareConstant::e_welfareconstant_list_size() const {
  return e_welfareconstant_list_.size();
}
inline void Sheet_WelfareConstant::clear_e_welfareconstant_list() {
  e_welfareconstant_list_.Clear();
}
inline const ::proto_ff::E_WelfareConstant& Sheet_WelfareConstant::e_welfareconstant_list(int index) const {
  return e_welfareconstant_list_.Get(index);
}
inline ::proto_ff::E_WelfareConstant* Sheet_WelfareConstant::mutable_e_welfareconstant_list(int index) {
  return e_welfareconstant_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareConstant* Sheet_WelfareConstant::add_e_welfareconstant_list() {
  return e_welfareconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareConstant >&
Sheet_WelfareConstant::e_welfareconstant_list() const {
  return e_welfareconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareConstant >*
Sheet_WelfareConstant::mutable_e_welfareconstant_list() {
  return &e_welfareconstant_list_;
}

// -------------------------------------------------------------------

// E_WelfareQifu

// optional int32 m_constantid = 1;
inline bool E_WelfareQifu::has_m_constantid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareQifu::set_has_m_constantid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareQifu::clear_has_m_constantid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareQifu::clear_m_constantid() {
  m_constantid_ = 0;
  clear_has_m_constantid();
}
inline ::google::protobuf::int32 E_WelfareQifu::m_constantid() const {
  return m_constantid_;
}
inline void E_WelfareQifu::set_m_constantid(::google::protobuf::int32 value) {
  set_has_m_constantid();
  m_constantid_ = value;
}

// optional int32 m_constantdata = 2;
inline bool E_WelfareQifu::has_m_constantdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareQifu::set_has_m_constantdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareQifu::clear_has_m_constantdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareQifu::clear_m_constantdata() {
  m_constantdata_ = 0;
  clear_has_m_constantdata();
}
inline ::google::protobuf::int32 E_WelfareQifu::m_constantdata() const {
  return m_constantdata_;
}
inline void E_WelfareQifu::set_m_constantdata(::google::protobuf::int32 value) {
  set_has_m_constantdata();
  m_constantdata_ = value;
}

// optional string m_stringdata = 3;
inline bool E_WelfareQifu::has_m_stringdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareQifu::set_has_m_stringdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareQifu::clear_has_m_stringdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareQifu::clear_m_stringdata() {
  if (m_stringdata_ != &::google::protobuf::internal::kEmptyString) {
    m_stringdata_->clear();
  }
  clear_has_m_stringdata();
}
inline const ::std::string& E_WelfareQifu::m_stringdata() const {
  return *m_stringdata_;
}
inline void E_WelfareQifu::set_m_stringdata(const ::std::string& value) {
  set_has_m_stringdata();
  if (m_stringdata_ == &::google::protobuf::internal::kEmptyString) {
    m_stringdata_ = new ::std::string;
  }
  m_stringdata_->assign(value);
}
inline void E_WelfareQifu::set_m_stringdata(const char* value) {
  set_has_m_stringdata();
  if (m_stringdata_ == &::google::protobuf::internal::kEmptyString) {
    m_stringdata_ = new ::std::string;
  }
  m_stringdata_->assign(value);
}
inline void E_WelfareQifu::set_m_stringdata(const char* value, size_t size) {
  set_has_m_stringdata();
  if (m_stringdata_ == &::google::protobuf::internal::kEmptyString) {
    m_stringdata_ = new ::std::string;
  }
  m_stringdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareQifu::mutable_m_stringdata() {
  set_has_m_stringdata();
  if (m_stringdata_ == &::google::protobuf::internal::kEmptyString) {
    m_stringdata_ = new ::std::string;
  }
  return m_stringdata_;
}
inline ::std::string* E_WelfareQifu::release_m_stringdata() {
  clear_has_m_stringdata();
  if (m_stringdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_stringdata_;
    m_stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_WelfareQifu::set_allocated_m_stringdata(::std::string* m_stringdata) {
  if (m_stringdata_ != &::google::protobuf::internal::kEmptyString) {
    delete m_stringdata_;
  }
  if (m_stringdata) {
    set_has_m_stringdata();
    m_stringdata_ = m_stringdata;
  } else {
    clear_has_m_stringdata();
    m_stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_WelfareQifu

// repeated .proto_ff.E_WelfareQifu E_WelfareQifu_List = 1;
inline int Sheet_WelfareQifu::e_welfareqifu_list_size() const {
  return e_welfareqifu_list_.size();
}
inline void Sheet_WelfareQifu::clear_e_welfareqifu_list() {
  e_welfareqifu_list_.Clear();
}
inline const ::proto_ff::E_WelfareQifu& Sheet_WelfareQifu::e_welfareqifu_list(int index) const {
  return e_welfareqifu_list_.Get(index);
}
inline ::proto_ff::E_WelfareQifu* Sheet_WelfareQifu::mutable_e_welfareqifu_list(int index) {
  return e_welfareqifu_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareQifu* Sheet_WelfareQifu::add_e_welfareqifu_list() {
  return e_welfareqifu_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareQifu >&
Sheet_WelfareQifu::e_welfareqifu_list() const {
  return e_welfareqifu_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareQifu >*
Sheet_WelfareQifu::mutable_e_welfareqifu_list() {
  return &e_welfareqifu_list_;
}

// -------------------------------------------------------------------

// E_WelfareWish

// optional int32 m_level = 1;
inline bool E_WelfareWish::has_m_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareWish::set_has_m_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareWish::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareWish::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 E_WelfareWish::m_level() const {
  return m_level_;
}
inline void E_WelfareWish::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int64 m_exp = 2;
inline bool E_WelfareWish::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareWish::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareWish::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareWish::clear_m_exp() {
  m_exp_ = GOOGLE_LONGLONG(0);
  clear_has_m_exp();
}
inline ::google::protobuf::int64 E_WelfareWish::m_exp() const {
  return m_exp_;
}
inline void E_WelfareWish::set_m_exp(::google::protobuf::int64 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareWish

// repeated .proto_ff.E_WelfareWish E_WelfareWish_List = 1;
inline int Sheet_WelfareWish::e_welfarewish_list_size() const {
  return e_welfarewish_list_.size();
}
inline void Sheet_WelfareWish::clear_e_welfarewish_list() {
  e_welfarewish_list_.Clear();
}
inline const ::proto_ff::E_WelfareWish& Sheet_WelfareWish::e_welfarewish_list(int index) const {
  return e_welfarewish_list_.Get(index);
}
inline ::proto_ff::E_WelfareWish* Sheet_WelfareWish::mutable_e_welfarewish_list(int index) {
  return e_welfarewish_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareWish* Sheet_WelfareWish::add_e_welfarewish_list() {
  return e_welfarewish_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWish >&
Sheet_WelfareWish::e_welfarewish_list() const {
  return e_welfarewish_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareWish >*
Sheet_WelfareWish::mutable_e_welfarewish_list() {
  return &e_welfarewish_list_;
}

// -------------------------------------------------------------------

// E_WelfareLogon

// optional int32 m_days = 1;
inline bool E_WelfareLogon::has_m_days() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareLogon::set_has_m_days() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareLogon::clear_has_m_days() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareLogon::clear_m_days() {
  m_days_ = 0;
  clear_has_m_days();
}
inline ::google::protobuf::int32 E_WelfareLogon::m_days() const {
  return m_days_;
}
inline void E_WelfareLogon::set_m_days(::google::protobuf::int32 value) {
  set_has_m_days();
  m_days_ = value;
}

// optional int32 m_type = 2;
inline bool E_WelfareLogon::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareLogon::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareLogon::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareLogon::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_WelfareLogon::m_type() const {
  return m_type_;
}
inline void E_WelfareLogon::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_icon = 3;
inline bool E_WelfareLogon::has_m_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareLogon::set_has_m_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareLogon::clear_has_m_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareLogon::clear_m_icon() {
  m_icon_ = 0;
  clear_has_m_icon();
}
inline ::google::protobuf::int32 E_WelfareLogon::m_icon() const {
  return m_icon_;
}
inline void E_WelfareLogon::set_m_icon(::google::protobuf::int32 value) {
  set_has_m_icon();
  m_icon_ = value;
}

// optional int32 m_showItem = 4;
inline bool E_WelfareLogon::has_m_showitem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareLogon::set_has_m_showitem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareLogon::clear_has_m_showitem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareLogon::clear_m_showitem() {
  m_showitem_ = 0;
  clear_has_m_showitem();
}
inline ::google::protobuf::int32 E_WelfareLogon::m_showitem() const {
  return m_showitem_;
}
inline void E_WelfareLogon::set_m_showitem(::google::protobuf::int32 value) {
  set_has_m_showitem();
  m_showitem_ = value;
}

// optional int32 m_reward = 5;
inline bool E_WelfareLogon::has_m_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareLogon::set_has_m_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareLogon::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareLogon::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareLogon::m_reward() const {
  return m_reward_;
}
inline void E_WelfareLogon::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareLogon

// repeated .proto_ff.E_WelfareLogon E_WelfareLogon_List = 1;
inline int Sheet_WelfareLogon::e_welfarelogon_list_size() const {
  return e_welfarelogon_list_.size();
}
inline void Sheet_WelfareLogon::clear_e_welfarelogon_list() {
  e_welfarelogon_list_.Clear();
}
inline const ::proto_ff::E_WelfareLogon& Sheet_WelfareLogon::e_welfarelogon_list(int index) const {
  return e_welfarelogon_list_.Get(index);
}
inline ::proto_ff::E_WelfareLogon* Sheet_WelfareLogon::mutable_e_welfarelogon_list(int index) {
  return e_welfarelogon_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareLogon* Sheet_WelfareLogon::add_e_welfarelogon_list() {
  return e_welfarelogon_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLogon >&
Sheet_WelfareLogon::e_welfarelogon_list() const {
  return e_welfarelogon_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLogon >*
Sheet_WelfareLogon::mutable_e_welfarelogon_list() {
  return &e_welfarelogon_list_;
}

// -------------------------------------------------------------------

// E_WelfareFirstcharge

// optional int32 m_constantid = 1;
inline bool E_WelfareFirstcharge::has_m_constantid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareFirstcharge::set_has_m_constantid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareFirstcharge::clear_has_m_constantid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareFirstcharge::clear_m_constantid() {
  m_constantid_ = 0;
  clear_has_m_constantid();
}
inline ::google::protobuf::int32 E_WelfareFirstcharge::m_constantid() const {
  return m_constantid_;
}
inline void E_WelfareFirstcharge::set_m_constantid(::google::protobuf::int32 value) {
  set_has_m_constantid();
  m_constantid_ = value;
}

// optional int32 m_openlv = 2;
inline bool E_WelfareFirstcharge::has_m_openlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareFirstcharge::set_has_m_openlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareFirstcharge::clear_has_m_openlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareFirstcharge::clear_m_openlv() {
  m_openlv_ = 0;
  clear_has_m_openlv();
}
inline ::google::protobuf::int32 E_WelfareFirstcharge::m_openlv() const {
  return m_openlv_;
}
inline void E_WelfareFirstcharge::set_m_openlv(::google::protobuf::int32 value) {
  set_has_m_openlv();
  m_openlv_ = value;
}

// optional int32 m_type = 3;
inline bool E_WelfareFirstcharge::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareFirstcharge::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareFirstcharge::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareFirstcharge::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_WelfareFirstcharge::m_type() const {
  return m_type_;
}
inline void E_WelfareFirstcharge::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_openDays = 4;
inline bool E_WelfareFirstcharge::has_m_opendays() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareFirstcharge::set_has_m_opendays() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareFirstcharge::clear_has_m_opendays() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareFirstcharge::clear_m_opendays() {
  m_opendays_ = 0;
  clear_has_m_opendays();
}
inline ::google::protobuf::int32 E_WelfareFirstcharge::m_opendays() const {
  return m_opendays_;
}
inline void E_WelfareFirstcharge::set_m_opendays(::google::protobuf::int32 value) {
  set_has_m_opendays();
  m_opendays_ = value;
}

// optional int32 m_reward = 5;
inline bool E_WelfareFirstcharge::has_m_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareFirstcharge::set_has_m_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareFirstcharge::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareFirstcharge::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareFirstcharge::m_reward() const {
  return m_reward_;
}
inline void E_WelfareFirstcharge::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// repeated string m_model = 6;
inline int E_WelfareFirstcharge::m_model_size() const {
  return m_model_.size();
}
inline void E_WelfareFirstcharge::clear_m_model() {
  m_model_.Clear();
}
inline const ::std::string& E_WelfareFirstcharge::m_model(int index) const {
  return m_model_.Get(index);
}
inline ::std::string* E_WelfareFirstcharge::mutable_m_model(int index) {
  return m_model_.Mutable(index);
}
inline void E_WelfareFirstcharge::set_m_model(int index, const ::std::string& value) {
  m_model_.Mutable(index)->assign(value);
}
inline void E_WelfareFirstcharge::set_m_model(int index, const char* value) {
  m_model_.Mutable(index)->assign(value);
}
inline void E_WelfareFirstcharge::set_m_model(int index, const char* value, size_t size) {
  m_model_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareFirstcharge::add_m_model() {
  return m_model_.Add();
}
inline void E_WelfareFirstcharge::add_m_model(const ::std::string& value) {
  m_model_.Add()->assign(value);
}
inline void E_WelfareFirstcharge::add_m_model(const char* value) {
  m_model_.Add()->assign(value);
}
inline void E_WelfareFirstcharge::add_m_model(const char* value, size_t size) {
  m_model_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_WelfareFirstcharge::m_model() const {
  return m_model_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_WelfareFirstcharge::mutable_m_model() {
  return &m_model_;
}

// repeated int32 m_rewardShow = 7;
inline int E_WelfareFirstcharge::m_rewardshow_size() const {
  return m_rewardshow_.size();
}
inline void E_WelfareFirstcharge::clear_m_rewardshow() {
  m_rewardshow_.Clear();
}
inline ::google::protobuf::int32 E_WelfareFirstcharge::m_rewardshow(int index) const {
  return m_rewardshow_.Get(index);
}
inline void E_WelfareFirstcharge::set_m_rewardshow(int index, ::google::protobuf::int32 value) {
  m_rewardshow_.Set(index, value);
}
inline void E_WelfareFirstcharge::add_m_rewardshow(::google::protobuf::int32 value) {
  m_rewardshow_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_WelfareFirstcharge::m_rewardshow() const {
  return m_rewardshow_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_WelfareFirstcharge::mutable_m_rewardshow() {
  return &m_rewardshow_;
}

// repeated string m_rewardDes = 8;
inline int E_WelfareFirstcharge::m_rewarddes_size() const {
  return m_rewarddes_.size();
}
inline void E_WelfareFirstcharge::clear_m_rewarddes() {
  m_rewarddes_.Clear();
}
inline const ::std::string& E_WelfareFirstcharge::m_rewarddes(int index) const {
  return m_rewarddes_.Get(index);
}
inline ::std::string* E_WelfareFirstcharge::mutable_m_rewarddes(int index) {
  return m_rewarddes_.Mutable(index);
}
inline void E_WelfareFirstcharge::set_m_rewarddes(int index, const ::std::string& value) {
  m_rewarddes_.Mutable(index)->assign(value);
}
inline void E_WelfareFirstcharge::set_m_rewarddes(int index, const char* value) {
  m_rewarddes_.Mutable(index)->assign(value);
}
inline void E_WelfareFirstcharge::set_m_rewarddes(int index, const char* value, size_t size) {
  m_rewarddes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareFirstcharge::add_m_rewarddes() {
  return m_rewarddes_.Add();
}
inline void E_WelfareFirstcharge::add_m_rewarddes(const ::std::string& value) {
  m_rewarddes_.Add()->assign(value);
}
inline void E_WelfareFirstcharge::add_m_rewarddes(const char* value) {
  m_rewarddes_.Add()->assign(value);
}
inline void E_WelfareFirstcharge::add_m_rewarddes(const char* value, size_t size) {
  m_rewarddes_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_WelfareFirstcharge::m_rewarddes() const {
  return m_rewarddes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_WelfareFirstcharge::mutable_m_rewarddes() {
  return &m_rewarddes_;
}

// -------------------------------------------------------------------

// Sheet_WelfareFirstcharge

// repeated .proto_ff.E_WelfareFirstcharge E_WelfareFirstcharge_List = 1;
inline int Sheet_WelfareFirstcharge::e_welfarefirstcharge_list_size() const {
  return e_welfarefirstcharge_list_.size();
}
inline void Sheet_WelfareFirstcharge::clear_e_welfarefirstcharge_list() {
  e_welfarefirstcharge_list_.Clear();
}
inline const ::proto_ff::E_WelfareFirstcharge& Sheet_WelfareFirstcharge::e_welfarefirstcharge_list(int index) const {
  return e_welfarefirstcharge_list_.Get(index);
}
inline ::proto_ff::E_WelfareFirstcharge* Sheet_WelfareFirstcharge::mutable_e_welfarefirstcharge_list(int index) {
  return e_welfarefirstcharge_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareFirstcharge* Sheet_WelfareFirstcharge::add_e_welfarefirstcharge_list() {
  return e_welfarefirstcharge_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFirstcharge >&
Sheet_WelfareFirstcharge::e_welfarefirstcharge_list() const {
  return e_welfarefirstcharge_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareFirstcharge >*
Sheet_WelfareFirstcharge::mutable_e_welfarefirstcharge_list() {
  return &e_welfarefirstcharge_list_;
}

// -------------------------------------------------------------------

// E_WelfareSctype

// optional int32 m_id = 1;
inline bool E_WelfareSctype::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareSctype::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareSctype::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareSctype::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareSctype::m_id() const {
  return m_id_;
}
inline void E_WelfareSctype::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_functionid = 2;
inline bool E_WelfareSctype::has_m_functionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareSctype::set_has_m_functionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareSctype::clear_has_m_functionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareSctype::clear_m_functionid() {
  m_functionid_ = 0;
  clear_has_m_functionid();
}
inline ::google::protobuf::int32 E_WelfareSctype::m_functionid() const {
  return m_functionid_;
}
inline void E_WelfareSctype::set_m_functionid(::google::protobuf::int32 value) {
  set_has_m_functionid();
  m_functionid_ = value;
}

// optional string m_title = 3;
inline bool E_WelfareSctype::has_m_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareSctype::set_has_m_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareSctype::clear_has_m_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareSctype::clear_m_title() {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    m_title_->clear();
  }
  clear_has_m_title();
}
inline const ::std::string& E_WelfareSctype::m_title() const {
  return *m_title_;
}
inline void E_WelfareSctype::set_m_title(const ::std::string& value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void E_WelfareSctype::set_m_title(const char* value) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(value);
}
inline void E_WelfareSctype::set_m_title(const char* value, size_t size) {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  m_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareSctype::mutable_m_title() {
  set_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    m_title_ = new ::std::string;
  }
  return m_title_;
}
inline ::std::string* E_WelfareSctype::release_m_title() {
  clear_has_m_title();
  if (m_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_title_;
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_WelfareSctype::set_allocated_m_title(::std::string* m_title) {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    delete m_title_;
  }
  if (m_title) {
    set_has_m_title();
    m_title_ = m_title;
  } else {
    clear_has_m_title();
    m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_baseMap = 4;
inline bool E_WelfareSctype::has_m_basemap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareSctype::set_has_m_basemap() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareSctype::clear_has_m_basemap() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareSctype::clear_m_basemap() {
  if (m_basemap_ != &::google::protobuf::internal::kEmptyString) {
    m_basemap_->clear();
  }
  clear_has_m_basemap();
}
inline const ::std::string& E_WelfareSctype::m_basemap() const {
  return *m_basemap_;
}
inline void E_WelfareSctype::set_m_basemap(const ::std::string& value) {
  set_has_m_basemap();
  if (m_basemap_ == &::google::protobuf::internal::kEmptyString) {
    m_basemap_ = new ::std::string;
  }
  m_basemap_->assign(value);
}
inline void E_WelfareSctype::set_m_basemap(const char* value) {
  set_has_m_basemap();
  if (m_basemap_ == &::google::protobuf::internal::kEmptyString) {
    m_basemap_ = new ::std::string;
  }
  m_basemap_->assign(value);
}
inline void E_WelfareSctype::set_m_basemap(const char* value, size_t size) {
  set_has_m_basemap();
  if (m_basemap_ == &::google::protobuf::internal::kEmptyString) {
    m_basemap_ = new ::std::string;
  }
  m_basemap_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareSctype::mutable_m_basemap() {
  set_has_m_basemap();
  if (m_basemap_ == &::google::protobuf::internal::kEmptyString) {
    m_basemap_ = new ::std::string;
  }
  return m_basemap_;
}
inline ::std::string* E_WelfareSctype::release_m_basemap() {
  clear_has_m_basemap();
  if (m_basemap_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_basemap_;
    m_basemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_WelfareSctype::set_allocated_m_basemap(::std::string* m_basemap) {
  if (m_basemap_ != &::google::protobuf::internal::kEmptyString) {
    delete m_basemap_;
  }
  if (m_basemap) {
    set_has_m_basemap();
    m_basemap_ = m_basemap;
  } else {
    clear_has_m_basemap();
    m_basemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_rcharge = 5;
inline bool E_WelfareSctype::has_m_rcharge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareSctype::set_has_m_rcharge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareSctype::clear_has_m_rcharge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareSctype::clear_m_rcharge() {
  m_rcharge_ = 0;
  clear_has_m_rcharge();
}
inline ::google::protobuf::int32 E_WelfareSctype::m_rcharge() const {
  return m_rcharge_;
}
inline void E_WelfareSctype::set_m_rcharge(::google::protobuf::int32 value) {
  set_has_m_rcharge();
  m_rcharge_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareSctype

// repeated .proto_ff.E_WelfareSctype E_WelfareSctype_List = 1;
inline int Sheet_WelfareSctype::e_welfaresctype_list_size() const {
  return e_welfaresctype_list_.size();
}
inline void Sheet_WelfareSctype::clear_e_welfaresctype_list() {
  e_welfaresctype_list_.Clear();
}
inline const ::proto_ff::E_WelfareSctype& Sheet_WelfareSctype::e_welfaresctype_list(int index) const {
  return e_welfaresctype_list_.Get(index);
}
inline ::proto_ff::E_WelfareSctype* Sheet_WelfareSctype::mutable_e_welfaresctype_list(int index) {
  return e_welfaresctype_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareSctype* Sheet_WelfareSctype::add_e_welfaresctype_list() {
  return e_welfaresctype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSctype >&
Sheet_WelfareSctype::e_welfaresctype_list() const {
  return e_welfaresctype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareSctype >*
Sheet_WelfareSctype::mutable_e_welfaresctype_list() {
  return &e_welfaresctype_list_;
}

// -------------------------------------------------------------------

// E_WelfareMibao

// optional int32 m_id = 1;
inline bool E_WelfareMibao::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareMibao::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareMibao::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareMibao::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareMibao::m_id() const {
  return m_id_;
}
inline void E_WelfareMibao::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_openlv = 2;
inline bool E_WelfareMibao::has_m_openlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareMibao::set_has_m_openlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareMibao::clear_has_m_openlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareMibao::clear_m_openlv() {
  m_openlv_ = 0;
  clear_has_m_openlv();
}
inline ::google::protobuf::int32 E_WelfareMibao::m_openlv() const {
  return m_openlv_;
}
inline void E_WelfareMibao::set_m_openlv(::google::protobuf::int32 value) {
  set_has_m_openlv();
  m_openlv_ = value;
}

// optional int32 m_type = 3;
inline bool E_WelfareMibao::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareMibao::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareMibao::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareMibao::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_WelfareMibao::m_type() const {
  return m_type_;
}
inline void E_WelfareMibao::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_rank = 4;
inline bool E_WelfareMibao::has_m_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareMibao::set_has_m_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareMibao::clear_has_m_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareMibao::clear_m_rank() {
  m_rank_ = 0;
  clear_has_m_rank();
}
inline ::google::protobuf::int32 E_WelfareMibao::m_rank() const {
  return m_rank_;
}
inline void E_WelfareMibao::set_m_rank(::google::protobuf::int32 value) {
  set_has_m_rank();
  m_rank_ = value;
}

// optional int32 m_openDays = 5;
inline bool E_WelfareMibao::has_m_opendays() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareMibao::set_has_m_opendays() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareMibao::clear_has_m_opendays() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareMibao::clear_m_opendays() {
  m_opendays_ = 0;
  clear_has_m_opendays();
}
inline ::google::protobuf::int32 E_WelfareMibao::m_opendays() const {
  return m_opendays_;
}
inline void E_WelfareMibao::set_m_opendays(::google::protobuf::int32 value) {
  set_has_m_opendays();
  m_opendays_ = value;
}

// optional int32 m_reward = 6;
inline bool E_WelfareMibao::has_m_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareMibao::set_has_m_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareMibao::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareMibao::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareMibao::m_reward() const {
  return m_reward_;
}
inline void E_WelfareMibao::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional string m_des = 7;
inline bool E_WelfareMibao::has_m_des() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_WelfareMibao::set_has_m_des() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_WelfareMibao::clear_has_m_des() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_WelfareMibao::clear_m_des() {
  if (m_des_ != &::google::protobuf::internal::kEmptyString) {
    m_des_->clear();
  }
  clear_has_m_des();
}
inline const ::std::string& E_WelfareMibao::m_des() const {
  return *m_des_;
}
inline void E_WelfareMibao::set_m_des(const ::std::string& value) {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  m_des_->assign(value);
}
inline void E_WelfareMibao::set_m_des(const char* value) {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  m_des_->assign(value);
}
inline void E_WelfareMibao::set_m_des(const char* value, size_t size) {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  m_des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_WelfareMibao::mutable_m_des() {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  return m_des_;
}
inline ::std::string* E_WelfareMibao::release_m_des() {
  clear_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_des_;
    m_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_WelfareMibao::set_allocated_m_des(::std::string* m_des) {
  if (m_des_ != &::google::protobuf::internal::kEmptyString) {
    delete m_des_;
  }
  if (m_des) {
    set_has_m_des();
    m_des_ = m_des;
  } else {
    clear_has_m_des();
    m_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_WelfareMibao

// repeated .proto_ff.E_WelfareMibao E_WelfareMibao_List = 1;
inline int Sheet_WelfareMibao::e_welfaremibao_list_size() const {
  return e_welfaremibao_list_.size();
}
inline void Sheet_WelfareMibao::clear_e_welfaremibao_list() {
  e_welfaremibao_list_.Clear();
}
inline const ::proto_ff::E_WelfareMibao& Sheet_WelfareMibao::e_welfaremibao_list(int index) const {
  return e_welfaremibao_list_.Get(index);
}
inline ::proto_ff::E_WelfareMibao* Sheet_WelfareMibao::mutable_e_welfaremibao_list(int index) {
  return e_welfaremibao_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareMibao* Sheet_WelfareMibao::add_e_welfaremibao_list() {
  return e_welfaremibao_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMibao >&
Sheet_WelfareMibao::e_welfaremibao_list() const {
  return e_welfaremibao_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMibao >*
Sheet_WelfareMibao::mutable_e_welfaremibao_list() {
  return &e_welfaremibao_list_;
}

// -------------------------------------------------------------------

// E_WelfareKfleichong

// optional int32 m_id = 1;
inline bool E_WelfareKfleichong::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareKfleichong::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareKfleichong::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareKfleichong::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareKfleichong::m_id() const {
  return m_id_;
}
inline void E_WelfareKfleichong::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_money = 2;
inline bool E_WelfareKfleichong::has_m_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareKfleichong::set_has_m_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareKfleichong::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareKfleichong::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 E_WelfareKfleichong::m_money() const {
  return m_money_;
}
inline void E_WelfareKfleichong::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// optional int32 m_limit = 3;
inline bool E_WelfareKfleichong::has_m_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareKfleichong::set_has_m_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareKfleichong::clear_has_m_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareKfleichong::clear_m_limit() {
  m_limit_ = 0;
  clear_has_m_limit();
}
inline ::google::protobuf::int32 E_WelfareKfleichong::m_limit() const {
  return m_limit_;
}
inline void E_WelfareKfleichong::set_m_limit(::google::protobuf::int32 value) {
  set_has_m_limit();
  m_limit_ = value;
}

// optional int32 m_reward = 4;
inline bool E_WelfareKfleichong::has_m_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareKfleichong::set_has_m_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareKfleichong::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareKfleichong::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareKfleichong::m_reward() const {
  return m_reward_;
}
inline void E_WelfareKfleichong::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareKfleichong

// repeated .proto_ff.E_WelfareKfleichong E_WelfareKfleichong_List = 1;
inline int Sheet_WelfareKfleichong::e_welfarekfleichong_list_size() const {
  return e_welfarekfleichong_list_.size();
}
inline void Sheet_WelfareKfleichong::clear_e_welfarekfleichong_list() {
  e_welfarekfleichong_list_.Clear();
}
inline const ::proto_ff::E_WelfareKfleichong& Sheet_WelfareKfleichong::e_welfarekfleichong_list(int index) const {
  return e_welfarekfleichong_list_.Get(index);
}
inline ::proto_ff::E_WelfareKfleichong* Sheet_WelfareKfleichong::mutable_e_welfarekfleichong_list(int index) {
  return e_welfarekfleichong_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareKfleichong* Sheet_WelfareKfleichong::add_e_welfarekfleichong_list() {
  return e_welfarekfleichong_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareKfleichong >&
Sheet_WelfareKfleichong::e_welfarekfleichong_list() const {
  return e_welfarekfleichong_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareKfleichong >*
Sheet_WelfareKfleichong::mutable_e_welfarekfleichong_list() {
  return &e_welfarekfleichong_list_;
}

// -------------------------------------------------------------------

// E_WelfareDailygift

// optional int32 m_id = 1;
inline bool E_WelfareDailygift::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareDailygift::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareDailygift::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareDailygift::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareDailygift::m_id() const {
  return m_id_;
}
inline void E_WelfareDailygift::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_WelfareDailygift::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareDailygift::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareDailygift::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareDailygift::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_WelfareDailygift::m_type() const {
  return m_type_;
}
inline void E_WelfareDailygift::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_rechargeId = 3;
inline bool E_WelfareDailygift::has_m_rechargeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareDailygift::set_has_m_rechargeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareDailygift::clear_has_m_rechargeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareDailygift::clear_m_rechargeid() {
  m_rechargeid_ = 0;
  clear_has_m_rechargeid();
}
inline ::google::protobuf::int32 E_WelfareDailygift::m_rechargeid() const {
  return m_rechargeid_;
}
inline void E_WelfareDailygift::set_m_rechargeid(::google::protobuf::int32 value) {
  set_has_m_rechargeid();
  m_rechargeid_ = value;
}

// optional int32 m_OneclickBuy = 4;
inline bool E_WelfareDailygift::has_m_oneclickbuy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareDailygift::set_has_m_oneclickbuy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareDailygift::clear_has_m_oneclickbuy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareDailygift::clear_m_oneclickbuy() {
  m_oneclickbuy_ = 0;
  clear_has_m_oneclickbuy();
}
inline ::google::protobuf::int32 E_WelfareDailygift::m_oneclickbuy() const {
  return m_oneclickbuy_;
}
inline void E_WelfareDailygift::set_m_oneclickbuy(::google::protobuf::int32 value) {
  set_has_m_oneclickbuy();
  m_oneclickbuy_ = value;
}

// optional int32 m_reward = 5;
inline bool E_WelfareDailygift::has_m_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareDailygift::set_has_m_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareDailygift::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareDailygift::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareDailygift::m_reward() const {
  return m_reward_;
}
inline void E_WelfareDailygift::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_quality = 6;
inline bool E_WelfareDailygift::has_m_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareDailygift::set_has_m_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareDailygift::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareDailygift::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_WelfareDailygift::m_quality() const {
  return m_quality_;
}
inline void E_WelfareDailygift::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareDailygift

// repeated .proto_ff.E_WelfareDailygift E_WelfareDailygift_List = 1;
inline int Sheet_WelfareDailygift::e_welfaredailygift_list_size() const {
  return e_welfaredailygift_list_.size();
}
inline void Sheet_WelfareDailygift::clear_e_welfaredailygift_list() {
  e_welfaredailygift_list_.Clear();
}
inline const ::proto_ff::E_WelfareDailygift& Sheet_WelfareDailygift::e_welfaredailygift_list(int index) const {
  return e_welfaredailygift_list_.Get(index);
}
inline ::proto_ff::E_WelfareDailygift* Sheet_WelfareDailygift::mutable_e_welfaredailygift_list(int index) {
  return e_welfaredailygift_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareDailygift* Sheet_WelfareDailygift::add_e_welfaredailygift_list() {
  return e_welfaredailygift_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareDailygift >&
Sheet_WelfareDailygift::e_welfaredailygift_list() const {
  return e_welfaredailygift_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareDailygift >*
Sheet_WelfareDailygift::mutable_e_welfaredailygift_list() {
  return &e_welfaredailygift_list_;
}

// -------------------------------------------------------------------

// E_WelfareLcgift

// optional int32 m_id = 1;
inline bool E_WelfareLcgift::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareLcgift::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareLcgift::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareLcgift::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_id() const {
  return m_id_;
}
inline void E_WelfareLcgift::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_WelfareLcgift::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareLcgift::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareLcgift::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareLcgift::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_type() const {
  return m_type_;
}
inline void E_WelfareLcgift::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_limit = 3;
inline bool E_WelfareLcgift::has_m_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareLcgift::set_has_m_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareLcgift::clear_has_m_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareLcgift::clear_m_limit() {
  m_limit_ = 0;
  clear_has_m_limit();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_limit() const {
  return m_limit_;
}
inline void E_WelfareLcgift::set_m_limit(::google::protobuf::int32 value) {
  set_has_m_limit();
  m_limit_ = value;
}

// optional int32 m_days = 4;
inline bool E_WelfareLcgift::has_m_days() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareLcgift::set_has_m_days() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareLcgift::clear_has_m_days() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareLcgift::clear_m_days() {
  m_days_ = 0;
  clear_has_m_days();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_days() const {
  return m_days_;
}
inline void E_WelfareLcgift::set_m_days(::google::protobuf::int32 value) {
  set_has_m_days();
  m_days_ = value;
}

// optional int32 m_starNum = 5;
inline bool E_WelfareLcgift::has_m_starnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareLcgift::set_has_m_starnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareLcgift::clear_has_m_starnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareLcgift::clear_m_starnum() {
  m_starnum_ = 0;
  clear_has_m_starnum();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_starnum() const {
  return m_starnum_;
}
inline void E_WelfareLcgift::set_m_starnum(::google::protobuf::int32 value) {
  set_has_m_starnum();
  m_starnum_ = value;
}

// optional int32 m_reward = 6;
inline bool E_WelfareLcgift::has_m_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareLcgift::set_has_m_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareLcgift::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareLcgift::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_reward() const {
  return m_reward_;
}
inline void E_WelfareLcgift::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_showItem = 7;
inline bool E_WelfareLcgift::has_m_showitem() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_WelfareLcgift::set_has_m_showitem() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_WelfareLcgift::clear_has_m_showitem() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_WelfareLcgift::clear_m_showitem() {
  m_showitem_ = 0;
  clear_has_m_showitem();
}
inline ::google::protobuf::int32 E_WelfareLcgift::m_showitem() const {
  return m_showitem_;
}
inline void E_WelfareLcgift::set_m_showitem(::google::protobuf::int32 value) {
  set_has_m_showitem();
  m_showitem_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareLcgift

// repeated .proto_ff.E_WelfareLcgift E_WelfareLcgift_List = 1;
inline int Sheet_WelfareLcgift::e_welfarelcgift_list_size() const {
  return e_welfarelcgift_list_.size();
}
inline void Sheet_WelfareLcgift::clear_e_welfarelcgift_list() {
  e_welfarelcgift_list_.Clear();
}
inline const ::proto_ff::E_WelfareLcgift& Sheet_WelfareLcgift::e_welfarelcgift_list(int index) const {
  return e_welfarelcgift_list_.Get(index);
}
inline ::proto_ff::E_WelfareLcgift* Sheet_WelfareLcgift::mutable_e_welfarelcgift_list(int index) {
  return e_welfarelcgift_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareLcgift* Sheet_WelfareLcgift::add_e_welfarelcgift_list() {
  return e_welfarelcgift_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcgift >&
Sheet_WelfareLcgift::e_welfarelcgift_list() const {
  return e_welfarelcgift_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcgift >*
Sheet_WelfareLcgift::mutable_e_welfarelcgift_list() {
  return &e_welfarelcgift_list_;
}

// -------------------------------------------------------------------

// E_WelfareLcraffle

// optional int32 m_id = 1;
inline bool E_WelfareLcraffle::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareLcraffle::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareLcraffle::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareLcraffle::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareLcraffle::m_id() const {
  return m_id_;
}
inline void E_WelfareLcraffle::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_money = 2;
inline bool E_WelfareLcraffle::has_m_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareLcraffle::set_has_m_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareLcraffle::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareLcraffle::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 E_WelfareLcraffle::m_money() const {
  return m_money_;
}
inline void E_WelfareLcraffle::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// optional int32 m_limit = 3;
inline bool E_WelfareLcraffle::has_m_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareLcraffle::set_has_m_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareLcraffle::clear_has_m_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareLcraffle::clear_m_limit() {
  m_limit_ = 0;
  clear_has_m_limit();
}
inline ::google::protobuf::int32 E_WelfareLcraffle::m_limit() const {
  return m_limit_;
}
inline void E_WelfareLcraffle::set_m_limit(::google::protobuf::int32 value) {
  set_has_m_limit();
  m_limit_ = value;
}

// optional int32 m_reward = 4;
inline bool E_WelfareLcraffle::has_m_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareLcraffle::set_has_m_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareLcraffle::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareLcraffle::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareLcraffle::m_reward() const {
  return m_reward_;
}
inline void E_WelfareLcraffle::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareLcraffle

// repeated .proto_ff.E_WelfareLcraffle E_WelfareLcraffle_List = 1;
inline int Sheet_WelfareLcraffle::e_welfarelcraffle_list_size() const {
  return e_welfarelcraffle_list_.size();
}
inline void Sheet_WelfareLcraffle::clear_e_welfarelcraffle_list() {
  e_welfarelcraffle_list_.Clear();
}
inline const ::proto_ff::E_WelfareLcraffle& Sheet_WelfareLcraffle::e_welfarelcraffle_list(int index) const {
  return e_welfarelcraffle_list_.Get(index);
}
inline ::proto_ff::E_WelfareLcraffle* Sheet_WelfareLcraffle::mutable_e_welfarelcraffle_list(int index) {
  return e_welfarelcraffle_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareLcraffle* Sheet_WelfareLcraffle::add_e_welfarelcraffle_list() {
  return e_welfarelcraffle_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcraffle >&
Sheet_WelfareLcraffle::e_welfarelcraffle_list() const {
  return e_welfarelcraffle_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcraffle >*
Sheet_WelfareLcraffle::mutable_e_welfarelcraffle_list() {
  return &e_welfarelcraffle_list_;
}

// -------------------------------------------------------------------

// E_WelfareLcturntableRaffleDesc

// optional int32 m_num = 1;
inline bool E_WelfareLcturntableRaffleDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareLcturntableRaffleDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareLcturntableRaffleDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareLcturntableRaffleDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_WelfareLcturntableRaffleDesc::m_num() const {
  return m_num_;
}
inline void E_WelfareLcturntableRaffleDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_item = 2;
inline bool E_WelfareLcturntableRaffleDesc::has_m_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareLcturntableRaffleDesc::set_has_m_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareLcturntableRaffleDesc::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareLcturntableRaffleDesc::clear_m_item() {
  m_item_ = 0;
  clear_has_m_item();
}
inline ::google::protobuf::int32 E_WelfareLcturntableRaffleDesc::m_item() const {
  return m_item_;
}
inline void E_WelfareLcturntableRaffleDesc::set_m_item(::google::protobuf::int32 value) {
  set_has_m_item();
  m_item_ = value;
}

// -------------------------------------------------------------------

// E_WelfareLcturntable

// optional int32 m_id = 1;
inline bool E_WelfareLcturntable::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareLcturntable::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareLcturntable::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareLcturntable::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareLcturntable::m_id() const {
  return m_id_;
}
inline void E_WelfareLcturntable::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_jackpotType = 2;
inline bool E_WelfareLcturntable::has_m_jackpottype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareLcturntable::set_has_m_jackpottype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareLcturntable::clear_has_m_jackpottype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareLcturntable::clear_m_jackpottype() {
  m_jackpottype_ = 0;
  clear_has_m_jackpottype();
}
inline ::google::protobuf::int32 E_WelfareLcturntable::m_jackpottype() const {
  return m_jackpottype_;
}
inline void E_WelfareLcturntable::set_m_jackpottype(::google::protobuf::int32 value) {
  set_has_m_jackpottype();
  m_jackpottype_ = value;
}

// optional int32 m_raffleTimes = 3;
inline bool E_WelfareLcturntable::has_m_raffletimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareLcturntable::set_has_m_raffletimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareLcturntable::clear_has_m_raffletimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareLcturntable::clear_m_raffletimes() {
  m_raffletimes_ = 0;
  clear_has_m_raffletimes();
}
inline ::google::protobuf::int32 E_WelfareLcturntable::m_raffletimes() const {
  return m_raffletimes_;
}
inline void E_WelfareLcturntable::set_m_raffletimes(::google::protobuf::int32 value) {
  set_has_m_raffletimes();
  m_raffletimes_ = value;
}

// optional int32 m_raTimesRew = 4;
inline bool E_WelfareLcturntable::has_m_ratimesrew() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareLcturntable::set_has_m_ratimesrew() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareLcturntable::clear_has_m_ratimesrew() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareLcturntable::clear_m_ratimesrew() {
  m_ratimesrew_ = 0;
  clear_has_m_ratimesrew();
}
inline ::google::protobuf::int32 E_WelfareLcturntable::m_ratimesrew() const {
  return m_ratimesrew_;
}
inline void E_WelfareLcturntable::set_m_ratimesrew(::google::protobuf::int32 value) {
  set_has_m_ratimesrew();
  m_ratimesrew_ = value;
}

// repeated .proto_ff.E_WelfareLcturntableRaffleDesc m_raffle = 5;
inline int E_WelfareLcturntable::m_raffle_size() const {
  return m_raffle_.size();
}
inline void E_WelfareLcturntable::clear_m_raffle() {
  m_raffle_.Clear();
}
inline const ::proto_ff::E_WelfareLcturntableRaffleDesc& E_WelfareLcturntable::m_raffle(int index) const {
  return m_raffle_.Get(index);
}
inline ::proto_ff::E_WelfareLcturntableRaffleDesc* E_WelfareLcturntable::mutable_m_raffle(int index) {
  return m_raffle_.Mutable(index);
}
inline ::proto_ff::E_WelfareLcturntableRaffleDesc* E_WelfareLcturntable::add_m_raffle() {
  return m_raffle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntableRaffleDesc >&
E_WelfareLcturntable::m_raffle() const {
  return m_raffle_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntableRaffleDesc >*
E_WelfareLcturntable::mutable_m_raffle() {
  return &m_raffle_;
}

// -------------------------------------------------------------------

// Sheet_WelfareLcturntable

// repeated .proto_ff.E_WelfareLcturntable E_WelfareLcturntable_List = 1;
inline int Sheet_WelfareLcturntable::e_welfarelcturntable_list_size() const {
  return e_welfarelcturntable_list_.size();
}
inline void Sheet_WelfareLcturntable::clear_e_welfarelcturntable_list() {
  e_welfarelcturntable_list_.Clear();
}
inline const ::proto_ff::E_WelfareLcturntable& Sheet_WelfareLcturntable::e_welfarelcturntable_list(int index) const {
  return e_welfarelcturntable_list_.Get(index);
}
inline ::proto_ff::E_WelfareLcturntable* Sheet_WelfareLcturntable::mutable_e_welfarelcturntable_list(int index) {
  return e_welfarelcturntable_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareLcturntable* Sheet_WelfareLcturntable::add_e_welfarelcturntable_list() {
  return e_welfarelcturntable_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntable >&
Sheet_WelfareLcturntable::e_welfarelcturntable_list() const {
  return e_welfarelcturntable_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareLcturntable >*
Sheet_WelfareLcturntable::mutable_e_welfarelcturntable_list() {
  return &e_welfarelcturntable_list_;
}

// -------------------------------------------------------------------

// E_WelfareJackpot

// optional int32 m_id = 1;
inline bool E_WelfareJackpot::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareJackpot::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareJackpot::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareJackpot::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareJackpot::m_id() const {
  return m_id_;
}
inline void E_WelfareJackpot::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_WelfareJackpot::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareJackpot::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareJackpot::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareJackpot::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_WelfareJackpot::m_type() const {
  return m_type_;
}
inline void E_WelfareJackpot::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_rank = 3;
inline bool E_WelfareJackpot::has_m_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareJackpot::set_has_m_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareJackpot::clear_has_m_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareJackpot::clear_m_rank() {
  m_rank_ = 0;
  clear_has_m_rank();
}
inline ::google::protobuf::int32 E_WelfareJackpot::m_rank() const {
  return m_rank_;
}
inline void E_WelfareJackpot::set_m_rank(::google::protobuf::int32 value) {
  set_has_m_rank();
  m_rank_ = value;
}

// optional int32 m_item = 4;
inline bool E_WelfareJackpot::has_m_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareJackpot::set_has_m_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareJackpot::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareJackpot::clear_m_item() {
  m_item_ = 0;
  clear_has_m_item();
}
inline ::google::protobuf::int32 E_WelfareJackpot::m_item() const {
  return m_item_;
}
inline void E_WelfareJackpot::set_m_item(::google::protobuf::int32 value) {
  set_has_m_item();
  m_item_ = value;
}

// optional int32 m_itemNum = 5;
inline bool E_WelfareJackpot::has_m_itemnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareJackpot::set_has_m_itemnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareJackpot::clear_has_m_itemnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareJackpot::clear_m_itemnum() {
  m_itemnum_ = 0;
  clear_has_m_itemnum();
}
inline ::google::protobuf::int32 E_WelfareJackpot::m_itemnum() const {
  return m_itemnum_;
}
inline void E_WelfareJackpot::set_m_itemnum(::google::protobuf::int32 value) {
  set_has_m_itemnum();
  m_itemnum_ = value;
}

// optional int32 m_weight = 6;
inline bool E_WelfareJackpot::has_m_weight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareJackpot::set_has_m_weight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareJackpot::clear_has_m_weight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareJackpot::clear_m_weight() {
  m_weight_ = 0;
  clear_has_m_weight();
}
inline ::google::protobuf::int32 E_WelfareJackpot::m_weight() const {
  return m_weight_;
}
inline void E_WelfareJackpot::set_m_weight(::google::protobuf::int32 value) {
  set_has_m_weight();
  m_weight_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareJackpot

// repeated .proto_ff.E_WelfareJackpot E_WelfareJackpot_List = 1;
inline int Sheet_WelfareJackpot::e_welfarejackpot_list_size() const {
  return e_welfarejackpot_list_.size();
}
inline void Sheet_WelfareJackpot::clear_e_welfarejackpot_list() {
  e_welfarejackpot_list_.Clear();
}
inline const ::proto_ff::E_WelfareJackpot& Sheet_WelfareJackpot::e_welfarejackpot_list(int index) const {
  return e_welfarejackpot_list_.Get(index);
}
inline ::proto_ff::E_WelfareJackpot* Sheet_WelfareJackpot::mutable_e_welfarejackpot_list(int index) {
  return e_welfarejackpot_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareJackpot* Sheet_WelfareJackpot::add_e_welfarejackpot_list() {
  return e_welfarejackpot_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareJackpot >&
Sheet_WelfareJackpot::e_welfarejackpot_list() const {
  return e_welfarejackpot_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareJackpot >*
Sheet_WelfareJackpot::mutable_e_welfarejackpot_list() {
  return &e_welfarejackpot_list_;
}

// -------------------------------------------------------------------

// E_WelfareMonthlycard

// optional int32 m_id = 1;
inline bool E_WelfareMonthlycard::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareMonthlycard::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareMonthlycard::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_id() const {
  return m_id_;
}
inline void E_WelfareMonthlycard::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_cardType = 2;
inline bool E_WelfareMonthlycard::has_m_cardtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_cardtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareMonthlycard::clear_has_m_cardtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareMonthlycard::clear_m_cardtype() {
  m_cardtype_ = 0;
  clear_has_m_cardtype();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_cardtype() const {
  return m_cardtype_;
}
inline void E_WelfareMonthlycard::set_m_cardtype(::google::protobuf::int32 value) {
  set_has_m_cardtype();
  m_cardtype_ = value;
}

// optional int32 m_cardMoney = 3;
inline bool E_WelfareMonthlycard::has_m_cardmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_cardmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareMonthlycard::clear_has_m_cardmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareMonthlycard::clear_m_cardmoney() {
  m_cardmoney_ = 0;
  clear_has_m_cardmoney();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_cardmoney() const {
  return m_cardmoney_;
}
inline void E_WelfareMonthlycard::set_m_cardmoney(::google::protobuf::int32 value) {
  set_has_m_cardmoney();
  m_cardmoney_ = value;
}

// optional int32 m_cardBuyitem = 4;
inline bool E_WelfareMonthlycard::has_m_cardbuyitem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_cardbuyitem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareMonthlycard::clear_has_m_cardbuyitem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareMonthlycard::clear_m_cardbuyitem() {
  m_cardbuyitem_ = 0;
  clear_has_m_cardbuyitem();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_cardbuyitem() const {
  return m_cardbuyitem_;
}
inline void E_WelfareMonthlycard::set_m_cardbuyitem(::google::protobuf::int32 value) {
  set_has_m_cardbuyitem();
  m_cardbuyitem_ = value;
}

// optional int32 m_cardDailyitem = 5;
inline bool E_WelfareMonthlycard::has_m_carddailyitem() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_carddailyitem() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareMonthlycard::clear_has_m_carddailyitem() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareMonthlycard::clear_m_carddailyitem() {
  m_carddailyitem_ = 0;
  clear_has_m_carddailyitem();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_carddailyitem() const {
  return m_carddailyitem_;
}
inline void E_WelfareMonthlycard::set_m_carddailyitem(::google::protobuf::int32 value) {
  set_has_m_carddailyitem();
  m_carddailyitem_ = value;
}

// optional int32 m_cardTime = 6;
inline bool E_WelfareMonthlycard::has_m_cardtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_cardtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareMonthlycard::clear_has_m_cardtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareMonthlycard::clear_m_cardtime() {
  m_cardtime_ = 0;
  clear_has_m_cardtime();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_cardtime() const {
  return m_cardtime_;
}
inline void E_WelfareMonthlycard::set_m_cardtime(::google::protobuf::int32 value) {
  set_has_m_cardtime();
  m_cardtime_ = value;
}

// optional int32 m_Flmultiple = 7;
inline bool E_WelfareMonthlycard::has_m_flmultiple() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_WelfareMonthlycard::set_has_m_flmultiple() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_WelfareMonthlycard::clear_has_m_flmultiple() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_WelfareMonthlycard::clear_m_flmultiple() {
  m_flmultiple_ = 0;
  clear_has_m_flmultiple();
}
inline ::google::protobuf::int32 E_WelfareMonthlycard::m_flmultiple() const {
  return m_flmultiple_;
}
inline void E_WelfareMonthlycard::set_m_flmultiple(::google::protobuf::int32 value) {
  set_has_m_flmultiple();
  m_flmultiple_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareMonthlycard

// repeated .proto_ff.E_WelfareMonthlycard E_WelfareMonthlycard_List = 1;
inline int Sheet_WelfareMonthlycard::e_welfaremonthlycard_list_size() const {
  return e_welfaremonthlycard_list_.size();
}
inline void Sheet_WelfareMonthlycard::clear_e_welfaremonthlycard_list() {
  e_welfaremonthlycard_list_.Clear();
}
inline const ::proto_ff::E_WelfareMonthlycard& Sheet_WelfareMonthlycard::e_welfaremonthlycard_list(int index) const {
  return e_welfaremonthlycard_list_.Get(index);
}
inline ::proto_ff::E_WelfareMonthlycard* Sheet_WelfareMonthlycard::mutable_e_welfaremonthlycard_list(int index) {
  return e_welfaremonthlycard_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareMonthlycard* Sheet_WelfareMonthlycard::add_e_welfaremonthlycard_list() {
  return e_welfaremonthlycard_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMonthlycard >&
Sheet_WelfareMonthlycard::e_welfaremonthlycard_list() const {
  return e_welfaremonthlycard_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareMonthlycard >*
Sheet_WelfareMonthlycard::mutable_e_welfaremonthlycard_list() {
  return &e_welfaremonthlycard_list_;
}

// -------------------------------------------------------------------

// E_WelfareGoal

// optional int32 m_id = 1;
inline bool E_WelfareGoal::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareGoal::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareGoal::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareGoal::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareGoal::m_id() const {
  return m_id_;
}
inline void E_WelfareGoal::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_functionid = 2;
inline bool E_WelfareGoal::has_m_functionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareGoal::set_has_m_functionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareGoal::clear_has_m_functionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareGoal::clear_m_functionid() {
  m_functionid_ = 0;
  clear_has_m_functionid();
}
inline ::google::protobuf::int32 E_WelfareGoal::m_functionid() const {
  return m_functionid_;
}
inline void E_WelfareGoal::set_m_functionid(::google::protobuf::int32 value) {
  set_has_m_functionid();
  m_functionid_ = value;
}

// optional int32 m_taskGroup = 3;
inline bool E_WelfareGoal::has_m_taskgroup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareGoal::set_has_m_taskgroup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareGoal::clear_has_m_taskgroup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareGoal::clear_m_taskgroup() {
  m_taskgroup_ = 0;
  clear_has_m_taskgroup();
}
inline ::google::protobuf::int32 E_WelfareGoal::m_taskgroup() const {
  return m_taskgroup_;
}
inline void E_WelfareGoal::set_m_taskgroup(::google::protobuf::int32 value) {
  set_has_m_taskgroup();
  m_taskgroup_ = value;
}

// optional int32 m_tasknum = 4;
inline bool E_WelfareGoal::has_m_tasknum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareGoal::set_has_m_tasknum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareGoal::clear_has_m_tasknum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareGoal::clear_m_tasknum() {
  m_tasknum_ = 0;
  clear_has_m_tasknum();
}
inline ::google::protobuf::int32 E_WelfareGoal::m_tasknum() const {
  return m_tasknum_;
}
inline void E_WelfareGoal::set_m_tasknum(::google::protobuf::int32 value) {
  set_has_m_tasknum();
  m_tasknum_ = value;
}

// optional int32 m_rewrdItem = 5;
inline bool E_WelfareGoal::has_m_rewrditem() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareGoal::set_has_m_rewrditem() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareGoal::clear_has_m_rewrditem() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareGoal::clear_m_rewrditem() {
  m_rewrditem_ = 0;
  clear_has_m_rewrditem();
}
inline ::google::protobuf::int32 E_WelfareGoal::m_rewrditem() const {
  return m_rewrditem_;
}
inline void E_WelfareGoal::set_m_rewrditem(::google::protobuf::int32 value) {
  set_has_m_rewrditem();
  m_rewrditem_ = value;
}

// optional int32 m_time = 6;
inline bool E_WelfareGoal::has_m_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareGoal::set_has_m_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareGoal::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareGoal::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_WelfareGoal::m_time() const {
  return m_time_;
}
inline void E_WelfareGoal::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareGoal

// repeated .proto_ff.E_WelfareGoal E_WelfareGoal_List = 1;
inline int Sheet_WelfareGoal::e_welfaregoal_list_size() const {
  return e_welfaregoal_list_.size();
}
inline void Sheet_WelfareGoal::clear_e_welfaregoal_list() {
  e_welfaregoal_list_.Clear();
}
inline const ::proto_ff::E_WelfareGoal& Sheet_WelfareGoal::e_welfaregoal_list(int index) const {
  return e_welfaregoal_list_.Get(index);
}
inline ::proto_ff::E_WelfareGoal* Sheet_WelfareGoal::mutable_e_welfaregoal_list(int index) {
  return e_welfaregoal_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareGoal* Sheet_WelfareGoal::add_e_welfaregoal_list() {
  return e_welfaregoal_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoal >&
Sheet_WelfareGoal::e_welfaregoal_list() const {
  return e_welfaregoal_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoal >*
Sheet_WelfareGoal::mutable_e_welfaregoal_list() {
  return &e_welfaregoal_list_;
}

// -------------------------------------------------------------------

// E_WelfareGoaltask

// optional int32 m_id = 1;
inline bool E_WelfareGoaltask::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareGoaltask::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareGoaltask::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareGoaltask::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_id() const {
  return m_id_;
}
inline void E_WelfareGoaltask::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_groupID = 2;
inline bool E_WelfareGoaltask::has_m_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareGoaltask::set_has_m_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareGoaltask::clear_has_m_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareGoaltask::clear_m_groupid() {
  m_groupid_ = 0;
  clear_has_m_groupid();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_groupid() const {
  return m_groupid_;
}
inline void E_WelfareGoaltask::set_m_groupid(::google::protobuf::int32 value) {
  set_has_m_groupid();
  m_groupid_ = value;
}

// optional int32 m_eventType = 3;
inline bool E_WelfareGoaltask::has_m_eventtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareGoaltask::set_has_m_eventtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareGoaltask::clear_has_m_eventtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareGoaltask::clear_m_eventtype() {
  m_eventtype_ = 0;
  clear_has_m_eventtype();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_eventtype() const {
  return m_eventtype_;
}
inline void E_WelfareGoaltask::set_m_eventtype(::google::protobuf::int32 value) {
  set_has_m_eventtype();
  m_eventtype_ = value;
}

// optional int32 m_reachPrice = 4;
inline bool E_WelfareGoaltask::has_m_reachprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareGoaltask::set_has_m_reachprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareGoaltask::clear_has_m_reachprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareGoaltask::clear_m_reachprice() {
  m_reachprice_ = 0;
  clear_has_m_reachprice();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_reachprice() const {
  return m_reachprice_;
}
inline void E_WelfareGoaltask::set_m_reachprice(::google::protobuf::int32 value) {
  set_has_m_reachprice();
  m_reachprice_ = value;
}

// optional int32 m_itemID = 5;
inline bool E_WelfareGoaltask::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareGoaltask::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareGoaltask::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareGoaltask::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_itemid() const {
  return m_itemid_;
}
inline void E_WelfareGoaltask::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_itemNum = 6;
inline bool E_WelfareGoaltask::has_m_itemnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_WelfareGoaltask::set_has_m_itemnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_WelfareGoaltask::clear_has_m_itemnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_WelfareGoaltask::clear_m_itemnum() {
  m_itemnum_ = 0;
  clear_has_m_itemnum();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_itemnum() const {
  return m_itemnum_;
}
inline void E_WelfareGoaltask::set_m_itemnum(::google::protobuf::int32 value) {
  set_has_m_itemnum();
  m_itemnum_ = value;
}

// repeated int32 m_param = 7;
inline int E_WelfareGoaltask::m_param_size() const {
  return m_param_.size();
}
inline void E_WelfareGoaltask::clear_m_param() {
  m_param_.Clear();
}
inline ::google::protobuf::int32 E_WelfareGoaltask::m_param(int index) const {
  return m_param_.Get(index);
}
inline void E_WelfareGoaltask::set_m_param(int index, ::google::protobuf::int32 value) {
  m_param_.Set(index, value);
}
inline void E_WelfareGoaltask::add_m_param(::google::protobuf::int32 value) {
  m_param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_WelfareGoaltask::m_param() const {
  return m_param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_WelfareGoaltask::mutable_m_param() {
  return &m_param_;
}

// -------------------------------------------------------------------

// Sheet_WelfareGoaltask

// repeated .proto_ff.E_WelfareGoaltask E_WelfareGoaltask_List = 1;
inline int Sheet_WelfareGoaltask::e_welfaregoaltask_list_size() const {
  return e_welfaregoaltask_list_.size();
}
inline void Sheet_WelfareGoaltask::clear_e_welfaregoaltask_list() {
  e_welfaregoaltask_list_.Clear();
}
inline const ::proto_ff::E_WelfareGoaltask& Sheet_WelfareGoaltask::e_welfaregoaltask_list(int index) const {
  return e_welfaregoaltask_list_.Get(index);
}
inline ::proto_ff::E_WelfareGoaltask* Sheet_WelfareGoaltask::mutable_e_welfaregoaltask_list(int index) {
  return e_welfaregoaltask_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareGoaltask* Sheet_WelfareGoaltask::add_e_welfaregoaltask_list() {
  return e_welfaregoaltask_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoaltask >&
Sheet_WelfareGoaltask::e_welfaregoaltask_list() const {
  return e_welfaregoaltask_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareGoaltask >*
Sheet_WelfareGoaltask::mutable_e_welfaregoaltask_list() {
  return &e_welfaregoaltask_list_;
}

// -------------------------------------------------------------------

// E_WelfareInvest

// optional int32 m_id = 1;
inline bool E_WelfareInvest::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareInvest::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareInvest::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareInvest::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareInvest::m_id() const {
  return m_id_;
}
inline void E_WelfareInvest::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_functionID = 2;
inline bool E_WelfareInvest::has_m_functionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareInvest::set_has_m_functionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareInvest::clear_has_m_functionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareInvest::clear_m_functionid() {
  m_functionid_ = 0;
  clear_has_m_functionid();
}
inline ::google::protobuf::int32 E_WelfareInvest::m_functionid() const {
  return m_functionid_;
}
inline void E_WelfareInvest::set_m_functionid(::google::protobuf::int32 value) {
  set_has_m_functionid();
  m_functionid_ = value;
}

// optional int32 m_price = 3;
inline bool E_WelfareInvest::has_m_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareInvest::set_has_m_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareInvest::clear_has_m_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareInvest::clear_m_price() {
  m_price_ = 0;
  clear_has_m_price();
}
inline ::google::protobuf::int32 E_WelfareInvest::m_price() const {
  return m_price_;
}
inline void E_WelfareInvest::set_m_price(::google::protobuf::int32 value) {
  set_has_m_price();
  m_price_ = value;
}

// optional int32 m_rewardItem = 4;
inline bool E_WelfareInvest::has_m_rewarditem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_WelfareInvest::set_has_m_rewarditem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_WelfareInvest::clear_has_m_rewarditem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_WelfareInvest::clear_m_rewarditem() {
  m_rewarditem_ = 0;
  clear_has_m_rewarditem();
}
inline ::google::protobuf::int32 E_WelfareInvest::m_rewarditem() const {
  return m_rewarditem_;
}
inline void E_WelfareInvest::set_m_rewarditem(::google::protobuf::int32 value) {
  set_has_m_rewarditem();
  m_rewarditem_ = value;
}

// optional int32 m_rewardGroup = 5;
inline bool E_WelfareInvest::has_m_rewardgroup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_WelfareInvest::set_has_m_rewardgroup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_WelfareInvest::clear_has_m_rewardgroup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_WelfareInvest::clear_m_rewardgroup() {
  m_rewardgroup_ = 0;
  clear_has_m_rewardgroup();
}
inline ::google::protobuf::int32 E_WelfareInvest::m_rewardgroup() const {
  return m_rewardgroup_;
}
inline void E_WelfareInvest::set_m_rewardgroup(::google::protobuf::int32 value) {
  set_has_m_rewardgroup();
  m_rewardgroup_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareInvest

// repeated .proto_ff.E_WelfareInvest E_WelfareInvest_List = 1;
inline int Sheet_WelfareInvest::e_welfareinvest_list_size() const {
  return e_welfareinvest_list_.size();
}
inline void Sheet_WelfareInvest::clear_e_welfareinvest_list() {
  e_welfareinvest_list_.Clear();
}
inline const ::proto_ff::E_WelfareInvest& Sheet_WelfareInvest::e_welfareinvest_list(int index) const {
  return e_welfareinvest_list_.Get(index);
}
inline ::proto_ff::E_WelfareInvest* Sheet_WelfareInvest::mutable_e_welfareinvest_list(int index) {
  return e_welfareinvest_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareInvest* Sheet_WelfareInvest::add_e_welfareinvest_list() {
  return e_welfareinvest_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvest >&
Sheet_WelfareInvest::e_welfareinvest_list() const {
  return e_welfareinvest_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvest >*
Sheet_WelfareInvest::mutable_e_welfareinvest_list() {
  return &e_welfareinvest_list_;
}

// -------------------------------------------------------------------

// E_WelfareInvestrewardItemDesc

// optional int32 m_num = 1;
inline bool E_WelfareInvestrewardItemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareInvestrewardItemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareInvestrewardItemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareInvestrewardItemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_WelfareInvestrewardItemDesc::m_num() const {
  return m_num_;
}
inline void E_WelfareInvestrewardItemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_WelfareInvestrewardItemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareInvestrewardItemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareInvestrewardItemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareInvestrewardItemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareInvestrewardItemDesc::m_id() const {
  return m_id_;
}
inline void E_WelfareInvestrewardItemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_WelfareInvestreward

// optional int32 m_id = 1;
inline bool E_WelfareInvestreward::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareInvestreward::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareInvestreward::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareInvestreward::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareInvestreward::m_id() const {
  return m_id_;
}
inline void E_WelfareInvestreward::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_group = 2;
inline bool E_WelfareInvestreward::has_m_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareInvestreward::set_has_m_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareInvestreward::clear_has_m_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareInvestreward::clear_m_group() {
  m_group_ = 0;
  clear_has_m_group();
}
inline ::google::protobuf::int32 E_WelfareInvestreward::m_group() const {
  return m_group_;
}
inline void E_WelfareInvestreward::set_m_group(::google::protobuf::int32 value) {
  set_has_m_group();
  m_group_ = value;
}

// optional int32 m_lv = 3;
inline bool E_WelfareInvestreward::has_m_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareInvestreward::set_has_m_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareInvestreward::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareInvestreward::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_WelfareInvestreward::m_lv() const {
  return m_lv_;
}
inline void E_WelfareInvestreward::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// repeated .proto_ff.E_WelfareInvestrewardItemDesc m_Item = 4;
inline int E_WelfareInvestreward::m_item_size() const {
  return m_item_.size();
}
inline void E_WelfareInvestreward::clear_m_item() {
  m_item_.Clear();
}
inline const ::proto_ff::E_WelfareInvestrewardItemDesc& E_WelfareInvestreward::m_item(int index) const {
  return m_item_.Get(index);
}
inline ::proto_ff::E_WelfareInvestrewardItemDesc* E_WelfareInvestreward::mutable_m_item(int index) {
  return m_item_.Mutable(index);
}
inline ::proto_ff::E_WelfareInvestrewardItemDesc* E_WelfareInvestreward::add_m_item() {
  return m_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestrewardItemDesc >&
E_WelfareInvestreward::m_item() const {
  return m_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestrewardItemDesc >*
E_WelfareInvestreward::mutable_m_item() {
  return &m_item_;
}

// -------------------------------------------------------------------

// Sheet_WelfareInvestreward

// repeated .proto_ff.E_WelfareInvestreward E_WelfareInvestreward_List = 1;
inline int Sheet_WelfareInvestreward::e_welfareinvestreward_list_size() const {
  return e_welfareinvestreward_list_.size();
}
inline void Sheet_WelfareInvestreward::clear_e_welfareinvestreward_list() {
  e_welfareinvestreward_list_.Clear();
}
inline const ::proto_ff::E_WelfareInvestreward& Sheet_WelfareInvestreward::e_welfareinvestreward_list(int index) const {
  return e_welfareinvestreward_list_.Get(index);
}
inline ::proto_ff::E_WelfareInvestreward* Sheet_WelfareInvestreward::mutable_e_welfareinvestreward_list(int index) {
  return e_welfareinvestreward_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareInvestreward* Sheet_WelfareInvestreward::add_e_welfareinvestreward_list() {
  return e_welfareinvestreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestreward >&
Sheet_WelfareInvestreward::e_welfareinvestreward_list() const {
  return e_welfareinvestreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareInvestreward >*
Sheet_WelfareInvestreward::mutable_e_welfareinvestreward_list() {
  return &e_welfareinvestreward_list_;
}

// -------------------------------------------------------------------

// E_WelfareYttlgift

// optional int32 m_id = 1;
inline bool E_WelfareYttlgift::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_WelfareYttlgift::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_WelfareYttlgift::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_WelfareYttlgift::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_WelfareYttlgift::m_id() const {
  return m_id_;
}
inline void E_WelfareYttlgift::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_rechargeId = 2;
inline bool E_WelfareYttlgift::has_m_rechargeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_WelfareYttlgift::set_has_m_rechargeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_WelfareYttlgift::clear_has_m_rechargeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_WelfareYttlgift::clear_m_rechargeid() {
  m_rechargeid_ = 0;
  clear_has_m_rechargeid();
}
inline ::google::protobuf::int32 E_WelfareYttlgift::m_rechargeid() const {
  return m_rechargeid_;
}
inline void E_WelfareYttlgift::set_m_rechargeid(::google::protobuf::int32 value) {
  set_has_m_rechargeid();
  m_rechargeid_ = value;
}

// optional int32 m_reward = 3;
inline bool E_WelfareYttlgift::has_m_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_WelfareYttlgift::set_has_m_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_WelfareYttlgift::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_WelfareYttlgift::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 E_WelfareYttlgift::m_reward() const {
  return m_reward_;
}
inline void E_WelfareYttlgift::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// -------------------------------------------------------------------

// Sheet_WelfareYttlgift

// repeated .proto_ff.E_WelfareYttlgift E_WelfareYttlgift_List = 1;
inline int Sheet_WelfareYttlgift::e_welfareyttlgift_list_size() const {
  return e_welfareyttlgift_list_.size();
}
inline void Sheet_WelfareYttlgift::clear_e_welfareyttlgift_list() {
  e_welfareyttlgift_list_.Clear();
}
inline const ::proto_ff::E_WelfareYttlgift& Sheet_WelfareYttlgift::e_welfareyttlgift_list(int index) const {
  return e_welfareyttlgift_list_.Get(index);
}
inline ::proto_ff::E_WelfareYttlgift* Sheet_WelfareYttlgift::mutable_e_welfareyttlgift_list(int index) {
  return e_welfareyttlgift_list_.Mutable(index);
}
inline ::proto_ff::E_WelfareYttlgift* Sheet_WelfareYttlgift::add_e_welfareyttlgift_list() {
  return e_welfareyttlgift_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareYttlgift >&
Sheet_WelfareYttlgift::e_welfareyttlgift_list() const {
  return e_welfareyttlgift_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_WelfareYttlgift >*
Sheet_WelfareYttlgift::mutable_e_welfareyttlgift_list() {
  return &e_welfareyttlgift_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fWelfare_2eproto__INCLUDED
