// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skill.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "skill.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* skillbuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillbuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_skillbuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_skillbuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskilladvanceType1buffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskilladvanceType1buffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskilladvanceType2buffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskilladvanceType2buffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskillawakebuffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskillawakebuffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskilladvanceType3buffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskilladvanceType3buffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskillbuffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskillbuffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_skillskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_skillskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillbuffUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillbuffUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_skillbuffUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_skillbuffUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskillUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskillUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_skillskillUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_skillskillUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* skillskillAwake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  skillskillAwake_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_skillskillAwake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_skillskillAwake_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_skill_2eproto() {
  protobuf_AddDesc_skill_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "skill.proto");
  GOOGLE_CHECK(file != NULL);
  skillbuff_descriptor_ = file->message_type(0);
  static const int skillbuff_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, buffid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, buffname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, bufficon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, effectresources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, showtpye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, startprobability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, probability_up_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, starttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, starttypevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, endtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, endtypevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, buffrule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, immune_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, dispel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, buffcd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, effect_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, effect_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, effect_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, effect_up_),
  };
  skillbuff_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillbuff_descriptor_,
      skillbuff::default_instance_,
      skillbuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuff, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillbuff));
  Sheet_skillbuff_descriptor_ = file->message_type(1);
  static const int Sheet_skillbuff_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillbuff, skillbuff_list_),
  };
  Sheet_skillbuff_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_skillbuff_descriptor_,
      Sheet_skillbuff::default_instance_,
      Sheet_skillbuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillbuff, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillbuff, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_skillbuff));
  skillskilladvanceType1buffDesc_descriptor_ = file->message_type(2);
  static const int skillskilladvanceType1buffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType1buffDesc, id_),
  };
  skillskilladvanceType1buffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskilladvanceType1buffDesc_descriptor_,
      skillskilladvanceType1buffDesc::default_instance_,
      skillskilladvanceType1buffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType1buffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType1buffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskilladvanceType1buffDesc));
  skillskilladvanceType2buffDesc_descriptor_ = file->message_type(3);
  static const int skillskilladvanceType2buffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType2buffDesc, id_),
  };
  skillskilladvanceType2buffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskilladvanceType2buffDesc_descriptor_,
      skillskilladvanceType2buffDesc::default_instance_,
      skillskilladvanceType2buffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType2buffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType2buffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskilladvanceType2buffDesc));
  skillskillawakebuffDesc_descriptor_ = file->message_type(4);
  static const int skillskillawakebuffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillawakebuffDesc, id_),
  };
  skillskillawakebuffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskillawakebuffDesc_descriptor_,
      skillskillawakebuffDesc::default_instance_,
      skillskillawakebuffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillawakebuffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillawakebuffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskillawakebuffDesc));
  skillskilladvanceType3buffDesc_descriptor_ = file->message_type(5);
  static const int skillskilladvanceType3buffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType3buffDesc, id_),
  };
  skillskilladvanceType3buffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskilladvanceType3buffDesc_descriptor_,
      skillskilladvanceType3buffDesc::default_instance_,
      skillskilladvanceType3buffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType3buffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskilladvanceType3buffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskilladvanceType3buffDesc));
  skillskillbuffDesc_descriptor_ = file->message_type(6);
  static const int skillskillbuffDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillbuffDesc, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillbuffDesc, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillbuffDesc, point_),
  };
  skillskillbuffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskillbuffDesc_descriptor_,
      skillskillbuffDesc::default_instance_,
      skillskillbuffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillbuffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillbuffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskillbuffDesc));
  skillskill_descriptor_ = file->message_type(7);
  static const int skillskill_offsets_[52] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, skilltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, displacetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, displacesign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, displacespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, distimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, breaktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, cdskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, relation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, unlockcondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, cd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, nolock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, fighting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, fightingparama_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, releasetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, processtypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, flyspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, acttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, readytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, attacktime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, damagetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, attackdistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, rangetypevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, warn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, dazetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, warntime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, infomationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, attackmindistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, goalmaxnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, goalmaxnummonster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, damagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, awakedamagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, advancetype1damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, advancetype2damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, advancetype3damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, damagevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, damageparama_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, addhitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, awakeitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, awakecostnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, advancetype1buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, advancetype2buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, awakebuff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, advancetype3buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, buff_),
  };
  skillskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskill_descriptor_,
      skillskill::default_instance_,
      skillskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskill));
  Sheet_skillskill_descriptor_ = file->message_type(8);
  static const int Sheet_skillskill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskill, skillskill_list_),
  };
  Sheet_skillskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_skillskill_descriptor_,
      Sheet_skillskill::default_instance_,
      Sheet_skillskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_skillskill));
  skillbuffUp_descriptor_ = file->message_type(9);
  static const int skillbuffUp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuffUp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuffUp, addstartprobability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuffUp, attributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuffUp, parama_),
  };
  skillbuffUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillbuffUp_descriptor_,
      skillbuffUp::default_instance_,
      skillbuffUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuffUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillbuffUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillbuffUp));
  Sheet_skillbuffUp_descriptor_ = file->message_type(10);
  static const int Sheet_skillbuffUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillbuffUp, skillbuffup_list_),
  };
  Sheet_skillbuffUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_skillbuffUp_descriptor_,
      Sheet_skillbuffUp::default_instance_,
      Sheet_skillbuffUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillbuffUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillbuffUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_skillbuffUp));
  skillskillUp_descriptor_ = file->message_type(11);
  static const int skillskillUp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, skilllv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, skillids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, rolelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, costitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, costnum_),
  };
  skillskillUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskillUp_descriptor_,
      skillskillUp::default_instance_,
      skillskillUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskillUp));
  Sheet_skillskillUp_descriptor_ = file->message_type(12);
  static const int Sheet_skillskillUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskillUp, skillskillup_list_),
  };
  Sheet_skillskillUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_skillskillUp_descriptor_,
      Sheet_skillskillUp::default_instance_,
      Sheet_skillskillUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskillUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskillUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_skillskillUp));
  skillskillAwake_descriptor_ = file->message_type(13);
  static const int skillskillAwake_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillAwake, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillAwake, costitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillAwake, costnum_),
  };
  skillskillAwake_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      skillskillAwake_descriptor_,
      skillskillAwake::default_instance_,
      skillskillAwake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillAwake, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(skillskillAwake, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(skillskillAwake));
  Sheet_skillskillAwake_descriptor_ = file->message_type(14);
  static const int Sheet_skillskillAwake_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskillAwake, skillskillawake_list_),
  };
  Sheet_skillskillAwake_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_skillskillAwake_descriptor_,
      Sheet_skillskillAwake::default_instance_,
      Sheet_skillskillAwake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskillAwake, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_skillskillAwake, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_skillskillAwake));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_skill_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillbuff_descriptor_, &skillbuff::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_skillbuff_descriptor_, &Sheet_skillbuff::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskilladvanceType1buffDesc_descriptor_, &skillskilladvanceType1buffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskilladvanceType2buffDesc_descriptor_, &skillskilladvanceType2buffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskillawakebuffDesc_descriptor_, &skillskillawakebuffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskilladvanceType3buffDesc_descriptor_, &skillskilladvanceType3buffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskillbuffDesc_descriptor_, &skillskillbuffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskill_descriptor_, &skillskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_skillskill_descriptor_, &Sheet_skillskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillbuffUp_descriptor_, &skillbuffUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_skillbuffUp_descriptor_, &Sheet_skillbuffUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskillUp_descriptor_, &skillskillUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_skillskillUp_descriptor_, &Sheet_skillskillUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    skillskillAwake_descriptor_, &skillskillAwake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_skillskillAwake_descriptor_, &Sheet_skillskillAwake::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_skill_2eproto() {
  delete skillbuff::default_instance_;
  delete skillbuff_reflection_;
  delete Sheet_skillbuff::default_instance_;
  delete Sheet_skillbuff_reflection_;
  delete skillskilladvanceType1buffDesc::default_instance_;
  delete skillskilladvanceType1buffDesc_reflection_;
  delete skillskilladvanceType2buffDesc::default_instance_;
  delete skillskilladvanceType2buffDesc_reflection_;
  delete skillskillawakebuffDesc::default_instance_;
  delete skillskillawakebuffDesc_reflection_;
  delete skillskilladvanceType3buffDesc::default_instance_;
  delete skillskilladvanceType3buffDesc_reflection_;
  delete skillskillbuffDesc::default_instance_;
  delete skillskillbuffDesc_reflection_;
  delete skillskill::default_instance_;
  delete skillskill_reflection_;
  delete Sheet_skillskill::default_instance_;
  delete Sheet_skillskill_reflection_;
  delete skillbuffUp::default_instance_;
  delete skillbuffUp_reflection_;
  delete Sheet_skillbuffUp::default_instance_;
  delete Sheet_skillbuffUp_reflection_;
  delete skillskillUp::default_instance_;
  delete skillskillUp_reflection_;
  delete Sheet_skillskillUp::default_instance_;
  delete Sheet_skillskillUp_reflection_;
  delete skillskillAwake::default_instance_;
  delete skillskillAwake_reflection_;
  delete Sheet_skillskillAwake::default_instance_;
  delete Sheet_skillskillAwake_reflection_;
}

void protobuf_AddDesc_skill_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013skill.proto\022\010proto_ff\032\025yd_fieldoptions"
    ".proto\"\300\006\n\tskillbuff\022 \n\006buffID\030\001 \001(\003B\020\302\377"
    "\024\014\351\231\204\345\212\240buffid\022$\n\010buffName\030\002 \001(\tB\022\302\377\024\nbu"
    "ff\345\220\215\347\247\260\220\301\024<\022$\n\010buffIcon\030\003 \001(\tB\022\302\377\024\nbuff"
    "\345\233\276\346\240\207\220\301\024<\022-\n\017effectResources\030\004 \001(\tB\024\302\377\024"
    "\014\347\211\271\346\225\210\350\267\257\345\276\204\220\301\024<\022\"\n\010showTpye\030\005 \001(\005B\020\302\377\024"
    "\014\346\230\276\347\244\272\347\261\273\345\236\213\022*\n\020startProbability\030\006 \001(\005B"
    "\020\302\377\024\014\347\224\237\346\225\210\346\246\202\347\216\207\0220\n\016Probability_up\030\007 \001("
    "\005B\030\302\377\024\024\346\246\202\347\216\207\346\210\220\351\225\277\347\263\273\346\225\260ID\022#\n\tstartType"
    "\030\010 \001(\005B\020\302\377\024\014\347\224\237\346\225\210\346\235\241\344\273\266\0222\n\016startTypeVal"
    "ue\030\t \001(\tB\032\302\377\024\022\347\224\237\346\225\210\346\235\241\344\273\266\345\217\202\346\225\260\220\301\024<\022\'\n\007"
    "endType\030\n \001(\005B\026\302\377\024\022\345\270\270\350\247\204\347\273\223\346\235\237\346\235\241\344\273\266\0220\n"
    "\014endTypeValue\030\013 \001(\tB\032\302\377\024\022\347\224\237\346\225\210\346\235\241\344\273\266\345\217\202"
    "\346\225\260\220\301\024<\022\032\n\005group\030\014 \001(\005B\013\302\377\024\007buff\347\273\204\0225\n\010b"
    "uffRule\030\r \001(\tB#\302\377\024\033\345\220\214\344\270\200\347\212\266\346\200\201\347\273\204\345\217\240\345\212\240"
    "\350\247\204\345\210\231\220\301\024<\022&\n\006immune\030\016 \001(\tB\026\302\377\024\016\345\205\215\347\226\253\347\232"
    "\204\347\273\204id\220\301\024<\022&\n\006dispel\030\017 \001(\tB\026\302\377\024\016\351\251\261\346\225\243\347\232"
    "\204\347\273\204id\220\301\024<\022\036\n\006buffCd\030\020 \001(\005B\016\302\377\024\nbuff\345\206\267\345"
    "\215\264\022#\n\013effect_Time\030\021 \001(\005B\016\302\377\024\nbuff\346\227\266\351\227\264\022"
    "%\n\013effect_Type\030\022 \001(\005B\020\302\377\024\014\346\225\210\346\236\234\347\261\273\345\236\213\022*"
    "\n\014effect_Param\030\023 \001(\tB\024\302\377\024\014\346\225\210\346\236\234\345\217\202\346\225\260\220\301"
    "\024<\022%\n\teffect_up\030\024 \001(\005B\022\302\377\024\016\346\210\220\351\225\277\347\263\273\346\225\260I"
    "D\"D\n\017Sheet_skillbuff\0221\n\016skillbuff_List\030\001"
    " \003(\0132\023.proto_ff.skillbuffB\004\210\301\024d\"4\n\036skill"
    "skilladvanceType1buffDesc\022\022\n\002ID\030\001 \001(\003B\006\302"
    "\377\024\002id\"4\n\036skillskilladvanceType2buffDesc\022"
    "\022\n\002ID\030\001 \001(\003B\006\302\377\024\002id\"-\n\027skillskillawakebu"
    "ffDesc\022\022\n\002ID\030\001 \001(\003B\006\302\377\024\002id\"4\n\036skillskill"
    "advanceType3buffDesc\022\022\n\002ID\030\001 \001(\003B\006\302\377\024\002id"
    "\"b\n\022skillskillbuffDesc\022\032\n\006Target\030\001 \001(\005B\n"
    "\302\377\024\006\345\275\222\345\261\236\022\022\n\002ID\030\002 \001(\003B\006\302\377\024\002id\022\034\n\005Point\030"
    "\003 \001(\005B\r\302\377\024\t\347\224\237\346\225\210\347\202\271\"\372\022\n\nskillskill\022\035\n\007s"
    "killID\030\001 \001(\003B\014\302\377\024\010\346\212\200\350\203\275id\022\034\n\004name\030\002 \001(\t"
    "B\016\302\377\024\006\345\220\215\347\247\260\220\301\024<\022#\n\tskillType\030\003 \001(\005B\020\302\377\024"
    "\014\346\212\200\350\203\275\347\261\273\345\236\213\022\034\n\005group\030\004 \001(\005B\r\302\377\024\t\346\212\200\350\203\275"
    "\347\273\204\022\"\n\010position\030\005 \001(\005B\020\302\377\024\014\346\212\200\350\203\275\344\275\215\347\275\256\022"
    "/\n\014displaceTime\030\006 \001(\005B\031\302\377\024\025\344\275\215\347\247\273\345\274\200\345\247\213\346"
    "\227\266\351\227\264\347\202\271\022,\n\014displaceSign\030\007 \001(\005B\026\302\377\024\022\344\275\215\347"
    "\247\273\346\255\243\350\264\237\346\240\207\350\256\260\022+\n\rdisplaceSpeed\030\010 \001(\tB\024\302"
    "\377\024\014\344\275\215\347\247\273\351\200\237\345\272\246\220\301\024<\022&\n\010disTimes\030\t \001(\tB\024\302"
    "\377\024\014\344\275\215\347\247\273\346\227\266\351\227\264\220\301\024<\022#\n\tbreakType\030\n \001(\005B\020"
    "\302\377\024\014\346\211\223\346\226\255\347\261\273\345\236\213\022#\n\007cdSkill\030\013 \001(\005B\022\302\377\024\016C"
    "D\350\203\275\345\220\246\345\207\217\345\260\221\022\"\n\010Relation\030\014 \001(\003B\020\302\377\024\014\346\231\256"
    "\346\224\273\345\205\263\350\201\224\022-\n\017unlockCondition\030\r \001(\tB\024\302\377\024\014"
    "\350\247\243\351\224\201\346\235\241\344\273\266\220\301\024<\022\036\n\004type\030\016 \001(\005B\020\302\377\024\014\347\233\256\346"
    "\240\207\347\261\273\345\236\213\022\022\n\002cd\030\017 \001(\005B\006\302\377\024\002cd\022 \n\006noLock\030\020"
    " \001(\005B\020\302\377\024\014\346\230\257\345\220\246\351\224\201\345\256\232\022+\n\010priority\030\021 \001(\005"
    "B\031\302\377\024\025\346\214\202\346\234\272\344\275\277\347\224\250\344\274\230\345\205\210\347\272\247\022)\n\010fighting\030"
    "\022 \001(\tB\027\302\377\024\017\345\210\235\345\247\213\346\210\230\346\226\227\345\212\233\220\301\024<\0221\n\016fighti"
    "ngParama\030\023 \001(\002B\031\302\377\024\025\346\210\230\346\226\227\345\212\233\346\210\220\351\225\277\347\263\273\346\225"
    "\260\022%\n\013releaseType\030\024 \001(\005B\020\302\377\024\014\351\207\212\346\224\276\347\261\273\345\236\213"
    "\022&\n\014processTypes\030\025 \001(\005B\020\302\377\024\014\350\277\207\347\250\213\347\261\273\345\236\213"
    "\022\"\n\010flySpeed\030\026 \001(\005B\020\302\377\024\014\351\243\236\350\241\214\351\200\237\345\272\246\022$\n\007"
    "actTime\030\027 \001(\005B\023\302\377\024\017\345\212\250\344\275\234\346\200\273\346\227\266\351\227\264\022/\n\tre"
    "adyTime\030\030 \001(\005B\034\302\377\024\030\345\207\206\345\244\207\347\211\271\346\225\210\345\273\266\350\277\237\346\227\266"
    "\351\227\264\022\'\n\nattackTime\030\031 \001(\005B\023\302\377\024\017\346\224\273\345\207\273\346\200\273\346\227"
    "\266\351\227\264\0221\n\ndamageTime\030\032 \001(\tB\035\302\377\024\025\344\274\244\345\256\263\347\224\237\346"
    "\225\210\346\227\266\351\227\264\347\202\271\220\301\024<\022(\n\016attackDistance\030\033 \001(\005B"
    "\020\302\377\024\014\346\224\273\345\207\273\350\267\235\347\246\273\022#\n\trangeType\030\034 \001(\005B\020\302\377"
    "\024\014\350\214\203\345\233\264\347\261\273\345\236\213\022/\n\016rangeTypeValue\030\035 \001(\tB\027"
    "\302\377\024\017\350\214\203\345\233\264\347\261\273\345\236\213\345\200\274\220\301\024<\022\032\n\004warn\030\036 \001(\005B\014\302"
    "\377\024\010\351\242\204\350\255\246id\022\"\n\010dazeTime\030\037 \001(\005B\020\302\377\024\014\345\217\221\345\221"
    "\206\346\227\266\351\227\264\022\"\n\010warnTime\030  \001(\005B\020\302\377\024\014\351\242\204\350\255\246\346\227\266"
    "\351\227\264\022&\n\014infomationId\030! \001(\tB\020\302\377\024\010\346\217\220\347\244\272ID\220"
    "\301\024<\0221\n\021attackMinDistance\030\" \001(\005B\026\302\377\024\022\346\224\273\345"
    "\207\273\346\234\200\345\260\217\350\267\235\347\246\273\022*\n\ngoalMaxNum\030# \001(\005B\026\302\377\024\022"
    "\347\233\256\346\240\207\346\234\200\345\244\247\346\225\260\351\207\217\022=\n\021goalMaxNumMonster\030"
    "$ \001(\005B\"\302\377\024\036\347\233\256\346\240\207\346\234\200\345\244\247\346\225\260\351\207\217\357\274\210\346\200\252\347\211\251\357\274"
    "\211\022$\n\ndamageType\030% \001(\005B\020\302\377\024\014\344\274\244\345\256\263\347\261\273\345\236\213\022"
    "$\n\ndamageRate\030& \001(\005B\020\302\377\024\014\344\274\244\345\256\263\345\200\215\347\216\207\0222\n"
    "\017awakeDamageRate\030\' \001(\005B\031\302\377\024\025\350\247\211\351\206\222\345\220\216\346\212\200"
    "\350\203\275\345\200\215\347\216\207\022<\n\026advanceType1DamageRate\030( \001("
    "\005B\034\302\377\024\030\350\277\233\351\230\266\347\201\253\345\220\216\346\212\200\350\203\275\345\200\215\347\216\207\022<\n\026advan"
    "ceType2DamageRate\030) \001(\005B\034\302\377\024\030\350\277\233\351\230\266\351\233\267\345\220"
    "\216\346\212\200\350\203\275\345\200\215\347\216\207\022<\n\026advanceType3DamageRate\030"
    "* \001(\005B\034\302\377\024\030\350\277\233\351\230\266\345\206\260\345\220\216\346\212\200\350\203\275\345\200\215\347\216\207\022.\n\013d"
    "amageValue\030+ \001(\005B\031\302\377\024\025\351\231\204\345\212\240\344\274\244\345\256\263\345\210\235\345\247\213"
    "\345\200\274\0225\n\014damageParama\030, \001(\002B\037\302\377\024\033\344\274\244\345\256\263\345\233\272"
    "\345\256\232\345\200\274\346\210\220\351\225\277\347\263\273\346\225\260\022\'\n\naddhitrate\030- \001(\005B\023"
    "\302\377\024\017\351\231\204\345\212\240\345\221\275\344\270\255\347\216\207\0220\n\013awakeItemId\030. \001(\005"
    "B\033\302\377\024\027\350\247\211\351\206\222\346\266\210\350\200\227\347\232\204\351\201\223\345\205\267ID\022&\n\014awakeCo"
    "stNum\030/ \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\022\\\n\020advance"
    "Type1buff\0300 \003(\0132(.proto_ff.skillskilladv"
    "anceType1buffDescB\030\302\377\024\020\350\277\233\351\230\266\347\201\253buff\345\214\205\210"
    "\301\024\005\022\\\n\020advanceType2buff\0301 \003(\0132(.proto_ff"
    ".skillskilladvanceType2buffDescB\030\302\377\024\020\350\277\233"
    "\351\230\266\351\233\267buff\345\214\205\210\301\024\005\022K\n\tawakebuff\0302 \003(\0132!.p"
    "roto_ff.skillskillawakebuffDescB\025\302\377\024\r\350\247\211"
    "\351\206\222buff\345\214\205\210\301\024\005\022\\\n\020advanceType3buff\0303 \003(\013"
    "2(.proto_ff.skillskilladvanceType3buffDe"
    "scB\030\302\377\024\020\350\277\233\351\230\266\345\206\260buff\345\214\205\210\301\024\005\022;\n\004buff\0304 \003"
    "(\0132\034.proto_ff.skillskillbuffDescB\017\302\377\024\007bu"
    "ff\345\214\205\210\301\024\005\"H\n\020Sheet_skillskill\0224\n\017skillsk"
    "ill_List\030\001 \003(\0132\024.proto_ff.skillskillB\005\210\301"
    "\024\264\001\"\237\001\n\013skillbuffUp\022\030\n\002id\030\001 \001(\005B\014\302\377\024\010id\345"
    "\272\217\345\217\267\0220\n\023AddStartProbability\030\002 \001(\005B\023\302\377\024\017"
    "\346\246\202\347\216\207\346\210\220\351\225\277\345\200\274\022%\n\013attributeId\030\003 \001(\005B\020\302\377"
    "\024\014\345\261\236\346\200\247\347\261\273\345\236\213\022\035\n\006parama\030\004 \001(\005B\r\302\377\024\t\346\210\220\351"
    "\225\277\345\200\274\"J\n\021Sheet_skillbuffUp\0225\n\020skillbuffU"
    "p_List\030\001 \003(\0132\025.proto_ff.skillbuffUpB\004\210\301\024"
    "(\"\202\002\n\014skillskillUp\022\030\n\002id\030\001 \001(\005B\014\302\377\024\010\345\224\257\344"
    "\270\200id\022\030\n\005group\030\002 \001(\005B\t\302\377\024\005\347\273\204id\022!\n\007skillL"
    "v\030\003 \001(\005B\020\302\377\024\014\346\212\200\350\203\275\347\255\211\347\272\247\022%\n\010skillIds\030\004 "
    "\001(\tB\023\302\377\024\013\346\212\200\350\203\275ID\347\273\204\220\301\024P\022&\n\006roleLv\030\005 \001(\005"
    "B\026\302\377\024\022\351\234\200\346\261\202\344\272\272\347\211\251\347\255\211\347\272\247\022)\n\ncostItemId\030\006"
    " \001(\003B\025\302\377\024\021\346\266\210\350\200\227\347\232\204\351\201\223\345\205\267ID\022!\n\007costNum\030\007"
    " \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\"N\n\022Sheet_skillski"
    "llUp\0228\n\021skillskillUp_List\030\001 \003(\0132\026.proto_"
    "ff.skillskillUpB\005\210\301\024\214\001\"~\n\017skillskillAwak"
    "e\022\035\n\007skillId\030\001 \001(\005B\014\302\377\024\010\346\212\200\350\203\275ID\022)\n\ncost"
    "ItemId\030\002 \001(\005B\025\302\377\024\021\346\266\210\350\200\227\347\232\204\351\201\223\345\205\267ID\022!\n\007c"
    "ostNum\030\003 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\"V\n\025Sheet_"
    "skillskillAwake\022=\n\024skillskillAwake_List\030"
    "\001 \003(\0132\031.proto_ff.skillskillAwakeB\004\210\301\024\024", 4558);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "skill.proto", &protobuf_RegisterTypes);
  skillbuff::default_instance_ = new skillbuff();
  Sheet_skillbuff::default_instance_ = new Sheet_skillbuff();
  skillskilladvanceType1buffDesc::default_instance_ = new skillskilladvanceType1buffDesc();
  skillskilladvanceType2buffDesc::default_instance_ = new skillskilladvanceType2buffDesc();
  skillskillawakebuffDesc::default_instance_ = new skillskillawakebuffDesc();
  skillskilladvanceType3buffDesc::default_instance_ = new skillskilladvanceType3buffDesc();
  skillskillbuffDesc::default_instance_ = new skillskillbuffDesc();
  skillskill::default_instance_ = new skillskill();
  Sheet_skillskill::default_instance_ = new Sheet_skillskill();
  skillbuffUp::default_instance_ = new skillbuffUp();
  Sheet_skillbuffUp::default_instance_ = new Sheet_skillbuffUp();
  skillskillUp::default_instance_ = new skillskillUp();
  Sheet_skillskillUp::default_instance_ = new Sheet_skillskillUp();
  skillskillAwake::default_instance_ = new skillskillAwake();
  Sheet_skillskillAwake::default_instance_ = new Sheet_skillskillAwake();
  skillbuff::default_instance_->InitAsDefaultInstance();
  Sheet_skillbuff::default_instance_->InitAsDefaultInstance();
  skillskilladvanceType1buffDesc::default_instance_->InitAsDefaultInstance();
  skillskilladvanceType2buffDesc::default_instance_->InitAsDefaultInstance();
  skillskillawakebuffDesc::default_instance_->InitAsDefaultInstance();
  skillskilladvanceType3buffDesc::default_instance_->InitAsDefaultInstance();
  skillskillbuffDesc::default_instance_->InitAsDefaultInstance();
  skillskill::default_instance_->InitAsDefaultInstance();
  Sheet_skillskill::default_instance_->InitAsDefaultInstance();
  skillbuffUp::default_instance_->InitAsDefaultInstance();
  Sheet_skillbuffUp::default_instance_->InitAsDefaultInstance();
  skillskillUp::default_instance_->InitAsDefaultInstance();
  Sheet_skillskillUp::default_instance_->InitAsDefaultInstance();
  skillskillAwake::default_instance_->InitAsDefaultInstance();
  Sheet_skillskillAwake::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_skill_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_skill_2eproto {
  StaticDescriptorInitializer_skill_2eproto() {
    protobuf_AddDesc_skill_2eproto();
  }
} static_descriptor_initializer_skill_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int skillbuff::kBuffIDFieldNumber;
const int skillbuff::kBuffNameFieldNumber;
const int skillbuff::kBuffIconFieldNumber;
const int skillbuff::kEffectResourcesFieldNumber;
const int skillbuff::kShowTpyeFieldNumber;
const int skillbuff::kStartProbabilityFieldNumber;
const int skillbuff::kProbabilityUpFieldNumber;
const int skillbuff::kStartTypeFieldNumber;
const int skillbuff::kStartTypeValueFieldNumber;
const int skillbuff::kEndTypeFieldNumber;
const int skillbuff::kEndTypeValueFieldNumber;
const int skillbuff::kGroupFieldNumber;
const int skillbuff::kBuffRuleFieldNumber;
const int skillbuff::kImmuneFieldNumber;
const int skillbuff::kDispelFieldNumber;
const int skillbuff::kBuffCdFieldNumber;
const int skillbuff::kEffectTimeFieldNumber;
const int skillbuff::kEffectTypeFieldNumber;
const int skillbuff::kEffectParamFieldNumber;
const int skillbuff::kEffectUpFieldNumber;
#endif  // !_MSC_VER

skillbuff::skillbuff()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillbuff::InitAsDefaultInstance() {
}

skillbuff::skillbuff(const skillbuff& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillbuff::SharedCtor() {
  _cached_size_ = 0;
  buffid_ = GOOGLE_LONGLONG(0);
  buffname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bufficon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  effectresources_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  showtpye_ = 0;
  startprobability_ = 0;
  probability_up_ = 0;
  starttype_ = 0;
  starttypevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  endtype_ = 0;
  endtypevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  group_ = 0;
  buffrule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  immune_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dispel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  buffcd_ = 0;
  effect_time_ = 0;
  effect_type_ = 0;
  effect_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  effect_up_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillbuff::~skillbuff() {
  SharedDtor();
}

void skillbuff::SharedDtor() {
  if (buffname_ != &::google::protobuf::internal::kEmptyString) {
    delete buffname_;
  }
  if (bufficon_ != &::google::protobuf::internal::kEmptyString) {
    delete bufficon_;
  }
  if (effectresources_ != &::google::protobuf::internal::kEmptyString) {
    delete effectresources_;
  }
  if (starttypevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete starttypevalue_;
  }
  if (endtypevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete endtypevalue_;
  }
  if (buffrule_ != &::google::protobuf::internal::kEmptyString) {
    delete buffrule_;
  }
  if (immune_ != &::google::protobuf::internal::kEmptyString) {
    delete immune_;
  }
  if (dispel_ != &::google::protobuf::internal::kEmptyString) {
    delete dispel_;
  }
  if (effect_param_ != &::google::protobuf::internal::kEmptyString) {
    delete effect_param_;
  }
  if (this != default_instance_) {
  }
}

void skillbuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillbuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillbuff_descriptor_;
}

const skillbuff& skillbuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillbuff* skillbuff::default_instance_ = NULL;

skillbuff* skillbuff::New() const {
  return new skillbuff;
}

void skillbuff::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buffid_ = GOOGLE_LONGLONG(0);
    if (has_buffname()) {
      if (buffname_ != &::google::protobuf::internal::kEmptyString) {
        buffname_->clear();
      }
    }
    if (has_bufficon()) {
      if (bufficon_ != &::google::protobuf::internal::kEmptyString) {
        bufficon_->clear();
      }
    }
    if (has_effectresources()) {
      if (effectresources_ != &::google::protobuf::internal::kEmptyString) {
        effectresources_->clear();
      }
    }
    showtpye_ = 0;
    startprobability_ = 0;
    probability_up_ = 0;
    starttype_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_starttypevalue()) {
      if (starttypevalue_ != &::google::protobuf::internal::kEmptyString) {
        starttypevalue_->clear();
      }
    }
    endtype_ = 0;
    if (has_endtypevalue()) {
      if (endtypevalue_ != &::google::protobuf::internal::kEmptyString) {
        endtypevalue_->clear();
      }
    }
    group_ = 0;
    if (has_buffrule()) {
      if (buffrule_ != &::google::protobuf::internal::kEmptyString) {
        buffrule_->clear();
      }
    }
    if (has_immune()) {
      if (immune_ != &::google::protobuf::internal::kEmptyString) {
        immune_->clear();
      }
    }
    if (has_dispel()) {
      if (dispel_ != &::google::protobuf::internal::kEmptyString) {
        dispel_->clear();
      }
    }
    buffcd_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    effect_time_ = 0;
    effect_type_ = 0;
    if (has_effect_param()) {
      if (effect_param_ != &::google::protobuf::internal::kEmptyString) {
        effect_param_->clear();
      }
    }
    effect_up_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillbuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 buffID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_buffName;
        break;
      }

      // optional string buffName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buffname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buffname().data(), this->buffname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_buffIcon;
        break;
      }

      // optional string buffIcon = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffIcon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bufficon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bufficon().data(), this->bufficon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_effectResources;
        break;
      }

      // optional string effectResources = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectResources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectresources()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectresources().data(), this->effectresources().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_showTpye;
        break;
      }

      // optional int32 showTpye = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_showTpye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &showtpye_)));
          set_has_showtpye();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_startProbability;
        break;
      }

      // optional int32 startProbability = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startProbability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startprobability_)));
          set_has_startprobability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_Probability_up;
        break;
      }

      // optional int32 Probability_up = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Probability_up:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &probability_up_)));
          set_has_probability_up();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_startType;
        break;
      }

      // optional int32 startType = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starttype_)));
          set_has_starttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_startTypeValue;
        break;
      }

      // optional string startTypeValue = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_startTypeValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starttypevalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->starttypevalue().data(), this->starttypevalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_endType;
        break;
      }

      // optional int32 endType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endtype_)));
          set_has_endtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_endTypeValue;
        break;
      }

      // optional string endTypeValue = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_endTypeValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endtypevalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->endtypevalue().data(), this->endtypevalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_group;
        break;
      }

      // optional int32 group = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_buffRule;
        break;
      }

      // optional string buffRule = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffRule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buffrule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buffrule().data(), this->buffrule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_immune;
        break;
      }

      // optional string immune = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_immune:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_immune()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->immune().data(), this->immune().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_dispel;
        break;
      }

      // optional string dispel = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dispel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dispel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dispel().data(), this->dispel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_buffCd;
        break;
      }

      // optional int32 buffCd = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buffCd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffcd_)));
          set_has_buffcd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_effect_Time;
        break;
      }

      // optional int32 effect_Time = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_Time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_time_)));
          set_has_effect_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_effect_Type;
        break;
      }

      // optional int32 effect_Type = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_type_)));
          set_has_effect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_effect_Param;
        break;
      }

      // optional string effect_Param = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effect_Param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effect_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effect_param().data(), this->effect_param().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_effect_up;
        break;
      }

      // optional int32 effect_up = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_up:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_up_)));
          set_has_effect_up();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillbuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 buffID = 1;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->buffid(), output);
  }

  // optional string buffName = 2;
  if (has_buffname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffname().data(), this->buffname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->buffname(), output);
  }

  // optional string buffIcon = 3;
  if (has_bufficon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bufficon().data(), this->bufficon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->bufficon(), output);
  }

  // optional string effectResources = 4;
  if (has_effectresources()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectresources().data(), this->effectresources().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->effectresources(), output);
  }

  // optional int32 showTpye = 5;
  if (has_showtpye()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->showtpye(), output);
  }

  // optional int32 startProbability = 6;
  if (has_startprobability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->startprobability(), output);
  }

  // optional int32 Probability_up = 7;
  if (has_probability_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->probability_up(), output);
  }

  // optional int32 startType = 8;
  if (has_starttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->starttype(), output);
  }

  // optional string startTypeValue = 9;
  if (has_starttypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starttypevalue().data(), this->starttypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->starttypevalue(), output);
  }

  // optional int32 endType = 10;
  if (has_endtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->endtype(), output);
  }

  // optional string endTypeValue = 11;
  if (has_endtypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->endtypevalue().data(), this->endtypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->endtypevalue(), output);
  }

  // optional int32 group = 12;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->group(), output);
  }

  // optional string buffRule = 13;
  if (has_buffrule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffrule().data(), this->buffrule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->buffrule(), output);
  }

  // optional string immune = 14;
  if (has_immune()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->immune().data(), this->immune().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->immune(), output);
  }

  // optional string dispel = 15;
  if (has_dispel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dispel().data(), this->dispel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->dispel(), output);
  }

  // optional int32 buffCd = 16;
  if (has_buffcd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->buffcd(), output);
  }

  // optional int32 effect_Time = 17;
  if (has_effect_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->effect_time(), output);
  }

  // optional int32 effect_Type = 18;
  if (has_effect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->effect_type(), output);
  }

  // optional string effect_Param = 19;
  if (has_effect_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effect_param().data(), this->effect_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->effect_param(), output);
  }

  // optional int32 effect_up = 20;
  if (has_effect_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->effect_up(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillbuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 buffID = 1;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->buffid(), target);
  }

  // optional string buffName = 2;
  if (has_buffname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffname().data(), this->buffname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->buffname(), target);
  }

  // optional string buffIcon = 3;
  if (has_bufficon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bufficon().data(), this->bufficon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bufficon(), target);
  }

  // optional string effectResources = 4;
  if (has_effectresources()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectresources().data(), this->effectresources().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->effectresources(), target);
  }

  // optional int32 showTpye = 5;
  if (has_showtpye()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->showtpye(), target);
  }

  // optional int32 startProbability = 6;
  if (has_startprobability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->startprobability(), target);
  }

  // optional int32 Probability_up = 7;
  if (has_probability_up()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->probability_up(), target);
  }

  // optional int32 startType = 8;
  if (has_starttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->starttype(), target);
  }

  // optional string startTypeValue = 9;
  if (has_starttypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starttypevalue().data(), this->starttypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->starttypevalue(), target);
  }

  // optional int32 endType = 10;
  if (has_endtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->endtype(), target);
  }

  // optional string endTypeValue = 11;
  if (has_endtypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->endtypevalue().data(), this->endtypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->endtypevalue(), target);
  }

  // optional int32 group = 12;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->group(), target);
  }

  // optional string buffRule = 13;
  if (has_buffrule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffrule().data(), this->buffrule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->buffrule(), target);
  }

  // optional string immune = 14;
  if (has_immune()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->immune().data(), this->immune().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->immune(), target);
  }

  // optional string dispel = 15;
  if (has_dispel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dispel().data(), this->dispel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->dispel(), target);
  }

  // optional int32 buffCd = 16;
  if (has_buffcd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->buffcd(), target);
  }

  // optional int32 effect_Time = 17;
  if (has_effect_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->effect_time(), target);
  }

  // optional int32 effect_Type = 18;
  if (has_effect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->effect_type(), target);
  }

  // optional string effect_Param = 19;
  if (has_effect_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effect_param().data(), this->effect_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->effect_param(), target);
  }

  // optional int32 effect_up = 20;
  if (has_effect_up()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->effect_up(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillbuff::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 buffID = 1;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->buffid());
    }

    // optional string buffName = 2;
    if (has_buffname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buffname());
    }

    // optional string buffIcon = 3;
    if (has_bufficon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bufficon());
    }

    // optional string effectResources = 4;
    if (has_effectresources()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectresources());
    }

    // optional int32 showTpye = 5;
    if (has_showtpye()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->showtpye());
    }

    // optional int32 startProbability = 6;
    if (has_startprobability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->startprobability());
    }

    // optional int32 Probability_up = 7;
    if (has_probability_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->probability_up());
    }

    // optional int32 startType = 8;
    if (has_starttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starttype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string startTypeValue = 9;
    if (has_starttypevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->starttypevalue());
    }

    // optional int32 endType = 10;
    if (has_endtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endtype());
    }

    // optional string endTypeValue = 11;
    if (has_endtypevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endtypevalue());
    }

    // optional int32 group = 12;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

    // optional string buffRule = 13;
    if (has_buffrule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buffrule());
    }

    // optional string immune = 14;
    if (has_immune()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->immune());
    }

    // optional string dispel = 15;
    if (has_dispel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dispel());
    }

    // optional int32 buffCd = 16;
    if (has_buffcd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffcd());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 effect_Time = 17;
    if (has_effect_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_time());
    }

    // optional int32 effect_Type = 18;
    if (has_effect_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_type());
    }

    // optional string effect_Param = 19;
    if (has_effect_param()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effect_param());
    }

    // optional int32 effect_up = 20;
    if (has_effect_up()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_up());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillbuff::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillbuff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillbuff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillbuff::MergeFrom(const skillbuff& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
    if (from.has_buffname()) {
      set_buffname(from.buffname());
    }
    if (from.has_bufficon()) {
      set_bufficon(from.bufficon());
    }
    if (from.has_effectresources()) {
      set_effectresources(from.effectresources());
    }
    if (from.has_showtpye()) {
      set_showtpye(from.showtpye());
    }
    if (from.has_startprobability()) {
      set_startprobability(from.startprobability());
    }
    if (from.has_probability_up()) {
      set_probability_up(from.probability_up());
    }
    if (from.has_starttype()) {
      set_starttype(from.starttype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_starttypevalue()) {
      set_starttypevalue(from.starttypevalue());
    }
    if (from.has_endtype()) {
      set_endtype(from.endtype());
    }
    if (from.has_endtypevalue()) {
      set_endtypevalue(from.endtypevalue());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_buffrule()) {
      set_buffrule(from.buffrule());
    }
    if (from.has_immune()) {
      set_immune(from.immune());
    }
    if (from.has_dispel()) {
      set_dispel(from.dispel());
    }
    if (from.has_buffcd()) {
      set_buffcd(from.buffcd());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_effect_time()) {
      set_effect_time(from.effect_time());
    }
    if (from.has_effect_type()) {
      set_effect_type(from.effect_type());
    }
    if (from.has_effect_param()) {
      set_effect_param(from.effect_param());
    }
    if (from.has_effect_up()) {
      set_effect_up(from.effect_up());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillbuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillbuff::CopyFrom(const skillbuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillbuff::IsInitialized() const {

  return true;
}

void skillbuff::Swap(skillbuff* other) {
  if (other != this) {
    std::swap(buffid_, other->buffid_);
    std::swap(buffname_, other->buffname_);
    std::swap(bufficon_, other->bufficon_);
    std::swap(effectresources_, other->effectresources_);
    std::swap(showtpye_, other->showtpye_);
    std::swap(startprobability_, other->startprobability_);
    std::swap(probability_up_, other->probability_up_);
    std::swap(starttype_, other->starttype_);
    std::swap(starttypevalue_, other->starttypevalue_);
    std::swap(endtype_, other->endtype_);
    std::swap(endtypevalue_, other->endtypevalue_);
    std::swap(group_, other->group_);
    std::swap(buffrule_, other->buffrule_);
    std::swap(immune_, other->immune_);
    std::swap(dispel_, other->dispel_);
    std::swap(buffcd_, other->buffcd_);
    std::swap(effect_time_, other->effect_time_);
    std::swap(effect_type_, other->effect_type_);
    std::swap(effect_param_, other->effect_param_);
    std::swap(effect_up_, other->effect_up_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillbuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillbuff_descriptor_;
  metadata.reflection = skillbuff_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_skillbuff::kSkillbuffListFieldNumber;
#endif  // !_MSC_VER

Sheet_skillbuff::Sheet_skillbuff()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_skillbuff::InitAsDefaultInstance() {
}

Sheet_skillbuff::Sheet_skillbuff(const Sheet_skillbuff& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_skillbuff::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_skillbuff::~Sheet_skillbuff() {
  SharedDtor();
}

void Sheet_skillbuff::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_skillbuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_skillbuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_skillbuff_descriptor_;
}

const Sheet_skillbuff& Sheet_skillbuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_skillbuff* Sheet_skillbuff::default_instance_ = NULL;

Sheet_skillbuff* Sheet_skillbuff::New() const {
  return new Sheet_skillbuff;
}

void Sheet_skillbuff::Clear() {
  skillbuff_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_skillbuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.skillbuff skillbuff_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillbuff_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillbuff_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skillbuff_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_skillbuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.skillbuff skillbuff_List = 1;
  for (int i = 0; i < this->skillbuff_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skillbuff_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_skillbuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.skillbuff skillbuff_List = 1;
  for (int i = 0; i < this->skillbuff_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skillbuff_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_skillbuff::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.skillbuff skillbuff_List = 1;
  total_size += 1 * this->skillbuff_list_size();
  for (int i = 0; i < this->skillbuff_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillbuff_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_skillbuff::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_skillbuff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_skillbuff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_skillbuff::MergeFrom(const Sheet_skillbuff& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillbuff_list_.MergeFrom(from.skillbuff_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_skillbuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_skillbuff::CopyFrom(const Sheet_skillbuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_skillbuff::IsInitialized() const {

  return true;
}

void Sheet_skillbuff::Swap(Sheet_skillbuff* other) {
  if (other != this) {
    skillbuff_list_.Swap(&other->skillbuff_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_skillbuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_skillbuff_descriptor_;
  metadata.reflection = Sheet_skillbuff_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskilladvanceType1buffDesc::kIDFieldNumber;
#endif  // !_MSC_VER

skillskilladvanceType1buffDesc::skillskilladvanceType1buffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskilladvanceType1buffDesc::InitAsDefaultInstance() {
}

skillskilladvanceType1buffDesc::skillskilladvanceType1buffDesc(const skillskilladvanceType1buffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskilladvanceType1buffDesc::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskilladvanceType1buffDesc::~skillskilladvanceType1buffDesc() {
  SharedDtor();
}

void skillskilladvanceType1buffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillskilladvanceType1buffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskilladvanceType1buffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskilladvanceType1buffDesc_descriptor_;
}

const skillskilladvanceType1buffDesc& skillskilladvanceType1buffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskilladvanceType1buffDesc* skillskilladvanceType1buffDesc::default_instance_ = NULL;

skillskilladvanceType1buffDesc* skillskilladvanceType1buffDesc::New() const {
  return new skillskilladvanceType1buffDesc;
}

void skillskilladvanceType1buffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskilladvanceType1buffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskilladvanceType1buffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskilladvanceType1buffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskilladvanceType1buffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskilladvanceType1buffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskilladvanceType1buffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskilladvanceType1buffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskilladvanceType1buffDesc::MergeFrom(const skillskilladvanceType1buffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskilladvanceType1buffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskilladvanceType1buffDesc::CopyFrom(const skillskilladvanceType1buffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskilladvanceType1buffDesc::IsInitialized() const {

  return true;
}

void skillskilladvanceType1buffDesc::Swap(skillskilladvanceType1buffDesc* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskilladvanceType1buffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskilladvanceType1buffDesc_descriptor_;
  metadata.reflection = skillskilladvanceType1buffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskilladvanceType2buffDesc::kIDFieldNumber;
#endif  // !_MSC_VER

skillskilladvanceType2buffDesc::skillskilladvanceType2buffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskilladvanceType2buffDesc::InitAsDefaultInstance() {
}

skillskilladvanceType2buffDesc::skillskilladvanceType2buffDesc(const skillskilladvanceType2buffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskilladvanceType2buffDesc::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskilladvanceType2buffDesc::~skillskilladvanceType2buffDesc() {
  SharedDtor();
}

void skillskilladvanceType2buffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillskilladvanceType2buffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskilladvanceType2buffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskilladvanceType2buffDesc_descriptor_;
}

const skillskilladvanceType2buffDesc& skillskilladvanceType2buffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskilladvanceType2buffDesc* skillskilladvanceType2buffDesc::default_instance_ = NULL;

skillskilladvanceType2buffDesc* skillskilladvanceType2buffDesc::New() const {
  return new skillskilladvanceType2buffDesc;
}

void skillskilladvanceType2buffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskilladvanceType2buffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskilladvanceType2buffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskilladvanceType2buffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskilladvanceType2buffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskilladvanceType2buffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskilladvanceType2buffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskilladvanceType2buffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskilladvanceType2buffDesc::MergeFrom(const skillskilladvanceType2buffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskilladvanceType2buffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskilladvanceType2buffDesc::CopyFrom(const skillskilladvanceType2buffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskilladvanceType2buffDesc::IsInitialized() const {

  return true;
}

void skillskilladvanceType2buffDesc::Swap(skillskilladvanceType2buffDesc* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskilladvanceType2buffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskilladvanceType2buffDesc_descriptor_;
  metadata.reflection = skillskilladvanceType2buffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskillawakebuffDesc::kIDFieldNumber;
#endif  // !_MSC_VER

skillskillawakebuffDesc::skillskillawakebuffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskillawakebuffDesc::InitAsDefaultInstance() {
}

skillskillawakebuffDesc::skillskillawakebuffDesc(const skillskillawakebuffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskillawakebuffDesc::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskillawakebuffDesc::~skillskillawakebuffDesc() {
  SharedDtor();
}

void skillskillawakebuffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillskillawakebuffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskillawakebuffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskillawakebuffDesc_descriptor_;
}

const skillskillawakebuffDesc& skillskillawakebuffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskillawakebuffDesc* skillskillawakebuffDesc::default_instance_ = NULL;

skillskillawakebuffDesc* skillskillawakebuffDesc::New() const {
  return new skillskillawakebuffDesc;
}

void skillskillawakebuffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskillawakebuffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskillawakebuffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskillawakebuffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskillawakebuffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskillawakebuffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskillawakebuffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskillawakebuffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskillawakebuffDesc::MergeFrom(const skillskillawakebuffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskillawakebuffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskillawakebuffDesc::CopyFrom(const skillskillawakebuffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskillawakebuffDesc::IsInitialized() const {

  return true;
}

void skillskillawakebuffDesc::Swap(skillskillawakebuffDesc* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskillawakebuffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskillawakebuffDesc_descriptor_;
  metadata.reflection = skillskillawakebuffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskilladvanceType3buffDesc::kIDFieldNumber;
#endif  // !_MSC_VER

skillskilladvanceType3buffDesc::skillskilladvanceType3buffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskilladvanceType3buffDesc::InitAsDefaultInstance() {
}

skillskilladvanceType3buffDesc::skillskilladvanceType3buffDesc(const skillskilladvanceType3buffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskilladvanceType3buffDesc::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskilladvanceType3buffDesc::~skillskilladvanceType3buffDesc() {
  SharedDtor();
}

void skillskilladvanceType3buffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillskilladvanceType3buffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskilladvanceType3buffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskilladvanceType3buffDesc_descriptor_;
}

const skillskilladvanceType3buffDesc& skillskilladvanceType3buffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskilladvanceType3buffDesc* skillskilladvanceType3buffDesc::default_instance_ = NULL;

skillskilladvanceType3buffDesc* skillskilladvanceType3buffDesc::New() const {
  return new skillskilladvanceType3buffDesc;
}

void skillskilladvanceType3buffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskilladvanceType3buffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskilladvanceType3buffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskilladvanceType3buffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskilladvanceType3buffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskilladvanceType3buffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskilladvanceType3buffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskilladvanceType3buffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskilladvanceType3buffDesc::MergeFrom(const skillskilladvanceType3buffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskilladvanceType3buffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskilladvanceType3buffDesc::CopyFrom(const skillskilladvanceType3buffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskilladvanceType3buffDesc::IsInitialized() const {

  return true;
}

void skillskilladvanceType3buffDesc::Swap(skillskilladvanceType3buffDesc* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskilladvanceType3buffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskilladvanceType3buffDesc_descriptor_;
  metadata.reflection = skillskilladvanceType3buffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskillbuffDesc::kTargetFieldNumber;
const int skillskillbuffDesc::kIDFieldNumber;
const int skillskillbuffDesc::kPointFieldNumber;
#endif  // !_MSC_VER

skillskillbuffDesc::skillskillbuffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskillbuffDesc::InitAsDefaultInstance() {
}

skillskillbuffDesc::skillskillbuffDesc(const skillskillbuffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskillbuffDesc::SharedCtor() {
  _cached_size_ = 0;
  target_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  point_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskillbuffDesc::~skillskillbuffDesc() {
  SharedDtor();
}

void skillskillbuffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillskillbuffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskillbuffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskillbuffDesc_descriptor_;
}

const skillskillbuffDesc& skillskillbuffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskillbuffDesc* skillskillbuffDesc::default_instance_ = NULL;

skillskillbuffDesc* skillskillbuffDesc::New() const {
  return new skillskillbuffDesc;
}

void skillskillbuffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_ = 0;
    id_ = GOOGLE_LONGLONG(0);
    point_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskillbuffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Target = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
          set_has_target();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        break;
      }

      // optional int64 ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Point;
        break;
      }

      // optional int32 Point = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
          set_has_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskillbuffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Target = 1;
  if (has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target(), output);
  }

  // optional int64 ID = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // optional int32 Point = 3;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->point(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskillbuffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Target = 1;
  if (has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target(), target);
  }

  // optional int64 ID = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // optional int32 Point = 3;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->point(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskillbuffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Target = 1;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional int64 ID = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int32 Point = 3;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->point());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskillbuffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskillbuffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskillbuffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskillbuffDesc::MergeFrom(const skillskillbuffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target()) {
      set_target(from.target());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_point()) {
      set_point(from.point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskillbuffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskillbuffDesc::CopyFrom(const skillskillbuffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskillbuffDesc::IsInitialized() const {

  return true;
}

void skillskillbuffDesc::Swap(skillskillbuffDesc* other) {
  if (other != this) {
    std::swap(target_, other->target_);
    std::swap(id_, other->id_);
    std::swap(point_, other->point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskillbuffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskillbuffDesc_descriptor_;
  metadata.reflection = skillskillbuffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskill::kSkillIDFieldNumber;
const int skillskill::kNameFieldNumber;
const int skillskill::kSkillTypeFieldNumber;
const int skillskill::kGroupFieldNumber;
const int skillskill::kPositionFieldNumber;
const int skillskill::kDisplaceTimeFieldNumber;
const int skillskill::kDisplaceSignFieldNumber;
const int skillskill::kDisplaceSpeedFieldNumber;
const int skillskill::kDisTimesFieldNumber;
const int skillskill::kBreakTypeFieldNumber;
const int skillskill::kCdSkillFieldNumber;
const int skillskill::kRelationFieldNumber;
const int skillskill::kUnlockConditionFieldNumber;
const int skillskill::kTypeFieldNumber;
const int skillskill::kCdFieldNumber;
const int skillskill::kNoLockFieldNumber;
const int skillskill::kPriorityFieldNumber;
const int skillskill::kFightingFieldNumber;
const int skillskill::kFightingParamaFieldNumber;
const int skillskill::kReleaseTypeFieldNumber;
const int skillskill::kProcessTypesFieldNumber;
const int skillskill::kFlySpeedFieldNumber;
const int skillskill::kActTimeFieldNumber;
const int skillskill::kReadyTimeFieldNumber;
const int skillskill::kAttackTimeFieldNumber;
const int skillskill::kDamageTimeFieldNumber;
const int skillskill::kAttackDistanceFieldNumber;
const int skillskill::kRangeTypeFieldNumber;
const int skillskill::kRangeTypeValueFieldNumber;
const int skillskill::kWarnFieldNumber;
const int skillskill::kDazeTimeFieldNumber;
const int skillskill::kWarnTimeFieldNumber;
const int skillskill::kInfomationIdFieldNumber;
const int skillskill::kAttackMinDistanceFieldNumber;
const int skillskill::kGoalMaxNumFieldNumber;
const int skillskill::kGoalMaxNumMonsterFieldNumber;
const int skillskill::kDamageTypeFieldNumber;
const int skillskill::kDamageRateFieldNumber;
const int skillskill::kAwakeDamageRateFieldNumber;
const int skillskill::kAdvanceType1DamageRateFieldNumber;
const int skillskill::kAdvanceType2DamageRateFieldNumber;
const int skillskill::kAdvanceType3DamageRateFieldNumber;
const int skillskill::kDamageValueFieldNumber;
const int skillskill::kDamageParamaFieldNumber;
const int skillskill::kAddhitrateFieldNumber;
const int skillskill::kAwakeItemIdFieldNumber;
const int skillskill::kAwakeCostNumFieldNumber;
const int skillskill::kAdvanceType1BuffFieldNumber;
const int skillskill::kAdvanceType2BuffFieldNumber;
const int skillskill::kAwakebuffFieldNumber;
const int skillskill::kAdvanceType3BuffFieldNumber;
const int skillskill::kBuffFieldNumber;
#endif  // !_MSC_VER

skillskill::skillskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskill::InitAsDefaultInstance() {
}

skillskill::skillskill(const skillskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskill::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skilltype_ = 0;
  group_ = 0;
  position_ = 0;
  displacetime_ = 0;
  displacesign_ = 0;
  displacespeed_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  distimes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  breaktype_ = 0;
  cdskill_ = 0;
  relation_ = GOOGLE_LONGLONG(0);
  unlockcondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  cd_ = 0;
  nolock_ = 0;
  priority_ = 0;
  fighting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fightingparama_ = 0;
  releasetype_ = 0;
  processtypes_ = 0;
  flyspeed_ = 0;
  acttime_ = 0;
  readytime_ = 0;
  attacktime_ = 0;
  damagetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attackdistance_ = 0;
  rangetype_ = 0;
  rangetypevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  warn_ = 0;
  dazetime_ = 0;
  warntime_ = 0;
  infomationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attackmindistance_ = 0;
  goalmaxnum_ = 0;
  goalmaxnummonster_ = 0;
  damagetype_ = 0;
  damagerate_ = 0;
  awakedamagerate_ = 0;
  advancetype1damagerate_ = 0;
  advancetype2damagerate_ = 0;
  advancetype3damagerate_ = 0;
  damagevalue_ = 0;
  damageparama_ = 0;
  addhitrate_ = 0;
  awakeitemid_ = 0;
  awakecostnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskill::~skillskill() {
  SharedDtor();
}

void skillskill::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (displacespeed_ != &::google::protobuf::internal::kEmptyString) {
    delete displacespeed_;
  }
  if (distimes_ != &::google::protobuf::internal::kEmptyString) {
    delete distimes_;
  }
  if (unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
    delete unlockcondition_;
  }
  if (fighting_ != &::google::protobuf::internal::kEmptyString) {
    delete fighting_;
  }
  if (damagetime_ != &::google::protobuf::internal::kEmptyString) {
    delete damagetime_;
  }
  if (rangetypevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete rangetypevalue_;
  }
  if (infomationid_ != &::google::protobuf::internal::kEmptyString) {
    delete infomationid_;
  }
  if (this != default_instance_) {
  }
}

void skillskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskill_descriptor_;
}

const skillskill& skillskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskill* skillskill::default_instance_ = NULL;

skillskill* skillskill::New() const {
  return new skillskill;
}

void skillskill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    skilltype_ = 0;
    group_ = 0;
    position_ = 0;
    displacetime_ = 0;
    displacesign_ = 0;
    if (has_displacespeed()) {
      if (displacespeed_ != &::google::protobuf::internal::kEmptyString) {
        displacespeed_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_distimes()) {
      if (distimes_ != &::google::protobuf::internal::kEmptyString) {
        distimes_->clear();
      }
    }
    breaktype_ = 0;
    cdskill_ = 0;
    relation_ = GOOGLE_LONGLONG(0);
    if (has_unlockcondition()) {
      if (unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
        unlockcondition_->clear();
      }
    }
    type_ = 0;
    cd_ = 0;
    nolock_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    priority_ = 0;
    if (has_fighting()) {
      if (fighting_ != &::google::protobuf::internal::kEmptyString) {
        fighting_->clear();
      }
    }
    fightingparama_ = 0;
    releasetype_ = 0;
    processtypes_ = 0;
    flyspeed_ = 0;
    acttime_ = 0;
    readytime_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    attacktime_ = 0;
    if (has_damagetime()) {
      if (damagetime_ != &::google::protobuf::internal::kEmptyString) {
        damagetime_->clear();
      }
    }
    attackdistance_ = 0;
    rangetype_ = 0;
    if (has_rangetypevalue()) {
      if (rangetypevalue_ != &::google::protobuf::internal::kEmptyString) {
        rangetypevalue_->clear();
      }
    }
    warn_ = 0;
    dazetime_ = 0;
    warntime_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (has_infomationid()) {
      if (infomationid_ != &::google::protobuf::internal::kEmptyString) {
        infomationid_->clear();
      }
    }
    attackmindistance_ = 0;
    goalmaxnum_ = 0;
    goalmaxnummonster_ = 0;
    damagetype_ = 0;
    damagerate_ = 0;
    awakedamagerate_ = 0;
    advancetype1damagerate_ = 0;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    advancetype2damagerate_ = 0;
    advancetype3damagerate_ = 0;
    damagevalue_ = 0;
    damageparama_ = 0;
    addhitrate_ = 0;
    awakeitemid_ = 0;
    awakecostnum_ = 0;
  }
  advancetype1buff_.Clear();
  advancetype2buff_.Clear();
  awakebuff_.Clear();
  advancetype3buff_.Clear();
  buff_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 skillID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skillType;
        break;
      }

      // optional int32 skillType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skilltype_)));
          set_has_skilltype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_group;
        break;
      }

      // optional int32 group = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_position;
        break;
      }

      // optional int32 position = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
          set_has_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_displaceTime;
        break;
      }

      // optional int32 displaceTime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_displaceTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displacetime_)));
          set_has_displacetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_displaceSign;
        break;
      }

      // optional int32 displaceSign = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_displaceSign:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &displacesign_)));
          set_has_displacesign();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_displaceSpeed;
        break;
      }

      // optional string displaceSpeed = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_displaceSpeed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displacespeed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->displacespeed().data(), this->displacespeed().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_disTimes;
        break;
      }

      // optional string disTimes = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_disTimes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_distimes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->distimes().data(), this->distimes().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_breakType;
        break;
      }

      // optional int32 breakType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_breakType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &breaktype_)));
          set_has_breaktype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_cdSkill;
        break;
      }

      // optional int32 cdSkill = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cdSkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cdskill_)));
          set_has_cdskill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_Relation;
        break;
      }

      // optional int64 Relation = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Relation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &relation_)));
          set_has_relation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_unlockCondition;
        break;
      }

      // optional string unlockCondition = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unlockCondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlockcondition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->unlockcondition().data(), this->unlockcondition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_type;
        break;
      }

      // optional int32 type = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_cd;
        break;
      }

      // optional int32 cd = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cd_)));
          set_has_cd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_noLock;
        break;
      }

      // optional int32 noLock = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_noLock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nolock_)));
          set_has_nolock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_priority;
        break;
      }

      // optional int32 priority = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
          set_has_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_fighting;
        break;
      }

      // optional string fighting = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fighting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fighting()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fighting().data(), this->fighting().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(157)) goto parse_fightingParama;
        break;
      }

      // optional float fightingParama = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_fightingParama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fightingparama_)));
          set_has_fightingparama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_releaseType;
        break;
      }

      // optional int32 releaseType = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_releaseType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &releasetype_)));
          set_has_releasetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_processTypes;
        break;
      }

      // optional int32 processTypes = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_processTypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processtypes_)));
          set_has_processtypes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_flySpeed;
        break;
      }

      // optional int32 flySpeed = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flySpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flyspeed_)));
          set_has_flyspeed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_actTime;
        break;
      }

      // optional int32 actTime = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_actTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &acttime_)));
          set_has_acttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_readyTime;
        break;
      }

      // optional int32 readyTime = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_readyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &readytime_)));
          set_has_readytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_attackTime;
        break;
      }

      // optional int32 attackTime = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attackTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attacktime_)));
          set_has_attacktime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_damageTime;
        break;
      }

      // optional string damageTime = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_damageTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_damagetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->damagetime().data(), this->damagetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_attackDistance;
        break;
      }

      // optional int32 attackDistance = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attackDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attackdistance_)));
          set_has_attackdistance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_rangeType;
        break;
      }

      // optional int32 rangeType = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rangeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rangetype_)));
          set_has_rangetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_rangeTypeValue;
        break;
      }

      // optional string rangeTypeValue = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rangeTypeValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rangetypevalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rangetypevalue().data(), this->rangetypevalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_warn;
        break;
      }

      // optional int32 warn = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_warn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warn_)));
          set_has_warn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_dazeTime;
        break;
      }

      // optional int32 dazeTime = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dazeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dazetime_)));
          set_has_dazetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_warnTime;
        break;
      }

      // optional int32 warnTime = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_warnTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warntime_)));
          set_has_warntime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_infomationId;
        break;
      }

      // optional string infomationId = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_infomationId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infomationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->infomationid().data(), this->infomationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_attackMinDistance;
        break;
      }

      // optional int32 attackMinDistance = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attackMinDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attackmindistance_)));
          set_has_attackmindistance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_goalMaxNum;
        break;
      }

      // optional int32 goalMaxNum = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goalMaxNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goalmaxnum_)));
          set_has_goalmaxnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_goalMaxNumMonster;
        break;
      }

      // optional int32 goalMaxNumMonster = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goalMaxNumMonster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goalmaxnummonster_)));
          set_has_goalmaxnummonster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_damageType;
        break;
      }

      // optional int32 damageType = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_damageType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damagetype_)));
          set_has_damagetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_damageRate;
        break;
      }

      // optional int32 damageRate = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_damageRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damagerate_)));
          set_has_damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_awakeDamageRate;
        break;
      }

      // optional int32 awakeDamageRate = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_awakeDamageRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &awakedamagerate_)));
          set_has_awakedamagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_advanceType1DamageRate;
        break;
      }

      // optional int32 advanceType1DamageRate = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_advanceType1DamageRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advancetype1damagerate_)));
          set_has_advancetype1damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_advanceType2DamageRate;
        break;
      }

      // optional int32 advanceType2DamageRate = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_advanceType2DamageRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advancetype2damagerate_)));
          set_has_advancetype2damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_advanceType3DamageRate;
        break;
      }

      // optional int32 advanceType3DamageRate = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_advanceType3DamageRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advancetype3damagerate_)));
          set_has_advancetype3damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_damageValue;
        break;
      }

      // optional int32 damageValue = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_damageValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damagevalue_)));
          set_has_damagevalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(357)) goto parse_damageParama;
        break;
      }

      // optional float damageParama = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_damageParama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damageparama_)));
          set_has_damageparama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_addhitrate;
        break;
      }

      // optional int32 addhitrate = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addhitrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addhitrate_)));
          set_has_addhitrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_awakeItemId;
        break;
      }

      // optional int32 awakeItemId = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_awakeItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &awakeitemid_)));
          set_has_awakeitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_awakeCostNum;
        break;
      }

      // optional int32 awakeCostNum = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_awakeCostNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &awakecostnum_)));
          set_has_awakecostnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(386)) goto parse_advanceType1buff;
        break;
      }

      // repeated .proto_ff.skillskilladvanceType1buffDesc advanceType1buff = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_advanceType1buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advancetype1buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(386)) goto parse_advanceType1buff;
        if (input->ExpectTag(394)) goto parse_advanceType2buff;
        break;
      }

      // repeated .proto_ff.skillskilladvanceType2buffDesc advanceType2buff = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_advanceType2buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advancetype2buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(394)) goto parse_advanceType2buff;
        if (input->ExpectTag(402)) goto parse_awakebuff;
        break;
      }

      // repeated .proto_ff.skillskillawakebuffDesc awakebuff = 50;
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_awakebuff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_awakebuff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(402)) goto parse_awakebuff;
        if (input->ExpectTag(410)) goto parse_advanceType3buff;
        break;
      }

      // repeated .proto_ff.skillskilladvanceType3buffDesc advanceType3buff = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_advanceType3buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advancetype3buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(410)) goto parse_advanceType3buff;
        if (input->ExpectTag(418)) goto parse_buff;
        break;
      }

      // repeated .proto_ff.skillskillbuffDesc buff = 52;
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(418)) goto parse_buff;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 skillID = 1;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->skillid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int32 skillType = 3;
  if (has_skilltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skilltype(), output);
  }

  // optional int32 group = 4;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->group(), output);
  }

  // optional int32 position = 5;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->position(), output);
  }

  // optional int32 displaceTime = 6;
  if (has_displacetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->displacetime(), output);
  }

  // optional int32 displaceSign = 7;
  if (has_displacesign()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->displacesign(), output);
  }

  // optional string displaceSpeed = 8;
  if (has_displacespeed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->displacespeed().data(), this->displacespeed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->displacespeed(), output);
  }

  // optional string disTimes = 9;
  if (has_distimes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->distimes().data(), this->distimes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->distimes(), output);
  }

  // optional int32 breakType = 10;
  if (has_breaktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->breaktype(), output);
  }

  // optional int32 cdSkill = 11;
  if (has_cdskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cdskill(), output);
  }

  // optional int64 Relation = 12;
  if (has_relation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->relation(), output);
  }

  // optional string unlockCondition = 13;
  if (has_unlockcondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unlockcondition().data(), this->unlockcondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->unlockcondition(), output);
  }

  // optional int32 type = 14;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->type(), output);
  }

  // optional int32 cd = 15;
  if (has_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->cd(), output);
  }

  // optional int32 noLock = 16;
  if (has_nolock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->nolock(), output);
  }

  // optional int32 priority = 17;
  if (has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->priority(), output);
  }

  // optional string fighting = 18;
  if (has_fighting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fighting().data(), this->fighting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->fighting(), output);
  }

  // optional float fightingParama = 19;
  if (has_fightingparama()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->fightingparama(), output);
  }

  // optional int32 releaseType = 20;
  if (has_releasetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->releasetype(), output);
  }

  // optional int32 processTypes = 21;
  if (has_processtypes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->processtypes(), output);
  }

  // optional int32 flySpeed = 22;
  if (has_flyspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->flyspeed(), output);
  }

  // optional int32 actTime = 23;
  if (has_acttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->acttime(), output);
  }

  // optional int32 readyTime = 24;
  if (has_readytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->readytime(), output);
  }

  // optional int32 attackTime = 25;
  if (has_attacktime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->attacktime(), output);
  }

  // optional string damageTime = 26;
  if (has_damagetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->damagetime().data(), this->damagetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->damagetime(), output);
  }

  // optional int32 attackDistance = 27;
  if (has_attackdistance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->attackdistance(), output);
  }

  // optional int32 rangeType = 28;
  if (has_rangetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->rangetype(), output);
  }

  // optional string rangeTypeValue = 29;
  if (has_rangetypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rangetypevalue().data(), this->rangetypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->rangetypevalue(), output);
  }

  // optional int32 warn = 30;
  if (has_warn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->warn(), output);
  }

  // optional int32 dazeTime = 31;
  if (has_dazetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->dazetime(), output);
  }

  // optional int32 warnTime = 32;
  if (has_warntime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->warntime(), output);
  }

  // optional string infomationId = 33;
  if (has_infomationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->infomationid().data(), this->infomationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->infomationid(), output);
  }

  // optional int32 attackMinDistance = 34;
  if (has_attackmindistance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->attackmindistance(), output);
  }

  // optional int32 goalMaxNum = 35;
  if (has_goalmaxnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->goalmaxnum(), output);
  }

  // optional int32 goalMaxNumMonster = 36;
  if (has_goalmaxnummonster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->goalmaxnummonster(), output);
  }

  // optional int32 damageType = 37;
  if (has_damagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->damagetype(), output);
  }

  // optional int32 damageRate = 38;
  if (has_damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->damagerate(), output);
  }

  // optional int32 awakeDamageRate = 39;
  if (has_awakedamagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->awakedamagerate(), output);
  }

  // optional int32 advanceType1DamageRate = 40;
  if (has_advancetype1damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->advancetype1damagerate(), output);
  }

  // optional int32 advanceType2DamageRate = 41;
  if (has_advancetype2damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->advancetype2damagerate(), output);
  }

  // optional int32 advanceType3DamageRate = 42;
  if (has_advancetype3damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->advancetype3damagerate(), output);
  }

  // optional int32 damageValue = 43;
  if (has_damagevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->damagevalue(), output);
  }

  // optional float damageParama = 44;
  if (has_damageparama()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(44, this->damageparama(), output);
  }

  // optional int32 addhitrate = 45;
  if (has_addhitrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->addhitrate(), output);
  }

  // optional int32 awakeItemId = 46;
  if (has_awakeitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->awakeitemid(), output);
  }

  // optional int32 awakeCostNum = 47;
  if (has_awakecostnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->awakecostnum(), output);
  }

  // repeated .proto_ff.skillskilladvanceType1buffDesc advanceType1buff = 48;
  for (int i = 0; i < this->advancetype1buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->advancetype1buff(i), output);
  }

  // repeated .proto_ff.skillskilladvanceType2buffDesc advanceType2buff = 49;
  for (int i = 0; i < this->advancetype2buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->advancetype2buff(i), output);
  }

  // repeated .proto_ff.skillskillawakebuffDesc awakebuff = 50;
  for (int i = 0; i < this->awakebuff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->awakebuff(i), output);
  }

  // repeated .proto_ff.skillskilladvanceType3buffDesc advanceType3buff = 51;
  for (int i = 0; i < this->advancetype3buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->advancetype3buff(i), output);
  }

  // repeated .proto_ff.skillskillbuffDesc buff = 52;
  for (int i = 0; i < this->buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->buff(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 skillID = 1;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->skillid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 skillType = 3;
  if (has_skilltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skilltype(), target);
  }

  // optional int32 group = 4;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->group(), target);
  }

  // optional int32 position = 5;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->position(), target);
  }

  // optional int32 displaceTime = 6;
  if (has_displacetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->displacetime(), target);
  }

  // optional int32 displaceSign = 7;
  if (has_displacesign()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->displacesign(), target);
  }

  // optional string displaceSpeed = 8;
  if (has_displacespeed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->displacespeed().data(), this->displacespeed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->displacespeed(), target);
  }

  // optional string disTimes = 9;
  if (has_distimes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->distimes().data(), this->distimes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->distimes(), target);
  }

  // optional int32 breakType = 10;
  if (has_breaktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->breaktype(), target);
  }

  // optional int32 cdSkill = 11;
  if (has_cdskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cdskill(), target);
  }

  // optional int64 Relation = 12;
  if (has_relation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->relation(), target);
  }

  // optional string unlockCondition = 13;
  if (has_unlockcondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unlockcondition().data(), this->unlockcondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->unlockcondition(), target);
  }

  // optional int32 type = 14;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->type(), target);
  }

  // optional int32 cd = 15;
  if (has_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->cd(), target);
  }

  // optional int32 noLock = 16;
  if (has_nolock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->nolock(), target);
  }

  // optional int32 priority = 17;
  if (has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->priority(), target);
  }

  // optional string fighting = 18;
  if (has_fighting()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fighting().data(), this->fighting().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->fighting(), target);
  }

  // optional float fightingParama = 19;
  if (has_fightingparama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->fightingparama(), target);
  }

  // optional int32 releaseType = 20;
  if (has_releasetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->releasetype(), target);
  }

  // optional int32 processTypes = 21;
  if (has_processtypes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->processtypes(), target);
  }

  // optional int32 flySpeed = 22;
  if (has_flyspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->flyspeed(), target);
  }

  // optional int32 actTime = 23;
  if (has_acttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->acttime(), target);
  }

  // optional int32 readyTime = 24;
  if (has_readytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->readytime(), target);
  }

  // optional int32 attackTime = 25;
  if (has_attacktime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->attacktime(), target);
  }

  // optional string damageTime = 26;
  if (has_damagetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->damagetime().data(), this->damagetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->damagetime(), target);
  }

  // optional int32 attackDistance = 27;
  if (has_attackdistance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->attackdistance(), target);
  }

  // optional int32 rangeType = 28;
  if (has_rangetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->rangetype(), target);
  }

  // optional string rangeTypeValue = 29;
  if (has_rangetypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rangetypevalue().data(), this->rangetypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->rangetypevalue(), target);
  }

  // optional int32 warn = 30;
  if (has_warn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->warn(), target);
  }

  // optional int32 dazeTime = 31;
  if (has_dazetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->dazetime(), target);
  }

  // optional int32 warnTime = 32;
  if (has_warntime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->warntime(), target);
  }

  // optional string infomationId = 33;
  if (has_infomationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->infomationid().data(), this->infomationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->infomationid(), target);
  }

  // optional int32 attackMinDistance = 34;
  if (has_attackmindistance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->attackmindistance(), target);
  }

  // optional int32 goalMaxNum = 35;
  if (has_goalmaxnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->goalmaxnum(), target);
  }

  // optional int32 goalMaxNumMonster = 36;
  if (has_goalmaxnummonster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->goalmaxnummonster(), target);
  }

  // optional int32 damageType = 37;
  if (has_damagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->damagetype(), target);
  }

  // optional int32 damageRate = 38;
  if (has_damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->damagerate(), target);
  }

  // optional int32 awakeDamageRate = 39;
  if (has_awakedamagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->awakedamagerate(), target);
  }

  // optional int32 advanceType1DamageRate = 40;
  if (has_advancetype1damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->advancetype1damagerate(), target);
  }

  // optional int32 advanceType2DamageRate = 41;
  if (has_advancetype2damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->advancetype2damagerate(), target);
  }

  // optional int32 advanceType3DamageRate = 42;
  if (has_advancetype3damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->advancetype3damagerate(), target);
  }

  // optional int32 damageValue = 43;
  if (has_damagevalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->damagevalue(), target);
  }

  // optional float damageParama = 44;
  if (has_damageparama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(44, this->damageparama(), target);
  }

  // optional int32 addhitrate = 45;
  if (has_addhitrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->addhitrate(), target);
  }

  // optional int32 awakeItemId = 46;
  if (has_awakeitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->awakeitemid(), target);
  }

  // optional int32 awakeCostNum = 47;
  if (has_awakecostnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->awakecostnum(), target);
  }

  // repeated .proto_ff.skillskilladvanceType1buffDesc advanceType1buff = 48;
  for (int i = 0; i < this->advancetype1buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        48, this->advancetype1buff(i), target);
  }

  // repeated .proto_ff.skillskilladvanceType2buffDesc advanceType2buff = 49;
  for (int i = 0; i < this->advancetype2buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        49, this->advancetype2buff(i), target);
  }

  // repeated .proto_ff.skillskillawakebuffDesc awakebuff = 50;
  for (int i = 0; i < this->awakebuff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->awakebuff(i), target);
  }

  // repeated .proto_ff.skillskilladvanceType3buffDesc advanceType3buff = 51;
  for (int i = 0; i < this->advancetype3buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        51, this->advancetype3buff(i), target);
  }

  // repeated .proto_ff.skillskillbuffDesc buff = 52;
  for (int i = 0; i < this->buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        52, this->buff(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 skillID = 1;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->skillid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 skillType = 3;
    if (has_skilltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skilltype());
    }

    // optional int32 group = 4;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

    // optional int32 position = 5;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->position());
    }

    // optional int32 displaceTime = 6;
    if (has_displacetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->displacetime());
    }

    // optional int32 displaceSign = 7;
    if (has_displacesign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->displacesign());
    }

    // optional string displaceSpeed = 8;
    if (has_displacespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displacespeed());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string disTimes = 9;
    if (has_distimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->distimes());
    }

    // optional int32 breakType = 10;
    if (has_breaktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->breaktype());
    }

    // optional int32 cdSkill = 11;
    if (has_cdskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cdskill());
    }

    // optional int64 Relation = 12;
    if (has_relation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->relation());
    }

    // optional string unlockCondition = 13;
    if (has_unlockcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unlockcondition());
    }

    // optional int32 type = 14;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 cd = 15;
    if (has_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cd());
    }

    // optional int32 noLock = 16;
    if (has_nolock()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nolock());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 priority = 17;
    if (has_priority()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }

    // optional string fighting = 18;
    if (has_fighting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fighting());
    }

    // optional float fightingParama = 19;
    if (has_fightingparama()) {
      total_size += 2 + 4;
    }

    // optional int32 releaseType = 20;
    if (has_releasetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->releasetype());
    }

    // optional int32 processTypes = 21;
    if (has_processtypes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->processtypes());
    }

    // optional int32 flySpeed = 22;
    if (has_flyspeed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flyspeed());
    }

    // optional int32 actTime = 23;
    if (has_acttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->acttime());
    }

    // optional int32 readyTime = 24;
    if (has_readytime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->readytime());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 attackTime = 25;
    if (has_attacktime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attacktime());
    }

    // optional string damageTime = 26;
    if (has_damagetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->damagetime());
    }

    // optional int32 attackDistance = 27;
    if (has_attackdistance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attackdistance());
    }

    // optional int32 rangeType = 28;
    if (has_rangetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rangetype());
    }

    // optional string rangeTypeValue = 29;
    if (has_rangetypevalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rangetypevalue());
    }

    // optional int32 warn = 30;
    if (has_warn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->warn());
    }

    // optional int32 dazeTime = 31;
    if (has_dazetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dazetime());
    }

    // optional int32 warnTime = 32;
    if (has_warntime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->warntime());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional string infomationId = 33;
    if (has_infomationid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->infomationid());
    }

    // optional int32 attackMinDistance = 34;
    if (has_attackmindistance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attackmindistance());
    }

    // optional int32 goalMaxNum = 35;
    if (has_goalmaxnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goalmaxnum());
    }

    // optional int32 goalMaxNumMonster = 36;
    if (has_goalmaxnummonster()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goalmaxnummonster());
    }

    // optional int32 damageType = 37;
    if (has_damagetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damagetype());
    }

    // optional int32 damageRate = 38;
    if (has_damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damagerate());
    }

    // optional int32 awakeDamageRate = 39;
    if (has_awakedamagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->awakedamagerate());
    }

    // optional int32 advanceType1DamageRate = 40;
    if (has_advancetype1damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advancetype1damagerate());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional int32 advanceType2DamageRate = 41;
    if (has_advancetype2damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advancetype2damagerate());
    }

    // optional int32 advanceType3DamageRate = 42;
    if (has_advancetype3damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advancetype3damagerate());
    }

    // optional int32 damageValue = 43;
    if (has_damagevalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damagevalue());
    }

    // optional float damageParama = 44;
    if (has_damageparama()) {
      total_size += 2 + 4;
    }

    // optional int32 addhitrate = 45;
    if (has_addhitrate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addhitrate());
    }

    // optional int32 awakeItemId = 46;
    if (has_awakeitemid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->awakeitemid());
    }

    // optional int32 awakeCostNum = 47;
    if (has_awakecostnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->awakecostnum());
    }

  }
  // repeated .proto_ff.skillskilladvanceType1buffDesc advanceType1buff = 48;
  total_size += 2 * this->advancetype1buff_size();
  for (int i = 0; i < this->advancetype1buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advancetype1buff(i));
  }

  // repeated .proto_ff.skillskilladvanceType2buffDesc advanceType2buff = 49;
  total_size += 2 * this->advancetype2buff_size();
  for (int i = 0; i < this->advancetype2buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advancetype2buff(i));
  }

  // repeated .proto_ff.skillskillawakebuffDesc awakebuff = 50;
  total_size += 2 * this->awakebuff_size();
  for (int i = 0; i < this->awakebuff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->awakebuff(i));
  }

  // repeated .proto_ff.skillskilladvanceType3buffDesc advanceType3buff = 51;
  total_size += 2 * this->advancetype3buff_size();
  for (int i = 0; i < this->advancetype3buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advancetype3buff(i));
  }

  // repeated .proto_ff.skillskillbuffDesc buff = 52;
  total_size += 2 * this->buff_size();
  for (int i = 0; i < this->buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buff(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskill::MergeFrom(const skillskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  advancetype1buff_.MergeFrom(from.advancetype1buff_);
  advancetype2buff_.MergeFrom(from.advancetype2buff_);
  awakebuff_.MergeFrom(from.awakebuff_);
  advancetype3buff_.MergeFrom(from.advancetype3buff_);
  buff_.MergeFrom(from.buff_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_skilltype()) {
      set_skilltype(from.skilltype());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
    if (from.has_displacetime()) {
      set_displacetime(from.displacetime());
    }
    if (from.has_displacesign()) {
      set_displacesign(from.displacesign());
    }
    if (from.has_displacespeed()) {
      set_displacespeed(from.displacespeed());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_distimes()) {
      set_distimes(from.distimes());
    }
    if (from.has_breaktype()) {
      set_breaktype(from.breaktype());
    }
    if (from.has_cdskill()) {
      set_cdskill(from.cdskill());
    }
    if (from.has_relation()) {
      set_relation(from.relation());
    }
    if (from.has_unlockcondition()) {
      set_unlockcondition(from.unlockcondition());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cd()) {
      set_cd(from.cd());
    }
    if (from.has_nolock()) {
      set_nolock(from.nolock());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_priority()) {
      set_priority(from.priority());
    }
    if (from.has_fighting()) {
      set_fighting(from.fighting());
    }
    if (from.has_fightingparama()) {
      set_fightingparama(from.fightingparama());
    }
    if (from.has_releasetype()) {
      set_releasetype(from.releasetype());
    }
    if (from.has_processtypes()) {
      set_processtypes(from.processtypes());
    }
    if (from.has_flyspeed()) {
      set_flyspeed(from.flyspeed());
    }
    if (from.has_acttime()) {
      set_acttime(from.acttime());
    }
    if (from.has_readytime()) {
      set_readytime(from.readytime());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_attacktime()) {
      set_attacktime(from.attacktime());
    }
    if (from.has_damagetime()) {
      set_damagetime(from.damagetime());
    }
    if (from.has_attackdistance()) {
      set_attackdistance(from.attackdistance());
    }
    if (from.has_rangetype()) {
      set_rangetype(from.rangetype());
    }
    if (from.has_rangetypevalue()) {
      set_rangetypevalue(from.rangetypevalue());
    }
    if (from.has_warn()) {
      set_warn(from.warn());
    }
    if (from.has_dazetime()) {
      set_dazetime(from.dazetime());
    }
    if (from.has_warntime()) {
      set_warntime(from.warntime());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_infomationid()) {
      set_infomationid(from.infomationid());
    }
    if (from.has_attackmindistance()) {
      set_attackmindistance(from.attackmindistance());
    }
    if (from.has_goalmaxnum()) {
      set_goalmaxnum(from.goalmaxnum());
    }
    if (from.has_goalmaxnummonster()) {
      set_goalmaxnummonster(from.goalmaxnummonster());
    }
    if (from.has_damagetype()) {
      set_damagetype(from.damagetype());
    }
    if (from.has_damagerate()) {
      set_damagerate(from.damagerate());
    }
    if (from.has_awakedamagerate()) {
      set_awakedamagerate(from.awakedamagerate());
    }
    if (from.has_advancetype1damagerate()) {
      set_advancetype1damagerate(from.advancetype1damagerate());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_advancetype2damagerate()) {
      set_advancetype2damagerate(from.advancetype2damagerate());
    }
    if (from.has_advancetype3damagerate()) {
      set_advancetype3damagerate(from.advancetype3damagerate());
    }
    if (from.has_damagevalue()) {
      set_damagevalue(from.damagevalue());
    }
    if (from.has_damageparama()) {
      set_damageparama(from.damageparama());
    }
    if (from.has_addhitrate()) {
      set_addhitrate(from.addhitrate());
    }
    if (from.has_awakeitemid()) {
      set_awakeitemid(from.awakeitemid());
    }
    if (from.has_awakecostnum()) {
      set_awakecostnum(from.awakecostnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskill::CopyFrom(const skillskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskill::IsInitialized() const {

  return true;
}

void skillskill::Swap(skillskill* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(name_, other->name_);
    std::swap(skilltype_, other->skilltype_);
    std::swap(group_, other->group_);
    std::swap(position_, other->position_);
    std::swap(displacetime_, other->displacetime_);
    std::swap(displacesign_, other->displacesign_);
    std::swap(displacespeed_, other->displacespeed_);
    std::swap(distimes_, other->distimes_);
    std::swap(breaktype_, other->breaktype_);
    std::swap(cdskill_, other->cdskill_);
    std::swap(relation_, other->relation_);
    std::swap(unlockcondition_, other->unlockcondition_);
    std::swap(type_, other->type_);
    std::swap(cd_, other->cd_);
    std::swap(nolock_, other->nolock_);
    std::swap(priority_, other->priority_);
    std::swap(fighting_, other->fighting_);
    std::swap(fightingparama_, other->fightingparama_);
    std::swap(releasetype_, other->releasetype_);
    std::swap(processtypes_, other->processtypes_);
    std::swap(flyspeed_, other->flyspeed_);
    std::swap(acttime_, other->acttime_);
    std::swap(readytime_, other->readytime_);
    std::swap(attacktime_, other->attacktime_);
    std::swap(damagetime_, other->damagetime_);
    std::swap(attackdistance_, other->attackdistance_);
    std::swap(rangetype_, other->rangetype_);
    std::swap(rangetypevalue_, other->rangetypevalue_);
    std::swap(warn_, other->warn_);
    std::swap(dazetime_, other->dazetime_);
    std::swap(warntime_, other->warntime_);
    std::swap(infomationid_, other->infomationid_);
    std::swap(attackmindistance_, other->attackmindistance_);
    std::swap(goalmaxnum_, other->goalmaxnum_);
    std::swap(goalmaxnummonster_, other->goalmaxnummonster_);
    std::swap(damagetype_, other->damagetype_);
    std::swap(damagerate_, other->damagerate_);
    std::swap(awakedamagerate_, other->awakedamagerate_);
    std::swap(advancetype1damagerate_, other->advancetype1damagerate_);
    std::swap(advancetype2damagerate_, other->advancetype2damagerate_);
    std::swap(advancetype3damagerate_, other->advancetype3damagerate_);
    std::swap(damagevalue_, other->damagevalue_);
    std::swap(damageparama_, other->damageparama_);
    std::swap(addhitrate_, other->addhitrate_);
    std::swap(awakeitemid_, other->awakeitemid_);
    std::swap(awakecostnum_, other->awakecostnum_);
    advancetype1buff_.Swap(&other->advancetype1buff_);
    advancetype2buff_.Swap(&other->advancetype2buff_);
    awakebuff_.Swap(&other->awakebuff_);
    advancetype3buff_.Swap(&other->advancetype3buff_);
    buff_.Swap(&other->buff_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskill_descriptor_;
  metadata.reflection = skillskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_skillskill::kSkillskillListFieldNumber;
#endif  // !_MSC_VER

Sheet_skillskill::Sheet_skillskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_skillskill::InitAsDefaultInstance() {
}

Sheet_skillskill::Sheet_skillskill(const Sheet_skillskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_skillskill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_skillskill::~Sheet_skillskill() {
  SharedDtor();
}

void Sheet_skillskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_skillskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_skillskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_skillskill_descriptor_;
}

const Sheet_skillskill& Sheet_skillskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_skillskill* Sheet_skillskill::default_instance_ = NULL;

Sheet_skillskill* Sheet_skillskill::New() const {
  return new Sheet_skillskill;
}

void Sheet_skillskill::Clear() {
  skillskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_skillskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.skillskill skillskill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillskill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skillskill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_skillskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.skillskill skillskill_List = 1;
  for (int i = 0; i < this->skillskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skillskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_skillskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.skillskill skillskill_List = 1;
  for (int i = 0; i < this->skillskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skillskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_skillskill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.skillskill skillskill_List = 1;
  total_size += 1 * this->skillskill_list_size();
  for (int i = 0; i < this->skillskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_skillskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_skillskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_skillskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_skillskill::MergeFrom(const Sheet_skillskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillskill_list_.MergeFrom(from.skillskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_skillskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_skillskill::CopyFrom(const Sheet_skillskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_skillskill::IsInitialized() const {

  return true;
}

void Sheet_skillskill::Swap(Sheet_skillskill* other) {
  if (other != this) {
    skillskill_list_.Swap(&other->skillskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_skillskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_skillskill_descriptor_;
  metadata.reflection = Sheet_skillskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillbuffUp::kIdFieldNumber;
const int skillbuffUp::kAddStartProbabilityFieldNumber;
const int skillbuffUp::kAttributeIdFieldNumber;
const int skillbuffUp::kParamaFieldNumber;
#endif  // !_MSC_VER

skillbuffUp::skillbuffUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillbuffUp::InitAsDefaultInstance() {
}

skillbuffUp::skillbuffUp(const skillbuffUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillbuffUp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  addstartprobability_ = 0;
  attributeid_ = 0;
  parama_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillbuffUp::~skillbuffUp() {
  SharedDtor();
}

void skillbuffUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillbuffUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillbuffUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillbuffUp_descriptor_;
}

const skillbuffUp& skillbuffUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillbuffUp* skillbuffUp::default_instance_ = NULL;

skillbuffUp* skillbuffUp::New() const {
  return new skillbuffUp;
}

void skillbuffUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    addstartprobability_ = 0;
    attributeid_ = 0;
    parama_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillbuffUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_AddStartProbability;
        break;
      }

      // optional int32 AddStartProbability = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_AddStartProbability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addstartprobability_)));
          set_has_addstartprobability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attributeId;
        break;
      }

      // optional int32 attributeId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attributeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attributeid_)));
          set_has_attributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_parama;
        break;
      }

      // optional int32 parama = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_parama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parama_)));
          set_has_parama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillbuffUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 AddStartProbability = 2;
  if (has_addstartprobability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->addstartprobability(), output);
  }

  // optional int32 attributeId = 3;
  if (has_attributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attributeid(), output);
  }

  // optional int32 parama = 4;
  if (has_parama()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->parama(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillbuffUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 AddStartProbability = 2;
  if (has_addstartprobability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->addstartprobability(), target);
  }

  // optional int32 attributeId = 3;
  if (has_attributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attributeid(), target);
  }

  // optional int32 parama = 4;
  if (has_parama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->parama(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillbuffUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 AddStartProbability = 2;
    if (has_addstartprobability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addstartprobability());
    }

    // optional int32 attributeId = 3;
    if (has_attributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attributeid());
    }

    // optional int32 parama = 4;
    if (has_parama()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parama());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillbuffUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillbuffUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillbuffUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillbuffUp::MergeFrom(const skillbuffUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_addstartprobability()) {
      set_addstartprobability(from.addstartprobability());
    }
    if (from.has_attributeid()) {
      set_attributeid(from.attributeid());
    }
    if (from.has_parama()) {
      set_parama(from.parama());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillbuffUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillbuffUp::CopyFrom(const skillbuffUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillbuffUp::IsInitialized() const {

  return true;
}

void skillbuffUp::Swap(skillbuffUp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(addstartprobability_, other->addstartprobability_);
    std::swap(attributeid_, other->attributeid_);
    std::swap(parama_, other->parama_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillbuffUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillbuffUp_descriptor_;
  metadata.reflection = skillbuffUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_skillbuffUp::kSkillbuffUpListFieldNumber;
#endif  // !_MSC_VER

Sheet_skillbuffUp::Sheet_skillbuffUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_skillbuffUp::InitAsDefaultInstance() {
}

Sheet_skillbuffUp::Sheet_skillbuffUp(const Sheet_skillbuffUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_skillbuffUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_skillbuffUp::~Sheet_skillbuffUp() {
  SharedDtor();
}

void Sheet_skillbuffUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_skillbuffUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_skillbuffUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_skillbuffUp_descriptor_;
}

const Sheet_skillbuffUp& Sheet_skillbuffUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_skillbuffUp* Sheet_skillbuffUp::default_instance_ = NULL;

Sheet_skillbuffUp* Sheet_skillbuffUp::New() const {
  return new Sheet_skillbuffUp;
}

void Sheet_skillbuffUp::Clear() {
  skillbuffup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_skillbuffUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.skillbuffUp skillbuffUp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillbuffUp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillbuffup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skillbuffUp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_skillbuffUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.skillbuffUp skillbuffUp_List = 1;
  for (int i = 0; i < this->skillbuffup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skillbuffup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_skillbuffUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.skillbuffUp skillbuffUp_List = 1;
  for (int i = 0; i < this->skillbuffup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skillbuffup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_skillbuffUp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.skillbuffUp skillbuffUp_List = 1;
  total_size += 1 * this->skillbuffup_list_size();
  for (int i = 0; i < this->skillbuffup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillbuffup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_skillbuffUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_skillbuffUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_skillbuffUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_skillbuffUp::MergeFrom(const Sheet_skillbuffUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillbuffup_list_.MergeFrom(from.skillbuffup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_skillbuffUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_skillbuffUp::CopyFrom(const Sheet_skillbuffUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_skillbuffUp::IsInitialized() const {

  return true;
}

void Sheet_skillbuffUp::Swap(Sheet_skillbuffUp* other) {
  if (other != this) {
    skillbuffup_list_.Swap(&other->skillbuffup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_skillbuffUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_skillbuffUp_descriptor_;
  metadata.reflection = Sheet_skillbuffUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskillUp::kIdFieldNumber;
const int skillskillUp::kGroupFieldNumber;
const int skillskillUp::kSkillLvFieldNumber;
const int skillskillUp::kSkillIdsFieldNumber;
const int skillskillUp::kRoleLvFieldNumber;
const int skillskillUp::kCostItemIdFieldNumber;
const int skillskillUp::kCostNumFieldNumber;
#endif  // !_MSC_VER

skillskillUp::skillskillUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskillUp::InitAsDefaultInstance() {
}

skillskillUp::skillskillUp(const skillskillUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskillUp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  group_ = 0;
  skilllv_ = 0;
  skillids_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rolelv_ = 0;
  costitemid_ = GOOGLE_LONGLONG(0);
  costnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskillUp::~skillskillUp() {
  SharedDtor();
}

void skillskillUp::SharedDtor() {
  if (skillids_ != &::google::protobuf::internal::kEmptyString) {
    delete skillids_;
  }
  if (this != default_instance_) {
  }
}

void skillskillUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskillUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskillUp_descriptor_;
}

const skillskillUp& skillskillUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskillUp* skillskillUp::default_instance_ = NULL;

skillskillUp* skillskillUp::New() const {
  return new skillskillUp;
}

void skillskillUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    group_ = 0;
    skilllv_ = 0;
    if (has_skillids()) {
      if (skillids_ != &::google::protobuf::internal::kEmptyString) {
        skillids_->clear();
      }
    }
    rolelv_ = 0;
    costitemid_ = GOOGLE_LONGLONG(0);
    costnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskillUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_group;
        break;
      }

      // optional int32 group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skillLv;
        break;
      }

      // optional int32 skillLv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skilllv_)));
          set_has_skilllv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_skillIds;
        break;
      }

      // optional string skillIds = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skillids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skillids().data(), this->skillids().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_roleLv;
        break;
      }

      // optional int32 roleLv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolelv_)));
          set_has_rolelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_costItemId;
        break;
      }

      // optional int64 costItemId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &costitemid_)));
          set_has_costitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_costNum;
        break;
      }

      // optional int32 costNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costnum_)));
          set_has_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskillUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 group = 2;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group(), output);
  }

  // optional int32 skillLv = 3;
  if (has_skilllv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skilllv(), output);
  }

  // optional string skillIds = 4;
  if (has_skillids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skillids().data(), this->skillids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->skillids(), output);
  }

  // optional int32 roleLv = 5;
  if (has_rolelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rolelv(), output);
  }

  // optional int64 costItemId = 6;
  if (has_costitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->costitemid(), output);
  }

  // optional int32 costNum = 7;
  if (has_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->costnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskillUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 group = 2;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group(), target);
  }

  // optional int32 skillLv = 3;
  if (has_skilllv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skilllv(), target);
  }

  // optional string skillIds = 4;
  if (has_skillids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skillids().data(), this->skillids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->skillids(), target);
  }

  // optional int32 roleLv = 5;
  if (has_rolelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rolelv(), target);
  }

  // optional int64 costItemId = 6;
  if (has_costitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->costitemid(), target);
  }

  // optional int32 costNum = 7;
  if (has_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->costnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskillUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 group = 2;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

    // optional int32 skillLv = 3;
    if (has_skilllv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skilllv());
    }

    // optional string skillIds = 4;
    if (has_skillids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skillids());
    }

    // optional int32 roleLv = 5;
    if (has_rolelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolelv());
    }

    // optional int64 costItemId = 6;
    if (has_costitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->costitemid());
    }

    // optional int32 costNum = 7;
    if (has_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskillUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskillUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskillUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskillUp::MergeFrom(const skillskillUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_skilllv()) {
      set_skilllv(from.skilllv());
    }
    if (from.has_skillids()) {
      set_skillids(from.skillids());
    }
    if (from.has_rolelv()) {
      set_rolelv(from.rolelv());
    }
    if (from.has_costitemid()) {
      set_costitemid(from.costitemid());
    }
    if (from.has_costnum()) {
      set_costnum(from.costnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskillUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskillUp::CopyFrom(const skillskillUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskillUp::IsInitialized() const {

  return true;
}

void skillskillUp::Swap(skillskillUp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(group_, other->group_);
    std::swap(skilllv_, other->skilllv_);
    std::swap(skillids_, other->skillids_);
    std::swap(rolelv_, other->rolelv_);
    std::swap(costitemid_, other->costitemid_);
    std::swap(costnum_, other->costnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskillUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskillUp_descriptor_;
  metadata.reflection = skillskillUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_skillskillUp::kSkillskillUpListFieldNumber;
#endif  // !_MSC_VER

Sheet_skillskillUp::Sheet_skillskillUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_skillskillUp::InitAsDefaultInstance() {
}

Sheet_skillskillUp::Sheet_skillskillUp(const Sheet_skillskillUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_skillskillUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_skillskillUp::~Sheet_skillskillUp() {
  SharedDtor();
}

void Sheet_skillskillUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_skillskillUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_skillskillUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_skillskillUp_descriptor_;
}

const Sheet_skillskillUp& Sheet_skillskillUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_skillskillUp* Sheet_skillskillUp::default_instance_ = NULL;

Sheet_skillskillUp* Sheet_skillskillUp::New() const {
  return new Sheet_skillskillUp;
}

void Sheet_skillskillUp::Clear() {
  skillskillup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_skillskillUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.skillskillUp skillskillUp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillskillUp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillskillup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skillskillUp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_skillskillUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.skillskillUp skillskillUp_List = 1;
  for (int i = 0; i < this->skillskillup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skillskillup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_skillskillUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.skillskillUp skillskillUp_List = 1;
  for (int i = 0; i < this->skillskillup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skillskillup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_skillskillUp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.skillskillUp skillskillUp_List = 1;
  total_size += 1 * this->skillskillup_list_size();
  for (int i = 0; i < this->skillskillup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillskillup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_skillskillUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_skillskillUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_skillskillUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_skillskillUp::MergeFrom(const Sheet_skillskillUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillskillup_list_.MergeFrom(from.skillskillup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_skillskillUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_skillskillUp::CopyFrom(const Sheet_skillskillUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_skillskillUp::IsInitialized() const {

  return true;
}

void Sheet_skillskillUp::Swap(Sheet_skillskillUp* other) {
  if (other != this) {
    skillskillup_list_.Swap(&other->skillskillup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_skillskillUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_skillskillUp_descriptor_;
  metadata.reflection = Sheet_skillskillUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int skillskillAwake::kSkillIdFieldNumber;
const int skillskillAwake::kCostItemIdFieldNumber;
const int skillskillAwake::kCostNumFieldNumber;
#endif  // !_MSC_VER

skillskillAwake::skillskillAwake()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void skillskillAwake::InitAsDefaultInstance() {
}

skillskillAwake::skillskillAwake(const skillskillAwake& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void skillskillAwake::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = 0;
  costitemid_ = 0;
  costnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

skillskillAwake::~skillskillAwake() {
  SharedDtor();
}

void skillskillAwake::SharedDtor() {
  if (this != default_instance_) {
  }
}

void skillskillAwake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* skillskillAwake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return skillskillAwake_descriptor_;
}

const skillskillAwake& skillskillAwake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

skillskillAwake* skillskillAwake::default_instance_ = NULL;

skillskillAwake* skillskillAwake::New() const {
  return new skillskillAwake;
}

void skillskillAwake::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillid_ = 0;
    costitemid_ = 0;
    costnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool skillskillAwake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skillId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_costItemId;
        break;
      }

      // optional int32 costItemId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costitemid_)));
          set_has_costitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_costNum;
        break;
      }

      // optional int32 costNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costnum_)));
          set_has_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void skillskillAwake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skillId = 1;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skillid(), output);
  }

  // optional int32 costItemId = 2;
  if (has_costitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->costitemid(), output);
  }

  // optional int32 costNum = 3;
  if (has_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->costnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* skillskillAwake::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skillId = 1;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skillid(), target);
  }

  // optional int32 costItemId = 2;
  if (has_costitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->costitemid(), target);
  }

  // optional int32 costNum = 3;
  if (has_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->costnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int skillskillAwake::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skillId = 1;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 costItemId = 2;
    if (has_costitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costitemid());
    }

    // optional int32 costNum = 3;
    if (has_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void skillskillAwake::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const skillskillAwake* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const skillskillAwake*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void skillskillAwake::MergeFrom(const skillskillAwake& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_costitemid()) {
      set_costitemid(from.costitemid());
    }
    if (from.has_costnum()) {
      set_costnum(from.costnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void skillskillAwake::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillskillAwake::CopyFrom(const skillskillAwake& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillskillAwake::IsInitialized() const {

  return true;
}

void skillskillAwake::Swap(skillskillAwake* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(costitemid_, other->costitemid_);
    std::swap(costnum_, other->costnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata skillskillAwake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = skillskillAwake_descriptor_;
  metadata.reflection = skillskillAwake_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_skillskillAwake::kSkillskillAwakeListFieldNumber;
#endif  // !_MSC_VER

Sheet_skillskillAwake::Sheet_skillskillAwake()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_skillskillAwake::InitAsDefaultInstance() {
}

Sheet_skillskillAwake::Sheet_skillskillAwake(const Sheet_skillskillAwake& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_skillskillAwake::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_skillskillAwake::~Sheet_skillskillAwake() {
  SharedDtor();
}

void Sheet_skillskillAwake::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_skillskillAwake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_skillskillAwake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_skillskillAwake_descriptor_;
}

const Sheet_skillskillAwake& Sheet_skillskillAwake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_skillskillAwake* Sheet_skillskillAwake::default_instance_ = NULL;

Sheet_skillskillAwake* Sheet_skillskillAwake::New() const {
  return new Sheet_skillskillAwake;
}

void Sheet_skillskillAwake::Clear() {
  skillskillawake_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_skillskillAwake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.skillskillAwake skillskillAwake_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skillskillAwake_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillskillawake_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skillskillAwake_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_skillskillAwake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.skillskillAwake skillskillAwake_List = 1;
  for (int i = 0; i < this->skillskillawake_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skillskillawake_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_skillskillAwake::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.skillskillAwake skillskillAwake_List = 1;
  for (int i = 0; i < this->skillskillawake_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skillskillawake_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_skillskillAwake::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.skillskillAwake skillskillAwake_List = 1;
  total_size += 1 * this->skillskillawake_list_size();
  for (int i = 0; i < this->skillskillawake_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillskillawake_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_skillskillAwake::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_skillskillAwake* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_skillskillAwake*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_skillskillAwake::MergeFrom(const Sheet_skillskillAwake& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillskillawake_list_.MergeFrom(from.skillskillawake_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_skillskillAwake::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_skillskillAwake::CopyFrom(const Sheet_skillskillAwake& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_skillskillAwake::IsInitialized() const {

  return true;
}

void Sheet_skillskillAwake::Swap(Sheet_skillskillAwake* other) {
  if (other != this) {
    skillskillawake_list_.Swap(&other->skillskillawake_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_skillskillAwake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_skillskillAwake_descriptor_;
  metadata.reflection = Sheet_skillskillAwake_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
