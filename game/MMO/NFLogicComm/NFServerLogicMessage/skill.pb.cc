// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skill.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "skill.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_SkillBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SkillBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SkillBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillAdvancetype1buffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillAdvancetype1buffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillAdvancetype2buffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillAdvancetype2buffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillAwakebuffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillAwakebuffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillAdvancetype3buffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillAdvancetype3buffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillBuffDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillBuffDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SkillSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SkillSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillBuffup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillBuffup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SkillBuffup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SkillBuffup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SkillSkillup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SkillSkillup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkillawake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkillawake_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SkillSkillawake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SkillSkillawake_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_SkillSkilladvance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_SkillSkilladvance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_SkillSkilladvance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_SkillSkilladvance_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_skill_2eproto() {
  protobuf_AddDesc_skill_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "skill.proto");
  GOOGLE_CHECK(file != NULL);
  E_SkillBuff_descriptor_ = file->message_type(0);
  static const int E_SkillBuff_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_buffid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_buffname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_bufficon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_effectresources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_showtpye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_startprobability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_probability_up_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_starttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_starttypevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_endtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_endtypevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_buffrule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_immune_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_dispel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_buffcd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_effect_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_effect_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_effect_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, m_effect_up_),
  };
  E_SkillBuff_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillBuff_descriptor_,
      E_SkillBuff::default_instance_,
      E_SkillBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuff, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillBuff));
  Sheet_SkillBuff_descriptor_ = file->message_type(1);
  static const int Sheet_SkillBuff_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillBuff, e_skillbuff_list_),
  };
  Sheet_SkillBuff_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SkillBuff_descriptor_,
      Sheet_SkillBuff::default_instance_,
      Sheet_SkillBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillBuff, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillBuff, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SkillBuff));
  E_SkillSkillAdvancetype1buffDesc_descriptor_ = file->message_type(2);
  static const int E_SkillSkillAdvancetype1buffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype1buffDesc, m_id_),
  };
  E_SkillSkillAdvancetype1buffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillAdvancetype1buffDesc_descriptor_,
      E_SkillSkillAdvancetype1buffDesc::default_instance_,
      E_SkillSkillAdvancetype1buffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype1buffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype1buffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillAdvancetype1buffDesc));
  E_SkillSkillAdvancetype2buffDesc_descriptor_ = file->message_type(3);
  static const int E_SkillSkillAdvancetype2buffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype2buffDesc, m_id_),
  };
  E_SkillSkillAdvancetype2buffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillAdvancetype2buffDesc_descriptor_,
      E_SkillSkillAdvancetype2buffDesc::default_instance_,
      E_SkillSkillAdvancetype2buffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype2buffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype2buffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillAdvancetype2buffDesc));
  E_SkillSkillAwakebuffDesc_descriptor_ = file->message_type(4);
  static const int E_SkillSkillAwakebuffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAwakebuffDesc, m_id_),
  };
  E_SkillSkillAwakebuffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillAwakebuffDesc_descriptor_,
      E_SkillSkillAwakebuffDesc::default_instance_,
      E_SkillSkillAwakebuffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAwakebuffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAwakebuffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillAwakebuffDesc));
  E_SkillSkillAdvancetype3buffDesc_descriptor_ = file->message_type(5);
  static const int E_SkillSkillAdvancetype3buffDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype3buffDesc, m_id_),
  };
  E_SkillSkillAdvancetype3buffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillAdvancetype3buffDesc_descriptor_,
      E_SkillSkillAdvancetype3buffDesc::default_instance_,
      E_SkillSkillAdvancetype3buffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype3buffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillAdvancetype3buffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillAdvancetype3buffDesc));
  E_SkillSkillBuffDesc_descriptor_ = file->message_type(6);
  static const int E_SkillSkillBuffDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillBuffDesc, m_target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillBuffDesc, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillBuffDesc, m_point_),
  };
  E_SkillSkillBuffDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillBuffDesc_descriptor_,
      E_SkillSkillBuffDesc::default_instance_,
      E_SkillSkillBuffDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillBuffDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillBuffDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillBuffDesc));
  E_SkillSkill_descriptor_ = file->message_type(7);
  static const int E_SkillSkill_offsets_[54] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_skilltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_displacetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_displacesign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_displacespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_distimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_breaktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_cdskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_relation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_unlockcondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_cd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_nolock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_fighting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_fightingparama_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_releasetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_processtypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_flyspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_acttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_readytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_readytimeex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_attacktime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_damagetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_damagetimeex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_attackdistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_rangetypevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_rangetypeex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_rangetypevalueex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_warn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_dazetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_warntime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_infomationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_attackmindistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_goalmaxnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_goalmaxnummonster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_damagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_awakedamagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_advancetype1damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_advancetype2damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_advancetype3damagerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_damagevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_damageparama_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_addhitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_advancetype1buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_advancetype2buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_awakebuff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_advancetype3buff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, m_buff_),
  };
  E_SkillSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkill_descriptor_,
      E_SkillSkill::default_instance_,
      E_SkillSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkill));
  Sheet_SkillSkill_descriptor_ = file->message_type(8);
  static const int Sheet_SkillSkill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkill, e_skillskill_list_),
  };
  Sheet_SkillSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SkillSkill_descriptor_,
      Sheet_SkillSkill::default_instance_,
      Sheet_SkillSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SkillSkill));
  E_SkillBuffup_descriptor_ = file->message_type(9);
  static const int E_SkillBuffup_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuffup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuffup, m_addstartprobability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuffup, m_attributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuffup, m_parama_),
  };
  E_SkillBuffup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillBuffup_descriptor_,
      E_SkillBuffup::default_instance_,
      E_SkillBuffup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuffup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillBuffup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillBuffup));
  Sheet_SkillBuffup_descriptor_ = file->message_type(10);
  static const int Sheet_SkillBuffup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillBuffup, e_skillbuffup_list_),
  };
  Sheet_SkillBuffup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SkillBuffup_descriptor_,
      Sheet_SkillBuffup::default_instance_,
      Sheet_SkillBuffup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillBuffup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillBuffup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SkillBuffup));
  E_SkillSkillup_descriptor_ = file->message_type(11);
  static const int E_SkillSkillup_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_skilllv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_skillids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_rolelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_costitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, m_costnum_),
  };
  E_SkillSkillup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillup_descriptor_,
      E_SkillSkillup::default_instance_,
      E_SkillSkillup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillup));
  Sheet_SkillSkillup_descriptor_ = file->message_type(12);
  static const int Sheet_SkillSkillup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkillup, e_skillskillup_list_),
  };
  Sheet_SkillSkillup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SkillSkillup_descriptor_,
      Sheet_SkillSkillup::default_instance_,
      Sheet_SkillSkillup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkillup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkillup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SkillSkillup));
  E_SkillSkillawake_descriptor_ = file->message_type(13);
  static const int E_SkillSkillawake_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillawake, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillawake, m_costitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillawake, m_costnum_),
  };
  E_SkillSkillawake_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkillawake_descriptor_,
      E_SkillSkillawake::default_instance_,
      E_SkillSkillawake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillawake, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkillawake, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkillawake));
  Sheet_SkillSkillawake_descriptor_ = file->message_type(14);
  static const int Sheet_SkillSkillawake_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkillawake, e_skillskillawake_list_),
  };
  Sheet_SkillSkillawake_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SkillSkillawake_descriptor_,
      Sheet_SkillSkillawake::default_instance_,
      Sheet_SkillSkillawake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkillawake, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkillawake, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SkillSkillawake));
  E_SkillSkilladvance_descriptor_ = file->message_type(15);
  static const int E_SkillSkilladvance_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, m_profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, m_advancelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, m_advancecondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, m_skillid_),
  };
  E_SkillSkilladvance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_SkillSkilladvance_descriptor_,
      E_SkillSkilladvance::default_instance_,
      E_SkillSkilladvance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_SkillSkilladvance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_SkillSkilladvance));
  Sheet_SkillSkilladvance_descriptor_ = file->message_type(16);
  static const int Sheet_SkillSkilladvance_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkilladvance, e_skillskilladvance_list_),
  };
  Sheet_SkillSkilladvance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_SkillSkilladvance_descriptor_,
      Sheet_SkillSkilladvance::default_instance_,
      Sheet_SkillSkilladvance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkilladvance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_SkillSkilladvance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_SkillSkilladvance));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_skill_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillBuff_descriptor_, &E_SkillBuff::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SkillBuff_descriptor_, &Sheet_SkillBuff::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillAdvancetype1buffDesc_descriptor_, &E_SkillSkillAdvancetype1buffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillAdvancetype2buffDesc_descriptor_, &E_SkillSkillAdvancetype2buffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillAwakebuffDesc_descriptor_, &E_SkillSkillAwakebuffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillAdvancetype3buffDesc_descriptor_, &E_SkillSkillAdvancetype3buffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillBuffDesc_descriptor_, &E_SkillSkillBuffDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkill_descriptor_, &E_SkillSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SkillSkill_descriptor_, &Sheet_SkillSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillBuffup_descriptor_, &E_SkillBuffup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SkillBuffup_descriptor_, &Sheet_SkillBuffup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillup_descriptor_, &E_SkillSkillup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SkillSkillup_descriptor_, &Sheet_SkillSkillup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkillawake_descriptor_, &E_SkillSkillawake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SkillSkillawake_descriptor_, &Sheet_SkillSkillawake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_SkillSkilladvance_descriptor_, &E_SkillSkilladvance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_SkillSkilladvance_descriptor_, &Sheet_SkillSkilladvance::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_skill_2eproto() {
  delete E_SkillBuff::default_instance_;
  delete E_SkillBuff_reflection_;
  delete Sheet_SkillBuff::default_instance_;
  delete Sheet_SkillBuff_reflection_;
  delete E_SkillSkillAdvancetype1buffDesc::default_instance_;
  delete E_SkillSkillAdvancetype1buffDesc_reflection_;
  delete E_SkillSkillAdvancetype2buffDesc::default_instance_;
  delete E_SkillSkillAdvancetype2buffDesc_reflection_;
  delete E_SkillSkillAwakebuffDesc::default_instance_;
  delete E_SkillSkillAwakebuffDesc_reflection_;
  delete E_SkillSkillAdvancetype3buffDesc::default_instance_;
  delete E_SkillSkillAdvancetype3buffDesc_reflection_;
  delete E_SkillSkillBuffDesc::default_instance_;
  delete E_SkillSkillBuffDesc_reflection_;
  delete E_SkillSkill::default_instance_;
  delete E_SkillSkill_reflection_;
  delete Sheet_SkillSkill::default_instance_;
  delete Sheet_SkillSkill_reflection_;
  delete E_SkillBuffup::default_instance_;
  delete E_SkillBuffup_reflection_;
  delete Sheet_SkillBuffup::default_instance_;
  delete Sheet_SkillBuffup_reflection_;
  delete E_SkillSkillup::default_instance_;
  delete E_SkillSkillup_reflection_;
  delete Sheet_SkillSkillup::default_instance_;
  delete Sheet_SkillSkillup_reflection_;
  delete E_SkillSkillawake::default_instance_;
  delete E_SkillSkillawake_reflection_;
  delete Sheet_SkillSkillawake::default_instance_;
  delete Sheet_SkillSkillawake_reflection_;
  delete E_SkillSkilladvance::default_instance_;
  delete E_SkillSkilladvance_reflection_;
  delete Sheet_SkillSkilladvance::default_instance_;
  delete Sheet_SkillSkilladvance_reflection_;
}

void protobuf_AddDesc_skill_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013skill.proto\022\010proto_ff\032\025yd_fieldoptions"
    ".proto\"\352\006\n\013E_SkillBuff\022\"\n\010m_buffid\030\001 \001(\003"
    "B\020\302\377\024\014\351\231\204\345\212\240buffid\022&\n\nm_buffname\030\002 \001(\tB\022"
    "\302\377\024\nbuff\345\220\215\347\247\260\220\301\024<\022&\n\nm_bufficon\030\003 \001(\tB\022"
    "\302\377\024\nbuff\345\233\276\346\240\207\220\301\024<\022/\n\021m_effectresources\030"
    "\004 \001(\tB\024\302\377\024\014\347\211\271\346\225\210\350\267\257\345\276\204\220\301\024<\022$\n\nm_showtpy"
    "e\030\005 \001(\005B\020\302\377\024\014\346\230\276\347\244\272\347\261\273\345\236\213\022,\n\022m_startprob"
    "ability\030\006 \001(\005B\020\302\377\024\014\347\224\237\346\225\210\346\246\202\347\216\207\0222\n\020m_pro"
    "bability_up\030\007 \001(\005B\030\302\377\024\024\346\246\202\347\216\207\346\210\220\351\225\277\347\263\273\346\225"
    "\260ID\022%\n\013m_starttype\030\010 \001(\005B\020\302\377\024\014\347\224\237\346\225\210\346\235\241\344"
    "\273\266\0224\n\020m_starttypevalue\030\t \001(\tB\032\302\377\024\022\347\224\237\346\225\210"
    "\346\235\241\344\273\266\345\217\202\346\225\260\220\301\024<\022)\n\tm_endtype\030\n \001(\005B\026\302\377\024"
    "\022\345\270\270\350\247\204\347\273\223\346\235\237\346\235\241\344\273\266\0222\n\016m_endtypevalue\030\013 "
    "\001(\tB\032\302\377\024\022\347\224\237\346\225\210\346\235\241\344\273\266\345\217\202\346\225\260\220\301\024<\022\034\n\007m_gro"
    "up\030\014 \001(\005B\013\302\377\024\007buff\347\273\204\0227\n\nm_buffrule\030\r \001("
    "\tB#\302\377\024\033\345\220\214\344\270\200\347\212\266\346\200\201\347\273\204\345\217\240\345\212\240\350\247\204\345\210\231\220\301\024<\022("
    "\n\010m_immune\030\016 \001(\tB\026\302\377\024\016\345\205\215\347\226\253\347\232\204\347\273\204id\220\301\024<"
    "\022(\n\010m_dispel\030\017 \001(\tB\026\302\377\024\016\351\251\261\346\225\243\347\232\204\347\273\204id\220\301"
    "\024<\022 \n\010m_buffcd\030\020 \001(\005B\016\302\377\024\nbuff\345\206\267\345\215\264\022%\n\r"
    "m_effect_time\030\021 \001(\005B\016\302\377\024\nbuff\346\227\266\351\227\264\022\'\n\rm"
    "_effect_type\030\022 \001(\005B\020\302\377\024\014\346\225\210\346\236\234\347\261\273\345\236\213\022,\n\016"
    "m_effect_param\030\023 \001(\tB\024\302\377\024\014\346\225\210\346\236\234\345\217\202\346\225\260\220\301"
    "\024<\022\'\n\013m_effect_up\030\024 \001(\005B\022\302\377\024\016\346\210\220\351\225\277\347\263\273\346\225"
    "\260ID\"I\n\017Sheet_SkillBuff\0226\n\020E_SkillBuff_Li"
    "st\030\001 \003(\0132\025.proto_ff.E_SkillBuffB\005\210\301\024\264\001\"8"
    "\n E_SkillSkillAdvancetype1buffDesc\022\024\n\004m_"
    "id\030\001 \001(\003B\006\302\377\024\002id\"8\n E_SkillSkillAdvancet"
    "ype2buffDesc\022\024\n\004m_id\030\001 \001(\003B\006\302\377\024\002id\"1\n\031E_"
    "SkillSkillAwakebuffDesc\022\024\n\004m_id\030\001 \001(\003B\006\302"
    "\377\024\002id\"8\n E_SkillSkillAdvancetype3buffDes"
    "c\022\024\n\004m_id\030\001 \001(\003B\006\302\377\024\002id\"j\n\024E_SkillSkillB"
    "uffDesc\022\034\n\010m_target\030\001 \001(\005B\n\302\377\024\006\345\275\222\345\261\236\022\024\n"
    "\004m_id\030\002 \001(\003B\006\302\377\024\002id\022\036\n\007m_point\030\003 \001(\005B\r\302\377"
    "\024\t\347\224\237\346\225\210\347\202\271\"\371\024\n\014E_SkillSkill\022\037\n\tm_skilli"
    "d\030\001 \001(\003B\014\302\377\024\010\346\212\200\350\203\275id\022\036\n\006m_name\030\002 \001(\tB\016\302"
    "\377\024\006\345\220\215\347\247\260\220\301\024<\022%\n\013m_skilltype\030\003 \001(\005B\020\302\377\024\014"
    "\346\212\200\350\203\275\347\261\273\345\236\213\022\036\n\007m_group\030\004 \001(\005B\r\302\377\024\t\346\212\200\350\203"
    "\275\347\273\204\022$\n\nm_position\030\005 \001(\005B\020\302\377\024\014\346\212\200\350\203\275\344\275\215\347"
    "\275\256\0221\n\016m_displacetime\030\006 \001(\005B\031\302\377\024\025\344\275\215\347\247\273\345\274"
    "\200\345\247\213\346\227\266\351\227\264\347\202\271\022.\n\016m_displacesign\030\007 \001(\005B\026\302"
    "\377\024\022\344\275\215\347\247\273\346\255\243\350\264\237\346\240\207\350\256\260\022-\n\017m_displacespeed"
    "\030\010 \001(\tB\024\302\377\024\014\344\275\215\347\247\273\351\200\237\345\272\246\220\301\024<\022(\n\nm_distim"
    "es\030\t \001(\tB\024\302\377\024\014\344\275\215\347\247\273\346\227\266\351\227\264\220\301\024<\022%\n\013m_brea"
    "ktype\030\n \001(\005B\020\302\377\024\014\346\211\223\346\226\255\347\261\273\345\236\213\022%\n\tm_cdski"
    "ll\030\013 \001(\005B\022\302\377\024\016CD\350\203\275\345\220\246\345\207\217\345\260\221\022$\n\nm_relati"
    "on\030\014 \001(\003B\020\302\377\024\014\346\231\256\346\224\273\345\205\263\350\201\224\022/\n\021m_unlockco"
    "ndition\030\r \001(\tB\024\302\377\024\014\350\247\243\351\224\201\346\235\241\344\273\266\220\301\024<\022 \n\006m"
    "_type\030\016 \001(\005B\020\302\377\024\014\347\233\256\346\240\207\347\261\273\345\236\213\022\024\n\004m_cd\030\017 "
    "\001(\005B\006\302\377\024\002cd\022\"\n\010m_nolock\030\020 \001(\005B\020\302\377\024\014\346\230\257\345\220"
    "\246\351\224\201\345\256\232\022-\n\nm_priority\030\021 \001(\005B\031\302\377\024\025\346\214\202\346\234\272\344"
    "\275\277\347\224\250\344\274\230\345\205\210\347\272\247\022\'\n\nm_fighting\030\022 \001(\005B\023\302\377\024\017"
    "\345\210\235\345\247\213\346\210\230\346\226\227\345\212\233\0223\n\020m_fightingparama\030\023 \001("
    "\002B\031\302\377\024\025\346\210\230\346\226\227\345\212\233\346\210\220\351\225\277\347\263\273\346\225\260\022\'\n\rm_releas"
    "etype\030\024 \001(\005B\020\302\377\024\014\351\207\212\346\224\276\347\261\273\345\236\213\022(\n\016m_proce"
    "sstypes\030\025 \001(\005B\020\302\377\024\014\350\277\207\347\250\213\347\261\273\345\236\213\022$\n\nm_fly"
    "speed\030\026 \001(\005B\020\302\377\024\014\351\243\236\350\241\214\351\200\237\345\272\246\022&\n\tm_actti"
    "me\030\027 \001(\005B\023\302\377\024\017\345\212\250\344\275\234\346\200\273\346\227\266\351\227\264\0221\n\013m_ready"
    "time\030\030 \001(\005B\034\302\377\024\030\346\224\273\345\207\273\347\211\271\346\225\210\345\273\266\350\277\237\346\227\266\351\227\264"
    "\0225\n\rm_readytimeex\030\031 \001(\005B\036\302\377\024\032\346\224\273\345\207\273\347\211\271\346\225"
    "\210\345\273\266\350\277\237\346\227\266\351\227\264ex\022)\n\014m_attacktime\030\032 \001(\005B\023\302"
    "\377\024\017\346\224\273\345\207\273\346\200\273\346\227\266\351\227\264\0223\n\014m_damagetime\030\033 \001(\t"
    "B\035\302\377\024\025\344\274\244\345\256\263\347\224\237\346\225\210\346\227\266\351\227\264\347\202\271\220\301\024<\0227\n\016m_dam"
    "agetimeex\030\034 \001(\tB\037\302\377\024\027\344\274\244\345\256\263\347\224\237\346\225\210\346\227\266\351\227\264\347"
    "\202\271ex\220\301\024<\022*\n\020m_attackdistance\030\035 \001(\005B\020\302\377\024\014"
    "\346\224\273\345\207\273\350\267\235\347\246\273\022%\n\013m_rangetype\030\036 \001(\005B\020\302\377\024\014\350"
    "\214\203\345\233\264\347\261\273\345\236\213\0221\n\020m_rangetypevalue\030\037 \001(\tB\027\302"
    "\377\024\017\350\214\203\345\233\264\347\261\273\345\236\213\345\200\274\220\301\024<\022)\n\rm_rangetypeex\030"
    "  \001(\005B\022\302\377\024\016\350\214\203\345\233\264\347\261\273\345\236\213ex\0225\n\022m_rangetype"
    "valueex\030! \001(\tB\031\302\377\024\021\350\214\203\345\233\264\347\261\273\345\236\213\345\200\274ex\220\301\024<"
    "\022\034\n\006m_warn\030\" \001(\005B\014\302\377\024\010\351\242\204\350\255\246id\022$\n\nm_daze"
    "time\030# \001(\005B\020\302\377\024\014\345\217\221\345\221\206\346\227\266\351\227\264\022$\n\nm_warnti"
    "me\030$ \001(\005B\020\302\377\024\014\351\242\204\350\255\246\346\227\266\351\227\264\022(\n\016m_infomati"
    "onid\030% \001(\tB\020\302\377\024\010\346\217\220\347\244\272ID\220\301\024<\0223\n\023m_attack"
    "mindistance\030& \001(\005B\026\302\377\024\022\346\224\273\345\207\273\346\234\200\345\260\217\350\267\235\347\246"
    "\273\022,\n\014m_goalmaxnum\030\' \001(\005B\026\302\377\024\022\347\233\256\346\240\207\346\234\200\345\244"
    "\247\346\225\260\351\207\217\022\?\n\023m_goalmaxnummonster\030( \001(\005B\"\302\377"
    "\024\036\347\233\256\346\240\207\346\234\200\345\244\247\346\225\260\351\207\217\357\274\210\346\200\252\347\211\251\357\274\211\022&\n\014m_da"
    "magetype\030) \001(\005B\020\302\377\024\014\344\274\244\345\256\263\347\261\273\345\236\213\022&\n\014m_da"
    "magerate\030* \001(\005B\020\302\377\024\014\344\274\244\345\256\263\345\200\215\347\216\207\0224\n\021m_aw"
    "akedamagerate\030+ \001(\005B\031\302\377\024\025\350\247\211\351\206\222\345\220\216\346\212\200\350\203\275"
    "\345\200\215\347\216\207\022D\n\030m_advancetype1damagerate\030, \001(\005"
    "B\"\302\377\024\036\350\277\233\351\230\266\347\201\253\345\220\216\346\212\200\350\203\275\345\200\215\347\216\207\345\212\240\346\210\220\022D\n\030"
    "m_advancetype2damagerate\030- \001(\005B\"\302\377\024\036\350\277\233\351"
    "\230\266\351\233\267\345\220\216\346\212\200\350\203\275\345\200\215\347\216\207\345\212\240\346\210\220\022D\n\030m_advancet"
    "ype3damagerate\030. \001(\005B\"\302\377\024\036\350\277\233\351\230\266\345\206\260\345\220\216\346\212"
    "\200\350\203\275\345\200\215\347\216\207\345\212\240\346\210\220\0220\n\rm_damagevalue\030/ \001(\005B"
    "\031\302\377\024\025\351\231\204\345\212\240\344\274\244\345\256\263\345\210\235\345\247\213\345\200\274\0227\n\016m_damagepa"
    "rama\0300 \001(\002B\037\302\377\024\033\344\274\244\345\256\263\345\233\272\345\256\232\345\200\274\346\210\220\351\225\277\347\263\273"
    "\346\225\260\022)\n\014m_addhitrate\0301 \001(\005B\023\302\377\024\017\351\231\204\345\212\240\345\221\275"
    "\344\270\255\347\216\207\022c\n\022m_advancetype1buff\0302 \003(\0132*.pro"
    "to_ff.E_SkillSkillAdvancetype1buffDescB\033"
    "\302\377\024\023\350\277\233\351\230\266\347\201\253buff\347\255\211\347\272\247\210\301\024\003\022c\n\022m_advance"
    "type2buff\0303 \003(\0132*.proto_ff.E_SkillSkillA"
    "dvancetype2buffDescB\033\302\377\024\023\350\277\233\351\230\266\351\233\267buff\347\255"
    "\211\347\272\247\210\301\024\003\022O\n\013m_awakebuff\0304 \003(\0132#.proto_ff"
    ".E_SkillSkillAwakebuffDescB\025\302\377\024\r\350\247\211\351\206\222bu"
    "ff\345\214\205\210\301\024\005\022c\n\022m_advancetype3buff\0305 \003(\0132*."
    "proto_ff.E_SkillSkillAdvancetype3buffDes"
    "cB\033\302\377\024\023\350\277\233\351\230\266\345\206\260buff\347\255\211\347\272\247\210\301\024\003\022\?\n\006m_buff"
    "\0306 \003(\0132\036.proto_ff.E_SkillSkillBuffDescB\017"
    "\302\377\024\007buff\345\214\205\210\301\024\010\"L\n\020Sheet_SkillSkill\0228\n\021E"
    "_SkillSkill_List\030\001 \003(\0132\026.proto_ff.E_Skil"
    "lSkillB\005\210\301\024\254\002\"\251\001\n\rE_SkillBuffup\022\032\n\004m_id\030"
    "\001 \001(\005B\014\302\377\024\010id\345\272\217\345\217\267\0222\n\025m_addstartprobabi"
    "lity\030\002 \001(\005B\023\302\377\024\017\346\246\202\347\216\207\346\210\220\351\225\277\345\200\274\022\'\n\rm_att"
    "ributeid\030\003 \001(\005B\020\302\377\024\014\345\261\236\346\200\247\347\261\273\345\236\213\022\037\n\010m_pa"
    "rama\030\004 \001(\005B\r\302\377\024\t\346\210\220\351\225\277\345\200\274\"N\n\021Sheet_Skill"
    "Buffup\0229\n\022E_SkillBuffup_List\030\001 \003(\0132\027.pro"
    "to_ff.E_SkillBuffupB\004\210\301\024<\"\223\002\n\016E_SkillSki"
    "llup\022\032\n\004m_id\030\001 \001(\005B\014\302\377\024\010\345\224\257\344\270\200id\022\032\n\007m_gr"
    "oup\030\002 \001(\005B\t\302\377\024\005\347\273\204id\022#\n\tm_skilllv\030\003 \001(\005B"
    "\020\302\377\024\014\346\212\200\350\203\275\347\255\211\347\272\247\022(\n\nm_skillids\030\004 \001(\tB\024\302"
    "\377\024\013\346\212\200\350\203\275ID\347\273\204\220\301\024\214\001\022(\n\010m_rolelv\030\005 \001(\005B\026\302"
    "\377\024\022\351\234\200\346\261\202\344\272\272\347\211\251\347\255\211\347\272\247\022+\n\014m_costitemid\030\006 "
    "\001(\003B\025\302\377\024\021\346\266\210\350\200\227\347\232\204\351\201\223\345\205\267ID\022#\n\tm_costnum\030"
    "\007 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\"R\n\022Sheet_SkillSk"
    "illup\022<\n\023E_SkillSkillup_List\030\001 \003(\0132\030.pro"
    "to_ff.E_SkillSkillupB\005\210\301\024\220\003\"\206\001\n\021E_SkillS"
    "killawake\022\037\n\tm_skillid\030\001 \001(\005B\014\302\377\024\010\346\212\200\350\203\275"
    "ID\022+\n\014m_costitemid\030\002 \001(\005B\025\302\377\024\021\346\266\210\350\200\227\347\232\204\351"
    "\201\223\345\205\267ID\022#\n\tm_costnum\030\003 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225"
    "\260\351\207\217\"Z\n\025Sheet_SkillSkillawake\022A\n\026E_Skill"
    "Skillawake_List\030\001 \003(\0132\033.proto_ff.E_Skill"
    "SkillawakeB\004\210\301\024\024\"\347\001\n\023E_SkillSkilladvance"
    "\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022 \n\014m_profession\030\002"
    " \001(\005B\n\302\377\024\006\350\201\214\344\270\232\022\032\n\006m_type\030\003 \001(\005B\n\302\377\024\006\347\261"
    "\273\345\236\213\022%\n\013m_advancelv\030\004 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\347\255\211"
    "\347\272\247\0220\n\022m_advancecondition\030\005 \001(\tB\024\302\377\024\014\350\277\233"
    "\351\230\266\346\235\241\344\273\266\220\301\024<\022#\n\tm_skillid\030\006 \001(\tB\020\302\377\024\010\346\212"
    "\200\350\203\275ID\220\301\024<\"`\n\027Sheet_SkillSkilladvance\022E\n"
    "\030E_SkillSkilladvance_List\030\001 \003(\0132\035.proto_"
    "ff.E_SkillSkilladvanceB\004\210\301\024\024", 5268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "skill.proto", &protobuf_RegisterTypes);
  E_SkillBuff::default_instance_ = new E_SkillBuff();
  Sheet_SkillBuff::default_instance_ = new Sheet_SkillBuff();
  E_SkillSkillAdvancetype1buffDesc::default_instance_ = new E_SkillSkillAdvancetype1buffDesc();
  E_SkillSkillAdvancetype2buffDesc::default_instance_ = new E_SkillSkillAdvancetype2buffDesc();
  E_SkillSkillAwakebuffDesc::default_instance_ = new E_SkillSkillAwakebuffDesc();
  E_SkillSkillAdvancetype3buffDesc::default_instance_ = new E_SkillSkillAdvancetype3buffDesc();
  E_SkillSkillBuffDesc::default_instance_ = new E_SkillSkillBuffDesc();
  E_SkillSkill::default_instance_ = new E_SkillSkill();
  Sheet_SkillSkill::default_instance_ = new Sheet_SkillSkill();
  E_SkillBuffup::default_instance_ = new E_SkillBuffup();
  Sheet_SkillBuffup::default_instance_ = new Sheet_SkillBuffup();
  E_SkillSkillup::default_instance_ = new E_SkillSkillup();
  Sheet_SkillSkillup::default_instance_ = new Sheet_SkillSkillup();
  E_SkillSkillawake::default_instance_ = new E_SkillSkillawake();
  Sheet_SkillSkillawake::default_instance_ = new Sheet_SkillSkillawake();
  E_SkillSkilladvance::default_instance_ = new E_SkillSkilladvance();
  Sheet_SkillSkilladvance::default_instance_ = new Sheet_SkillSkilladvance();
  E_SkillBuff::default_instance_->InitAsDefaultInstance();
  Sheet_SkillBuff::default_instance_->InitAsDefaultInstance();
  E_SkillSkillAdvancetype1buffDesc::default_instance_->InitAsDefaultInstance();
  E_SkillSkillAdvancetype2buffDesc::default_instance_->InitAsDefaultInstance();
  E_SkillSkillAwakebuffDesc::default_instance_->InitAsDefaultInstance();
  E_SkillSkillAdvancetype3buffDesc::default_instance_->InitAsDefaultInstance();
  E_SkillSkillBuffDesc::default_instance_->InitAsDefaultInstance();
  E_SkillSkill::default_instance_->InitAsDefaultInstance();
  Sheet_SkillSkill::default_instance_->InitAsDefaultInstance();
  E_SkillBuffup::default_instance_->InitAsDefaultInstance();
  Sheet_SkillBuffup::default_instance_->InitAsDefaultInstance();
  E_SkillSkillup::default_instance_->InitAsDefaultInstance();
  Sheet_SkillSkillup::default_instance_->InitAsDefaultInstance();
  E_SkillSkillawake::default_instance_->InitAsDefaultInstance();
  Sheet_SkillSkillawake::default_instance_->InitAsDefaultInstance();
  E_SkillSkilladvance::default_instance_->InitAsDefaultInstance();
  Sheet_SkillSkilladvance::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_skill_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_skill_2eproto {
  StaticDescriptorInitializer_skill_2eproto() {
    protobuf_AddDesc_skill_2eproto();
  }
} static_descriptor_initializer_skill_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_SkillBuff::kMBuffidFieldNumber;
const int E_SkillBuff::kMBuffnameFieldNumber;
const int E_SkillBuff::kMBufficonFieldNumber;
const int E_SkillBuff::kMEffectresourcesFieldNumber;
const int E_SkillBuff::kMShowtpyeFieldNumber;
const int E_SkillBuff::kMStartprobabilityFieldNumber;
const int E_SkillBuff::kMProbabilityUpFieldNumber;
const int E_SkillBuff::kMStarttypeFieldNumber;
const int E_SkillBuff::kMStarttypevalueFieldNumber;
const int E_SkillBuff::kMEndtypeFieldNumber;
const int E_SkillBuff::kMEndtypevalueFieldNumber;
const int E_SkillBuff::kMGroupFieldNumber;
const int E_SkillBuff::kMBuffruleFieldNumber;
const int E_SkillBuff::kMImmuneFieldNumber;
const int E_SkillBuff::kMDispelFieldNumber;
const int E_SkillBuff::kMBuffcdFieldNumber;
const int E_SkillBuff::kMEffectTimeFieldNumber;
const int E_SkillBuff::kMEffectTypeFieldNumber;
const int E_SkillBuff::kMEffectParamFieldNumber;
const int E_SkillBuff::kMEffectUpFieldNumber;
#endif  // !_MSC_VER

E_SkillBuff::E_SkillBuff()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillBuff::InitAsDefaultInstance() {
}

E_SkillBuff::E_SkillBuff(const E_SkillBuff& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillBuff::SharedCtor() {
  _cached_size_ = 0;
  m_buffid_ = GOOGLE_LONGLONG(0);
  m_buffname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bufficon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_effectresources_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_showtpye_ = 0;
  m_startprobability_ = 0;
  m_probability_up_ = 0;
  m_starttype_ = 0;
  m_starttypevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_endtype_ = 0;
  m_endtypevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_group_ = 0;
  m_buffrule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_immune_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_dispel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_buffcd_ = 0;
  m_effect_time_ = 0;
  m_effect_type_ = 0;
  m_effect_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_effect_up_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillBuff::~E_SkillBuff() {
  SharedDtor();
}

void E_SkillBuff::SharedDtor() {
  if (m_buffname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_buffname_;
  }
  if (m_bufficon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bufficon_;
  }
  if (m_effectresources_ != &::google::protobuf::internal::kEmptyString) {
    delete m_effectresources_;
  }
  if (m_starttypevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starttypevalue_;
  }
  if (m_endtypevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_endtypevalue_;
  }
  if (m_buffrule_ != &::google::protobuf::internal::kEmptyString) {
    delete m_buffrule_;
  }
  if (m_immune_ != &::google::protobuf::internal::kEmptyString) {
    delete m_immune_;
  }
  if (m_dispel_ != &::google::protobuf::internal::kEmptyString) {
    delete m_dispel_;
  }
  if (m_effect_param_ != &::google::protobuf::internal::kEmptyString) {
    delete m_effect_param_;
  }
  if (this != default_instance_) {
  }
}

void E_SkillBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillBuff_descriptor_;
}

const E_SkillBuff& E_SkillBuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillBuff* E_SkillBuff::default_instance_ = NULL;

E_SkillBuff* E_SkillBuff::New() const {
  return new E_SkillBuff;
}

void E_SkillBuff::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_buffid_ = GOOGLE_LONGLONG(0);
    if (has_m_buffname()) {
      if (m_buffname_ != &::google::protobuf::internal::kEmptyString) {
        m_buffname_->clear();
      }
    }
    if (has_m_bufficon()) {
      if (m_bufficon_ != &::google::protobuf::internal::kEmptyString) {
        m_bufficon_->clear();
      }
    }
    if (has_m_effectresources()) {
      if (m_effectresources_ != &::google::protobuf::internal::kEmptyString) {
        m_effectresources_->clear();
      }
    }
    m_showtpye_ = 0;
    m_startprobability_ = 0;
    m_probability_up_ = 0;
    m_starttype_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_starttypevalue()) {
      if (m_starttypevalue_ != &::google::protobuf::internal::kEmptyString) {
        m_starttypevalue_->clear();
      }
    }
    m_endtype_ = 0;
    if (has_m_endtypevalue()) {
      if (m_endtypevalue_ != &::google::protobuf::internal::kEmptyString) {
        m_endtypevalue_->clear();
      }
    }
    m_group_ = 0;
    if (has_m_buffrule()) {
      if (m_buffrule_ != &::google::protobuf::internal::kEmptyString) {
        m_buffrule_->clear();
      }
    }
    if (has_m_immune()) {
      if (m_immune_ != &::google::protobuf::internal::kEmptyString) {
        m_immune_->clear();
      }
    }
    if (has_m_dispel()) {
      if (m_dispel_ != &::google::protobuf::internal::kEmptyString) {
        m_dispel_->clear();
      }
    }
    m_buffcd_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_effect_time_ = 0;
    m_effect_type_ = 0;
    if (has_m_effect_param()) {
      if (m_effect_param_ != &::google::protobuf::internal::kEmptyString) {
        m_effect_param_->clear();
      }
    }
    m_effect_up_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_buffid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_buffid_)));
          set_has_m_buffid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_buffname;
        break;
      }

      // optional string m_buffname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_buffname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_buffname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_buffname().data(), this->m_buffname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_bufficon;
        break;
      }

      // optional string m_bufficon = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bufficon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bufficon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bufficon().data(), this->m_bufficon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_effectresources;
        break;
      }

      // optional string m_effectresources = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_effectresources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_effectresources()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_effectresources().data(), this->m_effectresources().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_showtpye;
        break;
      }

      // optional int32 m_showtpye = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_showtpye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_showtpye_)));
          set_has_m_showtpye();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_startprobability;
        break;
      }

      // optional int32 m_startprobability = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_startprobability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_startprobability_)));
          set_has_m_startprobability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_probability_up;
        break;
      }

      // optional int32 m_probability_up = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_probability_up:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_probability_up_)));
          set_has_m_probability_up();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_starttype;
        break;
      }

      // optional int32 m_starttype = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starttype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starttype_)));
          set_has_m_starttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_starttypevalue;
        break;
      }

      // optional string m_starttypevalue = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_starttypevalue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_starttypevalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_starttypevalue().data(), this->m_starttypevalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_endtype;
        break;
      }

      // optional int32 m_endtype = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_endtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_endtype_)));
          set_has_m_endtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_endtypevalue;
        break;
      }

      // optional string m_endtypevalue = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_endtypevalue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_endtypevalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_endtypevalue().data(), this->m_endtypevalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_group;
        break;
      }

      // optional int32 m_group = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_)));
          set_has_m_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_buffrule;
        break;
      }

      // optional string m_buffrule = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_buffrule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_buffrule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_buffrule().data(), this->m_buffrule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_immune;
        break;
      }

      // optional string m_immune = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_immune:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_immune()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_immune().data(), this->m_immune().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_m_dispel;
        break;
      }

      // optional string m_dispel = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_dispel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_dispel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_dispel().data(), this->m_dispel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_buffcd;
        break;
      }

      // optional int32 m_buffcd = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_buffcd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buffcd_)));
          set_has_m_buffcd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_effect_time;
        break;
      }

      // optional int32 m_effect_time = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_effect_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_effect_time_)));
          set_has_m_effect_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_m_effect_type;
        break;
      }

      // optional int32 m_effect_type = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_effect_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_effect_type_)));
          set_has_m_effect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_m_effect_param;
        break;
      }

      // optional string m_effect_param = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_effect_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_effect_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_effect_param().data(), this->m_effect_param().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_m_effect_up;
        break;
      }

      // optional int32 m_effect_up = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_effect_up:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_effect_up_)));
          set_has_m_effect_up();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_buffid = 1;
  if (has_m_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_buffid(), output);
  }

  // optional string m_buffname = 2;
  if (has_m_buffname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_buffname().data(), this->m_buffname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_buffname(), output);
  }

  // optional string m_bufficon = 3;
  if (has_m_bufficon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bufficon().data(), this->m_bufficon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_bufficon(), output);
  }

  // optional string m_effectresources = 4;
  if (has_m_effectresources()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_effectresources().data(), this->m_effectresources().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_effectresources(), output);
  }

  // optional int32 m_showtpye = 5;
  if (has_m_showtpye()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_showtpye(), output);
  }

  // optional int32 m_startprobability = 6;
  if (has_m_startprobability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_startprobability(), output);
  }

  // optional int32 m_probability_up = 7;
  if (has_m_probability_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_probability_up(), output);
  }

  // optional int32 m_starttype = 8;
  if (has_m_starttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_starttype(), output);
  }

  // optional string m_starttypevalue = 9;
  if (has_m_starttypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_starttypevalue().data(), this->m_starttypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_starttypevalue(), output);
  }

  // optional int32 m_endtype = 10;
  if (has_m_endtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_endtype(), output);
  }

  // optional string m_endtypevalue = 11;
  if (has_m_endtypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_endtypevalue().data(), this->m_endtypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->m_endtypevalue(), output);
  }

  // optional int32 m_group = 12;
  if (has_m_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_group(), output);
  }

  // optional string m_buffrule = 13;
  if (has_m_buffrule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_buffrule().data(), this->m_buffrule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->m_buffrule(), output);
  }

  // optional string m_immune = 14;
  if (has_m_immune()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_immune().data(), this->m_immune().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->m_immune(), output);
  }

  // optional string m_dispel = 15;
  if (has_m_dispel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_dispel().data(), this->m_dispel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->m_dispel(), output);
  }

  // optional int32 m_buffcd = 16;
  if (has_m_buffcd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_buffcd(), output);
  }

  // optional int32 m_effect_time = 17;
  if (has_m_effect_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_effect_time(), output);
  }

  // optional int32 m_effect_type = 18;
  if (has_m_effect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->m_effect_type(), output);
  }

  // optional string m_effect_param = 19;
  if (has_m_effect_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_effect_param().data(), this->m_effect_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->m_effect_param(), output);
  }

  // optional int32 m_effect_up = 20;
  if (has_m_effect_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->m_effect_up(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillBuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_buffid = 1;
  if (has_m_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_buffid(), target);
  }

  // optional string m_buffname = 2;
  if (has_m_buffname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_buffname().data(), this->m_buffname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_buffname(), target);
  }

  // optional string m_bufficon = 3;
  if (has_m_bufficon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bufficon().data(), this->m_bufficon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_bufficon(), target);
  }

  // optional string m_effectresources = 4;
  if (has_m_effectresources()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_effectresources().data(), this->m_effectresources().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_effectresources(), target);
  }

  // optional int32 m_showtpye = 5;
  if (has_m_showtpye()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_showtpye(), target);
  }

  // optional int32 m_startprobability = 6;
  if (has_m_startprobability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_startprobability(), target);
  }

  // optional int32 m_probability_up = 7;
  if (has_m_probability_up()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_probability_up(), target);
  }

  // optional int32 m_starttype = 8;
  if (has_m_starttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_starttype(), target);
  }

  // optional string m_starttypevalue = 9;
  if (has_m_starttypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_starttypevalue().data(), this->m_starttypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_starttypevalue(), target);
  }

  // optional int32 m_endtype = 10;
  if (has_m_endtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_endtype(), target);
  }

  // optional string m_endtypevalue = 11;
  if (has_m_endtypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_endtypevalue().data(), this->m_endtypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->m_endtypevalue(), target);
  }

  // optional int32 m_group = 12;
  if (has_m_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_group(), target);
  }

  // optional string m_buffrule = 13;
  if (has_m_buffrule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_buffrule().data(), this->m_buffrule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->m_buffrule(), target);
  }

  // optional string m_immune = 14;
  if (has_m_immune()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_immune().data(), this->m_immune().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->m_immune(), target);
  }

  // optional string m_dispel = 15;
  if (has_m_dispel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_dispel().data(), this->m_dispel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->m_dispel(), target);
  }

  // optional int32 m_buffcd = 16;
  if (has_m_buffcd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_buffcd(), target);
  }

  // optional int32 m_effect_time = 17;
  if (has_m_effect_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_effect_time(), target);
  }

  // optional int32 m_effect_type = 18;
  if (has_m_effect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->m_effect_type(), target);
  }

  // optional string m_effect_param = 19;
  if (has_m_effect_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_effect_param().data(), this->m_effect_param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->m_effect_param(), target);
  }

  // optional int32 m_effect_up = 20;
  if (has_m_effect_up()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->m_effect_up(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillBuff::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_buffid = 1;
    if (has_m_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_buffid());
    }

    // optional string m_buffname = 2;
    if (has_m_buffname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_buffname());
    }

    // optional string m_bufficon = 3;
    if (has_m_bufficon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bufficon());
    }

    // optional string m_effectresources = 4;
    if (has_m_effectresources()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_effectresources());
    }

    // optional int32 m_showtpye = 5;
    if (has_m_showtpye()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_showtpye());
    }

    // optional int32 m_startprobability = 6;
    if (has_m_startprobability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_startprobability());
    }

    // optional int32 m_probability_up = 7;
    if (has_m_probability_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_probability_up());
    }

    // optional int32 m_starttype = 8;
    if (has_m_starttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starttype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string m_starttypevalue = 9;
    if (has_m_starttypevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_starttypevalue());
    }

    // optional int32 m_endtype = 10;
    if (has_m_endtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_endtype());
    }

    // optional string m_endtypevalue = 11;
    if (has_m_endtypevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_endtypevalue());
    }

    // optional int32 m_group = 12;
    if (has_m_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group());
    }

    // optional string m_buffrule = 13;
    if (has_m_buffrule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_buffrule());
    }

    // optional string m_immune = 14;
    if (has_m_immune()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_immune());
    }

    // optional string m_dispel = 15;
    if (has_m_dispel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_dispel());
    }

    // optional int32 m_buffcd = 16;
    if (has_m_buffcd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buffcd());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_effect_time = 17;
    if (has_m_effect_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_effect_time());
    }

    // optional int32 m_effect_type = 18;
    if (has_m_effect_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_effect_type());
    }

    // optional string m_effect_param = 19;
    if (has_m_effect_param()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_effect_param());
    }

    // optional int32 m_effect_up = 20;
    if (has_m_effect_up()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_effect_up());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillBuff::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillBuff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillBuff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillBuff::MergeFrom(const E_SkillBuff& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_buffid()) {
      set_m_buffid(from.m_buffid());
    }
    if (from.has_m_buffname()) {
      set_m_buffname(from.m_buffname());
    }
    if (from.has_m_bufficon()) {
      set_m_bufficon(from.m_bufficon());
    }
    if (from.has_m_effectresources()) {
      set_m_effectresources(from.m_effectresources());
    }
    if (from.has_m_showtpye()) {
      set_m_showtpye(from.m_showtpye());
    }
    if (from.has_m_startprobability()) {
      set_m_startprobability(from.m_startprobability());
    }
    if (from.has_m_probability_up()) {
      set_m_probability_up(from.m_probability_up());
    }
    if (from.has_m_starttype()) {
      set_m_starttype(from.m_starttype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_starttypevalue()) {
      set_m_starttypevalue(from.m_starttypevalue());
    }
    if (from.has_m_endtype()) {
      set_m_endtype(from.m_endtype());
    }
    if (from.has_m_endtypevalue()) {
      set_m_endtypevalue(from.m_endtypevalue());
    }
    if (from.has_m_group()) {
      set_m_group(from.m_group());
    }
    if (from.has_m_buffrule()) {
      set_m_buffrule(from.m_buffrule());
    }
    if (from.has_m_immune()) {
      set_m_immune(from.m_immune());
    }
    if (from.has_m_dispel()) {
      set_m_dispel(from.m_dispel());
    }
    if (from.has_m_buffcd()) {
      set_m_buffcd(from.m_buffcd());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_effect_time()) {
      set_m_effect_time(from.m_effect_time());
    }
    if (from.has_m_effect_type()) {
      set_m_effect_type(from.m_effect_type());
    }
    if (from.has_m_effect_param()) {
      set_m_effect_param(from.m_effect_param());
    }
    if (from.has_m_effect_up()) {
      set_m_effect_up(from.m_effect_up());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillBuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillBuff::CopyFrom(const E_SkillBuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillBuff::IsInitialized() const {

  return true;
}

void E_SkillBuff::Swap(E_SkillBuff* other) {
  if (other != this) {
    std::swap(m_buffid_, other->m_buffid_);
    std::swap(m_buffname_, other->m_buffname_);
    std::swap(m_bufficon_, other->m_bufficon_);
    std::swap(m_effectresources_, other->m_effectresources_);
    std::swap(m_showtpye_, other->m_showtpye_);
    std::swap(m_startprobability_, other->m_startprobability_);
    std::swap(m_probability_up_, other->m_probability_up_);
    std::swap(m_starttype_, other->m_starttype_);
    std::swap(m_starttypevalue_, other->m_starttypevalue_);
    std::swap(m_endtype_, other->m_endtype_);
    std::swap(m_endtypevalue_, other->m_endtypevalue_);
    std::swap(m_group_, other->m_group_);
    std::swap(m_buffrule_, other->m_buffrule_);
    std::swap(m_immune_, other->m_immune_);
    std::swap(m_dispel_, other->m_dispel_);
    std::swap(m_buffcd_, other->m_buffcd_);
    std::swap(m_effect_time_, other->m_effect_time_);
    std::swap(m_effect_type_, other->m_effect_type_);
    std::swap(m_effect_param_, other->m_effect_param_);
    std::swap(m_effect_up_, other->m_effect_up_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillBuff_descriptor_;
  metadata.reflection = E_SkillBuff_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SkillBuff::kESkillBuffListFieldNumber;
#endif  // !_MSC_VER

Sheet_SkillBuff::Sheet_SkillBuff()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SkillBuff::InitAsDefaultInstance() {
}

Sheet_SkillBuff::Sheet_SkillBuff(const Sheet_SkillBuff& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SkillBuff::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SkillBuff::~Sheet_SkillBuff() {
  SharedDtor();
}

void Sheet_SkillBuff::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SkillBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SkillBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SkillBuff_descriptor_;
}

const Sheet_SkillBuff& Sheet_SkillBuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_SkillBuff* Sheet_SkillBuff::default_instance_ = NULL;

Sheet_SkillBuff* Sheet_SkillBuff::New() const {
  return new Sheet_SkillBuff;
}

void Sheet_SkillBuff::Clear() {
  e_skillbuff_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SkillBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SkillBuff E_SkillBuff_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SkillBuff_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_skillbuff_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SkillBuff_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SkillBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SkillBuff E_SkillBuff_List = 1;
  for (int i = 0; i < this->e_skillbuff_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_skillbuff_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SkillBuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SkillBuff E_SkillBuff_List = 1;
  for (int i = 0; i < this->e_skillbuff_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_skillbuff_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SkillBuff::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SkillBuff E_SkillBuff_List = 1;
  total_size += 1 * this->e_skillbuff_list_size();
  for (int i = 0; i < this->e_skillbuff_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_skillbuff_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SkillBuff::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SkillBuff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SkillBuff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SkillBuff::MergeFrom(const Sheet_SkillBuff& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_skillbuff_list_.MergeFrom(from.e_skillbuff_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SkillBuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SkillBuff::CopyFrom(const Sheet_SkillBuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SkillBuff::IsInitialized() const {

  return true;
}

void Sheet_SkillBuff::Swap(Sheet_SkillBuff* other) {
  if (other != this) {
    e_skillbuff_list_.Swap(&other->e_skillbuff_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SkillBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SkillBuff_descriptor_;
  metadata.reflection = Sheet_SkillBuff_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillAdvancetype1buffDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillAdvancetype1buffDesc::E_SkillSkillAdvancetype1buffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillAdvancetype1buffDesc::InitAsDefaultInstance() {
}

E_SkillSkillAdvancetype1buffDesc::E_SkillSkillAdvancetype1buffDesc(const E_SkillSkillAdvancetype1buffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillAdvancetype1buffDesc::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillAdvancetype1buffDesc::~E_SkillSkillAdvancetype1buffDesc() {
  SharedDtor();
}

void E_SkillSkillAdvancetype1buffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillSkillAdvancetype1buffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillAdvancetype1buffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillAdvancetype1buffDesc_descriptor_;
}

const E_SkillSkillAdvancetype1buffDesc& E_SkillSkillAdvancetype1buffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillAdvancetype1buffDesc* E_SkillSkillAdvancetype1buffDesc::default_instance_ = NULL;

E_SkillSkillAdvancetype1buffDesc* E_SkillSkillAdvancetype1buffDesc::New() const {
  return new E_SkillSkillAdvancetype1buffDesc;
}

void E_SkillSkillAdvancetype1buffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillAdvancetype1buffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillAdvancetype1buffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillAdvancetype1buffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillAdvancetype1buffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillAdvancetype1buffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillAdvancetype1buffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillAdvancetype1buffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillAdvancetype1buffDesc::MergeFrom(const E_SkillSkillAdvancetype1buffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillAdvancetype1buffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillAdvancetype1buffDesc::CopyFrom(const E_SkillSkillAdvancetype1buffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillAdvancetype1buffDesc::IsInitialized() const {

  return true;
}

void E_SkillSkillAdvancetype1buffDesc::Swap(E_SkillSkillAdvancetype1buffDesc* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillAdvancetype1buffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillAdvancetype1buffDesc_descriptor_;
  metadata.reflection = E_SkillSkillAdvancetype1buffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillAdvancetype2buffDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillAdvancetype2buffDesc::E_SkillSkillAdvancetype2buffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillAdvancetype2buffDesc::InitAsDefaultInstance() {
}

E_SkillSkillAdvancetype2buffDesc::E_SkillSkillAdvancetype2buffDesc(const E_SkillSkillAdvancetype2buffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillAdvancetype2buffDesc::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillAdvancetype2buffDesc::~E_SkillSkillAdvancetype2buffDesc() {
  SharedDtor();
}

void E_SkillSkillAdvancetype2buffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillSkillAdvancetype2buffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillAdvancetype2buffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillAdvancetype2buffDesc_descriptor_;
}

const E_SkillSkillAdvancetype2buffDesc& E_SkillSkillAdvancetype2buffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillAdvancetype2buffDesc* E_SkillSkillAdvancetype2buffDesc::default_instance_ = NULL;

E_SkillSkillAdvancetype2buffDesc* E_SkillSkillAdvancetype2buffDesc::New() const {
  return new E_SkillSkillAdvancetype2buffDesc;
}

void E_SkillSkillAdvancetype2buffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillAdvancetype2buffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillAdvancetype2buffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillAdvancetype2buffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillAdvancetype2buffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillAdvancetype2buffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillAdvancetype2buffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillAdvancetype2buffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillAdvancetype2buffDesc::MergeFrom(const E_SkillSkillAdvancetype2buffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillAdvancetype2buffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillAdvancetype2buffDesc::CopyFrom(const E_SkillSkillAdvancetype2buffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillAdvancetype2buffDesc::IsInitialized() const {

  return true;
}

void E_SkillSkillAdvancetype2buffDesc::Swap(E_SkillSkillAdvancetype2buffDesc* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillAdvancetype2buffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillAdvancetype2buffDesc_descriptor_;
  metadata.reflection = E_SkillSkillAdvancetype2buffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillAwakebuffDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillAwakebuffDesc::E_SkillSkillAwakebuffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillAwakebuffDesc::InitAsDefaultInstance() {
}

E_SkillSkillAwakebuffDesc::E_SkillSkillAwakebuffDesc(const E_SkillSkillAwakebuffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillAwakebuffDesc::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillAwakebuffDesc::~E_SkillSkillAwakebuffDesc() {
  SharedDtor();
}

void E_SkillSkillAwakebuffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillSkillAwakebuffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillAwakebuffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillAwakebuffDesc_descriptor_;
}

const E_SkillSkillAwakebuffDesc& E_SkillSkillAwakebuffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillAwakebuffDesc* E_SkillSkillAwakebuffDesc::default_instance_ = NULL;

E_SkillSkillAwakebuffDesc* E_SkillSkillAwakebuffDesc::New() const {
  return new E_SkillSkillAwakebuffDesc;
}

void E_SkillSkillAwakebuffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillAwakebuffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillAwakebuffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillAwakebuffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillAwakebuffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillAwakebuffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillAwakebuffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillAwakebuffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillAwakebuffDesc::MergeFrom(const E_SkillSkillAwakebuffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillAwakebuffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillAwakebuffDesc::CopyFrom(const E_SkillSkillAwakebuffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillAwakebuffDesc::IsInitialized() const {

  return true;
}

void E_SkillSkillAwakebuffDesc::Swap(E_SkillSkillAwakebuffDesc* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillAwakebuffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillAwakebuffDesc_descriptor_;
  metadata.reflection = E_SkillSkillAwakebuffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillAdvancetype3buffDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillAdvancetype3buffDesc::E_SkillSkillAdvancetype3buffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillAdvancetype3buffDesc::InitAsDefaultInstance() {
}

E_SkillSkillAdvancetype3buffDesc::E_SkillSkillAdvancetype3buffDesc(const E_SkillSkillAdvancetype3buffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillAdvancetype3buffDesc::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillAdvancetype3buffDesc::~E_SkillSkillAdvancetype3buffDesc() {
  SharedDtor();
}

void E_SkillSkillAdvancetype3buffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillSkillAdvancetype3buffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillAdvancetype3buffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillAdvancetype3buffDesc_descriptor_;
}

const E_SkillSkillAdvancetype3buffDesc& E_SkillSkillAdvancetype3buffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillAdvancetype3buffDesc* E_SkillSkillAdvancetype3buffDesc::default_instance_ = NULL;

E_SkillSkillAdvancetype3buffDesc* E_SkillSkillAdvancetype3buffDesc::New() const {
  return new E_SkillSkillAdvancetype3buffDesc;
}

void E_SkillSkillAdvancetype3buffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillAdvancetype3buffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillAdvancetype3buffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillAdvancetype3buffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillAdvancetype3buffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillAdvancetype3buffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillAdvancetype3buffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillAdvancetype3buffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillAdvancetype3buffDesc::MergeFrom(const E_SkillSkillAdvancetype3buffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillAdvancetype3buffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillAdvancetype3buffDesc::CopyFrom(const E_SkillSkillAdvancetype3buffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillAdvancetype3buffDesc::IsInitialized() const {

  return true;
}

void E_SkillSkillAdvancetype3buffDesc::Swap(E_SkillSkillAdvancetype3buffDesc* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillAdvancetype3buffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillAdvancetype3buffDesc_descriptor_;
  metadata.reflection = E_SkillSkillAdvancetype3buffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillBuffDesc::kMTargetFieldNumber;
const int E_SkillSkillBuffDesc::kMIdFieldNumber;
const int E_SkillSkillBuffDesc::kMPointFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillBuffDesc::E_SkillSkillBuffDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillBuffDesc::InitAsDefaultInstance() {
}

E_SkillSkillBuffDesc::E_SkillSkillBuffDesc(const E_SkillSkillBuffDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillBuffDesc::SharedCtor() {
  _cached_size_ = 0;
  m_target_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_point_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillBuffDesc::~E_SkillSkillBuffDesc() {
  SharedDtor();
}

void E_SkillSkillBuffDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillSkillBuffDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillBuffDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillBuffDesc_descriptor_;
}

const E_SkillSkillBuffDesc& E_SkillSkillBuffDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillBuffDesc* E_SkillSkillBuffDesc::default_instance_ = NULL;

E_SkillSkillBuffDesc* E_SkillSkillBuffDesc::New() const {
  return new E_SkillSkillBuffDesc;
}

void E_SkillSkillBuffDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_target_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
    m_point_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillBuffDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_target = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_target_)));
          set_has_m_target();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int64 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_point;
        break;
      }

      // optional int32 m_point = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_point_)));
          set_has_m_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillBuffDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_target = 1;
  if (has_m_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_target(), output);
  }

  // optional int64 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  // optional int32 m_point = 3;
  if (has_m_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_point(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillBuffDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_target = 1;
  if (has_m_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_target(), target);
  }

  // optional int64 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  // optional int32 m_point = 3;
  if (has_m_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_point(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillBuffDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_target = 1;
    if (has_m_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_target());
    }

    // optional int64 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_point = 3;
    if (has_m_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_point());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillBuffDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillBuffDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillBuffDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillBuffDesc::MergeFrom(const E_SkillSkillBuffDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_target()) {
      set_m_target(from.m_target());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_point()) {
      set_m_point(from.m_point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillBuffDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillBuffDesc::CopyFrom(const E_SkillSkillBuffDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillBuffDesc::IsInitialized() const {

  return true;
}

void E_SkillSkillBuffDesc::Swap(E_SkillSkillBuffDesc* other) {
  if (other != this) {
    std::swap(m_target_, other->m_target_);
    std::swap(m_id_, other->m_id_);
    std::swap(m_point_, other->m_point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillBuffDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillBuffDesc_descriptor_;
  metadata.reflection = E_SkillSkillBuffDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkill::kMSkillidFieldNumber;
const int E_SkillSkill::kMNameFieldNumber;
const int E_SkillSkill::kMSkilltypeFieldNumber;
const int E_SkillSkill::kMGroupFieldNumber;
const int E_SkillSkill::kMPositionFieldNumber;
const int E_SkillSkill::kMDisplacetimeFieldNumber;
const int E_SkillSkill::kMDisplacesignFieldNumber;
const int E_SkillSkill::kMDisplacespeedFieldNumber;
const int E_SkillSkill::kMDistimesFieldNumber;
const int E_SkillSkill::kMBreaktypeFieldNumber;
const int E_SkillSkill::kMCdskillFieldNumber;
const int E_SkillSkill::kMRelationFieldNumber;
const int E_SkillSkill::kMUnlockconditionFieldNumber;
const int E_SkillSkill::kMTypeFieldNumber;
const int E_SkillSkill::kMCdFieldNumber;
const int E_SkillSkill::kMNolockFieldNumber;
const int E_SkillSkill::kMPriorityFieldNumber;
const int E_SkillSkill::kMFightingFieldNumber;
const int E_SkillSkill::kMFightingparamaFieldNumber;
const int E_SkillSkill::kMReleasetypeFieldNumber;
const int E_SkillSkill::kMProcesstypesFieldNumber;
const int E_SkillSkill::kMFlyspeedFieldNumber;
const int E_SkillSkill::kMActtimeFieldNumber;
const int E_SkillSkill::kMReadytimeFieldNumber;
const int E_SkillSkill::kMReadytimeexFieldNumber;
const int E_SkillSkill::kMAttacktimeFieldNumber;
const int E_SkillSkill::kMDamagetimeFieldNumber;
const int E_SkillSkill::kMDamagetimeexFieldNumber;
const int E_SkillSkill::kMAttackdistanceFieldNumber;
const int E_SkillSkill::kMRangetypeFieldNumber;
const int E_SkillSkill::kMRangetypevalueFieldNumber;
const int E_SkillSkill::kMRangetypeexFieldNumber;
const int E_SkillSkill::kMRangetypevalueexFieldNumber;
const int E_SkillSkill::kMWarnFieldNumber;
const int E_SkillSkill::kMDazetimeFieldNumber;
const int E_SkillSkill::kMWarntimeFieldNumber;
const int E_SkillSkill::kMInfomationidFieldNumber;
const int E_SkillSkill::kMAttackmindistanceFieldNumber;
const int E_SkillSkill::kMGoalmaxnumFieldNumber;
const int E_SkillSkill::kMGoalmaxnummonsterFieldNumber;
const int E_SkillSkill::kMDamagetypeFieldNumber;
const int E_SkillSkill::kMDamagerateFieldNumber;
const int E_SkillSkill::kMAwakedamagerateFieldNumber;
const int E_SkillSkill::kMAdvancetype1DamagerateFieldNumber;
const int E_SkillSkill::kMAdvancetype2DamagerateFieldNumber;
const int E_SkillSkill::kMAdvancetype3DamagerateFieldNumber;
const int E_SkillSkill::kMDamagevalueFieldNumber;
const int E_SkillSkill::kMDamageparamaFieldNumber;
const int E_SkillSkill::kMAddhitrateFieldNumber;
const int E_SkillSkill::kMAdvancetype1BuffFieldNumber;
const int E_SkillSkill::kMAdvancetype2BuffFieldNumber;
const int E_SkillSkill::kMAwakebuffFieldNumber;
const int E_SkillSkill::kMAdvancetype3BuffFieldNumber;
const int E_SkillSkill::kMBuffFieldNumber;
#endif  // !_MSC_VER

E_SkillSkill::E_SkillSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkill::InitAsDefaultInstance() {
}

E_SkillSkill::E_SkillSkill(const E_SkillSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkill::SharedCtor() {
  _cached_size_ = 0;
  m_skillid_ = GOOGLE_LONGLONG(0);
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_skilltype_ = 0;
  m_group_ = 0;
  m_position_ = 0;
  m_displacetime_ = 0;
  m_displacesign_ = 0;
  m_displacespeed_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_distimes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_breaktype_ = 0;
  m_cdskill_ = 0;
  m_relation_ = GOOGLE_LONGLONG(0);
  m_unlockcondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_type_ = 0;
  m_cd_ = 0;
  m_nolock_ = 0;
  m_priority_ = 0;
  m_fighting_ = 0;
  m_fightingparama_ = 0;
  m_releasetype_ = 0;
  m_processtypes_ = 0;
  m_flyspeed_ = 0;
  m_acttime_ = 0;
  m_readytime_ = 0;
  m_readytimeex_ = 0;
  m_attacktime_ = 0;
  m_damagetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_damagetimeex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_attackdistance_ = 0;
  m_rangetype_ = 0;
  m_rangetypevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_rangetypeex_ = 0;
  m_rangetypevalueex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_warn_ = 0;
  m_dazetime_ = 0;
  m_warntime_ = 0;
  m_infomationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_attackmindistance_ = 0;
  m_goalmaxnum_ = 0;
  m_goalmaxnummonster_ = 0;
  m_damagetype_ = 0;
  m_damagerate_ = 0;
  m_awakedamagerate_ = 0;
  m_advancetype1damagerate_ = 0;
  m_advancetype2damagerate_ = 0;
  m_advancetype3damagerate_ = 0;
  m_damagevalue_ = 0;
  m_damageparama_ = 0;
  m_addhitrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkill::~E_SkillSkill() {
  SharedDtor();
}

void E_SkillSkill::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_displacespeed_ != &::google::protobuf::internal::kEmptyString) {
    delete m_displacespeed_;
  }
  if (m_distimes_ != &::google::protobuf::internal::kEmptyString) {
    delete m_distimes_;
  }
  if (m_unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unlockcondition_;
  }
  if (m_damagetime_ != &::google::protobuf::internal::kEmptyString) {
    delete m_damagetime_;
  }
  if (m_damagetimeex_ != &::google::protobuf::internal::kEmptyString) {
    delete m_damagetimeex_;
  }
  if (m_rangetypevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rangetypevalue_;
  }
  if (m_rangetypevalueex_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rangetypevalueex_;
  }
  if (m_infomationid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_infomationid_;
  }
  if (this != default_instance_) {
  }
}

void E_SkillSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkill_descriptor_;
}

const E_SkillSkill& E_SkillSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkill* E_SkillSkill::default_instance_ = NULL;

E_SkillSkill* E_SkillSkill::New() const {
  return new E_SkillSkill;
}

void E_SkillSkill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_skillid_ = GOOGLE_LONGLONG(0);
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_skilltype_ = 0;
    m_group_ = 0;
    m_position_ = 0;
    m_displacetime_ = 0;
    m_displacesign_ = 0;
    if (has_m_displacespeed()) {
      if (m_displacespeed_ != &::google::protobuf::internal::kEmptyString) {
        m_displacespeed_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_distimes()) {
      if (m_distimes_ != &::google::protobuf::internal::kEmptyString) {
        m_distimes_->clear();
      }
    }
    m_breaktype_ = 0;
    m_cdskill_ = 0;
    m_relation_ = GOOGLE_LONGLONG(0);
    if (has_m_unlockcondition()) {
      if (m_unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
        m_unlockcondition_->clear();
      }
    }
    m_type_ = 0;
    m_cd_ = 0;
    m_nolock_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_priority_ = 0;
    m_fighting_ = 0;
    m_fightingparama_ = 0;
    m_releasetype_ = 0;
    m_processtypes_ = 0;
    m_flyspeed_ = 0;
    m_acttime_ = 0;
    m_readytime_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    m_readytimeex_ = 0;
    m_attacktime_ = 0;
    if (has_m_damagetime()) {
      if (m_damagetime_ != &::google::protobuf::internal::kEmptyString) {
        m_damagetime_->clear();
      }
    }
    if (has_m_damagetimeex()) {
      if (m_damagetimeex_ != &::google::protobuf::internal::kEmptyString) {
        m_damagetimeex_->clear();
      }
    }
    m_attackdistance_ = 0;
    m_rangetype_ = 0;
    if (has_m_rangetypevalue()) {
      if (m_rangetypevalue_ != &::google::protobuf::internal::kEmptyString) {
        m_rangetypevalue_->clear();
      }
    }
    m_rangetypeex_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (has_m_rangetypevalueex()) {
      if (m_rangetypevalueex_ != &::google::protobuf::internal::kEmptyString) {
        m_rangetypevalueex_->clear();
      }
    }
    m_warn_ = 0;
    m_dazetime_ = 0;
    m_warntime_ = 0;
    if (has_m_infomationid()) {
      if (m_infomationid_ != &::google::protobuf::internal::kEmptyString) {
        m_infomationid_->clear();
      }
    }
    m_attackmindistance_ = 0;
    m_goalmaxnum_ = 0;
    m_goalmaxnummonster_ = 0;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    m_damagetype_ = 0;
    m_damagerate_ = 0;
    m_awakedamagerate_ = 0;
    m_advancetype1damagerate_ = 0;
    m_advancetype2damagerate_ = 0;
    m_advancetype3damagerate_ = 0;
    m_damagevalue_ = 0;
    m_damageparama_ = 0;
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    m_addhitrate_ = 0;
  }
  m_advancetype1buff_.Clear();
  m_advancetype2buff_.Clear();
  m_awakebuff_.Clear();
  m_advancetype3buff_.Clear();
  m_buff_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_skillid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_skilltype;
        break;
      }

      // optional int32 m_skilltype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skilltype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skilltype_)));
          set_has_m_skilltype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_group;
        break;
      }

      // optional int32 m_group = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_)));
          set_has_m_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_displacetime;
        break;
      }

      // optional int32 m_displacetime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_displacetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_displacetime_)));
          set_has_m_displacetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_displacesign;
        break;
      }

      // optional int32 m_displacesign = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_displacesign:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_displacesign_)));
          set_has_m_displacesign();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_displacespeed;
        break;
      }

      // optional string m_displacespeed = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_displacespeed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_displacespeed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_displacespeed().data(), this->m_displacespeed().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_distimes;
        break;
      }

      // optional string m_distimes = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_distimes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_distimes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_distimes().data(), this->m_distimes().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_breaktype;
        break;
      }

      // optional int32 m_breaktype = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_breaktype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_breaktype_)));
          set_has_m_breaktype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_cdskill;
        break;
      }

      // optional int32 m_cdskill = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cdskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cdskill_)));
          set_has_m_cdskill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_relation;
        break;
      }

      // optional int64 m_relation = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_relation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_relation_)));
          set_has_m_relation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_unlockcondition;
        break;
      }

      // optional string m_unlockcondition = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_unlockcondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_unlockcondition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_unlockcondition().data(), this->m_unlockcondition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_cd;
        break;
      }

      // optional int32 m_cd = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cd_)));
          set_has_m_cd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_nolock;
        break;
      }

      // optional int32 m_nolock = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nolock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nolock_)));
          set_has_m_nolock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_priority;
        break;
      }

      // optional int32 m_priority = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_priority_)));
          set_has_m_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_m_fighting;
        break;
      }

      // optional int32 m_fighting = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fighting:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_fighting_)));
          set_has_m_fighting();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(157)) goto parse_m_fightingparama;
        break;
      }

      // optional float m_fightingparama = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_fightingparama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fightingparama_)));
          set_has_m_fightingparama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_m_releasetype;
        break;
      }

      // optional int32 m_releasetype = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_releasetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_releasetype_)));
          set_has_m_releasetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_m_processtypes;
        break;
      }

      // optional int32 m_processtypes = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_processtypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_processtypes_)));
          set_has_m_processtypes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_m_flyspeed;
        break;
      }

      // optional int32 m_flyspeed = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_flyspeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_flyspeed_)));
          set_has_m_flyspeed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_m_acttime;
        break;
      }

      // optional int32 m_acttime = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_acttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_acttime_)));
          set_has_m_acttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_m_readytime;
        break;
      }

      // optional int32 m_readytime = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_readytime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_readytime_)));
          set_has_m_readytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_m_readytimeex;
        break;
      }

      // optional int32 m_readytimeex = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_readytimeex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_readytimeex_)));
          set_has_m_readytimeex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_m_attacktime;
        break;
      }

      // optional int32 m_attacktime = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attacktime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attacktime_)));
          set_has_m_attacktime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_m_damagetime;
        break;
      }

      // optional string m_damagetime = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_damagetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_damagetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_damagetime().data(), this->m_damagetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_m_damagetimeex;
        break;
      }

      // optional string m_damagetimeex = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_damagetimeex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_damagetimeex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_damagetimeex().data(), this->m_damagetimeex().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_m_attackdistance;
        break;
      }

      // optional int32 m_attackdistance = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attackdistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attackdistance_)));
          set_has_m_attackdistance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_m_rangetype;
        break;
      }

      // optional int32 m_rangetype = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rangetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rangetype_)));
          set_has_m_rangetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_m_rangetypevalue;
        break;
      }

      // optional string m_rangetypevalue = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_rangetypevalue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_rangetypevalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_rangetypevalue().data(), this->m_rangetypevalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_m_rangetypeex;
        break;
      }

      // optional int32 m_rangetypeex = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rangetypeex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rangetypeex_)));
          set_has_m_rangetypeex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_m_rangetypevalueex;
        break;
      }

      // optional string m_rangetypevalueex = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_rangetypevalueex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_rangetypevalueex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_rangetypevalueex().data(), this->m_rangetypevalueex().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_m_warn;
        break;
      }

      // optional int32 m_warn = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_warn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_warn_)));
          set_has_m_warn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_m_dazetime;
        break;
      }

      // optional int32 m_dazetime = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dazetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dazetime_)));
          set_has_m_dazetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_m_warntime;
        break;
      }

      // optional int32 m_warntime = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_warntime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_warntime_)));
          set_has_m_warntime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_m_infomationid;
        break;
      }

      // optional string m_infomationid = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_infomationid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_infomationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_infomationid().data(), this->m_infomationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_m_attackmindistance;
        break;
      }

      // optional int32 m_attackmindistance = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attackmindistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attackmindistance_)));
          set_has_m_attackmindistance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_m_goalmaxnum;
        break;
      }

      // optional int32 m_goalmaxnum = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_goalmaxnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_goalmaxnum_)));
          set_has_m_goalmaxnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_m_goalmaxnummonster;
        break;
      }

      // optional int32 m_goalmaxnummonster = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_goalmaxnummonster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_goalmaxnummonster_)));
          set_has_m_goalmaxnummonster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_m_damagetype;
        break;
      }

      // optional int32 m_damagetype = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_damagetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_damagetype_)));
          set_has_m_damagetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_m_damagerate;
        break;
      }

      // optional int32 m_damagerate = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_damagerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_damagerate_)));
          set_has_m_damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_m_awakedamagerate;
        break;
      }

      // optional int32 m_awakedamagerate = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakedamagerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakedamagerate_)));
          set_has_m_awakedamagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_m_advancetype1damagerate;
        break;
      }

      // optional int32 m_advancetype1damagerate = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancetype1damagerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancetype1damagerate_)));
          set_has_m_advancetype1damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_m_advancetype2damagerate;
        break;
      }

      // optional int32 m_advancetype2damagerate = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancetype2damagerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancetype2damagerate_)));
          set_has_m_advancetype2damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_m_advancetype3damagerate;
        break;
      }

      // optional int32 m_advancetype3damagerate = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancetype3damagerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancetype3damagerate_)));
          set_has_m_advancetype3damagerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_m_damagevalue;
        break;
      }

      // optional int32 m_damagevalue = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_damagevalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_damagevalue_)));
          set_has_m_damagevalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(389)) goto parse_m_damageparama;
        break;
      }

      // optional float m_damageparama = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_damageparama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_damageparama_)));
          set_has_m_damageparama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(392)) goto parse_m_addhitrate;
        break;
      }

      // optional int32 m_addhitrate = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addhitrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addhitrate_)));
          set_has_m_addhitrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(402)) goto parse_m_advancetype1buff;
        break;
      }

      // repeated .proto_ff.E_SkillSkillAdvancetype1buffDesc m_advancetype1buff = 50;
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_advancetype1buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_advancetype1buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(402)) goto parse_m_advancetype1buff;
        if (input->ExpectTag(410)) goto parse_m_advancetype2buff;
        break;
      }

      // repeated .proto_ff.E_SkillSkillAdvancetype2buffDesc m_advancetype2buff = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_advancetype2buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_advancetype2buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(410)) goto parse_m_advancetype2buff;
        if (input->ExpectTag(418)) goto parse_m_awakebuff;
        break;
      }

      // repeated .proto_ff.E_SkillSkillAwakebuffDesc m_awakebuff = 52;
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_awakebuff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_awakebuff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(418)) goto parse_m_awakebuff;
        if (input->ExpectTag(426)) goto parse_m_advancetype3buff;
        break;
      }

      // repeated .proto_ff.E_SkillSkillAdvancetype3buffDesc m_advancetype3buff = 53;
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_advancetype3buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_advancetype3buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(426)) goto parse_m_advancetype3buff;
        if (input->ExpectTag(434)) goto parse_m_buff;
        break;
      }

      // repeated .proto_ff.E_SkillSkillBuffDesc m_buff = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_buff()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(434)) goto parse_m_buff;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_skillid = 1;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_skillid(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_skilltype = 3;
  if (has_m_skilltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_skilltype(), output);
  }

  // optional int32 m_group = 4;
  if (has_m_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_group(), output);
  }

  // optional int32 m_position = 5;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_position(), output);
  }

  // optional int32 m_displacetime = 6;
  if (has_m_displacetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_displacetime(), output);
  }

  // optional int32 m_displacesign = 7;
  if (has_m_displacesign()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_displacesign(), output);
  }

  // optional string m_displacespeed = 8;
  if (has_m_displacespeed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_displacespeed().data(), this->m_displacespeed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->m_displacespeed(), output);
  }

  // optional string m_distimes = 9;
  if (has_m_distimes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_distimes().data(), this->m_distimes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_distimes(), output);
  }

  // optional int32 m_breaktype = 10;
  if (has_m_breaktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_breaktype(), output);
  }

  // optional int32 m_cdskill = 11;
  if (has_m_cdskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_cdskill(), output);
  }

  // optional int64 m_relation = 12;
  if (has_m_relation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->m_relation(), output);
  }

  // optional string m_unlockcondition = 13;
  if (has_m_unlockcondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unlockcondition().data(), this->m_unlockcondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->m_unlockcondition(), output);
  }

  // optional int32 m_type = 14;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_type(), output);
  }

  // optional int32 m_cd = 15;
  if (has_m_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_cd(), output);
  }

  // optional int32 m_nolock = 16;
  if (has_m_nolock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_nolock(), output);
  }

  // optional int32 m_priority = 17;
  if (has_m_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_priority(), output);
  }

  // optional int32 m_fighting = 18;
  if (has_m_fighting()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->m_fighting(), output);
  }

  // optional float m_fightingparama = 19;
  if (has_m_fightingparama()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->m_fightingparama(), output);
  }

  // optional int32 m_releasetype = 20;
  if (has_m_releasetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->m_releasetype(), output);
  }

  // optional int32 m_processtypes = 21;
  if (has_m_processtypes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->m_processtypes(), output);
  }

  // optional int32 m_flyspeed = 22;
  if (has_m_flyspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->m_flyspeed(), output);
  }

  // optional int32 m_acttime = 23;
  if (has_m_acttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->m_acttime(), output);
  }

  // optional int32 m_readytime = 24;
  if (has_m_readytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->m_readytime(), output);
  }

  // optional int32 m_readytimeex = 25;
  if (has_m_readytimeex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->m_readytimeex(), output);
  }

  // optional int32 m_attacktime = 26;
  if (has_m_attacktime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->m_attacktime(), output);
  }

  // optional string m_damagetime = 27;
  if (has_m_damagetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_damagetime().data(), this->m_damagetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->m_damagetime(), output);
  }

  // optional string m_damagetimeex = 28;
  if (has_m_damagetimeex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_damagetimeex().data(), this->m_damagetimeex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->m_damagetimeex(), output);
  }

  // optional int32 m_attackdistance = 29;
  if (has_m_attackdistance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->m_attackdistance(), output);
  }

  // optional int32 m_rangetype = 30;
  if (has_m_rangetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->m_rangetype(), output);
  }

  // optional string m_rangetypevalue = 31;
  if (has_m_rangetypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rangetypevalue().data(), this->m_rangetypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->m_rangetypevalue(), output);
  }

  // optional int32 m_rangetypeex = 32;
  if (has_m_rangetypeex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->m_rangetypeex(), output);
  }

  // optional string m_rangetypevalueex = 33;
  if (has_m_rangetypevalueex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rangetypevalueex().data(), this->m_rangetypevalueex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->m_rangetypevalueex(), output);
  }

  // optional int32 m_warn = 34;
  if (has_m_warn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->m_warn(), output);
  }

  // optional int32 m_dazetime = 35;
  if (has_m_dazetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->m_dazetime(), output);
  }

  // optional int32 m_warntime = 36;
  if (has_m_warntime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->m_warntime(), output);
  }

  // optional string m_infomationid = 37;
  if (has_m_infomationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_infomationid().data(), this->m_infomationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->m_infomationid(), output);
  }

  // optional int32 m_attackmindistance = 38;
  if (has_m_attackmindistance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->m_attackmindistance(), output);
  }

  // optional int32 m_goalmaxnum = 39;
  if (has_m_goalmaxnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->m_goalmaxnum(), output);
  }

  // optional int32 m_goalmaxnummonster = 40;
  if (has_m_goalmaxnummonster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->m_goalmaxnummonster(), output);
  }

  // optional int32 m_damagetype = 41;
  if (has_m_damagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->m_damagetype(), output);
  }

  // optional int32 m_damagerate = 42;
  if (has_m_damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->m_damagerate(), output);
  }

  // optional int32 m_awakedamagerate = 43;
  if (has_m_awakedamagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->m_awakedamagerate(), output);
  }

  // optional int32 m_advancetype1damagerate = 44;
  if (has_m_advancetype1damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->m_advancetype1damagerate(), output);
  }

  // optional int32 m_advancetype2damagerate = 45;
  if (has_m_advancetype2damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->m_advancetype2damagerate(), output);
  }

  // optional int32 m_advancetype3damagerate = 46;
  if (has_m_advancetype3damagerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->m_advancetype3damagerate(), output);
  }

  // optional int32 m_damagevalue = 47;
  if (has_m_damagevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->m_damagevalue(), output);
  }

  // optional float m_damageparama = 48;
  if (has_m_damageparama()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(48, this->m_damageparama(), output);
  }

  // optional int32 m_addhitrate = 49;
  if (has_m_addhitrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(49, this->m_addhitrate(), output);
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype1buffDesc m_advancetype1buff = 50;
  for (int i = 0; i < this->m_advancetype1buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->m_advancetype1buff(i), output);
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype2buffDesc m_advancetype2buff = 51;
  for (int i = 0; i < this->m_advancetype2buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->m_advancetype2buff(i), output);
  }

  // repeated .proto_ff.E_SkillSkillAwakebuffDesc m_awakebuff = 52;
  for (int i = 0; i < this->m_awakebuff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->m_awakebuff(i), output);
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype3buffDesc m_advancetype3buff = 53;
  for (int i = 0; i < this->m_advancetype3buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->m_advancetype3buff(i), output);
  }

  // repeated .proto_ff.E_SkillSkillBuffDesc m_buff = 54;
  for (int i = 0; i < this->m_buff_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->m_buff(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_skillid = 1;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_skillid(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_skilltype = 3;
  if (has_m_skilltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_skilltype(), target);
  }

  // optional int32 m_group = 4;
  if (has_m_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_group(), target);
  }

  // optional int32 m_position = 5;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_position(), target);
  }

  // optional int32 m_displacetime = 6;
  if (has_m_displacetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_displacetime(), target);
  }

  // optional int32 m_displacesign = 7;
  if (has_m_displacesign()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_displacesign(), target);
  }

  // optional string m_displacespeed = 8;
  if (has_m_displacespeed()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_displacespeed().data(), this->m_displacespeed().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->m_displacespeed(), target);
  }

  // optional string m_distimes = 9;
  if (has_m_distimes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_distimes().data(), this->m_distimes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_distimes(), target);
  }

  // optional int32 m_breaktype = 10;
  if (has_m_breaktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_breaktype(), target);
  }

  // optional int32 m_cdskill = 11;
  if (has_m_cdskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_cdskill(), target);
  }

  // optional int64 m_relation = 12;
  if (has_m_relation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->m_relation(), target);
  }

  // optional string m_unlockcondition = 13;
  if (has_m_unlockcondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unlockcondition().data(), this->m_unlockcondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->m_unlockcondition(), target);
  }

  // optional int32 m_type = 14;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_type(), target);
  }

  // optional int32 m_cd = 15;
  if (has_m_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_cd(), target);
  }

  // optional int32 m_nolock = 16;
  if (has_m_nolock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_nolock(), target);
  }

  // optional int32 m_priority = 17;
  if (has_m_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_priority(), target);
  }

  // optional int32 m_fighting = 18;
  if (has_m_fighting()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->m_fighting(), target);
  }

  // optional float m_fightingparama = 19;
  if (has_m_fightingparama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->m_fightingparama(), target);
  }

  // optional int32 m_releasetype = 20;
  if (has_m_releasetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->m_releasetype(), target);
  }

  // optional int32 m_processtypes = 21;
  if (has_m_processtypes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->m_processtypes(), target);
  }

  // optional int32 m_flyspeed = 22;
  if (has_m_flyspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->m_flyspeed(), target);
  }

  // optional int32 m_acttime = 23;
  if (has_m_acttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->m_acttime(), target);
  }

  // optional int32 m_readytime = 24;
  if (has_m_readytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->m_readytime(), target);
  }

  // optional int32 m_readytimeex = 25;
  if (has_m_readytimeex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->m_readytimeex(), target);
  }

  // optional int32 m_attacktime = 26;
  if (has_m_attacktime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->m_attacktime(), target);
  }

  // optional string m_damagetime = 27;
  if (has_m_damagetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_damagetime().data(), this->m_damagetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->m_damagetime(), target);
  }

  // optional string m_damagetimeex = 28;
  if (has_m_damagetimeex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_damagetimeex().data(), this->m_damagetimeex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->m_damagetimeex(), target);
  }

  // optional int32 m_attackdistance = 29;
  if (has_m_attackdistance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->m_attackdistance(), target);
  }

  // optional int32 m_rangetype = 30;
  if (has_m_rangetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->m_rangetype(), target);
  }

  // optional string m_rangetypevalue = 31;
  if (has_m_rangetypevalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rangetypevalue().data(), this->m_rangetypevalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->m_rangetypevalue(), target);
  }

  // optional int32 m_rangetypeex = 32;
  if (has_m_rangetypeex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->m_rangetypeex(), target);
  }

  // optional string m_rangetypevalueex = 33;
  if (has_m_rangetypevalueex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rangetypevalueex().data(), this->m_rangetypevalueex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->m_rangetypevalueex(), target);
  }

  // optional int32 m_warn = 34;
  if (has_m_warn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->m_warn(), target);
  }

  // optional int32 m_dazetime = 35;
  if (has_m_dazetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->m_dazetime(), target);
  }

  // optional int32 m_warntime = 36;
  if (has_m_warntime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->m_warntime(), target);
  }

  // optional string m_infomationid = 37;
  if (has_m_infomationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_infomationid().data(), this->m_infomationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->m_infomationid(), target);
  }

  // optional int32 m_attackmindistance = 38;
  if (has_m_attackmindistance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->m_attackmindistance(), target);
  }

  // optional int32 m_goalmaxnum = 39;
  if (has_m_goalmaxnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->m_goalmaxnum(), target);
  }

  // optional int32 m_goalmaxnummonster = 40;
  if (has_m_goalmaxnummonster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->m_goalmaxnummonster(), target);
  }

  // optional int32 m_damagetype = 41;
  if (has_m_damagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->m_damagetype(), target);
  }

  // optional int32 m_damagerate = 42;
  if (has_m_damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->m_damagerate(), target);
  }

  // optional int32 m_awakedamagerate = 43;
  if (has_m_awakedamagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->m_awakedamagerate(), target);
  }

  // optional int32 m_advancetype1damagerate = 44;
  if (has_m_advancetype1damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->m_advancetype1damagerate(), target);
  }

  // optional int32 m_advancetype2damagerate = 45;
  if (has_m_advancetype2damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->m_advancetype2damagerate(), target);
  }

  // optional int32 m_advancetype3damagerate = 46;
  if (has_m_advancetype3damagerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->m_advancetype3damagerate(), target);
  }

  // optional int32 m_damagevalue = 47;
  if (has_m_damagevalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->m_damagevalue(), target);
  }

  // optional float m_damageparama = 48;
  if (has_m_damageparama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(48, this->m_damageparama(), target);
  }

  // optional int32 m_addhitrate = 49;
  if (has_m_addhitrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(49, this->m_addhitrate(), target);
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype1buffDesc m_advancetype1buff = 50;
  for (int i = 0; i < this->m_advancetype1buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->m_advancetype1buff(i), target);
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype2buffDesc m_advancetype2buff = 51;
  for (int i = 0; i < this->m_advancetype2buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        51, this->m_advancetype2buff(i), target);
  }

  // repeated .proto_ff.E_SkillSkillAwakebuffDesc m_awakebuff = 52;
  for (int i = 0; i < this->m_awakebuff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        52, this->m_awakebuff(i), target);
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype3buffDesc m_advancetype3buff = 53;
  for (int i = 0; i < this->m_advancetype3buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        53, this->m_advancetype3buff(i), target);
  }

  // repeated .proto_ff.E_SkillSkillBuffDesc m_buff = 54;
  for (int i = 0; i < this->m_buff_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        54, this->m_buff(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_skillid = 1;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_skillid());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_skilltype = 3;
    if (has_m_skilltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skilltype());
    }

    // optional int32 m_group = 4;
    if (has_m_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group());
    }

    // optional int32 m_position = 5;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_displacetime = 6;
    if (has_m_displacetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_displacetime());
    }

    // optional int32 m_displacesign = 7;
    if (has_m_displacesign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_displacesign());
    }

    // optional string m_displacespeed = 8;
    if (has_m_displacespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_displacespeed());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string m_distimes = 9;
    if (has_m_distimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_distimes());
    }

    // optional int32 m_breaktype = 10;
    if (has_m_breaktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_breaktype());
    }

    // optional int32 m_cdskill = 11;
    if (has_m_cdskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cdskill());
    }

    // optional int64 m_relation = 12;
    if (has_m_relation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_relation());
    }

    // optional string m_unlockcondition = 13;
    if (has_m_unlockcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_unlockcondition());
    }

    // optional int32 m_type = 14;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_cd = 15;
    if (has_m_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cd());
    }

    // optional int32 m_nolock = 16;
    if (has_m_nolock()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nolock());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_priority = 17;
    if (has_m_priority()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_priority());
    }

    // optional int32 m_fighting = 18;
    if (has_m_fighting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_fighting());
    }

    // optional float m_fightingparama = 19;
    if (has_m_fightingparama()) {
      total_size += 2 + 4;
    }

    // optional int32 m_releasetype = 20;
    if (has_m_releasetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_releasetype());
    }

    // optional int32 m_processtypes = 21;
    if (has_m_processtypes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_processtypes());
    }

    // optional int32 m_flyspeed = 22;
    if (has_m_flyspeed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_flyspeed());
    }

    // optional int32 m_acttime = 23;
    if (has_m_acttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_acttime());
    }

    // optional int32 m_readytime = 24;
    if (has_m_readytime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_readytime());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 m_readytimeex = 25;
    if (has_m_readytimeex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_readytimeex());
    }

    // optional int32 m_attacktime = 26;
    if (has_m_attacktime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attacktime());
    }

    // optional string m_damagetime = 27;
    if (has_m_damagetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_damagetime());
    }

    // optional string m_damagetimeex = 28;
    if (has_m_damagetimeex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_damagetimeex());
    }

    // optional int32 m_attackdistance = 29;
    if (has_m_attackdistance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attackdistance());
    }

    // optional int32 m_rangetype = 30;
    if (has_m_rangetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rangetype());
    }

    // optional string m_rangetypevalue = 31;
    if (has_m_rangetypevalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_rangetypevalue());
    }

    // optional int32 m_rangetypeex = 32;
    if (has_m_rangetypeex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rangetypeex());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional string m_rangetypevalueex = 33;
    if (has_m_rangetypevalueex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_rangetypevalueex());
    }

    // optional int32 m_warn = 34;
    if (has_m_warn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_warn());
    }

    // optional int32 m_dazetime = 35;
    if (has_m_dazetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dazetime());
    }

    // optional int32 m_warntime = 36;
    if (has_m_warntime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_warntime());
    }

    // optional string m_infomationid = 37;
    if (has_m_infomationid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_infomationid());
    }

    // optional int32 m_attackmindistance = 38;
    if (has_m_attackmindistance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attackmindistance());
    }

    // optional int32 m_goalmaxnum = 39;
    if (has_m_goalmaxnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_goalmaxnum());
    }

    // optional int32 m_goalmaxnummonster = 40;
    if (has_m_goalmaxnummonster()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_goalmaxnummonster());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional int32 m_damagetype = 41;
    if (has_m_damagetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_damagetype());
    }

    // optional int32 m_damagerate = 42;
    if (has_m_damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_damagerate());
    }

    // optional int32 m_awakedamagerate = 43;
    if (has_m_awakedamagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakedamagerate());
    }

    // optional int32 m_advancetype1damagerate = 44;
    if (has_m_advancetype1damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancetype1damagerate());
    }

    // optional int32 m_advancetype2damagerate = 45;
    if (has_m_advancetype2damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancetype2damagerate());
    }

    // optional int32 m_advancetype3damagerate = 46;
    if (has_m_advancetype3damagerate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancetype3damagerate());
    }

    // optional int32 m_damagevalue = 47;
    if (has_m_damagevalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_damagevalue());
    }

    // optional float m_damageparama = 48;
    if (has_m_damageparama()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional int32 m_addhitrate = 49;
    if (has_m_addhitrate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addhitrate());
    }

  }
  // repeated .proto_ff.E_SkillSkillAdvancetype1buffDesc m_advancetype1buff = 50;
  total_size += 2 * this->m_advancetype1buff_size();
  for (int i = 0; i < this->m_advancetype1buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_advancetype1buff(i));
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype2buffDesc m_advancetype2buff = 51;
  total_size += 2 * this->m_advancetype2buff_size();
  for (int i = 0; i < this->m_advancetype2buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_advancetype2buff(i));
  }

  // repeated .proto_ff.E_SkillSkillAwakebuffDesc m_awakebuff = 52;
  total_size += 2 * this->m_awakebuff_size();
  for (int i = 0; i < this->m_awakebuff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_awakebuff(i));
  }

  // repeated .proto_ff.E_SkillSkillAdvancetype3buffDesc m_advancetype3buff = 53;
  total_size += 2 * this->m_advancetype3buff_size();
  for (int i = 0; i < this->m_advancetype3buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_advancetype3buff(i));
  }

  // repeated .proto_ff.E_SkillSkillBuffDesc m_buff = 54;
  total_size += 2 * this->m_buff_size();
  for (int i = 0; i < this->m_buff_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_buff(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkill::MergeFrom(const E_SkillSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_advancetype1buff_.MergeFrom(from.m_advancetype1buff_);
  m_advancetype2buff_.MergeFrom(from.m_advancetype2buff_);
  m_awakebuff_.MergeFrom(from.m_awakebuff_);
  m_advancetype3buff_.MergeFrom(from.m_advancetype3buff_);
  m_buff_.MergeFrom(from.m_buff_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_skilltype()) {
      set_m_skilltype(from.m_skilltype());
    }
    if (from.has_m_group()) {
      set_m_group(from.m_group());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_displacetime()) {
      set_m_displacetime(from.m_displacetime());
    }
    if (from.has_m_displacesign()) {
      set_m_displacesign(from.m_displacesign());
    }
    if (from.has_m_displacespeed()) {
      set_m_displacespeed(from.m_displacespeed());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_distimes()) {
      set_m_distimes(from.m_distimes());
    }
    if (from.has_m_breaktype()) {
      set_m_breaktype(from.m_breaktype());
    }
    if (from.has_m_cdskill()) {
      set_m_cdskill(from.m_cdskill());
    }
    if (from.has_m_relation()) {
      set_m_relation(from.m_relation());
    }
    if (from.has_m_unlockcondition()) {
      set_m_unlockcondition(from.m_unlockcondition());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_cd()) {
      set_m_cd(from.m_cd());
    }
    if (from.has_m_nolock()) {
      set_m_nolock(from.m_nolock());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_priority()) {
      set_m_priority(from.m_priority());
    }
    if (from.has_m_fighting()) {
      set_m_fighting(from.m_fighting());
    }
    if (from.has_m_fightingparama()) {
      set_m_fightingparama(from.m_fightingparama());
    }
    if (from.has_m_releasetype()) {
      set_m_releasetype(from.m_releasetype());
    }
    if (from.has_m_processtypes()) {
      set_m_processtypes(from.m_processtypes());
    }
    if (from.has_m_flyspeed()) {
      set_m_flyspeed(from.m_flyspeed());
    }
    if (from.has_m_acttime()) {
      set_m_acttime(from.m_acttime());
    }
    if (from.has_m_readytime()) {
      set_m_readytime(from.m_readytime());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_m_readytimeex()) {
      set_m_readytimeex(from.m_readytimeex());
    }
    if (from.has_m_attacktime()) {
      set_m_attacktime(from.m_attacktime());
    }
    if (from.has_m_damagetime()) {
      set_m_damagetime(from.m_damagetime());
    }
    if (from.has_m_damagetimeex()) {
      set_m_damagetimeex(from.m_damagetimeex());
    }
    if (from.has_m_attackdistance()) {
      set_m_attackdistance(from.m_attackdistance());
    }
    if (from.has_m_rangetype()) {
      set_m_rangetype(from.m_rangetype());
    }
    if (from.has_m_rangetypevalue()) {
      set_m_rangetypevalue(from.m_rangetypevalue());
    }
    if (from.has_m_rangetypeex()) {
      set_m_rangetypeex(from.m_rangetypeex());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_m_rangetypevalueex()) {
      set_m_rangetypevalueex(from.m_rangetypevalueex());
    }
    if (from.has_m_warn()) {
      set_m_warn(from.m_warn());
    }
    if (from.has_m_dazetime()) {
      set_m_dazetime(from.m_dazetime());
    }
    if (from.has_m_warntime()) {
      set_m_warntime(from.m_warntime());
    }
    if (from.has_m_infomationid()) {
      set_m_infomationid(from.m_infomationid());
    }
    if (from.has_m_attackmindistance()) {
      set_m_attackmindistance(from.m_attackmindistance());
    }
    if (from.has_m_goalmaxnum()) {
      set_m_goalmaxnum(from.m_goalmaxnum());
    }
    if (from.has_m_goalmaxnummonster()) {
      set_m_goalmaxnummonster(from.m_goalmaxnummonster());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_m_damagetype()) {
      set_m_damagetype(from.m_damagetype());
    }
    if (from.has_m_damagerate()) {
      set_m_damagerate(from.m_damagerate());
    }
    if (from.has_m_awakedamagerate()) {
      set_m_awakedamagerate(from.m_awakedamagerate());
    }
    if (from.has_m_advancetype1damagerate()) {
      set_m_advancetype1damagerate(from.m_advancetype1damagerate());
    }
    if (from.has_m_advancetype2damagerate()) {
      set_m_advancetype2damagerate(from.m_advancetype2damagerate());
    }
    if (from.has_m_advancetype3damagerate()) {
      set_m_advancetype3damagerate(from.m_advancetype3damagerate());
    }
    if (from.has_m_damagevalue()) {
      set_m_damagevalue(from.m_damagevalue());
    }
    if (from.has_m_damageparama()) {
      set_m_damageparama(from.m_damageparama());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_m_addhitrate()) {
      set_m_addhitrate(from.m_addhitrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkill::CopyFrom(const E_SkillSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkill::IsInitialized() const {

  return true;
}

void E_SkillSkill::Swap(E_SkillSkill* other) {
  if (other != this) {
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_skilltype_, other->m_skilltype_);
    std::swap(m_group_, other->m_group_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_displacetime_, other->m_displacetime_);
    std::swap(m_displacesign_, other->m_displacesign_);
    std::swap(m_displacespeed_, other->m_displacespeed_);
    std::swap(m_distimes_, other->m_distimes_);
    std::swap(m_breaktype_, other->m_breaktype_);
    std::swap(m_cdskill_, other->m_cdskill_);
    std::swap(m_relation_, other->m_relation_);
    std::swap(m_unlockcondition_, other->m_unlockcondition_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_cd_, other->m_cd_);
    std::swap(m_nolock_, other->m_nolock_);
    std::swap(m_priority_, other->m_priority_);
    std::swap(m_fighting_, other->m_fighting_);
    std::swap(m_fightingparama_, other->m_fightingparama_);
    std::swap(m_releasetype_, other->m_releasetype_);
    std::swap(m_processtypes_, other->m_processtypes_);
    std::swap(m_flyspeed_, other->m_flyspeed_);
    std::swap(m_acttime_, other->m_acttime_);
    std::swap(m_readytime_, other->m_readytime_);
    std::swap(m_readytimeex_, other->m_readytimeex_);
    std::swap(m_attacktime_, other->m_attacktime_);
    std::swap(m_damagetime_, other->m_damagetime_);
    std::swap(m_damagetimeex_, other->m_damagetimeex_);
    std::swap(m_attackdistance_, other->m_attackdistance_);
    std::swap(m_rangetype_, other->m_rangetype_);
    std::swap(m_rangetypevalue_, other->m_rangetypevalue_);
    std::swap(m_rangetypeex_, other->m_rangetypeex_);
    std::swap(m_rangetypevalueex_, other->m_rangetypevalueex_);
    std::swap(m_warn_, other->m_warn_);
    std::swap(m_dazetime_, other->m_dazetime_);
    std::swap(m_warntime_, other->m_warntime_);
    std::swap(m_infomationid_, other->m_infomationid_);
    std::swap(m_attackmindistance_, other->m_attackmindistance_);
    std::swap(m_goalmaxnum_, other->m_goalmaxnum_);
    std::swap(m_goalmaxnummonster_, other->m_goalmaxnummonster_);
    std::swap(m_damagetype_, other->m_damagetype_);
    std::swap(m_damagerate_, other->m_damagerate_);
    std::swap(m_awakedamagerate_, other->m_awakedamagerate_);
    std::swap(m_advancetype1damagerate_, other->m_advancetype1damagerate_);
    std::swap(m_advancetype2damagerate_, other->m_advancetype2damagerate_);
    std::swap(m_advancetype3damagerate_, other->m_advancetype3damagerate_);
    std::swap(m_damagevalue_, other->m_damagevalue_);
    std::swap(m_damageparama_, other->m_damageparama_);
    std::swap(m_addhitrate_, other->m_addhitrate_);
    m_advancetype1buff_.Swap(&other->m_advancetype1buff_);
    m_advancetype2buff_.Swap(&other->m_advancetype2buff_);
    m_awakebuff_.Swap(&other->m_awakebuff_);
    m_advancetype3buff_.Swap(&other->m_advancetype3buff_);
    m_buff_.Swap(&other->m_buff_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkill_descriptor_;
  metadata.reflection = E_SkillSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SkillSkill::kESkillSkillListFieldNumber;
#endif  // !_MSC_VER

Sheet_SkillSkill::Sheet_SkillSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SkillSkill::InitAsDefaultInstance() {
}

Sheet_SkillSkill::Sheet_SkillSkill(const Sheet_SkillSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SkillSkill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SkillSkill::~Sheet_SkillSkill() {
  SharedDtor();
}

void Sheet_SkillSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SkillSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SkillSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SkillSkill_descriptor_;
}

const Sheet_SkillSkill& Sheet_SkillSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_SkillSkill* Sheet_SkillSkill::default_instance_ = NULL;

Sheet_SkillSkill* Sheet_SkillSkill::New() const {
  return new Sheet_SkillSkill;
}

void Sheet_SkillSkill::Clear() {
  e_skillskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SkillSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SkillSkill E_SkillSkill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SkillSkill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_skillskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SkillSkill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SkillSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SkillSkill E_SkillSkill_List = 1;
  for (int i = 0; i < this->e_skillskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_skillskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SkillSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SkillSkill E_SkillSkill_List = 1;
  for (int i = 0; i < this->e_skillskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_skillskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SkillSkill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SkillSkill E_SkillSkill_List = 1;
  total_size += 1 * this->e_skillskill_list_size();
  for (int i = 0; i < this->e_skillskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_skillskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SkillSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SkillSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SkillSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SkillSkill::MergeFrom(const Sheet_SkillSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_skillskill_list_.MergeFrom(from.e_skillskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SkillSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SkillSkill::CopyFrom(const Sheet_SkillSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SkillSkill::IsInitialized() const {

  return true;
}

void Sheet_SkillSkill::Swap(Sheet_SkillSkill* other) {
  if (other != this) {
    e_skillskill_list_.Swap(&other->e_skillskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SkillSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SkillSkill_descriptor_;
  metadata.reflection = Sheet_SkillSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillBuffup::kMIdFieldNumber;
const int E_SkillBuffup::kMAddstartprobabilityFieldNumber;
const int E_SkillBuffup::kMAttributeidFieldNumber;
const int E_SkillBuffup::kMParamaFieldNumber;
#endif  // !_MSC_VER

E_SkillBuffup::E_SkillBuffup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillBuffup::InitAsDefaultInstance() {
}

E_SkillBuffup::E_SkillBuffup(const E_SkillBuffup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillBuffup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_addstartprobability_ = 0;
  m_attributeid_ = 0;
  m_parama_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillBuffup::~E_SkillBuffup() {
  SharedDtor();
}

void E_SkillBuffup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillBuffup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillBuffup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillBuffup_descriptor_;
}

const E_SkillBuffup& E_SkillBuffup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillBuffup* E_SkillBuffup::default_instance_ = NULL;

E_SkillBuffup* E_SkillBuffup::New() const {
  return new E_SkillBuffup;
}

void E_SkillBuffup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_addstartprobability_ = 0;
    m_attributeid_ = 0;
    m_parama_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillBuffup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_addstartprobability;
        break;
      }

      // optional int32 m_addstartprobability = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addstartprobability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addstartprobability_)));
          set_has_m_addstartprobability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_attributeid;
        break;
      }

      // optional int32 m_attributeid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attributeid_)));
          set_has_m_attributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_parama;
        break;
      }

      // optional int32 m_parama = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_parama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_parama_)));
          set_has_m_parama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillBuffup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_addstartprobability = 2;
  if (has_m_addstartprobability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_addstartprobability(), output);
  }

  // optional int32 m_attributeid = 3;
  if (has_m_attributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_attributeid(), output);
  }

  // optional int32 m_parama = 4;
  if (has_m_parama()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_parama(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillBuffup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_addstartprobability = 2;
  if (has_m_addstartprobability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_addstartprobability(), target);
  }

  // optional int32 m_attributeid = 3;
  if (has_m_attributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_attributeid(), target);
  }

  // optional int32 m_parama = 4;
  if (has_m_parama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_parama(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillBuffup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_addstartprobability = 2;
    if (has_m_addstartprobability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addstartprobability());
    }

    // optional int32 m_attributeid = 3;
    if (has_m_attributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attributeid());
    }

    // optional int32 m_parama = 4;
    if (has_m_parama()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_parama());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillBuffup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillBuffup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillBuffup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillBuffup::MergeFrom(const E_SkillBuffup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_addstartprobability()) {
      set_m_addstartprobability(from.m_addstartprobability());
    }
    if (from.has_m_attributeid()) {
      set_m_attributeid(from.m_attributeid());
    }
    if (from.has_m_parama()) {
      set_m_parama(from.m_parama());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillBuffup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillBuffup::CopyFrom(const E_SkillBuffup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillBuffup::IsInitialized() const {

  return true;
}

void E_SkillBuffup::Swap(E_SkillBuffup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_addstartprobability_, other->m_addstartprobability_);
    std::swap(m_attributeid_, other->m_attributeid_);
    std::swap(m_parama_, other->m_parama_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillBuffup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillBuffup_descriptor_;
  metadata.reflection = E_SkillBuffup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SkillBuffup::kESkillBuffupListFieldNumber;
#endif  // !_MSC_VER

Sheet_SkillBuffup::Sheet_SkillBuffup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SkillBuffup::InitAsDefaultInstance() {
}

Sheet_SkillBuffup::Sheet_SkillBuffup(const Sheet_SkillBuffup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SkillBuffup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SkillBuffup::~Sheet_SkillBuffup() {
  SharedDtor();
}

void Sheet_SkillBuffup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SkillBuffup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SkillBuffup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SkillBuffup_descriptor_;
}

const Sheet_SkillBuffup& Sheet_SkillBuffup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_SkillBuffup* Sheet_SkillBuffup::default_instance_ = NULL;

Sheet_SkillBuffup* Sheet_SkillBuffup::New() const {
  return new Sheet_SkillBuffup;
}

void Sheet_SkillBuffup::Clear() {
  e_skillbuffup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SkillBuffup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SkillBuffup E_SkillBuffup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SkillBuffup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_skillbuffup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SkillBuffup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SkillBuffup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SkillBuffup E_SkillBuffup_List = 1;
  for (int i = 0; i < this->e_skillbuffup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_skillbuffup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SkillBuffup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SkillBuffup E_SkillBuffup_List = 1;
  for (int i = 0; i < this->e_skillbuffup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_skillbuffup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SkillBuffup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SkillBuffup E_SkillBuffup_List = 1;
  total_size += 1 * this->e_skillbuffup_list_size();
  for (int i = 0; i < this->e_skillbuffup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_skillbuffup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SkillBuffup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SkillBuffup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SkillBuffup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SkillBuffup::MergeFrom(const Sheet_SkillBuffup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_skillbuffup_list_.MergeFrom(from.e_skillbuffup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SkillBuffup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SkillBuffup::CopyFrom(const Sheet_SkillBuffup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SkillBuffup::IsInitialized() const {

  return true;
}

void Sheet_SkillBuffup::Swap(Sheet_SkillBuffup* other) {
  if (other != this) {
    e_skillbuffup_list_.Swap(&other->e_skillbuffup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SkillBuffup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SkillBuffup_descriptor_;
  metadata.reflection = Sheet_SkillBuffup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillup::kMIdFieldNumber;
const int E_SkillSkillup::kMGroupFieldNumber;
const int E_SkillSkillup::kMSkilllvFieldNumber;
const int E_SkillSkillup::kMSkillidsFieldNumber;
const int E_SkillSkillup::kMRolelvFieldNumber;
const int E_SkillSkillup::kMCostitemidFieldNumber;
const int E_SkillSkillup::kMCostnumFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillup::E_SkillSkillup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillup::InitAsDefaultInstance() {
}

E_SkillSkillup::E_SkillSkillup(const E_SkillSkillup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_group_ = 0;
  m_skilllv_ = 0;
  m_skillids_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_rolelv_ = 0;
  m_costitemid_ = GOOGLE_LONGLONG(0);
  m_costnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillup::~E_SkillSkillup() {
  SharedDtor();
}

void E_SkillSkillup::SharedDtor() {
  if (m_skillids_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillids_;
  }
  if (this != default_instance_) {
  }
}

void E_SkillSkillup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillup_descriptor_;
}

const E_SkillSkillup& E_SkillSkillup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillup* E_SkillSkillup::default_instance_ = NULL;

E_SkillSkillup* E_SkillSkillup::New() const {
  return new E_SkillSkillup;
}

void E_SkillSkillup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_group_ = 0;
    m_skilllv_ = 0;
    if (has_m_skillids()) {
      if (m_skillids_ != &::google::protobuf::internal::kEmptyString) {
        m_skillids_->clear();
      }
    }
    m_rolelv_ = 0;
    m_costitemid_ = GOOGLE_LONGLONG(0);
    m_costnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_group;
        break;
      }

      // optional int32 m_group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_)));
          set_has_m_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_skilllv;
        break;
      }

      // optional int32 m_skilllv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skilllv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skilllv_)));
          set_has_m_skilllv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_skillids;
        break;
      }

      // optional string m_skillids = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillids().data(), this->m_skillids().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_rolelv;
        break;
      }

      // optional int32 m_rolelv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rolelv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rolelv_)));
          set_has_m_rolelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_costitemid;
        break;
      }

      // optional int64 m_costitemid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costitemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_costitemid_)));
          set_has_m_costitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_costnum;
        break;
      }

      // optional int32 m_costnum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costnum_)));
          set_has_m_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_group = 2;
  if (has_m_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_group(), output);
  }

  // optional int32 m_skilllv = 3;
  if (has_m_skilllv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_skilllv(), output);
  }

  // optional string m_skillids = 4;
  if (has_m_skillids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillids().data(), this->m_skillids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_skillids(), output);
  }

  // optional int32 m_rolelv = 5;
  if (has_m_rolelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_rolelv(), output);
  }

  // optional int64 m_costitemid = 6;
  if (has_m_costitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->m_costitemid(), output);
  }

  // optional int32 m_costnum = 7;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_costnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_group = 2;
  if (has_m_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_group(), target);
  }

  // optional int32 m_skilllv = 3;
  if (has_m_skilllv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_skilllv(), target);
  }

  // optional string m_skillids = 4;
  if (has_m_skillids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillids().data(), this->m_skillids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_skillids(), target);
  }

  // optional int32 m_rolelv = 5;
  if (has_m_rolelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_rolelv(), target);
  }

  // optional int64 m_costitemid = 6;
  if (has_m_costitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->m_costitemid(), target);
  }

  // optional int32 m_costnum = 7;
  if (has_m_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_costnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_group = 2;
    if (has_m_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group());
    }

    // optional int32 m_skilllv = 3;
    if (has_m_skilllv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skilllv());
    }

    // optional string m_skillids = 4;
    if (has_m_skillids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillids());
    }

    // optional int32 m_rolelv = 5;
    if (has_m_rolelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rolelv());
    }

    // optional int64 m_costitemid = 6;
    if (has_m_costitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_costitemid());
    }

    // optional int32 m_costnum = 7;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillup::MergeFrom(const E_SkillSkillup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_group()) {
      set_m_group(from.m_group());
    }
    if (from.has_m_skilllv()) {
      set_m_skilllv(from.m_skilllv());
    }
    if (from.has_m_skillids()) {
      set_m_skillids(from.m_skillids());
    }
    if (from.has_m_rolelv()) {
      set_m_rolelv(from.m_rolelv());
    }
    if (from.has_m_costitemid()) {
      set_m_costitemid(from.m_costitemid());
    }
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillup::CopyFrom(const E_SkillSkillup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillup::IsInitialized() const {

  return true;
}

void E_SkillSkillup::Swap(E_SkillSkillup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_group_, other->m_group_);
    std::swap(m_skilllv_, other->m_skilllv_);
    std::swap(m_skillids_, other->m_skillids_);
    std::swap(m_rolelv_, other->m_rolelv_);
    std::swap(m_costitemid_, other->m_costitemid_);
    std::swap(m_costnum_, other->m_costnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillup_descriptor_;
  metadata.reflection = E_SkillSkillup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SkillSkillup::kESkillSkillupListFieldNumber;
#endif  // !_MSC_VER

Sheet_SkillSkillup::Sheet_SkillSkillup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SkillSkillup::InitAsDefaultInstance() {
}

Sheet_SkillSkillup::Sheet_SkillSkillup(const Sheet_SkillSkillup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SkillSkillup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SkillSkillup::~Sheet_SkillSkillup() {
  SharedDtor();
}

void Sheet_SkillSkillup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SkillSkillup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SkillSkillup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SkillSkillup_descriptor_;
}

const Sheet_SkillSkillup& Sheet_SkillSkillup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_SkillSkillup* Sheet_SkillSkillup::default_instance_ = NULL;

Sheet_SkillSkillup* Sheet_SkillSkillup::New() const {
  return new Sheet_SkillSkillup;
}

void Sheet_SkillSkillup::Clear() {
  e_skillskillup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SkillSkillup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SkillSkillup E_SkillSkillup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SkillSkillup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_skillskillup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SkillSkillup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SkillSkillup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SkillSkillup E_SkillSkillup_List = 1;
  for (int i = 0; i < this->e_skillskillup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_skillskillup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SkillSkillup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SkillSkillup E_SkillSkillup_List = 1;
  for (int i = 0; i < this->e_skillskillup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_skillskillup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SkillSkillup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SkillSkillup E_SkillSkillup_List = 1;
  total_size += 1 * this->e_skillskillup_list_size();
  for (int i = 0; i < this->e_skillskillup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_skillskillup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SkillSkillup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SkillSkillup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SkillSkillup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SkillSkillup::MergeFrom(const Sheet_SkillSkillup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_skillskillup_list_.MergeFrom(from.e_skillskillup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SkillSkillup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SkillSkillup::CopyFrom(const Sheet_SkillSkillup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SkillSkillup::IsInitialized() const {

  return true;
}

void Sheet_SkillSkillup::Swap(Sheet_SkillSkillup* other) {
  if (other != this) {
    e_skillskillup_list_.Swap(&other->e_skillskillup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SkillSkillup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SkillSkillup_descriptor_;
  metadata.reflection = Sheet_SkillSkillup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkillawake::kMSkillidFieldNumber;
const int E_SkillSkillawake::kMCostitemidFieldNumber;
const int E_SkillSkillawake::kMCostnumFieldNumber;
#endif  // !_MSC_VER

E_SkillSkillawake::E_SkillSkillawake()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkillawake::InitAsDefaultInstance() {
}

E_SkillSkillawake::E_SkillSkillawake(const E_SkillSkillawake& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkillawake::SharedCtor() {
  _cached_size_ = 0;
  m_skillid_ = 0;
  m_costitemid_ = 0;
  m_costnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkillawake::~E_SkillSkillawake() {
  SharedDtor();
}

void E_SkillSkillawake::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_SkillSkillawake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkillawake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkillawake_descriptor_;
}

const E_SkillSkillawake& E_SkillSkillawake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkillawake* E_SkillSkillawake::default_instance_ = NULL;

E_SkillSkillawake* E_SkillSkillawake::New() const {
  return new E_SkillSkillawake;
}

void E_SkillSkillawake::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_skillid_ = 0;
    m_costitemid_ = 0;
    m_costnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkillawake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_skillid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_costitemid;
        break;
      }

      // optional int32 m_costitemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costitemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costitemid_)));
          set_has_m_costitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_costnum;
        break;
      }

      // optional int32 m_costnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costnum_)));
          set_has_m_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkillawake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_skillid = 1;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_skillid(), output);
  }

  // optional int32 m_costitemid = 2;
  if (has_m_costitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_costitemid(), output);
  }

  // optional int32 m_costnum = 3;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_costnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkillawake::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_skillid = 1;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_skillid(), target);
  }

  // optional int32 m_costitemid = 2;
  if (has_m_costitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_costitemid(), target);
  }

  // optional int32 m_costnum = 3;
  if (has_m_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_costnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkillawake::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_skillid = 1;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

    // optional int32 m_costitemid = 2;
    if (has_m_costitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costitemid());
    }

    // optional int32 m_costnum = 3;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkillawake::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkillawake* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkillawake*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkillawake::MergeFrom(const E_SkillSkillawake& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_costitemid()) {
      set_m_costitemid(from.m_costitemid());
    }
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkillawake::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkillawake::CopyFrom(const E_SkillSkillawake& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkillawake::IsInitialized() const {

  return true;
}

void E_SkillSkillawake::Swap(E_SkillSkillawake* other) {
  if (other != this) {
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_costitemid_, other->m_costitemid_);
    std::swap(m_costnum_, other->m_costnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkillawake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkillawake_descriptor_;
  metadata.reflection = E_SkillSkillawake_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SkillSkillawake::kESkillSkillawakeListFieldNumber;
#endif  // !_MSC_VER

Sheet_SkillSkillawake::Sheet_SkillSkillawake()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SkillSkillawake::InitAsDefaultInstance() {
}

Sheet_SkillSkillawake::Sheet_SkillSkillawake(const Sheet_SkillSkillawake& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SkillSkillawake::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SkillSkillawake::~Sheet_SkillSkillawake() {
  SharedDtor();
}

void Sheet_SkillSkillawake::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SkillSkillawake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SkillSkillawake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SkillSkillawake_descriptor_;
}

const Sheet_SkillSkillawake& Sheet_SkillSkillawake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_SkillSkillawake* Sheet_SkillSkillawake::default_instance_ = NULL;

Sheet_SkillSkillawake* Sheet_SkillSkillawake::New() const {
  return new Sheet_SkillSkillawake;
}

void Sheet_SkillSkillawake::Clear() {
  e_skillskillawake_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SkillSkillawake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SkillSkillawake E_SkillSkillawake_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SkillSkillawake_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_skillskillawake_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SkillSkillawake_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SkillSkillawake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SkillSkillawake E_SkillSkillawake_List = 1;
  for (int i = 0; i < this->e_skillskillawake_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_skillskillawake_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SkillSkillawake::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SkillSkillawake E_SkillSkillawake_List = 1;
  for (int i = 0; i < this->e_skillskillawake_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_skillskillawake_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SkillSkillawake::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SkillSkillawake E_SkillSkillawake_List = 1;
  total_size += 1 * this->e_skillskillawake_list_size();
  for (int i = 0; i < this->e_skillskillawake_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_skillskillawake_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SkillSkillawake::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SkillSkillawake* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SkillSkillawake*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SkillSkillawake::MergeFrom(const Sheet_SkillSkillawake& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_skillskillawake_list_.MergeFrom(from.e_skillskillawake_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SkillSkillawake::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SkillSkillawake::CopyFrom(const Sheet_SkillSkillawake& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SkillSkillawake::IsInitialized() const {

  return true;
}

void Sheet_SkillSkillawake::Swap(Sheet_SkillSkillawake* other) {
  if (other != this) {
    e_skillskillawake_list_.Swap(&other->e_skillskillawake_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SkillSkillawake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SkillSkillawake_descriptor_;
  metadata.reflection = Sheet_SkillSkillawake_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_SkillSkilladvance::kMIdFieldNumber;
const int E_SkillSkilladvance::kMProfessionFieldNumber;
const int E_SkillSkilladvance::kMTypeFieldNumber;
const int E_SkillSkilladvance::kMAdvancelvFieldNumber;
const int E_SkillSkilladvance::kMAdvanceconditionFieldNumber;
const int E_SkillSkilladvance::kMSkillidFieldNumber;
#endif  // !_MSC_VER

E_SkillSkilladvance::E_SkillSkilladvance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_SkillSkilladvance::InitAsDefaultInstance() {
}

E_SkillSkilladvance::E_SkillSkilladvance(const E_SkillSkilladvance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_SkillSkilladvance::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_profession_ = 0;
  m_type_ = 0;
  m_advancelv_ = 0;
  m_advancecondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_SkillSkilladvance::~E_SkillSkilladvance() {
  SharedDtor();
}

void E_SkillSkilladvance::SharedDtor() {
  if (m_advancecondition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_advancecondition_;
  }
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (this != default_instance_) {
  }
}

void E_SkillSkilladvance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_SkillSkilladvance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SkillSkilladvance_descriptor_;
}

const E_SkillSkilladvance& E_SkillSkilladvance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

E_SkillSkilladvance* E_SkillSkilladvance::default_instance_ = NULL;

E_SkillSkilladvance* E_SkillSkilladvance::New() const {
  return new E_SkillSkilladvance;
}

void E_SkillSkilladvance::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_profession_ = 0;
    m_type_ = 0;
    m_advancelv_ = 0;
    if (has_m_advancecondition()) {
      if (m_advancecondition_ != &::google::protobuf::internal::kEmptyString) {
        m_advancecondition_->clear();
      }
    }
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_SkillSkilladvance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_profession;
        break;
      }

      // optional int32 m_profession = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_profession:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_profession_)));
          set_has_m_profession();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_advancelv;
        break;
      }

      // optional int32 m_advancelv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancelv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancelv_)));
          set_has_m_advancelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_advancecondition;
        break;
      }

      // optional string m_advancecondition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_advancecondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_advancecondition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_advancecondition().data(), this->m_advancecondition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_SkillSkilladvance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_profession = 2;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_profession(), output);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_type(), output);
  }

  // optional int32 m_advancelv = 4;
  if (has_m_advancelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_advancelv(), output);
  }

  // optional string m_advancecondition = 5;
  if (has_m_advancecondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_advancecondition().data(), this->m_advancecondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_advancecondition(), output);
  }

  // optional string m_skillid = 6;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_SkillSkilladvance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_profession = 2;
  if (has_m_profession()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_profession(), target);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_type(), target);
  }

  // optional int32 m_advancelv = 4;
  if (has_m_advancelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_advancelv(), target);
  }

  // optional string m_advancecondition = 5;
  if (has_m_advancecondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_advancecondition().data(), this->m_advancecondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_advancecondition(), target);
  }

  // optional string m_skillid = 6;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_SkillSkilladvance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_profession = 2;
    if (has_m_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_profession());
    }

    // optional int32 m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_advancelv = 4;
    if (has_m_advancelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancelv());
    }

    // optional string m_advancecondition = 5;
    if (has_m_advancecondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_advancecondition());
    }

    // optional string m_skillid = 6;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_SkillSkilladvance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_SkillSkilladvance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_SkillSkilladvance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_SkillSkilladvance::MergeFrom(const E_SkillSkilladvance& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_profession()) {
      set_m_profession(from.m_profession());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_advancelv()) {
      set_m_advancelv(from.m_advancelv());
    }
    if (from.has_m_advancecondition()) {
      set_m_advancecondition(from.m_advancecondition());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_SkillSkilladvance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_SkillSkilladvance::CopyFrom(const E_SkillSkilladvance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_SkillSkilladvance::IsInitialized() const {

  return true;
}

void E_SkillSkilladvance::Swap(E_SkillSkilladvance* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_profession_, other->m_profession_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_advancelv_, other->m_advancelv_);
    std::swap(m_advancecondition_, other->m_advancecondition_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_SkillSkilladvance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_SkillSkilladvance_descriptor_;
  metadata.reflection = E_SkillSkilladvance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_SkillSkilladvance::kESkillSkilladvanceListFieldNumber;
#endif  // !_MSC_VER

Sheet_SkillSkilladvance::Sheet_SkillSkilladvance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_SkillSkilladvance::InitAsDefaultInstance() {
}

Sheet_SkillSkilladvance::Sheet_SkillSkilladvance(const Sheet_SkillSkilladvance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_SkillSkilladvance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_SkillSkilladvance::~Sheet_SkillSkilladvance() {
  SharedDtor();
}

void Sheet_SkillSkilladvance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_SkillSkilladvance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_SkillSkilladvance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_SkillSkilladvance_descriptor_;
}

const Sheet_SkillSkilladvance& Sheet_SkillSkilladvance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_skill_2eproto();
  return *default_instance_;
}

Sheet_SkillSkilladvance* Sheet_SkillSkilladvance::default_instance_ = NULL;

Sheet_SkillSkilladvance* Sheet_SkillSkilladvance::New() const {
  return new Sheet_SkillSkilladvance;
}

void Sheet_SkillSkilladvance::Clear() {
  e_skillskilladvance_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_SkillSkilladvance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_SkillSkilladvance E_SkillSkilladvance_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_SkillSkilladvance_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_skillskilladvance_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_SkillSkilladvance_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_SkillSkilladvance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_SkillSkilladvance E_SkillSkilladvance_List = 1;
  for (int i = 0; i < this->e_skillskilladvance_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_skillskilladvance_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_SkillSkilladvance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_SkillSkilladvance E_SkillSkilladvance_List = 1;
  for (int i = 0; i < this->e_skillskilladvance_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_skillskilladvance_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_SkillSkilladvance::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_SkillSkilladvance E_SkillSkilladvance_List = 1;
  total_size += 1 * this->e_skillskilladvance_list_size();
  for (int i = 0; i < this->e_skillskilladvance_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_skillskilladvance_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_SkillSkilladvance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_SkillSkilladvance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_SkillSkilladvance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_SkillSkilladvance::MergeFrom(const Sheet_SkillSkilladvance& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_skillskilladvance_list_.MergeFrom(from.e_skillskilladvance_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_SkillSkilladvance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_SkillSkilladvance::CopyFrom(const Sheet_SkillSkilladvance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_SkillSkilladvance::IsInitialized() const {

  return true;
}

void Sheet_SkillSkilladvance::Swap(Sheet_SkillSkilladvance* other) {
  if (other != this) {
    e_skillskilladvance_list_.Swap(&other->e_skillskilladvance_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_SkillSkilladvance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_SkillSkilladvance_descriptor_;
  metadata.reflection = Sheet_SkillSkilladvance_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
