// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonClass.proto

#ifndef PROTOBUF_CommonClass_2eproto__INCLUDED
#define PROTOBUF_CommonClass_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CommonClass_2eproto();
void protobuf_AssignDesc_CommonClass_2eproto();
void protobuf_ShutdownFile_CommonClass_2eproto();

class GridItemBase;
class EquipExt;
class ItemGridCSData;

enum enBagPageType {
  EN_BPT_EQUIP = 1,
  EN_BPT_STORAGE = 2,
  EN_BPT_MATRIAL = 3,
  EN_BPT_PROP = 4,
  EN_BPT_SKIN = 5,
  EN_BPT_TITLE = 6,
  EN_BPT_GEM = 7,
  EN_BPT_PARTNER_EQUIP = 8,
  EN_BPT_PARTNER_EQUIP_STONE = 9,
  EN_BPT_PARTNER_TOKEN = 10,
  EN_BPT_BUFF_EQUIP = 11
};
bool enBagPageType_IsValid(int value);
const enBagPageType enBagPageType_MIN = EN_BPT_EQUIP;
const enBagPageType enBagPageType_MAX = EN_BPT_BUFF_EQUIP;
const int enBagPageType_ARRAYSIZE = enBagPageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enBagPageType_descriptor();
inline const ::std::string& enBagPageType_Name(enBagPageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enBagPageType_descriptor(), value);
}
inline bool enBagPageType_Parse(
    const ::std::string& name, enBagPageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enBagPageType>(
    enBagPageType_descriptor(), name, value);
}
// ===================================================================

class GridItemBase : public ::google::protobuf::Message {
 public:
  GridItemBase();
  virtual ~GridItemBase();

  GridItemBase(const GridItemBase& from);

  inline GridItemBase& operator=(const GridItemBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GridItemBase& default_instance();

  void Swap(GridItemBase* other);

  // implements Message ----------------------------------------------

  GridItemBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GridItemBase& from);
  void MergeFrom(const GridItemBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 index() const;
  inline void set_index(::google::protobuf::uint64 value);

  // optional uint64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint64 item_num() const;
  inline void set_item_num(::google::protobuf::uint64 value);

  // optional bool bind = 4;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 4;
  inline bool bind() const;
  inline void set_bind(bool value);

  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 expireTime = 7;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // optional uint32 type = 8;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GridItemBase)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 item_num_;
  bool bind_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CommonClass_2eproto();
  friend void protobuf_AssignDesc_CommonClass_2eproto();
  friend void protobuf_ShutdownFile_CommonClass_2eproto();

  void InitAsDefaultInstance();
  static GridItemBase* default_instance_;
};
// -------------------------------------------------------------------

class EquipExt : public ::google::protobuf::Message {
 public:
  EquipExt();
  virtual ~EquipExt();

  EquipExt(const EquipExt& from);

  inline EquipExt& operator=(const EquipExt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipExt& default_instance();

  void Swap(EquipExt* other);

  // implements Message ----------------------------------------------

  EquipExt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipExt& from);
  void MergeFrom(const EquipExt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 base_attr = 1;
  inline int base_attr_size() const;
  inline void clear_base_attr();
  static const int kBaseAttrFieldNumber = 1;
  inline ::google::protobuf::int32 base_attr(int index) const;
  inline void set_base_attr(int index, ::google::protobuf::int32 value);
  inline void add_base_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      base_attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_base_attr();

  // repeated int32 star_attr = 2;
  inline int star_attr_size() const;
  inline void clear_star_attr();
  static const int kStarAttrFieldNumber = 2;
  inline ::google::protobuf::int32 star_attr(int index) const;
  inline void set_star_attr(int index, ::google::protobuf::int32 value);
  inline void add_star_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      star_attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_star_attr();

  // repeated int32 blue_attr = 3;
  inline int blue_attr_size() const;
  inline void clear_blue_attr();
  static const int kBlueAttrFieldNumber = 3;
  inline ::google::protobuf::int32 blue_attr(int index) const;
  inline void set_blue_attr(int index, ::google::protobuf::int32 value);
  inline void add_blue_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      blue_attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_blue_attr();

  // repeated int32 god_attr = 4;
  inline int god_attr_size() const;
  inline void clear_god_attr();
  static const int kGodAttrFieldNumber = 4;
  inline ::google::protobuf::int32 god_attr(int index) const;
  inline void set_god_attr(int index, ::google::protobuf::int32 value);
  inline void add_god_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      god_attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_god_attr();

  // repeated int32 special_attr = 5;
  inline int special_attr_size() const;
  inline void clear_special_attr();
  static const int kSpecialAttrFieldNumber = 5;
  inline ::google::protobuf::int32 special_attr(int index) const;
  inline void set_special_attr(int index, ::google::protobuf::int32 value);
  inline void add_special_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      special_attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_special_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.EquipExt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > base_attr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > star_attr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > blue_attr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > god_attr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > special_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CommonClass_2eproto();
  friend void protobuf_AssignDesc_CommonClass_2eproto();
  friend void protobuf_ShutdownFile_CommonClass_2eproto();

  void InitAsDefaultInstance();
  static EquipExt* default_instance_;
};
// -------------------------------------------------------------------

class ItemGridCSData : public ::google::protobuf::Message {
 public:
  ItemGridCSData();
  virtual ~ItemGridCSData();

  ItemGridCSData(const ItemGridCSData& from);

  inline ItemGridCSData& operator=(const ItemGridCSData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemGridCSData& default_instance();

  void Swap(ItemGridCSData* other);

  // implements Message ----------------------------------------------

  ItemGridCSData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemGridCSData& from);
  void MergeFrom(const ItemGridCSData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.GridItemBase base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::proto_ff::GridItemBase& base() const;
  inline ::proto_ff::GridItemBase* mutable_base();
  inline ::proto_ff::GridItemBase* release_base();
  inline void set_allocated_base(::proto_ff::GridItemBase* base);

  // optional .proto_ff.EquipExt equip_data = 2;
  inline bool has_equip_data() const;
  inline void clear_equip_data();
  static const int kEquipDataFieldNumber = 2;
  inline const ::proto_ff::EquipExt& equip_data() const;
  inline ::proto_ff::EquipExt* mutable_equip_data();
  inline ::proto_ff::EquipExt* release_equip_data();
  inline void set_allocated_equip_data(::proto_ff::EquipExt* equip_data);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemGridCSData)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_equip_data();
  inline void clear_has_equip_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GridItemBase* base_;
  ::proto_ff::EquipExt* equip_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommonClass_2eproto();
  friend void protobuf_AssignDesc_CommonClass_2eproto();
  friend void protobuf_ShutdownFile_CommonClass_2eproto();

  void InitAsDefaultInstance();
  static ItemGridCSData* default_instance_;
};
// ===================================================================


// ===================================================================

// GridItemBase

// optional uint64 index = 1;
inline bool GridItemBase::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GridItemBase::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GridItemBase::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GridItemBase::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 GridItemBase::index() const {
  return index_;
}
inline void GridItemBase::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
}

// optional uint64 item_id = 2;
inline bool GridItemBase::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GridItemBase::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GridItemBase::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GridItemBase::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 GridItemBase::item_id() const {
  return item_id_;
}
inline void GridItemBase::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint64 item_num = 3;
inline bool GridItemBase::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GridItemBase::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GridItemBase::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GridItemBase::clear_item_num() {
  item_num_ = GOOGLE_ULONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::uint64 GridItemBase::item_num() const {
  return item_num_;
}
inline void GridItemBase::set_item_num(::google::protobuf::uint64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional bool bind = 4;
inline bool GridItemBase::has_bind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GridItemBase::set_has_bind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GridItemBase::clear_has_bind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GridItemBase::clear_bind() {
  bind_ = false;
  clear_has_bind();
}
inline bool GridItemBase::bind() const {
  return bind_;
}
inline void GridItemBase::set_bind(bool value) {
  set_has_bind();
  bind_ = value;
}

// optional uint32 level = 6;
inline bool GridItemBase::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GridItemBase::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GridItemBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GridItemBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GridItemBase::level() const {
  return level_;
}
inline void GridItemBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 expireTime = 7;
inline bool GridItemBase::has_expiretime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GridItemBase::set_has_expiretime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GridItemBase::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GridItemBase::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 GridItemBase::expiretime() const {
  return expiretime_;
}
inline void GridItemBase::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// optional uint32 type = 8;
inline bool GridItemBase::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GridItemBase::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GridItemBase::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GridItemBase::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GridItemBase::type() const {
  return type_;
}
inline void GridItemBase::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// EquipExt

// repeated int32 base_attr = 1;
inline int EquipExt::base_attr_size() const {
  return base_attr_.size();
}
inline void EquipExt::clear_base_attr() {
  base_attr_.Clear();
}
inline ::google::protobuf::int32 EquipExt::base_attr(int index) const {
  return base_attr_.Get(index);
}
inline void EquipExt::set_base_attr(int index, ::google::protobuf::int32 value) {
  base_attr_.Set(index, value);
}
inline void EquipExt::add_base_attr(::google::protobuf::int32 value) {
  base_attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipExt::base_attr() const {
  return base_attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipExt::mutable_base_attr() {
  return &base_attr_;
}

// repeated int32 star_attr = 2;
inline int EquipExt::star_attr_size() const {
  return star_attr_.size();
}
inline void EquipExt::clear_star_attr() {
  star_attr_.Clear();
}
inline ::google::protobuf::int32 EquipExt::star_attr(int index) const {
  return star_attr_.Get(index);
}
inline void EquipExt::set_star_attr(int index, ::google::protobuf::int32 value) {
  star_attr_.Set(index, value);
}
inline void EquipExt::add_star_attr(::google::protobuf::int32 value) {
  star_attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipExt::star_attr() const {
  return star_attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipExt::mutable_star_attr() {
  return &star_attr_;
}

// repeated int32 blue_attr = 3;
inline int EquipExt::blue_attr_size() const {
  return blue_attr_.size();
}
inline void EquipExt::clear_blue_attr() {
  blue_attr_.Clear();
}
inline ::google::protobuf::int32 EquipExt::blue_attr(int index) const {
  return blue_attr_.Get(index);
}
inline void EquipExt::set_blue_attr(int index, ::google::protobuf::int32 value) {
  blue_attr_.Set(index, value);
}
inline void EquipExt::add_blue_attr(::google::protobuf::int32 value) {
  blue_attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipExt::blue_attr() const {
  return blue_attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipExt::mutable_blue_attr() {
  return &blue_attr_;
}

// repeated int32 god_attr = 4;
inline int EquipExt::god_attr_size() const {
  return god_attr_.size();
}
inline void EquipExt::clear_god_attr() {
  god_attr_.Clear();
}
inline ::google::protobuf::int32 EquipExt::god_attr(int index) const {
  return god_attr_.Get(index);
}
inline void EquipExt::set_god_attr(int index, ::google::protobuf::int32 value) {
  god_attr_.Set(index, value);
}
inline void EquipExt::add_god_attr(::google::protobuf::int32 value) {
  god_attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipExt::god_attr() const {
  return god_attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipExt::mutable_god_attr() {
  return &god_attr_;
}

// repeated int32 special_attr = 5;
inline int EquipExt::special_attr_size() const {
  return special_attr_.size();
}
inline void EquipExt::clear_special_attr() {
  special_attr_.Clear();
}
inline ::google::protobuf::int32 EquipExt::special_attr(int index) const {
  return special_attr_.Get(index);
}
inline void EquipExt::set_special_attr(int index, ::google::protobuf::int32 value) {
  special_attr_.Set(index, value);
}
inline void EquipExt::add_special_attr(::google::protobuf::int32 value) {
  special_attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipExt::special_attr() const {
  return special_attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipExt::mutable_special_attr() {
  return &special_attr_;
}

// -------------------------------------------------------------------

// ItemGridCSData

// required .proto_ff.GridItemBase base = 1;
inline bool ItemGridCSData::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemGridCSData::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemGridCSData::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemGridCSData::clear_base() {
  if (base_ != NULL) base_->::proto_ff::GridItemBase::Clear();
  clear_has_base();
}
inline const ::proto_ff::GridItemBase& ItemGridCSData::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::proto_ff::GridItemBase* ItemGridCSData::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::proto_ff::GridItemBase;
  return base_;
}
inline ::proto_ff::GridItemBase* ItemGridCSData::release_base() {
  clear_has_base();
  ::proto_ff::GridItemBase* temp = base_;
  base_ = NULL;
  return temp;
}
inline void ItemGridCSData::set_allocated_base(::proto_ff::GridItemBase* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
}

// optional .proto_ff.EquipExt equip_data = 2;
inline bool ItemGridCSData::has_equip_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemGridCSData::set_has_equip_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemGridCSData::clear_has_equip_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemGridCSData::clear_equip_data() {
  if (equip_data_ != NULL) equip_data_->::proto_ff::EquipExt::Clear();
  clear_has_equip_data();
}
inline const ::proto_ff::EquipExt& ItemGridCSData::equip_data() const {
  return equip_data_ != NULL ? *equip_data_ : *default_instance_->equip_data_;
}
inline ::proto_ff::EquipExt* ItemGridCSData::mutable_equip_data() {
  set_has_equip_data();
  if (equip_data_ == NULL) equip_data_ = new ::proto_ff::EquipExt;
  return equip_data_;
}
inline ::proto_ff::EquipExt* ItemGridCSData::release_equip_data() {
  clear_has_equip_data();
  ::proto_ff::EquipExt* temp = equip_data_;
  equip_data_ = NULL;
  return temp;
}
inline void ItemGridCSData::set_allocated_equip_data(::proto_ff::EquipExt* equip_data) {
  delete equip_data_;
  equip_data_ = equip_data;
  if (equip_data) {
    set_has_equip_data();
  } else {
    clear_has_equip_data();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::enBagPageType>() {
  return ::proto_ff::enBagPageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonClass_2eproto__INCLUDED
