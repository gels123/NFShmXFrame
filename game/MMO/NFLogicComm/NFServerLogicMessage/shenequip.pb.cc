// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shenequip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "shenequip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_ShenequipEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipAttAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipAttAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipAttStarDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipAttStarDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipAtt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipAtt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipAtt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipAtt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipLvup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipLvup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipLvup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipLvup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipClear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipClear_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipClear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipClear_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipAwakenAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipAwakenAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipAwaken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipAwaken_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipAwaken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipAwaken_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipStarupMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipStarupMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipStarup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipStarup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipStarup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipStarup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipPreposeRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipPreposeRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_ShenequipPrepose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_ShenequipPrepose_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_ShenequipPrepose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_ShenequipPrepose_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_shenequip_2eproto() {
  protobuf_AddDesc_shenequip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "shenequip.proto");
  GOOGLE_CHECK(file != NULL);
  E_ShenequipEquip_descriptor_ = file->message_type(0);
  static const int E_ShenequipEquip_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_subtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_attributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_decompose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_iscanbind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_istradebind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_exclusiveid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_secretskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_crypticskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, m_passiveskill_),
  };
  E_ShenequipEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipEquip_descriptor_,
      E_ShenequipEquip::default_instance_,
      E_ShenequipEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipEquip));
  Sheet_ShenequipEquip_descriptor_ = file->message_type(1);
  static const int Sheet_ShenequipEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipEquip, e_shenequipequip_list_),
  };
  Sheet_ShenequipEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipEquip_descriptor_,
      Sheet_ShenequipEquip::default_instance_,
      Sheet_ShenequipEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipEquip));
  E_ShenequipAttAttributeDesc_descriptor_ = file->message_type(2);
  static const int E_ShenequipAttAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttAttributeDesc, m_value_),
  };
  E_ShenequipAttAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipAttAttributeDesc_descriptor_,
      E_ShenequipAttAttributeDesc::default_instance_,
      E_ShenequipAttAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipAttAttributeDesc));
  E_ShenequipAttStarDesc_descriptor_ = file->message_type(3);
  static const int E_ShenequipAttStarDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttStarDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttStarDesc, m_value_),
  };
  E_ShenequipAttStarDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipAttStarDesc_descriptor_,
      E_ShenequipAttStarDesc::default_instance_,
      E_ShenequipAttStarDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttStarDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAttStarDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipAttStarDesc));
  E_ShenequipAtt_descriptor_ = file->message_type(4);
  static const int E_ShenequipAtt_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAtt, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAtt, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAtt, m_star_),
  };
  E_ShenequipAtt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipAtt_descriptor_,
      E_ShenequipAtt::default_instance_,
      E_ShenequipAtt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAtt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAtt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipAtt));
  Sheet_ShenequipAtt_descriptor_ = file->message_type(5);
  static const int Sheet_ShenequipAtt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipAtt, e_shenequipatt_list_),
  };
  Sheet_ShenequipAtt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipAtt_descriptor_,
      Sheet_ShenequipAtt::default_instance_,
      Sheet_ShenequipAtt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipAtt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipAtt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipAtt));
  E_ShenequipLvup_descriptor_ = file->message_type(6);
  static const int E_ShenequipLvup_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_advanceitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_advancenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_attributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, m_stepid_),
  };
  E_ShenequipLvup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipLvup_descriptor_,
      E_ShenequipLvup::default_instance_,
      E_ShenequipLvup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipLvup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipLvup));
  Sheet_ShenequipLvup_descriptor_ = file->message_type(7);
  static const int Sheet_ShenequipLvup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipLvup, e_shenequiplvup_list_),
  };
  Sheet_ShenequipLvup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipLvup_descriptor_,
      Sheet_ShenequipLvup::default_instance_,
      Sheet_ShenequipLvup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipLvup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipLvup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipLvup));
  E_ShenequipClear_descriptor_ = file->message_type(8);
  static const int E_ShenequipClear_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_breakitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_breaknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_breakprogress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_randomcounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_minus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_nextid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, m_percent_),
  };
  E_ShenequipClear_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipClear_descriptor_,
      E_ShenequipClear::default_instance_,
      E_ShenequipClear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipClear, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipClear));
  Sheet_ShenequipClear_descriptor_ = file->message_type(9);
  static const int Sheet_ShenequipClear_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipClear, e_shenequipclear_list_),
  };
  Sheet_ShenequipClear_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipClear_descriptor_,
      Sheet_ShenequipClear::default_instance_,
      Sheet_ShenequipClear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipClear, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipClear, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipClear));
  E_ShenequipAwakenAttributeDesc_descriptor_ = file->message_type(10);
  static const int E_ShenequipAwakenAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwakenAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwakenAttributeDesc, m_value_),
  };
  E_ShenequipAwakenAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipAwakenAttributeDesc_descriptor_,
      E_ShenequipAwakenAttributeDesc::default_instance_,
      E_ShenequipAwakenAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwakenAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwakenAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipAwakenAttributeDesc));
  E_ShenequipAwaken_descriptor_ = file->message_type(11);
  static const int E_ShenequipAwaken_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_awakeskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, m_attribute_),
  };
  E_ShenequipAwaken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipAwaken_descriptor_,
      E_ShenequipAwaken::default_instance_,
      E_ShenequipAwaken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipAwaken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipAwaken));
  Sheet_ShenequipAwaken_descriptor_ = file->message_type(12);
  static const int Sheet_ShenequipAwaken_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipAwaken, e_shenequipawaken_list_),
  };
  Sheet_ShenequipAwaken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipAwaken_descriptor_,
      Sheet_ShenequipAwaken::default_instance_,
      Sheet_ShenequipAwaken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipAwaken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipAwaken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipAwaken));
  E_ShenequipStarupMaterialDesc_descriptor_ = file->message_type(13);
  static const int E_ShenequipStarupMaterialDesc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, m_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, m_star_),
  };
  E_ShenequipStarupMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipStarupMaterialDesc_descriptor_,
      E_ShenequipStarupMaterialDesc::default_instance_,
      E_ShenequipStarupMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarupMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipStarupMaterialDesc));
  E_ShenequipStarup_descriptor_ = file->message_type(14);
  static const int E_ShenequipStarup_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_stars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_nextid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_lastid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, m_material_),
  };
  E_ShenequipStarup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipStarup_descriptor_,
      E_ShenequipStarup::default_instance_,
      E_ShenequipStarup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipStarup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipStarup));
  Sheet_ShenequipStarup_descriptor_ = file->message_type(15);
  static const int Sheet_ShenequipStarup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipStarup, e_shenequipstarup_list_),
  };
  Sheet_ShenequipStarup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipStarup_descriptor_,
      Sheet_ShenequipStarup::default_instance_,
      Sheet_ShenequipStarup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipStarup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipStarup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipStarup));
  E_ShenequipPreposeRewardDesc_descriptor_ = file->message_type(16);
  static const int E_ShenequipPreposeRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPreposeRewardDesc, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPreposeRewardDesc, m_num_),
  };
  E_ShenequipPreposeRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipPreposeRewardDesc_descriptor_,
      E_ShenequipPreposeRewardDesc::default_instance_,
      E_ShenequipPreposeRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPreposeRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPreposeRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipPreposeRewardDesc));
  E_ShenequipPrepose_descriptor_ = file->message_type(17);
  static const int E_ShenequipPrepose_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPrepose, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPrepose, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPrepose, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPrepose, m_reward_),
  };
  E_ShenequipPrepose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_ShenequipPrepose_descriptor_,
      E_ShenequipPrepose::default_instance_,
      E_ShenequipPrepose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPrepose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_ShenequipPrepose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_ShenequipPrepose));
  Sheet_ShenequipPrepose_descriptor_ = file->message_type(18);
  static const int Sheet_ShenequipPrepose_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipPrepose, e_shenequipprepose_list_),
  };
  Sheet_ShenequipPrepose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_ShenequipPrepose_descriptor_,
      Sheet_ShenequipPrepose::default_instance_,
      Sheet_ShenequipPrepose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipPrepose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_ShenequipPrepose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_ShenequipPrepose));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_shenequip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipEquip_descriptor_, &E_ShenequipEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipEquip_descriptor_, &Sheet_ShenequipEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipAttAttributeDesc_descriptor_, &E_ShenequipAttAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipAttStarDesc_descriptor_, &E_ShenequipAttStarDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipAtt_descriptor_, &E_ShenequipAtt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipAtt_descriptor_, &Sheet_ShenequipAtt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipLvup_descriptor_, &E_ShenequipLvup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipLvup_descriptor_, &Sheet_ShenequipLvup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipClear_descriptor_, &E_ShenequipClear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipClear_descriptor_, &Sheet_ShenequipClear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipAwakenAttributeDesc_descriptor_, &E_ShenequipAwakenAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipAwaken_descriptor_, &E_ShenequipAwaken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipAwaken_descriptor_, &Sheet_ShenequipAwaken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipStarupMaterialDesc_descriptor_, &E_ShenequipStarupMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipStarup_descriptor_, &E_ShenequipStarup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipStarup_descriptor_, &Sheet_ShenequipStarup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipPreposeRewardDesc_descriptor_, &E_ShenequipPreposeRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_ShenequipPrepose_descriptor_, &E_ShenequipPrepose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_ShenequipPrepose_descriptor_, &Sheet_ShenequipPrepose::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_shenequip_2eproto() {
  delete E_ShenequipEquip::default_instance_;
  delete E_ShenequipEquip_reflection_;
  delete Sheet_ShenequipEquip::default_instance_;
  delete Sheet_ShenequipEquip_reflection_;
  delete E_ShenequipAttAttributeDesc::default_instance_;
  delete E_ShenequipAttAttributeDesc_reflection_;
  delete E_ShenequipAttStarDesc::default_instance_;
  delete E_ShenequipAttStarDesc_reflection_;
  delete E_ShenequipAtt::default_instance_;
  delete E_ShenequipAtt_reflection_;
  delete Sheet_ShenequipAtt::default_instance_;
  delete Sheet_ShenequipAtt_reflection_;
  delete E_ShenequipLvup::default_instance_;
  delete E_ShenequipLvup_reflection_;
  delete Sheet_ShenequipLvup::default_instance_;
  delete Sheet_ShenequipLvup_reflection_;
  delete E_ShenequipClear::default_instance_;
  delete E_ShenequipClear_reflection_;
  delete Sheet_ShenequipClear::default_instance_;
  delete Sheet_ShenequipClear_reflection_;
  delete E_ShenequipAwakenAttributeDesc::default_instance_;
  delete E_ShenequipAwakenAttributeDesc_reflection_;
  delete E_ShenequipAwaken::default_instance_;
  delete E_ShenequipAwaken_reflection_;
  delete Sheet_ShenequipAwaken::default_instance_;
  delete Sheet_ShenequipAwaken_reflection_;
  delete E_ShenequipStarupMaterialDesc::default_instance_;
  delete E_ShenequipStarupMaterialDesc_reflection_;
  delete E_ShenequipStarup::default_instance_;
  delete E_ShenequipStarup_reflection_;
  delete Sheet_ShenequipStarup::default_instance_;
  delete Sheet_ShenequipStarup_reflection_;
  delete E_ShenequipPreposeRewardDesc::default_instance_;
  delete E_ShenequipPreposeRewardDesc_reflection_;
  delete E_ShenequipPrepose::default_instance_;
  delete E_ShenequipPrepose_reflection_;
  delete Sheet_ShenequipPrepose::default_instance_;
  delete Sheet_ShenequipPrepose_reflection_;
}

void protobuf_AddDesc_shenequip_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017shenequip.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"\330\005\n\020E_ShenequipEquip\022\032\n\004m_id\030"
    "\001 \001(\005B\014\302\377\024\010\350\243\205\345\244\207ID\022$\n\006m_name\030\002 \001(\tB\024\302\377\024"
    "\014\350\243\205\345\244\207\345\220\215\347\247\260\220\301\024<\022 \n\006m_type\030\003 \001(\005B\020\302\377\024\014\350"
    "\243\205\345\244\207\345\244\247\347\261\273\022!\n\007m_grade\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207"
    "\350\257\204\347\272\247\022#\n\tm_subtype\030\005 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\255\220"
    "\347\261\273\022\'\n\007m_level\030\006 \001(\005B\026\302\377\024\022\347\251\277\346\210\264\347\255\211\347\272\247\351\231"
    "\220\345\210\266\022#\n\tm_quality\030\007 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\350\264"
    "\250\022 \n\006m_star\030\010 \001(\005B\020\302\377\024\014\345\210\235\345\247\213\346\230\237\347\272\247\022#\n\rm"
    "_attributeid\030\t \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022)\n\013m_de"
    "compose\030\n \001(\tB\024\302\377\024\014\345\210\206\350\247\243\350\216\267\345\276\227\220\301\024<\022%\n\013m"
    "_iscanbind\030\013 \001(\005B\020\302\377\024\014\346\230\257\345\220\246\347\273\221\345\256\232\022-\n\rm_"
    "istradebind\030\014 \001(\005B\026\302\377\024\022\346\230\257\345\220\246\344\272\244\346\230\223\347\273\221\345\256"
    "\232\022 \n\006m_time\030\r \001(\005B\020\302\377\024\014\351\231\220\346\227\266\350\243\205\345\244\207\022.\n\013m"
    "_broadcast\030\016 \001(\005B\031\302\377\024\025\346\230\257\345\220\246\346\222\255\346\224\276\350\267\221\351\251\254"
    "\347\201\257\022\'\n\rm_exclusiveid\030\017 \001(\005B\020\302\377\024\014\344\270\223\345\261\236\346\212"
    "\200\350\203\275\022+\n\rm_secretskill\030\020 \001(\tB\024\302\377\024\014\347\247\230\346\212\200\346"
    "\212\200\350\203\275\220\301\024<\022,\n\016m_crypticskill\030\021 \001(\tB\024\302\377\024\014\346"
    "\232\227\346\234\257\346\212\200\350\203\275\220\301\024<\022,\n\016m_passiveskill\030\022 \001(\tB"
    "\024\302\377\024\014\350\242\253\345\212\250\346\212\200\350\203\275\220\301\024P\"W\n\024Sheet_Shenequip"
    "Equip\022\?\n\025E_ShenequipEquip_List\030\001 \003(\0132\032.p"
    "roto_ff.E_ShenequipEquipB\004\210\301\024\024\"P\n\033E_Shen"
    "equipAttAttributeDesc\022\024\n\006m_type\030\001 \001(\005B\004\302"
    "\377\024\000\022\033\n\007m_value\030\002 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\"K\n\026E_Sh"
    "enequipAttStarDesc\022\024\n\006m_type\030\001 \001(\005B\004\302\377\024\000"
    "\022\033\n\007m_value\030\002 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\"\306\001\n\016E_Shen"
    "equipAtt\022\032\n\004m_id\030\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022P\n\013"
    "m_attribute\030\002 \003(\0132%.proto_ff.E_Shenequip"
    "AttAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\004\022F"
    "\n\006m_star\030\003 \003(\0132 .proto_ff.E_ShenequipAtt"
    "StarDescB\024\302\377\024\014\346\230\237\347\272\247\345\261\236\346\200\247\210\301\024\007\"R\n\022Sheet_"
    "ShenequipAtt\022<\n\023E_ShenequipAtt_List\030\001 \003("
    "\0132\030.proto_ff.E_ShenequipAttB\005\210\301\024\370U\"\230\002\n\017E"
    "_ShenequipLvup\022\036\n\004m_lv\030\001 \001(\005B\020\302\377\024\014\346\263\250\347\201\265"
    "\347\255\211\347\272\247\022\"\n\010m_itemid\030\002 \001(\005B\020\302\377\024\014\345\215\207\347\272\247\351\201\223\345"
    "\205\267\022\037\n\005m_num\030\003 \001(\005B\020\302\377\024\014\345\215\207\347\272\247\346\225\260\351\207\217\022\'\n\rm"
    "_advanceitem\030\004 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\351\201\223\345\205\267\022&\n\014"
    "m_advancenum\030\005 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\346\225\260\351\207\217\022)\n\r"
    "m_attributeid\030\006 \001(\005B\022\302\377\024\016\345\215\207\347\272\247\345\261\236\346\200\247ID\022"
    "$\n\010m_stepid\030\007 \001(\005B\022\302\377\024\016\350\277\233\351\230\266\345\261\236\346\200\247ID\"T\n"
    "\023Sheet_ShenequipLvup\022=\n\024E_ShenequipLvup_"
    "List\030\001 \003(\0132\031.proto_ff.E_ShenequipLvupB\004\210"
    "\301\024(\"\306\003\n\020E_ShenequipClear\022\024\n\004m_id\030\001 \001(\005B\006"
    "\302\377\024\002id\022 \n\006m_type\030\002 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\244\247\347\261\273"
    "\022\030\n\004m_lv\030\003 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022\"\n\010m_itemid\030\004"
    " \001(\005B\020\302\377\024\014\351\223\255\345\210\273\351\201\223\345\205\267\022\037\n\005m_num\030\005 \001(\005B\020\302"
    "\377\024\014\346\266\210\350\200\227\346\225\260\351\207\217\022%\n\013m_breakitem\030\006 \001(\005B\020\302\377"
    "\024\014\347\252\201\347\240\264\351\201\223\345\205\267\022$\n\nm_breaknum\030\007 \001(\005B\020\302\377\024\014"
    "\347\252\201\347\240\264\346\225\260\351\207\217\022,\n\017m_breakprogress\030\010 \001(\005B\023\302"
    "\377\024\017\347\252\201\347\240\264\350\277\233\345\272\246\345\200\274\022+\n\016m_randomcounts\030\t \001"
    "(\005B\023\302\377\024\017\351\232\217\346\234\272\346\235\241\347\233\256\346\225\260\022$\n\007m_minus\030\n \001(\005"
    "B\023\302\377\024\017\350\264\237\346\225\260\347\231\276\345\210\206\346\257\224\022\036\n\010m_nextid\030\013 \001(\005B"
    "\014\302\377\024\010\344\270\213\346\256\265ID\022-\n\tm_percent\030\014 \003(\005B\032\302\377\024\022\347\231"
    "\276\345\210\206\346\257\224\345\214\272\351\227\264\345\200\274\210\301\024\002\"X\n\024Sheet_ShenequipC"
    "lear\022@\n\025E_ShenequipClear_List\030\001 \003(\0132\032.pr"
    "oto_ff.E_ShenequipClearB\005\210\301\024\214\001\"S\n\036E_Shen"
    "equipAwakenAttributeDesc\022\024\n\006m_type\030\001 \001(\005"
    "B\004\302\377\024\000\022\033\n\007m_value\030\002 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\"\257\002\n\021"
    "E_ShenequipAwaken\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022"
    " \n\006m_type\030\002 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\244\247\347\261\273\022\036\n\004m_l"
    "v\030\003 \001(\005B\020\302\377\024\014\346\212\200\350\203\275\347\255\211\347\272\247\022\"\n\010m_itemid\030\004 "
    "\001(\005B\020\302\377\024\014\350\247\211\351\206\222\346\235\220\346\226\231\022\037\n\005m_num\030\005 \001(\005B\020\302\377"
    "\024\014\346\235\220\346\226\231\346\225\260\351\207\217\022(\n\016m_awakeskillid\030\006 \001(\005B\020"
    "\302\377\024\014\350\247\211\351\206\222\346\212\200\350\203\275\022S\n\013m_attribute\030\007 \003(\0132(."
    "proto_ff.E_ShenequipAwakenAttributeDescB"
    "\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\006\"Z\n\025Sheet_Shenequip"
    "Awaken\022A\n\026E_ShenequipAwaken_List\030\001 \003(\0132\033"
    ".proto_ff.E_ShenequipAwakenB\004\210\301\024\024\"\256\001\n\035E_"
    "ShenequipStarupMaterialDesc\022\033\n\007m_grade\030\001"
    " \001(\005B\n\302\377\024\006\350\257\204\347\272\247\022\035\n\tm_quality\030\002 \001(\005B\n\302\377\024"
    "\006\345\223\201\350\264\250\022\031\n\005m_num\030\003 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\032\n\006m_"
    "type\030\004 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\032\n\006m_star\030\005 \001(\005B\n"
    "\302\377\024\006\346\230\237\347\272\247\"\340\002\n\021E_ShenequipStarup\022\024\n\004m_id"
    "\030\001 \001(\005B\006\302\377\024\002id\022!\n\007m_grade\030\002 \001(\005B\020\302\377\024\014\350\243\205"
    "\345\244\207\350\257\204\347\272\247\022#\n\tm_quality\030\003 \001(\005B\020\302\377\024\014\350\243\205\345\244\207"
    "\345\223\201\350\264\250\022!\n\007m_stars\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\346\230\237\347\272"
    "\247\022\"\n\010m_nextid\030\005 \001(\005B\020\302\377\024\014\344\270\213\347\272\247\350\243\205\345\244\207\022\"\n"
    "\010m_lastid\030\006 \001(\005B\020\302\377\024\014\344\270\212\347\272\247\350\243\205\345\244\207\022/\n\tm_p"
    "ercent\030\007 \001(\005B\034\302\377\024\030\346\217\220\345\215\207\345\242\236\345\212\240\347\232\204\347\231\276\345\210\206\346"
    "\257\224\022Q\n\nm_material\030\010 \003(\0132\'.proto_ff.E_Shen"
    "equipStarupMaterialDescB\024\302\377\024\014\345\215\207\347\272\247\346\235\220\346\226"
    "\231\210\301\024\002\"Z\n\025Sheet_ShenequipStarup\022A\n\026E_Shen"
    "equipStarup_List\030\001 \003(\0132\033.proto_ff.E_Shen"
    "equipStarupB\004\210\301\024P\"U\n\034E_ShenequipPreposeR"
    "ewardDesc\022\032\n\006m_item\030\001 \001(\005B\n\302\377\024\006\351\201\223\345\205\267\022\031\n"
    "\005m_num\030\002 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\"\265\001\n\022E_Shenequip"
    "Prepose\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\037\n\013m_condi"
    "tion\030\002 \001(\005B\n\302\377\024\006\346\235\241\344\273\266\022\036\n\007m_value\030\003 \001(\005B"
    "\r\302\377\024\t\346\235\241\344\273\266\345\200\274\022H\n\010m_reward\030\004 \003(\0132&.proto"
    "_ff.E_ShenequipPreposeRewardDescB\016\302\377\024\006\345\245"
    "\226\345\212\261\210\301\024\005\"]\n\026Sheet_ShenequipPrepose\022C\n\027E_"
    "ShenequipPrepose_List\030\001 \003(\0132\034.proto_ff.E"
    "_ShenequipPreposeB\004\210\301\024\024", 3703);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "shenequip.proto", &protobuf_RegisterTypes);
  E_ShenequipEquip::default_instance_ = new E_ShenequipEquip();
  Sheet_ShenequipEquip::default_instance_ = new Sheet_ShenequipEquip();
  E_ShenequipAttAttributeDesc::default_instance_ = new E_ShenequipAttAttributeDesc();
  E_ShenequipAttStarDesc::default_instance_ = new E_ShenequipAttStarDesc();
  E_ShenequipAtt::default_instance_ = new E_ShenequipAtt();
  Sheet_ShenequipAtt::default_instance_ = new Sheet_ShenequipAtt();
  E_ShenequipLvup::default_instance_ = new E_ShenequipLvup();
  Sheet_ShenequipLvup::default_instance_ = new Sheet_ShenequipLvup();
  E_ShenequipClear::default_instance_ = new E_ShenequipClear();
  Sheet_ShenequipClear::default_instance_ = new Sheet_ShenequipClear();
  E_ShenequipAwakenAttributeDesc::default_instance_ = new E_ShenequipAwakenAttributeDesc();
  E_ShenequipAwaken::default_instance_ = new E_ShenequipAwaken();
  Sheet_ShenequipAwaken::default_instance_ = new Sheet_ShenequipAwaken();
  E_ShenequipStarupMaterialDesc::default_instance_ = new E_ShenequipStarupMaterialDesc();
  E_ShenequipStarup::default_instance_ = new E_ShenequipStarup();
  Sheet_ShenequipStarup::default_instance_ = new Sheet_ShenequipStarup();
  E_ShenequipPreposeRewardDesc::default_instance_ = new E_ShenequipPreposeRewardDesc();
  E_ShenequipPrepose::default_instance_ = new E_ShenequipPrepose();
  Sheet_ShenequipPrepose::default_instance_ = new Sheet_ShenequipPrepose();
  E_ShenequipEquip::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipEquip::default_instance_->InitAsDefaultInstance();
  E_ShenequipAttAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShenequipAttStarDesc::default_instance_->InitAsDefaultInstance();
  E_ShenequipAtt::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipAtt::default_instance_->InitAsDefaultInstance();
  E_ShenequipLvup::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipLvup::default_instance_->InitAsDefaultInstance();
  E_ShenequipClear::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipClear::default_instance_->InitAsDefaultInstance();
  E_ShenequipAwakenAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_ShenequipAwaken::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipAwaken::default_instance_->InitAsDefaultInstance();
  E_ShenequipStarupMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_ShenequipStarup::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipStarup::default_instance_->InitAsDefaultInstance();
  E_ShenequipPreposeRewardDesc::default_instance_->InitAsDefaultInstance();
  E_ShenequipPrepose::default_instance_->InitAsDefaultInstance();
  Sheet_ShenequipPrepose::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_shenequip_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_shenequip_2eproto {
  StaticDescriptorInitializer_shenequip_2eproto() {
    protobuf_AddDesc_shenequip_2eproto();
  }
} static_descriptor_initializer_shenequip_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipEquip::kMIdFieldNumber;
const int E_ShenequipEquip::kMNameFieldNumber;
const int E_ShenequipEquip::kMTypeFieldNumber;
const int E_ShenequipEquip::kMGradeFieldNumber;
const int E_ShenequipEquip::kMSubtypeFieldNumber;
const int E_ShenequipEquip::kMLevelFieldNumber;
const int E_ShenequipEquip::kMQualityFieldNumber;
const int E_ShenequipEquip::kMStarFieldNumber;
const int E_ShenequipEquip::kMAttributeidFieldNumber;
const int E_ShenequipEquip::kMDecomposeFieldNumber;
const int E_ShenequipEquip::kMIscanbindFieldNumber;
const int E_ShenequipEquip::kMIstradebindFieldNumber;
const int E_ShenequipEquip::kMTimeFieldNumber;
const int E_ShenequipEquip::kMBroadcastFieldNumber;
const int E_ShenequipEquip::kMExclusiveidFieldNumber;
const int E_ShenequipEquip::kMSecretskillFieldNumber;
const int E_ShenequipEquip::kMCrypticskillFieldNumber;
const int E_ShenequipEquip::kMPassiveskillFieldNumber;
#endif  // !_MSC_VER

E_ShenequipEquip::E_ShenequipEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipEquip::InitAsDefaultInstance() {
}

E_ShenequipEquip::E_ShenequipEquip(const E_ShenequipEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipEquip::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_type_ = 0;
  m_grade_ = 0;
  m_subtype_ = 0;
  m_level_ = 0;
  m_quality_ = 0;
  m_star_ = 0;
  m_attributeid_ = 0;
  m_decompose_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_iscanbind_ = 0;
  m_istradebind_ = 0;
  m_time_ = 0;
  m_broadcast_ = 0;
  m_exclusiveid_ = 0;
  m_secretskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_crypticskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_passiveskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipEquip::~E_ShenequipEquip() {
  SharedDtor();
}

void E_ShenequipEquip::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_decompose_ != &::google::protobuf::internal::kEmptyString) {
    delete m_decompose_;
  }
  if (m_secretskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_secretskill_;
  }
  if (m_crypticskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_crypticskill_;
  }
  if (m_passiveskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_passiveskill_;
  }
  if (this != default_instance_) {
  }
}

void E_ShenequipEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipEquip_descriptor_;
}

const E_ShenequipEquip& E_ShenequipEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipEquip* E_ShenequipEquip::default_instance_ = NULL;

E_ShenequipEquip* E_ShenequipEquip::New() const {
  return new E_ShenequipEquip;
}

void E_ShenequipEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_type_ = 0;
    m_grade_ = 0;
    m_subtype_ = 0;
    m_level_ = 0;
    m_quality_ = 0;
    m_star_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_attributeid_ = 0;
    if (has_m_decompose()) {
      if (m_decompose_ != &::google::protobuf::internal::kEmptyString) {
        m_decompose_->clear();
      }
    }
    m_iscanbind_ = 0;
    m_istradebind_ = 0;
    m_time_ = 0;
    m_broadcast_ = 0;
    m_exclusiveid_ = 0;
    if (has_m_secretskill()) {
      if (m_secretskill_ != &::google::protobuf::internal::kEmptyString) {
        m_secretskill_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_m_crypticskill()) {
      if (m_crypticskill_ != &::google::protobuf::internal::kEmptyString) {
        m_crypticskill_->clear();
      }
    }
    if (has_m_passiveskill()) {
      if (m_passiveskill_ != &::google::protobuf::internal::kEmptyString) {
        m_passiveskill_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_grade;
        break;
      }

      // optional int32 m_grade = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grade_)));
          set_has_m_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_subtype;
        break;
      }

      // optional int32 m_subtype = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_subtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_subtype_)));
          set_has_m_subtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_attributeid;
        break;
      }

      // optional int32 m_attributeid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attributeid_)));
          set_has_m_attributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_decompose;
        break;
      }

      // optional string m_decompose = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_decompose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_decompose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_decompose().data(), this->m_decompose().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_iscanbind;
        break;
      }

      // optional int32 m_iscanbind = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_iscanbind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_iscanbind_)));
          set_has_m_iscanbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_istradebind;
        break;
      }

      // optional int32 m_istradebind = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_istradebind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_istradebind_)));
          set_has_m_istradebind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_time;
        break;
      }

      // optional int32 m_time = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_broadcast;
        break;
      }

      // optional int32 m_broadcast = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_broadcast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_broadcast_)));
          set_has_m_broadcast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_exclusiveid;
        break;
      }

      // optional int32 m_exclusiveid = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exclusiveid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exclusiveid_)));
          set_has_m_exclusiveid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_m_secretskill;
        break;
      }

      // optional string m_secretskill = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_secretskill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_secretskill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_secretskill().data(), this->m_secretskill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_m_crypticskill;
        break;
      }

      // optional string m_crypticskill = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_crypticskill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_crypticskill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_crypticskill().data(), this->m_crypticskill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_passiveskill;
        break;
      }

      // optional string m_passiveskill = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_passiveskill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_passiveskill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_passiveskill().data(), this->m_passiveskill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_type(), output);
  }

  // optional int32 m_grade = 4;
  if (has_m_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_grade(), output);
  }

  // optional int32 m_subtype = 5;
  if (has_m_subtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_subtype(), output);
  }

  // optional int32 m_level = 6;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_level(), output);
  }

  // optional int32 m_quality = 7;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_quality(), output);
  }

  // optional int32 m_star = 8;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_star(), output);
  }

  // optional int32 m_attributeid = 9;
  if (has_m_attributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_attributeid(), output);
  }

  // optional string m_decompose = 10;
  if (has_m_decompose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_decompose().data(), this->m_decompose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->m_decompose(), output);
  }

  // optional int32 m_iscanbind = 11;
  if (has_m_iscanbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_iscanbind(), output);
  }

  // optional int32 m_istradebind = 12;
  if (has_m_istradebind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_istradebind(), output);
  }

  // optional int32 m_time = 13;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_time(), output);
  }

  // optional int32 m_broadcast = 14;
  if (has_m_broadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_broadcast(), output);
  }

  // optional int32 m_exclusiveid = 15;
  if (has_m_exclusiveid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_exclusiveid(), output);
  }

  // optional string m_secretskill = 16;
  if (has_m_secretskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_secretskill().data(), this->m_secretskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->m_secretskill(), output);
  }

  // optional string m_crypticskill = 17;
  if (has_m_crypticskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_crypticskill().data(), this->m_crypticskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->m_crypticskill(), output);
  }

  // optional string m_passiveskill = 18;
  if (has_m_passiveskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_passiveskill().data(), this->m_passiveskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->m_passiveskill(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_type(), target);
  }

  // optional int32 m_grade = 4;
  if (has_m_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_grade(), target);
  }

  // optional int32 m_subtype = 5;
  if (has_m_subtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_subtype(), target);
  }

  // optional int32 m_level = 6;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_level(), target);
  }

  // optional int32 m_quality = 7;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_quality(), target);
  }

  // optional int32 m_star = 8;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_star(), target);
  }

  // optional int32 m_attributeid = 9;
  if (has_m_attributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_attributeid(), target);
  }

  // optional string m_decompose = 10;
  if (has_m_decompose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_decompose().data(), this->m_decompose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->m_decompose(), target);
  }

  // optional int32 m_iscanbind = 11;
  if (has_m_iscanbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_iscanbind(), target);
  }

  // optional int32 m_istradebind = 12;
  if (has_m_istradebind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_istradebind(), target);
  }

  // optional int32 m_time = 13;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_time(), target);
  }

  // optional int32 m_broadcast = 14;
  if (has_m_broadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_broadcast(), target);
  }

  // optional int32 m_exclusiveid = 15;
  if (has_m_exclusiveid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_exclusiveid(), target);
  }

  // optional string m_secretskill = 16;
  if (has_m_secretskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_secretskill().data(), this->m_secretskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->m_secretskill(), target);
  }

  // optional string m_crypticskill = 17;
  if (has_m_crypticskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_crypticskill().data(), this->m_crypticskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->m_crypticskill(), target);
  }

  // optional string m_passiveskill = 18;
  if (has_m_passiveskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_passiveskill().data(), this->m_passiveskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->m_passiveskill(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_grade = 4;
    if (has_m_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grade());
    }

    // optional int32 m_subtype = 5;
    if (has_m_subtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_subtype());
    }

    // optional int32 m_level = 6;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_quality = 7;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_star = 8;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_attributeid = 9;
    if (has_m_attributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attributeid());
    }

    // optional string m_decompose = 10;
    if (has_m_decompose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_decompose());
    }

    // optional int32 m_iscanbind = 11;
    if (has_m_iscanbind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_iscanbind());
    }

    // optional int32 m_istradebind = 12;
    if (has_m_istradebind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_istradebind());
    }

    // optional int32 m_time = 13;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

    // optional int32 m_broadcast = 14;
    if (has_m_broadcast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_broadcast());
    }

    // optional int32 m_exclusiveid = 15;
    if (has_m_exclusiveid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exclusiveid());
    }

    // optional string m_secretskill = 16;
    if (has_m_secretskill()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_secretskill());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string m_crypticskill = 17;
    if (has_m_crypticskill()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_crypticskill());
    }

    // optional string m_passiveskill = 18;
    if (has_m_passiveskill()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_passiveskill());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipEquip::MergeFrom(const E_ShenequipEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_grade()) {
      set_m_grade(from.m_grade());
    }
    if (from.has_m_subtype()) {
      set_m_subtype(from.m_subtype());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_attributeid()) {
      set_m_attributeid(from.m_attributeid());
    }
    if (from.has_m_decompose()) {
      set_m_decompose(from.m_decompose());
    }
    if (from.has_m_iscanbind()) {
      set_m_iscanbind(from.m_iscanbind());
    }
    if (from.has_m_istradebind()) {
      set_m_istradebind(from.m_istradebind());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
    if (from.has_m_broadcast()) {
      set_m_broadcast(from.m_broadcast());
    }
    if (from.has_m_exclusiveid()) {
      set_m_exclusiveid(from.m_exclusiveid());
    }
    if (from.has_m_secretskill()) {
      set_m_secretskill(from.m_secretskill());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_crypticskill()) {
      set_m_crypticskill(from.m_crypticskill());
    }
    if (from.has_m_passiveskill()) {
      set_m_passiveskill(from.m_passiveskill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipEquip::CopyFrom(const E_ShenequipEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipEquip::IsInitialized() const {

  return true;
}

void E_ShenequipEquip::Swap(E_ShenequipEquip* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_grade_, other->m_grade_);
    std::swap(m_subtype_, other->m_subtype_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_attributeid_, other->m_attributeid_);
    std::swap(m_decompose_, other->m_decompose_);
    std::swap(m_iscanbind_, other->m_iscanbind_);
    std::swap(m_istradebind_, other->m_istradebind_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_broadcast_, other->m_broadcast_);
    std::swap(m_exclusiveid_, other->m_exclusiveid_);
    std::swap(m_secretskill_, other->m_secretskill_);
    std::swap(m_crypticskill_, other->m_crypticskill_);
    std::swap(m_passiveskill_, other->m_passiveskill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipEquip_descriptor_;
  metadata.reflection = E_ShenequipEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipEquip::kEShenequipEquipListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipEquip::Sheet_ShenequipEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipEquip::InitAsDefaultInstance() {
}

Sheet_ShenequipEquip::Sheet_ShenequipEquip(const Sheet_ShenequipEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipEquip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipEquip::~Sheet_ShenequipEquip() {
  SharedDtor();
}

void Sheet_ShenequipEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipEquip_descriptor_;
}

const Sheet_ShenequipEquip& Sheet_ShenequipEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipEquip* Sheet_ShenequipEquip::default_instance_ = NULL;

Sheet_ShenequipEquip* Sheet_ShenequipEquip::New() const {
  return new Sheet_ShenequipEquip;
}

void Sheet_ShenequipEquip::Clear() {
  e_shenequipequip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipEquip E_ShenequipEquip_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipEquip_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequipequip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipEquip_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipEquip E_ShenequipEquip_List = 1;
  for (int i = 0; i < this->e_shenequipequip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequipequip_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipEquip E_ShenequipEquip_List = 1;
  for (int i = 0; i < this->e_shenequipequip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequipequip_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipEquip::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipEquip E_ShenequipEquip_List = 1;
  total_size += 1 * this->e_shenequipequip_list_size();
  for (int i = 0; i < this->e_shenequipequip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequipequip_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipEquip::MergeFrom(const Sheet_ShenequipEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequipequip_list_.MergeFrom(from.e_shenequipequip_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipEquip::CopyFrom(const Sheet_ShenequipEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipEquip::IsInitialized() const {

  return true;
}

void Sheet_ShenequipEquip::Swap(Sheet_ShenequipEquip* other) {
  if (other != this) {
    e_shenequipequip_list_.Swap(&other->e_shenequipequip_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipEquip_descriptor_;
  metadata.reflection = Sheet_ShenequipEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipAttAttributeDesc::kMTypeFieldNumber;
const int E_ShenequipAttAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_ShenequipAttAttributeDesc::E_ShenequipAttAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipAttAttributeDesc::InitAsDefaultInstance() {
}

E_ShenequipAttAttributeDesc::E_ShenequipAttAttributeDesc(const E_ShenequipAttAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipAttAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipAttAttributeDesc::~E_ShenequipAttAttributeDesc() {
  SharedDtor();
}

void E_ShenequipAttAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipAttAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipAttAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipAttAttributeDesc_descriptor_;
}

const E_ShenequipAttAttributeDesc& E_ShenequipAttAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipAttAttributeDesc* E_ShenequipAttAttributeDesc::default_instance_ = NULL;

E_ShenequipAttAttributeDesc* E_ShenequipAttAttributeDesc::New() const {
  return new E_ShenequipAttAttributeDesc;
}

void E_ShenequipAttAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipAttAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipAttAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipAttAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipAttAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipAttAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipAttAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipAttAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipAttAttributeDesc::MergeFrom(const E_ShenequipAttAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipAttAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipAttAttributeDesc::CopyFrom(const E_ShenequipAttAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipAttAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShenequipAttAttributeDesc::Swap(E_ShenequipAttAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipAttAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipAttAttributeDesc_descriptor_;
  metadata.reflection = E_ShenequipAttAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipAttStarDesc::kMTypeFieldNumber;
const int E_ShenequipAttStarDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_ShenequipAttStarDesc::E_ShenequipAttStarDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipAttStarDesc::InitAsDefaultInstance() {
}

E_ShenequipAttStarDesc::E_ShenequipAttStarDesc(const E_ShenequipAttStarDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipAttStarDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipAttStarDesc::~E_ShenequipAttStarDesc() {
  SharedDtor();
}

void E_ShenequipAttStarDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipAttStarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipAttStarDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipAttStarDesc_descriptor_;
}

const E_ShenequipAttStarDesc& E_ShenequipAttStarDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipAttStarDesc* E_ShenequipAttStarDesc::default_instance_ = NULL;

E_ShenequipAttStarDesc* E_ShenequipAttStarDesc::New() const {
  return new E_ShenequipAttStarDesc;
}

void E_ShenequipAttStarDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipAttStarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipAttStarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipAttStarDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipAttStarDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipAttStarDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipAttStarDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipAttStarDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipAttStarDesc::MergeFrom(const E_ShenequipAttStarDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipAttStarDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipAttStarDesc::CopyFrom(const E_ShenequipAttStarDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipAttStarDesc::IsInitialized() const {

  return true;
}

void E_ShenequipAttStarDesc::Swap(E_ShenequipAttStarDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipAttStarDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipAttStarDesc_descriptor_;
  metadata.reflection = E_ShenequipAttStarDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipAtt::kMIdFieldNumber;
const int E_ShenequipAtt::kMAttributeFieldNumber;
const int E_ShenequipAtt::kMStarFieldNumber;
#endif  // !_MSC_VER

E_ShenequipAtt::E_ShenequipAtt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipAtt::InitAsDefaultInstance() {
}

E_ShenequipAtt::E_ShenequipAtt(const E_ShenequipAtt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipAtt::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipAtt::~E_ShenequipAtt() {
  SharedDtor();
}

void E_ShenequipAtt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipAtt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipAtt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipAtt_descriptor_;
}

const E_ShenequipAtt& E_ShenequipAtt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipAtt* E_ShenequipAtt::default_instance_ = NULL;

E_ShenequipAtt* E_ShenequipAtt::New() const {
  return new E_ShenequipAtt;
}

void E_ShenequipAtt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  m_star_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipAtt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShenequipAttAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectTag(26)) goto parse_m_star;
        break;
      }

      // repeated .proto_ff.E_ShenequipAttStarDesc m_star = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_star:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_star()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_star;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipAtt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_ShenequipAttAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_ShenequipAttStarDesc m_star = 3;
  for (int i = 0; i < this->m_star_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_star(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipAtt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_ShenequipAttAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_ShenequipAttStarDesc m_star = 3;
  for (int i = 0; i < this->m_star_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_star(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipAtt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_ShenequipAttAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_ShenequipAttStarDesc m_star = 3;
  total_size += 1 * this->m_star_size();
  for (int i = 0; i < this->m_star_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_star(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipAtt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipAtt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipAtt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipAtt::MergeFrom(const E_ShenequipAtt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_star_.MergeFrom(from.m_star_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipAtt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipAtt::CopyFrom(const E_ShenequipAtt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipAtt::IsInitialized() const {

  return true;
}

void E_ShenequipAtt::Swap(E_ShenequipAtt* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    m_star_.Swap(&other->m_star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipAtt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipAtt_descriptor_;
  metadata.reflection = E_ShenequipAtt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipAtt::kEShenequipAttListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipAtt::Sheet_ShenequipAtt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipAtt::InitAsDefaultInstance() {
}

Sheet_ShenequipAtt::Sheet_ShenequipAtt(const Sheet_ShenequipAtt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipAtt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipAtt::~Sheet_ShenequipAtt() {
  SharedDtor();
}

void Sheet_ShenequipAtt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipAtt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipAtt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipAtt_descriptor_;
}

const Sheet_ShenequipAtt& Sheet_ShenequipAtt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipAtt* Sheet_ShenequipAtt::default_instance_ = NULL;

Sheet_ShenequipAtt* Sheet_ShenequipAtt::New() const {
  return new Sheet_ShenequipAtt;
}

void Sheet_ShenequipAtt::Clear() {
  e_shenequipatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipAtt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipAtt E_ShenequipAtt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipAtt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequipatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipAtt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipAtt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipAtt E_ShenequipAtt_List = 1;
  for (int i = 0; i < this->e_shenequipatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequipatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipAtt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipAtt E_ShenequipAtt_List = 1;
  for (int i = 0; i < this->e_shenequipatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequipatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipAtt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipAtt E_ShenequipAtt_List = 1;
  total_size += 1 * this->e_shenequipatt_list_size();
  for (int i = 0; i < this->e_shenequipatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequipatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipAtt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipAtt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipAtt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipAtt::MergeFrom(const Sheet_ShenequipAtt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequipatt_list_.MergeFrom(from.e_shenequipatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipAtt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipAtt::CopyFrom(const Sheet_ShenequipAtt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipAtt::IsInitialized() const {

  return true;
}

void Sheet_ShenequipAtt::Swap(Sheet_ShenequipAtt* other) {
  if (other != this) {
    e_shenequipatt_list_.Swap(&other->e_shenequipatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipAtt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipAtt_descriptor_;
  metadata.reflection = Sheet_ShenequipAtt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipLvup::kMLvFieldNumber;
const int E_ShenequipLvup::kMItemidFieldNumber;
const int E_ShenequipLvup::kMNumFieldNumber;
const int E_ShenequipLvup::kMAdvanceitemFieldNumber;
const int E_ShenequipLvup::kMAdvancenumFieldNumber;
const int E_ShenequipLvup::kMAttributeidFieldNumber;
const int E_ShenequipLvup::kMStepidFieldNumber;
#endif  // !_MSC_VER

E_ShenequipLvup::E_ShenequipLvup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipLvup::InitAsDefaultInstance() {
}

E_ShenequipLvup::E_ShenequipLvup(const E_ShenequipLvup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipLvup::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_itemid_ = 0;
  m_num_ = 0;
  m_advanceitem_ = 0;
  m_advancenum_ = 0;
  m_attributeid_ = 0;
  m_stepid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipLvup::~E_ShenequipLvup() {
  SharedDtor();
}

void E_ShenequipLvup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipLvup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipLvup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipLvup_descriptor_;
}

const E_ShenequipLvup& E_ShenequipLvup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipLvup* E_ShenequipLvup::default_instance_ = NULL;

E_ShenequipLvup* E_ShenequipLvup::New() const {
  return new E_ShenequipLvup;
}

void E_ShenequipLvup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_itemid_ = 0;
    m_num_ = 0;
    m_advanceitem_ = 0;
    m_advancenum_ = 0;
    m_attributeid_ = 0;
    m_stepid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipLvup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_advanceitem;
        break;
      }

      // optional int32 m_advanceitem = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advanceitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advanceitem_)));
          set_has_m_advanceitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_advancenum;
        break;
      }

      // optional int32 m_advancenum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancenum_)));
          set_has_m_advancenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_attributeid;
        break;
      }

      // optional int32 m_attributeid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attributeid_)));
          set_has_m_attributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_stepid;
        break;
      }

      // optional int32 m_stepid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stepid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stepid_)));
          set_has_m_stepid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipLvup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_itemid = 2;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_itemid(), output);
  }

  // optional int32 m_num = 3;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_num(), output);
  }

  // optional int32 m_advanceitem = 4;
  if (has_m_advanceitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_advanceitem(), output);
  }

  // optional int32 m_advancenum = 5;
  if (has_m_advancenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_advancenum(), output);
  }

  // optional int32 m_attributeid = 6;
  if (has_m_attributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_attributeid(), output);
  }

  // optional int32 m_stepid = 7;
  if (has_m_stepid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_stepid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipLvup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_itemid = 2;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_itemid(), target);
  }

  // optional int32 m_num = 3;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_num(), target);
  }

  // optional int32 m_advanceitem = 4;
  if (has_m_advanceitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_advanceitem(), target);
  }

  // optional int32 m_advancenum = 5;
  if (has_m_advancenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_advancenum(), target);
  }

  // optional int32 m_attributeid = 6;
  if (has_m_attributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_attributeid(), target);
  }

  // optional int32 m_stepid = 7;
  if (has_m_stepid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_stepid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipLvup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_itemid = 2;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_num = 3;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_advanceitem = 4;
    if (has_m_advanceitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advanceitem());
    }

    // optional int32 m_advancenum = 5;
    if (has_m_advancenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancenum());
    }

    // optional int32 m_attributeid = 6;
    if (has_m_attributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attributeid());
    }

    // optional int32 m_stepid = 7;
    if (has_m_stepid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stepid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipLvup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipLvup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipLvup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipLvup::MergeFrom(const E_ShenequipLvup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_advanceitem()) {
      set_m_advanceitem(from.m_advanceitem());
    }
    if (from.has_m_advancenum()) {
      set_m_advancenum(from.m_advancenum());
    }
    if (from.has_m_attributeid()) {
      set_m_attributeid(from.m_attributeid());
    }
    if (from.has_m_stepid()) {
      set_m_stepid(from.m_stepid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipLvup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipLvup::CopyFrom(const E_ShenequipLvup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipLvup::IsInitialized() const {

  return true;
}

void E_ShenequipLvup::Swap(E_ShenequipLvup* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_advanceitem_, other->m_advanceitem_);
    std::swap(m_advancenum_, other->m_advancenum_);
    std::swap(m_attributeid_, other->m_attributeid_);
    std::swap(m_stepid_, other->m_stepid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipLvup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipLvup_descriptor_;
  metadata.reflection = E_ShenequipLvup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipLvup::kEShenequipLvupListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipLvup::Sheet_ShenequipLvup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipLvup::InitAsDefaultInstance() {
}

Sheet_ShenequipLvup::Sheet_ShenequipLvup(const Sheet_ShenequipLvup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipLvup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipLvup::~Sheet_ShenequipLvup() {
  SharedDtor();
}

void Sheet_ShenequipLvup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipLvup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipLvup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipLvup_descriptor_;
}

const Sheet_ShenequipLvup& Sheet_ShenequipLvup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipLvup* Sheet_ShenequipLvup::default_instance_ = NULL;

Sheet_ShenequipLvup* Sheet_ShenequipLvup::New() const {
  return new Sheet_ShenequipLvup;
}

void Sheet_ShenequipLvup::Clear() {
  e_shenequiplvup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipLvup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipLvup E_ShenequipLvup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipLvup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequiplvup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipLvup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipLvup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipLvup E_ShenequipLvup_List = 1;
  for (int i = 0; i < this->e_shenequiplvup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequiplvup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipLvup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipLvup E_ShenequipLvup_List = 1;
  for (int i = 0; i < this->e_shenequiplvup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequiplvup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipLvup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipLvup E_ShenequipLvup_List = 1;
  total_size += 1 * this->e_shenequiplvup_list_size();
  for (int i = 0; i < this->e_shenequiplvup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequiplvup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipLvup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipLvup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipLvup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipLvup::MergeFrom(const Sheet_ShenequipLvup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequiplvup_list_.MergeFrom(from.e_shenequiplvup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipLvup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipLvup::CopyFrom(const Sheet_ShenequipLvup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipLvup::IsInitialized() const {

  return true;
}

void Sheet_ShenequipLvup::Swap(Sheet_ShenequipLvup* other) {
  if (other != this) {
    e_shenequiplvup_list_.Swap(&other->e_shenequiplvup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipLvup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipLvup_descriptor_;
  metadata.reflection = Sheet_ShenequipLvup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipClear::kMIdFieldNumber;
const int E_ShenequipClear::kMTypeFieldNumber;
const int E_ShenequipClear::kMLvFieldNumber;
const int E_ShenequipClear::kMItemidFieldNumber;
const int E_ShenequipClear::kMNumFieldNumber;
const int E_ShenequipClear::kMBreakitemFieldNumber;
const int E_ShenequipClear::kMBreaknumFieldNumber;
const int E_ShenequipClear::kMBreakprogressFieldNumber;
const int E_ShenequipClear::kMRandomcountsFieldNumber;
const int E_ShenequipClear::kMMinusFieldNumber;
const int E_ShenequipClear::kMNextidFieldNumber;
const int E_ShenequipClear::kMPercentFieldNumber;
#endif  // !_MSC_VER

E_ShenequipClear::E_ShenequipClear()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipClear::InitAsDefaultInstance() {
}

E_ShenequipClear::E_ShenequipClear(const E_ShenequipClear& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipClear::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_lv_ = 0;
  m_itemid_ = 0;
  m_num_ = 0;
  m_breakitem_ = 0;
  m_breaknum_ = 0;
  m_breakprogress_ = 0;
  m_randomcounts_ = 0;
  m_minus_ = 0;
  m_nextid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipClear::~E_ShenequipClear() {
  SharedDtor();
}

void E_ShenequipClear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipClear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipClear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipClear_descriptor_;
}

const E_ShenequipClear& E_ShenequipClear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipClear* E_ShenequipClear::default_instance_ = NULL;

E_ShenequipClear* E_ShenequipClear::New() const {
  return new E_ShenequipClear;
}

void E_ShenequipClear::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_lv_ = 0;
    m_itemid_ = 0;
    m_num_ = 0;
    m_breakitem_ = 0;
    m_breaknum_ = 0;
    m_breakprogress_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_randomcounts_ = 0;
    m_minus_ = 0;
    m_nextid_ = 0;
  }
  m_percent_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipClear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_breakitem;
        break;
      }

      // optional int32 m_breakitem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_breakitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_breakitem_)));
          set_has_m_breakitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_breaknum;
        break;
      }

      // optional int32 m_breaknum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_breaknum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_breaknum_)));
          set_has_m_breaknum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_breakprogress;
        break;
      }

      // optional int32 m_breakprogress = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_breakprogress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_breakprogress_)));
          set_has_m_breakprogress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_randomcounts;
        break;
      }

      // optional int32 m_randomcounts = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_randomcounts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_randomcounts_)));
          set_has_m_randomcounts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_minus;
        break;
      }

      // optional int32 m_minus = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_minus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_minus_)));
          set_has_m_minus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_nextid;
        break;
      }

      // optional int32 m_nextid = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nextid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nextid_)));
          set_has_m_nextid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_percent;
        break;
      }

      // repeated int32 m_percent = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_m_percent())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_percent())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_percent;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipClear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lv(), output);
  }

  // optional int32 m_itemid = 4;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itemid(), output);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_num(), output);
  }

  // optional int32 m_breakitem = 6;
  if (has_m_breakitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_breakitem(), output);
  }

  // optional int32 m_breaknum = 7;
  if (has_m_breaknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_breaknum(), output);
  }

  // optional int32 m_breakprogress = 8;
  if (has_m_breakprogress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_breakprogress(), output);
  }

  // optional int32 m_randomcounts = 9;
  if (has_m_randomcounts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_randomcounts(), output);
  }

  // optional int32 m_minus = 10;
  if (has_m_minus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_minus(), output);
  }

  // optional int32 m_nextid = 11;
  if (has_m_nextid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_nextid(), output);
  }

  // repeated int32 m_percent = 12;
  for (int i = 0; i < this->m_percent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->m_percent(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipClear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lv(), target);
  }

  // optional int32 m_itemid = 4;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itemid(), target);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_num(), target);
  }

  // optional int32 m_breakitem = 6;
  if (has_m_breakitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_breakitem(), target);
  }

  // optional int32 m_breaknum = 7;
  if (has_m_breaknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_breaknum(), target);
  }

  // optional int32 m_breakprogress = 8;
  if (has_m_breakprogress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_breakprogress(), target);
  }

  // optional int32 m_randomcounts = 9;
  if (has_m_randomcounts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_randomcounts(), target);
  }

  // optional int32 m_minus = 10;
  if (has_m_minus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_minus(), target);
  }

  // optional int32 m_nextid = 11;
  if (has_m_nextid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_nextid(), target);
  }

  // repeated int32 m_percent = 12;
  for (int i = 0; i < this->m_percent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->m_percent(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipClear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_lv = 3;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_itemid = 4;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_num = 5;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_breakitem = 6;
    if (has_m_breakitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_breakitem());
    }

    // optional int32 m_breaknum = 7;
    if (has_m_breaknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_breaknum());
    }

    // optional int32 m_breakprogress = 8;
    if (has_m_breakprogress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_breakprogress());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_randomcounts = 9;
    if (has_m_randomcounts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_randomcounts());
    }

    // optional int32 m_minus = 10;
    if (has_m_minus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_minus());
    }

    // optional int32 m_nextid = 11;
    if (has_m_nextid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nextid());
    }

  }
  // repeated int32 m_percent = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_percent_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_percent(i));
    }
    total_size += 1 * this->m_percent_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipClear::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipClear* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipClear*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipClear::MergeFrom(const E_ShenequipClear& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_percent_.MergeFrom(from.m_percent_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_breakitem()) {
      set_m_breakitem(from.m_breakitem());
    }
    if (from.has_m_breaknum()) {
      set_m_breaknum(from.m_breaknum());
    }
    if (from.has_m_breakprogress()) {
      set_m_breakprogress(from.m_breakprogress());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_randomcounts()) {
      set_m_randomcounts(from.m_randomcounts());
    }
    if (from.has_m_minus()) {
      set_m_minus(from.m_minus());
    }
    if (from.has_m_nextid()) {
      set_m_nextid(from.m_nextid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipClear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipClear::CopyFrom(const E_ShenequipClear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipClear::IsInitialized() const {

  return true;
}

void E_ShenequipClear::Swap(E_ShenequipClear* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_breakitem_, other->m_breakitem_);
    std::swap(m_breaknum_, other->m_breaknum_);
    std::swap(m_breakprogress_, other->m_breakprogress_);
    std::swap(m_randomcounts_, other->m_randomcounts_);
    std::swap(m_minus_, other->m_minus_);
    std::swap(m_nextid_, other->m_nextid_);
    m_percent_.Swap(&other->m_percent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipClear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipClear_descriptor_;
  metadata.reflection = E_ShenequipClear_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipClear::kEShenequipClearListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipClear::Sheet_ShenequipClear()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipClear::InitAsDefaultInstance() {
}

Sheet_ShenequipClear::Sheet_ShenequipClear(const Sheet_ShenequipClear& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipClear::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipClear::~Sheet_ShenequipClear() {
  SharedDtor();
}

void Sheet_ShenequipClear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipClear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipClear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipClear_descriptor_;
}

const Sheet_ShenequipClear& Sheet_ShenequipClear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipClear* Sheet_ShenequipClear::default_instance_ = NULL;

Sheet_ShenequipClear* Sheet_ShenequipClear::New() const {
  return new Sheet_ShenequipClear;
}

void Sheet_ShenequipClear::Clear() {
  e_shenequipclear_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipClear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipClear E_ShenequipClear_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipClear_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequipclear_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipClear_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipClear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipClear E_ShenequipClear_List = 1;
  for (int i = 0; i < this->e_shenequipclear_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequipclear_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipClear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipClear E_ShenequipClear_List = 1;
  for (int i = 0; i < this->e_shenequipclear_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequipclear_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipClear::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipClear E_ShenequipClear_List = 1;
  total_size += 1 * this->e_shenequipclear_list_size();
  for (int i = 0; i < this->e_shenequipclear_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequipclear_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipClear::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipClear* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipClear*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipClear::MergeFrom(const Sheet_ShenequipClear& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequipclear_list_.MergeFrom(from.e_shenequipclear_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipClear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipClear::CopyFrom(const Sheet_ShenequipClear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipClear::IsInitialized() const {

  return true;
}

void Sheet_ShenequipClear::Swap(Sheet_ShenequipClear* other) {
  if (other != this) {
    e_shenequipclear_list_.Swap(&other->e_shenequipclear_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipClear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipClear_descriptor_;
  metadata.reflection = Sheet_ShenequipClear_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipAwakenAttributeDesc::kMTypeFieldNumber;
const int E_ShenequipAwakenAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_ShenequipAwakenAttributeDesc::E_ShenequipAwakenAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipAwakenAttributeDesc::InitAsDefaultInstance() {
}

E_ShenequipAwakenAttributeDesc::E_ShenequipAwakenAttributeDesc(const E_ShenequipAwakenAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipAwakenAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipAwakenAttributeDesc::~E_ShenequipAwakenAttributeDesc() {
  SharedDtor();
}

void E_ShenequipAwakenAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipAwakenAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipAwakenAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipAwakenAttributeDesc_descriptor_;
}

const E_ShenequipAwakenAttributeDesc& E_ShenequipAwakenAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipAwakenAttributeDesc* E_ShenequipAwakenAttributeDesc::default_instance_ = NULL;

E_ShenequipAwakenAttributeDesc* E_ShenequipAwakenAttributeDesc::New() const {
  return new E_ShenequipAwakenAttributeDesc;
}

void E_ShenequipAwakenAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipAwakenAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipAwakenAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipAwakenAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipAwakenAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipAwakenAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipAwakenAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipAwakenAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipAwakenAttributeDesc::MergeFrom(const E_ShenequipAwakenAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipAwakenAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipAwakenAttributeDesc::CopyFrom(const E_ShenequipAwakenAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipAwakenAttributeDesc::IsInitialized() const {

  return true;
}

void E_ShenequipAwakenAttributeDesc::Swap(E_ShenequipAwakenAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipAwakenAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipAwakenAttributeDesc_descriptor_;
  metadata.reflection = E_ShenequipAwakenAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipAwaken::kMIdFieldNumber;
const int E_ShenequipAwaken::kMTypeFieldNumber;
const int E_ShenequipAwaken::kMLvFieldNumber;
const int E_ShenequipAwaken::kMItemidFieldNumber;
const int E_ShenequipAwaken::kMNumFieldNumber;
const int E_ShenequipAwaken::kMAwakeskillidFieldNumber;
const int E_ShenequipAwaken::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_ShenequipAwaken::E_ShenequipAwaken()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipAwaken::InitAsDefaultInstance() {
}

E_ShenequipAwaken::E_ShenequipAwaken(const E_ShenequipAwaken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipAwaken::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_lv_ = 0;
  m_itemid_ = 0;
  m_num_ = 0;
  m_awakeskillid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipAwaken::~E_ShenequipAwaken() {
  SharedDtor();
}

void E_ShenequipAwaken::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipAwaken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipAwaken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipAwaken_descriptor_;
}

const E_ShenequipAwaken& E_ShenequipAwaken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipAwaken* E_ShenequipAwaken::default_instance_ = NULL;

E_ShenequipAwaken* E_ShenequipAwaken::New() const {
  return new E_ShenequipAwaken;
}

void E_ShenequipAwaken::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_lv_ = 0;
    m_itemid_ = 0;
    m_num_ = 0;
    m_awakeskillid_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipAwaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_awakeskillid;
        break;
      }

      // optional int32 m_awakeskillid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskillid_)));
          set_has_m_awakeskillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_ShenequipAwakenAttributeDesc m_attribute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipAwaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lv(), output);
  }

  // optional int32 m_itemid = 4;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itemid(), output);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_num(), output);
  }

  // optional int32 m_awakeskillid = 6;
  if (has_m_awakeskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_awakeskillid(), output);
  }

  // repeated .proto_ff.E_ShenequipAwakenAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipAwaken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lv(), target);
  }

  // optional int32 m_itemid = 4;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itemid(), target);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_num(), target);
  }

  // optional int32 m_awakeskillid = 6;
  if (has_m_awakeskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_awakeskillid(), target);
  }

  // repeated .proto_ff.E_ShenequipAwakenAttributeDesc m_attribute = 7;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipAwaken::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_lv = 3;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_itemid = 4;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_num = 5;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_awakeskillid = 6;
    if (has_m_awakeskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskillid());
    }

  }
  // repeated .proto_ff.E_ShenequipAwakenAttributeDesc m_attribute = 7;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipAwaken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipAwaken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipAwaken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipAwaken::MergeFrom(const E_ShenequipAwaken& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_awakeskillid()) {
      set_m_awakeskillid(from.m_awakeskillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipAwaken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipAwaken::CopyFrom(const E_ShenequipAwaken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipAwaken::IsInitialized() const {

  return true;
}

void E_ShenequipAwaken::Swap(E_ShenequipAwaken* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_awakeskillid_, other->m_awakeskillid_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipAwaken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipAwaken_descriptor_;
  metadata.reflection = E_ShenequipAwaken_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipAwaken::kEShenequipAwakenListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipAwaken::Sheet_ShenequipAwaken()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipAwaken::InitAsDefaultInstance() {
}

Sheet_ShenequipAwaken::Sheet_ShenequipAwaken(const Sheet_ShenequipAwaken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipAwaken::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipAwaken::~Sheet_ShenequipAwaken() {
  SharedDtor();
}

void Sheet_ShenequipAwaken::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipAwaken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipAwaken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipAwaken_descriptor_;
}

const Sheet_ShenequipAwaken& Sheet_ShenequipAwaken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipAwaken* Sheet_ShenequipAwaken::default_instance_ = NULL;

Sheet_ShenequipAwaken* Sheet_ShenequipAwaken::New() const {
  return new Sheet_ShenequipAwaken;
}

void Sheet_ShenequipAwaken::Clear() {
  e_shenequipawaken_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipAwaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipAwaken E_ShenequipAwaken_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipAwaken_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequipawaken_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipAwaken_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipAwaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipAwaken E_ShenequipAwaken_List = 1;
  for (int i = 0; i < this->e_shenequipawaken_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequipawaken_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipAwaken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipAwaken E_ShenequipAwaken_List = 1;
  for (int i = 0; i < this->e_shenequipawaken_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequipawaken_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipAwaken::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipAwaken E_ShenequipAwaken_List = 1;
  total_size += 1 * this->e_shenequipawaken_list_size();
  for (int i = 0; i < this->e_shenequipawaken_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequipawaken_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipAwaken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipAwaken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipAwaken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipAwaken::MergeFrom(const Sheet_ShenequipAwaken& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequipawaken_list_.MergeFrom(from.e_shenequipawaken_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipAwaken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipAwaken::CopyFrom(const Sheet_ShenequipAwaken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipAwaken::IsInitialized() const {

  return true;
}

void Sheet_ShenequipAwaken::Swap(Sheet_ShenequipAwaken* other) {
  if (other != this) {
    e_shenequipawaken_list_.Swap(&other->e_shenequipawaken_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipAwaken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipAwaken_descriptor_;
  metadata.reflection = Sheet_ShenequipAwaken_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipStarupMaterialDesc::kMGradeFieldNumber;
const int E_ShenequipStarupMaterialDesc::kMQualityFieldNumber;
const int E_ShenequipStarupMaterialDesc::kMNumFieldNumber;
const int E_ShenequipStarupMaterialDesc::kMTypeFieldNumber;
const int E_ShenequipStarupMaterialDesc::kMStarFieldNumber;
#endif  // !_MSC_VER

E_ShenequipStarupMaterialDesc::E_ShenequipStarupMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipStarupMaterialDesc::InitAsDefaultInstance() {
}

E_ShenequipStarupMaterialDesc::E_ShenequipStarupMaterialDesc(const E_ShenequipStarupMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipStarupMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_grade_ = 0;
  m_quality_ = 0;
  m_num_ = 0;
  m_type_ = 0;
  m_star_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipStarupMaterialDesc::~E_ShenequipStarupMaterialDesc() {
  SharedDtor();
}

void E_ShenequipStarupMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipStarupMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipStarupMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipStarupMaterialDesc_descriptor_;
}

const E_ShenequipStarupMaterialDesc& E_ShenequipStarupMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipStarupMaterialDesc* E_ShenequipStarupMaterialDesc::default_instance_ = NULL;

E_ShenequipStarupMaterialDesc* E_ShenequipStarupMaterialDesc::New() const {
  return new E_ShenequipStarupMaterialDesc;
}

void E_ShenequipStarupMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_grade_ = 0;
    m_quality_ = 0;
    m_num_ = 0;
    m_type_ = 0;
    m_star_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipStarupMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grade_)));
          set_has_m_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipStarupMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_grade = 1;
  if (has_m_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_grade(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_num = 3;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_num(), output);
  }

  // optional int32 m_type = 4;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_type(), output);
  }

  // optional int32 m_star = 5;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_star(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipStarupMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_grade = 1;
  if (has_m_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_grade(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_num = 3;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_num(), target);
  }

  // optional int32 m_type = 4;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_type(), target);
  }

  // optional int32 m_star = 5;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_star(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipStarupMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_grade = 1;
    if (has_m_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grade());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_num = 3;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_type = 4;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_star = 5;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipStarupMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipStarupMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipStarupMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipStarupMaterialDesc::MergeFrom(const E_ShenequipStarupMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_grade()) {
      set_m_grade(from.m_grade());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipStarupMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipStarupMaterialDesc::CopyFrom(const E_ShenequipStarupMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipStarupMaterialDesc::IsInitialized() const {

  return true;
}

void E_ShenequipStarupMaterialDesc::Swap(E_ShenequipStarupMaterialDesc* other) {
  if (other != this) {
    std::swap(m_grade_, other->m_grade_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_star_, other->m_star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipStarupMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipStarupMaterialDesc_descriptor_;
  metadata.reflection = E_ShenequipStarupMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipStarup::kMIdFieldNumber;
const int E_ShenequipStarup::kMGradeFieldNumber;
const int E_ShenequipStarup::kMQualityFieldNumber;
const int E_ShenequipStarup::kMStarsFieldNumber;
const int E_ShenequipStarup::kMNextidFieldNumber;
const int E_ShenequipStarup::kMLastidFieldNumber;
const int E_ShenequipStarup::kMPercentFieldNumber;
const int E_ShenequipStarup::kMMaterialFieldNumber;
#endif  // !_MSC_VER

E_ShenequipStarup::E_ShenequipStarup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipStarup::InitAsDefaultInstance() {
}

E_ShenequipStarup::E_ShenequipStarup(const E_ShenequipStarup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipStarup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_grade_ = 0;
  m_quality_ = 0;
  m_stars_ = 0;
  m_nextid_ = 0;
  m_lastid_ = 0;
  m_percent_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipStarup::~E_ShenequipStarup() {
  SharedDtor();
}

void E_ShenequipStarup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipStarup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipStarup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipStarup_descriptor_;
}

const E_ShenequipStarup& E_ShenequipStarup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipStarup* E_ShenequipStarup::default_instance_ = NULL;

E_ShenequipStarup* E_ShenequipStarup::New() const {
  return new E_ShenequipStarup;
}

void E_ShenequipStarup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_grade_ = 0;
    m_quality_ = 0;
    m_stars_ = 0;
    m_nextid_ = 0;
    m_lastid_ = 0;
    m_percent_ = 0;
  }
  m_material_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipStarup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_grade;
        break;
      }

      // optional int32 m_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grade_)));
          set_has_m_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_stars;
        break;
      }

      // optional int32 m_stars = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stars:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stars_)));
          set_has_m_stars();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_nextid;
        break;
      }

      // optional int32 m_nextid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nextid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nextid_)));
          set_has_m_nextid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_lastid;
        break;
      }

      // optional int32 m_lastid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lastid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lastid_)));
          set_has_m_lastid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_percent;
        break;
      }

      // optional int32 m_percent = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_percent_)));
          set_has_m_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_ShenequipStarupMaterialDesc m_material = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_material;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipStarup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_grade = 2;
  if (has_m_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_grade(), output);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_quality(), output);
  }

  // optional int32 m_stars = 4;
  if (has_m_stars()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_stars(), output);
  }

  // optional int32 m_nextid = 5;
  if (has_m_nextid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_nextid(), output);
  }

  // optional int32 m_lastid = 6;
  if (has_m_lastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_lastid(), output);
  }

  // optional int32 m_percent = 7;
  if (has_m_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_percent(), output);
  }

  // repeated .proto_ff.E_ShenequipStarupMaterialDesc m_material = 8;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_material(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipStarup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_grade = 2;
  if (has_m_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_grade(), target);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_quality(), target);
  }

  // optional int32 m_stars = 4;
  if (has_m_stars()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_stars(), target);
  }

  // optional int32 m_nextid = 5;
  if (has_m_nextid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_nextid(), target);
  }

  // optional int32 m_lastid = 6;
  if (has_m_lastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_lastid(), target);
  }

  // optional int32 m_percent = 7;
  if (has_m_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_percent(), target);
  }

  // repeated .proto_ff.E_ShenequipStarupMaterialDesc m_material = 8;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_material(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipStarup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_grade = 2;
    if (has_m_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grade());
    }

    // optional int32 m_quality = 3;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_stars = 4;
    if (has_m_stars()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stars());
    }

    // optional int32 m_nextid = 5;
    if (has_m_nextid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nextid());
    }

    // optional int32 m_lastid = 6;
    if (has_m_lastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lastid());
    }

    // optional int32 m_percent = 7;
    if (has_m_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_percent());
    }

  }
  // repeated .proto_ff.E_ShenequipStarupMaterialDesc m_material = 8;
  total_size += 1 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipStarup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipStarup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipStarup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipStarup::MergeFrom(const E_ShenequipStarup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_grade()) {
      set_m_grade(from.m_grade());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_stars()) {
      set_m_stars(from.m_stars());
    }
    if (from.has_m_nextid()) {
      set_m_nextid(from.m_nextid());
    }
    if (from.has_m_lastid()) {
      set_m_lastid(from.m_lastid());
    }
    if (from.has_m_percent()) {
      set_m_percent(from.m_percent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipStarup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipStarup::CopyFrom(const E_ShenequipStarup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipStarup::IsInitialized() const {

  return true;
}

void E_ShenequipStarup::Swap(E_ShenequipStarup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_grade_, other->m_grade_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_stars_, other->m_stars_);
    std::swap(m_nextid_, other->m_nextid_);
    std::swap(m_lastid_, other->m_lastid_);
    std::swap(m_percent_, other->m_percent_);
    m_material_.Swap(&other->m_material_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipStarup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipStarup_descriptor_;
  metadata.reflection = E_ShenequipStarup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipStarup::kEShenequipStarupListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipStarup::Sheet_ShenequipStarup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipStarup::InitAsDefaultInstance() {
}

Sheet_ShenequipStarup::Sheet_ShenequipStarup(const Sheet_ShenequipStarup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipStarup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipStarup::~Sheet_ShenequipStarup() {
  SharedDtor();
}

void Sheet_ShenequipStarup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipStarup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipStarup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipStarup_descriptor_;
}

const Sheet_ShenequipStarup& Sheet_ShenequipStarup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipStarup* Sheet_ShenequipStarup::default_instance_ = NULL;

Sheet_ShenequipStarup* Sheet_ShenequipStarup::New() const {
  return new Sheet_ShenequipStarup;
}

void Sheet_ShenequipStarup::Clear() {
  e_shenequipstarup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipStarup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipStarup E_ShenequipStarup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipStarup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequipstarup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipStarup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipStarup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipStarup E_ShenequipStarup_List = 1;
  for (int i = 0; i < this->e_shenequipstarup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequipstarup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipStarup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipStarup E_ShenequipStarup_List = 1;
  for (int i = 0; i < this->e_shenequipstarup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequipstarup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipStarup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipStarup E_ShenequipStarup_List = 1;
  total_size += 1 * this->e_shenequipstarup_list_size();
  for (int i = 0; i < this->e_shenequipstarup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequipstarup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipStarup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipStarup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipStarup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipStarup::MergeFrom(const Sheet_ShenequipStarup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequipstarup_list_.MergeFrom(from.e_shenequipstarup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipStarup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipStarup::CopyFrom(const Sheet_ShenequipStarup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipStarup::IsInitialized() const {

  return true;
}

void Sheet_ShenequipStarup::Swap(Sheet_ShenequipStarup* other) {
  if (other != this) {
    e_shenequipstarup_list_.Swap(&other->e_shenequipstarup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipStarup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipStarup_descriptor_;
  metadata.reflection = Sheet_ShenequipStarup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipPreposeRewardDesc::kMItemFieldNumber;
const int E_ShenequipPreposeRewardDesc::kMNumFieldNumber;
#endif  // !_MSC_VER

E_ShenequipPreposeRewardDesc::E_ShenequipPreposeRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipPreposeRewardDesc::InitAsDefaultInstance() {
}

E_ShenequipPreposeRewardDesc::E_ShenequipPreposeRewardDesc(const E_ShenequipPreposeRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipPreposeRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_item_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipPreposeRewardDesc::~E_ShenequipPreposeRewardDesc() {
  SharedDtor();
}

void E_ShenequipPreposeRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipPreposeRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipPreposeRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipPreposeRewardDesc_descriptor_;
}

const E_ShenequipPreposeRewardDesc& E_ShenequipPreposeRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipPreposeRewardDesc* E_ShenequipPreposeRewardDesc::default_instance_ = NULL;

E_ShenequipPreposeRewardDesc* E_ShenequipPreposeRewardDesc::New() const {
  return new E_ShenequipPreposeRewardDesc;
}

void E_ShenequipPreposeRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_item_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipPreposeRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipPreposeRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_item(), output);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipPreposeRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_item(), target);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipPreposeRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_item = 1;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipPreposeRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipPreposeRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipPreposeRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipPreposeRewardDesc::MergeFrom(const E_ShenequipPreposeRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipPreposeRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipPreposeRewardDesc::CopyFrom(const E_ShenequipPreposeRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipPreposeRewardDesc::IsInitialized() const {

  return true;
}

void E_ShenequipPreposeRewardDesc::Swap(E_ShenequipPreposeRewardDesc* other) {
  if (other != this) {
    std::swap(m_item_, other->m_item_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipPreposeRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipPreposeRewardDesc_descriptor_;
  metadata.reflection = E_ShenequipPreposeRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_ShenequipPrepose::kMIdFieldNumber;
const int E_ShenequipPrepose::kMConditionFieldNumber;
const int E_ShenequipPrepose::kMValueFieldNumber;
const int E_ShenequipPrepose::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_ShenequipPrepose::E_ShenequipPrepose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_ShenequipPrepose::InitAsDefaultInstance() {
}

E_ShenequipPrepose::E_ShenequipPrepose(const E_ShenequipPrepose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_ShenequipPrepose::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_condition_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_ShenequipPrepose::~E_ShenequipPrepose() {
  SharedDtor();
}

void E_ShenequipPrepose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_ShenequipPrepose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_ShenequipPrepose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ShenequipPrepose_descriptor_;
}

const E_ShenequipPrepose& E_ShenequipPrepose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

E_ShenequipPrepose* E_ShenequipPrepose::default_instance_ = NULL;

E_ShenequipPrepose* E_ShenequipPrepose::New() const {
  return new E_ShenequipPrepose;
}

void E_ShenequipPrepose::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_condition_ = 0;
    m_value_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_ShenequipPrepose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_ShenequipPreposeRewardDesc m_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_ShenequipPrepose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_condition = 2;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_condition(), output);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_value(), output);
  }

  // repeated .proto_ff.E_ShenequipPreposeRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_ShenequipPrepose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_condition = 2;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_condition(), target);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_value(), target);
  }

  // repeated .proto_ff.E_ShenequipPreposeRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_ShenequipPrepose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_condition = 2;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

    // optional int32 m_value = 3;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  // repeated .proto_ff.E_ShenequipPreposeRewardDesc m_reward = 4;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_ShenequipPrepose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_ShenequipPrepose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_ShenequipPrepose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_ShenequipPrepose::MergeFrom(const E_ShenequipPrepose& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_ShenequipPrepose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_ShenequipPrepose::CopyFrom(const E_ShenequipPrepose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_ShenequipPrepose::IsInitialized() const {

  return true;
}

void E_ShenequipPrepose::Swap(E_ShenequipPrepose* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_value_, other->m_value_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_ShenequipPrepose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_ShenequipPrepose_descriptor_;
  metadata.reflection = E_ShenequipPrepose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_ShenequipPrepose::kEShenequipPreposeListFieldNumber;
#endif  // !_MSC_VER

Sheet_ShenequipPrepose::Sheet_ShenequipPrepose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_ShenequipPrepose::InitAsDefaultInstance() {
}

Sheet_ShenequipPrepose::Sheet_ShenequipPrepose(const Sheet_ShenequipPrepose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_ShenequipPrepose::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_ShenequipPrepose::~Sheet_ShenequipPrepose() {
  SharedDtor();
}

void Sheet_ShenequipPrepose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_ShenequipPrepose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_ShenequipPrepose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_ShenequipPrepose_descriptor_;
}

const Sheet_ShenequipPrepose& Sheet_ShenequipPrepose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shenequip_2eproto();
  return *default_instance_;
}

Sheet_ShenequipPrepose* Sheet_ShenequipPrepose::default_instance_ = NULL;

Sheet_ShenequipPrepose* Sheet_ShenequipPrepose::New() const {
  return new Sheet_ShenequipPrepose;
}

void Sheet_ShenequipPrepose::Clear() {
  e_shenequipprepose_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_ShenequipPrepose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_ShenequipPrepose E_ShenequipPrepose_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_ShenequipPrepose_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_shenequipprepose_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_ShenequipPrepose_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_ShenequipPrepose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_ShenequipPrepose E_ShenequipPrepose_List = 1;
  for (int i = 0; i < this->e_shenequipprepose_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_shenequipprepose_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_ShenequipPrepose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_ShenequipPrepose E_ShenequipPrepose_List = 1;
  for (int i = 0; i < this->e_shenequipprepose_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_shenequipprepose_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_ShenequipPrepose::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_ShenequipPrepose E_ShenequipPrepose_List = 1;
  total_size += 1 * this->e_shenequipprepose_list_size();
  for (int i = 0; i < this->e_shenequipprepose_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_shenequipprepose_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_ShenequipPrepose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_ShenequipPrepose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_ShenequipPrepose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_ShenequipPrepose::MergeFrom(const Sheet_ShenequipPrepose& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_shenequipprepose_list_.MergeFrom(from.e_shenequipprepose_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_ShenequipPrepose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_ShenequipPrepose::CopyFrom(const Sheet_ShenequipPrepose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_ShenequipPrepose::IsInitialized() const {

  return true;
}

void Sheet_ShenequipPrepose::Swap(Sheet_ShenequipPrepose* other) {
  if (other != this) {
    e_shenequipprepose_list_.Swap(&other->e_shenequipprepose_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_ShenequipPrepose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_ShenequipPrepose_descriptor_;
  metadata.reflection = Sheet_ShenequipPrepose_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
