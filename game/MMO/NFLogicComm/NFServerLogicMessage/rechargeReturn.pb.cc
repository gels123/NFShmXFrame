// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rechargeReturn.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rechargeReturn.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* rechargeReturnrechargeReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rechargeReturnrechargeReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_rechargeReturnrechargeReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_rechargeReturnrechargeReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* rechargeReturntime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rechargeReturntime_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_rechargeReturntime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_rechargeReturntime_reflection_ = NULL;
const ::google::protobuf::Descriptor* rechargeReturncontinuousReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rechargeReturncontinuousReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_rechargeReturncontinuousReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_rechargeReturncontinuousReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* rechargeReturnrechargeTrigger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rechargeReturnrechargeTrigger_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_rechargeReturnrechargeTrigger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_rechargeReturnrechargeTrigger_reflection_ = NULL;
const ::google::protobuf::Descriptor* rechargeReturnconstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rechargeReturnconstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_rechargeReturnconstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_rechargeReturnconstant_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rechargeReturn_2eproto() {
  protobuf_AddDesc_rechargeReturn_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rechargeReturn.proto");
  GOOGLE_CHECK(file != NULL);
  rechargeReturnrechargeReturn_descriptor_ = file->message_type(0);
  static const int rechargeReturnrechargeReturn_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, minline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, diamondrratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, timeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, mailid_),
  };
  rechargeReturnrechargeReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rechargeReturnrechargeReturn_descriptor_,
      rechargeReturnrechargeReturn::default_instance_,
      rechargeReturnrechargeReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rechargeReturnrechargeReturn));
  Sheet_rechargeReturnrechargeReturn_descriptor_ = file->message_type(1);
  static const int Sheet_rechargeReturnrechargeReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnrechargeReturn, rechargereturnrechargereturn_list_),
  };
  Sheet_rechargeReturnrechargeReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_rechargeReturnrechargeReturn_descriptor_,
      Sheet_rechargeReturnrechargeReturn::default_instance_,
      Sheet_rechargeReturnrechargeReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnrechargeReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnrechargeReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_rechargeReturnrechargeReturn));
  rechargeReturntime_descriptor_ = file->message_type(2);
  static const int rechargeReturntime_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturntime, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturntime, timetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturntime, timea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturntime, timeb_),
  };
  rechargeReturntime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rechargeReturntime_descriptor_,
      rechargeReturntime::default_instance_,
      rechargeReturntime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturntime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturntime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rechargeReturntime));
  Sheet_rechargeReturntime_descriptor_ = file->message_type(3);
  static const int Sheet_rechargeReturntime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturntime, rechargereturntime_list_),
  };
  Sheet_rechargeReturntime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_rechargeReturntime_descriptor_,
      Sheet_rechargeReturntime::default_instance_,
      Sheet_rechargeReturntime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturntime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturntime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_rechargeReturntime));
  rechargeReturncontinuousReturn_descriptor_ = file->message_type(4);
  static const int rechargeReturncontinuousReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturncontinuousReturn, gear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturncontinuousReturn, boxid_),
  };
  rechargeReturncontinuousReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rechargeReturncontinuousReturn_descriptor_,
      rechargeReturncontinuousReturn::default_instance_,
      rechargeReturncontinuousReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturncontinuousReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturncontinuousReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rechargeReturncontinuousReturn));
  Sheet_rechargeReturncontinuousReturn_descriptor_ = file->message_type(5);
  static const int Sheet_rechargeReturncontinuousReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturncontinuousReturn, rechargereturncontinuousreturn_list_),
  };
  Sheet_rechargeReturncontinuousReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_rechargeReturncontinuousReturn_descriptor_,
      Sheet_rechargeReturncontinuousReturn::default_instance_,
      Sheet_rechargeReturncontinuousReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturncontinuousReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturncontinuousReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_rechargeReturncontinuousReturn));
  rechargeReturnrechargeTrigger_descriptor_ = file->message_type(6);
  static const int rechargeReturnrechargeTrigger_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, timetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, timea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, timeb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, reset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, triggertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, triggervalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, mailid_),
  };
  rechargeReturnrechargeTrigger_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rechargeReturnrechargeTrigger_descriptor_,
      rechargeReturnrechargeTrigger::default_instance_,
      rechargeReturnrechargeTrigger_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnrechargeTrigger, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rechargeReturnrechargeTrigger));
  Sheet_rechargeReturnrechargeTrigger_descriptor_ = file->message_type(7);
  static const int Sheet_rechargeReturnrechargeTrigger_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnrechargeTrigger, rechargereturnrechargetrigger_list_),
  };
  Sheet_rechargeReturnrechargeTrigger_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_rechargeReturnrechargeTrigger_descriptor_,
      Sheet_rechargeReturnrechargeTrigger::default_instance_,
      Sheet_rechargeReturnrechargeTrigger_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnrechargeTrigger, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnrechargeTrigger, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_rechargeReturnrechargeTrigger));
  rechargeReturnconstant_descriptor_ = file->message_type(8);
  static const int rechargeReturnconstant_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnconstant, constantid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnconstant, constantdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnconstant, stringdata_),
  };
  rechargeReturnconstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rechargeReturnconstant_descriptor_,
      rechargeReturnconstant::default_instance_,
      rechargeReturnconstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnconstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rechargeReturnconstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rechargeReturnconstant));
  Sheet_rechargeReturnconstant_descriptor_ = file->message_type(9);
  static const int Sheet_rechargeReturnconstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnconstant, rechargereturnconstant_list_),
  };
  Sheet_rechargeReturnconstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_rechargeReturnconstant_descriptor_,
      Sheet_rechargeReturnconstant::default_instance_,
      Sheet_rechargeReturnconstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnconstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_rechargeReturnconstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_rechargeReturnconstant));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rechargeReturn_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rechargeReturnrechargeReturn_descriptor_, &rechargeReturnrechargeReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_rechargeReturnrechargeReturn_descriptor_, &Sheet_rechargeReturnrechargeReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rechargeReturntime_descriptor_, &rechargeReturntime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_rechargeReturntime_descriptor_, &Sheet_rechargeReturntime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rechargeReturncontinuousReturn_descriptor_, &rechargeReturncontinuousReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_rechargeReturncontinuousReturn_descriptor_, &Sheet_rechargeReturncontinuousReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rechargeReturnrechargeTrigger_descriptor_, &rechargeReturnrechargeTrigger::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_rechargeReturnrechargeTrigger_descriptor_, &Sheet_rechargeReturnrechargeTrigger::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rechargeReturnconstant_descriptor_, &rechargeReturnconstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_rechargeReturnconstant_descriptor_, &Sheet_rechargeReturnconstant::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rechargeReturn_2eproto() {
  delete rechargeReturnrechargeReturn::default_instance_;
  delete rechargeReturnrechargeReturn_reflection_;
  delete Sheet_rechargeReturnrechargeReturn::default_instance_;
  delete Sheet_rechargeReturnrechargeReturn_reflection_;
  delete rechargeReturntime::default_instance_;
  delete rechargeReturntime_reflection_;
  delete Sheet_rechargeReturntime::default_instance_;
  delete Sheet_rechargeReturntime_reflection_;
  delete rechargeReturncontinuousReturn::default_instance_;
  delete rechargeReturncontinuousReturn_reflection_;
  delete Sheet_rechargeReturncontinuousReturn::default_instance_;
  delete Sheet_rechargeReturncontinuousReturn_reflection_;
  delete rechargeReturnrechargeTrigger::default_instance_;
  delete rechargeReturnrechargeTrigger_reflection_;
  delete Sheet_rechargeReturnrechargeTrigger::default_instance_;
  delete Sheet_rechargeReturnrechargeTrigger_reflection_;
  delete rechargeReturnconstant::default_instance_;
  delete rechargeReturnconstant_reflection_;
  delete Sheet_rechargeReturnconstant::default_instance_;
  delete Sheet_rechargeReturnconstant_reflection_;
}

void protobuf_AddDesc_rechargeReturn_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024rechargeReturn.proto\022\010proto_ff\032\025yd_fie"
    "ldoptions.proto\"\333\001\n\034rechargeReturnrechar"
    "geReturn\022\022\n\002id\030\001 \001(\005B\006\302\377\024\002id\022\026\n\005group\030\002 "
    "\001(\005B\007\302\377\024\003\347\273\204\022$\n\007minLine\030\003 \001(\005B\023\302\377\024\017\346\277\200\346\264"
    "\273\345\205\205\345\200\274\347\202\271\022-\n\rdiamondRRatio\030\004 \001(\005B\026\302\377\024\022\351"
    "\222\273\347\237\263\350\277\224\350\277\230\346\257\224\344\276\213\022\034\n\006timeID\030\005 \001(\005B\014\302\377\024\010\346"
    "\227\266\351\227\264id\022\034\n\006mailID\030\006 \001(\003B\014\302\377\024\010\351\202\256\344\273\266id\"}\n"
    "\"Sheet_rechargeReturnrechargeReturn\022W\n!r"
    "echargeReturnrechargeReturn_List\030\001 \003(\0132&"
    ".proto_ff.rechargeReturnrechargeReturnB\004"
    "\210\301\024p\"\226\001\n\022rechargeReturntime\022\022\n\002id\030\001 \001(\005B"
    "\006\302\377\024\002id\022\"\n\010timeType\030\002 \001(\005B\020\302\377\024\014\346\227\266\351\227\264\347\261\273"
    "\345\236\213\022#\n\005timeA\030\003 \001(\tB\024\302\377\024\014\345\274\200\345\247\213\346\227\266\351\227\264\220\301\024 "
    "\022#\n\005timeB\030\004 \001(\tB\024\302\377\024\014\347\273\223\346\235\237\346\227\266\351\227\264\220\301\024 \"_\n"
    "\030Sheet_rechargeReturntime\022C\n\027rechargeRet"
    "urntime_List\030\001 \003(\0132\034.proto_ff.rechargeRe"
    "turntimeB\004\210\301\024m\"a\n\036rechargeReturncontinuo"
    "usReturn\022\036\n\004Gear\030\001 \001(\005B\020\302\377\024\014\345\244\251\346\225\260\346\241\243\344\275\215"
    "\022\037\n\005boxid\030\002 \001(\003B\020\302\377\024\014\345\217\221\351\200\201\345\245\226\345\212\261\"\203\001\n$Sh"
    "eet_rechargeReturncontinuousReturn\022[\n#re"
    "chargeReturncontinuousReturn_List\030\001 \003(\0132"
    "(.proto_ff.rechargeReturncontinuousRetur"
    "nB\004\210\301\024m\"\327\002\n\035rechargeReturnrechargeTrigge"
    "r\022\022\n\002id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\010timeType\030\002 \001(\005B"
    "\020\302\377\024\014\346\227\266\351\227\264\347\261\273\345\236\213\022#\n\005timeA\030\003 \001(\tB\024\302\377\024\014\345\274"
    "\200\345\247\213\346\227\266\351\227\264\220\301\024 \022#\n\005timeB\030\004 \001(\tB\024\302\377\024\014\347\273\223\346\235"
    "\237\346\227\266\351\227\264\220\301\024 \022%\n\005reset\030\005 \001(\005B\026\302\377\024\022\346\230\257\345\220\246\346\257"
    "\217\346\227\245\351\207\215\347\275\256\022%\n\013triggerType\030\006 \001(\005B\020\302\377\024\014\350\247\246"
    "\345\217\221\347\261\273\345\236\213\022\'\n\014TriggerValue\030\007 \001(\tB\021\302\377\024\t\350\247\246"
    "\345\217\221\345\200\274\220\301\024Z\022\037\n\005boxId\030\010 \001(\003B\020\302\377\024\014\345\217\221\351\200\201\345\245\226"
    "\345\212\261\022\034\n\006mailId\030\t \001(\003B\014\302\377\024\010\351\202\256\344\273\266id\"\201\001\n#Sh"
    "eet_rechargeReturnrechargeTrigger\022Z\n\"rec"
    "hargeReturnrechargeTrigger_List\030\001 \003(\0132\'."
    "proto_ff.rechargeReturnrechargeTriggerB\005"
    "\210\301\024\215\001\"\211\001\n\026rechargeReturnconstant\022 \n\ncons"
    "tantid\030\001 \001(\003B\014\302\377\024\010\351\205\215\347\275\256id\022 \n\014constantda"
    "ta\030\002 \001(\003B\n\302\377\024\006\346\225\260\346\215\256\022+\n\nstringdata\030\003 \001(\t"
    "B\027\302\377\024\017\345\255\227\347\254\246\344\270\262\346\225\260\346\215\256\220\301\024 \"k\n\034Sheet_recha"
    "rgeReturnconstant\022K\n\033rechargeReturnconst"
    "ant_List\030\001 \003(\0132 .proto_ff.rechargeReturn"
    "constantB\004\210\301\024i", 1614);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rechargeReturn.proto", &protobuf_RegisterTypes);
  rechargeReturnrechargeReturn::default_instance_ = new rechargeReturnrechargeReturn();
  Sheet_rechargeReturnrechargeReturn::default_instance_ = new Sheet_rechargeReturnrechargeReturn();
  rechargeReturntime::default_instance_ = new rechargeReturntime();
  Sheet_rechargeReturntime::default_instance_ = new Sheet_rechargeReturntime();
  rechargeReturncontinuousReturn::default_instance_ = new rechargeReturncontinuousReturn();
  Sheet_rechargeReturncontinuousReturn::default_instance_ = new Sheet_rechargeReturncontinuousReturn();
  rechargeReturnrechargeTrigger::default_instance_ = new rechargeReturnrechargeTrigger();
  Sheet_rechargeReturnrechargeTrigger::default_instance_ = new Sheet_rechargeReturnrechargeTrigger();
  rechargeReturnconstant::default_instance_ = new rechargeReturnconstant();
  Sheet_rechargeReturnconstant::default_instance_ = new Sheet_rechargeReturnconstant();
  rechargeReturnrechargeReturn::default_instance_->InitAsDefaultInstance();
  Sheet_rechargeReturnrechargeReturn::default_instance_->InitAsDefaultInstance();
  rechargeReturntime::default_instance_->InitAsDefaultInstance();
  Sheet_rechargeReturntime::default_instance_->InitAsDefaultInstance();
  rechargeReturncontinuousReturn::default_instance_->InitAsDefaultInstance();
  Sheet_rechargeReturncontinuousReturn::default_instance_->InitAsDefaultInstance();
  rechargeReturnrechargeTrigger::default_instance_->InitAsDefaultInstance();
  Sheet_rechargeReturnrechargeTrigger::default_instance_->InitAsDefaultInstance();
  rechargeReturnconstant::default_instance_->InitAsDefaultInstance();
  Sheet_rechargeReturnconstant::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rechargeReturn_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rechargeReturn_2eproto {
  StaticDescriptorInitializer_rechargeReturn_2eproto() {
    protobuf_AddDesc_rechargeReturn_2eproto();
  }
} static_descriptor_initializer_rechargeReturn_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int rechargeReturnrechargeReturn::kIdFieldNumber;
const int rechargeReturnrechargeReturn::kGroupFieldNumber;
const int rechargeReturnrechargeReturn::kMinLineFieldNumber;
const int rechargeReturnrechargeReturn::kDiamondRRatioFieldNumber;
const int rechargeReturnrechargeReturn::kTimeIDFieldNumber;
const int rechargeReturnrechargeReturn::kMailIDFieldNumber;
#endif  // !_MSC_VER

rechargeReturnrechargeReturn::rechargeReturnrechargeReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void rechargeReturnrechargeReturn::InitAsDefaultInstance() {
}

rechargeReturnrechargeReturn::rechargeReturnrechargeReturn(const rechargeReturnrechargeReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void rechargeReturnrechargeReturn::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  group_ = 0;
  minline_ = 0;
  diamondrratio_ = 0;
  timeid_ = 0;
  mailid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rechargeReturnrechargeReturn::~rechargeReturnrechargeReturn() {
  SharedDtor();
}

void rechargeReturnrechargeReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rechargeReturnrechargeReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rechargeReturnrechargeReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rechargeReturnrechargeReturn_descriptor_;
}

const rechargeReturnrechargeReturn& rechargeReturnrechargeReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

rechargeReturnrechargeReturn* rechargeReturnrechargeReturn::default_instance_ = NULL;

rechargeReturnrechargeReturn* rechargeReturnrechargeReturn::New() const {
  return new rechargeReturnrechargeReturn;
}

void rechargeReturnrechargeReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    group_ = 0;
    minline_ = 0;
    diamondrratio_ = 0;
    timeid_ = 0;
    mailid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rechargeReturnrechargeReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_group;
        break;
      }

      // optional int32 group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_minLine;
        break;
      }

      // optional int32 minLine = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minLine:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minline_)));
          set_has_minline();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_diamondRRatio;
        break;
      }

      // optional int32 diamondRRatio = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_diamondRRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diamondrratio_)));
          set_has_diamondrratio();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_timeID;
        break;
      }

      // optional int32 timeID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeid_)));
          set_has_timeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_mailID;
        break;
      }

      // optional int64 mailID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mailID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mailid_)));
          set_has_mailid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void rechargeReturnrechargeReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 group = 2;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group(), output);
  }

  // optional int32 minLine = 3;
  if (has_minline()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minline(), output);
  }

  // optional int32 diamondRRatio = 4;
  if (has_diamondrratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->diamondrratio(), output);
  }

  // optional int32 timeID = 5;
  if (has_timeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->timeid(), output);
  }

  // optional int64 mailID = 6;
  if (has_mailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->mailid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* rechargeReturnrechargeReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 group = 2;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group(), target);
  }

  // optional int32 minLine = 3;
  if (has_minline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minline(), target);
  }

  // optional int32 diamondRRatio = 4;
  if (has_diamondrratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->diamondrratio(), target);
  }

  // optional int32 timeID = 5;
  if (has_timeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->timeid(), target);
  }

  // optional int64 mailID = 6;
  if (has_mailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->mailid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int rechargeReturnrechargeReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 group = 2;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

    // optional int32 minLine = 3;
    if (has_minline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minline());
    }

    // optional int32 diamondRRatio = 4;
    if (has_diamondrratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->diamondrratio());
    }

    // optional int32 timeID = 5;
    if (has_timeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timeid());
    }

    // optional int64 mailID = 6;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mailid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rechargeReturnrechargeReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rechargeReturnrechargeReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rechargeReturnrechargeReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rechargeReturnrechargeReturn::MergeFrom(const rechargeReturnrechargeReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_minline()) {
      set_minline(from.minline());
    }
    if (from.has_diamondrratio()) {
      set_diamondrratio(from.diamondrratio());
    }
    if (from.has_timeid()) {
      set_timeid(from.timeid());
    }
    if (from.has_mailid()) {
      set_mailid(from.mailid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rechargeReturnrechargeReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rechargeReturnrechargeReturn::CopyFrom(const rechargeReturnrechargeReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rechargeReturnrechargeReturn::IsInitialized() const {

  return true;
}

void rechargeReturnrechargeReturn::Swap(rechargeReturnrechargeReturn* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(group_, other->group_);
    std::swap(minline_, other->minline_);
    std::swap(diamondrratio_, other->diamondrratio_);
    std::swap(timeid_, other->timeid_);
    std::swap(mailid_, other->mailid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rechargeReturnrechargeReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rechargeReturnrechargeReturn_descriptor_;
  metadata.reflection = rechargeReturnrechargeReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_rechargeReturnrechargeReturn::kRechargeReturnrechargeReturnListFieldNumber;
#endif  // !_MSC_VER

Sheet_rechargeReturnrechargeReturn::Sheet_rechargeReturnrechargeReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_rechargeReturnrechargeReturn::InitAsDefaultInstance() {
}

Sheet_rechargeReturnrechargeReturn::Sheet_rechargeReturnrechargeReturn(const Sheet_rechargeReturnrechargeReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_rechargeReturnrechargeReturn::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_rechargeReturnrechargeReturn::~Sheet_rechargeReturnrechargeReturn() {
  SharedDtor();
}

void Sheet_rechargeReturnrechargeReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_rechargeReturnrechargeReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_rechargeReturnrechargeReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_rechargeReturnrechargeReturn_descriptor_;
}

const Sheet_rechargeReturnrechargeReturn& Sheet_rechargeReturnrechargeReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

Sheet_rechargeReturnrechargeReturn* Sheet_rechargeReturnrechargeReturn::default_instance_ = NULL;

Sheet_rechargeReturnrechargeReturn* Sheet_rechargeReturnrechargeReturn::New() const {
  return new Sheet_rechargeReturnrechargeReturn;
}

void Sheet_rechargeReturnrechargeReturn::Clear() {
  rechargereturnrechargereturn_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_rechargeReturnrechargeReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.rechargeReturnrechargeReturn rechargeReturnrechargeReturn_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rechargeReturnrechargeReturn_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargereturnrechargereturn_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rechargeReturnrechargeReturn_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_rechargeReturnrechargeReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.rechargeReturnrechargeReturn rechargeReturnrechargeReturn_List = 1;
  for (int i = 0; i < this->rechargereturnrechargereturn_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargereturnrechargereturn_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_rechargeReturnrechargeReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.rechargeReturnrechargeReturn rechargeReturnrechargeReturn_List = 1;
  for (int i = 0; i < this->rechargereturnrechargereturn_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargereturnrechargereturn_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_rechargeReturnrechargeReturn::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.rechargeReturnrechargeReturn rechargeReturnrechargeReturn_List = 1;
  total_size += 1 * this->rechargereturnrechargereturn_list_size();
  for (int i = 0; i < this->rechargereturnrechargereturn_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargereturnrechargereturn_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_rechargeReturnrechargeReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_rechargeReturnrechargeReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_rechargeReturnrechargeReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_rechargeReturnrechargeReturn::MergeFrom(const Sheet_rechargeReturnrechargeReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargereturnrechargereturn_list_.MergeFrom(from.rechargereturnrechargereturn_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_rechargeReturnrechargeReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_rechargeReturnrechargeReturn::CopyFrom(const Sheet_rechargeReturnrechargeReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_rechargeReturnrechargeReturn::IsInitialized() const {

  return true;
}

void Sheet_rechargeReturnrechargeReturn::Swap(Sheet_rechargeReturnrechargeReturn* other) {
  if (other != this) {
    rechargereturnrechargereturn_list_.Swap(&other->rechargereturnrechargereturn_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_rechargeReturnrechargeReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_rechargeReturnrechargeReturn_descriptor_;
  metadata.reflection = Sheet_rechargeReturnrechargeReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rechargeReturntime::kIdFieldNumber;
const int rechargeReturntime::kTimeTypeFieldNumber;
const int rechargeReturntime::kTimeAFieldNumber;
const int rechargeReturntime::kTimeBFieldNumber;
#endif  // !_MSC_VER

rechargeReturntime::rechargeReturntime()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void rechargeReturntime::InitAsDefaultInstance() {
}

rechargeReturntime::rechargeReturntime(const rechargeReturntime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void rechargeReturntime::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  timetype_ = 0;
  timea_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timeb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rechargeReturntime::~rechargeReturntime() {
  SharedDtor();
}

void rechargeReturntime::SharedDtor() {
  if (timea_ != &::google::protobuf::internal::kEmptyString) {
    delete timea_;
  }
  if (timeb_ != &::google::protobuf::internal::kEmptyString) {
    delete timeb_;
  }
  if (this != default_instance_) {
  }
}

void rechargeReturntime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rechargeReturntime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rechargeReturntime_descriptor_;
}

const rechargeReturntime& rechargeReturntime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

rechargeReturntime* rechargeReturntime::default_instance_ = NULL;

rechargeReturntime* rechargeReturntime::New() const {
  return new rechargeReturntime;
}

void rechargeReturntime::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    timetype_ = 0;
    if (has_timea()) {
      if (timea_ != &::google::protobuf::internal::kEmptyString) {
        timea_->clear();
      }
    }
    if (has_timeb()) {
      if (timeb_ != &::google::protobuf::internal::kEmptyString) {
        timeb_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rechargeReturntime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_timeType;
        break;
      }

      // optional int32 timeType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timetype_)));
          set_has_timetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_timeA;
        break;
      }

      // optional string timeA = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timeA:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timea()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timea().data(), this->timea().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_timeB;
        break;
      }

      // optional string timeB = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timeB:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timeb().data(), this->timeb().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void rechargeReturntime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 timeType = 2;
  if (has_timetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timetype(), output);
  }

  // optional string timeA = 3;
  if (has_timea()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timea().data(), this->timea().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->timea(), output);
  }

  // optional string timeB = 4;
  if (has_timeb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timeb().data(), this->timeb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->timeb(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* rechargeReturntime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 timeType = 2;
  if (has_timetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timetype(), target);
  }

  // optional string timeA = 3;
  if (has_timea()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timea().data(), this->timea().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->timea(), target);
  }

  // optional string timeB = 4;
  if (has_timeb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timeb().data(), this->timeb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timeb(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int rechargeReturntime::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 timeType = 2;
    if (has_timetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timetype());
    }

    // optional string timeA = 3;
    if (has_timea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timea());
    }

    // optional string timeB = 4;
    if (has_timeb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timeb());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rechargeReturntime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rechargeReturntime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rechargeReturntime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rechargeReturntime::MergeFrom(const rechargeReturntime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_timetype()) {
      set_timetype(from.timetype());
    }
    if (from.has_timea()) {
      set_timea(from.timea());
    }
    if (from.has_timeb()) {
      set_timeb(from.timeb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rechargeReturntime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rechargeReturntime::CopyFrom(const rechargeReturntime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rechargeReturntime::IsInitialized() const {

  return true;
}

void rechargeReturntime::Swap(rechargeReturntime* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(timetype_, other->timetype_);
    std::swap(timea_, other->timea_);
    std::swap(timeb_, other->timeb_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rechargeReturntime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rechargeReturntime_descriptor_;
  metadata.reflection = rechargeReturntime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_rechargeReturntime::kRechargeReturntimeListFieldNumber;
#endif  // !_MSC_VER

Sheet_rechargeReturntime::Sheet_rechargeReturntime()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_rechargeReturntime::InitAsDefaultInstance() {
}

Sheet_rechargeReturntime::Sheet_rechargeReturntime(const Sheet_rechargeReturntime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_rechargeReturntime::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_rechargeReturntime::~Sheet_rechargeReturntime() {
  SharedDtor();
}

void Sheet_rechargeReturntime::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_rechargeReturntime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_rechargeReturntime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_rechargeReturntime_descriptor_;
}

const Sheet_rechargeReturntime& Sheet_rechargeReturntime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

Sheet_rechargeReturntime* Sheet_rechargeReturntime::default_instance_ = NULL;

Sheet_rechargeReturntime* Sheet_rechargeReturntime::New() const {
  return new Sheet_rechargeReturntime;
}

void Sheet_rechargeReturntime::Clear() {
  rechargereturntime_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_rechargeReturntime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.rechargeReturntime rechargeReturntime_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rechargeReturntime_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargereturntime_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rechargeReturntime_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_rechargeReturntime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.rechargeReturntime rechargeReturntime_List = 1;
  for (int i = 0; i < this->rechargereturntime_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargereturntime_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_rechargeReturntime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.rechargeReturntime rechargeReturntime_List = 1;
  for (int i = 0; i < this->rechargereturntime_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargereturntime_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_rechargeReturntime::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.rechargeReturntime rechargeReturntime_List = 1;
  total_size += 1 * this->rechargereturntime_list_size();
  for (int i = 0; i < this->rechargereturntime_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargereturntime_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_rechargeReturntime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_rechargeReturntime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_rechargeReturntime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_rechargeReturntime::MergeFrom(const Sheet_rechargeReturntime& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargereturntime_list_.MergeFrom(from.rechargereturntime_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_rechargeReturntime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_rechargeReturntime::CopyFrom(const Sheet_rechargeReturntime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_rechargeReturntime::IsInitialized() const {

  return true;
}

void Sheet_rechargeReturntime::Swap(Sheet_rechargeReturntime* other) {
  if (other != this) {
    rechargereturntime_list_.Swap(&other->rechargereturntime_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_rechargeReturntime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_rechargeReturntime_descriptor_;
  metadata.reflection = Sheet_rechargeReturntime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rechargeReturncontinuousReturn::kGearFieldNumber;
const int rechargeReturncontinuousReturn::kBoxidFieldNumber;
#endif  // !_MSC_VER

rechargeReturncontinuousReturn::rechargeReturncontinuousReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void rechargeReturncontinuousReturn::InitAsDefaultInstance() {
}

rechargeReturncontinuousReturn::rechargeReturncontinuousReturn(const rechargeReturncontinuousReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void rechargeReturncontinuousReturn::SharedCtor() {
  _cached_size_ = 0;
  gear_ = 0;
  boxid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rechargeReturncontinuousReturn::~rechargeReturncontinuousReturn() {
  SharedDtor();
}

void rechargeReturncontinuousReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rechargeReturncontinuousReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rechargeReturncontinuousReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rechargeReturncontinuousReturn_descriptor_;
}

const rechargeReturncontinuousReturn& rechargeReturncontinuousReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

rechargeReturncontinuousReturn* rechargeReturncontinuousReturn::default_instance_ = NULL;

rechargeReturncontinuousReturn* rechargeReturncontinuousReturn::New() const {
  return new rechargeReturncontinuousReturn;
}

void rechargeReturncontinuousReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gear_ = 0;
    boxid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rechargeReturncontinuousReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Gear = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gear_)));
          set_has_gear();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_boxid;
        break;
      }

      // optional int64 boxid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boxid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void rechargeReturncontinuousReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Gear = 1;
  if (has_gear()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gear(), output);
  }

  // optional int64 boxid = 2;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->boxid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* rechargeReturncontinuousReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Gear = 1;
  if (has_gear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gear(), target);
  }

  // optional int64 boxid = 2;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->boxid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int rechargeReturncontinuousReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Gear = 1;
    if (has_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gear());
    }

    // optional int64 boxid = 2;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boxid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rechargeReturncontinuousReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rechargeReturncontinuousReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rechargeReturncontinuousReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rechargeReturncontinuousReturn::MergeFrom(const rechargeReturncontinuousReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gear()) {
      set_gear(from.gear());
    }
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rechargeReturncontinuousReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rechargeReturncontinuousReturn::CopyFrom(const rechargeReturncontinuousReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rechargeReturncontinuousReturn::IsInitialized() const {

  return true;
}

void rechargeReturncontinuousReturn::Swap(rechargeReturncontinuousReturn* other) {
  if (other != this) {
    std::swap(gear_, other->gear_);
    std::swap(boxid_, other->boxid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rechargeReturncontinuousReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rechargeReturncontinuousReturn_descriptor_;
  metadata.reflection = rechargeReturncontinuousReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_rechargeReturncontinuousReturn::kRechargeReturncontinuousReturnListFieldNumber;
#endif  // !_MSC_VER

Sheet_rechargeReturncontinuousReturn::Sheet_rechargeReturncontinuousReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_rechargeReturncontinuousReturn::InitAsDefaultInstance() {
}

Sheet_rechargeReturncontinuousReturn::Sheet_rechargeReturncontinuousReturn(const Sheet_rechargeReturncontinuousReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_rechargeReturncontinuousReturn::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_rechargeReturncontinuousReturn::~Sheet_rechargeReturncontinuousReturn() {
  SharedDtor();
}

void Sheet_rechargeReturncontinuousReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_rechargeReturncontinuousReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_rechargeReturncontinuousReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_rechargeReturncontinuousReturn_descriptor_;
}

const Sheet_rechargeReturncontinuousReturn& Sheet_rechargeReturncontinuousReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

Sheet_rechargeReturncontinuousReturn* Sheet_rechargeReturncontinuousReturn::default_instance_ = NULL;

Sheet_rechargeReturncontinuousReturn* Sheet_rechargeReturncontinuousReturn::New() const {
  return new Sheet_rechargeReturncontinuousReturn;
}

void Sheet_rechargeReturncontinuousReturn::Clear() {
  rechargereturncontinuousreturn_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_rechargeReturncontinuousReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.rechargeReturncontinuousReturn rechargeReturncontinuousReturn_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rechargeReturncontinuousReturn_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargereturncontinuousreturn_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rechargeReturncontinuousReturn_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_rechargeReturncontinuousReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.rechargeReturncontinuousReturn rechargeReturncontinuousReturn_List = 1;
  for (int i = 0; i < this->rechargereturncontinuousreturn_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargereturncontinuousreturn_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_rechargeReturncontinuousReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.rechargeReturncontinuousReturn rechargeReturncontinuousReturn_List = 1;
  for (int i = 0; i < this->rechargereturncontinuousreturn_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargereturncontinuousreturn_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_rechargeReturncontinuousReturn::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.rechargeReturncontinuousReturn rechargeReturncontinuousReturn_List = 1;
  total_size += 1 * this->rechargereturncontinuousreturn_list_size();
  for (int i = 0; i < this->rechargereturncontinuousreturn_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargereturncontinuousreturn_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_rechargeReturncontinuousReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_rechargeReturncontinuousReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_rechargeReturncontinuousReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_rechargeReturncontinuousReturn::MergeFrom(const Sheet_rechargeReturncontinuousReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargereturncontinuousreturn_list_.MergeFrom(from.rechargereturncontinuousreturn_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_rechargeReturncontinuousReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_rechargeReturncontinuousReturn::CopyFrom(const Sheet_rechargeReturncontinuousReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_rechargeReturncontinuousReturn::IsInitialized() const {

  return true;
}

void Sheet_rechargeReturncontinuousReturn::Swap(Sheet_rechargeReturncontinuousReturn* other) {
  if (other != this) {
    rechargereturncontinuousreturn_list_.Swap(&other->rechargereturncontinuousreturn_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_rechargeReturncontinuousReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_rechargeReturncontinuousReturn_descriptor_;
  metadata.reflection = Sheet_rechargeReturncontinuousReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rechargeReturnrechargeTrigger::kIdFieldNumber;
const int rechargeReturnrechargeTrigger::kTimeTypeFieldNumber;
const int rechargeReturnrechargeTrigger::kTimeAFieldNumber;
const int rechargeReturnrechargeTrigger::kTimeBFieldNumber;
const int rechargeReturnrechargeTrigger::kResetFieldNumber;
const int rechargeReturnrechargeTrigger::kTriggerTypeFieldNumber;
const int rechargeReturnrechargeTrigger::kTriggerValueFieldNumber;
const int rechargeReturnrechargeTrigger::kBoxIdFieldNumber;
const int rechargeReturnrechargeTrigger::kMailIdFieldNumber;
#endif  // !_MSC_VER

rechargeReturnrechargeTrigger::rechargeReturnrechargeTrigger()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void rechargeReturnrechargeTrigger::InitAsDefaultInstance() {
}

rechargeReturnrechargeTrigger::rechargeReturnrechargeTrigger(const rechargeReturnrechargeTrigger& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void rechargeReturnrechargeTrigger::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  timetype_ = 0;
  timea_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timeb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reset_ = 0;
  triggertype_ = 0;
  triggervalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  boxid_ = GOOGLE_LONGLONG(0);
  mailid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rechargeReturnrechargeTrigger::~rechargeReturnrechargeTrigger() {
  SharedDtor();
}

void rechargeReturnrechargeTrigger::SharedDtor() {
  if (timea_ != &::google::protobuf::internal::kEmptyString) {
    delete timea_;
  }
  if (timeb_ != &::google::protobuf::internal::kEmptyString) {
    delete timeb_;
  }
  if (triggervalue_ != &::google::protobuf::internal::kEmptyString) {
    delete triggervalue_;
  }
  if (this != default_instance_) {
  }
}

void rechargeReturnrechargeTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rechargeReturnrechargeTrigger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rechargeReturnrechargeTrigger_descriptor_;
}

const rechargeReturnrechargeTrigger& rechargeReturnrechargeTrigger::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

rechargeReturnrechargeTrigger* rechargeReturnrechargeTrigger::default_instance_ = NULL;

rechargeReturnrechargeTrigger* rechargeReturnrechargeTrigger::New() const {
  return new rechargeReturnrechargeTrigger;
}

void rechargeReturnrechargeTrigger::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    timetype_ = 0;
    if (has_timea()) {
      if (timea_ != &::google::protobuf::internal::kEmptyString) {
        timea_->clear();
      }
    }
    if (has_timeb()) {
      if (timeb_ != &::google::protobuf::internal::kEmptyString) {
        timeb_->clear();
      }
    }
    reset_ = 0;
    triggertype_ = 0;
    if (has_triggervalue()) {
      if (triggervalue_ != &::google::protobuf::internal::kEmptyString) {
        triggervalue_->clear();
      }
    }
    boxid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    mailid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rechargeReturnrechargeTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_timeType;
        break;
      }

      // optional int32 timeType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timetype_)));
          set_has_timetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_timeA;
        break;
      }

      // optional string timeA = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timeA:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timea()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timea().data(), this->timea().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_timeB;
        break;
      }

      // optional string timeB = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timeB:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timeb().data(), this->timeb().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reset;
        break;
      }

      // optional int32 reset = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_)));
          set_has_reset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_triggerType;
        break;
      }

      // optional int32 triggerType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_triggerType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &triggertype_)));
          set_has_triggertype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_TriggerValue;
        break;
      }

      // optional string TriggerValue = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TriggerValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_triggervalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->triggervalue().data(), this->triggervalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_boxId;
        break;
      }

      // optional int64 boxId = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boxId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_mailId;
        break;
      }

      // optional int64 mailId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mailId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mailid_)));
          set_has_mailid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void rechargeReturnrechargeTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 timeType = 2;
  if (has_timetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timetype(), output);
  }

  // optional string timeA = 3;
  if (has_timea()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timea().data(), this->timea().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->timea(), output);
  }

  // optional string timeB = 4;
  if (has_timeb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timeb().data(), this->timeb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->timeb(), output);
  }

  // optional int32 reset = 5;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->reset(), output);
  }

  // optional int32 triggerType = 6;
  if (has_triggertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->triggertype(), output);
  }

  // optional string TriggerValue = 7;
  if (has_triggervalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->triggervalue().data(), this->triggervalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->triggervalue(), output);
  }

  // optional int64 boxId = 8;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->boxid(), output);
  }

  // optional int64 mailId = 9;
  if (has_mailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->mailid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* rechargeReturnrechargeTrigger::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 timeType = 2;
  if (has_timetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timetype(), target);
  }

  // optional string timeA = 3;
  if (has_timea()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timea().data(), this->timea().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->timea(), target);
  }

  // optional string timeB = 4;
  if (has_timeb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timeb().data(), this->timeb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timeb(), target);
  }

  // optional int32 reset = 5;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->reset(), target);
  }

  // optional int32 triggerType = 6;
  if (has_triggertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->triggertype(), target);
  }

  // optional string TriggerValue = 7;
  if (has_triggervalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->triggervalue().data(), this->triggervalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->triggervalue(), target);
  }

  // optional int64 boxId = 8;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->boxid(), target);
  }

  // optional int64 mailId = 9;
  if (has_mailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->mailid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int rechargeReturnrechargeTrigger::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 timeType = 2;
    if (has_timetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timetype());
    }

    // optional string timeA = 3;
    if (has_timea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timea());
    }

    // optional string timeB = 4;
    if (has_timeb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timeb());
    }

    // optional int32 reset = 5;
    if (has_reset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset());
    }

    // optional int32 triggerType = 6;
    if (has_triggertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->triggertype());
    }

    // optional string TriggerValue = 7;
    if (has_triggervalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->triggervalue());
    }

    // optional int64 boxId = 8;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boxid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 mailId = 9;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mailid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rechargeReturnrechargeTrigger::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rechargeReturnrechargeTrigger* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rechargeReturnrechargeTrigger*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rechargeReturnrechargeTrigger::MergeFrom(const rechargeReturnrechargeTrigger& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_timetype()) {
      set_timetype(from.timetype());
    }
    if (from.has_timea()) {
      set_timea(from.timea());
    }
    if (from.has_timeb()) {
      set_timeb(from.timeb());
    }
    if (from.has_reset()) {
      set_reset(from.reset());
    }
    if (from.has_triggertype()) {
      set_triggertype(from.triggertype());
    }
    if (from.has_triggervalue()) {
      set_triggervalue(from.triggervalue());
    }
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mailid()) {
      set_mailid(from.mailid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rechargeReturnrechargeTrigger::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rechargeReturnrechargeTrigger::CopyFrom(const rechargeReturnrechargeTrigger& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rechargeReturnrechargeTrigger::IsInitialized() const {

  return true;
}

void rechargeReturnrechargeTrigger::Swap(rechargeReturnrechargeTrigger* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(timetype_, other->timetype_);
    std::swap(timea_, other->timea_);
    std::swap(timeb_, other->timeb_);
    std::swap(reset_, other->reset_);
    std::swap(triggertype_, other->triggertype_);
    std::swap(triggervalue_, other->triggervalue_);
    std::swap(boxid_, other->boxid_);
    std::swap(mailid_, other->mailid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rechargeReturnrechargeTrigger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rechargeReturnrechargeTrigger_descriptor_;
  metadata.reflection = rechargeReturnrechargeTrigger_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_rechargeReturnrechargeTrigger::kRechargeReturnrechargeTriggerListFieldNumber;
#endif  // !_MSC_VER

Sheet_rechargeReturnrechargeTrigger::Sheet_rechargeReturnrechargeTrigger()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_rechargeReturnrechargeTrigger::InitAsDefaultInstance() {
}

Sheet_rechargeReturnrechargeTrigger::Sheet_rechargeReturnrechargeTrigger(const Sheet_rechargeReturnrechargeTrigger& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_rechargeReturnrechargeTrigger::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_rechargeReturnrechargeTrigger::~Sheet_rechargeReturnrechargeTrigger() {
  SharedDtor();
}

void Sheet_rechargeReturnrechargeTrigger::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_rechargeReturnrechargeTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_rechargeReturnrechargeTrigger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_rechargeReturnrechargeTrigger_descriptor_;
}

const Sheet_rechargeReturnrechargeTrigger& Sheet_rechargeReturnrechargeTrigger::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

Sheet_rechargeReturnrechargeTrigger* Sheet_rechargeReturnrechargeTrigger::default_instance_ = NULL;

Sheet_rechargeReturnrechargeTrigger* Sheet_rechargeReturnrechargeTrigger::New() const {
  return new Sheet_rechargeReturnrechargeTrigger;
}

void Sheet_rechargeReturnrechargeTrigger::Clear() {
  rechargereturnrechargetrigger_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_rechargeReturnrechargeTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.rechargeReturnrechargeTrigger rechargeReturnrechargeTrigger_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rechargeReturnrechargeTrigger_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargereturnrechargetrigger_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rechargeReturnrechargeTrigger_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_rechargeReturnrechargeTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.rechargeReturnrechargeTrigger rechargeReturnrechargeTrigger_List = 1;
  for (int i = 0; i < this->rechargereturnrechargetrigger_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargereturnrechargetrigger_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_rechargeReturnrechargeTrigger::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.rechargeReturnrechargeTrigger rechargeReturnrechargeTrigger_List = 1;
  for (int i = 0; i < this->rechargereturnrechargetrigger_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargereturnrechargetrigger_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_rechargeReturnrechargeTrigger::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.rechargeReturnrechargeTrigger rechargeReturnrechargeTrigger_List = 1;
  total_size += 1 * this->rechargereturnrechargetrigger_list_size();
  for (int i = 0; i < this->rechargereturnrechargetrigger_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargereturnrechargetrigger_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_rechargeReturnrechargeTrigger::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_rechargeReturnrechargeTrigger* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_rechargeReturnrechargeTrigger*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_rechargeReturnrechargeTrigger::MergeFrom(const Sheet_rechargeReturnrechargeTrigger& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargereturnrechargetrigger_list_.MergeFrom(from.rechargereturnrechargetrigger_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_rechargeReturnrechargeTrigger::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_rechargeReturnrechargeTrigger::CopyFrom(const Sheet_rechargeReturnrechargeTrigger& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_rechargeReturnrechargeTrigger::IsInitialized() const {

  return true;
}

void Sheet_rechargeReturnrechargeTrigger::Swap(Sheet_rechargeReturnrechargeTrigger* other) {
  if (other != this) {
    rechargereturnrechargetrigger_list_.Swap(&other->rechargereturnrechargetrigger_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_rechargeReturnrechargeTrigger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_rechargeReturnrechargeTrigger_descriptor_;
  metadata.reflection = Sheet_rechargeReturnrechargeTrigger_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rechargeReturnconstant::kConstantidFieldNumber;
const int rechargeReturnconstant::kConstantdataFieldNumber;
const int rechargeReturnconstant::kStringdataFieldNumber;
#endif  // !_MSC_VER

rechargeReturnconstant::rechargeReturnconstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void rechargeReturnconstant::InitAsDefaultInstance() {
}

rechargeReturnconstant::rechargeReturnconstant(const rechargeReturnconstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void rechargeReturnconstant::SharedCtor() {
  _cached_size_ = 0;
  constantid_ = GOOGLE_LONGLONG(0);
  constantdata_ = GOOGLE_LONGLONG(0);
  stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rechargeReturnconstant::~rechargeReturnconstant() {
  SharedDtor();
}

void rechargeReturnconstant::SharedDtor() {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    delete stringdata_;
  }
  if (this != default_instance_) {
  }
}

void rechargeReturnconstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rechargeReturnconstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rechargeReturnconstant_descriptor_;
}

const rechargeReturnconstant& rechargeReturnconstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

rechargeReturnconstant* rechargeReturnconstant::default_instance_ = NULL;

rechargeReturnconstant* rechargeReturnconstant::New() const {
  return new rechargeReturnconstant;
}

void rechargeReturnconstant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    constantid_ = GOOGLE_LONGLONG(0);
    constantdata_ = GOOGLE_LONGLONG(0);
    if (has_stringdata()) {
      if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
        stringdata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rechargeReturnconstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 constantid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &constantid_)));
          set_has_constantid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_constantdata;
        break;
      }

      // optional int64 constantdata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_constantdata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &constantdata_)));
          set_has_constantdata();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_stringdata;
        break;
      }

      // optional string stringdata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stringdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stringdata().data(), this->stringdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void rechargeReturnconstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 constantid = 1;
  if (has_constantid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->constantid(), output);
  }

  // optional int64 constantdata = 2;
  if (has_constantdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->constantdata(), output);
  }

  // optional string stringdata = 3;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stringdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* rechargeReturnconstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 constantid = 1;
  if (has_constantid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->constantid(), target);
  }

  // optional int64 constantdata = 2;
  if (has_constantdata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->constantdata(), target);
  }

  // optional string stringdata = 3;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stringdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int rechargeReturnconstant::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 constantid = 1;
    if (has_constantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->constantid());
    }

    // optional int64 constantdata = 2;
    if (has_constantdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->constantdata());
    }

    // optional string stringdata = 3;
    if (has_stringdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rechargeReturnconstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rechargeReturnconstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rechargeReturnconstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rechargeReturnconstant::MergeFrom(const rechargeReturnconstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_constantid()) {
      set_constantid(from.constantid());
    }
    if (from.has_constantdata()) {
      set_constantdata(from.constantdata());
    }
    if (from.has_stringdata()) {
      set_stringdata(from.stringdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rechargeReturnconstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rechargeReturnconstant::CopyFrom(const rechargeReturnconstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rechargeReturnconstant::IsInitialized() const {

  return true;
}

void rechargeReturnconstant::Swap(rechargeReturnconstant* other) {
  if (other != this) {
    std::swap(constantid_, other->constantid_);
    std::swap(constantdata_, other->constantdata_);
    std::swap(stringdata_, other->stringdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rechargeReturnconstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rechargeReturnconstant_descriptor_;
  metadata.reflection = rechargeReturnconstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_rechargeReturnconstant::kRechargeReturnconstantListFieldNumber;
#endif  // !_MSC_VER

Sheet_rechargeReturnconstant::Sheet_rechargeReturnconstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_rechargeReturnconstant::InitAsDefaultInstance() {
}

Sheet_rechargeReturnconstant::Sheet_rechargeReturnconstant(const Sheet_rechargeReturnconstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_rechargeReturnconstant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_rechargeReturnconstant::~Sheet_rechargeReturnconstant() {
  SharedDtor();
}

void Sheet_rechargeReturnconstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_rechargeReturnconstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_rechargeReturnconstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_rechargeReturnconstant_descriptor_;
}

const Sheet_rechargeReturnconstant& Sheet_rechargeReturnconstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rechargeReturn_2eproto();
  return *default_instance_;
}

Sheet_rechargeReturnconstant* Sheet_rechargeReturnconstant::default_instance_ = NULL;

Sheet_rechargeReturnconstant* Sheet_rechargeReturnconstant::New() const {
  return new Sheet_rechargeReturnconstant;
}

void Sheet_rechargeReturnconstant::Clear() {
  rechargereturnconstant_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_rechargeReturnconstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.rechargeReturnconstant rechargeReturnconstant_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rechargeReturnconstant_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargereturnconstant_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rechargeReturnconstant_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_rechargeReturnconstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.rechargeReturnconstant rechargeReturnconstant_List = 1;
  for (int i = 0; i < this->rechargereturnconstant_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargereturnconstant_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_rechargeReturnconstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.rechargeReturnconstant rechargeReturnconstant_List = 1;
  for (int i = 0; i < this->rechargereturnconstant_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargereturnconstant_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_rechargeReturnconstant::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.rechargeReturnconstant rechargeReturnconstant_List = 1;
  total_size += 1 * this->rechargereturnconstant_list_size();
  for (int i = 0; i < this->rechargereturnconstant_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargereturnconstant_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_rechargeReturnconstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_rechargeReturnconstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_rechargeReturnconstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_rechargeReturnconstant::MergeFrom(const Sheet_rechargeReturnconstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargereturnconstant_list_.MergeFrom(from.rechargereturnconstant_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_rechargeReturnconstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_rechargeReturnconstant::CopyFrom(const Sheet_rechargeReturnconstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_rechargeReturnconstant::IsInitialized() const {

  return true;
}

void Sheet_rechargeReturnconstant::Swap(Sheet_rechargeReturnconstant* other) {
  if (other != this) {
    rechargereturnconstant_list_.Swap(&other->rechargereturnconstant_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_rechargeReturnconstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_rechargeReturnconstant_descriptor_;
  metadata.reflection = Sheet_rechargeReturnconstant_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
