// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: boss.proto

#ifndef PROTOBUF_boss_2eproto__INCLUDED
#define PROTOBUF_boss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_boss_2eproto();
void protobuf_AssignDesc_boss_2eproto();
void protobuf_ShutdownFile_boss_2eproto();

class bossrareItem;
class Sheet_bossrareItem;
class bossboss;
class Sheet_bossboss;
class bossbosstypegroupDesc;
class bossbosstype;
class Sheet_bossbosstype;
class bosslayer;
class Sheet_bosslayer;

// ===================================================================

class bossrareItem : public ::google::protobuf::Message {
 public:
  bossrareItem();
  virtual ~bossrareItem();

  bossrareItem(const bossrareItem& from);

  inline bossrareItem& operator=(const bossrareItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bossrareItem& default_instance();

  void Swap(bossrareItem* other);

  // implements Message ----------------------------------------------

  bossrareItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bossrareItem& from);
  void MergeFrom(const bossrareItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 top = 2;
  inline bool has_top() const;
  inline void clear_top();
  static const int kTopFieldNumber = 2;
  inline ::google::protobuf::int32 top() const;
  inline void set_top(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.bossrareItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_top();
  inline void clear_has_top();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 top_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static bossrareItem* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_bossrareItem : public ::google::protobuf::Message {
 public:
  Sheet_bossrareItem();
  virtual ~Sheet_bossrareItem();

  Sheet_bossrareItem(const Sheet_bossrareItem& from);

  inline Sheet_bossrareItem& operator=(const Sheet_bossrareItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_bossrareItem& default_instance();

  void Swap(Sheet_bossrareItem* other);

  // implements Message ----------------------------------------------

  Sheet_bossrareItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_bossrareItem& from);
  void MergeFrom(const Sheet_bossrareItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.bossrareItem bossrareItem_List = 1;
  inline int bossrareitem_list_size() const;
  inline void clear_bossrareitem_list();
  static const int kBossrareItemListFieldNumber = 1;
  inline const ::proto_ff::bossrareItem& bossrareitem_list(int index) const;
  inline ::proto_ff::bossrareItem* mutable_bossrareitem_list(int index);
  inline ::proto_ff::bossrareItem* add_bossrareitem_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossrareItem >&
      bossrareitem_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossrareItem >*
      mutable_bossrareitem_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_bossrareItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::bossrareItem > bossrareitem_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_bossrareItem* default_instance_;
};
// -------------------------------------------------------------------

class bossboss : public ::google::protobuf::Message {
 public:
  bossboss();
  virtual ~bossboss();

  bossboss(const bossboss& from);

  inline bossboss& operator=(const bossboss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bossboss& default_instance();

  void Swap(bossboss* other);

  // implements Message ----------------------------------------------

  bossboss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bossboss& from);
  void MergeFrom(const bossboss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 bossType = 2;
  inline bool has_bosstype() const;
  inline void clear_bosstype();
  static const int kBossTypeFieldNumber = 2;
  inline ::google::protobuf::int32 bosstype() const;
  inline void set_bosstype(::google::protobuf::int32 value);

  // optional int32 monsterID = 3;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsterIDFieldNumber = 3;
  inline ::google::protobuf::int32 monsterid() const;
  inline void set_monsterid(::google::protobuf::int32 value);

  // optional int32 classOrder = 4;
  inline bool has_classorder() const;
  inline void clear_classorder();
  static const int kClassOrderFieldNumber = 4;
  inline ::google::protobuf::int32 classorder() const;
  inline void set_classorder(::google::protobuf::int32 value);

  // optional int32 sceneOrder = 5;
  inline bool has_sceneorder() const;
  inline void clear_sceneorder();
  static const int kSceneOrderFieldNumber = 5;
  inline ::google::protobuf::int32 sceneorder() const;
  inline void set_sceneorder(::google::protobuf::int32 value);

  // optional int32 duplicateID = 6;
  inline bool has_duplicateid() const;
  inline void clear_duplicateid();
  static const int kDuplicateIDFieldNumber = 6;
  inline ::google::protobuf::int32 duplicateid() const;
  inline void set_duplicateid(::google::protobuf::int32 value);

  // optional int32 peaceMask = 7;
  inline bool has_peacemask() const;
  inline void clear_peacemask();
  static const int kPeaceMaskFieldNumber = 7;
  inline ::google::protobuf::int32 peacemask() const;
  inline void set_peacemask(::google::protobuf::int32 value);

  // optional int32 pointID = 8;
  inline bool has_pointid() const;
  inline void clear_pointid();
  static const int kPointIDFieldNumber = 8;
  inline ::google::protobuf::int32 pointid() const;
  inline void set_pointid(::google::protobuf::int32 value);

  // optional int32 group_type = 9;
  inline bool has_group_type() const;
  inline void clear_group_type();
  static const int kGroupTypeFieldNumber = 9;
  inline ::google::protobuf::int32 group_type() const;
  inline void set_group_type(::google::protobuf::int32 value);

  // optional int32 flashTime = 10;
  inline bool has_flashtime() const;
  inline void clear_flashtime();
  static const int kFlashTimeFieldNumber = 10;
  inline ::google::protobuf::int32 flashtime() const;
  inline void set_flashtime(::google::protobuf::int32 value);

  // optional int32 retrieveGiftID = 11;
  inline bool has_retrievegiftid() const;
  inline void clear_retrievegiftid();
  static const int kRetrieveGiftIDFieldNumber = 11;
  inline ::google::protobuf::int32 retrievegiftid() const;
  inline void set_retrievegiftid(::google::protobuf::int32 value);

  // optional int32 noTimes = 12;
  inline bool has_notimes() const;
  inline void clear_notimes();
  static const int kNoTimesFieldNumber = 12;
  inline ::google::protobuf::int32 notimes() const;
  inline void set_notimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.bossboss)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bosstype();
  inline void clear_has_bosstype();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_classorder();
  inline void clear_has_classorder();
  inline void set_has_sceneorder();
  inline void clear_has_sceneorder();
  inline void set_has_duplicateid();
  inline void clear_has_duplicateid();
  inline void set_has_peacemask();
  inline void clear_has_peacemask();
  inline void set_has_pointid();
  inline void clear_has_pointid();
  inline void set_has_group_type();
  inline void clear_has_group_type();
  inline void set_has_flashtime();
  inline void clear_has_flashtime();
  inline void set_has_retrievegiftid();
  inline void clear_has_retrievegiftid();
  inline void set_has_notimes();
  inline void clear_has_notimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 bosstype_;
  ::google::protobuf::int32 monsterid_;
  ::google::protobuf::int32 classorder_;
  ::google::protobuf::int32 sceneorder_;
  ::google::protobuf::int32 duplicateid_;
  ::google::protobuf::int32 peacemask_;
  ::google::protobuf::int32 pointid_;
  ::google::protobuf::int32 group_type_;
  ::google::protobuf::int32 flashtime_;
  ::google::protobuf::int32 retrievegiftid_;
  ::google::protobuf::int32 notimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static bossboss* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_bossboss : public ::google::protobuf::Message {
 public:
  Sheet_bossboss();
  virtual ~Sheet_bossboss();

  Sheet_bossboss(const Sheet_bossboss& from);

  inline Sheet_bossboss& operator=(const Sheet_bossboss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_bossboss& default_instance();

  void Swap(Sheet_bossboss* other);

  // implements Message ----------------------------------------------

  Sheet_bossboss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_bossboss& from);
  void MergeFrom(const Sheet_bossboss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.bossboss bossboss_List = 1;
  inline int bossboss_list_size() const;
  inline void clear_bossboss_list();
  static const int kBossbossListFieldNumber = 1;
  inline const ::proto_ff::bossboss& bossboss_list(int index) const;
  inline ::proto_ff::bossboss* mutable_bossboss_list(int index);
  inline ::proto_ff::bossboss* add_bossboss_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossboss >&
      bossboss_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossboss >*
      mutable_bossboss_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_bossboss)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::bossboss > bossboss_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_bossboss* default_instance_;
};
// -------------------------------------------------------------------

class bossbosstypegroupDesc : public ::google::protobuf::Message {
 public:
  bossbosstypegroupDesc();
  virtual ~bossbosstypegroupDesc();

  bossbosstypegroupDesc(const bossbosstypegroupDesc& from);

  inline bossbosstypegroupDesc& operator=(const bossbosstypegroupDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bossbosstypegroupDesc& default_instance();

  void Swap(bossbosstypegroupDesc* other);

  // implements Message ----------------------------------------------

  bossbosstypegroupDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bossbosstypegroupDesc& from);
  void MergeFrom(const bossbosstypegroupDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.bossbosstypegroupDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static bossbosstypegroupDesc* default_instance_;
};
// -------------------------------------------------------------------

class bossbosstype : public ::google::protobuf::Message {
 public:
  bossbosstype();
  virtual ~bossbosstype();

  bossbosstype(const bossbosstype& from);

  inline bossbosstype& operator=(const bossbosstype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bossbosstype& default_instance();

  void Swap(bossbosstype* other);

  // implements Message ----------------------------------------------

  bossbosstype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bossbosstype& from);
  void MergeFrom(const bossbosstype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bossType = 1;
  inline bool has_bosstype() const;
  inline void clear_bosstype();
  static const int kBossTypeFieldNumber = 1;
  inline ::google::protobuf::int32 bosstype() const;
  inline void set_bosstype(::google::protobuf::int32 value);

  // optional int32 mapType = 2;
  inline bool has_maptype() const;
  inline void clear_maptype();
  static const int kMapTypeFieldNumber = 2;
  inline ::google::protobuf::int32 maptype() const;
  inline void set_maptype(::google::protobuf::int32 value);

  // optional int32 functionId = 3;
  inline bool has_functionid() const;
  inline void clear_functionid();
  static const int kFunctionIdFieldNumber = 3;
  inline ::google::protobuf::int32 functionid() const;
  inline void set_functionid(::google::protobuf::int32 value);

  // optional int32 duplicateGroupID = 4;
  inline bool has_duplicategroupid() const;
  inline void clear_duplicategroupid();
  static const int kDuplicateGroupIDFieldNumber = 4;
  inline ::google::protobuf::int32 duplicategroupid() const;
  inline void set_duplicategroupid(::google::protobuf::int32 value);

  // optional int32 privilegeType = 5;
  inline bool has_privilegetype() const;
  inline void clear_privilegetype();
  static const int kPrivilegeTypeFieldNumber = 5;
  inline ::google::protobuf::int32 privilegetype() const;
  inline void set_privilegetype(::google::protobuf::int32 value);

  // optional int64 callingCardId = 6;
  inline bool has_callingcardid() const;
  inline void clear_callingcardid();
  static const int kCallingCardIdFieldNumber = 6;
  inline ::google::protobuf::int64 callingcardid() const;
  inline void set_callingcardid(::google::protobuf::int64 value);

  // optional int32 enterTimes = 7;
  inline bool has_entertimes() const;
  inline void clear_entertimes();
  static const int kEnterTimesFieldNumber = 7;
  inline ::google::protobuf::int32 entertimes() const;
  inline void set_entertimes(::google::protobuf::int32 value);

  // optional int32 costitem = 8;
  inline bool has_costitem() const;
  inline void clear_costitem();
  static const int kCostitemFieldNumber = 8;
  inline ::google::protobuf::int32 costitem() const;
  inline void set_costitem(::google::protobuf::int32 value);

  // optional string costnum = 9;
  inline bool has_costnum() const;
  inline void clear_costnum();
  static const int kCostnumFieldNumber = 9;
  inline const ::std::string& costnum() const;
  inline void set_costnum(const ::std::string& value);
  inline void set_costnum(const char* value);
  inline void set_costnum(const char* value, size_t size);
  inline ::std::string* mutable_costnum();
  inline ::std::string* release_costnum();
  inline void set_allocated_costnum(::std::string* costnum);

  // optional int32 bossTimes = 10;
  inline bool has_bosstimes() const;
  inline void clear_bosstimes();
  static const int kBossTimesFieldNumber = 10;
  inline ::google::protobuf::int32 bosstimes() const;
  inline void set_bosstimes(::google::protobuf::int32 value);

  // optional int32 addItemID = 11;
  inline bool has_additemid() const;
  inline void clear_additemid();
  static const int kAddItemIDFieldNumber = 11;
  inline ::google::protobuf::int32 additemid() const;
  inline void set_additemid(::google::protobuf::int32 value);

  // optional int32 canhelp = 12;
  inline bool has_canhelp() const;
  inline void clear_canhelp();
  static const int kCanhelpFieldNumber = 12;
  inline ::google::protobuf::int32 canhelp() const;
  inline void set_canhelp(::google::protobuf::int32 value);

  // optional int32 qkill = 13;
  inline bool has_qkill() const;
  inline void clear_qkill();
  static const int kQkillFieldNumber = 13;
  inline ::google::protobuf::int32 qkill() const;
  inline void set_qkill(::google::protobuf::int32 value);

  // optional int32 retrievedDays = 14;
  inline bool has_retrieveddays() const;
  inline void clear_retrieveddays();
  static const int kRetrievedDaysFieldNumber = 14;
  inline ::google::protobuf::int32 retrieveddays() const;
  inline void set_retrieveddays(::google::protobuf::int32 value);

  // optional int32 skill = 15;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 15;
  inline ::google::protobuf::int32 skill() const;
  inline void set_skill(::google::protobuf::int32 value);

  // repeated .proto_ff.bossbosstypegroupDesc group = 16;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 16;
  inline const ::proto_ff::bossbosstypegroupDesc& group(int index) const;
  inline ::proto_ff::bossbosstypegroupDesc* mutable_group(int index);
  inline ::proto_ff::bossbosstypegroupDesc* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstypegroupDesc >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstypegroupDesc >*
      mutable_group();

  // @@protoc_insertion_point(class_scope:proto_ff.bossbosstype)
 private:
  inline void set_has_bosstype();
  inline void clear_has_bosstype();
  inline void set_has_maptype();
  inline void clear_has_maptype();
  inline void set_has_functionid();
  inline void clear_has_functionid();
  inline void set_has_duplicategroupid();
  inline void clear_has_duplicategroupid();
  inline void set_has_privilegetype();
  inline void clear_has_privilegetype();
  inline void set_has_callingcardid();
  inline void clear_has_callingcardid();
  inline void set_has_entertimes();
  inline void clear_has_entertimes();
  inline void set_has_costitem();
  inline void clear_has_costitem();
  inline void set_has_costnum();
  inline void clear_has_costnum();
  inline void set_has_bosstimes();
  inline void clear_has_bosstimes();
  inline void set_has_additemid();
  inline void clear_has_additemid();
  inline void set_has_canhelp();
  inline void clear_has_canhelp();
  inline void set_has_qkill();
  inline void clear_has_qkill();
  inline void set_has_retrieveddays();
  inline void clear_has_retrieveddays();
  inline void set_has_skill();
  inline void clear_has_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bosstype_;
  ::google::protobuf::int32 maptype_;
  ::google::protobuf::int32 functionid_;
  ::google::protobuf::int32 duplicategroupid_;
  ::google::protobuf::int64 callingcardid_;
  ::google::protobuf::int32 privilegetype_;
  ::google::protobuf::int32 entertimes_;
  ::std::string* costnum_;
  ::google::protobuf::int32 costitem_;
  ::google::protobuf::int32 bosstimes_;
  ::google::protobuf::int32 additemid_;
  ::google::protobuf::int32 canhelp_;
  ::google::protobuf::int32 qkill_;
  ::google::protobuf::int32 retrieveddays_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstypegroupDesc > group_;
  ::google::protobuf::int32 skill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static bossbosstype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_bossbosstype : public ::google::protobuf::Message {
 public:
  Sheet_bossbosstype();
  virtual ~Sheet_bossbosstype();

  Sheet_bossbosstype(const Sheet_bossbosstype& from);

  inline Sheet_bossbosstype& operator=(const Sheet_bossbosstype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_bossbosstype& default_instance();

  void Swap(Sheet_bossbosstype* other);

  // implements Message ----------------------------------------------

  Sheet_bossbosstype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_bossbosstype& from);
  void MergeFrom(const Sheet_bossbosstype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.bossbosstype bossbosstype_List = 1;
  inline int bossbosstype_list_size() const;
  inline void clear_bossbosstype_list();
  static const int kBossbosstypeListFieldNumber = 1;
  inline const ::proto_ff::bossbosstype& bossbosstype_list(int index) const;
  inline ::proto_ff::bossbosstype* mutable_bossbosstype_list(int index);
  inline ::proto_ff::bossbosstype* add_bossbosstype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstype >&
      bossbosstype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstype >*
      mutable_bossbosstype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_bossbosstype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstype > bossbosstype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_bossbosstype* default_instance_;
};
// -------------------------------------------------------------------

class bosslayer : public ::google::protobuf::Message {
 public:
  bosslayer();
  virtual ~bosslayer();

  bosslayer(const bosslayer& from);

  inline bosslayer& operator=(const bosslayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bosslayer& default_instance();

  void Swap(bosslayer* other);

  // implements Message ----------------------------------------------

  bosslayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bosslayer& from);
  void MergeFrom(const bosslayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 bossType = 2;
  inline bool has_bosstype() const;
  inline void clear_bosstype();
  static const int kBossTypeFieldNumber = 2;
  inline ::google::protobuf::int32 bosstype() const;
  inline void set_bosstype(::google::protobuf::int32 value);

  // optional int32 order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string enterCondition = 5;
  inline bool has_entercondition() const;
  inline void clear_entercondition();
  static const int kEnterConditionFieldNumber = 5;
  inline const ::std::string& entercondition() const;
  inline void set_entercondition(const ::std::string& value);
  inline void set_entercondition(const char* value);
  inline void set_entercondition(const char* value, size_t size);
  inline ::std::string* mutable_entercondition();
  inline ::std::string* release_entercondition();
  inline void set_allocated_entercondition(::std::string* entercondition);

  // optional string unlockCondition = 6;
  inline bool has_unlockcondition() const;
  inline void clear_unlockcondition();
  static const int kUnlockConditionFieldNumber = 6;
  inline const ::std::string& unlockcondition() const;
  inline void set_unlockcondition(const ::std::string& value);
  inline void set_unlockcondition(const char* value);
  inline void set_unlockcondition(const char* value, size_t size);
  inline ::std::string* mutable_unlockcondition();
  inline ::std::string* release_unlockcondition();
  inline void set_allocated_unlockcondition(::std::string* unlockcondition);

  // optional int32 mapID = 7;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 7;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.bosslayer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bosstype();
  inline void clear_has_bosstype();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_entercondition();
  inline void clear_has_entercondition();
  inline void set_has_unlockcondition();
  inline void clear_has_unlockcondition();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 bosstype_;
  ::std::string* name_;
  ::std::string* entercondition_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::int32 mapid_;
  ::std::string* unlockcondition_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static bosslayer* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_bosslayer : public ::google::protobuf::Message {
 public:
  Sheet_bosslayer();
  virtual ~Sheet_bosslayer();

  Sheet_bosslayer(const Sheet_bosslayer& from);

  inline Sheet_bosslayer& operator=(const Sheet_bosslayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_bosslayer& default_instance();

  void Swap(Sheet_bosslayer* other);

  // implements Message ----------------------------------------------

  Sheet_bosslayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_bosslayer& from);
  void MergeFrom(const Sheet_bosslayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.bosslayer bosslayer_List = 1;
  inline int bosslayer_list_size() const;
  inline void clear_bosslayer_list();
  static const int kBosslayerListFieldNumber = 1;
  inline const ::proto_ff::bosslayer& bosslayer_list(int index) const;
  inline ::proto_ff::bosslayer* mutable_bosslayer_list(int index);
  inline ::proto_ff::bosslayer* add_bosslayer_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bosslayer >&
      bosslayer_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bosslayer >*
      mutable_bosslayer_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_bosslayer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::bosslayer > bosslayer_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_boss_2eproto();
  friend void protobuf_AssignDesc_boss_2eproto();
  friend void protobuf_ShutdownFile_boss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_bosslayer* default_instance_;
};
// ===================================================================


// ===================================================================

// bossrareItem

// optional int64 itemID = 1;
inline bool bossrareItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bossrareItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bossrareItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bossrareItem::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 bossrareItem::itemid() const {
  return itemid_;
}
inline void bossrareItem::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 top = 2;
inline bool bossrareItem::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bossrareItem::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bossrareItem::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bossrareItem::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline ::google::protobuf::int32 bossrareItem::top() const {
  return top_;
}
inline void bossrareItem::set_top(::google::protobuf::int32 value) {
  set_has_top();
  top_ = value;
}

// -------------------------------------------------------------------

// Sheet_bossrareItem

// repeated .proto_ff.bossrareItem bossrareItem_List = 1;
inline int Sheet_bossrareItem::bossrareitem_list_size() const {
  return bossrareitem_list_.size();
}
inline void Sheet_bossrareItem::clear_bossrareitem_list() {
  bossrareitem_list_.Clear();
}
inline const ::proto_ff::bossrareItem& Sheet_bossrareItem::bossrareitem_list(int index) const {
  return bossrareitem_list_.Get(index);
}
inline ::proto_ff::bossrareItem* Sheet_bossrareItem::mutable_bossrareitem_list(int index) {
  return bossrareitem_list_.Mutable(index);
}
inline ::proto_ff::bossrareItem* Sheet_bossrareItem::add_bossrareitem_list() {
  return bossrareitem_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossrareItem >&
Sheet_bossrareItem::bossrareitem_list() const {
  return bossrareitem_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossrareItem >*
Sheet_bossrareItem::mutable_bossrareitem_list() {
  return &bossrareitem_list_;
}

// -------------------------------------------------------------------

// bossboss

// optional int32 id = 1;
inline bool bossboss::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bossboss::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bossboss::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bossboss::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 bossboss::id() const {
  return id_;
}
inline void bossboss::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 bossType = 2;
inline bool bossboss::has_bosstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bossboss::set_has_bosstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bossboss::clear_has_bosstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bossboss::clear_bosstype() {
  bosstype_ = 0;
  clear_has_bosstype();
}
inline ::google::protobuf::int32 bossboss::bosstype() const {
  return bosstype_;
}
inline void bossboss::set_bosstype(::google::protobuf::int32 value) {
  set_has_bosstype();
  bosstype_ = value;
}

// optional int32 monsterID = 3;
inline bool bossboss::has_monsterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bossboss::set_has_monsterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bossboss::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bossboss::clear_monsterid() {
  monsterid_ = 0;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 bossboss::monsterid() const {
  return monsterid_;
}
inline void bossboss::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional int32 classOrder = 4;
inline bool bossboss::has_classorder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bossboss::set_has_classorder() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bossboss::clear_has_classorder() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bossboss::clear_classorder() {
  classorder_ = 0;
  clear_has_classorder();
}
inline ::google::protobuf::int32 bossboss::classorder() const {
  return classorder_;
}
inline void bossboss::set_classorder(::google::protobuf::int32 value) {
  set_has_classorder();
  classorder_ = value;
}

// optional int32 sceneOrder = 5;
inline bool bossboss::has_sceneorder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bossboss::set_has_sceneorder() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bossboss::clear_has_sceneorder() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bossboss::clear_sceneorder() {
  sceneorder_ = 0;
  clear_has_sceneorder();
}
inline ::google::protobuf::int32 bossboss::sceneorder() const {
  return sceneorder_;
}
inline void bossboss::set_sceneorder(::google::protobuf::int32 value) {
  set_has_sceneorder();
  sceneorder_ = value;
}

// optional int32 duplicateID = 6;
inline bool bossboss::has_duplicateid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bossboss::set_has_duplicateid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bossboss::clear_has_duplicateid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bossboss::clear_duplicateid() {
  duplicateid_ = 0;
  clear_has_duplicateid();
}
inline ::google::protobuf::int32 bossboss::duplicateid() const {
  return duplicateid_;
}
inline void bossboss::set_duplicateid(::google::protobuf::int32 value) {
  set_has_duplicateid();
  duplicateid_ = value;
}

// optional int32 peaceMask = 7;
inline bool bossboss::has_peacemask() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void bossboss::set_has_peacemask() {
  _has_bits_[0] |= 0x00000040u;
}
inline void bossboss::clear_has_peacemask() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void bossboss::clear_peacemask() {
  peacemask_ = 0;
  clear_has_peacemask();
}
inline ::google::protobuf::int32 bossboss::peacemask() const {
  return peacemask_;
}
inline void bossboss::set_peacemask(::google::protobuf::int32 value) {
  set_has_peacemask();
  peacemask_ = value;
}

// optional int32 pointID = 8;
inline bool bossboss::has_pointid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void bossboss::set_has_pointid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void bossboss::clear_has_pointid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void bossboss::clear_pointid() {
  pointid_ = 0;
  clear_has_pointid();
}
inline ::google::protobuf::int32 bossboss::pointid() const {
  return pointid_;
}
inline void bossboss::set_pointid(::google::protobuf::int32 value) {
  set_has_pointid();
  pointid_ = value;
}

// optional int32 group_type = 9;
inline bool bossboss::has_group_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void bossboss::set_has_group_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void bossboss::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void bossboss::clear_group_type() {
  group_type_ = 0;
  clear_has_group_type();
}
inline ::google::protobuf::int32 bossboss::group_type() const {
  return group_type_;
}
inline void bossboss::set_group_type(::google::protobuf::int32 value) {
  set_has_group_type();
  group_type_ = value;
}

// optional int32 flashTime = 10;
inline bool bossboss::has_flashtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void bossboss::set_has_flashtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void bossboss::clear_has_flashtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void bossboss::clear_flashtime() {
  flashtime_ = 0;
  clear_has_flashtime();
}
inline ::google::protobuf::int32 bossboss::flashtime() const {
  return flashtime_;
}
inline void bossboss::set_flashtime(::google::protobuf::int32 value) {
  set_has_flashtime();
  flashtime_ = value;
}

// optional int32 retrieveGiftID = 11;
inline bool bossboss::has_retrievegiftid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void bossboss::set_has_retrievegiftid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void bossboss::clear_has_retrievegiftid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void bossboss::clear_retrievegiftid() {
  retrievegiftid_ = 0;
  clear_has_retrievegiftid();
}
inline ::google::protobuf::int32 bossboss::retrievegiftid() const {
  return retrievegiftid_;
}
inline void bossboss::set_retrievegiftid(::google::protobuf::int32 value) {
  set_has_retrievegiftid();
  retrievegiftid_ = value;
}

// optional int32 noTimes = 12;
inline bool bossboss::has_notimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void bossboss::set_has_notimes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void bossboss::clear_has_notimes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void bossboss::clear_notimes() {
  notimes_ = 0;
  clear_has_notimes();
}
inline ::google::protobuf::int32 bossboss::notimes() const {
  return notimes_;
}
inline void bossboss::set_notimes(::google::protobuf::int32 value) {
  set_has_notimes();
  notimes_ = value;
}

// -------------------------------------------------------------------

// Sheet_bossboss

// repeated .proto_ff.bossboss bossboss_List = 1;
inline int Sheet_bossboss::bossboss_list_size() const {
  return bossboss_list_.size();
}
inline void Sheet_bossboss::clear_bossboss_list() {
  bossboss_list_.Clear();
}
inline const ::proto_ff::bossboss& Sheet_bossboss::bossboss_list(int index) const {
  return bossboss_list_.Get(index);
}
inline ::proto_ff::bossboss* Sheet_bossboss::mutable_bossboss_list(int index) {
  return bossboss_list_.Mutable(index);
}
inline ::proto_ff::bossboss* Sheet_bossboss::add_bossboss_list() {
  return bossboss_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossboss >&
Sheet_bossboss::bossboss_list() const {
  return bossboss_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossboss >*
Sheet_bossboss::mutable_bossboss_list() {
  return &bossboss_list_;
}

// -------------------------------------------------------------------

// bossbosstypegroupDesc

// optional int32 type = 1;
inline bool bossbosstypegroupDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bossbosstypegroupDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bossbosstypegroupDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bossbosstypegroupDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 bossbosstypegroupDesc::type() const {
  return type_;
}
inline void bossbosstypegroupDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 times = 2;
inline bool bossbosstypegroupDesc::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bossbosstypegroupDesc::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bossbosstypegroupDesc::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bossbosstypegroupDesc::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 bossbosstypegroupDesc::times() const {
  return times_;
}
inline void bossbosstypegroupDesc::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// bossbosstype

// optional int32 bossType = 1;
inline bool bossbosstype::has_bosstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bossbosstype::set_has_bosstype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bossbosstype::clear_has_bosstype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bossbosstype::clear_bosstype() {
  bosstype_ = 0;
  clear_has_bosstype();
}
inline ::google::protobuf::int32 bossbosstype::bosstype() const {
  return bosstype_;
}
inline void bossbosstype::set_bosstype(::google::protobuf::int32 value) {
  set_has_bosstype();
  bosstype_ = value;
}

// optional int32 mapType = 2;
inline bool bossbosstype::has_maptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bossbosstype::set_has_maptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bossbosstype::clear_has_maptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bossbosstype::clear_maptype() {
  maptype_ = 0;
  clear_has_maptype();
}
inline ::google::protobuf::int32 bossbosstype::maptype() const {
  return maptype_;
}
inline void bossbosstype::set_maptype(::google::protobuf::int32 value) {
  set_has_maptype();
  maptype_ = value;
}

// optional int32 functionId = 3;
inline bool bossbosstype::has_functionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bossbosstype::set_has_functionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bossbosstype::clear_has_functionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bossbosstype::clear_functionid() {
  functionid_ = 0;
  clear_has_functionid();
}
inline ::google::protobuf::int32 bossbosstype::functionid() const {
  return functionid_;
}
inline void bossbosstype::set_functionid(::google::protobuf::int32 value) {
  set_has_functionid();
  functionid_ = value;
}

// optional int32 duplicateGroupID = 4;
inline bool bossbosstype::has_duplicategroupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bossbosstype::set_has_duplicategroupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bossbosstype::clear_has_duplicategroupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bossbosstype::clear_duplicategroupid() {
  duplicategroupid_ = 0;
  clear_has_duplicategroupid();
}
inline ::google::protobuf::int32 bossbosstype::duplicategroupid() const {
  return duplicategroupid_;
}
inline void bossbosstype::set_duplicategroupid(::google::protobuf::int32 value) {
  set_has_duplicategroupid();
  duplicategroupid_ = value;
}

// optional int32 privilegeType = 5;
inline bool bossbosstype::has_privilegetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bossbosstype::set_has_privilegetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bossbosstype::clear_has_privilegetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bossbosstype::clear_privilegetype() {
  privilegetype_ = 0;
  clear_has_privilegetype();
}
inline ::google::protobuf::int32 bossbosstype::privilegetype() const {
  return privilegetype_;
}
inline void bossbosstype::set_privilegetype(::google::protobuf::int32 value) {
  set_has_privilegetype();
  privilegetype_ = value;
}

// optional int64 callingCardId = 6;
inline bool bossbosstype::has_callingcardid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bossbosstype::set_has_callingcardid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bossbosstype::clear_has_callingcardid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bossbosstype::clear_callingcardid() {
  callingcardid_ = GOOGLE_LONGLONG(0);
  clear_has_callingcardid();
}
inline ::google::protobuf::int64 bossbosstype::callingcardid() const {
  return callingcardid_;
}
inline void bossbosstype::set_callingcardid(::google::protobuf::int64 value) {
  set_has_callingcardid();
  callingcardid_ = value;
}

// optional int32 enterTimes = 7;
inline bool bossbosstype::has_entertimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void bossbosstype::set_has_entertimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void bossbosstype::clear_has_entertimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void bossbosstype::clear_entertimes() {
  entertimes_ = 0;
  clear_has_entertimes();
}
inline ::google::protobuf::int32 bossbosstype::entertimes() const {
  return entertimes_;
}
inline void bossbosstype::set_entertimes(::google::protobuf::int32 value) {
  set_has_entertimes();
  entertimes_ = value;
}

// optional int32 costitem = 8;
inline bool bossbosstype::has_costitem() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void bossbosstype::set_has_costitem() {
  _has_bits_[0] |= 0x00000080u;
}
inline void bossbosstype::clear_has_costitem() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void bossbosstype::clear_costitem() {
  costitem_ = 0;
  clear_has_costitem();
}
inline ::google::protobuf::int32 bossbosstype::costitem() const {
  return costitem_;
}
inline void bossbosstype::set_costitem(::google::protobuf::int32 value) {
  set_has_costitem();
  costitem_ = value;
}

// optional string costnum = 9;
inline bool bossbosstype::has_costnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void bossbosstype::set_has_costnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void bossbosstype::clear_has_costnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void bossbosstype::clear_costnum() {
  if (costnum_ != &::google::protobuf::internal::kEmptyString) {
    costnum_->clear();
  }
  clear_has_costnum();
}
inline const ::std::string& bossbosstype::costnum() const {
  return *costnum_;
}
inline void bossbosstype::set_costnum(const ::std::string& value) {
  set_has_costnum();
  if (costnum_ == &::google::protobuf::internal::kEmptyString) {
    costnum_ = new ::std::string;
  }
  costnum_->assign(value);
}
inline void bossbosstype::set_costnum(const char* value) {
  set_has_costnum();
  if (costnum_ == &::google::protobuf::internal::kEmptyString) {
    costnum_ = new ::std::string;
  }
  costnum_->assign(value);
}
inline void bossbosstype::set_costnum(const char* value, size_t size) {
  set_has_costnum();
  if (costnum_ == &::google::protobuf::internal::kEmptyString) {
    costnum_ = new ::std::string;
  }
  costnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* bossbosstype::mutable_costnum() {
  set_has_costnum();
  if (costnum_ == &::google::protobuf::internal::kEmptyString) {
    costnum_ = new ::std::string;
  }
  return costnum_;
}
inline ::std::string* bossbosstype::release_costnum() {
  clear_has_costnum();
  if (costnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = costnum_;
    costnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void bossbosstype::set_allocated_costnum(::std::string* costnum) {
  if (costnum_ != &::google::protobuf::internal::kEmptyString) {
    delete costnum_;
  }
  if (costnum) {
    set_has_costnum();
    costnum_ = costnum;
  } else {
    clear_has_costnum();
    costnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 bossTimes = 10;
inline bool bossbosstype::has_bosstimes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void bossbosstype::set_has_bosstimes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void bossbosstype::clear_has_bosstimes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void bossbosstype::clear_bosstimes() {
  bosstimes_ = 0;
  clear_has_bosstimes();
}
inline ::google::protobuf::int32 bossbosstype::bosstimes() const {
  return bosstimes_;
}
inline void bossbosstype::set_bosstimes(::google::protobuf::int32 value) {
  set_has_bosstimes();
  bosstimes_ = value;
}

// optional int32 addItemID = 11;
inline bool bossbosstype::has_additemid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void bossbosstype::set_has_additemid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void bossbosstype::clear_has_additemid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void bossbosstype::clear_additemid() {
  additemid_ = 0;
  clear_has_additemid();
}
inline ::google::protobuf::int32 bossbosstype::additemid() const {
  return additemid_;
}
inline void bossbosstype::set_additemid(::google::protobuf::int32 value) {
  set_has_additemid();
  additemid_ = value;
}

// optional int32 canhelp = 12;
inline bool bossbosstype::has_canhelp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void bossbosstype::set_has_canhelp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void bossbosstype::clear_has_canhelp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void bossbosstype::clear_canhelp() {
  canhelp_ = 0;
  clear_has_canhelp();
}
inline ::google::protobuf::int32 bossbosstype::canhelp() const {
  return canhelp_;
}
inline void bossbosstype::set_canhelp(::google::protobuf::int32 value) {
  set_has_canhelp();
  canhelp_ = value;
}

// optional int32 qkill = 13;
inline bool bossbosstype::has_qkill() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void bossbosstype::set_has_qkill() {
  _has_bits_[0] |= 0x00001000u;
}
inline void bossbosstype::clear_has_qkill() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void bossbosstype::clear_qkill() {
  qkill_ = 0;
  clear_has_qkill();
}
inline ::google::protobuf::int32 bossbosstype::qkill() const {
  return qkill_;
}
inline void bossbosstype::set_qkill(::google::protobuf::int32 value) {
  set_has_qkill();
  qkill_ = value;
}

// optional int32 retrievedDays = 14;
inline bool bossbosstype::has_retrieveddays() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void bossbosstype::set_has_retrieveddays() {
  _has_bits_[0] |= 0x00002000u;
}
inline void bossbosstype::clear_has_retrieveddays() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void bossbosstype::clear_retrieveddays() {
  retrieveddays_ = 0;
  clear_has_retrieveddays();
}
inline ::google::protobuf::int32 bossbosstype::retrieveddays() const {
  return retrieveddays_;
}
inline void bossbosstype::set_retrieveddays(::google::protobuf::int32 value) {
  set_has_retrieveddays();
  retrieveddays_ = value;
}

// optional int32 skill = 15;
inline bool bossbosstype::has_skill() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void bossbosstype::set_has_skill() {
  _has_bits_[0] |= 0x00004000u;
}
inline void bossbosstype::clear_has_skill() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void bossbosstype::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::google::protobuf::int32 bossbosstype::skill() const {
  return skill_;
}
inline void bossbosstype::set_skill(::google::protobuf::int32 value) {
  set_has_skill();
  skill_ = value;
}

// repeated .proto_ff.bossbosstypegroupDesc group = 16;
inline int bossbosstype::group_size() const {
  return group_.size();
}
inline void bossbosstype::clear_group() {
  group_.Clear();
}
inline const ::proto_ff::bossbosstypegroupDesc& bossbosstype::group(int index) const {
  return group_.Get(index);
}
inline ::proto_ff::bossbosstypegroupDesc* bossbosstype::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::proto_ff::bossbosstypegroupDesc* bossbosstype::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstypegroupDesc >&
bossbosstype::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstypegroupDesc >*
bossbosstype::mutable_group() {
  return &group_;
}

// -------------------------------------------------------------------

// Sheet_bossbosstype

// repeated .proto_ff.bossbosstype bossbosstype_List = 1;
inline int Sheet_bossbosstype::bossbosstype_list_size() const {
  return bossbosstype_list_.size();
}
inline void Sheet_bossbosstype::clear_bossbosstype_list() {
  bossbosstype_list_.Clear();
}
inline const ::proto_ff::bossbosstype& Sheet_bossbosstype::bossbosstype_list(int index) const {
  return bossbosstype_list_.Get(index);
}
inline ::proto_ff::bossbosstype* Sheet_bossbosstype::mutable_bossbosstype_list(int index) {
  return bossbosstype_list_.Mutable(index);
}
inline ::proto_ff::bossbosstype* Sheet_bossbosstype::add_bossbosstype_list() {
  return bossbosstype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstype >&
Sheet_bossbosstype::bossbosstype_list() const {
  return bossbosstype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bossbosstype >*
Sheet_bossbosstype::mutable_bossbosstype_list() {
  return &bossbosstype_list_;
}

// -------------------------------------------------------------------

// bosslayer

// optional int32 ID = 1;
inline bool bosslayer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bosslayer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bosslayer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bosslayer::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 bosslayer::id() const {
  return id_;
}
inline void bosslayer::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 bossType = 2;
inline bool bosslayer::has_bosstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bosslayer::set_has_bosstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bosslayer::clear_has_bosstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bosslayer::clear_bosstype() {
  bosstype_ = 0;
  clear_has_bosstype();
}
inline ::google::protobuf::int32 bosslayer::bosstype() const {
  return bosstype_;
}
inline void bosslayer::set_bosstype(::google::protobuf::int32 value) {
  set_has_bosstype();
  bosstype_ = value;
}

// optional int32 order = 3;
inline bool bosslayer::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void bosslayer::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
inline void bosslayer::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void bosslayer::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 bosslayer::order() const {
  return order_;
}
inline void bosslayer::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// optional string name = 4;
inline bool bosslayer::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void bosslayer::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void bosslayer::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void bosslayer::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& bosslayer::name() const {
  return *name_;
}
inline void bosslayer::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void bosslayer::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void bosslayer::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* bosslayer::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* bosslayer::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void bosslayer::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string enterCondition = 5;
inline bool bosslayer::has_entercondition() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void bosslayer::set_has_entercondition() {
  _has_bits_[0] |= 0x00000010u;
}
inline void bosslayer::clear_has_entercondition() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void bosslayer::clear_entercondition() {
  if (entercondition_ != &::google::protobuf::internal::kEmptyString) {
    entercondition_->clear();
  }
  clear_has_entercondition();
}
inline const ::std::string& bosslayer::entercondition() const {
  return *entercondition_;
}
inline void bosslayer::set_entercondition(const ::std::string& value) {
  set_has_entercondition();
  if (entercondition_ == &::google::protobuf::internal::kEmptyString) {
    entercondition_ = new ::std::string;
  }
  entercondition_->assign(value);
}
inline void bosslayer::set_entercondition(const char* value) {
  set_has_entercondition();
  if (entercondition_ == &::google::protobuf::internal::kEmptyString) {
    entercondition_ = new ::std::string;
  }
  entercondition_->assign(value);
}
inline void bosslayer::set_entercondition(const char* value, size_t size) {
  set_has_entercondition();
  if (entercondition_ == &::google::protobuf::internal::kEmptyString) {
    entercondition_ = new ::std::string;
  }
  entercondition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* bosslayer::mutable_entercondition() {
  set_has_entercondition();
  if (entercondition_ == &::google::protobuf::internal::kEmptyString) {
    entercondition_ = new ::std::string;
  }
  return entercondition_;
}
inline ::std::string* bosslayer::release_entercondition() {
  clear_has_entercondition();
  if (entercondition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = entercondition_;
    entercondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void bosslayer::set_allocated_entercondition(::std::string* entercondition) {
  if (entercondition_ != &::google::protobuf::internal::kEmptyString) {
    delete entercondition_;
  }
  if (entercondition) {
    set_has_entercondition();
    entercondition_ = entercondition;
  } else {
    clear_has_entercondition();
    entercondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string unlockCondition = 6;
inline bool bosslayer::has_unlockcondition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void bosslayer::set_has_unlockcondition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void bosslayer::clear_has_unlockcondition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void bosslayer::clear_unlockcondition() {
  if (unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
    unlockcondition_->clear();
  }
  clear_has_unlockcondition();
}
inline const ::std::string& bosslayer::unlockcondition() const {
  return *unlockcondition_;
}
inline void bosslayer::set_unlockcondition(const ::std::string& value) {
  set_has_unlockcondition();
  if (unlockcondition_ == &::google::protobuf::internal::kEmptyString) {
    unlockcondition_ = new ::std::string;
  }
  unlockcondition_->assign(value);
}
inline void bosslayer::set_unlockcondition(const char* value) {
  set_has_unlockcondition();
  if (unlockcondition_ == &::google::protobuf::internal::kEmptyString) {
    unlockcondition_ = new ::std::string;
  }
  unlockcondition_->assign(value);
}
inline void bosslayer::set_unlockcondition(const char* value, size_t size) {
  set_has_unlockcondition();
  if (unlockcondition_ == &::google::protobuf::internal::kEmptyString) {
    unlockcondition_ = new ::std::string;
  }
  unlockcondition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* bosslayer::mutable_unlockcondition() {
  set_has_unlockcondition();
  if (unlockcondition_ == &::google::protobuf::internal::kEmptyString) {
    unlockcondition_ = new ::std::string;
  }
  return unlockcondition_;
}
inline ::std::string* bosslayer::release_unlockcondition() {
  clear_has_unlockcondition();
  if (unlockcondition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unlockcondition_;
    unlockcondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void bosslayer::set_allocated_unlockcondition(::std::string* unlockcondition) {
  if (unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
    delete unlockcondition_;
  }
  if (unlockcondition) {
    set_has_unlockcondition();
    unlockcondition_ = unlockcondition;
  } else {
    clear_has_unlockcondition();
    unlockcondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 mapID = 7;
inline bool bosslayer::has_mapid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void bosslayer::set_has_mapid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void bosslayer::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void bosslayer::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 bosslayer::mapid() const {
  return mapid_;
}
inline void bosslayer::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// Sheet_bosslayer

// repeated .proto_ff.bosslayer bosslayer_List = 1;
inline int Sheet_bosslayer::bosslayer_list_size() const {
  return bosslayer_list_.size();
}
inline void Sheet_bosslayer::clear_bosslayer_list() {
  bosslayer_list_.Clear();
}
inline const ::proto_ff::bosslayer& Sheet_bosslayer::bosslayer_list(int index) const {
  return bosslayer_list_.Get(index);
}
inline ::proto_ff::bosslayer* Sheet_bosslayer::mutable_bosslayer_list(int index) {
  return bosslayer_list_.Mutable(index);
}
inline ::proto_ff::bosslayer* Sheet_bosslayer::add_bosslayer_list() {
  return bosslayer_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::bosslayer >&
Sheet_bosslayer::bosslayer_list() const {
  return bosslayer_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::bosslayer >*
Sheet_bosslayer::mutable_bosslayer_list() {
  return &bosslayer_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_boss_2eproto__INCLUDED
