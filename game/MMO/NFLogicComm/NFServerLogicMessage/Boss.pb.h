// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Boss.proto

#ifndef PROTOBUF_Boss_2eproto__INCLUDED
#define PROTOBUF_Boss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Boss_2eproto();
void protobuf_AssignDesc_Boss_2eproto();
void protobuf_ShutdownFile_Boss_2eproto();

class BossLastKillInfo;
class BossInfo;
class BossSimpleInfo;
class BossDropInfo;
class HarmoneyInfo;
class NotifyBossSimpleRsp;
class BossLayerReq;
class BossLayerRsp;
class HarmonyBossReq;
class HarmonyBossRsp;
class NotifyBossAttent;
class NotifyBossRefreshed;
class NotifySceneBossDataRsp;
class NotifySceneBossUpdateRsp;
class EnterBossMapReq;
class EnterBossMapRsp;
class AttentBossReq;
class AttentBossRsp;
class BossDropReq;
class BossDropRsp;
class NotifyBossResultRsp;
class BossKillReq;
class BossKillRsp;
class RunBossInfo;
class L2CUpdateBossReq;
class L2SUpdateBossReq;
class L2CSynAttentReq;
class C2SSynAttentReq;
class L2CKillBossInfoReq;
class L2SKillBossInfoReq;
class L2CDropRecordReq;
class C2SDropRecordReq;
class C2SBossLayerReq;
class L2CAttentOptReq;
class C2SAttentOptReq;
class C2SBossLogReq;

// ===================================================================

class BossLastKillInfo : public ::google::protobuf::Message {
 public:
  BossLastKillInfo();
  virtual ~BossLastKillInfo();

  BossLastKillInfo(const BossLastKillInfo& from);

  inline BossLastKillInfo& operator=(const BossLastKillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossLastKillInfo& default_instance();

  void Swap(BossLastKillInfo* other);

  // implements Message ----------------------------------------------

  BossLastKillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossLastKillInfo& from);
  void MergeFrom(const BossLastKillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossLastKillInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::std::string* name_;
  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossLastKillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BossInfo : public ::google::protobuf::Message {
 public:
  BossInfo();
  virtual ~BossInfo();

  BossInfo(const BossInfo& from);

  inline BossInfo& operator=(const BossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossInfo& default_instance();

  void Swap(BossInfo* other);

  // implements Message ----------------------------------------------

  BossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossInfo& from);
  void MergeFrom(const BossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional uint64 refresh_time = 3;
  inline bool has_refresh_time() const;
  inline void clear_refresh_time();
  static const int kRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 refresh_time() const;
  inline void set_refresh_time(::google::protobuf::uint64 value);

  // optional .proto_ff.BossLastKillInfo last = 4;
  inline bool has_last() const;
  inline void clear_last();
  static const int kLastFieldNumber = 4;
  inline const ::proto_ff::BossLastKillInfo& last() const;
  inline ::proto_ff::BossLastKillInfo* mutable_last();
  inline ::proto_ff::BossLastKillInfo* release_last();
  inline void set_allocated_last(::proto_ff::BossLastKillInfo* last);

  // @@protoc_insertion_point(class_scope:proto_ff.BossInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_refresh_time();
  inline void clear_has_refresh_time();
  inline void set_has_last();
  inline void clear_has_last();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 refresh_time_;
  ::proto_ff::BossLastKillInfo* last_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossInfo* default_instance_;
};
// -------------------------------------------------------------------

class BossSimpleInfo : public ::google::protobuf::Message {
 public:
  BossSimpleInfo();
  virtual ~BossSimpleInfo();

  BossSimpleInfo(const BossSimpleInfo& from);

  inline BossSimpleInfo& operator=(const BossSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossSimpleInfo& default_instance();

  void Swap(BossSimpleInfo* other);

  // implements Message ----------------------------------------------

  BossSimpleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossSimpleInfo& from);
  void MergeFrom(const BossSimpleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 boss_type = 1;
  inline bool has_boss_type() const;
  inline void clear_boss_type();
  static const int kBossTypeFieldNumber = 1;
  inline ::google::protobuf::int32 boss_type() const;
  inline void set_boss_type(::google::protobuf::int32 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 max_num = 3;
  inline bool has_max_num() const;
  inline void clear_max_num();
  static const int kMaxNumFieldNumber = 3;
  inline ::google::protobuf::int32 max_num() const;
  inline void set_max_num(::google::protobuf::int32 value);

  // optional int32 back_num = 4;
  inline bool has_back_num() const;
  inline void clear_back_num();
  static const int kBackNumFieldNumber = 4;
  inline ::google::protobuf::int32 back_num() const;
  inline void set_back_num(::google::protobuf::int32 value);

  // optional int32 back_max_num = 5;
  inline bool has_back_max_num() const;
  inline void clear_back_max_num();
  static const int kBackMaxNumFieldNumber = 5;
  inline ::google::protobuf::int32 back_max_num() const;
  inline void set_back_max_num(::google::protobuf::int32 value);

  // optional int32 enter_num = 6;
  inline bool has_enter_num() const;
  inline void clear_enter_num();
  static const int kEnterNumFieldNumber = 6;
  inline ::google::protobuf::int32 enter_num() const;
  inline void set_enter_num(::google::protobuf::int32 value);

  // optional int32 enter_max_num = 7;
  inline bool has_enter_max_num() const;
  inline void clear_enter_max_num();
  static const int kEnterMaxNumFieldNumber = 7;
  inline ::google::protobuf::int32 enter_max_num() const;
  inline void set_enter_max_num(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair groupInfo = 8;
  inline int groupinfo_size() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 8;
  inline const ::proto_ff::ComPair& groupinfo(int index) const;
  inline ::proto_ff::ComPair* mutable_groupinfo(int index);
  inline ::proto_ff::ComPair* add_groupinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      groupinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_groupinfo();

  // @@protoc_insertion_point(class_scope:proto_ff.BossSimpleInfo)
 private:
  inline void set_has_boss_type();
  inline void clear_has_boss_type();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_max_num();
  inline void clear_has_max_num();
  inline void set_has_back_num();
  inline void clear_has_back_num();
  inline void set_has_back_max_num();
  inline void clear_has_back_max_num();
  inline void set_has_enter_num();
  inline void clear_has_enter_num();
  inline void set_has_enter_max_num();
  inline void clear_has_enter_max_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 boss_type_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 max_num_;
  ::google::protobuf::int32 back_num_;
  ::google::protobuf::int32 back_max_num_;
  ::google::protobuf::int32 enter_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > groupinfo_;
  ::google::protobuf::int32 enter_max_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossSimpleInfo* default_instance_;
};
// -------------------------------------------------------------------

class BossDropInfo : public ::google::protobuf::Message {
 public:
  BossDropInfo();
  virtual ~BossDropInfo();

  BossDropInfo(const BossDropInfo& from);

  inline BossDropInfo& operator=(const BossDropInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDropInfo& default_instance();

  void Swap(BossDropInfo* other);

  // implements Message ----------------------------------------------

  BossDropInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossDropInfo& from);
  void MergeFrom(const BossDropInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 drop_time = 1;
  inline bool has_drop_time() const;
  inline void clear_drop_time();
  static const int kDropTimeFieldNumber = 1;
  inline ::google::protobuf::int32 drop_time() const;
  inline void set_drop_time(::google::protobuf::int32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 boss_id = 4;
  inline bool has_boss_id() const;
  inline void clear_boss_id();
  static const int kBossIdFieldNumber = 4;
  inline ::google::protobuf::uint64 boss_id() const;
  inline void set_boss_id(::google::protobuf::uint64 value);

  // optional .proto_ff.ItemProtoInfo iteminfo = 5;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 5;
  inline const ::proto_ff::ItemProtoInfo& iteminfo() const;
  inline ::proto_ff::ItemProtoInfo* mutable_iteminfo();
  inline ::proto_ff::ItemProtoInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::proto_ff::ItemProtoInfo* iteminfo);

  // @@protoc_insertion_point(class_scope:proto_ff.BossDropInfo)
 private:
  inline void set_has_drop_time();
  inline void clear_has_drop_time();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_boss_id();
  inline void clear_has_boss_id();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::google::protobuf::uint64 boss_id_;
  ::proto_ff::ItemProtoInfo* iteminfo_;
  ::google::protobuf::int32 drop_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossDropInfo* default_instance_;
};
// -------------------------------------------------------------------

class HarmoneyInfo : public ::google::protobuf::Message {
 public:
  HarmoneyInfo();
  virtual ~HarmoneyInfo();

  HarmoneyInfo(const HarmoneyInfo& from);

  inline HarmoneyInfo& operator=(const HarmoneyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarmoneyInfo& default_instance();

  void Swap(HarmoneyInfo* other);

  // implements Message ----------------------------------------------

  HarmoneyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HarmoneyInfo& from);
  void MergeFrom(const HarmoneyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layerid = 1;
  inline bool has_layerid() const;
  inline void clear_layerid();
  static const int kLayeridFieldNumber = 1;
  inline ::google::protobuf::int32 layerid() const;
  inline void set_layerid(::google::protobuf::int32 value);

  // optional int32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // optional int32 bossnum = 3;
  inline bool has_bossnum() const;
  inline void clear_bossnum();
  static const int kBossnumFieldNumber = 3;
  inline ::google::protobuf::int32 bossnum() const;
  inline void set_bossnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HarmoneyInfo)
 private:
  inline void set_has_layerid();
  inline void clear_has_layerid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_bossnum();
  inline void clear_has_bossnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layerid_;
  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::int32 bossnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static HarmoneyInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBossSimpleRsp : public ::google::protobuf::Message {
 public:
  NotifyBossSimpleRsp();
  virtual ~NotifyBossSimpleRsp();

  NotifyBossSimpleRsp(const NotifyBossSimpleRsp& from);

  inline NotifyBossSimpleRsp& operator=(const NotifyBossSimpleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBossSimpleRsp& default_instance();

  void Swap(NotifyBossSimpleRsp* other);

  // implements Message ----------------------------------------------

  NotifyBossSimpleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBossSimpleRsp& from);
  void MergeFrom(const NotifyBossSimpleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated .proto_ff.BossSimpleInfo simples = 2;
  inline int simples_size() const;
  inline void clear_simples();
  static const int kSimplesFieldNumber = 2;
  inline const ::proto_ff::BossSimpleInfo& simples(int index) const;
  inline ::proto_ff::BossSimpleInfo* mutable_simples(int index);
  inline ::proto_ff::BossSimpleInfo* add_simples();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfo >&
      simples() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfo >*
      mutable_simples();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyBossSimpleRsp)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfo > simples_;
  ::google::protobuf::int32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static NotifyBossSimpleRsp* default_instance_;
};
// -------------------------------------------------------------------

class BossLayerReq : public ::google::protobuf::Message {
 public:
  BossLayerReq();
  virtual ~BossLayerReq();

  BossLayerReq(const BossLayerReq& from);

  inline BossLayerReq& operator=(const BossLayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossLayerReq& default_instance();

  void Swap(BossLayerReq* other);

  // implements Message ----------------------------------------------

  BossLayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossLayerReq& from);
  void MergeFrom(const BossLayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layerid = 1;
  inline bool has_layerid() const;
  inline void clear_layerid();
  static const int kLayeridFieldNumber = 1;
  inline ::google::protobuf::int32 layerid() const;
  inline void set_layerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossLayerReq)
 private:
  inline void set_has_layerid();
  inline void clear_has_layerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossLayerReq* default_instance_;
};
// -------------------------------------------------------------------

class BossLayerRsp : public ::google::protobuf::Message {
 public:
  BossLayerRsp();
  virtual ~BossLayerRsp();

  BossLayerRsp(const BossLayerRsp& from);

  inline BossLayerRsp& operator=(const BossLayerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossLayerRsp& default_instance();

  void Swap(BossLayerRsp* other);

  // implements Message ----------------------------------------------

  BossLayerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossLayerRsp& from);
  void MergeFrom(const BossLayerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layerid = 1;
  inline bool has_layerid() const;
  inline void clear_layerid();
  static const int kLayeridFieldNumber = 1;
  inline ::google::protobuf::int32 layerid() const;
  inline void set_layerid(::google::protobuf::int32 value);

  // repeated .proto_ff.BossInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::BossInfo& infos(int index) const;
  inline ::proto_ff::BossInfo* mutable_infos(int index);
  inline ::proto_ff::BossInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >*
      mutable_infos();

  // optional int32 scene_num = 3;
  inline bool has_scene_num() const;
  inline void clear_scene_num();
  static const int kSceneNumFieldNumber = 3;
  inline ::google::protobuf::int32 scene_num() const;
  inline void set_scene_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossLayerRsp)
 private:
  inline void set_has_layerid();
  inline void clear_has_layerid();
  inline void set_has_scene_num();
  inline void clear_has_scene_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo > infos_;
  ::google::protobuf::int32 layerid_;
  ::google::protobuf::int32 scene_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossLayerRsp* default_instance_;
};
// -------------------------------------------------------------------

class HarmonyBossReq : public ::google::protobuf::Message {
 public:
  HarmonyBossReq();
  virtual ~HarmonyBossReq();

  HarmonyBossReq(const HarmonyBossReq& from);

  inline HarmonyBossReq& operator=(const HarmonyBossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarmonyBossReq& default_instance();

  void Swap(HarmonyBossReq* other);

  // implements Message ----------------------------------------------

  HarmonyBossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HarmonyBossReq& from);
  void MergeFrom(const HarmonyBossReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layer_order = 1;
  inline bool has_layer_order() const;
  inline void clear_layer_order();
  static const int kLayerOrderFieldNumber = 1;
  inline ::google::protobuf::int32 layer_order() const;
  inline void set_layer_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HarmonyBossReq)
 private:
  inline void set_has_layer_order();
  inline void clear_has_layer_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layer_order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static HarmonyBossReq* default_instance_;
};
// -------------------------------------------------------------------

class HarmonyBossRsp : public ::google::protobuf::Message {
 public:
  HarmonyBossRsp();
  virtual ~HarmonyBossRsp();

  HarmonyBossRsp(const HarmonyBossRsp& from);

  inline HarmonyBossRsp& operator=(const HarmonyBossRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarmonyBossRsp& default_instance();

  void Swap(HarmonyBossRsp* other);

  // implements Message ----------------------------------------------

  HarmonyBossRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HarmonyBossRsp& from);
  void MergeFrom(const HarmonyBossRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layer_order = 1;
  inline bool has_layer_order() const;
  inline void clear_layer_order();
  static const int kLayerOrderFieldNumber = 1;
  inline ::google::protobuf::int32 layer_order() const;
  inline void set_layer_order(::google::protobuf::int32 value);

  // repeated .proto_ff.HarmoneyInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::HarmoneyInfo& infos(int index) const;
  inline ::proto_ff::HarmoneyInfo* mutable_infos(int index);
  inline ::proto_ff::HarmoneyInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HarmoneyInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HarmoneyInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.HarmonyBossRsp)
 private:
  inline void set_has_layer_order();
  inline void clear_has_layer_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::HarmoneyInfo > infos_;
  ::google::protobuf::int32 layer_order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static HarmonyBossRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBossAttent : public ::google::protobuf::Message {
 public:
  NotifyBossAttent();
  virtual ~NotifyBossAttent();

  NotifyBossAttent(const NotifyBossAttent& from);

  inline NotifyBossAttent& operator=(const NotifyBossAttent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBossAttent& default_instance();

  void Swap(NotifyBossAttent* other);

  // implements Message ----------------------------------------------

  NotifyBossAttent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBossAttent& from);
  void MergeFrom(const NotifyBossAttent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyBossAttent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static NotifyBossAttent* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBossRefreshed : public ::google::protobuf::Message {
 public:
  NotifyBossRefreshed();
  virtual ~NotifyBossRefreshed();

  NotifyBossRefreshed(const NotifyBossRefreshed& from);

  inline NotifyBossRefreshed& operator=(const NotifyBossRefreshed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBossRefreshed& default_instance();

  void Swap(NotifyBossRefreshed* other);

  // implements Message ----------------------------------------------

  NotifyBossRefreshed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBossRefreshed& from);
  void MergeFrom(const NotifyBossRefreshed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyBossRefreshed)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static NotifyBossRefreshed* default_instance_;
};
// -------------------------------------------------------------------

class NotifySceneBossDataRsp : public ::google::protobuf::Message {
 public:
  NotifySceneBossDataRsp();
  virtual ~NotifySceneBossDataRsp();

  NotifySceneBossDataRsp(const NotifySceneBossDataRsp& from);

  inline NotifySceneBossDataRsp& operator=(const NotifySceneBossDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySceneBossDataRsp& default_instance();

  void Swap(NotifySceneBossDataRsp* other);

  // implements Message ----------------------------------------------

  NotifySceneBossDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySceneBossDataRsp& from);
  void MergeFrom(const NotifySceneBossDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.BossInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::BossInfo& infos(int index) const;
  inline ::proto_ff::BossInfo* mutable_infos(int index);
  inline ::proto_ff::BossInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySceneBossDataRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static NotifySceneBossDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifySceneBossUpdateRsp : public ::google::protobuf::Message {
 public:
  NotifySceneBossUpdateRsp();
  virtual ~NotifySceneBossUpdateRsp();

  NotifySceneBossUpdateRsp(const NotifySceneBossUpdateRsp& from);

  inline NotifySceneBossUpdateRsp& operator=(const NotifySceneBossUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySceneBossUpdateRsp& default_instance();

  void Swap(NotifySceneBossUpdateRsp* other);

  // implements Message ----------------------------------------------

  NotifySceneBossUpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySceneBossUpdateRsp& from);
  void MergeFrom(const NotifySceneBossUpdateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.BossInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::BossInfo& info() const;
  inline ::proto_ff::BossInfo* mutable_info();
  inline ::proto_ff::BossInfo* release_info();
  inline void set_allocated_info(::proto_ff::BossInfo* info);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySceneBossUpdateRsp)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::BossInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static NotifySceneBossUpdateRsp* default_instance_;
};
// -------------------------------------------------------------------

class EnterBossMapReq : public ::google::protobuf::Message {
 public:
  EnterBossMapReq();
  virtual ~EnterBossMapReq();

  EnterBossMapReq(const EnterBossMapReq& from);

  inline EnterBossMapReq& operator=(const EnterBossMapReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterBossMapReq& default_instance();

  void Swap(EnterBossMapReq* other);

  // implements Message ----------------------------------------------

  EnterBossMapReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterBossMapReq& from);
  void MergeFrom(const EnterBossMapReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterBossMapReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static EnterBossMapReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterBossMapRsp : public ::google::protobuf::Message {
 public:
  EnterBossMapRsp();
  virtual ~EnterBossMapRsp();

  EnterBossMapRsp(const EnterBossMapRsp& from);

  inline EnterBossMapRsp& operator=(const EnterBossMapRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterBossMapRsp& default_instance();

  void Swap(EnterBossMapRsp* other);

  // implements Message ----------------------------------------------

  EnterBossMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterBossMapRsp& from);
  void MergeFrom(const EnterBossMapRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterBossMapRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static EnterBossMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class AttentBossReq : public ::google::protobuf::Message {
 public:
  AttentBossReq();
  virtual ~AttentBossReq();

  AttentBossReq(const AttentBossReq& from);

  inline AttentBossReq& operator=(const AttentBossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttentBossReq& default_instance();

  void Swap(AttentBossReq* other);

  // implements Message ----------------------------------------------

  AttentBossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttentBossReq& from);
  void MergeFrom(const AttentBossReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.AttentBossReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static AttentBossReq* default_instance_;
};
// -------------------------------------------------------------------

class AttentBossRsp : public ::google::protobuf::Message {
 public:
  AttentBossRsp();
  virtual ~AttentBossRsp();

  AttentBossRsp(const AttentBossRsp& from);

  inline AttentBossRsp& operator=(const AttentBossRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttentBossRsp& default_instance();

  void Swap(AttentBossRsp* other);

  // implements Message ----------------------------------------------

  AttentBossRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttentBossRsp& from);
  void MergeFrom(const AttentBossRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.AttentBossRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static AttentBossRsp* default_instance_;
};
// -------------------------------------------------------------------

class BossDropReq : public ::google::protobuf::Message {
 public:
  BossDropReq();
  virtual ~BossDropReq();

  BossDropReq(const BossDropReq& from);

  inline BossDropReq& operator=(const BossDropReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDropReq& default_instance();

  void Swap(BossDropReq* other);

  // implements Message ----------------------------------------------

  BossDropReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossDropReq& from);
  void MergeFrom(const BossDropReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 enterType = 1;
  inline bool has_entertype() const;
  inline void clear_entertype();
  static const int kEnterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 entertype() const;
  inline void set_entertype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossDropReq)
 private:
  inline void set_has_entertype();
  inline void clear_has_entertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossDropReq* default_instance_;
};
// -------------------------------------------------------------------

class BossDropRsp : public ::google::protobuf::Message {
 public:
  BossDropRsp();
  virtual ~BossDropRsp();

  BossDropRsp(const BossDropRsp& from);

  inline BossDropRsp& operator=(const BossDropRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDropRsp& default_instance();

  void Swap(BossDropRsp* other);

  // implements Message ----------------------------------------------

  BossDropRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossDropRsp& from);
  void MergeFrom(const BossDropRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 enterType = 1;
  inline bool has_entertype() const;
  inline void clear_entertype();
  static const int kEnterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 entertype() const;
  inline void set_entertype(::google::protobuf::int32 value);

  // repeated .proto_ff.BossDropInfo bossDrop = 2;
  inline int bossdrop_size() const;
  inline void clear_bossdrop();
  static const int kBossDropFieldNumber = 2;
  inline const ::proto_ff::BossDropInfo& bossdrop(int index) const;
  inline ::proto_ff::BossDropInfo* mutable_bossdrop(int index);
  inline ::proto_ff::BossDropInfo* add_bossdrop();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >&
      bossdrop() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >*
      mutable_bossdrop();

  // @@protoc_insertion_point(class_scope:proto_ff.BossDropRsp)
 private:
  inline void set_has_entertype();
  inline void clear_has_entertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo > bossdrop_;
  ::google::protobuf::int32 entertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossDropRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBossResultRsp : public ::google::protobuf::Message {
 public:
  NotifyBossResultRsp();
  virtual ~NotifyBossResultRsp();

  NotifyBossResultRsp(const NotifyBossResultRsp& from);

  inline NotifyBossResultRsp& operator=(const NotifyBossResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBossResultRsp& default_instance();

  void Swap(NotifyBossResultRsp* other);

  // implements Message ----------------------------------------------

  NotifyBossResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBossResultRsp& from);
  void MergeFrom(const NotifyBossResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated .proto_ff.ItemProtoInfo com = 3;
  inline int com_size() const;
  inline void clear_com();
  static const int kComFieldNumber = 3;
  inline const ::proto_ff::ItemProtoInfo& com(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_com(int index);
  inline ::proto_ff::ItemProtoInfo* add_com();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      com() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_com();

  // repeated .proto_ff.ItemProtoInfo first = 4;
  inline int first_size() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 4;
  inline const ::proto_ff::ItemProtoInfo& first(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_first(int index);
  inline ::proto_ff::ItemProtoInfo* add_first();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      first() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_first();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyBossResultRsp)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > com_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > first_;
  ::google::protobuf::int32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static NotifyBossResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class BossKillReq : public ::google::protobuf::Message {
 public:
  BossKillReq();
  virtual ~BossKillReq();

  BossKillReq(const BossKillReq& from);

  inline BossKillReq& operator=(const BossKillReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossKillReq& default_instance();

  void Swap(BossKillReq* other);

  // implements Message ----------------------------------------------

  BossKillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossKillReq& from);
  void MergeFrom(const BossKillReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossKillReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossKillReq* default_instance_;
};
// -------------------------------------------------------------------

class BossKillRsp : public ::google::protobuf::Message {
 public:
  BossKillRsp();
  virtual ~BossKillRsp();

  BossKillRsp(const BossKillRsp& from);

  inline BossKillRsp& operator=(const BossKillRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossKillRsp& default_instance();

  void Swap(BossKillRsp* other);

  // implements Message ----------------------------------------------

  BossKillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossKillRsp& from);
  void MergeFrom(const BossKillRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossKillRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static BossKillRsp* default_instance_;
};
// -------------------------------------------------------------------

class RunBossInfo : public ::google::protobuf::Message {
 public:
  RunBossInfo();
  virtual ~RunBossInfo();

  RunBossInfo(const RunBossInfo& from);

  inline RunBossInfo& operator=(const RunBossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunBossInfo& default_instance();

  void Swap(RunBossInfo* other);

  // implements Message ----------------------------------------------

  RunBossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunBossInfo& from);
  void MergeFrom(const RunBossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 refresh_time = 3;
  inline bool has_refresh_time() const;
  inline void clear_refresh_time();
  static const int kRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::int32 refresh_time() const;
  inline void set_refresh_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RunBossInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_refresh_time();
  inline void clear_has_refresh_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 refresh_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static RunBossInfo* default_instance_;
};
// -------------------------------------------------------------------

class L2CUpdateBossReq : public ::google::protobuf::Message {
 public:
  L2CUpdateBossReq();
  virtual ~L2CUpdateBossReq();

  L2CUpdateBossReq(const L2CUpdateBossReq& from);

  inline L2CUpdateBossReq& operator=(const L2CUpdateBossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CUpdateBossReq& default_instance();

  void Swap(L2CUpdateBossReq* other);

  // implements Message ----------------------------------------------

  L2CUpdateBossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CUpdateBossReq& from);
  void MergeFrom(const L2CUpdateBossReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 layerKey = 2;
  inline bool has_layerkey() const;
  inline void clear_layerkey();
  static const int kLayerKeyFieldNumber = 2;
  inline ::google::protobuf::int32 layerkey() const;
  inline void set_layerkey(::google::protobuf::int32 value);

  // optional int32 groupId = 3;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // repeated .proto_ff.RunBossInfo infos = 4;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 4;
  inline const ::proto_ff::RunBossInfo& infos(int index) const;
  inline ::proto_ff::RunBossInfo* mutable_infos(int index);
  inline ::proto_ff::RunBossInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.L2CUpdateBossReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_layerkey();
  inline void clear_has_layerkey();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 layerkey_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo > infos_;
  ::google::protobuf::int32 groupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2CUpdateBossReq* default_instance_;
};
// -------------------------------------------------------------------

class L2SUpdateBossReq : public ::google::protobuf::Message {
 public:
  L2SUpdateBossReq();
  virtual ~L2SUpdateBossReq();

  L2SUpdateBossReq(const L2SUpdateBossReq& from);

  inline L2SUpdateBossReq& operator=(const L2SUpdateBossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SUpdateBossReq& default_instance();

  void Swap(L2SUpdateBossReq* other);

  // implements Message ----------------------------------------------

  L2SUpdateBossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SUpdateBossReq& from);
  void MergeFrom(const L2SUpdateBossReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 layerKey = 2;
  inline bool has_layerkey() const;
  inline void clear_layerkey();
  static const int kLayerKeyFieldNumber = 2;
  inline ::google::protobuf::int32 layerkey() const;
  inline void set_layerkey(::google::protobuf::int32 value);

  // optional int32 groupId = 3;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // optional int32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // repeated .proto_ff.RunBossInfo infos = 5;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 5;
  inline const ::proto_ff::RunBossInfo& infos(int index) const;
  inline ::proto_ff::RunBossInfo* mutable_infos(int index);
  inline ::proto_ff::RunBossInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >*
      mutable_infos();

  // optional int32 scene_num = 6;
  inline bool has_scene_num() const;
  inline void clear_scene_num();
  static const int kSceneNumFieldNumber = 6;
  inline ::google::protobuf::int32 scene_num() const;
  inline void set_scene_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SUpdateBossReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_layerkey();
  inline void clear_has_layerkey();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_scene_num();
  inline void clear_has_scene_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 layerkey_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo > infos_;
  ::google::protobuf::int32 scene_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2SUpdateBossReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CSynAttentReq : public ::google::protobuf::Message {
 public:
  L2CSynAttentReq();
  virtual ~L2CSynAttentReq();

  L2CSynAttentReq(const L2CSynAttentReq& from);

  inline L2CSynAttentReq& operator=(const L2CSynAttentReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CSynAttentReq& default_instance();

  void Swap(L2CSynAttentReq* other);

  // implements Message ----------------------------------------------

  L2CSynAttentReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CSynAttentReq& from);
  void MergeFrom(const L2CSynAttentReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // repeated int64 ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline ::google::protobuf::int64 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int64 value);
  inline void add_ids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.L2CSynAttentReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2CSynAttentReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SSynAttentReq : public ::google::protobuf::Message {
 public:
  C2SSynAttentReq();
  virtual ~C2SSynAttentReq();

  C2SSynAttentReq(const C2SSynAttentReq& from);

  inline C2SSynAttentReq& operator=(const C2SSynAttentReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SSynAttentReq& default_instance();

  void Swap(C2SSynAttentReq* other);

  // implements Message ----------------------------------------------

  C2SSynAttentReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SSynAttentReq& from);
  void MergeFrom(const C2SSynAttentReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // repeated int64 ids = 3;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 3;
  inline ::google::protobuf::int64 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int64 value);
  inline void add_ids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.C2SSynAttentReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ids_;
  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static C2SSynAttentReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CKillBossInfoReq : public ::google::protobuf::Message {
 public:
  L2CKillBossInfoReq();
  virtual ~L2CKillBossInfoReq();

  L2CKillBossInfoReq(const L2CKillBossInfoReq& from);

  inline L2CKillBossInfoReq& operator=(const L2CKillBossInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CKillBossInfoReq& default_instance();

  void Swap(L2CKillBossInfoReq* other);

  // implements Message ----------------------------------------------

  L2CKillBossInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CKillBossInfoReq& from);
  void MergeFrom(const L2CKillBossInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 kill_cid = 4;
  inline bool has_kill_cid() const;
  inline void clear_kill_cid();
  static const int kKillCidFieldNumber = 4;
  inline ::google::protobuf::uint64 kill_cid() const;
  inline void set_kill_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CKillBossInfoReq)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kill_cid();
  inline void clear_has_kill_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::std::string* name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 kill_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2CKillBossInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class L2SKillBossInfoReq : public ::google::protobuf::Message {
 public:
  L2SKillBossInfoReq();
  virtual ~L2SKillBossInfoReq();

  L2SKillBossInfoReq(const L2SKillBossInfoReq& from);

  inline L2SKillBossInfoReq& operator=(const L2SKillBossInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SKillBossInfoReq& default_instance();

  void Swap(L2SKillBossInfoReq* other);

  // implements Message ----------------------------------------------

  L2SKillBossInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SKillBossInfoReq& from);
  void MergeFrom(const L2SKillBossInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 groupId = 4;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 4;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SKillBossInfoReq)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::std::string* name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 groupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2SKillBossInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CDropRecordReq : public ::google::protobuf::Message {
 public:
  L2CDropRecordReq();
  virtual ~L2CDropRecordReq();

  L2CDropRecordReq(const L2CDropRecordReq& from);

  inline L2CDropRecordReq& operator=(const L2CDropRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CDropRecordReq& default_instance();

  void Swap(L2CDropRecordReq* other);

  // implements Message ----------------------------------------------

  L2CDropRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CDropRecordReq& from);
  void MergeFrom(const L2CDropRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.BossDropInfo drop_info = 1;
  inline int drop_info_size() const;
  inline void clear_drop_info();
  static const int kDropInfoFieldNumber = 1;
  inline const ::proto_ff::BossDropInfo& drop_info(int index) const;
  inline ::proto_ff::BossDropInfo* mutable_drop_info(int index);
  inline ::proto_ff::BossDropInfo* add_drop_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >&
      drop_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >*
      mutable_drop_info();

  // @@protoc_insertion_point(class_scope:proto_ff.L2CDropRecordReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo > drop_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2CDropRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SDropRecordReq : public ::google::protobuf::Message {
 public:
  C2SDropRecordReq();
  virtual ~C2SDropRecordReq();

  C2SDropRecordReq(const C2SDropRecordReq& from);

  inline C2SDropRecordReq& operator=(const C2SDropRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SDropRecordReq& default_instance();

  void Swap(C2SDropRecordReq* other);

  // implements Message ----------------------------------------------

  C2SDropRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SDropRecordReq& from);
  void MergeFrom(const C2SDropRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.L2CDropRecordReq record = 1;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 1;
  inline const ::proto_ff::L2CDropRecordReq& record() const;
  inline ::proto_ff::L2CDropRecordReq* mutable_record();
  inline ::proto_ff::L2CDropRecordReq* release_record();
  inline void set_allocated_record(::proto_ff::L2CDropRecordReq* record);

  // optional int32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SDropRecordReq)
 private:
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::L2CDropRecordReq* record_;
  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static C2SDropRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SBossLayerReq : public ::google::protobuf::Message {
 public:
  C2SBossLayerReq();
  virtual ~C2SBossLayerReq();

  C2SBossLayerReq(const C2SBossLayerReq& from);

  inline C2SBossLayerReq& operator=(const C2SBossLayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SBossLayerReq& default_instance();

  void Swap(C2SBossLayerReq* other);

  // implements Message ----------------------------------------------

  C2SBossLayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SBossLayerReq& from);
  void MergeFrom(const C2SBossLayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layerid = 1;
  inline bool has_layerid() const;
  inline void clear_layerid();
  static const int kLayeridFieldNumber = 1;
  inline ::google::protobuf::int32 layerid() const;
  inline void set_layerid(::google::protobuf::int32 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SBossLayerReq)
 private:
  inline void set_has_layerid();
  inline void clear_has_layerid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::int32 layerid_;
  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static C2SBossLayerReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CAttentOptReq : public ::google::protobuf::Message {
 public:
  L2CAttentOptReq();
  virtual ~L2CAttentOptReq();

  L2CAttentOptReq(const L2CAttentOptReq& from);

  inline L2CAttentOptReq& operator=(const L2CAttentOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CAttentOptReq& default_instance();

  void Swap(L2CAttentOptReq* other);

  // implements Message ----------------------------------------------

  L2CAttentOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CAttentOptReq& from);
  void MergeFrom(const L2CAttentOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CAttentOptReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 bossid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static L2CAttentOptReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SAttentOptReq : public ::google::protobuf::Message {
 public:
  C2SAttentOptReq();
  virtual ~C2SAttentOptReq();

  C2SAttentOptReq(const C2SAttentOptReq& from);

  inline C2SAttentOptReq& operator=(const C2SAttentOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SAttentOptReq& default_instance();

  void Swap(C2SAttentOptReq* other);

  // implements Message ----------------------------------------------

  C2SAttentOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SAttentOptReq& from);
  void MergeFrom(const C2SAttentOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // optional int32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SAttentOptReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 bossid_;
  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static C2SAttentOptReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SBossLogReq : public ::google::protobuf::Message {
 public:
  C2SBossLogReq();
  virtual ~C2SBossLogReq();

  C2SBossLogReq(const C2SBossLogReq& from);

  inline C2SBossLogReq& operator=(const C2SBossLogReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SBossLogReq& default_instance();

  void Swap(C2SBossLogReq* other);

  // implements Message ----------------------------------------------

  C2SBossLogReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SBossLogReq& from);
  void MergeFrom(const C2SBossLogReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 enterType = 1;
  inline bool has_entertype() const;
  inline void clear_entertype();
  static const int kEnterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 entertype() const;
  inline void set_entertype(::google::protobuf::int32 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SBossLogReq)
 private:
  inline void set_has_entertype();
  inline void clear_has_entertype();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::int32 entertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Boss_2eproto();
  friend void protobuf_AssignDesc_Boss_2eproto();
  friend void protobuf_ShutdownFile_Boss_2eproto();

  void InitAsDefaultInstance();
  static C2SBossLogReq* default_instance_;
};
// ===================================================================


// ===================================================================

// BossLastKillInfo

// optional uint64 teamId = 1;
inline bool BossLastKillInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossLastKillInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossLastKillInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossLastKillInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 BossLastKillInfo::teamid() const {
  return teamid_;
}
inline void BossLastKillInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional string name = 2;
inline bool BossLastKillInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossLastKillInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossLastKillInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossLastKillInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BossLastKillInfo::name() const {
  return *name_;
}
inline void BossLastKillInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BossLastKillInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BossLastKillInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BossLastKillInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BossLastKillInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BossLastKillInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 id = 3;
inline bool BossLastKillInfo::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossLastKillInfo::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossLastKillInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossLastKillInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BossLastKillInfo::id() const {
  return id_;
}
inline void BossLastKillInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// BossInfo

// optional uint64 id = 1;
inline bool BossInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BossInfo::id() const {
  return id_;
}
inline void BossInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 2;
inline bool BossInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BossInfo::num() const {
  return num_;
}
inline void BossInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional uint64 refresh_time = 3;
inline bool BossInfo::has_refresh_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossInfo::set_has_refresh_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossInfo::clear_has_refresh_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossInfo::clear_refresh_time() {
  refresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_refresh_time();
}
inline ::google::protobuf::uint64 BossInfo::refresh_time() const {
  return refresh_time_;
}
inline void BossInfo::set_refresh_time(::google::protobuf::uint64 value) {
  set_has_refresh_time();
  refresh_time_ = value;
}

// optional .proto_ff.BossLastKillInfo last = 4;
inline bool BossInfo::has_last() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossInfo::set_has_last() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossInfo::clear_has_last() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossInfo::clear_last() {
  if (last_ != NULL) last_->::proto_ff::BossLastKillInfo::Clear();
  clear_has_last();
}
inline const ::proto_ff::BossLastKillInfo& BossInfo::last() const {
  return last_ != NULL ? *last_ : *default_instance_->last_;
}
inline ::proto_ff::BossLastKillInfo* BossInfo::mutable_last() {
  set_has_last();
  if (last_ == NULL) last_ = new ::proto_ff::BossLastKillInfo;
  return last_;
}
inline ::proto_ff::BossLastKillInfo* BossInfo::release_last() {
  clear_has_last();
  ::proto_ff::BossLastKillInfo* temp = last_;
  last_ = NULL;
  return temp;
}
inline void BossInfo::set_allocated_last(::proto_ff::BossLastKillInfo* last) {
  delete last_;
  last_ = last;
  if (last) {
    set_has_last();
  } else {
    clear_has_last();
  }
}

// -------------------------------------------------------------------

// BossSimpleInfo

// optional int32 boss_type = 1;
inline bool BossSimpleInfo::has_boss_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossSimpleInfo::set_has_boss_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossSimpleInfo::clear_has_boss_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossSimpleInfo::clear_boss_type() {
  boss_type_ = 0;
  clear_has_boss_type();
}
inline ::google::protobuf::int32 BossSimpleInfo::boss_type() const {
  return boss_type_;
}
inline void BossSimpleInfo::set_boss_type(::google::protobuf::int32 value) {
  set_has_boss_type();
  boss_type_ = value;
}

// optional int32 cur_num = 2;
inline bool BossSimpleInfo::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossSimpleInfo::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossSimpleInfo::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossSimpleInfo::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 BossSimpleInfo::cur_num() const {
  return cur_num_;
}
inline void BossSimpleInfo::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 max_num = 3;
inline bool BossSimpleInfo::has_max_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossSimpleInfo::set_has_max_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossSimpleInfo::clear_has_max_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossSimpleInfo::clear_max_num() {
  max_num_ = 0;
  clear_has_max_num();
}
inline ::google::protobuf::int32 BossSimpleInfo::max_num() const {
  return max_num_;
}
inline void BossSimpleInfo::set_max_num(::google::protobuf::int32 value) {
  set_has_max_num();
  max_num_ = value;
}

// optional int32 back_num = 4;
inline bool BossSimpleInfo::has_back_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossSimpleInfo::set_has_back_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossSimpleInfo::clear_has_back_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossSimpleInfo::clear_back_num() {
  back_num_ = 0;
  clear_has_back_num();
}
inline ::google::protobuf::int32 BossSimpleInfo::back_num() const {
  return back_num_;
}
inline void BossSimpleInfo::set_back_num(::google::protobuf::int32 value) {
  set_has_back_num();
  back_num_ = value;
}

// optional int32 back_max_num = 5;
inline bool BossSimpleInfo::has_back_max_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BossSimpleInfo::set_has_back_max_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BossSimpleInfo::clear_has_back_max_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BossSimpleInfo::clear_back_max_num() {
  back_max_num_ = 0;
  clear_has_back_max_num();
}
inline ::google::protobuf::int32 BossSimpleInfo::back_max_num() const {
  return back_max_num_;
}
inline void BossSimpleInfo::set_back_max_num(::google::protobuf::int32 value) {
  set_has_back_max_num();
  back_max_num_ = value;
}

// optional int32 enter_num = 6;
inline bool BossSimpleInfo::has_enter_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BossSimpleInfo::set_has_enter_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BossSimpleInfo::clear_has_enter_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BossSimpleInfo::clear_enter_num() {
  enter_num_ = 0;
  clear_has_enter_num();
}
inline ::google::protobuf::int32 BossSimpleInfo::enter_num() const {
  return enter_num_;
}
inline void BossSimpleInfo::set_enter_num(::google::protobuf::int32 value) {
  set_has_enter_num();
  enter_num_ = value;
}

// optional int32 enter_max_num = 7;
inline bool BossSimpleInfo::has_enter_max_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BossSimpleInfo::set_has_enter_max_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BossSimpleInfo::clear_has_enter_max_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BossSimpleInfo::clear_enter_max_num() {
  enter_max_num_ = 0;
  clear_has_enter_max_num();
}
inline ::google::protobuf::int32 BossSimpleInfo::enter_max_num() const {
  return enter_max_num_;
}
inline void BossSimpleInfo::set_enter_max_num(::google::protobuf::int32 value) {
  set_has_enter_max_num();
  enter_max_num_ = value;
}

// repeated .proto_ff.ComPair groupInfo = 8;
inline int BossSimpleInfo::groupinfo_size() const {
  return groupinfo_.size();
}
inline void BossSimpleInfo::clear_groupinfo() {
  groupinfo_.Clear();
}
inline const ::proto_ff::ComPair& BossSimpleInfo::groupinfo(int index) const {
  return groupinfo_.Get(index);
}
inline ::proto_ff::ComPair* BossSimpleInfo::mutable_groupinfo(int index) {
  return groupinfo_.Mutable(index);
}
inline ::proto_ff::ComPair* BossSimpleInfo::add_groupinfo() {
  return groupinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
BossSimpleInfo::groupinfo() const {
  return groupinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
BossSimpleInfo::mutable_groupinfo() {
  return &groupinfo_;
}

// -------------------------------------------------------------------

// BossDropInfo

// optional int32 drop_time = 1;
inline bool BossDropInfo::has_drop_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossDropInfo::set_has_drop_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossDropInfo::clear_has_drop_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossDropInfo::clear_drop_time() {
  drop_time_ = 0;
  clear_has_drop_time();
}
inline ::google::protobuf::int32 BossDropInfo::drop_time() const {
  return drop_time_;
}
inline void BossDropInfo::set_drop_time(::google::protobuf::int32 value) {
  set_has_drop_time();
  drop_time_ = value;
}

// optional uint64 id = 2;
inline bool BossDropInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossDropInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossDropInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossDropInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BossDropInfo::id() const {
  return id_;
}
inline void BossDropInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 3;
inline bool BossDropInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossDropInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossDropInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossDropInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BossDropInfo::name() const {
  return *name_;
}
inline void BossDropInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BossDropInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BossDropInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BossDropInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BossDropInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BossDropInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 boss_id = 4;
inline bool BossDropInfo::has_boss_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossDropInfo::set_has_boss_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossDropInfo::clear_has_boss_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossDropInfo::clear_boss_id() {
  boss_id_ = GOOGLE_ULONGLONG(0);
  clear_has_boss_id();
}
inline ::google::protobuf::uint64 BossDropInfo::boss_id() const {
  return boss_id_;
}
inline void BossDropInfo::set_boss_id(::google::protobuf::uint64 value) {
  set_has_boss_id();
  boss_id_ = value;
}

// optional .proto_ff.ItemProtoInfo iteminfo = 5;
inline bool BossDropInfo::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BossDropInfo::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BossDropInfo::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BossDropInfo::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_iteminfo();
}
inline const ::proto_ff::ItemProtoInfo& BossDropInfo::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::proto_ff::ItemProtoInfo* BossDropInfo::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::proto_ff::ItemProtoInfo;
  return iteminfo_;
}
inline ::proto_ff::ItemProtoInfo* BossDropInfo::release_iteminfo() {
  clear_has_iteminfo();
  ::proto_ff::ItemProtoInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void BossDropInfo::set_allocated_iteminfo(::proto_ff::ItemProtoInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// -------------------------------------------------------------------

// HarmoneyInfo

// optional int32 layerid = 1;
inline bool HarmoneyInfo::has_layerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HarmoneyInfo::set_has_layerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HarmoneyInfo::clear_has_layerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HarmoneyInfo::clear_layerid() {
  layerid_ = 0;
  clear_has_layerid();
}
inline ::google::protobuf::int32 HarmoneyInfo::layerid() const {
  return layerid_;
}
inline void HarmoneyInfo::set_layerid(::google::protobuf::int32 value) {
  set_has_layerid();
  layerid_ = value;
}

// optional int32 zoneid = 2;
inline bool HarmoneyInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HarmoneyInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HarmoneyInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HarmoneyInfo::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 HarmoneyInfo::zoneid() const {
  return zoneid_;
}
inline void HarmoneyInfo::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// optional int32 bossnum = 3;
inline bool HarmoneyInfo::has_bossnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HarmoneyInfo::set_has_bossnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HarmoneyInfo::clear_has_bossnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HarmoneyInfo::clear_bossnum() {
  bossnum_ = 0;
  clear_has_bossnum();
}
inline ::google::protobuf::int32 HarmoneyInfo::bossnum() const {
  return bossnum_;
}
inline void HarmoneyInfo::set_bossnum(::google::protobuf::int32 value) {
  set_has_bossnum();
  bossnum_ = value;
}

// -------------------------------------------------------------------

// NotifyBossSimpleRsp

// optional int32 flag = 1;
inline bool NotifyBossSimpleRsp::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBossSimpleRsp::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBossSimpleRsp::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBossSimpleRsp::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 NotifyBossSimpleRsp::flag() const {
  return flag_;
}
inline void NotifyBossSimpleRsp::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// repeated .proto_ff.BossSimpleInfo simples = 2;
inline int NotifyBossSimpleRsp::simples_size() const {
  return simples_.size();
}
inline void NotifyBossSimpleRsp::clear_simples() {
  simples_.Clear();
}
inline const ::proto_ff::BossSimpleInfo& NotifyBossSimpleRsp::simples(int index) const {
  return simples_.Get(index);
}
inline ::proto_ff::BossSimpleInfo* NotifyBossSimpleRsp::mutable_simples(int index) {
  return simples_.Mutable(index);
}
inline ::proto_ff::BossSimpleInfo* NotifyBossSimpleRsp::add_simples() {
  return simples_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfo >&
NotifyBossSimpleRsp::simples() const {
  return simples_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfo >*
NotifyBossSimpleRsp::mutable_simples() {
  return &simples_;
}

// -------------------------------------------------------------------

// BossLayerReq

// optional int32 layerid = 1;
inline bool BossLayerReq::has_layerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossLayerReq::set_has_layerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossLayerReq::clear_has_layerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossLayerReq::clear_layerid() {
  layerid_ = 0;
  clear_has_layerid();
}
inline ::google::protobuf::int32 BossLayerReq::layerid() const {
  return layerid_;
}
inline void BossLayerReq::set_layerid(::google::protobuf::int32 value) {
  set_has_layerid();
  layerid_ = value;
}

// -------------------------------------------------------------------

// BossLayerRsp

// optional int32 layerid = 1;
inline bool BossLayerRsp::has_layerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossLayerRsp::set_has_layerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossLayerRsp::clear_has_layerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossLayerRsp::clear_layerid() {
  layerid_ = 0;
  clear_has_layerid();
}
inline ::google::protobuf::int32 BossLayerRsp::layerid() const {
  return layerid_;
}
inline void BossLayerRsp::set_layerid(::google::protobuf::int32 value) {
  set_has_layerid();
  layerid_ = value;
}

// repeated .proto_ff.BossInfo infos = 2;
inline int BossLayerRsp::infos_size() const {
  return infos_.size();
}
inline void BossLayerRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::BossInfo& BossLayerRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::BossInfo* BossLayerRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::BossInfo* BossLayerRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >&
BossLayerRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >*
BossLayerRsp::mutable_infos() {
  return &infos_;
}

// optional int32 scene_num = 3;
inline bool BossLayerRsp::has_scene_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossLayerRsp::set_has_scene_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossLayerRsp::clear_has_scene_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossLayerRsp::clear_scene_num() {
  scene_num_ = 0;
  clear_has_scene_num();
}
inline ::google::protobuf::int32 BossLayerRsp::scene_num() const {
  return scene_num_;
}
inline void BossLayerRsp::set_scene_num(::google::protobuf::int32 value) {
  set_has_scene_num();
  scene_num_ = value;
}

// -------------------------------------------------------------------

// HarmonyBossReq

// optional int32 layer_order = 1;
inline bool HarmonyBossReq::has_layer_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HarmonyBossReq::set_has_layer_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HarmonyBossReq::clear_has_layer_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HarmonyBossReq::clear_layer_order() {
  layer_order_ = 0;
  clear_has_layer_order();
}
inline ::google::protobuf::int32 HarmonyBossReq::layer_order() const {
  return layer_order_;
}
inline void HarmonyBossReq::set_layer_order(::google::protobuf::int32 value) {
  set_has_layer_order();
  layer_order_ = value;
}

// -------------------------------------------------------------------

// HarmonyBossRsp

// optional int32 layer_order = 1;
inline bool HarmonyBossRsp::has_layer_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HarmonyBossRsp::set_has_layer_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HarmonyBossRsp::clear_has_layer_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HarmonyBossRsp::clear_layer_order() {
  layer_order_ = 0;
  clear_has_layer_order();
}
inline ::google::protobuf::int32 HarmonyBossRsp::layer_order() const {
  return layer_order_;
}
inline void HarmonyBossRsp::set_layer_order(::google::protobuf::int32 value) {
  set_has_layer_order();
  layer_order_ = value;
}

// repeated .proto_ff.HarmoneyInfo infos = 2;
inline int HarmonyBossRsp::infos_size() const {
  return infos_.size();
}
inline void HarmonyBossRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::HarmoneyInfo& HarmonyBossRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::HarmoneyInfo* HarmonyBossRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::HarmoneyInfo* HarmonyBossRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HarmoneyInfo >&
HarmonyBossRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HarmoneyInfo >*
HarmonyBossRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyBossAttent

// repeated int32 ids = 1;
inline int NotifyBossAttent::ids_size() const {
  return ids_.size();
}
inline void NotifyBossAttent::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 NotifyBossAttent::ids(int index) const {
  return ids_.Get(index);
}
inline void NotifyBossAttent::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void NotifyBossAttent::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyBossAttent::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyBossAttent::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// NotifyBossRefreshed

// repeated int32 ids = 1;
inline int NotifyBossRefreshed::ids_size() const {
  return ids_.size();
}
inline void NotifyBossRefreshed::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 NotifyBossRefreshed::ids(int index) const {
  return ids_.Get(index);
}
inline void NotifyBossRefreshed::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void NotifyBossRefreshed::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyBossRefreshed::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyBossRefreshed::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// NotifySceneBossDataRsp

// repeated .proto_ff.BossInfo infos = 1;
inline int NotifySceneBossDataRsp::infos_size() const {
  return infos_.size();
}
inline void NotifySceneBossDataRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::BossInfo& NotifySceneBossDataRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::BossInfo* NotifySceneBossDataRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::BossInfo* NotifySceneBossDataRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >&
NotifySceneBossDataRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossInfo >*
NotifySceneBossDataRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifySceneBossUpdateRsp

// optional .proto_ff.BossInfo info = 1;
inline bool NotifySceneBossUpdateRsp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySceneBossUpdateRsp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySceneBossUpdateRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySceneBossUpdateRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::BossInfo::Clear();
  clear_has_info();
}
inline const ::proto_ff::BossInfo& NotifySceneBossUpdateRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::BossInfo* NotifySceneBossUpdateRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::BossInfo;
  return info_;
}
inline ::proto_ff::BossInfo* NotifySceneBossUpdateRsp::release_info() {
  clear_has_info();
  ::proto_ff::BossInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void NotifySceneBossUpdateRsp::set_allocated_info(::proto_ff::BossInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// EnterBossMapReq

// optional int64 id = 1;
inline bool EnterBossMapReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterBossMapReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterBossMapReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterBossMapReq::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 EnterBossMapReq::id() const {
  return id_;
}
inline void EnterBossMapReq::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// EnterBossMapRsp

// optional int32 ret = 1;
inline bool EnterBossMapRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterBossMapRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterBossMapRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterBossMapRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 EnterBossMapRsp::ret() const {
  return ret_;
}
inline void EnterBossMapRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 id = 2;
inline bool EnterBossMapRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterBossMapRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterBossMapRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterBossMapRsp::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 EnterBossMapRsp::id() const {
  return id_;
}
inline void EnterBossMapRsp::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// AttentBossReq

// optional int64 id = 1;
inline bool AttentBossReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttentBossReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttentBossReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttentBossReq::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 AttentBossReq::id() const {
  return id_;
}
inline void AttentBossReq::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 opt = 2;
inline bool AttentBossReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttentBossReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttentBossReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttentBossReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 AttentBossReq::opt() const {
  return opt_;
}
inline void AttentBossReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// AttentBossRsp

// optional int64 id = 1;
inline bool AttentBossRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttentBossRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttentBossRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttentBossRsp::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 AttentBossRsp::id() const {
  return id_;
}
inline void AttentBossRsp::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 opt = 2;
inline bool AttentBossRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttentBossRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttentBossRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttentBossRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 AttentBossRsp::opt() const {
  return opt_;
}
inline void AttentBossRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int32 ret = 3;
inline bool AttentBossRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttentBossRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttentBossRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttentBossRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AttentBossRsp::ret() const {
  return ret_;
}
inline void AttentBossRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// BossDropReq

// optional int32 enterType = 1;
inline bool BossDropReq::has_entertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossDropReq::set_has_entertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossDropReq::clear_has_entertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossDropReq::clear_entertype() {
  entertype_ = 0;
  clear_has_entertype();
}
inline ::google::protobuf::int32 BossDropReq::entertype() const {
  return entertype_;
}
inline void BossDropReq::set_entertype(::google::protobuf::int32 value) {
  set_has_entertype();
  entertype_ = value;
}

// -------------------------------------------------------------------

// BossDropRsp

// optional int32 enterType = 1;
inline bool BossDropRsp::has_entertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossDropRsp::set_has_entertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossDropRsp::clear_has_entertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossDropRsp::clear_entertype() {
  entertype_ = 0;
  clear_has_entertype();
}
inline ::google::protobuf::int32 BossDropRsp::entertype() const {
  return entertype_;
}
inline void BossDropRsp::set_entertype(::google::protobuf::int32 value) {
  set_has_entertype();
  entertype_ = value;
}

// repeated .proto_ff.BossDropInfo bossDrop = 2;
inline int BossDropRsp::bossdrop_size() const {
  return bossdrop_.size();
}
inline void BossDropRsp::clear_bossdrop() {
  bossdrop_.Clear();
}
inline const ::proto_ff::BossDropInfo& BossDropRsp::bossdrop(int index) const {
  return bossdrop_.Get(index);
}
inline ::proto_ff::BossDropInfo* BossDropRsp::mutable_bossdrop(int index) {
  return bossdrop_.Mutable(index);
}
inline ::proto_ff::BossDropInfo* BossDropRsp::add_bossdrop() {
  return bossdrop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >&
BossDropRsp::bossdrop() const {
  return bossdrop_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >*
BossDropRsp::mutable_bossdrop() {
  return &bossdrop_;
}

// -------------------------------------------------------------------

// NotifyBossResultRsp

// optional int32 flag = 1;
inline bool NotifyBossResultRsp::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBossResultRsp::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBossResultRsp::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBossResultRsp::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 NotifyBossResultRsp::flag() const {
  return flag_;
}
inline void NotifyBossResultRsp::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// optional int64 id = 2;
inline bool NotifyBossResultRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyBossResultRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyBossResultRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyBossResultRsp::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 NotifyBossResultRsp::id() const {
  return id_;
}
inline void NotifyBossResultRsp::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.ItemProtoInfo com = 3;
inline int NotifyBossResultRsp::com_size() const {
  return com_.size();
}
inline void NotifyBossResultRsp::clear_com() {
  com_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& NotifyBossResultRsp::com(int index) const {
  return com_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyBossResultRsp::mutable_com(int index) {
  return com_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyBossResultRsp::add_com() {
  return com_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
NotifyBossResultRsp::com() const {
  return com_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
NotifyBossResultRsp::mutable_com() {
  return &com_;
}

// repeated .proto_ff.ItemProtoInfo first = 4;
inline int NotifyBossResultRsp::first_size() const {
  return first_.size();
}
inline void NotifyBossResultRsp::clear_first() {
  first_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& NotifyBossResultRsp::first(int index) const {
  return first_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyBossResultRsp::mutable_first(int index) {
  return first_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyBossResultRsp::add_first() {
  return first_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
NotifyBossResultRsp::first() const {
  return first_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
NotifyBossResultRsp::mutable_first() {
  return &first_;
}

// -------------------------------------------------------------------

// BossKillReq

// optional uint64 id = 1;
inline bool BossKillReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossKillReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossKillReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossKillReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BossKillReq::id() const {
  return id_;
}
inline void BossKillReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// BossKillRsp

// optional uint64 id = 1;
inline bool BossKillRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossKillRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossKillRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossKillRsp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BossKillRsp::id() const {
  return id_;
}
inline void BossKillRsp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 ret = 2;
inline bool BossKillRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossKillRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossKillRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossKillRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 BossKillRsp::ret() const {
  return ret_;
}
inline void BossKillRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// RunBossInfo

// optional uint64 id = 1;
inline bool RunBossInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunBossInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunBossInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunBossInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RunBossInfo::id() const {
  return id_;
}
inline void RunBossInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 2;
inline bool RunBossInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunBossInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunBossInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunBossInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 RunBossInfo::num() const {
  return num_;
}
inline void RunBossInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 refresh_time = 3;
inline bool RunBossInfo::has_refresh_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunBossInfo::set_has_refresh_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunBossInfo::clear_has_refresh_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunBossInfo::clear_refresh_time() {
  refresh_time_ = 0;
  clear_has_refresh_time();
}
inline ::google::protobuf::int32 RunBossInfo::refresh_time() const {
  return refresh_time_;
}
inline void RunBossInfo::set_refresh_time(::google::protobuf::int32 value) {
  set_has_refresh_time();
  refresh_time_ = value;
}

// -------------------------------------------------------------------

// L2CUpdateBossReq

// optional int32 type = 1;
inline bool L2CUpdateBossReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CUpdateBossReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CUpdateBossReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CUpdateBossReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 L2CUpdateBossReq::type() const {
  return type_;
}
inline void L2CUpdateBossReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 layerKey = 2;
inline bool L2CUpdateBossReq::has_layerkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CUpdateBossReq::set_has_layerkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CUpdateBossReq::clear_has_layerkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CUpdateBossReq::clear_layerkey() {
  layerkey_ = 0;
  clear_has_layerkey();
}
inline ::google::protobuf::int32 L2CUpdateBossReq::layerkey() const {
  return layerkey_;
}
inline void L2CUpdateBossReq::set_layerkey(::google::protobuf::int32 value) {
  set_has_layerkey();
  layerkey_ = value;
}

// optional int32 groupId = 3;
inline bool L2CUpdateBossReq::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CUpdateBossReq::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CUpdateBossReq::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CUpdateBossReq::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 L2CUpdateBossReq::groupid() const {
  return groupid_;
}
inline void L2CUpdateBossReq::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// repeated .proto_ff.RunBossInfo infos = 4;
inline int L2CUpdateBossReq::infos_size() const {
  return infos_.size();
}
inline void L2CUpdateBossReq::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::RunBossInfo& L2CUpdateBossReq::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::RunBossInfo* L2CUpdateBossReq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::RunBossInfo* L2CUpdateBossReq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >&
L2CUpdateBossReq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >*
L2CUpdateBossReq::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// L2SUpdateBossReq

// optional int32 type = 1;
inline bool L2SUpdateBossReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SUpdateBossReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SUpdateBossReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SUpdateBossReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 L2SUpdateBossReq::type() const {
  return type_;
}
inline void L2SUpdateBossReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 layerKey = 2;
inline bool L2SUpdateBossReq::has_layerkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2SUpdateBossReq::set_has_layerkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2SUpdateBossReq::clear_has_layerkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2SUpdateBossReq::clear_layerkey() {
  layerkey_ = 0;
  clear_has_layerkey();
}
inline ::google::protobuf::int32 L2SUpdateBossReq::layerkey() const {
  return layerkey_;
}
inline void L2SUpdateBossReq::set_layerkey(::google::protobuf::int32 value) {
  set_has_layerkey();
  layerkey_ = value;
}

// optional int32 groupId = 3;
inline bool L2SUpdateBossReq::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2SUpdateBossReq::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2SUpdateBossReq::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2SUpdateBossReq::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 L2SUpdateBossReq::groupid() const {
  return groupid_;
}
inline void L2SUpdateBossReq::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional int32 zoneid = 4;
inline bool L2SUpdateBossReq::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2SUpdateBossReq::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2SUpdateBossReq::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2SUpdateBossReq::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 L2SUpdateBossReq::zoneid() const {
  return zoneid_;
}
inline void L2SUpdateBossReq::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// repeated .proto_ff.RunBossInfo infos = 5;
inline int L2SUpdateBossReq::infos_size() const {
  return infos_.size();
}
inline void L2SUpdateBossReq::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::RunBossInfo& L2SUpdateBossReq::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::RunBossInfo* L2SUpdateBossReq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::RunBossInfo* L2SUpdateBossReq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >&
L2SUpdateBossReq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RunBossInfo >*
L2SUpdateBossReq::mutable_infos() {
  return &infos_;
}

// optional int32 scene_num = 6;
inline bool L2SUpdateBossReq::has_scene_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void L2SUpdateBossReq::set_has_scene_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void L2SUpdateBossReq::clear_has_scene_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void L2SUpdateBossReq::clear_scene_num() {
  scene_num_ = 0;
  clear_has_scene_num();
}
inline ::google::protobuf::int32 L2SUpdateBossReq::scene_num() const {
  return scene_num_;
}
inline void L2SUpdateBossReq::set_scene_num(::google::protobuf::int32 value) {
  set_has_scene_num();
  scene_num_ = value;
}

// -------------------------------------------------------------------

// L2CSynAttentReq

// optional int64 cid = 1;
inline bool L2CSynAttentReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CSynAttentReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CSynAttentReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CSynAttentReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2CSynAttentReq::cid() const {
  return cid_;
}
inline void L2CSynAttentReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// repeated int64 ids = 2;
inline int L2CSynAttentReq::ids_size() const {
  return ids_.size();
}
inline void L2CSynAttentReq::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int64 L2CSynAttentReq::ids(int index) const {
  return ids_.Get(index);
}
inline void L2CSynAttentReq::set_ids(int index, ::google::protobuf::int64 value) {
  ids_.Set(index, value);
}
inline void L2CSynAttentReq::add_ids(::google::protobuf::int64 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
L2CSynAttentReq::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
L2CSynAttentReq::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// C2SSynAttentReq

// optional int64 cid = 1;
inline bool C2SSynAttentReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SSynAttentReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SSynAttentReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SSynAttentReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 C2SSynAttentReq::cid() const {
  return cid_;
}
inline void C2SSynAttentReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 zoneid = 2;
inline bool C2SSynAttentReq::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SSynAttentReq::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SSynAttentReq::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SSynAttentReq::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 C2SSynAttentReq::zoneid() const {
  return zoneid_;
}
inline void C2SSynAttentReq::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// repeated int64 ids = 3;
inline int C2SSynAttentReq::ids_size() const {
  return ids_.size();
}
inline void C2SSynAttentReq::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int64 C2SSynAttentReq::ids(int index) const {
  return ids_.Get(index);
}
inline void C2SSynAttentReq::set_ids(int index, ::google::protobuf::int64 value) {
  ids_.Set(index, value);
}
inline void C2SSynAttentReq::add_ids(::google::protobuf::int64 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
C2SSynAttentReq::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
C2SSynAttentReq::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// L2CKillBossInfoReq

// optional uint64 teamId = 1;
inline bool L2CKillBossInfoReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CKillBossInfoReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CKillBossInfoReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CKillBossInfoReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 L2CKillBossInfoReq::teamid() const {
  return teamid_;
}
inline void L2CKillBossInfoReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional string name = 2;
inline bool L2CKillBossInfoReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CKillBossInfoReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CKillBossInfoReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CKillBossInfoReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& L2CKillBossInfoReq::name() const {
  return *name_;
}
inline void L2CKillBossInfoReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2CKillBossInfoReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2CKillBossInfoReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* L2CKillBossInfoReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* L2CKillBossInfoReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void L2CKillBossInfoReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 id = 3;
inline bool L2CKillBossInfoReq::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CKillBossInfoReq::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CKillBossInfoReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CKillBossInfoReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 L2CKillBossInfoReq::id() const {
  return id_;
}
inline void L2CKillBossInfoReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 kill_cid = 4;
inline bool L2CKillBossInfoReq::has_kill_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CKillBossInfoReq::set_has_kill_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CKillBossInfoReq::clear_has_kill_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CKillBossInfoReq::clear_kill_cid() {
  kill_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_kill_cid();
}
inline ::google::protobuf::uint64 L2CKillBossInfoReq::kill_cid() const {
  return kill_cid_;
}
inline void L2CKillBossInfoReq::set_kill_cid(::google::protobuf::uint64 value) {
  set_has_kill_cid();
  kill_cid_ = value;
}

// -------------------------------------------------------------------

// L2SKillBossInfoReq

// optional uint64 teamId = 1;
inline bool L2SKillBossInfoReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SKillBossInfoReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SKillBossInfoReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SKillBossInfoReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 L2SKillBossInfoReq::teamid() const {
  return teamid_;
}
inline void L2SKillBossInfoReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional string name = 2;
inline bool L2SKillBossInfoReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2SKillBossInfoReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2SKillBossInfoReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2SKillBossInfoReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& L2SKillBossInfoReq::name() const {
  return *name_;
}
inline void L2SKillBossInfoReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2SKillBossInfoReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2SKillBossInfoReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* L2SKillBossInfoReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* L2SKillBossInfoReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void L2SKillBossInfoReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 id = 3;
inline bool L2SKillBossInfoReq::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2SKillBossInfoReq::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2SKillBossInfoReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2SKillBossInfoReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 L2SKillBossInfoReq::id() const {
  return id_;
}
inline void L2SKillBossInfoReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 groupId = 4;
inline bool L2SKillBossInfoReq::has_groupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2SKillBossInfoReq::set_has_groupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2SKillBossInfoReq::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2SKillBossInfoReq::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 L2SKillBossInfoReq::groupid() const {
  return groupid_;
}
inline void L2SKillBossInfoReq::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// -------------------------------------------------------------------

// L2CDropRecordReq

// repeated .proto_ff.BossDropInfo drop_info = 1;
inline int L2CDropRecordReq::drop_info_size() const {
  return drop_info_.size();
}
inline void L2CDropRecordReq::clear_drop_info() {
  drop_info_.Clear();
}
inline const ::proto_ff::BossDropInfo& L2CDropRecordReq::drop_info(int index) const {
  return drop_info_.Get(index);
}
inline ::proto_ff::BossDropInfo* L2CDropRecordReq::mutable_drop_info(int index) {
  return drop_info_.Mutable(index);
}
inline ::proto_ff::BossDropInfo* L2CDropRecordReq::add_drop_info() {
  return drop_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >&
L2CDropRecordReq::drop_info() const {
  return drop_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossDropInfo >*
L2CDropRecordReq::mutable_drop_info() {
  return &drop_info_;
}

// -------------------------------------------------------------------

// C2SDropRecordReq

// optional .proto_ff.L2CDropRecordReq record = 1;
inline bool C2SDropRecordReq::has_record() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SDropRecordReq::set_has_record() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SDropRecordReq::clear_has_record() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SDropRecordReq::clear_record() {
  if (record_ != NULL) record_->::proto_ff::L2CDropRecordReq::Clear();
  clear_has_record();
}
inline const ::proto_ff::L2CDropRecordReq& C2SDropRecordReq::record() const {
  return record_ != NULL ? *record_ : *default_instance_->record_;
}
inline ::proto_ff::L2CDropRecordReq* C2SDropRecordReq::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::proto_ff::L2CDropRecordReq;
  return record_;
}
inline ::proto_ff::L2CDropRecordReq* C2SDropRecordReq::release_record() {
  clear_has_record();
  ::proto_ff::L2CDropRecordReq* temp = record_;
  record_ = NULL;
  return temp;
}
inline void C2SDropRecordReq::set_allocated_record(::proto_ff::L2CDropRecordReq* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
}

// optional int32 zoneid = 2;
inline bool C2SDropRecordReq::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SDropRecordReq::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SDropRecordReq::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SDropRecordReq::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 C2SDropRecordReq::zoneid() const {
  return zoneid_;
}
inline void C2SDropRecordReq::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// C2SBossLayerReq

// optional int32 layerid = 1;
inline bool C2SBossLayerReq::has_layerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SBossLayerReq::set_has_layerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SBossLayerReq::clear_has_layerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SBossLayerReq::clear_layerid() {
  layerid_ = 0;
  clear_has_layerid();
}
inline ::google::protobuf::int32 C2SBossLayerReq::layerid() const {
  return layerid_;
}
inline void C2SBossLayerReq::set_layerid(::google::protobuf::int32 value) {
  set_has_layerid();
  layerid_ = value;
}

// optional int64 cid = 2;
inline bool C2SBossLayerReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SBossLayerReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SBossLayerReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SBossLayerReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 C2SBossLayerReq::cid() const {
  return cid_;
}
inline void C2SBossLayerReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 zoneid = 3;
inline bool C2SBossLayerReq::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2SBossLayerReq::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2SBossLayerReq::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2SBossLayerReq::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 C2SBossLayerReq::zoneid() const {
  return zoneid_;
}
inline void C2SBossLayerReq::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// L2CAttentOptReq

// optional int32 opt = 1;
inline bool L2CAttentOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CAttentOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CAttentOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CAttentOptReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 L2CAttentOptReq::opt() const {
  return opt_;
}
inline void L2CAttentOptReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int64 cid = 2;
inline bool L2CAttentOptReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CAttentOptReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CAttentOptReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CAttentOptReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2CAttentOptReq::cid() const {
  return cid_;
}
inline void L2CAttentOptReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 bossId = 3;
inline bool L2CAttentOptReq::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CAttentOptReq::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CAttentOptReq::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CAttentOptReq::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 L2CAttentOptReq::bossid() const {
  return bossid_;
}
inline void L2CAttentOptReq::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
}

// -------------------------------------------------------------------

// C2SAttentOptReq

// optional int32 opt = 1;
inline bool C2SAttentOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SAttentOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SAttentOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SAttentOptReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 C2SAttentOptReq::opt() const {
  return opt_;
}
inline void C2SAttentOptReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int64 cid = 2;
inline bool C2SAttentOptReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SAttentOptReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SAttentOptReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SAttentOptReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 C2SAttentOptReq::cid() const {
  return cid_;
}
inline void C2SAttentOptReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 bossId = 3;
inline bool C2SAttentOptReq::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2SAttentOptReq::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2SAttentOptReq::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2SAttentOptReq::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 C2SAttentOptReq::bossid() const {
  return bossid_;
}
inline void C2SAttentOptReq::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
}

// optional int32 zoneid = 4;
inline bool C2SAttentOptReq::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2SAttentOptReq::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2SAttentOptReq::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2SAttentOptReq::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 C2SAttentOptReq::zoneid() const {
  return zoneid_;
}
inline void C2SAttentOptReq::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// C2SBossLogReq

// optional int32 enterType = 1;
inline bool C2SBossLogReq::has_entertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SBossLogReq::set_has_entertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SBossLogReq::clear_has_entertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SBossLogReq::clear_entertype() {
  entertype_ = 0;
  clear_has_entertype();
}
inline ::google::protobuf::int32 C2SBossLogReq::entertype() const {
  return entertype_;
}
inline void C2SBossLogReq::set_entertype(::google::protobuf::int32 value) {
  set_has_entertype();
  entertype_ = value;
}

// optional int64 cid = 2;
inline bool C2SBossLogReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SBossLogReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SBossLogReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SBossLogReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 C2SBossLogReq::cid() const {
  return cid_;
}
inline void C2SBossLogReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Boss_2eproto__INCLUDED
