// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: taskdynamic.proto

#ifndef PROTOBUF_taskdynamic_2eproto__INCLUDED
#define PROTOBUF_taskdynamic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_taskdynamic_2eproto();
void protobuf_AssignDesc_taskdynamic_2eproto();
void protobuf_ShutdownFile_taskdynamic_2eproto();

class taskdynamictaskdynamic;
class Sheet_taskdynamictaskdynamic;
class taskdynamictaskcomcond;
class Sheet_taskdynamictaskcomcond;
class taskdynamictasktext;
class Sheet_taskdynamictasktext;

// ===================================================================

class taskdynamictaskdynamic : public ::google::protobuf::Message {
 public:
  taskdynamictaskdynamic();
  virtual ~taskdynamictaskdynamic();

  taskdynamictaskdynamic(const taskdynamictaskdynamic& from);

  inline taskdynamictaskdynamic& operator=(const taskdynamictaskdynamic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const taskdynamictaskdynamic& default_instance();

  void Swap(taskdynamictaskdynamic* other);

  // implements Message ----------------------------------------------

  taskdynamictaskdynamic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const taskdynamictaskdynamic& from);
  void MergeFrom(const taskdynamictaskdynamic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int64 taskid() const;
  inline void set_taskid(::google::protobuf::int64 value);

  // optional string remark = 2;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 2;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional int32 taskType = 3;
  inline bool has_tasktype() const;
  inline void clear_tasktype();
  static const int kTaskTypeFieldNumber = 3;
  inline ::google::protobuf::int32 tasktype() const;
  inline void set_tasktype(::google::protobuf::int32 value);

  // optional int32 minlv = 4;
  inline bool has_minlv() const;
  inline void clear_minlv();
  static const int kMinlvFieldNumber = 4;
  inline ::google::protobuf::int32 minlv() const;
  inline void set_minlv(::google::protobuf::int32 value);

  // optional int32 maxlv = 5;
  inline bool has_maxlv() const;
  inline void clear_maxlv();
  static const int kMaxlvFieldNumber = 5;
  inline ::google::protobuf::int32 maxlv() const;
  inline void set_maxlv(::google::protobuf::int32 value);

  // optional int32 receCount = 6;
  inline bool has_rececount() const;
  inline void clear_rececount();
  static const int kReceCountFieldNumber = 6;
  inline ::google::protobuf::int32 rececount() const;
  inline void set_rececount(::google::protobuf::int32 value);

  // optional string idList = 7;
  inline bool has_idlist() const;
  inline void clear_idlist();
  static const int kIdListFieldNumber = 7;
  inline const ::std::string& idlist() const;
  inline void set_idlist(const ::std::string& value);
  inline void set_idlist(const char* value);
  inline void set_idlist(const char* value, size_t size);
  inline ::std::string* mutable_idlist();
  inline ::std::string* release_idlist();
  inline void set_allocated_idlist(::std::string* idlist);

  // @@protoc_insertion_point(class_scope:proto_ff.taskdynamictaskdynamic)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_tasktype();
  inline void clear_has_tasktype();
  inline void set_has_minlv();
  inline void clear_has_minlv();
  inline void set_has_maxlv();
  inline void clear_has_maxlv();
  inline void set_has_rececount();
  inline void clear_has_rececount();
  inline void set_has_idlist();
  inline void clear_has_idlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 taskid_;
  ::std::string* remark_;
  ::google::protobuf::int32 tasktype_;
  ::google::protobuf::int32 minlv_;
  ::google::protobuf::int32 maxlv_;
  ::google::protobuf::int32 rececount_;
  ::std::string* idlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_taskdynamic_2eproto();
  friend void protobuf_AssignDesc_taskdynamic_2eproto();
  friend void protobuf_ShutdownFile_taskdynamic_2eproto();

  void InitAsDefaultInstance();
  static taskdynamictaskdynamic* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_taskdynamictaskdynamic : public ::google::protobuf::Message {
 public:
  Sheet_taskdynamictaskdynamic();
  virtual ~Sheet_taskdynamictaskdynamic();

  Sheet_taskdynamictaskdynamic(const Sheet_taskdynamictaskdynamic& from);

  inline Sheet_taskdynamictaskdynamic& operator=(const Sheet_taskdynamictaskdynamic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_taskdynamictaskdynamic& default_instance();

  void Swap(Sheet_taskdynamictaskdynamic* other);

  // implements Message ----------------------------------------------

  Sheet_taskdynamictaskdynamic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_taskdynamictaskdynamic& from);
  void MergeFrom(const Sheet_taskdynamictaskdynamic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.taskdynamictaskdynamic taskdynamictaskdynamic_List = 1;
  inline int taskdynamictaskdynamic_list_size() const;
  inline void clear_taskdynamictaskdynamic_list();
  static const int kTaskdynamictaskdynamicListFieldNumber = 1;
  inline const ::proto_ff::taskdynamictaskdynamic& taskdynamictaskdynamic_list(int index) const;
  inline ::proto_ff::taskdynamictaskdynamic* mutable_taskdynamictaskdynamic_list(int index);
  inline ::proto_ff::taskdynamictaskdynamic* add_taskdynamictaskdynamic_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskdynamic >&
      taskdynamictaskdynamic_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskdynamic >*
      mutable_taskdynamictaskdynamic_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_taskdynamictaskdynamic)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskdynamic > taskdynamictaskdynamic_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_taskdynamic_2eproto();
  friend void protobuf_AssignDesc_taskdynamic_2eproto();
  friend void protobuf_ShutdownFile_taskdynamic_2eproto();

  void InitAsDefaultInstance();
  static Sheet_taskdynamictaskdynamic* default_instance_;
};
// -------------------------------------------------------------------

class taskdynamictaskcomcond : public ::google::protobuf::Message {
 public:
  taskdynamictaskcomcond();
  virtual ~taskdynamictaskcomcond();

  taskdynamictaskcomcond(const taskdynamictaskcomcond& from);

  inline taskdynamictaskcomcond& operator=(const taskdynamictaskcomcond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const taskdynamictaskcomcond& default_instance();

  void Swap(taskdynamictaskcomcond* other);

  // implements Message ----------------------------------------------

  taskdynamictaskcomcond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const taskdynamictaskcomcond& from);
  void MergeFrom(const taskdynamictaskcomcond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 comcondID = 1;
  inline bool has_comcondid() const;
  inline void clear_comcondid();
  static const int kComcondIDFieldNumber = 1;
  inline ::google::protobuf::int64 comcondid() const;
  inline void set_comcondid(::google::protobuf::int64 value);

  // optional int32 comcondType = 2;
  inline bool has_comcondtype() const;
  inline void clear_comcondtype();
  static const int kComcondTypeFieldNumber = 2;
  inline ::google::protobuf::int32 comcondtype() const;
  inline void set_comcondtype(::google::protobuf::int32 value);

  // optional int64 param1 = 3;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 3;
  inline ::google::protobuf::int64 param1() const;
  inline void set_param1(::google::protobuf::int64 value);

  // optional int64 param2 = 4;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 4;
  inline ::google::protobuf::int64 param2() const;
  inline void set_param2(::google::protobuf::int64 value);

  // optional int64 param3 = 5;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 5;
  inline ::google::protobuf::int64 param3() const;
  inline void set_param3(::google::protobuf::int64 value);

  // optional int64 param4 = 6;
  inline bool has_param4() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 6;
  inline ::google::protobuf::int64 param4() const;
  inline void set_param4(::google::protobuf::int64 value);

  // optional int64 param5 = 7;
  inline bool has_param5() const;
  inline void clear_param5();
  static const int kParam5FieldNumber = 7;
  inline ::google::protobuf::int64 param5() const;
  inline void set_param5(::google::protobuf::int64 value);

  // optional int32 comcondRandomValue = 8;
  inline bool has_comcondrandomvalue() const;
  inline void clear_comcondrandomvalue();
  static const int kComcondRandomValueFieldNumber = 8;
  inline ::google::protobuf::int32 comcondrandomvalue() const;
  inline void set_comcondrandomvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.taskdynamictaskcomcond)
 private:
  inline void set_has_comcondid();
  inline void clear_has_comcondid();
  inline void set_has_comcondtype();
  inline void clear_has_comcondtype();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_param4();
  inline void clear_has_param4();
  inline void set_has_param5();
  inline void clear_has_param5();
  inline void set_has_comcondrandomvalue();
  inline void clear_has_comcondrandomvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 comcondid_;
  ::google::protobuf::int64 param1_;
  ::google::protobuf::int64 param2_;
  ::google::protobuf::int64 param3_;
  ::google::protobuf::int32 comcondtype_;
  ::google::protobuf::int32 comcondrandomvalue_;
  ::google::protobuf::int64 param4_;
  ::google::protobuf::int64 param5_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_taskdynamic_2eproto();
  friend void protobuf_AssignDesc_taskdynamic_2eproto();
  friend void protobuf_ShutdownFile_taskdynamic_2eproto();

  void InitAsDefaultInstance();
  static taskdynamictaskcomcond* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_taskdynamictaskcomcond : public ::google::protobuf::Message {
 public:
  Sheet_taskdynamictaskcomcond();
  virtual ~Sheet_taskdynamictaskcomcond();

  Sheet_taskdynamictaskcomcond(const Sheet_taskdynamictaskcomcond& from);

  inline Sheet_taskdynamictaskcomcond& operator=(const Sheet_taskdynamictaskcomcond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_taskdynamictaskcomcond& default_instance();

  void Swap(Sheet_taskdynamictaskcomcond* other);

  // implements Message ----------------------------------------------

  Sheet_taskdynamictaskcomcond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_taskdynamictaskcomcond& from);
  void MergeFrom(const Sheet_taskdynamictaskcomcond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.taskdynamictaskcomcond taskdynamictaskcomcond_List = 1;
  inline int taskdynamictaskcomcond_list_size() const;
  inline void clear_taskdynamictaskcomcond_list();
  static const int kTaskdynamictaskcomcondListFieldNumber = 1;
  inline const ::proto_ff::taskdynamictaskcomcond& taskdynamictaskcomcond_list(int index) const;
  inline ::proto_ff::taskdynamictaskcomcond* mutable_taskdynamictaskcomcond_list(int index);
  inline ::proto_ff::taskdynamictaskcomcond* add_taskdynamictaskcomcond_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskcomcond >&
      taskdynamictaskcomcond_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskcomcond >*
      mutable_taskdynamictaskcomcond_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_taskdynamictaskcomcond)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskcomcond > taskdynamictaskcomcond_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_taskdynamic_2eproto();
  friend void protobuf_AssignDesc_taskdynamic_2eproto();
  friend void protobuf_ShutdownFile_taskdynamic_2eproto();

  void InitAsDefaultInstance();
  static Sheet_taskdynamictaskcomcond* default_instance_;
};
// -------------------------------------------------------------------

class taskdynamictasktext : public ::google::protobuf::Message {
 public:
  taskdynamictasktext();
  virtual ~taskdynamictasktext();

  taskdynamictasktext(const taskdynamictasktext& from);

  inline taskdynamictasktext& operator=(const taskdynamictasktext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const taskdynamictasktext& default_instance();

  void Swap(taskdynamictasktext* other);

  // implements Message ----------------------------------------------

  taskdynamictasktext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const taskdynamictasktext& from);
  void MergeFrom(const taskdynamictasktext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 textID = 1;
  inline bool has_textid() const;
  inline void clear_textid();
  static const int kTextIDFieldNumber = 1;
  inline ::google::protobuf::int64 textid() const;
  inline void set_textid(::google::protobuf::int64 value);

  // optional string taskType = 2;
  inline bool has_tasktype() const;
  inline void clear_tasktype();
  static const int kTaskTypeFieldNumber = 2;
  inline const ::std::string& tasktype() const;
  inline void set_tasktype(const ::std::string& value);
  inline void set_tasktype(const char* value);
  inline void set_tasktype(const char* value, size_t size);
  inline ::std::string* mutable_tasktype();
  inline ::std::string* release_tasktype();
  inline void set_allocated_tasktype(::std::string* tasktype);

  // optional int32 comcondType = 3;
  inline bool has_comcondtype() const;
  inline void clear_comcondtype();
  static const int kComcondTypeFieldNumber = 3;
  inline ::google::protobuf::int32 comcondtype() const;
  inline void set_comcondtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.taskdynamictasktext)
 private:
  inline void set_has_textid();
  inline void clear_has_textid();
  inline void set_has_tasktype();
  inline void clear_has_tasktype();
  inline void set_has_comcondtype();
  inline void clear_has_comcondtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 textid_;
  ::std::string* tasktype_;
  ::google::protobuf::int32 comcondtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_taskdynamic_2eproto();
  friend void protobuf_AssignDesc_taskdynamic_2eproto();
  friend void protobuf_ShutdownFile_taskdynamic_2eproto();

  void InitAsDefaultInstance();
  static taskdynamictasktext* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_taskdynamictasktext : public ::google::protobuf::Message {
 public:
  Sheet_taskdynamictasktext();
  virtual ~Sheet_taskdynamictasktext();

  Sheet_taskdynamictasktext(const Sheet_taskdynamictasktext& from);

  inline Sheet_taskdynamictasktext& operator=(const Sheet_taskdynamictasktext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_taskdynamictasktext& default_instance();

  void Swap(Sheet_taskdynamictasktext* other);

  // implements Message ----------------------------------------------

  Sheet_taskdynamictasktext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_taskdynamictasktext& from);
  void MergeFrom(const Sheet_taskdynamictasktext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.taskdynamictasktext taskdynamictasktext_List = 1;
  inline int taskdynamictasktext_list_size() const;
  inline void clear_taskdynamictasktext_list();
  static const int kTaskdynamictasktextListFieldNumber = 1;
  inline const ::proto_ff::taskdynamictasktext& taskdynamictasktext_list(int index) const;
  inline ::proto_ff::taskdynamictasktext* mutable_taskdynamictasktext_list(int index);
  inline ::proto_ff::taskdynamictasktext* add_taskdynamictasktext_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictasktext >&
      taskdynamictasktext_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictasktext >*
      mutable_taskdynamictasktext_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_taskdynamictasktext)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictasktext > taskdynamictasktext_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_taskdynamic_2eproto();
  friend void protobuf_AssignDesc_taskdynamic_2eproto();
  friend void protobuf_ShutdownFile_taskdynamic_2eproto();

  void InitAsDefaultInstance();
  static Sheet_taskdynamictasktext* default_instance_;
};
// ===================================================================


// ===================================================================

// taskdynamictaskdynamic

// optional int64 taskID = 1;
inline bool taskdynamictaskdynamic::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void taskdynamictaskdynamic::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void taskdynamictaskdynamic::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void taskdynamictaskdynamic::clear_taskid() {
  taskid_ = GOOGLE_LONGLONG(0);
  clear_has_taskid();
}
inline ::google::protobuf::int64 taskdynamictaskdynamic::taskid() const {
  return taskid_;
}
inline void taskdynamictaskdynamic::set_taskid(::google::protobuf::int64 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional string remark = 2;
inline bool taskdynamictaskdynamic::has_remark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void taskdynamictaskdynamic::set_has_remark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void taskdynamictaskdynamic::clear_has_remark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void taskdynamictaskdynamic::clear_remark() {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& taskdynamictaskdynamic::remark() const {
  return *remark_;
}
inline void taskdynamictaskdynamic::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
}
inline void taskdynamictaskdynamic::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
}
inline void taskdynamictaskdynamic::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* taskdynamictaskdynamic::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  return remark_;
}
inline ::std::string* taskdynamictaskdynamic::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void taskdynamictaskdynamic::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 taskType = 3;
inline bool taskdynamictaskdynamic::has_tasktype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void taskdynamictaskdynamic::set_has_tasktype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void taskdynamictaskdynamic::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void taskdynamictaskdynamic::clear_tasktype() {
  tasktype_ = 0;
  clear_has_tasktype();
}
inline ::google::protobuf::int32 taskdynamictaskdynamic::tasktype() const {
  return tasktype_;
}
inline void taskdynamictaskdynamic::set_tasktype(::google::protobuf::int32 value) {
  set_has_tasktype();
  tasktype_ = value;
}

// optional int32 minlv = 4;
inline bool taskdynamictaskdynamic::has_minlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void taskdynamictaskdynamic::set_has_minlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void taskdynamictaskdynamic::clear_has_minlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void taskdynamictaskdynamic::clear_minlv() {
  minlv_ = 0;
  clear_has_minlv();
}
inline ::google::protobuf::int32 taskdynamictaskdynamic::minlv() const {
  return minlv_;
}
inline void taskdynamictaskdynamic::set_minlv(::google::protobuf::int32 value) {
  set_has_minlv();
  minlv_ = value;
}

// optional int32 maxlv = 5;
inline bool taskdynamictaskdynamic::has_maxlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void taskdynamictaskdynamic::set_has_maxlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void taskdynamictaskdynamic::clear_has_maxlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void taskdynamictaskdynamic::clear_maxlv() {
  maxlv_ = 0;
  clear_has_maxlv();
}
inline ::google::protobuf::int32 taskdynamictaskdynamic::maxlv() const {
  return maxlv_;
}
inline void taskdynamictaskdynamic::set_maxlv(::google::protobuf::int32 value) {
  set_has_maxlv();
  maxlv_ = value;
}

// optional int32 receCount = 6;
inline bool taskdynamictaskdynamic::has_rececount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void taskdynamictaskdynamic::set_has_rececount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void taskdynamictaskdynamic::clear_has_rececount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void taskdynamictaskdynamic::clear_rececount() {
  rececount_ = 0;
  clear_has_rececount();
}
inline ::google::protobuf::int32 taskdynamictaskdynamic::rececount() const {
  return rececount_;
}
inline void taskdynamictaskdynamic::set_rececount(::google::protobuf::int32 value) {
  set_has_rececount();
  rececount_ = value;
}

// optional string idList = 7;
inline bool taskdynamictaskdynamic::has_idlist() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void taskdynamictaskdynamic::set_has_idlist() {
  _has_bits_[0] |= 0x00000040u;
}
inline void taskdynamictaskdynamic::clear_has_idlist() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void taskdynamictaskdynamic::clear_idlist() {
  if (idlist_ != &::google::protobuf::internal::kEmptyString) {
    idlist_->clear();
  }
  clear_has_idlist();
}
inline const ::std::string& taskdynamictaskdynamic::idlist() const {
  return *idlist_;
}
inline void taskdynamictaskdynamic::set_idlist(const ::std::string& value) {
  set_has_idlist();
  if (idlist_ == &::google::protobuf::internal::kEmptyString) {
    idlist_ = new ::std::string;
  }
  idlist_->assign(value);
}
inline void taskdynamictaskdynamic::set_idlist(const char* value) {
  set_has_idlist();
  if (idlist_ == &::google::protobuf::internal::kEmptyString) {
    idlist_ = new ::std::string;
  }
  idlist_->assign(value);
}
inline void taskdynamictaskdynamic::set_idlist(const char* value, size_t size) {
  set_has_idlist();
  if (idlist_ == &::google::protobuf::internal::kEmptyString) {
    idlist_ = new ::std::string;
  }
  idlist_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* taskdynamictaskdynamic::mutable_idlist() {
  set_has_idlist();
  if (idlist_ == &::google::protobuf::internal::kEmptyString) {
    idlist_ = new ::std::string;
  }
  return idlist_;
}
inline ::std::string* taskdynamictaskdynamic::release_idlist() {
  clear_has_idlist();
  if (idlist_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = idlist_;
    idlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void taskdynamictaskdynamic::set_allocated_idlist(::std::string* idlist) {
  if (idlist_ != &::google::protobuf::internal::kEmptyString) {
    delete idlist_;
  }
  if (idlist) {
    set_has_idlist();
    idlist_ = idlist;
  } else {
    clear_has_idlist();
    idlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_taskdynamictaskdynamic

// repeated .proto_ff.taskdynamictaskdynamic taskdynamictaskdynamic_List = 1;
inline int Sheet_taskdynamictaskdynamic::taskdynamictaskdynamic_list_size() const {
  return taskdynamictaskdynamic_list_.size();
}
inline void Sheet_taskdynamictaskdynamic::clear_taskdynamictaskdynamic_list() {
  taskdynamictaskdynamic_list_.Clear();
}
inline const ::proto_ff::taskdynamictaskdynamic& Sheet_taskdynamictaskdynamic::taskdynamictaskdynamic_list(int index) const {
  return taskdynamictaskdynamic_list_.Get(index);
}
inline ::proto_ff::taskdynamictaskdynamic* Sheet_taskdynamictaskdynamic::mutable_taskdynamictaskdynamic_list(int index) {
  return taskdynamictaskdynamic_list_.Mutable(index);
}
inline ::proto_ff::taskdynamictaskdynamic* Sheet_taskdynamictaskdynamic::add_taskdynamictaskdynamic_list() {
  return taskdynamictaskdynamic_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskdynamic >&
Sheet_taskdynamictaskdynamic::taskdynamictaskdynamic_list() const {
  return taskdynamictaskdynamic_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskdynamic >*
Sheet_taskdynamictaskdynamic::mutable_taskdynamictaskdynamic_list() {
  return &taskdynamictaskdynamic_list_;
}

// -------------------------------------------------------------------

// taskdynamictaskcomcond

// optional int64 comcondID = 1;
inline bool taskdynamictaskcomcond::has_comcondid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void taskdynamictaskcomcond::set_has_comcondid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void taskdynamictaskcomcond::clear_has_comcondid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void taskdynamictaskcomcond::clear_comcondid() {
  comcondid_ = GOOGLE_LONGLONG(0);
  clear_has_comcondid();
}
inline ::google::protobuf::int64 taskdynamictaskcomcond::comcondid() const {
  return comcondid_;
}
inline void taskdynamictaskcomcond::set_comcondid(::google::protobuf::int64 value) {
  set_has_comcondid();
  comcondid_ = value;
}

// optional int32 comcondType = 2;
inline bool taskdynamictaskcomcond::has_comcondtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void taskdynamictaskcomcond::set_has_comcondtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void taskdynamictaskcomcond::clear_has_comcondtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void taskdynamictaskcomcond::clear_comcondtype() {
  comcondtype_ = 0;
  clear_has_comcondtype();
}
inline ::google::protobuf::int32 taskdynamictaskcomcond::comcondtype() const {
  return comcondtype_;
}
inline void taskdynamictaskcomcond::set_comcondtype(::google::protobuf::int32 value) {
  set_has_comcondtype();
  comcondtype_ = value;
}

// optional int64 param1 = 3;
inline bool taskdynamictaskcomcond::has_param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void taskdynamictaskcomcond::set_has_param1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void taskdynamictaskcomcond::clear_has_param1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void taskdynamictaskcomcond::clear_param1() {
  param1_ = GOOGLE_LONGLONG(0);
  clear_has_param1();
}
inline ::google::protobuf::int64 taskdynamictaskcomcond::param1() const {
  return param1_;
}
inline void taskdynamictaskcomcond::set_param1(::google::protobuf::int64 value) {
  set_has_param1();
  param1_ = value;
}

// optional int64 param2 = 4;
inline bool taskdynamictaskcomcond::has_param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void taskdynamictaskcomcond::set_has_param2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void taskdynamictaskcomcond::clear_has_param2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void taskdynamictaskcomcond::clear_param2() {
  param2_ = GOOGLE_LONGLONG(0);
  clear_has_param2();
}
inline ::google::protobuf::int64 taskdynamictaskcomcond::param2() const {
  return param2_;
}
inline void taskdynamictaskcomcond::set_param2(::google::protobuf::int64 value) {
  set_has_param2();
  param2_ = value;
}

// optional int64 param3 = 5;
inline bool taskdynamictaskcomcond::has_param3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void taskdynamictaskcomcond::set_has_param3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void taskdynamictaskcomcond::clear_has_param3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void taskdynamictaskcomcond::clear_param3() {
  param3_ = GOOGLE_LONGLONG(0);
  clear_has_param3();
}
inline ::google::protobuf::int64 taskdynamictaskcomcond::param3() const {
  return param3_;
}
inline void taskdynamictaskcomcond::set_param3(::google::protobuf::int64 value) {
  set_has_param3();
  param3_ = value;
}

// optional int64 param4 = 6;
inline bool taskdynamictaskcomcond::has_param4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void taskdynamictaskcomcond::set_has_param4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void taskdynamictaskcomcond::clear_has_param4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void taskdynamictaskcomcond::clear_param4() {
  param4_ = GOOGLE_LONGLONG(0);
  clear_has_param4();
}
inline ::google::protobuf::int64 taskdynamictaskcomcond::param4() const {
  return param4_;
}
inline void taskdynamictaskcomcond::set_param4(::google::protobuf::int64 value) {
  set_has_param4();
  param4_ = value;
}

// optional int64 param5 = 7;
inline bool taskdynamictaskcomcond::has_param5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void taskdynamictaskcomcond::set_has_param5() {
  _has_bits_[0] |= 0x00000040u;
}
inline void taskdynamictaskcomcond::clear_has_param5() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void taskdynamictaskcomcond::clear_param5() {
  param5_ = GOOGLE_LONGLONG(0);
  clear_has_param5();
}
inline ::google::protobuf::int64 taskdynamictaskcomcond::param5() const {
  return param5_;
}
inline void taskdynamictaskcomcond::set_param5(::google::protobuf::int64 value) {
  set_has_param5();
  param5_ = value;
}

// optional int32 comcondRandomValue = 8;
inline bool taskdynamictaskcomcond::has_comcondrandomvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void taskdynamictaskcomcond::set_has_comcondrandomvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void taskdynamictaskcomcond::clear_has_comcondrandomvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void taskdynamictaskcomcond::clear_comcondrandomvalue() {
  comcondrandomvalue_ = 0;
  clear_has_comcondrandomvalue();
}
inline ::google::protobuf::int32 taskdynamictaskcomcond::comcondrandomvalue() const {
  return comcondrandomvalue_;
}
inline void taskdynamictaskcomcond::set_comcondrandomvalue(::google::protobuf::int32 value) {
  set_has_comcondrandomvalue();
  comcondrandomvalue_ = value;
}

// -------------------------------------------------------------------

// Sheet_taskdynamictaskcomcond

// repeated .proto_ff.taskdynamictaskcomcond taskdynamictaskcomcond_List = 1;
inline int Sheet_taskdynamictaskcomcond::taskdynamictaskcomcond_list_size() const {
  return taskdynamictaskcomcond_list_.size();
}
inline void Sheet_taskdynamictaskcomcond::clear_taskdynamictaskcomcond_list() {
  taskdynamictaskcomcond_list_.Clear();
}
inline const ::proto_ff::taskdynamictaskcomcond& Sheet_taskdynamictaskcomcond::taskdynamictaskcomcond_list(int index) const {
  return taskdynamictaskcomcond_list_.Get(index);
}
inline ::proto_ff::taskdynamictaskcomcond* Sheet_taskdynamictaskcomcond::mutable_taskdynamictaskcomcond_list(int index) {
  return taskdynamictaskcomcond_list_.Mutable(index);
}
inline ::proto_ff::taskdynamictaskcomcond* Sheet_taskdynamictaskcomcond::add_taskdynamictaskcomcond_list() {
  return taskdynamictaskcomcond_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskcomcond >&
Sheet_taskdynamictaskcomcond::taskdynamictaskcomcond_list() const {
  return taskdynamictaskcomcond_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictaskcomcond >*
Sheet_taskdynamictaskcomcond::mutable_taskdynamictaskcomcond_list() {
  return &taskdynamictaskcomcond_list_;
}

// -------------------------------------------------------------------

// taskdynamictasktext

// optional int64 textID = 1;
inline bool taskdynamictasktext::has_textid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void taskdynamictasktext::set_has_textid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void taskdynamictasktext::clear_has_textid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void taskdynamictasktext::clear_textid() {
  textid_ = GOOGLE_LONGLONG(0);
  clear_has_textid();
}
inline ::google::protobuf::int64 taskdynamictasktext::textid() const {
  return textid_;
}
inline void taskdynamictasktext::set_textid(::google::protobuf::int64 value) {
  set_has_textid();
  textid_ = value;
}

// optional string taskType = 2;
inline bool taskdynamictasktext::has_tasktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void taskdynamictasktext::set_has_tasktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void taskdynamictasktext::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void taskdynamictasktext::clear_tasktype() {
  if (tasktype_ != &::google::protobuf::internal::kEmptyString) {
    tasktype_->clear();
  }
  clear_has_tasktype();
}
inline const ::std::string& taskdynamictasktext::tasktype() const {
  return *tasktype_;
}
inline void taskdynamictasktext::set_tasktype(const ::std::string& value) {
  set_has_tasktype();
  if (tasktype_ == &::google::protobuf::internal::kEmptyString) {
    tasktype_ = new ::std::string;
  }
  tasktype_->assign(value);
}
inline void taskdynamictasktext::set_tasktype(const char* value) {
  set_has_tasktype();
  if (tasktype_ == &::google::protobuf::internal::kEmptyString) {
    tasktype_ = new ::std::string;
  }
  tasktype_->assign(value);
}
inline void taskdynamictasktext::set_tasktype(const char* value, size_t size) {
  set_has_tasktype();
  if (tasktype_ == &::google::protobuf::internal::kEmptyString) {
    tasktype_ = new ::std::string;
  }
  tasktype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* taskdynamictasktext::mutable_tasktype() {
  set_has_tasktype();
  if (tasktype_ == &::google::protobuf::internal::kEmptyString) {
    tasktype_ = new ::std::string;
  }
  return tasktype_;
}
inline ::std::string* taskdynamictasktext::release_tasktype() {
  clear_has_tasktype();
  if (tasktype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tasktype_;
    tasktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void taskdynamictasktext::set_allocated_tasktype(::std::string* tasktype) {
  if (tasktype_ != &::google::protobuf::internal::kEmptyString) {
    delete tasktype_;
  }
  if (tasktype) {
    set_has_tasktype();
    tasktype_ = tasktype;
  } else {
    clear_has_tasktype();
    tasktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 comcondType = 3;
inline bool taskdynamictasktext::has_comcondtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void taskdynamictasktext::set_has_comcondtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void taskdynamictasktext::clear_has_comcondtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void taskdynamictasktext::clear_comcondtype() {
  comcondtype_ = 0;
  clear_has_comcondtype();
}
inline ::google::protobuf::int32 taskdynamictasktext::comcondtype() const {
  return comcondtype_;
}
inline void taskdynamictasktext::set_comcondtype(::google::protobuf::int32 value) {
  set_has_comcondtype();
  comcondtype_ = value;
}

// -------------------------------------------------------------------

// Sheet_taskdynamictasktext

// repeated .proto_ff.taskdynamictasktext taskdynamictasktext_List = 1;
inline int Sheet_taskdynamictasktext::taskdynamictasktext_list_size() const {
  return taskdynamictasktext_list_.size();
}
inline void Sheet_taskdynamictasktext::clear_taskdynamictasktext_list() {
  taskdynamictasktext_list_.Clear();
}
inline const ::proto_ff::taskdynamictasktext& Sheet_taskdynamictasktext::taskdynamictasktext_list(int index) const {
  return taskdynamictasktext_list_.Get(index);
}
inline ::proto_ff::taskdynamictasktext* Sheet_taskdynamictasktext::mutable_taskdynamictasktext_list(int index) {
  return taskdynamictasktext_list_.Mutable(index);
}
inline ::proto_ff::taskdynamictasktext* Sheet_taskdynamictasktext::add_taskdynamictasktext_list() {
  return taskdynamictasktext_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictasktext >&
Sheet_taskdynamictasktext::taskdynamictasktext_list() const {
  return taskdynamictasktext_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::taskdynamictasktext >*
Sheet_taskdynamictasktext::mutable_taskdynamictasktext_list() {
  return &taskdynamictasktext_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_taskdynamic_2eproto__INCLUDED
