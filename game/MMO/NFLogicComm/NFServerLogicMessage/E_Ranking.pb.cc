// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Ranking.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Ranking.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_RankingRanking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RankingRanking_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RankingRanking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RankingRanking_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RankingDate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RankingDate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RankingDate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RankingDate_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RankingButton_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RankingButton_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RankingButton_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RankingButton_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fRanking_2eproto() {
  protobuf_AddDesc_E_5fRanking_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Ranking.proto");
  GOOGLE_CHECK(file != NULL);
  E_RankingRanking_descriptor_ = file->message_type(0);
  static const int E_RankingRanking_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_rankingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_rankingname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_showsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_rankhide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, m_dateid_),
  };
  E_RankingRanking_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RankingRanking_descriptor_,
      E_RankingRanking::default_instance_,
      E_RankingRanking_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingRanking, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RankingRanking));
  Sheet_RankingRanking_descriptor_ = file->message_type(1);
  static const int Sheet_RankingRanking_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingRanking, e_rankingranking_list_),
  };
  Sheet_RankingRanking_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RankingRanking_descriptor_,
      Sheet_RankingRanking::default_instance_,
      Sheet_RankingRanking_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingRanking, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingRanking, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RankingRanking));
  E_RankingDate_descriptor_ = file->message_type(2);
  static const int E_RankingDate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingDate, m_dateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingDate, m_datename_),
  };
  E_RankingDate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RankingDate_descriptor_,
      E_RankingDate::default_instance_,
      E_RankingDate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingDate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingDate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RankingDate));
  Sheet_RankingDate_descriptor_ = file->message_type(3);
  static const int Sheet_RankingDate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingDate, e_rankingdate_list_),
  };
  Sheet_RankingDate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RankingDate_descriptor_,
      Sheet_RankingDate::default_instance_,
      Sheet_RankingDate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingDate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingDate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RankingDate));
  E_RankingButton_descriptor_ = file->message_type(4);
  static const int E_RankingButton_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingButton, m_buttonid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingButton, m_buttonname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingButton, m_display_),
  };
  E_RankingButton_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RankingButton_descriptor_,
      E_RankingButton::default_instance_,
      E_RankingButton_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingButton, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RankingButton, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RankingButton));
  Sheet_RankingButton_descriptor_ = file->message_type(5);
  static const int Sheet_RankingButton_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingButton, e_rankingbutton_list_),
  };
  Sheet_RankingButton_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RankingButton_descriptor_,
      Sheet_RankingButton::default_instance_,
      Sheet_RankingButton_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingButton, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RankingButton, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RankingButton));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fRanking_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RankingRanking_descriptor_, &E_RankingRanking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RankingRanking_descriptor_, &Sheet_RankingRanking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RankingDate_descriptor_, &E_RankingDate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RankingDate_descriptor_, &Sheet_RankingDate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RankingButton_descriptor_, &E_RankingButton::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RankingButton_descriptor_, &Sheet_RankingButton::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fRanking_2eproto() {
  delete E_RankingRanking::default_instance_;
  delete E_RankingRanking_reflection_;
  delete Sheet_RankingRanking::default_instance_;
  delete Sheet_RankingRanking_reflection_;
  delete E_RankingDate::default_instance_;
  delete E_RankingDate_reflection_;
  delete Sheet_RankingDate::default_instance_;
  delete Sheet_RankingDate_reflection_;
  delete E_RankingButton::default_instance_;
  delete E_RankingButton_reflection_;
  delete Sheet_RankingButton::default_instance_;
  delete Sheet_RankingButton_reflection_;
}

void protobuf_AddDesc_E_5fRanking_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017E_Ranking.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"\304\002\n\020E_RankingRanking\022$\n\013m_ran"
    "kingid\030\001 \001(\005B\017\302\377\024\013\346\216\222\350\241\214\346\246\234ID\022+\n\rm_ranki"
    "ngname\030\002 \001(\tB\024\302\377\024\014\346\216\222\350\241\214\345\220\215\347\247\260\220\301\024@\022%\n\007m_"
    "title\030\003 \001(\tB\024\302\377\024\014\346\246\234\344\270\200\347\247\260\345\217\267\220\301\024@\022-\n\nm_c"
    "apacity\030\004 \001(\005B\031\302\377\024\025\345\256\236\351\231\205\346\216\222\345\244\232\345\260\221\345\205\203\347\264\240"
    "\022-\n\nm_showsize\030\005 \001(\005B\031\302\377\024\025\346\230\276\347\244\272\345\244\232\345\260\221\344\270"
    "\252\345\205\203\347\264\240\0220\n\nm_rankhide\030\006 \001(\005B\034\302\377\024\030\346\230\257\345\220\246\345"
    "\234\250\346\216\222\350\241\214\346\246\234\351\232\220\350\227\217\022&\n\010m_dateid\030\007 \003(\005B\024\302\377\024"
    "\014\346\216\222\350\241\214\346\225\260\346\215\256\210\301\024\005\"W\n\024Sheet_RankingRankin"
    "g\022\?\n\025E_RankingRanking_List\030\001 \003(\0132\032.proto"
    "_ff.E_RankingRankingB\004\210\301\024\020\"Y\n\rE_RankingD"
    "ate\022\036\n\010m_dateid\030\001 \001(\005B\014\302\377\024\010\346\225\260\346\215\256ID\022(\n\nm"
    "_datename\030\002 \001(\tB\024\302\377\024\014\346\225\260\346\215\256\345\220\215\347\247\260\220\301\024@\"N\n"
    "\021Sheet_RankingDate\0229\n\022E_RankingDate_List"
    "\030\001 \003(\0132\027.proto_ff.E_RankingDateB\004\210\301\024 \"\204\001"
    "\n\017E_RankingButton\022 \n\nm_buttonid\030\001 \001(\005B\014\302"
    "\377\024\010\346\225\260\346\215\256ID\022*\n\014m_buttonname\030\002 \001(\tB\024\302\377\024\014\346"
    "\225\260\346\215\256\345\220\215\347\247\260\220\301\024@\022#\n\tm_display\030\003 \001(\005B\020\302\377\024\014"
    "\346\230\257\345\220\246\346\230\276\347\244\272\"T\n\023Sheet_RankingButton\022=\n\024E"
    "_RankingButton_List\030\001 \003(\0132\031.proto_ff.E_R"
    "ankingButtonB\004\210\301\024\010", 858);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Ranking.proto", &protobuf_RegisterTypes);
  E_RankingRanking::default_instance_ = new E_RankingRanking();
  Sheet_RankingRanking::default_instance_ = new Sheet_RankingRanking();
  E_RankingDate::default_instance_ = new E_RankingDate();
  Sheet_RankingDate::default_instance_ = new Sheet_RankingDate();
  E_RankingButton::default_instance_ = new E_RankingButton();
  Sheet_RankingButton::default_instance_ = new Sheet_RankingButton();
  E_RankingRanking::default_instance_->InitAsDefaultInstance();
  Sheet_RankingRanking::default_instance_->InitAsDefaultInstance();
  E_RankingDate::default_instance_->InitAsDefaultInstance();
  Sheet_RankingDate::default_instance_->InitAsDefaultInstance();
  E_RankingButton::default_instance_->InitAsDefaultInstance();
  Sheet_RankingButton::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fRanking_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fRanking_2eproto {
  StaticDescriptorInitializer_E_5fRanking_2eproto() {
    protobuf_AddDesc_E_5fRanking_2eproto();
  }
} static_descriptor_initializer_E_5fRanking_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_RankingRanking::kMRankingidFieldNumber;
const int E_RankingRanking::kMRankingnameFieldNumber;
const int E_RankingRanking::kMTitleFieldNumber;
const int E_RankingRanking::kMCapacityFieldNumber;
const int E_RankingRanking::kMShowsizeFieldNumber;
const int E_RankingRanking::kMRankhideFieldNumber;
const int E_RankingRanking::kMDateidFieldNumber;
#endif  // !_MSC_VER

E_RankingRanking::E_RankingRanking()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RankingRanking::InitAsDefaultInstance() {
}

E_RankingRanking::E_RankingRanking(const E_RankingRanking& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RankingRanking::SharedCtor() {
  _cached_size_ = 0;
  m_rankingid_ = 0;
  m_rankingname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_capacity_ = 0;
  m_showsize_ = 0;
  m_rankhide_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RankingRanking::~E_RankingRanking() {
  SharedDtor();
}

void E_RankingRanking::SharedDtor() {
  if (m_rankingname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rankingname_;
  }
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    delete m_title_;
  }
  if (this != default_instance_) {
  }
}

void E_RankingRanking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RankingRanking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RankingRanking_descriptor_;
}

const E_RankingRanking& E_RankingRanking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRanking_2eproto();
  return *default_instance_;
}

E_RankingRanking* E_RankingRanking::default_instance_ = NULL;

E_RankingRanking* E_RankingRanking::New() const {
  return new E_RankingRanking;
}

void E_RankingRanking::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_rankingid_ = 0;
    if (has_m_rankingname()) {
      if (m_rankingname_ != &::google::protobuf::internal::kEmptyString) {
        m_rankingname_->clear();
      }
    }
    if (has_m_title()) {
      if (m_title_ != &::google::protobuf::internal::kEmptyString) {
        m_title_->clear();
      }
    }
    m_capacity_ = 0;
    m_showsize_ = 0;
    m_rankhide_ = 0;
  }
  m_dateid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RankingRanking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_rankingid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankingid_)));
          set_has_m_rankingid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_rankingname;
        break;
      }

      // optional string m_rankingname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_rankingname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_rankingname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_rankingname().data(), this->m_rankingname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_title;
        break;
      }

      // optional string m_title = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_title().data(), this->m_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_capacity;
        break;
      }

      // optional int32 m_capacity = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_capacity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_capacity_)));
          set_has_m_capacity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_showsize;
        break;
      }

      // optional int32 m_showsize = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_showsize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_showsize_)));
          set_has_m_showsize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_rankhide;
        break;
      }

      // optional int32 m_rankhide = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankhide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rankhide_)));
          set_has_m_rankhide();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_dateid;
        break;
      }

      // repeated int32 m_dateid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_m_dateid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_dateid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_dateid;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RankingRanking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_rankingid = 1;
  if (has_m_rankingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_rankingid(), output);
  }

  // optional string m_rankingname = 2;
  if (has_m_rankingname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rankingname().data(), this->m_rankingname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_rankingname(), output);
  }

  // optional string m_title = 3;
  if (has_m_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_title().data(), this->m_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_title(), output);
  }

  // optional int32 m_capacity = 4;
  if (has_m_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_capacity(), output);
  }

  // optional int32 m_showsize = 5;
  if (has_m_showsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_showsize(), output);
  }

  // optional int32 m_rankhide = 6;
  if (has_m_rankhide()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_rankhide(), output);
  }

  // repeated int32 m_dateid = 7;
  for (int i = 0; i < this->m_dateid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->m_dateid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RankingRanking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_rankingid = 1;
  if (has_m_rankingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_rankingid(), target);
  }

  // optional string m_rankingname = 2;
  if (has_m_rankingname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rankingname().data(), this->m_rankingname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_rankingname(), target);
  }

  // optional string m_title = 3;
  if (has_m_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_title().data(), this->m_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_title(), target);
  }

  // optional int32 m_capacity = 4;
  if (has_m_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_capacity(), target);
  }

  // optional int32 m_showsize = 5;
  if (has_m_showsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_showsize(), target);
  }

  // optional int32 m_rankhide = 6;
  if (has_m_rankhide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_rankhide(), target);
  }

  // repeated int32 m_dateid = 7;
  for (int i = 0; i < this->m_dateid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->m_dateid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RankingRanking::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_rankingid = 1;
    if (has_m_rankingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankingid());
    }

    // optional string m_rankingname = 2;
    if (has_m_rankingname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_rankingname());
    }

    // optional string m_title = 3;
    if (has_m_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_title());
    }

    // optional int32 m_capacity = 4;
    if (has_m_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_capacity());
    }

    // optional int32 m_showsize = 5;
    if (has_m_showsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_showsize());
    }

    // optional int32 m_rankhide = 6;
    if (has_m_rankhide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rankhide());
    }

  }
  // repeated int32 m_dateid = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_dateid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_dateid(i));
    }
    total_size += 1 * this->m_dateid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RankingRanking::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RankingRanking* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RankingRanking*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RankingRanking::MergeFrom(const E_RankingRanking& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_dateid_.MergeFrom(from.m_dateid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_rankingid()) {
      set_m_rankingid(from.m_rankingid());
    }
    if (from.has_m_rankingname()) {
      set_m_rankingname(from.m_rankingname());
    }
    if (from.has_m_title()) {
      set_m_title(from.m_title());
    }
    if (from.has_m_capacity()) {
      set_m_capacity(from.m_capacity());
    }
    if (from.has_m_showsize()) {
      set_m_showsize(from.m_showsize());
    }
    if (from.has_m_rankhide()) {
      set_m_rankhide(from.m_rankhide());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RankingRanking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RankingRanking::CopyFrom(const E_RankingRanking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RankingRanking::IsInitialized() const {

  return true;
}

void E_RankingRanking::Swap(E_RankingRanking* other) {
  if (other != this) {
    std::swap(m_rankingid_, other->m_rankingid_);
    std::swap(m_rankingname_, other->m_rankingname_);
    std::swap(m_title_, other->m_title_);
    std::swap(m_capacity_, other->m_capacity_);
    std::swap(m_showsize_, other->m_showsize_);
    std::swap(m_rankhide_, other->m_rankhide_);
    m_dateid_.Swap(&other->m_dateid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RankingRanking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RankingRanking_descriptor_;
  metadata.reflection = E_RankingRanking_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RankingRanking::kERankingRankingListFieldNumber;
#endif  // !_MSC_VER

Sheet_RankingRanking::Sheet_RankingRanking()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RankingRanking::InitAsDefaultInstance() {
}

Sheet_RankingRanking::Sheet_RankingRanking(const Sheet_RankingRanking& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RankingRanking::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RankingRanking::~Sheet_RankingRanking() {
  SharedDtor();
}

void Sheet_RankingRanking::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RankingRanking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RankingRanking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RankingRanking_descriptor_;
}

const Sheet_RankingRanking& Sheet_RankingRanking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRanking_2eproto();
  return *default_instance_;
}

Sheet_RankingRanking* Sheet_RankingRanking::default_instance_ = NULL;

Sheet_RankingRanking* Sheet_RankingRanking::New() const {
  return new Sheet_RankingRanking;
}

void Sheet_RankingRanking::Clear() {
  e_rankingranking_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RankingRanking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RankingRanking E_RankingRanking_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RankingRanking_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rankingranking_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RankingRanking_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RankingRanking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RankingRanking E_RankingRanking_List = 1;
  for (int i = 0; i < this->e_rankingranking_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rankingranking_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RankingRanking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RankingRanking E_RankingRanking_List = 1;
  for (int i = 0; i < this->e_rankingranking_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rankingranking_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RankingRanking::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RankingRanking E_RankingRanking_List = 1;
  total_size += 1 * this->e_rankingranking_list_size();
  for (int i = 0; i < this->e_rankingranking_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rankingranking_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RankingRanking::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RankingRanking* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RankingRanking*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RankingRanking::MergeFrom(const Sheet_RankingRanking& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rankingranking_list_.MergeFrom(from.e_rankingranking_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RankingRanking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RankingRanking::CopyFrom(const Sheet_RankingRanking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RankingRanking::IsInitialized() const {

  return true;
}

void Sheet_RankingRanking::Swap(Sheet_RankingRanking* other) {
  if (other != this) {
    e_rankingranking_list_.Swap(&other->e_rankingranking_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RankingRanking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RankingRanking_descriptor_;
  metadata.reflection = Sheet_RankingRanking_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RankingDate::kMDateidFieldNumber;
const int E_RankingDate::kMDatenameFieldNumber;
#endif  // !_MSC_VER

E_RankingDate::E_RankingDate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RankingDate::InitAsDefaultInstance() {
}

E_RankingDate::E_RankingDate(const E_RankingDate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RankingDate::SharedCtor() {
  _cached_size_ = 0;
  m_dateid_ = 0;
  m_datename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RankingDate::~E_RankingDate() {
  SharedDtor();
}

void E_RankingDate::SharedDtor() {
  if (m_datename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_datename_;
  }
  if (this != default_instance_) {
  }
}

void E_RankingDate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RankingDate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RankingDate_descriptor_;
}

const E_RankingDate& E_RankingDate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRanking_2eproto();
  return *default_instance_;
}

E_RankingDate* E_RankingDate::default_instance_ = NULL;

E_RankingDate* E_RankingDate::New() const {
  return new E_RankingDate;
}

void E_RankingDate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_dateid_ = 0;
    if (has_m_datename()) {
      if (m_datename_ != &::google::protobuf::internal::kEmptyString) {
        m_datename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RankingDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_dateid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dateid_)));
          set_has_m_dateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_datename;
        break;
      }

      // optional string m_datename = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_datename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_datename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_datename().data(), this->m_datename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RankingDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_dateid = 1;
  if (has_m_dateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_dateid(), output);
  }

  // optional string m_datename = 2;
  if (has_m_datename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_datename().data(), this->m_datename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_datename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RankingDate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_dateid = 1;
  if (has_m_dateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_dateid(), target);
  }

  // optional string m_datename = 2;
  if (has_m_datename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_datename().data(), this->m_datename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_datename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RankingDate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_dateid = 1;
    if (has_m_dateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dateid());
    }

    // optional string m_datename = 2;
    if (has_m_datename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_datename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RankingDate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RankingDate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RankingDate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RankingDate::MergeFrom(const E_RankingDate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_dateid()) {
      set_m_dateid(from.m_dateid());
    }
    if (from.has_m_datename()) {
      set_m_datename(from.m_datename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RankingDate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RankingDate::CopyFrom(const E_RankingDate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RankingDate::IsInitialized() const {

  return true;
}

void E_RankingDate::Swap(E_RankingDate* other) {
  if (other != this) {
    std::swap(m_dateid_, other->m_dateid_);
    std::swap(m_datename_, other->m_datename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RankingDate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RankingDate_descriptor_;
  metadata.reflection = E_RankingDate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RankingDate::kERankingDateListFieldNumber;
#endif  // !_MSC_VER

Sheet_RankingDate::Sheet_RankingDate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RankingDate::InitAsDefaultInstance() {
}

Sheet_RankingDate::Sheet_RankingDate(const Sheet_RankingDate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RankingDate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RankingDate::~Sheet_RankingDate() {
  SharedDtor();
}

void Sheet_RankingDate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RankingDate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RankingDate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RankingDate_descriptor_;
}

const Sheet_RankingDate& Sheet_RankingDate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRanking_2eproto();
  return *default_instance_;
}

Sheet_RankingDate* Sheet_RankingDate::default_instance_ = NULL;

Sheet_RankingDate* Sheet_RankingDate::New() const {
  return new Sheet_RankingDate;
}

void Sheet_RankingDate::Clear() {
  e_rankingdate_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RankingDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RankingDate E_RankingDate_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RankingDate_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rankingdate_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RankingDate_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RankingDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RankingDate E_RankingDate_List = 1;
  for (int i = 0; i < this->e_rankingdate_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rankingdate_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RankingDate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RankingDate E_RankingDate_List = 1;
  for (int i = 0; i < this->e_rankingdate_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rankingdate_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RankingDate::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RankingDate E_RankingDate_List = 1;
  total_size += 1 * this->e_rankingdate_list_size();
  for (int i = 0; i < this->e_rankingdate_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rankingdate_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RankingDate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RankingDate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RankingDate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RankingDate::MergeFrom(const Sheet_RankingDate& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rankingdate_list_.MergeFrom(from.e_rankingdate_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RankingDate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RankingDate::CopyFrom(const Sheet_RankingDate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RankingDate::IsInitialized() const {

  return true;
}

void Sheet_RankingDate::Swap(Sheet_RankingDate* other) {
  if (other != this) {
    e_rankingdate_list_.Swap(&other->e_rankingdate_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RankingDate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RankingDate_descriptor_;
  metadata.reflection = Sheet_RankingDate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RankingButton::kMButtonidFieldNumber;
const int E_RankingButton::kMButtonnameFieldNumber;
const int E_RankingButton::kMDisplayFieldNumber;
#endif  // !_MSC_VER

E_RankingButton::E_RankingButton()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RankingButton::InitAsDefaultInstance() {
}

E_RankingButton::E_RankingButton(const E_RankingButton& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RankingButton::SharedCtor() {
  _cached_size_ = 0;
  m_buttonid_ = 0;
  m_buttonname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_display_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RankingButton::~E_RankingButton() {
  SharedDtor();
}

void E_RankingButton::SharedDtor() {
  if (m_buttonname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_buttonname_;
  }
  if (this != default_instance_) {
  }
}

void E_RankingButton::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RankingButton::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RankingButton_descriptor_;
}

const E_RankingButton& E_RankingButton::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRanking_2eproto();
  return *default_instance_;
}

E_RankingButton* E_RankingButton::default_instance_ = NULL;

E_RankingButton* E_RankingButton::New() const {
  return new E_RankingButton;
}

void E_RankingButton::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_buttonid_ = 0;
    if (has_m_buttonname()) {
      if (m_buttonname_ != &::google::protobuf::internal::kEmptyString) {
        m_buttonname_->clear();
      }
    }
    m_display_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RankingButton::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_buttonid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buttonid_)));
          set_has_m_buttonid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_buttonname;
        break;
      }

      // optional string m_buttonname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_buttonname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_buttonname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_buttonname().data(), this->m_buttonname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_display;
        break;
      }

      // optional int32 m_display = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_display:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_display_)));
          set_has_m_display();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RankingButton::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_buttonid = 1;
  if (has_m_buttonid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_buttonid(), output);
  }

  // optional string m_buttonname = 2;
  if (has_m_buttonname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_buttonname().data(), this->m_buttonname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_buttonname(), output);
  }

  // optional int32 m_display = 3;
  if (has_m_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_display(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RankingButton::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_buttonid = 1;
  if (has_m_buttonid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_buttonid(), target);
  }

  // optional string m_buttonname = 2;
  if (has_m_buttonname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_buttonname().data(), this->m_buttonname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_buttonname(), target);
  }

  // optional int32 m_display = 3;
  if (has_m_display()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_display(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RankingButton::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_buttonid = 1;
    if (has_m_buttonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buttonid());
    }

    // optional string m_buttonname = 2;
    if (has_m_buttonname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_buttonname());
    }

    // optional int32 m_display = 3;
    if (has_m_display()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_display());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RankingButton::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RankingButton* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RankingButton*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RankingButton::MergeFrom(const E_RankingButton& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_buttonid()) {
      set_m_buttonid(from.m_buttonid());
    }
    if (from.has_m_buttonname()) {
      set_m_buttonname(from.m_buttonname());
    }
    if (from.has_m_display()) {
      set_m_display(from.m_display());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RankingButton::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RankingButton::CopyFrom(const E_RankingButton& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RankingButton::IsInitialized() const {

  return true;
}

void E_RankingButton::Swap(E_RankingButton* other) {
  if (other != this) {
    std::swap(m_buttonid_, other->m_buttonid_);
    std::swap(m_buttonname_, other->m_buttonname_);
    std::swap(m_display_, other->m_display_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RankingButton::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RankingButton_descriptor_;
  metadata.reflection = E_RankingButton_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RankingButton::kERankingButtonListFieldNumber;
#endif  // !_MSC_VER

Sheet_RankingButton::Sheet_RankingButton()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RankingButton::InitAsDefaultInstance() {
}

Sheet_RankingButton::Sheet_RankingButton(const Sheet_RankingButton& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RankingButton::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RankingButton::~Sheet_RankingButton() {
  SharedDtor();
}

void Sheet_RankingButton::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RankingButton::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RankingButton::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RankingButton_descriptor_;
}

const Sheet_RankingButton& Sheet_RankingButton::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fRanking_2eproto();
  return *default_instance_;
}

Sheet_RankingButton* Sheet_RankingButton::default_instance_ = NULL;

Sheet_RankingButton* Sheet_RankingButton::New() const {
  return new Sheet_RankingButton;
}

void Sheet_RankingButton::Clear() {
  e_rankingbutton_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RankingButton::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RankingButton E_RankingButton_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RankingButton_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rankingbutton_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RankingButton_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RankingButton::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RankingButton E_RankingButton_List = 1;
  for (int i = 0; i < this->e_rankingbutton_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rankingbutton_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RankingButton::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RankingButton E_RankingButton_List = 1;
  for (int i = 0; i < this->e_rankingbutton_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rankingbutton_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RankingButton::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RankingButton E_RankingButton_List = 1;
  total_size += 1 * this->e_rankingbutton_list_size();
  for (int i = 0; i < this->e_rankingbutton_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rankingbutton_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RankingButton::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RankingButton* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RankingButton*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RankingButton::MergeFrom(const Sheet_RankingButton& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rankingbutton_list_.MergeFrom(from.e_rankingbutton_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RankingButton::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RankingButton::CopyFrom(const Sheet_RankingButton& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RankingButton::IsInitialized() const {

  return true;
}

void Sheet_RankingButton::Swap(Sheet_RankingButton* other) {
  if (other != this) {
    e_rankingbutton_list_.Swap(&other->e_rankingbutton_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RankingButton::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RankingButton_descriptor_;
  metadata.reflection = Sheet_RankingButton_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
