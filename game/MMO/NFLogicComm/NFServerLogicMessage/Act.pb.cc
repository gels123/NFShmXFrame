// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Act.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Act.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* ActProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActUpdateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActUpdateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSActInitDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSActInitDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSActInitDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSActInitDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSActInitDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSActInitDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSActInitDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSActInitDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSActPreFinishReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSActPreFinishReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CLActInitDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CLActInitDataReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Act_2eproto() {
  protobuf_AddDesc_Act_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Act.proto");
  GOOGLE_CHECK(file != NULL);
  ActProto_descriptor_ = file->message_type(0);
  static const int ActProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, actuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, finishtime_),
  };
  ActProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActProto_descriptor_,
      ActProto::default_instance_,
      ActProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActProto));
  ActListReq_descriptor_ = file->message_type(1);
  static const int ActListReq_offsets_[1] = {
  };
  ActListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActListReq_descriptor_,
      ActListReq::default_instance_,
      ActListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActListReq));
  ActListRsp_descriptor_ = file->message_type(2);
  static const int ActListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActListRsp, act_lst_),
  };
  ActListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActListRsp_descriptor_,
      ActListRsp::default_instance_,
      ActListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActListRsp));
  ActUpdateRsp_descriptor_ = file->message_type(3);
  static const int ActUpdateRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActUpdateRsp, act_lst_),
  };
  ActUpdateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActUpdateRsp_descriptor_,
      ActUpdateRsp::default_instance_,
      ActUpdateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActUpdateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActUpdateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActUpdateRsp));
  ActDataProto_descriptor_ = file->message_type(4);
  static const int ActDataProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, actuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, finishtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, zid_),
  };
  ActDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActDataProto_descriptor_,
      ActDataProto::default_instance_,
      ActDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActDataProto));
  LSActInitDataReq_descriptor_ = file->message_type(5);
  static const int LSActInitDataReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataReq, zid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataReq, logicid_),
  };
  LSActInitDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LSActInitDataReq_descriptor_,
      LSActInitDataReq::default_instance_,
      LSActInitDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LSActInitDataReq));
  LSActInitDataRsp_descriptor_ = file->message_type(6);
  static const int LSActInitDataRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataRsp, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataRsp, act_lst_),
  };
  LSActInitDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LSActInitDataRsp_descriptor_,
      LSActInitDataRsp::default_instance_,
      LSActInitDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActInitDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LSActInitDataRsp));
  CSActInitDataReq_descriptor_ = file->message_type(7);
  static const int CSActInitDataReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataReq, zid_),
  };
  CSActInitDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSActInitDataReq_descriptor_,
      CSActInitDataReq::default_instance_,
      CSActInitDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSActInitDataReq));
  CSActInitDataRsp_descriptor_ = file->message_type(8);
  static const int CSActInitDataRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataRsp, itype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataRsp, act_lst_),
  };
  CSActInitDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSActInitDataRsp_descriptor_,
      CSActInitDataRsp::default_instance_,
      CSActInitDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSActInitDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSActInitDataRsp));
  LSActPreFinishReq_descriptor_ = file->message_type(9);
  static const int LSActPreFinishReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActPreFinishReq, actuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActPreFinishReq, actid_),
  };
  LSActPreFinishReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LSActPreFinishReq_descriptor_,
      LSActPreFinishReq::default_instance_,
      LSActPreFinishReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActPreFinishReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSActPreFinishReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LSActPreFinishReq));
  CLActInitDataReq_descriptor_ = file->message_type(10);
  static const int CLActInitDataReq_offsets_[1] = {
  };
  CLActInitDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CLActInitDataReq_descriptor_,
      CLActInitDataReq::default_instance_,
      CLActInitDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLActInitDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLActInitDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CLActInitDataReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Act_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActProto_descriptor_, &ActProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActListReq_descriptor_, &ActListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActListRsp_descriptor_, &ActListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActUpdateRsp_descriptor_, &ActUpdateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActDataProto_descriptor_, &ActDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LSActInitDataReq_descriptor_, &LSActInitDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LSActInitDataRsp_descriptor_, &LSActInitDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSActInitDataReq_descriptor_, &CSActInitDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSActInitDataRsp_descriptor_, &CSActInitDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LSActPreFinishReq_descriptor_, &LSActPreFinishReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CLActInitDataReq_descriptor_, &CLActInitDataReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Act_2eproto() {
  delete ActProto::default_instance_;
  delete ActProto_reflection_;
  delete ActListReq::default_instance_;
  delete ActListReq_reflection_;
  delete ActListRsp::default_instance_;
  delete ActListRsp_reflection_;
  delete ActUpdateRsp::default_instance_;
  delete ActUpdateRsp_reflection_;
  delete ActDataProto::default_instance_;
  delete ActDataProto_reflection_;
  delete LSActInitDataReq::default_instance_;
  delete LSActInitDataReq_reflection_;
  delete LSActInitDataRsp::default_instance_;
  delete LSActInitDataRsp_reflection_;
  delete CSActInitDataReq::default_instance_;
  delete CSActInitDataReq_reflection_;
  delete CSActInitDataRsp::default_instance_;
  delete CSActInitDataRsp_reflection_;
  delete LSActPreFinishReq::default_instance_;
  delete LSActPreFinishReq_reflection_;
  delete CLActInitDataReq::default_instance_;
  delete CLActInitDataReq_reflection_;
}

void protobuf_AddDesc_Act_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tAct.proto\022\010proto_ff\032\tCom.proto\032\017ComDef"
    "ine.proto\"p\n\010ActProto\022\016\n\006actuid\030\001 \001(\003\022\r\n"
    "\005actid\030\002 \001(\004\022\r\n\005state\030\003 \001(\005\022\021\n\tbegintime"
    "\030\004 \001(\004\022\017\n\007endtime\030\005 \001(\004\022\022\n\nfinishtime\030\006 "
    "\001(\004\"\014\n\nActListReq\"1\n\nActListRsp\022#\n\007act_l"
    "st\030\001 \003(\0132\022.proto_ff.ActProto\"3\n\014ActUpdat"
    "eRsp\022#\n\007act_lst\030\001 \003(\0132\022.proto_ff.ActProt"
    "o\"\201\001\n\014ActDataProto\022\016\n\006actuid\030\001 \001(\003\022\r\n\005ac"
    "tid\030\002 \001(\004\022\r\n\005state\030\003 \001(\005\022\021\n\tbegintime\030\004 "
    "\001(\004\022\017\n\007endtime\030\005 \001(\004\022\022\n\nfinishtime\030\006 \001(\004"
    "\022\013\n\003zid\030\007 \001(\r\"0\n\020LSActInitDataReq\022\013\n\003zid"
    "\030\001 \002(\r\022\017\n\007logicid\030\002 \002(\r\"J\n\020LSActInitData"
    "Rsp\022\r\n\005itype\030\001 \002(\005\022\'\n\007act_lst\030\002 \003(\0132\026.pr"
    "oto_ff.ActDataProto\"\037\n\020CSActInitDataReq\022"
    "\013\n\003zid\030\001 \002(\r\"J\n\020CSActInitDataRsp\022\r\n\005ityp"
    "e\030\001 \002(\005\022\'\n\007act_lst\030\002 \003(\0132\026.proto_ff.ActD"
    "ataProto\"2\n\021LSActPreFinishReq\022\016\n\006actuid\030"
    "\001 \002(\003\022\r\n\005actid\030\002 \002(\r\"\022\n\020CLActInitDataReq", 720);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Act.proto", &protobuf_RegisterTypes);
  ActProto::default_instance_ = new ActProto();
  ActListReq::default_instance_ = new ActListReq();
  ActListRsp::default_instance_ = new ActListRsp();
  ActUpdateRsp::default_instance_ = new ActUpdateRsp();
  ActDataProto::default_instance_ = new ActDataProto();
  LSActInitDataReq::default_instance_ = new LSActInitDataReq();
  LSActInitDataRsp::default_instance_ = new LSActInitDataRsp();
  CSActInitDataReq::default_instance_ = new CSActInitDataReq();
  CSActInitDataRsp::default_instance_ = new CSActInitDataRsp();
  LSActPreFinishReq::default_instance_ = new LSActPreFinishReq();
  CLActInitDataReq::default_instance_ = new CLActInitDataReq();
  ActProto::default_instance_->InitAsDefaultInstance();
  ActListReq::default_instance_->InitAsDefaultInstance();
  ActListRsp::default_instance_->InitAsDefaultInstance();
  ActUpdateRsp::default_instance_->InitAsDefaultInstance();
  ActDataProto::default_instance_->InitAsDefaultInstance();
  LSActInitDataReq::default_instance_->InitAsDefaultInstance();
  LSActInitDataRsp::default_instance_->InitAsDefaultInstance();
  CSActInitDataReq::default_instance_->InitAsDefaultInstance();
  CSActInitDataRsp::default_instance_->InitAsDefaultInstance();
  LSActPreFinishReq::default_instance_->InitAsDefaultInstance();
  CLActInitDataReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Act_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Act_2eproto {
  StaticDescriptorInitializer_Act_2eproto() {
    protobuf_AddDesc_Act_2eproto();
  }
} static_descriptor_initializer_Act_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ActProto::kActuidFieldNumber;
const int ActProto::kActidFieldNumber;
const int ActProto::kStateFieldNumber;
const int ActProto::kBegintimeFieldNumber;
const int ActProto::kEndtimeFieldNumber;
const int ActProto::kFinishtimeFieldNumber;
#endif  // !_MSC_VER

ActProto::ActProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActProto::InitAsDefaultInstance() {
}

ActProto::ActProto(const ActProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActProto::SharedCtor() {
  _cached_size_ = 0;
  actuid_ = GOOGLE_LONGLONG(0);
  actid_ = GOOGLE_ULONGLONG(0);
  state_ = 0;
  begintime_ = GOOGLE_ULONGLONG(0);
  endtime_ = GOOGLE_ULONGLONG(0);
  finishtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActProto::~ActProto() {
  SharedDtor();
}

void ActProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActProto_descriptor_;
}

const ActProto& ActProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

ActProto* ActProto::default_instance_ = NULL;

ActProto* ActProto::New() const {
  return new ActProto;
}

void ActProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    actuid_ = GOOGLE_LONGLONG(0);
    actid_ = GOOGLE_ULONGLONG(0);
    state_ = 0;
    begintime_ = GOOGLE_ULONGLONG(0);
    endtime_ = GOOGLE_ULONGLONG(0);
    finishtime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 actuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actuid_)));
          set_has_actuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_actid;
        break;
      }

      // optional uint64 actid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_actid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actid_)));
          set_has_actid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // optional int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_begintime;
        break;
      }

      // optional uint64 begintime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begintime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begintime_)));
          set_has_begintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_endtime;
        break;
      }

      // optional uint64 endtime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_finishtime;
        break;
      }

      // optional uint64 finishtime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finishtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &finishtime_)));
          set_has_finishtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 actuid = 1;
  if (has_actuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actuid(), output);
  }

  // optional uint64 actid = 2;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->actid(), output);
  }

  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // optional uint64 begintime = 4;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->begintime(), output);
  }

  // optional uint64 endtime = 5;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->endtime(), output);
  }

  // optional uint64 finishtime = 6;
  if (has_finishtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->finishtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 actuid = 1;
  if (has_actuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actuid(), target);
  }

  // optional uint64 actid = 2;
  if (has_actid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->actid(), target);
  }

  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // optional uint64 begintime = 4;
  if (has_begintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->begintime(), target);
  }

  // optional uint64 endtime = 5;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->endtime(), target);
  }

  // optional uint64 finishtime = 6;
  if (has_finishtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->finishtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 actuid = 1;
    if (has_actuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->actuid());
    }

    // optional uint64 actid = 2;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->actid());
    }

    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional uint64 begintime = 4;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->begintime());
    }

    // optional uint64 endtime = 5;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->endtime());
    }

    // optional uint64 finishtime = 6;
    if (has_finishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->finishtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActProto::MergeFrom(const ActProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actuid()) {
      set_actuid(from.actuid());
    }
    if (from.has_actid()) {
      set_actid(from.actid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_begintime()) {
      set_begintime(from.begintime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_finishtime()) {
      set_finishtime(from.finishtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActProto::CopyFrom(const ActProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActProto::IsInitialized() const {

  return true;
}

void ActProto::Swap(ActProto* other) {
  if (other != this) {
    std::swap(actuid_, other->actuid_);
    std::swap(actid_, other->actid_);
    std::swap(state_, other->state_);
    std::swap(begintime_, other->begintime_);
    std::swap(endtime_, other->endtime_);
    std::swap(finishtime_, other->finishtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActProto_descriptor_;
  metadata.reflection = ActProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ActListReq::ActListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActListReq::InitAsDefaultInstance() {
}

ActListReq::ActListReq(const ActListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActListReq::~ActListReq() {
  SharedDtor();
}

void ActListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActListReq_descriptor_;
}

const ActListReq& ActListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

ActListReq* ActListReq::default_instance_ = NULL;

ActListReq* ActListReq::New() const {
  return new ActListReq;
}

void ActListReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ActListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActListReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActListReq::MergeFrom(const ActListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActListReq::CopyFrom(const ActListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActListReq::IsInitialized() const {

  return true;
}

void ActListReq::Swap(ActListReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActListReq_descriptor_;
  metadata.reflection = ActListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActListRsp::kActLstFieldNumber;
#endif  // !_MSC_VER

ActListRsp::ActListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActListRsp::InitAsDefaultInstance() {
}

ActListRsp::ActListRsp(const ActListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActListRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActListRsp::~ActListRsp() {
  SharedDtor();
}

void ActListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActListRsp_descriptor_;
}

const ActListRsp& ActListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

ActListRsp* ActListRsp::default_instance_ = NULL;

ActListRsp* ActListRsp::New() const {
  return new ActListRsp;
}

void ActListRsp::Clear() {
  act_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.ActProto act_lst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_act_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.ActProto act_lst = 1;
  for (int i = 0; i < this->act_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.ActProto act_lst = 1;
  for (int i = 0; i < this->act_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActListRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.ActProto act_lst = 1;
  total_size += 1 * this->act_lst_size();
  for (int i = 0; i < this->act_lst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActListRsp::MergeFrom(const ActListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_lst_.MergeFrom(from.act_lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActListRsp::CopyFrom(const ActListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActListRsp::IsInitialized() const {

  return true;
}

void ActListRsp::Swap(ActListRsp* other) {
  if (other != this) {
    act_lst_.Swap(&other->act_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActListRsp_descriptor_;
  metadata.reflection = ActListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActUpdateRsp::kActLstFieldNumber;
#endif  // !_MSC_VER

ActUpdateRsp::ActUpdateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActUpdateRsp::InitAsDefaultInstance() {
}

ActUpdateRsp::ActUpdateRsp(const ActUpdateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActUpdateRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActUpdateRsp::~ActUpdateRsp() {
  SharedDtor();
}

void ActUpdateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActUpdateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActUpdateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActUpdateRsp_descriptor_;
}

const ActUpdateRsp& ActUpdateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

ActUpdateRsp* ActUpdateRsp::default_instance_ = NULL;

ActUpdateRsp* ActUpdateRsp::New() const {
  return new ActUpdateRsp;
}

void ActUpdateRsp::Clear() {
  act_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActUpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.ActProto act_lst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_act_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActUpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.ActProto act_lst = 1;
  for (int i = 0; i < this->act_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActUpdateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.ActProto act_lst = 1;
  for (int i = 0; i < this->act_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActUpdateRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.ActProto act_lst = 1;
  total_size += 1 * this->act_lst_size();
  for (int i = 0; i < this->act_lst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActUpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActUpdateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActUpdateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActUpdateRsp::MergeFrom(const ActUpdateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_lst_.MergeFrom(from.act_lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActUpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActUpdateRsp::CopyFrom(const ActUpdateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActUpdateRsp::IsInitialized() const {

  return true;
}

void ActUpdateRsp::Swap(ActUpdateRsp* other) {
  if (other != this) {
    act_lst_.Swap(&other->act_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActUpdateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActUpdateRsp_descriptor_;
  metadata.reflection = ActUpdateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActDataProto::kActuidFieldNumber;
const int ActDataProto::kActidFieldNumber;
const int ActDataProto::kStateFieldNumber;
const int ActDataProto::kBegintimeFieldNumber;
const int ActDataProto::kEndtimeFieldNumber;
const int ActDataProto::kFinishtimeFieldNumber;
const int ActDataProto::kZidFieldNumber;
#endif  // !_MSC_VER

ActDataProto::ActDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActDataProto::InitAsDefaultInstance() {
}

ActDataProto::ActDataProto(const ActDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActDataProto::SharedCtor() {
  _cached_size_ = 0;
  actuid_ = GOOGLE_LONGLONG(0);
  actid_ = GOOGLE_ULONGLONG(0);
  state_ = 0;
  begintime_ = GOOGLE_ULONGLONG(0);
  endtime_ = GOOGLE_ULONGLONG(0);
  finishtime_ = GOOGLE_ULONGLONG(0);
  zid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActDataProto::~ActDataProto() {
  SharedDtor();
}

void ActDataProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActDataProto_descriptor_;
}

const ActDataProto& ActDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

ActDataProto* ActDataProto::default_instance_ = NULL;

ActDataProto* ActDataProto::New() const {
  return new ActDataProto;
}

void ActDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    actuid_ = GOOGLE_LONGLONG(0);
    actid_ = GOOGLE_ULONGLONG(0);
    state_ = 0;
    begintime_ = GOOGLE_ULONGLONG(0);
    endtime_ = GOOGLE_ULONGLONG(0);
    finishtime_ = GOOGLE_ULONGLONG(0);
    zid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 actuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actuid_)));
          set_has_actuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_actid;
        break;
      }

      // optional uint64 actid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_actid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actid_)));
          set_has_actid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // optional int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_begintime;
        break;
      }

      // optional uint64 begintime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begintime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begintime_)));
          set_has_begintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_endtime;
        break;
      }

      // optional uint64 endtime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_finishtime;
        break;
      }

      // optional uint64 finishtime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finishtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &finishtime_)));
          set_has_finishtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_zid;
        break;
      }

      // optional uint32 zid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_zid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zid_)));
          set_has_zid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 actuid = 1;
  if (has_actuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actuid(), output);
  }

  // optional uint64 actid = 2;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->actid(), output);
  }

  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // optional uint64 begintime = 4;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->begintime(), output);
  }

  // optional uint64 endtime = 5;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->endtime(), output);
  }

  // optional uint64 finishtime = 6;
  if (has_finishtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->finishtime(), output);
  }

  // optional uint32 zid = 7;
  if (has_zid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->zid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 actuid = 1;
  if (has_actuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actuid(), target);
  }

  // optional uint64 actid = 2;
  if (has_actid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->actid(), target);
  }

  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // optional uint64 begintime = 4;
  if (has_begintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->begintime(), target);
  }

  // optional uint64 endtime = 5;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->endtime(), target);
  }

  // optional uint64 finishtime = 6;
  if (has_finishtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->finishtime(), target);
  }

  // optional uint32 zid = 7;
  if (has_zid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->zid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 actuid = 1;
    if (has_actuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->actuid());
    }

    // optional uint64 actid = 2;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->actid());
    }

    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional uint64 begintime = 4;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->begintime());
    }

    // optional uint64 endtime = 5;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->endtime());
    }

    // optional uint64 finishtime = 6;
    if (has_finishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->finishtime());
    }

    // optional uint32 zid = 7;
    if (has_zid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActDataProto::MergeFrom(const ActDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actuid()) {
      set_actuid(from.actuid());
    }
    if (from.has_actid()) {
      set_actid(from.actid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_begintime()) {
      set_begintime(from.begintime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_finishtime()) {
      set_finishtime(from.finishtime());
    }
    if (from.has_zid()) {
      set_zid(from.zid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActDataProto::CopyFrom(const ActDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActDataProto::IsInitialized() const {

  return true;
}

void ActDataProto::Swap(ActDataProto* other) {
  if (other != this) {
    std::swap(actuid_, other->actuid_);
    std::swap(actid_, other->actid_);
    std::swap(state_, other->state_);
    std::swap(begintime_, other->begintime_);
    std::swap(endtime_, other->endtime_);
    std::swap(finishtime_, other->finishtime_);
    std::swap(zid_, other->zid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActDataProto_descriptor_;
  metadata.reflection = ActDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LSActInitDataReq::kZidFieldNumber;
const int LSActInitDataReq::kLogicidFieldNumber;
#endif  // !_MSC_VER

LSActInitDataReq::LSActInitDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LSActInitDataReq::InitAsDefaultInstance() {
}

LSActInitDataReq::LSActInitDataReq(const LSActInitDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LSActInitDataReq::SharedCtor() {
  _cached_size_ = 0;
  zid_ = 0u;
  logicid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LSActInitDataReq::~LSActInitDataReq() {
  SharedDtor();
}

void LSActInitDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LSActInitDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSActInitDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSActInitDataReq_descriptor_;
}

const LSActInitDataReq& LSActInitDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

LSActInitDataReq* LSActInitDataReq::default_instance_ = NULL;

LSActInitDataReq* LSActInitDataReq::New() const {
  return new LSActInitDataReq;
}

void LSActInitDataReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    zid_ = 0u;
    logicid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LSActInitDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 zid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zid_)));
          set_has_zid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_logicid;
        break;
      }

      // required uint32 logicid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_logicid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logicid_)));
          set_has_logicid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LSActInitDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 zid = 1;
  if (has_zid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->zid(), output);
  }

  // required uint32 logicid = 2;
  if (has_logicid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->logicid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LSActInitDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 zid = 1;
  if (has_zid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->zid(), target);
  }

  // required uint32 logicid = 2;
  if (has_logicid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->logicid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LSActInitDataReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 zid = 1;
    if (has_zid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zid());
    }

    // required uint32 logicid = 2;
    if (has_logicid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logicid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSActInitDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LSActInitDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LSActInitDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LSActInitDataReq::MergeFrom(const LSActInitDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_zid()) {
      set_zid(from.zid());
    }
    if (from.has_logicid()) {
      set_logicid(from.logicid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LSActInitDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSActInitDataReq::CopyFrom(const LSActInitDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSActInitDataReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LSActInitDataReq::Swap(LSActInitDataReq* other) {
  if (other != this) {
    std::swap(zid_, other->zid_);
    std::swap(logicid_, other->logicid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LSActInitDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSActInitDataReq_descriptor_;
  metadata.reflection = LSActInitDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LSActInitDataRsp::kItypeFieldNumber;
const int LSActInitDataRsp::kActLstFieldNumber;
#endif  // !_MSC_VER

LSActInitDataRsp::LSActInitDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LSActInitDataRsp::InitAsDefaultInstance() {
}

LSActInitDataRsp::LSActInitDataRsp(const LSActInitDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LSActInitDataRsp::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LSActInitDataRsp::~LSActInitDataRsp() {
  SharedDtor();
}

void LSActInitDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LSActInitDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSActInitDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSActInitDataRsp_descriptor_;
}

const LSActInitDataRsp& LSActInitDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

LSActInitDataRsp* LSActInitDataRsp::default_instance_ = NULL;

LSActInitDataRsp* LSActInitDataRsp::New() const {
  return new LSActInitDataRsp;
}

void LSActInitDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
  }
  act_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LSActInitDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itype_)));
          set_has_itype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_lst;
        break;
      }

      // repeated .proto_ff.ActDataProto act_lst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LSActInitDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itype(), output);
  }

  // repeated .proto_ff.ActDataProto act_lst = 2;
  for (int i = 0; i < this->act_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LSActInitDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itype(), target);
  }

  // repeated .proto_ff.ActDataProto act_lst = 2;
  for (int i = 0; i < this->act_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LSActInitDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itype());
    }

  }
  // repeated .proto_ff.ActDataProto act_lst = 2;
  total_size += 1 * this->act_lst_size();
  for (int i = 0; i < this->act_lst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSActInitDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LSActInitDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LSActInitDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LSActInitDataRsp::MergeFrom(const LSActInitDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_lst_.MergeFrom(from.act_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LSActInitDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSActInitDataRsp::CopyFrom(const LSActInitDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSActInitDataRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LSActInitDataRsp::Swap(LSActInitDataRsp* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    act_lst_.Swap(&other->act_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LSActInitDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSActInitDataRsp_descriptor_;
  metadata.reflection = LSActInitDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSActInitDataReq::kZidFieldNumber;
#endif  // !_MSC_VER

CSActInitDataReq::CSActInitDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSActInitDataReq::InitAsDefaultInstance() {
}

CSActInitDataReq::CSActInitDataReq(const CSActInitDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSActInitDataReq::SharedCtor() {
  _cached_size_ = 0;
  zid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSActInitDataReq::~CSActInitDataReq() {
  SharedDtor();
}

void CSActInitDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSActInitDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSActInitDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSActInitDataReq_descriptor_;
}

const CSActInitDataReq& CSActInitDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

CSActInitDataReq* CSActInitDataReq::default_instance_ = NULL;

CSActInitDataReq* CSActInitDataReq::New() const {
  return new CSActInitDataReq;
}

void CSActInitDataReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    zid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSActInitDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 zid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zid_)));
          set_has_zid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CSActInitDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 zid = 1;
  if (has_zid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->zid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSActInitDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 zid = 1;
  if (has_zid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->zid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSActInitDataReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 zid = 1;
    if (has_zid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSActInitDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSActInitDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSActInitDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSActInitDataReq::MergeFrom(const CSActInitDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_zid()) {
      set_zid(from.zid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSActInitDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSActInitDataReq::CopyFrom(const CSActInitDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSActInitDataReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CSActInitDataReq::Swap(CSActInitDataReq* other) {
  if (other != this) {
    std::swap(zid_, other->zid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSActInitDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSActInitDataReq_descriptor_;
  metadata.reflection = CSActInitDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSActInitDataRsp::kItypeFieldNumber;
const int CSActInitDataRsp::kActLstFieldNumber;
#endif  // !_MSC_VER

CSActInitDataRsp::CSActInitDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSActInitDataRsp::InitAsDefaultInstance() {
}

CSActInitDataRsp::CSActInitDataRsp(const CSActInitDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSActInitDataRsp::SharedCtor() {
  _cached_size_ = 0;
  itype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSActInitDataRsp::~CSActInitDataRsp() {
  SharedDtor();
}

void CSActInitDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSActInitDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSActInitDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSActInitDataRsp_descriptor_;
}

const CSActInitDataRsp& CSActInitDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

CSActInitDataRsp* CSActInitDataRsp::default_instance_ = NULL;

CSActInitDataRsp* CSActInitDataRsp::New() const {
  return new CSActInitDataRsp;
}

void CSActInitDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itype_ = 0;
  }
  act_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSActInitDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itype_)));
          set_has_itype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_lst;
        break;
      }

      // repeated .proto_ff.ActDataProto act_lst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CSActInitDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itype = 1;
  if (has_itype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itype(), output);
  }

  // repeated .proto_ff.ActDataProto act_lst = 2;
  for (int i = 0; i < this->act_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSActInitDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itype = 1;
  if (has_itype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itype(), target);
  }

  // repeated .proto_ff.ActDataProto act_lst = 2;
  for (int i = 0; i < this->act_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSActInitDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itype = 1;
    if (has_itype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itype());
    }

  }
  // repeated .proto_ff.ActDataProto act_lst = 2;
  total_size += 1 * this->act_lst_size();
  for (int i = 0; i < this->act_lst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSActInitDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSActInitDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSActInitDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSActInitDataRsp::MergeFrom(const CSActInitDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_lst_.MergeFrom(from.act_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itype()) {
      set_itype(from.itype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSActInitDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSActInitDataRsp::CopyFrom(const CSActInitDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSActInitDataRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CSActInitDataRsp::Swap(CSActInitDataRsp* other) {
  if (other != this) {
    std::swap(itype_, other->itype_);
    act_lst_.Swap(&other->act_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSActInitDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSActInitDataRsp_descriptor_;
  metadata.reflection = CSActInitDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LSActPreFinishReq::kActuidFieldNumber;
const int LSActPreFinishReq::kActidFieldNumber;
#endif  // !_MSC_VER

LSActPreFinishReq::LSActPreFinishReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LSActPreFinishReq::InitAsDefaultInstance() {
}

LSActPreFinishReq::LSActPreFinishReq(const LSActPreFinishReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LSActPreFinishReq::SharedCtor() {
  _cached_size_ = 0;
  actuid_ = GOOGLE_LONGLONG(0);
  actid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LSActPreFinishReq::~LSActPreFinishReq() {
  SharedDtor();
}

void LSActPreFinishReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LSActPreFinishReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSActPreFinishReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSActPreFinishReq_descriptor_;
}

const LSActPreFinishReq& LSActPreFinishReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

LSActPreFinishReq* LSActPreFinishReq::default_instance_ = NULL;

LSActPreFinishReq* LSActPreFinishReq::New() const {
  return new LSActPreFinishReq;
}

void LSActPreFinishReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    actuid_ = GOOGLE_LONGLONG(0);
    actid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LSActPreFinishReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 actuid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actuid_)));
          set_has_actuid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_actid;
        break;
      }

      // required uint32 actid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_actid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actid_)));
          set_has_actid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LSActPreFinishReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 actuid = 1;
  if (has_actuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actuid(), output);
  }

  // required uint32 actid = 2;
  if (has_actid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->actid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LSActPreFinishReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 actuid = 1;
  if (has_actuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actuid(), target);
  }

  // required uint32 actid = 2;
  if (has_actid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->actid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LSActPreFinishReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 actuid = 1;
    if (has_actuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->actuid());
    }

    // required uint32 actid = 2;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->actid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSActPreFinishReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LSActPreFinishReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LSActPreFinishReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LSActPreFinishReq::MergeFrom(const LSActPreFinishReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actuid()) {
      set_actuid(from.actuid());
    }
    if (from.has_actid()) {
      set_actid(from.actid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LSActPreFinishReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSActPreFinishReq::CopyFrom(const LSActPreFinishReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSActPreFinishReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LSActPreFinishReq::Swap(LSActPreFinishReq* other) {
  if (other != this) {
    std::swap(actuid_, other->actuid_);
    std::swap(actid_, other->actid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LSActPreFinishReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSActPreFinishReq_descriptor_;
  metadata.reflection = LSActPreFinishReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CLActInitDataReq::CLActInitDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CLActInitDataReq::InitAsDefaultInstance() {
}

CLActInitDataReq::CLActInitDataReq(const CLActInitDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CLActInitDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CLActInitDataReq::~CLActInitDataReq() {
  SharedDtor();
}

void CLActInitDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CLActInitDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CLActInitDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CLActInitDataReq_descriptor_;
}

const CLActInitDataReq& CLActInitDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Act_2eproto();
  return *default_instance_;
}

CLActInitDataReq* CLActInitDataReq::default_instance_ = NULL;

CLActInitDataReq* CLActInitDataReq::New() const {
  return new CLActInitDataReq;
}

void CLActInitDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CLActInitDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CLActInitDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CLActInitDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CLActInitDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CLActInitDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CLActInitDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CLActInitDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CLActInitDataReq::MergeFrom(const CLActInitDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CLActInitDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLActInitDataReq::CopyFrom(const CLActInitDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLActInitDataReq::IsInitialized() const {

  return true;
}

void CLActInitDataReq::Swap(CLActInitDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CLActInitDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CLActInitDataReq_descriptor_;
  metadata.reflection = CLActInitDataReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
