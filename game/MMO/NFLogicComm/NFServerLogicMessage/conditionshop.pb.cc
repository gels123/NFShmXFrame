// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: conditionshop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "conditionshop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* conditionshopconditionshop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  conditionshopconditionshop_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_conditionshopconditionshop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_conditionshopconditionshop_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_conditionshop_2eproto() {
  protobuf_AddDesc_conditionshop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "conditionshop.proto");
  GOOGLE_CHECK(file != NULL);
  conditionshopconditionshop_descriptor_ = file->message_type(0);
  static const int conditionshopconditionshop_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, discountprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, conditionparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, conditiontype_),
  };
  conditionshopconditionshop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      conditionshopconditionshop_descriptor_,
      conditionshopconditionshop::default_instance_,
      conditionshopconditionshop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(conditionshopconditionshop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(conditionshopconditionshop));
  Sheet_conditionshopconditionshop_descriptor_ = file->message_type(1);
  static const int Sheet_conditionshopconditionshop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_conditionshopconditionshop, conditionshopconditionshop_list_),
  };
  Sheet_conditionshopconditionshop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_conditionshopconditionshop_descriptor_,
      Sheet_conditionshopconditionshop::default_instance_,
      Sheet_conditionshopconditionshop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_conditionshopconditionshop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_conditionshopconditionshop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_conditionshopconditionshop));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_conditionshop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    conditionshopconditionshop_descriptor_, &conditionshopconditionshop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_conditionshopconditionshop_descriptor_, &Sheet_conditionshopconditionshop::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_conditionshop_2eproto() {
  delete conditionshopconditionshop::default_instance_;
  delete conditionshopconditionshop_reflection_;
  delete Sheet_conditionshopconditionshop::default_instance_;
  delete Sheet_conditionshopconditionshop_reflection_;
}

void protobuf_AddDesc_conditionshop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023conditionshop.proto\022\010proto_ff\032\025yd_fiel"
    "doptions.proto\"\327\002\n\032conditionshopconditio"
    "nshop\022\022\n\002Id\030\001 \001(\005B\006\302\377\024\002id\022\030\n\004Type\030\002 \001(\005B"
    "\n\302\377\024\006\347\261\273\345\236\213\022\036\n\004Time\030\003 \001(\005B\020\302\377\024\014\346\214\201\347\273\255\346\227\266"
    "\351\227\264\022\033\n\005boxId\030\004 \001(\003B\014\302\377\024\010\345\245\226\345\212\261ID\022 \n\006item"
    "Id\030\005 \001(\tB\020\302\377\024\010\345\245\226\345\212\261ID\220\301\024<\022\036\n\004type\030\006 \001(\005"
    "B\020\302\377\024\014\350\264\247\345\270\201\347\261\273\345\236\213\022!\n\rDiscountPrice\030\007 \001("
    "\005B\n\302\377\024\006\347\216\260\344\273\267\0226\n\016ConditionParam\030\010 \003(\tB\036\302"
    "\377\024\022\350\247\246\345\217\221\346\235\241\344\273\266\345\217\202\346\225\260\210\301\024\003\220\301\024<\0221\n\rConditi"
    "onType\030\t \003(\005B\032\302\377\024\022\350\247\246\345\217\221\346\235\241\344\273\266\347\261\273\345\236\213\210\301\024\003"
    "\"w\n Sheet_conditionshopconditionshop\022S\n\037"
    "conditionshopconditionshop_List\030\001 \003(\0132$."
    "proto_ff.conditionshopconditionshopB\004\210\301\024"
    "\024", 521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "conditionshop.proto", &protobuf_RegisterTypes);
  conditionshopconditionshop::default_instance_ = new conditionshopconditionshop();
  Sheet_conditionshopconditionshop::default_instance_ = new Sheet_conditionshopconditionshop();
  conditionshopconditionshop::default_instance_->InitAsDefaultInstance();
  Sheet_conditionshopconditionshop::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_conditionshop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_conditionshop_2eproto {
  StaticDescriptorInitializer_conditionshop_2eproto() {
    protobuf_AddDesc_conditionshop_2eproto();
  }
} static_descriptor_initializer_conditionshop_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int conditionshopconditionshop::kIdFieldNumber;
const int conditionshopconditionshop::kTypeFieldNumber;
const int conditionshopconditionshop::kTimeFieldNumber;
const int conditionshopconditionshop::kBoxIdFieldNumber;
const int conditionshopconditionshop::kItemIdFieldNumber;
const int conditionshopconditionshop::kTypeFieldNumber_6;
const int conditionshopconditionshop::kDiscountPriceFieldNumber;
const int conditionshopconditionshop::kConditionParamFieldNumber;
const int conditionshopconditionshop::kConditionTypeFieldNumber;
#endif  // !_MSC_VER

conditionshopconditionshop::conditionshopconditionshop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void conditionshopconditionshop::InitAsDefaultInstance() {
}

conditionshopconditionshop::conditionshopconditionshop(const conditionshopconditionshop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void conditionshopconditionshop::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  time_ = 0;
  boxid_ = GOOGLE_LONGLONG(0);
  itemid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  discountprice_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

conditionshopconditionshop::~conditionshopconditionshop() {
  SharedDtor();
}

void conditionshopconditionshop::SharedDtor() {
  if (itemid_ != &::google::protobuf::internal::kEmptyString) {
    delete itemid_;
  }
  if (this != default_instance_) {
  }
}

void conditionshopconditionshop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* conditionshopconditionshop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return conditionshopconditionshop_descriptor_;
}

const conditionshopconditionshop& conditionshopconditionshop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conditionshop_2eproto();
  return *default_instance_;
}

conditionshopconditionshop* conditionshopconditionshop::default_instance_ = NULL;

conditionshopconditionshop* conditionshopconditionshop::New() const {
  return new conditionshopconditionshop;
}

void conditionshopconditionshop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 0;
    time_ = 0;
    boxid_ = GOOGLE_LONGLONG(0);
    if (has_itemid()) {
      if (itemid_ != &::google::protobuf::internal::kEmptyString) {
        itemid_->clear();
      }
    }
    type_ = 0;
    discountprice_ = 0;
  }
  conditionparam_.Clear();
  conditiontype_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool conditionshopconditionshop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }

      // optional int32 Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Time;
        break;
      }

      // optional int32 Time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_boxId;
        break;
      }

      // optional int64 boxId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boxId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_itemId;
        break;
      }

      // optional string itemId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->itemid().data(), this->itemid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional int32 type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_DiscountPrice;
        break;
      }

      // optional int32 DiscountPrice = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DiscountPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &discountprice_)));
          set_has_discountprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_ConditionParam;
        break;
      }

      // repeated string ConditionParam = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ConditionParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_conditionparam()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->conditionparam(this->conditionparam_size() - 1).data(),
            this->conditionparam(this->conditionparam_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_ConditionParam;
        if (input->ExpectTag(72)) goto parse_ConditionType;
        break;
      }

      // repeated int32 ConditionType = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ConditionType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72, input, this->mutable_conditiontype())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_conditiontype())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ConditionType;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void conditionshopconditionshop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 Type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 Time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  // optional int64 boxId = 4;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->boxid(), output);
  }

  // optional string itemId = 5;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->itemid(), output);
  }

  // optional int32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  // optional int32 DiscountPrice = 7;
  if (has_discountprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->discountprice(), output);
  }

  // repeated string ConditionParam = 8;
  for (int i = 0; i < this->conditionparam_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->conditionparam(i).data(), this->conditionparam(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->conditionparam(i), output);
  }

  // repeated int32 ConditionType = 9;
  for (int i = 0; i < this->conditiontype_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->conditiontype(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* conditionshopconditionshop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 Type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 Time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  // optional int64 boxId = 4;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->boxid(), target);
  }

  // optional string itemId = 5;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->itemid(), target);
  }

  // optional int32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  // optional int32 DiscountPrice = 7;
  if (has_discountprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->discountprice(), target);
  }

  // repeated string ConditionParam = 8;
  for (int i = 0; i < this->conditionparam_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->conditionparam(i).data(), this->conditionparam(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->conditionparam(i), target);
  }

  // repeated int32 ConditionType = 9;
  for (int i = 0; i < this->conditiontype_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(9, this->conditiontype(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int conditionshopconditionshop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 Type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 Time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional int64 boxId = 4;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boxid());
    }

    // optional string itemId = 5;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemid());
    }

    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 DiscountPrice = 7;
    if (has_discountprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->discountprice());
    }

  }
  // repeated string ConditionParam = 8;
  total_size += 1 * this->conditionparam_size();
  for (int i = 0; i < this->conditionparam_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->conditionparam(i));
  }

  // repeated int32 ConditionType = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->conditiontype_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->conditiontype(i));
    }
    total_size += 1 * this->conditiontype_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void conditionshopconditionshop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const conditionshopconditionshop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const conditionshopconditionshop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void conditionshopconditionshop::MergeFrom(const conditionshopconditionshop& from) {
  GOOGLE_CHECK_NE(&from, this);
  conditionparam_.MergeFrom(from.conditionparam_);
  conditiontype_.MergeFrom(from.conditiontype_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_discountprice()) {
      set_discountprice(from.discountprice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void conditionshopconditionshop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void conditionshopconditionshop::CopyFrom(const conditionshopconditionshop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool conditionshopconditionshop::IsInitialized() const {

  return true;
}

void conditionshopconditionshop::Swap(conditionshopconditionshop* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(time_, other->time_);
    std::swap(boxid_, other->boxid_);
    std::swap(itemid_, other->itemid_);
    std::swap(type_, other->type_);
    std::swap(discountprice_, other->discountprice_);
    conditionparam_.Swap(&other->conditionparam_);
    conditiontype_.Swap(&other->conditiontype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata conditionshopconditionshop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = conditionshopconditionshop_descriptor_;
  metadata.reflection = conditionshopconditionshop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_conditionshopconditionshop::kConditionshopconditionshopListFieldNumber;
#endif  // !_MSC_VER

Sheet_conditionshopconditionshop::Sheet_conditionshopconditionshop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_conditionshopconditionshop::InitAsDefaultInstance() {
}

Sheet_conditionshopconditionshop::Sheet_conditionshopconditionshop(const Sheet_conditionshopconditionshop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_conditionshopconditionshop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_conditionshopconditionshop::~Sheet_conditionshopconditionshop() {
  SharedDtor();
}

void Sheet_conditionshopconditionshop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_conditionshopconditionshop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_conditionshopconditionshop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_conditionshopconditionshop_descriptor_;
}

const Sheet_conditionshopconditionshop& Sheet_conditionshopconditionshop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conditionshop_2eproto();
  return *default_instance_;
}

Sheet_conditionshopconditionshop* Sheet_conditionshopconditionshop::default_instance_ = NULL;

Sheet_conditionshopconditionshop* Sheet_conditionshopconditionshop::New() const {
  return new Sheet_conditionshopconditionshop;
}

void Sheet_conditionshopconditionshop::Clear() {
  conditionshopconditionshop_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_conditionshopconditionshop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.conditionshopconditionshop conditionshopconditionshop_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_conditionshopconditionshop_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_conditionshopconditionshop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_conditionshopconditionshop_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_conditionshopconditionshop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.conditionshopconditionshop conditionshopconditionshop_List = 1;
  for (int i = 0; i < this->conditionshopconditionshop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->conditionshopconditionshop_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_conditionshopconditionshop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.conditionshopconditionshop conditionshopconditionshop_List = 1;
  for (int i = 0; i < this->conditionshopconditionshop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->conditionshopconditionshop_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_conditionshopconditionshop::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.conditionshopconditionshop conditionshopconditionshop_List = 1;
  total_size += 1 * this->conditionshopconditionshop_list_size();
  for (int i = 0; i < this->conditionshopconditionshop_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->conditionshopconditionshop_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_conditionshopconditionshop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_conditionshopconditionshop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_conditionshopconditionshop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_conditionshopconditionshop::MergeFrom(const Sheet_conditionshopconditionshop& from) {
  GOOGLE_CHECK_NE(&from, this);
  conditionshopconditionshop_list_.MergeFrom(from.conditionshopconditionshop_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_conditionshopconditionshop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_conditionshopconditionshop::CopyFrom(const Sheet_conditionshopconditionshop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_conditionshopconditionshop::IsInitialized() const {

  return true;
}

void Sheet_conditionshopconditionshop::Swap(Sheet_conditionshopconditionshop* other) {
  if (other != this) {
    conditionshopconditionshop_list_.Swap(&other->conditionshopconditionshop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_conditionshopconditionshop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_conditionshopconditionshop_descriptor_;
  metadata.reflection = Sheet_conditionshopconditionshop_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
