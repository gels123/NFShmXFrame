// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Drop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Drop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* DropPickReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropPickReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DropPickRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropPickRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DropHeadNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropHeadNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Drop_2eproto() {
  protobuf_AddDesc_Drop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Drop.proto");
  GOOGLE_CHECK(file != NULL);
  DropPickReq_descriptor_ = file->message_type(0);
  static const int DropPickReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickReq, drop_lst_),
  };
  DropPickReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DropPickReq_descriptor_,
      DropPickReq::default_instance_,
      DropPickReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DropPickReq));
  DropPickRsp_descriptor_ = file->message_type(1);
  static const int DropPickRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickRsp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickRsp, drop_list_),
  };
  DropPickRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DropPickRsp_descriptor_,
      DropPickRsp::default_instance_,
      DropPickRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropPickRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DropPickRsp));
  DropHeadNotify_descriptor_ = file->message_type(2);
  static const int DropHeadNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropHeadNotify, new_head_lst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropHeadNotify, del_head_lst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropHeadNotify, cid_),
  };
  DropHeadNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DropHeadNotify_descriptor_,
      DropHeadNotify::default_instance_,
      DropHeadNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropHeadNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropHeadNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DropHeadNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Drop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DropPickReq_descriptor_, &DropPickReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DropPickRsp_descriptor_, &DropPickRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DropHeadNotify_descriptor_, &DropHeadNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Drop_2eproto() {
  delete DropPickReq::default_instance_;
  delete DropPickReq_reflection_;
  delete DropPickRsp::default_instance_;
  delete DropPickRsp_reflection_;
  delete DropHeadNotify::default_instance_;
  delete DropHeadNotify_reflection_;
}

void protobuf_AddDesc_Drop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nDrop.proto\022\010proto_ff\032\tCom.proto\032\017ComDe"
    "fine.proto\"\037\n\013DropPickReq\022\020\n\010drop_lst\030\001 "
    "\003(\004\"-\n\013DropPickRsp\022\013\n\003ret\030\001 \002(\005\022\021\n\tdrop_"
    "list\030\002 \003(\004\"I\n\016DropHeadNotify\022\024\n\014new_head"
    "_lst\030\001 \003(\004\022\024\n\014del_head_lst\030\002 \003(\004\022\013\n\003cid\030"
    "\003 \001(\004", 205);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Drop.proto", &protobuf_RegisterTypes);
  DropPickReq::default_instance_ = new DropPickReq();
  DropPickRsp::default_instance_ = new DropPickRsp();
  DropHeadNotify::default_instance_ = new DropHeadNotify();
  DropPickReq::default_instance_->InitAsDefaultInstance();
  DropPickRsp::default_instance_->InitAsDefaultInstance();
  DropHeadNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Drop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Drop_2eproto {
  StaticDescriptorInitializer_Drop_2eproto() {
    protobuf_AddDesc_Drop_2eproto();
  }
} static_descriptor_initializer_Drop_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DropPickReq::kDropLstFieldNumber;
#endif  // !_MSC_VER

DropPickReq::DropPickReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DropPickReq::InitAsDefaultInstance() {
}

DropPickReq::DropPickReq(const DropPickReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DropPickReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DropPickReq::~DropPickReq() {
  SharedDtor();
}

void DropPickReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DropPickReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropPickReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropPickReq_descriptor_;
}

const DropPickReq& DropPickReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Drop_2eproto();
  return *default_instance_;
}

DropPickReq* DropPickReq::default_instance_ = NULL;

DropPickReq* DropPickReq::New() const {
  return new DropPickReq;
}

void DropPickReq::Clear() {
  drop_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DropPickReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 drop_lst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_drop_lst())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_drop_lst())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_drop_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DropPickReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 drop_lst = 1;
  for (int i = 0; i < this->drop_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->drop_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DropPickReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 drop_lst = 1;
  for (int i = 0; i < this->drop_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->drop_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DropPickReq::ByteSize() const {
  int total_size = 0;

  // repeated uint64 drop_lst = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->drop_lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->drop_lst(i));
    }
    total_size += 1 * this->drop_lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropPickReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DropPickReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DropPickReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DropPickReq::MergeFrom(const DropPickReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  drop_lst_.MergeFrom(from.drop_lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DropPickReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropPickReq::CopyFrom(const DropPickReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropPickReq::IsInitialized() const {

  return true;
}

void DropPickReq::Swap(DropPickReq* other) {
  if (other != this) {
    drop_lst_.Swap(&other->drop_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DropPickReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropPickReq_descriptor_;
  metadata.reflection = DropPickReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DropPickRsp::kRetFieldNumber;
const int DropPickRsp::kDropListFieldNumber;
#endif  // !_MSC_VER

DropPickRsp::DropPickRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DropPickRsp::InitAsDefaultInstance() {
}

DropPickRsp::DropPickRsp(const DropPickRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DropPickRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DropPickRsp::~DropPickRsp() {
  SharedDtor();
}

void DropPickRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DropPickRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropPickRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropPickRsp_descriptor_;
}

const DropPickRsp& DropPickRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Drop_2eproto();
  return *default_instance_;
}

DropPickRsp* DropPickRsp::default_instance_ = NULL;

DropPickRsp* DropPickRsp::New() const {
  return new DropPickRsp;
}

void DropPickRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  drop_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DropPickRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_drop_list;
        break;
      }

      // repeated uint64 drop_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_drop_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_drop_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_drop_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DropPickRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // repeated uint64 drop_list = 2;
  for (int i = 0; i < this->drop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->drop_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DropPickRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // repeated uint64 drop_list = 2;
  for (int i = 0; i < this->drop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->drop_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DropPickRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  // repeated uint64 drop_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->drop_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->drop_list(i));
    }
    total_size += 1 * this->drop_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropPickRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DropPickRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DropPickRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DropPickRsp::MergeFrom(const DropPickRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  drop_list_.MergeFrom(from.drop_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DropPickRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropPickRsp::CopyFrom(const DropPickRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropPickRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DropPickRsp::Swap(DropPickRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    drop_list_.Swap(&other->drop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DropPickRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropPickRsp_descriptor_;
  metadata.reflection = DropPickRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DropHeadNotify::kNewHeadLstFieldNumber;
const int DropHeadNotify::kDelHeadLstFieldNumber;
const int DropHeadNotify::kCidFieldNumber;
#endif  // !_MSC_VER

DropHeadNotify::DropHeadNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DropHeadNotify::InitAsDefaultInstance() {
}

DropHeadNotify::DropHeadNotify(const DropHeadNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DropHeadNotify::SharedCtor() {
  _cached_size_ = 0;
  cid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DropHeadNotify::~DropHeadNotify() {
  SharedDtor();
}

void DropHeadNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DropHeadNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropHeadNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropHeadNotify_descriptor_;
}

const DropHeadNotify& DropHeadNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Drop_2eproto();
  return *default_instance_;
}

DropHeadNotify* DropHeadNotify::default_instance_ = NULL;

DropHeadNotify* DropHeadNotify::New() const {
  return new DropHeadNotify;
}

void DropHeadNotify::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    cid_ = GOOGLE_ULONGLONG(0);
  }
  new_head_lst_.Clear();
  del_head_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DropHeadNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 new_head_lst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_head_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_new_head_lst())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_new_head_lst())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_new_head_lst;
        if (input->ExpectTag(16)) goto parse_del_head_lst;
        break;
      }

      // repeated uint64 del_head_lst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_del_head_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_del_head_lst())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_del_head_lst())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_del_head_lst;
        if (input->ExpectTag(24)) goto parse_cid;
        break;
      }

      // optional uint64 cid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DropHeadNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 new_head_lst = 1;
  for (int i = 0; i < this->new_head_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->new_head_lst(i), output);
  }

  // repeated uint64 del_head_lst = 2;
  for (int i = 0; i < this->del_head_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->del_head_lst(i), output);
  }

  // optional uint64 cid = 3;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->cid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DropHeadNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 new_head_lst = 1;
  for (int i = 0; i < this->new_head_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->new_head_lst(i), target);
  }

  // repeated uint64 del_head_lst = 2;
  for (int i = 0; i < this->del_head_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->del_head_lst(i), target);
  }

  // optional uint64 cid = 3;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->cid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DropHeadNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint64 cid = 3;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cid());
    }

  }
  // repeated uint64 new_head_lst = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->new_head_lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->new_head_lst(i));
    }
    total_size += 1 * this->new_head_lst_size() + data_size;
  }

  // repeated uint64 del_head_lst = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->del_head_lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->del_head_lst(i));
    }
    total_size += 1 * this->del_head_lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropHeadNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DropHeadNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DropHeadNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DropHeadNotify::MergeFrom(const DropHeadNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  new_head_lst_.MergeFrom(from.new_head_lst_);
  del_head_lst_.MergeFrom(from.del_head_lst_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DropHeadNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropHeadNotify::CopyFrom(const DropHeadNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropHeadNotify::IsInitialized() const {

  return true;
}

void DropHeadNotify::Swap(DropHeadNotify* other) {
  if (other != this) {
    new_head_lst_.Swap(&other->new_head_lst_);
    del_head_lst_.Swap(&other->del_head_lst_);
    std::swap(cid_, other->cid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DropHeadNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropHeadNotify_descriptor_;
  metadata.reflection = DropHeadNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
