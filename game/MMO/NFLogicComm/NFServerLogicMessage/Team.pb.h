// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Team.proto

#ifndef PROTOBUF_Team_2eproto__INCLUDED
#define PROTOBUF_Team_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Team_2eproto();
void protobuf_AssignDesc_Team_2eproto();
void protobuf_ShutdownFile_Team_2eproto();

class TeamMemProto;
class TeamMultMemProto;
class TeamMemSimpleProto;
class TeamMultMemSimpleProto;
class TeamProto;
class TeamApplyProto;
class TeamMultApplyProto;
class CenterTeamMemProto;
class CenterMultiTeamMemProto;
class CreateTeamReq;
class CreateTeamRsp;
class TeamApplyLstReq;
class TeamApplyLstRsp;
class TeamReplyApplyReq;
class TeamReplyApplyRsp;
class TeamUpdateMemNotify;
class TeamUpdateMemSimpleNotify;
class TeamUpdateInfoNotify;
class TeamUpdateSimpleNotify;
class TeamClearApplyLstReq;
class TeamClearApplyLstRsp;
class TeamUpdateApplyNotify;
class ApplyJoinTeamReq;
class ApplyJoinTeamRsp;
class InviteJoinTeamReq;
class InviteJoinTeamRsp;
class InviteJoinTeamNotify;
class ReplyInviteJoinTeamReq;
class ReplyInviteJoinTeamRsp;
class TeamSetObjReq;
class TeamSetObjRsp;
class TeamPromoteLeaderReq;
class TeamPromoteLeaderRsp;
class TeamAutoMatchReq;
class TeamAutoMatchRsp;
class TeamKickMemReq;
class TeamKickMemRsp;
class TeamQuitReq;
class TeamQuitRsp;
class TeamRefuseNotify;
class TeamMatchAtonceReq;
class TeamMatchAtonceRsp;
class SCCreteTeam;
class SCJoinTeam;
class SCQuitTeam;
class SCUpdateTeam;
class SCTeamLeader;
class SCTeamDismiss;
class CLCharTeamUpdate;
class CLUpdateSimpleTeam;
class CLDismissTeam;
class CLCharTeamClonessUpdate;
class LSTeamRobotHpSync;
class DupInviteStateProto;
class DupAllInviteStateProto;
class Duplicate_CancelStateNotify;
class DupTeamRobotProto;
class DupMultTeamRobotProto;

// ===================================================================

class TeamMemProto : public ::google::protobuf::Message {
 public:
  TeamMemProto();
  virtual ~TeamMemProto();

  TeamMemProto(const TeamMemProto& from);

  inline TeamMemProto& operator=(const TeamMemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemProto& default_instance();

  void Swap(TeamMemProto* other);

  // implements Message ----------------------------------------------

  TeamMemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemProto& from);
  void MergeFrom(const TeamMemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional .proto_ff.RoleFacadeProto facade = 5;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 5;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional int32 vip_level = 6;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);

  // optional uint64 joinTime = 7;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJoinTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 jointime() const;
  inline void set_jointime(::google::protobuf::uint64 value);

  // optional uint64 fight = 8;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 8;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional int32 online = 9;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 9;
  inline ::google::protobuf::int32 online() const;
  inline void set_online(::google::protobuf::int32 value);

  // optional uint64 mapid = 10;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 10;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional uint64 hp = 11;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 11;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // optional uint64 maxhp = 12;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 12;
  inline ::google::protobuf::uint64 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint64 value);

  // optional int32 robotflag = 13;
  inline bool has_robotflag() const;
  inline void clear_robotflag();
  static const int kRobotflagFieldNumber = 13;
  inline ::google::protobuf::int32 robotflag() const;
  inline void set_robotflag(::google::protobuf::int32 value);

  // optional uint32 unionid = 14;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionidFieldNumber = 14;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional int32 palace_layer = 15;
  inline bool has_palace_layer() const;
  inline void clear_palace_layer();
  static const int kPalaceLayerFieldNumber = 15;
  inline ::google::protobuf::int32 palace_layer() const;
  inline void set_palace_layer(::google::protobuf::int32 value);

  // optional int32 break_count = 16;
  inline bool has_break_count() const;
  inline void clear_break_count();
  static const int kBreakCountFieldNumber = 16;
  inline ::google::protobuf::int32 break_count() const;
  inline void set_break_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMemProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_robotflag();
  inline void clear_has_robotflag();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_palace_layer();
  inline void clear_has_palace_layer();
  inline void set_has_break_count();
  inline void clear_has_break_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 prof_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint64 jointime_;
  ::google::protobuf::int32 vip_level_;
  ::google::protobuf::int32 online_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint64 hp_;
  ::google::protobuf::uint64 maxhp_;
  ::google::protobuf::int32 robotflag_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::int32 palace_layer_;
  ::google::protobuf::int32 break_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMemProto* default_instance_;
};
// -------------------------------------------------------------------

class TeamMultMemProto : public ::google::protobuf::Message {
 public:
  TeamMultMemProto();
  virtual ~TeamMultMemProto();

  TeamMultMemProto(const TeamMultMemProto& from);

  inline TeamMultMemProto& operator=(const TeamMultMemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMultMemProto& default_instance();

  void Swap(TeamMultMemProto* other);

  // implements Message ----------------------------------------------

  TeamMultMemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMultMemProto& from);
  void MergeFrom(const TeamMultMemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.TeamMemProto mem_lst = 1;
  inline int mem_lst_size() const;
  inline void clear_mem_lst();
  static const int kMemLstFieldNumber = 1;
  inline const ::proto_ff::TeamMemProto& mem_lst(int index) const;
  inline ::proto_ff::TeamMemProto* mutable_mem_lst(int index);
  inline ::proto_ff::TeamMemProto* add_mem_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemProto >&
      mem_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemProto >*
      mutable_mem_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMultMemProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemProto > mem_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMultMemProto* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemSimpleProto : public ::google::protobuf::Message {
 public:
  TeamMemSimpleProto();
  virtual ~TeamMemSimpleProto();

  TeamMemSimpleProto(const TeamMemSimpleProto& from);

  inline TeamMemSimpleProto& operator=(const TeamMemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemSimpleProto& default_instance();

  void Swap(TeamMemSimpleProto* other);

  // implements Message ----------------------------------------------

  TeamMemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemSimpleProto& from);
  void MergeFrom(const TeamMemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // optional uint64 maxhp = 3;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 3;
  inline ::google::protobuf::uint64 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMemSimpleProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 hp_;
  ::google::protobuf::uint64 maxhp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class TeamMultMemSimpleProto : public ::google::protobuf::Message {
 public:
  TeamMultMemSimpleProto();
  virtual ~TeamMultMemSimpleProto();

  TeamMultMemSimpleProto(const TeamMultMemSimpleProto& from);

  inline TeamMultMemSimpleProto& operator=(const TeamMultMemSimpleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMultMemSimpleProto& default_instance();

  void Swap(TeamMultMemSimpleProto* other);

  // implements Message ----------------------------------------------

  TeamMultMemSimpleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMultMemSimpleProto& from);
  void MergeFrom(const TeamMultMemSimpleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.TeamMemSimpleProto mem_simple = 1;
  inline int mem_simple_size() const;
  inline void clear_mem_simple();
  static const int kMemSimpleFieldNumber = 1;
  inline const ::proto_ff::TeamMemSimpleProto& mem_simple(int index) const;
  inline ::proto_ff::TeamMemSimpleProto* mutable_mem_simple(int index);
  inline ::proto_ff::TeamMemSimpleProto* add_mem_simple();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemSimpleProto >&
      mem_simple() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemSimpleProto >*
      mutable_mem_simple();

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMultMemSimpleProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemSimpleProto > mem_simple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMultMemSimpleProto* default_instance_;
};
// -------------------------------------------------------------------

class TeamProto : public ::google::protobuf::Message {
 public:
  TeamProto();
  virtual ~TeamProto();

  TeamProto(const TeamProto& from);

  inline TeamProto& operator=(const TeamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamProto& default_instance();

  void Swap(TeamProto* other);

  // implements Message ----------------------------------------------

  TeamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamProto& from);
  void MergeFrom(const TeamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // optional int32 min_level = 3;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 3;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // optional int32 max_level = 4;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 4;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // optional uint64 leader = 5;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 5;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional int32 auto_match = 6;
  inline bool has_auto_match() const;
  inline void clear_auto_match();
  static const int kAutoMatchFieldNumber = 6;
  inline ::google::protobuf::int32 auto_match() const;
  inline void set_auto_match(::google::protobuf::int32 value);

  // optional .proto_ff.TeamMultMemProto mems = 7;
  inline bool has_mems() const;
  inline void clear_mems();
  static const int kMemsFieldNumber = 7;
  inline const ::proto_ff::TeamMultMemProto& mems() const;
  inline ::proto_ff::TeamMultMemProto* mutable_mems();
  inline ::proto_ff::TeamMultMemProto* release_mems();
  inline void set_allocated_mems(::proto_ff::TeamMultMemProto* mems);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamProto)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_auto_match();
  inline void clear_has_auto_match();
  inline void set_has_mems();
  inline void clear_has_mems();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::int32 max_level_;
  ::google::protobuf::int32 auto_match_;
  ::proto_ff::TeamMultMemProto* mems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamProto* default_instance_;
};
// -------------------------------------------------------------------

class TeamApplyProto : public ::google::protobuf::Message {
 public:
  TeamApplyProto();
  virtual ~TeamApplyProto();

  TeamApplyProto(const TeamApplyProto& from);

  inline TeamApplyProto& operator=(const TeamApplyProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApplyProto& default_instance();

  void Swap(TeamApplyProto* other);

  // implements Message ----------------------------------------------

  TeamApplyProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamApplyProto& from);
  void MergeFrom(const TeamApplyProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional uint64 apply_time = 6;
  inline bool has_apply_time() const;
  inline void clear_apply_time();
  static const int kApplyTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 apply_time() const;
  inline void set_apply_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamApplyProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_apply_time();
  inline void clear_has_apply_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::uint64 apply_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamApplyProto* default_instance_;
};
// -------------------------------------------------------------------

class TeamMultApplyProto : public ::google::protobuf::Message {
 public:
  TeamMultApplyProto();
  virtual ~TeamMultApplyProto();

  TeamMultApplyProto(const TeamMultApplyProto& from);

  inline TeamMultApplyProto& operator=(const TeamMultApplyProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMultApplyProto& default_instance();

  void Swap(TeamMultApplyProto* other);

  // implements Message ----------------------------------------------

  TeamMultApplyProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMultApplyProto& from);
  void MergeFrom(const TeamMultApplyProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.TeamApplyProto apply_lst = 1;
  inline int apply_lst_size() const;
  inline void clear_apply_lst();
  static const int kApplyLstFieldNumber = 1;
  inline const ::proto_ff::TeamApplyProto& apply_lst(int index) const;
  inline ::proto_ff::TeamApplyProto* mutable_apply_lst(int index);
  inline ::proto_ff::TeamApplyProto* add_apply_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamApplyProto >&
      apply_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamApplyProto >*
      mutable_apply_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMultApplyProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamApplyProto > apply_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMultApplyProto* default_instance_;
};
// -------------------------------------------------------------------

class CenterTeamMemProto : public ::google::protobuf::Message {
 public:
  CenterTeamMemProto();
  virtual ~CenterTeamMemProto();

  CenterTeamMemProto(const CenterTeamMemProto& from);

  inline CenterTeamMemProto& operator=(const CenterTeamMemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterTeamMemProto& default_instance();

  void Swap(CenterTeamMemProto* other);

  // implements Message ----------------------------------------------

  CenterTeamMemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterTeamMemProto& from);
  void MergeFrom(const CenterTeamMemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int32 robotflag = 5;
  inline bool has_robotflag() const;
  inline void clear_robotflag();
  static const int kRobotflagFieldNumber = 5;
  inline ::google::protobuf::int32 robotflag() const;
  inline void set_robotflag(::google::protobuf::int32 value);

  // optional uint32 unionid = 6;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionidFieldNumber = 6;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);

  // optional int32 palace_layer = 7;
  inline bool has_palace_layer() const;
  inline void clear_palace_layer();
  static const int kPalaceLayerFieldNumber = 7;
  inline ::google::protobuf::int32 palace_layer() const;
  inline void set_palace_layer(::google::protobuf::int32 value);

  // optional int32 palace_breakcount = 8;
  inline bool has_palace_breakcount() const;
  inline void clear_palace_breakcount();
  static const int kPalaceBreakcountFieldNumber = 8;
  inline ::google::protobuf::int32 palace_breakcount() const;
  inline void set_palace_breakcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterTeamMemProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_robotflag();
  inline void clear_has_robotflag();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_palace_layer();
  inline void clear_has_palace_layer();
  inline void set_has_palace_breakcount();
  inline void clear_has_palace_breakcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 robotflag_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::int32 palace_layer_;
  ::google::protobuf::int32 palace_breakcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CenterTeamMemProto* default_instance_;
};
// -------------------------------------------------------------------

class CenterMultiTeamMemProto : public ::google::protobuf::Message {
 public:
  CenterMultiTeamMemProto();
  virtual ~CenterMultiTeamMemProto();

  CenterMultiTeamMemProto(const CenterMultiTeamMemProto& from);

  inline CenterMultiTeamMemProto& operator=(const CenterMultiTeamMemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterMultiTeamMemProto& default_instance();

  void Swap(CenterMultiTeamMemProto* other);

  // implements Message ----------------------------------------------

  CenterMultiTeamMemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterMultiTeamMemProto& from);
  void MergeFrom(const CenterMultiTeamMemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CenterTeamMemProto mem = 1;
  inline int mem_size() const;
  inline void clear_mem();
  static const int kMemFieldNumber = 1;
  inline const ::proto_ff::CenterTeamMemProto& mem(int index) const;
  inline ::proto_ff::CenterTeamMemProto* mutable_mem(int index);
  inline ::proto_ff::CenterTeamMemProto* add_mem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterTeamMemProto >&
      mem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterTeamMemProto >*
      mutable_mem();

  // @@protoc_insertion_point(class_scope:proto_ff.CenterMultiTeamMemProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterTeamMemProto > mem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CenterMultiTeamMemProto* default_instance_;
};
// -------------------------------------------------------------------

class CreateTeamReq : public ::google::protobuf::Message {
 public:
  CreateTeamReq();
  virtual ~CreateTeamReq();

  CreateTeamReq(const CreateTeamReq& from);

  inline CreateTeamReq& operator=(const CreateTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTeamReq& default_instance();

  void Swap(CreateTeamReq* other);

  // implements Message ----------------------------------------------

  CreateTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTeamReq& from);
  void MergeFrom(const CreateTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // required int32 min_level = 2;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 2;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // required int32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CreateTeamReq)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 max_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CreateTeamReq* default_instance_;
};
// -------------------------------------------------------------------

class CreateTeamRsp : public ::google::protobuf::Message {
 public:
  CreateTeamRsp();
  virtual ~CreateTeamRsp();

  CreateTeamRsp(const CreateTeamRsp& from);

  inline CreateTeamRsp& operator=(const CreateTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTeamRsp& default_instance();

  void Swap(CreateTeamRsp* other);

  // implements Message ----------------------------------------------

  CreateTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTeamRsp& from);
  void MergeFrom(const CreateTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CreateTeamRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CreateTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamApplyLstReq : public ::google::protobuf::Message {
 public:
  TeamApplyLstReq();
  virtual ~TeamApplyLstReq();

  TeamApplyLstReq(const TeamApplyLstReq& from);

  inline TeamApplyLstReq& operator=(const TeamApplyLstReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApplyLstReq& default_instance();

  void Swap(TeamApplyLstReq* other);

  // implements Message ----------------------------------------------

  TeamApplyLstReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamApplyLstReq& from);
  void MergeFrom(const TeamApplyLstReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.TeamApplyLstReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamApplyLstReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamApplyLstRsp : public ::google::protobuf::Message {
 public:
  TeamApplyLstRsp();
  virtual ~TeamApplyLstRsp();

  TeamApplyLstRsp(const TeamApplyLstRsp& from);

  inline TeamApplyLstRsp& operator=(const TeamApplyLstRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApplyLstRsp& default_instance();

  void Swap(TeamApplyLstRsp* other);

  // implements Message ----------------------------------------------

  TeamApplyLstRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamApplyLstRsp& from);
  void MergeFrom(const TeamApplyLstRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional .proto_ff.TeamMultApplyProto apply = 2;
  inline bool has_apply() const;
  inline void clear_apply();
  static const int kApplyFieldNumber = 2;
  inline const ::proto_ff::TeamMultApplyProto& apply() const;
  inline ::proto_ff::TeamMultApplyProto* mutable_apply();
  inline ::proto_ff::TeamMultApplyProto* release_apply();
  inline void set_allocated_apply(::proto_ff::TeamMultApplyProto* apply);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamApplyLstRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_apply();
  inline void clear_has_apply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::TeamMultApplyProto* apply_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamApplyLstRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamReplyApplyReq : public ::google::protobuf::Message {
 public:
  TeamReplyApplyReq();
  virtual ~TeamReplyApplyReq();

  TeamReplyApplyReq(const TeamReplyApplyReq& from);

  inline TeamReplyApplyReq& operator=(const TeamReplyApplyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamReplyApplyReq& default_instance();

  void Swap(TeamReplyApplyReq* other);

  // implements Message ----------------------------------------------

  TeamReplyApplyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamReplyApplyReq& from);
  void MergeFrom(const TeamReplyApplyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamReplyApplyReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamReplyApplyReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamReplyApplyRsp : public ::google::protobuf::Message {
 public:
  TeamReplyApplyRsp();
  virtual ~TeamReplyApplyRsp();

  TeamReplyApplyRsp(const TeamReplyApplyRsp& from);

  inline TeamReplyApplyRsp& operator=(const TeamReplyApplyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamReplyApplyRsp& default_instance();

  void Swap(TeamReplyApplyRsp* other);

  // implements Message ----------------------------------------------

  TeamReplyApplyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamReplyApplyRsp& from);
  void MergeFrom(const TeamReplyApplyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamReplyApplyRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamReplyApplyRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamUpdateMemNotify : public ::google::protobuf::Message {
 public:
  TeamUpdateMemNotify();
  virtual ~TeamUpdateMemNotify();

  TeamUpdateMemNotify(const TeamUpdateMemNotify& from);

  inline TeamUpdateMemNotify& operator=(const TeamUpdateMemNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUpdateMemNotify& default_instance();

  void Swap(TeamUpdateMemNotify* other);

  // implements Message ----------------------------------------------

  TeamUpdateMemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamUpdateMemNotify& from);
  void MergeFrom(const TeamUpdateMemNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 del_mem = 1;
  inline int del_mem_size() const;
  inline void clear_del_mem();
  static const int kDelMemFieldNumber = 1;
  inline ::google::protobuf::uint64 del_mem(int index) const;
  inline void set_del_mem(int index, ::google::protobuf::uint64 value);
  inline void add_del_mem(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      del_mem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_del_mem();

  // optional int32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // optional .proto_ff.TeamMultMemProto mems = 3;
  inline bool has_mems() const;
  inline void clear_mems();
  static const int kMemsFieldNumber = 3;
  inline const ::proto_ff::TeamMultMemProto& mems() const;
  inline ::proto_ff::TeamMultMemProto* mutable_mems();
  inline ::proto_ff::TeamMultMemProto* release_mems();
  inline void set_allocated_mems(::proto_ff::TeamMultMemProto* mems);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamUpdateMemNotify)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_mems();
  inline void clear_has_mems();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > del_mem_;
  ::proto_ff::TeamMultMemProto* mems_;
  ::google::protobuf::int32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamUpdateMemNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamUpdateMemSimpleNotify : public ::google::protobuf::Message {
 public:
  TeamUpdateMemSimpleNotify();
  virtual ~TeamUpdateMemSimpleNotify();

  TeamUpdateMemSimpleNotify(const TeamUpdateMemSimpleNotify& from);

  inline TeamUpdateMemSimpleNotify& operator=(const TeamUpdateMemSimpleNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUpdateMemSimpleNotify& default_instance();

  void Swap(TeamUpdateMemSimpleNotify* other);

  // implements Message ----------------------------------------------

  TeamUpdateMemSimpleNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamUpdateMemSimpleNotify& from);
  void MergeFrom(const TeamUpdateMemSimpleNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.TeamMultMemSimpleProto simple_info = 1;
  inline bool has_simple_info() const;
  inline void clear_simple_info();
  static const int kSimpleInfoFieldNumber = 1;
  inline const ::proto_ff::TeamMultMemSimpleProto& simple_info() const;
  inline ::proto_ff::TeamMultMemSimpleProto* mutable_simple_info();
  inline ::proto_ff::TeamMultMemSimpleProto* release_simple_info();
  inline void set_allocated_simple_info(::proto_ff::TeamMultMemSimpleProto* simple_info);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamUpdateMemSimpleNotify)
 private:
  inline void set_has_simple_info();
  inline void clear_has_simple_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::TeamMultMemSimpleProto* simple_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamUpdateMemSimpleNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamUpdateInfoNotify : public ::google::protobuf::Message {
 public:
  TeamUpdateInfoNotify();
  virtual ~TeamUpdateInfoNotify();

  TeamUpdateInfoNotify(const TeamUpdateInfoNotify& from);

  inline TeamUpdateInfoNotify& operator=(const TeamUpdateInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUpdateInfoNotify& default_instance();

  void Swap(TeamUpdateInfoNotify* other);

  // implements Message ----------------------------------------------

  TeamUpdateInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamUpdateInfoNotify& from);
  void MergeFrom(const TeamUpdateInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.TeamProto info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::TeamProto& info() const;
  inline ::proto_ff::TeamProto* mutable_info();
  inline ::proto_ff::TeamProto* release_info();
  inline void set_allocated_info(::proto_ff::TeamProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamUpdateInfoNotify)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::TeamProto* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamUpdateInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamUpdateSimpleNotify : public ::google::protobuf::Message {
 public:
  TeamUpdateSimpleNotify();
  virtual ~TeamUpdateSimpleNotify();

  TeamUpdateSimpleNotify(const TeamUpdateSimpleNotify& from);

  inline TeamUpdateSimpleNotify& operator=(const TeamUpdateSimpleNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUpdateSimpleNotify& default_instance();

  void Swap(TeamUpdateSimpleNotify* other);

  // implements Message ----------------------------------------------

  TeamUpdateSimpleNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamUpdateSimpleNotify& from);
  void MergeFrom(const TeamUpdateSimpleNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // optional int32 min_level = 2;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 2;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // optional int32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // optional uint64 leader = 4;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 4;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional int32 auto_match = 5;
  inline bool has_auto_match() const;
  inline void clear_auto_match();
  static const int kAutoMatchFieldNumber = 5;
  inline ::google::protobuf::int32 auto_match() const;
  inline void set_auto_match(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamUpdateSimpleNotify)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_auto_match();
  inline void clear_has_auto_match();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 max_level_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::int32 auto_match_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamUpdateSimpleNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamClearApplyLstReq : public ::google::protobuf::Message {
 public:
  TeamClearApplyLstReq();
  virtual ~TeamClearApplyLstReq();

  TeamClearApplyLstReq(const TeamClearApplyLstReq& from);

  inline TeamClearApplyLstReq& operator=(const TeamClearApplyLstReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamClearApplyLstReq& default_instance();

  void Swap(TeamClearApplyLstReq* other);

  // implements Message ----------------------------------------------

  TeamClearApplyLstReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamClearApplyLstReq& from);
  void MergeFrom(const TeamClearApplyLstReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.TeamClearApplyLstReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamClearApplyLstReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamClearApplyLstRsp : public ::google::protobuf::Message {
 public:
  TeamClearApplyLstRsp();
  virtual ~TeamClearApplyLstRsp();

  TeamClearApplyLstRsp(const TeamClearApplyLstRsp& from);

  inline TeamClearApplyLstRsp& operator=(const TeamClearApplyLstRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamClearApplyLstRsp& default_instance();

  void Swap(TeamClearApplyLstRsp* other);

  // implements Message ----------------------------------------------

  TeamClearApplyLstRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamClearApplyLstRsp& from);
  void MergeFrom(const TeamClearApplyLstRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamClearApplyLstRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamClearApplyLstRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamUpdateApplyNotify : public ::google::protobuf::Message {
 public:
  TeamUpdateApplyNotify();
  virtual ~TeamUpdateApplyNotify();

  TeamUpdateApplyNotify(const TeamUpdateApplyNotify& from);

  inline TeamUpdateApplyNotify& operator=(const TeamUpdateApplyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUpdateApplyNotify& default_instance();

  void Swap(TeamUpdateApplyNotify* other);

  // implements Message ----------------------------------------------

  TeamUpdateApplyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamUpdateApplyNotify& from);
  void MergeFrom(const TeamUpdateApplyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 del_apply = 1;
  inline int del_apply_size() const;
  inline void clear_del_apply();
  static const int kDelApplyFieldNumber = 1;
  inline ::google::protobuf::uint64 del_apply(int index) const;
  inline void set_del_apply(int index, ::google::protobuf::uint64 value);
  inline void add_del_apply(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      del_apply() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_del_apply();

  // optional .proto_ff.TeamMultApplyProto apply = 2;
  inline bool has_apply() const;
  inline void clear_apply();
  static const int kApplyFieldNumber = 2;
  inline const ::proto_ff::TeamMultApplyProto& apply() const;
  inline ::proto_ff::TeamMultApplyProto* mutable_apply();
  inline ::proto_ff::TeamMultApplyProto* release_apply();
  inline void set_allocated_apply(::proto_ff::TeamMultApplyProto* apply);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamUpdateApplyNotify)
 private:
  inline void set_has_apply();
  inline void clear_has_apply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > del_apply_;
  ::proto_ff::TeamMultApplyProto* apply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamUpdateApplyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinTeamReq : public ::google::protobuf::Message {
 public:
  ApplyJoinTeamReq();
  virtual ~ApplyJoinTeamReq();

  ApplyJoinTeamReq(const ApplyJoinTeamReq& from);

  inline ApplyJoinTeamReq& operator=(const ApplyJoinTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinTeamReq& default_instance();

  void Swap(ApplyJoinTeamReq* other);

  // implements Message ----------------------------------------------

  ApplyJoinTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinTeamReq& from);
  void MergeFrom(const ApplyJoinTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ApplyJoinTeamReq)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static ApplyJoinTeamReq* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinTeamRsp : public ::google::protobuf::Message {
 public:
  ApplyJoinTeamRsp();
  virtual ~ApplyJoinTeamRsp();

  ApplyJoinTeamRsp(const ApplyJoinTeamRsp& from);

  inline ApplyJoinTeamRsp& operator=(const ApplyJoinTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinTeamRsp& default_instance();

  void Swap(ApplyJoinTeamRsp* other);

  // implements Message ----------------------------------------------

  ApplyJoinTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinTeamRsp& from);
  void MergeFrom(const ApplyJoinTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ApplyJoinTeamRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static ApplyJoinTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinTeamReq : public ::google::protobuf::Message {
 public:
  InviteJoinTeamReq();
  virtual ~InviteJoinTeamReq();

  InviteJoinTeamReq(const InviteJoinTeamReq& from);

  inline InviteJoinTeamReq& operator=(const InviteJoinTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinTeamReq& default_instance();

  void Swap(InviteJoinTeamReq* other);

  // implements Message ----------------------------------------------

  InviteJoinTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinTeamReq& from);
  void MergeFrom(const InviteJoinTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 invite_cid = 1;
  inline bool has_invite_cid() const;
  inline void clear_invite_cid();
  static const int kInviteCidFieldNumber = 1;
  inline ::google::protobuf::uint64 invite_cid() const;
  inline void set_invite_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.InviteJoinTeamReq)
 private:
  inline void set_has_invite_cid();
  inline void clear_has_invite_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 invite_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static InviteJoinTeamReq* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinTeamRsp : public ::google::protobuf::Message {
 public:
  InviteJoinTeamRsp();
  virtual ~InviteJoinTeamRsp();

  InviteJoinTeamRsp(const InviteJoinTeamRsp& from);

  inline InviteJoinTeamRsp& operator=(const InviteJoinTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinTeamRsp& default_instance();

  void Swap(InviteJoinTeamRsp* other);

  // implements Message ----------------------------------------------

  InviteJoinTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinTeamRsp& from);
  void MergeFrom(const InviteJoinTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.InviteJoinTeamRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static InviteJoinTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinTeamNotify : public ::google::protobuf::Message {
 public:
  InviteJoinTeamNotify();
  virtual ~InviteJoinTeamNotify();

  InviteJoinTeamNotify(const InviteJoinTeamNotify& from);

  inline InviteJoinTeamNotify& operator=(const InviteJoinTeamNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinTeamNotify& default_instance();

  void Swap(InviteJoinTeamNotify* other);

  // implements Message ----------------------------------------------

  InviteJoinTeamNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinTeamNotify& from);
  void MergeFrom(const InviteJoinTeamNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invite_cid = 1;
  inline bool has_invite_cid() const;
  inline void clear_invite_cid();
  static const int kInviteCidFieldNumber = 1;
  inline ::google::protobuf::uint64 invite_cid() const;
  inline void set_invite_cid(::google::protobuf::uint64 value);

  // optional bytes invite_name = 2;
  inline bool has_invite_name() const;
  inline void clear_invite_name();
  static const int kInviteNameFieldNumber = 2;
  inline const ::std::string& invite_name() const;
  inline void set_invite_name(const ::std::string& value);
  inline void set_invite_name(const char* value);
  inline void set_invite_name(const void* value, size_t size);
  inline ::std::string* mutable_invite_name();
  inline ::std::string* release_invite_name();
  inline void set_allocated_invite_name(::std::string* invite_name);

  // optional uint32 teamid = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.InviteJoinTeamNotify)
 private:
  inline void set_has_invite_cid();
  inline void clear_has_invite_cid();
  inline void set_has_invite_name();
  inline void clear_has_invite_name();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 invite_cid_;
  ::std::string* invite_name_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static InviteJoinTeamNotify* default_instance_;
};
// -------------------------------------------------------------------

class ReplyInviteJoinTeamReq : public ::google::protobuf::Message {
 public:
  ReplyInviteJoinTeamReq();
  virtual ~ReplyInviteJoinTeamReq();

  ReplyInviteJoinTeamReq(const ReplyInviteJoinTeamReq& from);

  inline ReplyInviteJoinTeamReq& operator=(const ReplyInviteJoinTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyInviteJoinTeamReq& default_instance();

  void Swap(ReplyInviteJoinTeamReq* other);

  // implements Message ----------------------------------------------

  ReplyInviteJoinTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyInviteJoinTeamReq& from);
  void MergeFrom(const ReplyInviteJoinTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reply = 1;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 1;
  inline ::google::protobuf::int32 reply() const;
  inline void set_reply(::google::protobuf::int32 value);

  // required uint32 teamid = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 2;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ReplyInviteJoinTeamReq)
 private:
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reply_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static ReplyInviteJoinTeamReq* default_instance_;
};
// -------------------------------------------------------------------

class ReplyInviteJoinTeamRsp : public ::google::protobuf::Message {
 public:
  ReplyInviteJoinTeamRsp();
  virtual ~ReplyInviteJoinTeamRsp();

  ReplyInviteJoinTeamRsp(const ReplyInviteJoinTeamRsp& from);

  inline ReplyInviteJoinTeamRsp& operator=(const ReplyInviteJoinTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyInviteJoinTeamRsp& default_instance();

  void Swap(ReplyInviteJoinTeamRsp* other);

  // implements Message ----------------------------------------------

  ReplyInviteJoinTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyInviteJoinTeamRsp& from);
  void MergeFrom(const ReplyInviteJoinTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ReplyInviteJoinTeamRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static ReplyInviteJoinTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamSetObjReq : public ::google::protobuf::Message {
 public:
  TeamSetObjReq();
  virtual ~TeamSetObjReq();

  TeamSetObjReq(const TeamSetObjReq& from);

  inline TeamSetObjReq& operator=(const TeamSetObjReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamSetObjReq& default_instance();

  void Swap(TeamSetObjReq* other);

  // implements Message ----------------------------------------------

  TeamSetObjReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamSetObjReq& from);
  void MergeFrom(const TeamSetObjReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // required int32 min_level = 2;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 2;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // required int32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamSetObjReq)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 max_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamSetObjReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamSetObjRsp : public ::google::protobuf::Message {
 public:
  TeamSetObjRsp();
  virtual ~TeamSetObjRsp();

  TeamSetObjRsp(const TeamSetObjRsp& from);

  inline TeamSetObjRsp& operator=(const TeamSetObjRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamSetObjRsp& default_instance();

  void Swap(TeamSetObjRsp* other);

  // implements Message ----------------------------------------------

  TeamSetObjRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamSetObjRsp& from);
  void MergeFrom(const TeamSetObjRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamSetObjRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamSetObjRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamPromoteLeaderReq : public ::google::protobuf::Message {
 public:
  TeamPromoteLeaderReq();
  virtual ~TeamPromoteLeaderReq();

  TeamPromoteLeaderReq(const TeamPromoteLeaderReq& from);

  inline TeamPromoteLeaderReq& operator=(const TeamPromoteLeaderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPromoteLeaderReq& default_instance();

  void Swap(TeamPromoteLeaderReq* other);

  // implements Message ----------------------------------------------

  TeamPromoteLeaderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPromoteLeaderReq& from);
  void MergeFrom(const TeamPromoteLeaderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamPromoteLeaderReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamPromoteLeaderReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamPromoteLeaderRsp : public ::google::protobuf::Message {
 public:
  TeamPromoteLeaderRsp();
  virtual ~TeamPromoteLeaderRsp();

  TeamPromoteLeaderRsp(const TeamPromoteLeaderRsp& from);

  inline TeamPromoteLeaderRsp& operator=(const TeamPromoteLeaderRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamPromoteLeaderRsp& default_instance();

  void Swap(TeamPromoteLeaderRsp* other);

  // implements Message ----------------------------------------------

  TeamPromoteLeaderRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamPromoteLeaderRsp& from);
  void MergeFrom(const TeamPromoteLeaderRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamPromoteLeaderRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamPromoteLeaderRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamAutoMatchReq : public ::google::protobuf::Message {
 public:
  TeamAutoMatchReq();
  virtual ~TeamAutoMatchReq();

  TeamAutoMatchReq(const TeamAutoMatchReq& from);

  inline TeamAutoMatchReq& operator=(const TeamAutoMatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamAutoMatchReq& default_instance();

  void Swap(TeamAutoMatchReq* other);

  // implements Message ----------------------------------------------

  TeamAutoMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamAutoMatchReq& from);
  void MergeFrom(const TeamAutoMatchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 auto_match = 1;
  inline bool has_auto_match() const;
  inline void clear_auto_match();
  static const int kAutoMatchFieldNumber = 1;
  inline ::google::protobuf::int32 auto_match() const;
  inline void set_auto_match(::google::protobuf::int32 value);

  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // required int32 min_level = 3;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 3;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // required int32 max_level = 4;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 4;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamAutoMatchReq)
 private:
  inline void set_has_auto_match();
  inline void clear_has_auto_match();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::int32 auto_match_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 max_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamAutoMatchReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamAutoMatchRsp : public ::google::protobuf::Message {
 public:
  TeamAutoMatchRsp();
  virtual ~TeamAutoMatchRsp();

  TeamAutoMatchRsp(const TeamAutoMatchRsp& from);

  inline TeamAutoMatchRsp& operator=(const TeamAutoMatchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamAutoMatchRsp& default_instance();

  void Swap(TeamAutoMatchRsp* other);

  // implements Message ----------------------------------------------

  TeamAutoMatchRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamAutoMatchRsp& from);
  void MergeFrom(const TeamAutoMatchRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamAutoMatchRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamAutoMatchRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamKickMemReq : public ::google::protobuf::Message {
 public:
  TeamKickMemReq();
  virtual ~TeamKickMemReq();

  TeamKickMemReq(const TeamKickMemReq& from);

  inline TeamKickMemReq& operator=(const TeamKickMemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamKickMemReq& default_instance();

  void Swap(TeamKickMemReq* other);

  // implements Message ----------------------------------------------

  TeamKickMemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamKickMemReq& from);
  void MergeFrom(const TeamKickMemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 kick_cid = 1;
  inline bool has_kick_cid() const;
  inline void clear_kick_cid();
  static const int kKickCidFieldNumber = 1;
  inline ::google::protobuf::uint64 kick_cid() const;
  inline void set_kick_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamKickMemReq)
 private:
  inline void set_has_kick_cid();
  inline void clear_has_kick_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 kick_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamKickMemReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamKickMemRsp : public ::google::protobuf::Message {
 public:
  TeamKickMemRsp();
  virtual ~TeamKickMemRsp();

  TeamKickMemRsp(const TeamKickMemRsp& from);

  inline TeamKickMemRsp& operator=(const TeamKickMemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamKickMemRsp& default_instance();

  void Swap(TeamKickMemRsp* other);

  // implements Message ----------------------------------------------

  TeamKickMemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamKickMemRsp& from);
  void MergeFrom(const TeamKickMemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamKickMemRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamKickMemRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamQuitReq : public ::google::protobuf::Message {
 public:
  TeamQuitReq();
  virtual ~TeamQuitReq();

  TeamQuitReq(const TeamQuitReq& from);

  inline TeamQuitReq& operator=(const TeamQuitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamQuitReq& default_instance();

  void Swap(TeamQuitReq* other);

  // implements Message ----------------------------------------------

  TeamQuitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamQuitReq& from);
  void MergeFrom(const TeamQuitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.TeamQuitReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamQuitReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamQuitRsp : public ::google::protobuf::Message {
 public:
  TeamQuitRsp();
  virtual ~TeamQuitRsp();

  TeamQuitRsp(const TeamQuitRsp& from);

  inline TeamQuitRsp& operator=(const TeamQuitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamQuitRsp& default_instance();

  void Swap(TeamQuitRsp* other);

  // implements Message ----------------------------------------------

  TeamQuitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamQuitRsp& from);
  void MergeFrom(const TeamQuitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamQuitRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamQuitRsp* default_instance_;
};
// -------------------------------------------------------------------

class TeamRefuseNotify : public ::google::protobuf::Message {
 public:
  TeamRefuseNotify();
  virtual ~TeamRefuseNotify();

  TeamRefuseNotify(const TeamRefuseNotify& from);

  inline TeamRefuseNotify& operator=(const TeamRefuseNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRefuseNotify& default_instance();

  void Swap(TeamRefuseNotify* other);

  // implements Message ----------------------------------------------

  TeamRefuseNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRefuseNotify& from);
  void MergeFrom(const TeamRefuseNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamRefuseNotify)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamRefuseNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeamMatchAtonceReq : public ::google::protobuf::Message {
 public:
  TeamMatchAtonceReq();
  virtual ~TeamMatchAtonceReq();

  TeamMatchAtonceReq(const TeamMatchAtonceReq& from);

  inline TeamMatchAtonceReq& operator=(const TeamMatchAtonceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMatchAtonceReq& default_instance();

  void Swap(TeamMatchAtonceReq* other);

  // implements Message ----------------------------------------------

  TeamMatchAtonceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMatchAtonceReq& from);
  void MergeFrom(const TeamMatchAtonceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMatchAtonceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMatchAtonceReq* default_instance_;
};
// -------------------------------------------------------------------

class TeamMatchAtonceRsp : public ::google::protobuf::Message {
 public:
  TeamMatchAtonceRsp();
  virtual ~TeamMatchAtonceRsp();

  TeamMatchAtonceRsp(const TeamMatchAtonceRsp& from);

  inline TeamMatchAtonceRsp& operator=(const TeamMatchAtonceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMatchAtonceRsp& default_instance();

  void Swap(TeamMatchAtonceRsp* other);

  // implements Message ----------------------------------------------

  TeamMatchAtonceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMatchAtonceRsp& from);
  void MergeFrom(const TeamMatchAtonceRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TeamMatchAtonceRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static TeamMatchAtonceRsp* default_instance_;
};
// -------------------------------------------------------------------

class SCCreteTeam : public ::google::protobuf::Message {
 public:
  SCCreteTeam();
  virtual ~SCCreteTeam();

  SCCreteTeam(const SCCreteTeam& from);

  inline SCCreteTeam& operator=(const SCCreteTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCCreteTeam& default_instance();

  void Swap(SCCreteTeam* other);

  // implements Message ----------------------------------------------

  SCCreteTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCCreteTeam& from);
  void MergeFrom(const SCCreteTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional .proto_ff.CenterTeamMemProto info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::CenterTeamMemProto& info() const;
  inline ::proto_ff::CenterTeamMemProto* mutable_info();
  inline ::proto_ff::CenterTeamMemProto* release_info();
  inline void set_allocated_info(::proto_ff::CenterTeamMemProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.SCCreteTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CenterTeamMemProto* info_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static SCCreteTeam* default_instance_;
};
// -------------------------------------------------------------------

class SCJoinTeam : public ::google::protobuf::Message {
 public:
  SCJoinTeam();
  virtual ~SCJoinTeam();

  SCJoinTeam(const SCJoinTeam& from);

  inline SCJoinTeam& operator=(const SCJoinTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCJoinTeam& default_instance();

  void Swap(SCJoinTeam* other);

  // implements Message ----------------------------------------------

  SCJoinTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCJoinTeam& from);
  void MergeFrom(const SCJoinTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional .proto_ff.CenterTeamMemProto info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::CenterTeamMemProto& info() const;
  inline ::proto_ff::CenterTeamMemProto* mutable_info();
  inline ::proto_ff::CenterTeamMemProto* release_info();
  inline void set_allocated_info(::proto_ff::CenterTeamMemProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.SCJoinTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CenterTeamMemProto* info_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static SCJoinTeam* default_instance_;
};
// -------------------------------------------------------------------

class SCQuitTeam : public ::google::protobuf::Message {
 public:
  SCQuitTeam();
  virtual ~SCQuitTeam();

  SCQuitTeam(const SCQuitTeam& from);

  inline SCQuitTeam& operator=(const SCQuitTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCQuitTeam& default_instance();

  void Swap(SCQuitTeam* other);

  // implements Message ----------------------------------------------

  SCQuitTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCQuitTeam& from);
  void MergeFrom(const SCQuitTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 teamid = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 2;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SCQuitTeam)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static SCQuitTeam* default_instance_;
};
// -------------------------------------------------------------------

class SCUpdateTeam : public ::google::protobuf::Message {
 public:
  SCUpdateTeam();
  virtual ~SCUpdateTeam();

  SCUpdateTeam(const SCUpdateTeam& from);

  inline SCUpdateTeam& operator=(const SCUpdateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCUpdateTeam& default_instance();

  void Swap(SCUpdateTeam* other);

  // implements Message ----------------------------------------------

  SCUpdateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCUpdateTeam& from);
  void MergeFrom(const SCUpdateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional .proto_ff.CenterMultiTeamMemProto info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::CenterMultiTeamMemProto& info() const;
  inline ::proto_ff::CenterMultiTeamMemProto* mutable_info();
  inline ::proto_ff::CenterMultiTeamMemProto* release_info();
  inline void set_allocated_info(::proto_ff::CenterMultiTeamMemProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.SCUpdateTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CenterMultiTeamMemProto* info_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static SCUpdateTeam* default_instance_;
};
// -------------------------------------------------------------------

class SCTeamLeader : public ::google::protobuf::Message {
 public:
  SCTeamLeader();
  virtual ~SCTeamLeader();

  SCTeamLeader(const SCTeamLeader& from);

  inline SCTeamLeader& operator=(const SCTeamLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCTeamLeader& default_instance();

  void Swap(SCTeamLeader* other);

  // implements Message ----------------------------------------------

  SCTeamLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCTeamLeader& from);
  void MergeFrom(const SCTeamLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint64 leader = 2;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 2;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SCTeamLeader)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leader();
  inline void clear_has_leader();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 leader_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static SCTeamLeader* default_instance_;
};
// -------------------------------------------------------------------

class SCTeamDismiss : public ::google::protobuf::Message {
 public:
  SCTeamDismiss();
  virtual ~SCTeamDismiss();

  SCTeamDismiss(const SCTeamDismiss& from);

  inline SCTeamDismiss& operator=(const SCTeamDismiss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCTeamDismiss& default_instance();

  void Swap(SCTeamDismiss* other);

  // implements Message ----------------------------------------------

  SCTeamDismiss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCTeamDismiss& from);
  void MergeFrom(const SCTeamDismiss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SCTeamDismiss)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static SCTeamDismiss* default_instance_;
};
// -------------------------------------------------------------------

class CLCharTeamUpdate : public ::google::protobuf::Message {
 public:
  CLCharTeamUpdate();
  virtual ~CLCharTeamUpdate();

  CLCharTeamUpdate(const CLCharTeamUpdate& from);

  inline CLCharTeamUpdate& operator=(const CLCharTeamUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLCharTeamUpdate& default_instance();

  void Swap(CLCharTeamUpdate* other);

  // implements Message ----------------------------------------------

  CLCharTeamUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLCharTeamUpdate& from);
  void MergeFrom(const CLCharTeamUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 teamid = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 2;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint64 leader = 3;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 3;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // optional int32 mem_cnt = 4;
  inline bool has_mem_cnt() const;
  inline void clear_mem_cnt();
  static const int kMemCntFieldNumber = 4;
  inline ::google::protobuf::int32 mem_cnt() const;
  inline void set_mem_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CLCharTeamUpdate)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_mem_cnt();
  inline void clear_has_mem_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::int32 mem_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CLCharTeamUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CLUpdateSimpleTeam : public ::google::protobuf::Message {
 public:
  CLUpdateSimpleTeam();
  virtual ~CLUpdateSimpleTeam();

  CLUpdateSimpleTeam(const CLUpdateSimpleTeam& from);

  inline CLUpdateSimpleTeam& operator=(const CLUpdateSimpleTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLUpdateSimpleTeam& default_instance();

  void Swap(CLUpdateSimpleTeam* other);

  // implements Message ----------------------------------------------

  CLUpdateSimpleTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLUpdateSimpleTeam& from);
  void MergeFrom(const CLUpdateSimpleTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint64 leadercid = 2;
  inline bool has_leadercid() const;
  inline void clear_leadercid();
  static const int kLeadercidFieldNumber = 2;
  inline ::google::protobuf::uint64 leadercid() const;
  inline void set_leadercid(::google::protobuf::uint64 value);

  // optional .proto_ff.CenterMultiTeamMemProto info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::proto_ff::CenterMultiTeamMemProto& info() const;
  inline ::proto_ff::CenterMultiTeamMemProto* mutable_info();
  inline ::proto_ff::CenterMultiTeamMemProto* release_info();
  inline void set_allocated_info(::proto_ff::CenterMultiTeamMemProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.CLUpdateSimpleTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leadercid();
  inline void clear_has_leadercid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 leadercid_;
  ::proto_ff::CenterMultiTeamMemProto* info_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CLUpdateSimpleTeam* default_instance_;
};
// -------------------------------------------------------------------

class CLDismissTeam : public ::google::protobuf::Message {
 public:
  CLDismissTeam();
  virtual ~CLDismissTeam();

  CLDismissTeam(const CLDismissTeam& from);

  inline CLDismissTeam& operator=(const CLDismissTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLDismissTeam& default_instance();

  void Swap(CLDismissTeam* other);

  // implements Message ----------------------------------------------

  CLDismissTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLDismissTeam& from);
  void MergeFrom(const CLDismissTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CLDismissTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CLDismissTeam* default_instance_;
};
// -------------------------------------------------------------------

class CLCharTeamClonessUpdate : public ::google::protobuf::Message {
 public:
  CLCharTeamClonessUpdate();
  virtual ~CLCharTeamClonessUpdate();

  CLCharTeamClonessUpdate(const CLCharTeamClonessUpdate& from);

  inline CLCharTeamClonessUpdate& operator=(const CLCharTeamClonessUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLCharTeamClonessUpdate& default_instance();

  void Swap(CLCharTeamClonessUpdate* other);

  // implements Message ----------------------------------------------

  CLCharTeamClonessUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLCharTeamClonessUpdate& from);
  void MergeFrom(const CLCharTeamClonessUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 cloness_lev = 2;
  inline bool has_cloness_lev() const;
  inline void clear_cloness_lev();
  static const int kClonessLevFieldNumber = 2;
  inline ::google::protobuf::int32 cloness_lev() const;
  inline void set_cloness_lev(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CLCharTeamClonessUpdate)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_cloness_lev();
  inline void clear_has_cloness_lev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 cloness_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static CLCharTeamClonessUpdate* default_instance_;
};
// -------------------------------------------------------------------

class LSTeamRobotHpSync : public ::google::protobuf::Message {
 public:
  LSTeamRobotHpSync();
  virtual ~LSTeamRobotHpSync();

  LSTeamRobotHpSync(const LSTeamRobotHpSync& from);

  inline LSTeamRobotHpSync& operator=(const LSTeamRobotHpSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LSTeamRobotHpSync& default_instance();

  void Swap(LSTeamRobotHpSync* other);

  // implements Message ----------------------------------------------

  LSTeamRobotHpSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LSTeamRobotHpSync& from);
  void MergeFrom(const LSTeamRobotHpSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);

  // optional uint64 robotcid = 2;
  inline bool has_robotcid() const;
  inline void clear_robotcid();
  static const int kRobotcidFieldNumber = 2;
  inline ::google::protobuf::uint64 robotcid() const;
  inline void set_robotcid(::google::protobuf::uint64 value);

  // optional uint64 curhp = 3;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurhpFieldNumber = 3;
  inline ::google::protobuf::uint64 curhp() const;
  inline void set_curhp(::google::protobuf::uint64 value);

  // optional uint64 maxhp = 4;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 4;
  inline ::google::protobuf::uint64 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LSTeamRobotHpSync)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_robotcid();
  inline void clear_has_robotcid();
  inline void set_has_curhp();
  inline void clear_has_curhp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 robotcid_;
  ::google::protobuf::uint64 curhp_;
  ::google::protobuf::uint64 maxhp_;
  ::google::protobuf::uint32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static LSTeamRobotHpSync* default_instance_;
};
// -------------------------------------------------------------------

class DupInviteStateProto : public ::google::protobuf::Message {
 public:
  DupInviteStateProto();
  virtual ~DupInviteStateProto();

  DupInviteStateProto(const DupInviteStateProto& from);

  inline DupInviteStateProto& operator=(const DupInviteStateProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupInviteStateProto& default_instance();

  void Swap(DupInviteStateProto* other);

  // implements Message ----------------------------------------------

  DupInviteStateProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupInviteStateProto& from);
  void MergeFrom(const DupInviteStateProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupInviteStateProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static DupInviteStateProto* default_instance_;
};
// -------------------------------------------------------------------

class DupAllInviteStateProto : public ::google::protobuf::Message {
 public:
  DupAllInviteStateProto();
  virtual ~DupAllInviteStateProto();

  DupAllInviteStateProto(const DupAllInviteStateProto& from);

  inline DupAllInviteStateProto& operator=(const DupAllInviteStateProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupAllInviteStateProto& default_instance();

  void Swap(DupAllInviteStateProto* other);

  // implements Message ----------------------------------------------

  DupAllInviteStateProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupAllInviteStateProto& from);
  void MergeFrom(const DupAllInviteStateProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DupInviteStateProto all_state = 1;
  inline int all_state_size() const;
  inline void clear_all_state();
  static const int kAllStateFieldNumber = 1;
  inline const ::proto_ff::DupInviteStateProto& all_state(int index) const;
  inline ::proto_ff::DupInviteStateProto* mutable_all_state(int index);
  inline ::proto_ff::DupInviteStateProto* add_all_state();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupInviteStateProto >&
      all_state() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupInviteStateProto >*
      mutable_all_state();

  // @@protoc_insertion_point(class_scope:proto_ff.DupAllInviteStateProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupInviteStateProto > all_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static DupAllInviteStateProto* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_CancelStateNotify : public ::google::protobuf::Message {
 public:
  Duplicate_CancelStateNotify();
  virtual ~Duplicate_CancelStateNotify();

  Duplicate_CancelStateNotify(const Duplicate_CancelStateNotify& from);

  inline Duplicate_CancelStateNotify& operator=(const Duplicate_CancelStateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_CancelStateNotify& default_instance();

  void Swap(Duplicate_CancelStateNotify* other);

  // implements Message ----------------------------------------------

  Duplicate_CancelStateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_CancelStateNotify& from);
  void MergeFrom(const Duplicate_CancelStateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Duplicate_CancelStateNotify)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_CancelStateNotify* default_instance_;
};
// -------------------------------------------------------------------

class DupTeamRobotProto : public ::google::protobuf::Message {
 public:
  DupTeamRobotProto();
  virtual ~DupTeamRobotProto();

  DupTeamRobotProto(const DupTeamRobotProto& from);

  inline DupTeamRobotProto& operator=(const DupTeamRobotProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTeamRobotProto& default_instance();

  void Swap(DupTeamRobotProto* other);

  // implements Message ----------------------------------------------

  DupTeamRobotProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTeamRobotProto& from);
  void MergeFrom(const DupTeamRobotProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charcid = 1;
  inline bool has_charcid() const;
  inline void clear_charcid();
  static const int kCharcidFieldNumber = 1;
  inline ::google::protobuf::uint64 charcid() const;
  inline void set_charcid(::google::protobuf::uint64 value);

  // optional uint32 coef = 2;
  inline bool has_coef() const;
  inline void clear_coef();
  static const int kCoefFieldNumber = 2;
  inline ::google::protobuf::uint32 coef() const;
  inline void set_coef(::google::protobuf::uint32 value);

  // optional uint32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint64 robotcid = 4;
  inline bool has_robotcid() const;
  inline void clear_robotcid();
  static const int kRobotcidFieldNumber = 4;
  inline ::google::protobuf::uint64 robotcid() const;
  inline void set_robotcid(::google::protobuf::uint64 value);

  // optional bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int32 prof = 7;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 7;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional .proto_ff.RoleFacadeProto facade = 8;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 8;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional int32 vip_level = 9;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);

  // optional uint64 fight = 10;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 10;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTeamRobotProto)
 private:
  inline void set_has_charcid();
  inline void clear_has_charcid();
  inline void set_has_coef();
  inline void clear_has_coef();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_robotcid();
  inline void clear_has_robotcid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_fight();
  inline void clear_has_fight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charcid_;
  ::google::protobuf::uint32 coef_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint64 robotcid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 prof_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint64 fight_;
  ::google::protobuf::int32 vip_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static DupTeamRobotProto* default_instance_;
};
// -------------------------------------------------------------------

class DupMultTeamRobotProto : public ::google::protobuf::Message {
 public:
  DupMultTeamRobotProto();
  virtual ~DupMultTeamRobotProto();

  DupMultTeamRobotProto(const DupMultTeamRobotProto& from);

  inline DupMultTeamRobotProto& operator=(const DupMultTeamRobotProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupMultTeamRobotProto& default_instance();

  void Swap(DupMultTeamRobotProto* other);

  // implements Message ----------------------------------------------

  DupMultTeamRobotProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupMultTeamRobotProto& from);
  void MergeFrom(const DupMultTeamRobotProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DupTeamRobotProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::DupTeamRobotProto& info(int index) const;
  inline ::proto_ff::DupTeamRobotProto* mutable_info(int index);
  inline ::proto_ff::DupTeamRobotProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamRobotProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamRobotProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.DupMultTeamRobotProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamRobotProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();

  void InitAsDefaultInstance();
  static DupMultTeamRobotProto* default_instance_;
};
// ===================================================================


// ===================================================================

// TeamMemProto

// optional uint64 cid = 1;
inline bool TeamMemProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TeamMemProto::cid() const {
  return cid_;
}
inline void TeamMemProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool TeamMemProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamMemProto::name() const {
  return *name_;
}
inline void TeamMemProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamMemProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamMemProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TeamMemProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TeamMemProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TeamMemProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 3;
inline bool TeamMemProto::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemProto::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TeamMemProto::level() const {
  return level_;
}
inline void TeamMemProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 prof = 4;
inline bool TeamMemProto::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamMemProto::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamMemProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamMemProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 TeamMemProto::prof() const {
  return prof_;
}
inline void TeamMemProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 5;
inline bool TeamMemProto::has_facade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamMemProto::set_has_facade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamMemProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamMemProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& TeamMemProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* TeamMemProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* TeamMemProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void TeamMemProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional int32 vip_level = 6;
inline bool TeamMemProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamMemProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamMemProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamMemProto::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 TeamMemProto::vip_level() const {
  return vip_level_;
}
inline void TeamMemProto::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint64 joinTime = 7;
inline bool TeamMemProto::has_jointime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamMemProto::set_has_jointime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamMemProto::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamMemProto::clear_jointime() {
  jointime_ = GOOGLE_ULONGLONG(0);
  clear_has_jointime();
}
inline ::google::protobuf::uint64 TeamMemProto::jointime() const {
  return jointime_;
}
inline void TeamMemProto::set_jointime(::google::protobuf::uint64 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional uint64 fight = 8;
inline bool TeamMemProto::has_fight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TeamMemProto::set_has_fight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TeamMemProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TeamMemProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 TeamMemProto::fight() const {
  return fight_;
}
inline void TeamMemProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional int32 online = 9;
inline bool TeamMemProto::has_online() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TeamMemProto::set_has_online() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TeamMemProto::clear_has_online() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TeamMemProto::clear_online() {
  online_ = 0;
  clear_has_online();
}
inline ::google::protobuf::int32 TeamMemProto::online() const {
  return online_;
}
inline void TeamMemProto::set_online(::google::protobuf::int32 value) {
  set_has_online();
  online_ = value;
}

// optional uint64 mapid = 10;
inline bool TeamMemProto::has_mapid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TeamMemProto::set_has_mapid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TeamMemProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TeamMemProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 TeamMemProto::mapid() const {
  return mapid_;
}
inline void TeamMemProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint64 hp = 11;
inline bool TeamMemProto::has_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TeamMemProto::set_has_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TeamMemProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TeamMemProto::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::uint64 TeamMemProto::hp() const {
  return hp_;
}
inline void TeamMemProto::set_hp(::google::protobuf::uint64 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint64 maxhp = 12;
inline bool TeamMemProto::has_maxhp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TeamMemProto::set_has_maxhp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TeamMemProto::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TeamMemProto::clear_maxhp() {
  maxhp_ = GOOGLE_ULONGLONG(0);
  clear_has_maxhp();
}
inline ::google::protobuf::uint64 TeamMemProto::maxhp() const {
  return maxhp_;
}
inline void TeamMemProto::set_maxhp(::google::protobuf::uint64 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// optional int32 robotflag = 13;
inline bool TeamMemProto::has_robotflag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TeamMemProto::set_has_robotflag() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TeamMemProto::clear_has_robotflag() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TeamMemProto::clear_robotflag() {
  robotflag_ = 0;
  clear_has_robotflag();
}
inline ::google::protobuf::int32 TeamMemProto::robotflag() const {
  return robotflag_;
}
inline void TeamMemProto::set_robotflag(::google::protobuf::int32 value) {
  set_has_robotflag();
  robotflag_ = value;
}

// optional uint32 unionid = 14;
inline bool TeamMemProto::has_unionid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TeamMemProto::set_has_unionid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TeamMemProto::clear_has_unionid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TeamMemProto::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 TeamMemProto::unionid() const {
  return unionid_;
}
inline void TeamMemProto::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
}

// optional int32 palace_layer = 15;
inline bool TeamMemProto::has_palace_layer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TeamMemProto::set_has_palace_layer() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TeamMemProto::clear_has_palace_layer() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TeamMemProto::clear_palace_layer() {
  palace_layer_ = 0;
  clear_has_palace_layer();
}
inline ::google::protobuf::int32 TeamMemProto::palace_layer() const {
  return palace_layer_;
}
inline void TeamMemProto::set_palace_layer(::google::protobuf::int32 value) {
  set_has_palace_layer();
  palace_layer_ = value;
}

// optional int32 break_count = 16;
inline bool TeamMemProto::has_break_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TeamMemProto::set_has_break_count() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TeamMemProto::clear_has_break_count() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TeamMemProto::clear_break_count() {
  break_count_ = 0;
  clear_has_break_count();
}
inline ::google::protobuf::int32 TeamMemProto::break_count() const {
  return break_count_;
}
inline void TeamMemProto::set_break_count(::google::protobuf::int32 value) {
  set_has_break_count();
  break_count_ = value;
}

// -------------------------------------------------------------------

// TeamMultMemProto

// repeated .proto_ff.TeamMemProto mem_lst = 1;
inline int TeamMultMemProto::mem_lst_size() const {
  return mem_lst_.size();
}
inline void TeamMultMemProto::clear_mem_lst() {
  mem_lst_.Clear();
}
inline const ::proto_ff::TeamMemProto& TeamMultMemProto::mem_lst(int index) const {
  return mem_lst_.Get(index);
}
inline ::proto_ff::TeamMemProto* TeamMultMemProto::mutable_mem_lst(int index) {
  return mem_lst_.Mutable(index);
}
inline ::proto_ff::TeamMemProto* TeamMultMemProto::add_mem_lst() {
  return mem_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemProto >&
TeamMultMemProto::mem_lst() const {
  return mem_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemProto >*
TeamMultMemProto::mutable_mem_lst() {
  return &mem_lst_;
}

// -------------------------------------------------------------------

// TeamMemSimpleProto

// optional uint64 cid = 1;
inline bool TeamMemSimpleProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemSimpleProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemSimpleProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemSimpleProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TeamMemSimpleProto::cid() const {
  return cid_;
}
inline void TeamMemSimpleProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 hp = 2;
inline bool TeamMemSimpleProto::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemSimpleProto::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemSimpleProto::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemSimpleProto::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::uint64 TeamMemSimpleProto::hp() const {
  return hp_;
}
inline void TeamMemSimpleProto::set_hp(::google::protobuf::uint64 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint64 maxhp = 3;
inline bool TeamMemSimpleProto::has_maxhp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemSimpleProto::set_has_maxhp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemSimpleProto::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemSimpleProto::clear_maxhp() {
  maxhp_ = GOOGLE_ULONGLONG(0);
  clear_has_maxhp();
}
inline ::google::protobuf::uint64 TeamMemSimpleProto::maxhp() const {
  return maxhp_;
}
inline void TeamMemSimpleProto::set_maxhp(::google::protobuf::uint64 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// -------------------------------------------------------------------

// TeamMultMemSimpleProto

// repeated .proto_ff.TeamMemSimpleProto mem_simple = 1;
inline int TeamMultMemSimpleProto::mem_simple_size() const {
  return mem_simple_.size();
}
inline void TeamMultMemSimpleProto::clear_mem_simple() {
  mem_simple_.Clear();
}
inline const ::proto_ff::TeamMemSimpleProto& TeamMultMemSimpleProto::mem_simple(int index) const {
  return mem_simple_.Get(index);
}
inline ::proto_ff::TeamMemSimpleProto* TeamMultMemSimpleProto::mutable_mem_simple(int index) {
  return mem_simple_.Mutable(index);
}
inline ::proto_ff::TeamMemSimpleProto* TeamMultMemSimpleProto::add_mem_simple() {
  return mem_simple_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemSimpleProto >&
TeamMultMemSimpleProto::mem_simple() const {
  return mem_simple_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamMemSimpleProto >*
TeamMultMemSimpleProto::mutable_mem_simple() {
  return &mem_simple_;
}

// -------------------------------------------------------------------

// TeamProto

// optional uint32 teamid = 1;
inline bool TeamProto::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamProto::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamProto::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamProto::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 TeamProto::teamid() const {
  return teamid_;
}
inline void TeamProto::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint64 object_id = 2;
inline bool TeamProto::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamProto::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamProto::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamProto::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 TeamProto::object_id() const {
  return object_id_;
}
inline void TeamProto::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// optional int32 min_level = 3;
inline bool TeamProto::has_min_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamProto::set_has_min_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamProto::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamProto::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 TeamProto::min_level() const {
  return min_level_;
}
inline void TeamProto::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// optional int32 max_level = 4;
inline bool TeamProto::has_max_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamProto::set_has_max_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamProto::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamProto::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 TeamProto::max_level() const {
  return max_level_;
}
inline void TeamProto::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// optional uint64 leader = 5;
inline bool TeamProto::has_leader() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamProto::set_has_leader() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamProto::clear_has_leader() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamProto::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 TeamProto::leader() const {
  return leader_;
}
inline void TeamProto::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// optional int32 auto_match = 6;
inline bool TeamProto::has_auto_match() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamProto::set_has_auto_match() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamProto::clear_has_auto_match() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamProto::clear_auto_match() {
  auto_match_ = 0;
  clear_has_auto_match();
}
inline ::google::protobuf::int32 TeamProto::auto_match() const {
  return auto_match_;
}
inline void TeamProto::set_auto_match(::google::protobuf::int32 value) {
  set_has_auto_match();
  auto_match_ = value;
}

// optional .proto_ff.TeamMultMemProto mems = 7;
inline bool TeamProto::has_mems() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamProto::set_has_mems() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamProto::clear_has_mems() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamProto::clear_mems() {
  if (mems_ != NULL) mems_->::proto_ff::TeamMultMemProto::Clear();
  clear_has_mems();
}
inline const ::proto_ff::TeamMultMemProto& TeamProto::mems() const {
  return mems_ != NULL ? *mems_ : *default_instance_->mems_;
}
inline ::proto_ff::TeamMultMemProto* TeamProto::mutable_mems() {
  set_has_mems();
  if (mems_ == NULL) mems_ = new ::proto_ff::TeamMultMemProto;
  return mems_;
}
inline ::proto_ff::TeamMultMemProto* TeamProto::release_mems() {
  clear_has_mems();
  ::proto_ff::TeamMultMemProto* temp = mems_;
  mems_ = NULL;
  return temp;
}
inline void TeamProto::set_allocated_mems(::proto_ff::TeamMultMemProto* mems) {
  delete mems_;
  mems_ = mems;
  if (mems) {
    set_has_mems();
  } else {
    clear_has_mems();
  }
}

// -------------------------------------------------------------------

// TeamApplyProto

// optional uint64 cid = 1;
inline bool TeamApplyProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamApplyProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamApplyProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamApplyProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TeamApplyProto::cid() const {
  return cid_;
}
inline void TeamApplyProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool TeamApplyProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamApplyProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamApplyProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamApplyProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamApplyProto::name() const {
  return *name_;
}
inline void TeamApplyProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamApplyProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamApplyProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TeamApplyProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TeamApplyProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TeamApplyProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 3;
inline bool TeamApplyProto::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamApplyProto::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamApplyProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamApplyProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TeamApplyProto::level() const {
  return level_;
}
inline void TeamApplyProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 prof = 4;
inline bool TeamApplyProto::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamApplyProto::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamApplyProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamApplyProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 TeamApplyProto::prof() const {
  return prof_;
}
inline void TeamApplyProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint64 fight = 5;
inline bool TeamApplyProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamApplyProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamApplyProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamApplyProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 TeamApplyProto::fight() const {
  return fight_;
}
inline void TeamApplyProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 apply_time = 6;
inline bool TeamApplyProto::has_apply_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamApplyProto::set_has_apply_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamApplyProto::clear_has_apply_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamApplyProto::clear_apply_time() {
  apply_time_ = GOOGLE_ULONGLONG(0);
  clear_has_apply_time();
}
inline ::google::protobuf::uint64 TeamApplyProto::apply_time() const {
  return apply_time_;
}
inline void TeamApplyProto::set_apply_time(::google::protobuf::uint64 value) {
  set_has_apply_time();
  apply_time_ = value;
}

// -------------------------------------------------------------------

// TeamMultApplyProto

// repeated .proto_ff.TeamApplyProto apply_lst = 1;
inline int TeamMultApplyProto::apply_lst_size() const {
  return apply_lst_.size();
}
inline void TeamMultApplyProto::clear_apply_lst() {
  apply_lst_.Clear();
}
inline const ::proto_ff::TeamApplyProto& TeamMultApplyProto::apply_lst(int index) const {
  return apply_lst_.Get(index);
}
inline ::proto_ff::TeamApplyProto* TeamMultApplyProto::mutable_apply_lst(int index) {
  return apply_lst_.Mutable(index);
}
inline ::proto_ff::TeamApplyProto* TeamMultApplyProto::add_apply_lst() {
  return apply_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamApplyProto >&
TeamMultApplyProto::apply_lst() const {
  return apply_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TeamApplyProto >*
TeamMultApplyProto::mutable_apply_lst() {
  return &apply_lst_;
}

// -------------------------------------------------------------------

// CenterTeamMemProto

// optional uint64 cid = 1;
inline bool CenterTeamMemProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterTeamMemProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterTeamMemProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterTeamMemProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CenterTeamMemProto::cid() const {
  return cid_;
}
inline void CenterTeamMemProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool CenterTeamMemProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterTeamMemProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterTeamMemProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterTeamMemProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CenterTeamMemProto::name() const {
  return *name_;
}
inline void CenterTeamMemProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterTeamMemProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CenterTeamMemProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CenterTeamMemProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CenterTeamMemProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CenterTeamMemProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 prof = 3;
inline bool CenterTeamMemProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterTeamMemProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterTeamMemProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterTeamMemProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 CenterTeamMemProto::prof() const {
  return prof_;
}
inline void CenterTeamMemProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 4;
inline bool CenterTeamMemProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterTeamMemProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterTeamMemProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterTeamMemProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CenterTeamMemProto::level() const {
  return level_;
}
inline void CenterTeamMemProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 robotflag = 5;
inline bool CenterTeamMemProto::has_robotflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterTeamMemProto::set_has_robotflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterTeamMemProto::clear_has_robotflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterTeamMemProto::clear_robotflag() {
  robotflag_ = 0;
  clear_has_robotflag();
}
inline ::google::protobuf::int32 CenterTeamMemProto::robotflag() const {
  return robotflag_;
}
inline void CenterTeamMemProto::set_robotflag(::google::protobuf::int32 value) {
  set_has_robotflag();
  robotflag_ = value;
}

// optional uint32 unionid = 6;
inline bool CenterTeamMemProto::has_unionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CenterTeamMemProto::set_has_unionid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CenterTeamMemProto::clear_has_unionid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CenterTeamMemProto::clear_unionid() {
  unionid_ = 0u;
  clear_has_unionid();
}
inline ::google::protobuf::uint32 CenterTeamMemProto::unionid() const {
  return unionid_;
}
inline void CenterTeamMemProto::set_unionid(::google::protobuf::uint32 value) {
  set_has_unionid();
  unionid_ = value;
}

// optional int32 palace_layer = 7;
inline bool CenterTeamMemProto::has_palace_layer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CenterTeamMemProto::set_has_palace_layer() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CenterTeamMemProto::clear_has_palace_layer() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CenterTeamMemProto::clear_palace_layer() {
  palace_layer_ = 0;
  clear_has_palace_layer();
}
inline ::google::protobuf::int32 CenterTeamMemProto::palace_layer() const {
  return palace_layer_;
}
inline void CenterTeamMemProto::set_palace_layer(::google::protobuf::int32 value) {
  set_has_palace_layer();
  palace_layer_ = value;
}

// optional int32 palace_breakcount = 8;
inline bool CenterTeamMemProto::has_palace_breakcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CenterTeamMemProto::set_has_palace_breakcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CenterTeamMemProto::clear_has_palace_breakcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CenterTeamMemProto::clear_palace_breakcount() {
  palace_breakcount_ = 0;
  clear_has_palace_breakcount();
}
inline ::google::protobuf::int32 CenterTeamMemProto::palace_breakcount() const {
  return palace_breakcount_;
}
inline void CenterTeamMemProto::set_palace_breakcount(::google::protobuf::int32 value) {
  set_has_palace_breakcount();
  palace_breakcount_ = value;
}

// -------------------------------------------------------------------

// CenterMultiTeamMemProto

// repeated .proto_ff.CenterTeamMemProto mem = 1;
inline int CenterMultiTeamMemProto::mem_size() const {
  return mem_.size();
}
inline void CenterMultiTeamMemProto::clear_mem() {
  mem_.Clear();
}
inline const ::proto_ff::CenterTeamMemProto& CenterMultiTeamMemProto::mem(int index) const {
  return mem_.Get(index);
}
inline ::proto_ff::CenterTeamMemProto* CenterMultiTeamMemProto::mutable_mem(int index) {
  return mem_.Mutable(index);
}
inline ::proto_ff::CenterTeamMemProto* CenterMultiTeamMemProto::add_mem() {
  return mem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterTeamMemProto >&
CenterMultiTeamMemProto::mem() const {
  return mem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterTeamMemProto >*
CenterMultiTeamMemProto::mutable_mem() {
  return &mem_;
}

// -------------------------------------------------------------------

// CreateTeamReq

// required uint64 object_id = 1;
inline bool CreateTeamReq::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTeamReq::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTeamReq::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTeamReq::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 CreateTeamReq::object_id() const {
  return object_id_;
}
inline void CreateTeamReq::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required int32 min_level = 2;
inline bool CreateTeamReq::has_min_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateTeamReq::set_has_min_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateTeamReq::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateTeamReq::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 CreateTeamReq::min_level() const {
  return min_level_;
}
inline void CreateTeamReq::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// required int32 max_level = 3;
inline bool CreateTeamReq::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateTeamReq::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateTeamReq::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateTeamReq::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 CreateTeamReq::max_level() const {
  return max_level_;
}
inline void CreateTeamReq::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// CreateTeamRsp

// optional int32 retcode = 1;
inline bool CreateTeamRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTeamRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTeamRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTeamRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CreateTeamRsp::retcode() const {
  return retcode_;
}
inline void CreateTeamRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamApplyLstReq

// -------------------------------------------------------------------

// TeamApplyLstRsp

// required int32 retcode = 1;
inline bool TeamApplyLstRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamApplyLstRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamApplyLstRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamApplyLstRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamApplyLstRsp::retcode() const {
  return retcode_;
}
inline void TeamApplyLstRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional .proto_ff.TeamMultApplyProto apply = 2;
inline bool TeamApplyLstRsp::has_apply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamApplyLstRsp::set_has_apply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamApplyLstRsp::clear_has_apply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamApplyLstRsp::clear_apply() {
  if (apply_ != NULL) apply_->::proto_ff::TeamMultApplyProto::Clear();
  clear_has_apply();
}
inline const ::proto_ff::TeamMultApplyProto& TeamApplyLstRsp::apply() const {
  return apply_ != NULL ? *apply_ : *default_instance_->apply_;
}
inline ::proto_ff::TeamMultApplyProto* TeamApplyLstRsp::mutable_apply() {
  set_has_apply();
  if (apply_ == NULL) apply_ = new ::proto_ff::TeamMultApplyProto;
  return apply_;
}
inline ::proto_ff::TeamMultApplyProto* TeamApplyLstRsp::release_apply() {
  clear_has_apply();
  ::proto_ff::TeamMultApplyProto* temp = apply_;
  apply_ = NULL;
  return temp;
}
inline void TeamApplyLstRsp::set_allocated_apply(::proto_ff::TeamMultApplyProto* apply) {
  delete apply_;
  apply_ = apply;
  if (apply) {
    set_has_apply();
  } else {
    clear_has_apply();
  }
}

// -------------------------------------------------------------------

// TeamReplyApplyReq

// required uint64 cid = 1;
inline bool TeamReplyApplyReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamReplyApplyReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamReplyApplyReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamReplyApplyReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TeamReplyApplyReq::cid() const {
  return cid_;
}
inline void TeamReplyApplyReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// TeamReplyApplyRsp

// optional int32 retcode = 1;
inline bool TeamReplyApplyRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamReplyApplyRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamReplyApplyRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamReplyApplyRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamReplyApplyRsp::retcode() const {
  return retcode_;
}
inline void TeamReplyApplyRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamUpdateMemNotify

// repeated uint64 del_mem = 1;
inline int TeamUpdateMemNotify::del_mem_size() const {
  return del_mem_.size();
}
inline void TeamUpdateMemNotify::clear_del_mem() {
  del_mem_.Clear();
}
inline ::google::protobuf::uint64 TeamUpdateMemNotify::del_mem(int index) const {
  return del_mem_.Get(index);
}
inline void TeamUpdateMemNotify::set_del_mem(int index, ::google::protobuf::uint64 value) {
  del_mem_.Set(index, value);
}
inline void TeamUpdateMemNotify::add_del_mem(::google::protobuf::uint64 value) {
  del_mem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamUpdateMemNotify::del_mem() const {
  return del_mem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamUpdateMemNotify::mutable_del_mem() {
  return &del_mem_;
}

// optional int32 reason = 2;
inline bool TeamUpdateMemNotify::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamUpdateMemNotify::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamUpdateMemNotify::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamUpdateMemNotify::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 TeamUpdateMemNotify::reason() const {
  return reason_;
}
inline void TeamUpdateMemNotify::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// optional .proto_ff.TeamMultMemProto mems = 3;
inline bool TeamUpdateMemNotify::has_mems() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamUpdateMemNotify::set_has_mems() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamUpdateMemNotify::clear_has_mems() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamUpdateMemNotify::clear_mems() {
  if (mems_ != NULL) mems_->::proto_ff::TeamMultMemProto::Clear();
  clear_has_mems();
}
inline const ::proto_ff::TeamMultMemProto& TeamUpdateMemNotify::mems() const {
  return mems_ != NULL ? *mems_ : *default_instance_->mems_;
}
inline ::proto_ff::TeamMultMemProto* TeamUpdateMemNotify::mutable_mems() {
  set_has_mems();
  if (mems_ == NULL) mems_ = new ::proto_ff::TeamMultMemProto;
  return mems_;
}
inline ::proto_ff::TeamMultMemProto* TeamUpdateMemNotify::release_mems() {
  clear_has_mems();
  ::proto_ff::TeamMultMemProto* temp = mems_;
  mems_ = NULL;
  return temp;
}
inline void TeamUpdateMemNotify::set_allocated_mems(::proto_ff::TeamMultMemProto* mems) {
  delete mems_;
  mems_ = mems;
  if (mems) {
    set_has_mems();
  } else {
    clear_has_mems();
  }
}

// -------------------------------------------------------------------

// TeamUpdateMemSimpleNotify

// optional .proto_ff.TeamMultMemSimpleProto simple_info = 1;
inline bool TeamUpdateMemSimpleNotify::has_simple_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamUpdateMemSimpleNotify::set_has_simple_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamUpdateMemSimpleNotify::clear_has_simple_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamUpdateMemSimpleNotify::clear_simple_info() {
  if (simple_info_ != NULL) simple_info_->::proto_ff::TeamMultMemSimpleProto::Clear();
  clear_has_simple_info();
}
inline const ::proto_ff::TeamMultMemSimpleProto& TeamUpdateMemSimpleNotify::simple_info() const {
  return simple_info_ != NULL ? *simple_info_ : *default_instance_->simple_info_;
}
inline ::proto_ff::TeamMultMemSimpleProto* TeamUpdateMemSimpleNotify::mutable_simple_info() {
  set_has_simple_info();
  if (simple_info_ == NULL) simple_info_ = new ::proto_ff::TeamMultMemSimpleProto;
  return simple_info_;
}
inline ::proto_ff::TeamMultMemSimpleProto* TeamUpdateMemSimpleNotify::release_simple_info() {
  clear_has_simple_info();
  ::proto_ff::TeamMultMemSimpleProto* temp = simple_info_;
  simple_info_ = NULL;
  return temp;
}
inline void TeamUpdateMemSimpleNotify::set_allocated_simple_info(::proto_ff::TeamMultMemSimpleProto* simple_info) {
  delete simple_info_;
  simple_info_ = simple_info;
  if (simple_info) {
    set_has_simple_info();
  } else {
    clear_has_simple_info();
  }
}

// -------------------------------------------------------------------

// TeamUpdateInfoNotify

// optional .proto_ff.TeamProto info = 1;
inline bool TeamUpdateInfoNotify::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamUpdateInfoNotify::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamUpdateInfoNotify::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamUpdateInfoNotify::clear_info() {
  if (info_ != NULL) info_->::proto_ff::TeamProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::TeamProto& TeamUpdateInfoNotify::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::TeamProto* TeamUpdateInfoNotify::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::TeamProto;
  return info_;
}
inline ::proto_ff::TeamProto* TeamUpdateInfoNotify::release_info() {
  clear_has_info();
  ::proto_ff::TeamProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void TeamUpdateInfoNotify::set_allocated_info(::proto_ff::TeamProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// TeamUpdateSimpleNotify

// optional uint64 object_id = 1;
inline bool TeamUpdateSimpleNotify::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamUpdateSimpleNotify::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamUpdateSimpleNotify::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamUpdateSimpleNotify::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 TeamUpdateSimpleNotify::object_id() const {
  return object_id_;
}
inline void TeamUpdateSimpleNotify::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// optional int32 min_level = 2;
inline bool TeamUpdateSimpleNotify::has_min_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamUpdateSimpleNotify::set_has_min_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamUpdateSimpleNotify::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamUpdateSimpleNotify::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 TeamUpdateSimpleNotify::min_level() const {
  return min_level_;
}
inline void TeamUpdateSimpleNotify::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// optional int32 max_level = 3;
inline bool TeamUpdateSimpleNotify::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamUpdateSimpleNotify::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamUpdateSimpleNotify::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamUpdateSimpleNotify::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 TeamUpdateSimpleNotify::max_level() const {
  return max_level_;
}
inline void TeamUpdateSimpleNotify::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// optional uint64 leader = 4;
inline bool TeamUpdateSimpleNotify::has_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamUpdateSimpleNotify::set_has_leader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamUpdateSimpleNotify::clear_has_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamUpdateSimpleNotify::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 TeamUpdateSimpleNotify::leader() const {
  return leader_;
}
inline void TeamUpdateSimpleNotify::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// optional int32 auto_match = 5;
inline bool TeamUpdateSimpleNotify::has_auto_match() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamUpdateSimpleNotify::set_has_auto_match() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamUpdateSimpleNotify::clear_has_auto_match() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamUpdateSimpleNotify::clear_auto_match() {
  auto_match_ = 0;
  clear_has_auto_match();
}
inline ::google::protobuf::int32 TeamUpdateSimpleNotify::auto_match() const {
  return auto_match_;
}
inline void TeamUpdateSimpleNotify::set_auto_match(::google::protobuf::int32 value) {
  set_has_auto_match();
  auto_match_ = value;
}

// -------------------------------------------------------------------

// TeamClearApplyLstReq

// -------------------------------------------------------------------

// TeamClearApplyLstRsp

// optional int32 retcode = 1;
inline bool TeamClearApplyLstRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamClearApplyLstRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamClearApplyLstRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamClearApplyLstRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamClearApplyLstRsp::retcode() const {
  return retcode_;
}
inline void TeamClearApplyLstRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamUpdateApplyNotify

// repeated uint64 del_apply = 1;
inline int TeamUpdateApplyNotify::del_apply_size() const {
  return del_apply_.size();
}
inline void TeamUpdateApplyNotify::clear_del_apply() {
  del_apply_.Clear();
}
inline ::google::protobuf::uint64 TeamUpdateApplyNotify::del_apply(int index) const {
  return del_apply_.Get(index);
}
inline void TeamUpdateApplyNotify::set_del_apply(int index, ::google::protobuf::uint64 value) {
  del_apply_.Set(index, value);
}
inline void TeamUpdateApplyNotify::add_del_apply(::google::protobuf::uint64 value) {
  del_apply_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamUpdateApplyNotify::del_apply() const {
  return del_apply_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamUpdateApplyNotify::mutable_del_apply() {
  return &del_apply_;
}

// optional .proto_ff.TeamMultApplyProto apply = 2;
inline bool TeamUpdateApplyNotify::has_apply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamUpdateApplyNotify::set_has_apply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamUpdateApplyNotify::clear_has_apply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamUpdateApplyNotify::clear_apply() {
  if (apply_ != NULL) apply_->::proto_ff::TeamMultApplyProto::Clear();
  clear_has_apply();
}
inline const ::proto_ff::TeamMultApplyProto& TeamUpdateApplyNotify::apply() const {
  return apply_ != NULL ? *apply_ : *default_instance_->apply_;
}
inline ::proto_ff::TeamMultApplyProto* TeamUpdateApplyNotify::mutable_apply() {
  set_has_apply();
  if (apply_ == NULL) apply_ = new ::proto_ff::TeamMultApplyProto;
  return apply_;
}
inline ::proto_ff::TeamMultApplyProto* TeamUpdateApplyNotify::release_apply() {
  clear_has_apply();
  ::proto_ff::TeamMultApplyProto* temp = apply_;
  apply_ = NULL;
  return temp;
}
inline void TeamUpdateApplyNotify::set_allocated_apply(::proto_ff::TeamMultApplyProto* apply) {
  delete apply_;
  apply_ = apply;
  if (apply) {
    set_has_apply();
  } else {
    clear_has_apply();
  }
}

// -------------------------------------------------------------------

// ApplyJoinTeamReq

// required uint32 teamid = 1;
inline bool ApplyJoinTeamReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinTeamReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinTeamReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinTeamReq::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 ApplyJoinTeamReq::teamid() const {
  return teamid_;
}
inline void ApplyJoinTeamReq::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// ApplyJoinTeamRsp

// required int32 retcode = 1;
inline bool ApplyJoinTeamRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinTeamRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinTeamRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinTeamRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 ApplyJoinTeamRsp::retcode() const {
  return retcode_;
}
inline void ApplyJoinTeamRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// InviteJoinTeamReq

// required uint64 invite_cid = 1;
inline bool InviteJoinTeamReq::has_invite_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinTeamReq::set_has_invite_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinTeamReq::clear_has_invite_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinTeamReq::clear_invite_cid() {
  invite_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_invite_cid();
}
inline ::google::protobuf::uint64 InviteJoinTeamReq::invite_cid() const {
  return invite_cid_;
}
inline void InviteJoinTeamReq::set_invite_cid(::google::protobuf::uint64 value) {
  set_has_invite_cid();
  invite_cid_ = value;
}

// -------------------------------------------------------------------

// InviteJoinTeamRsp

// optional int32 retcode = 1;
inline bool InviteJoinTeamRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinTeamRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinTeamRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinTeamRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 InviteJoinTeamRsp::retcode() const {
  return retcode_;
}
inline void InviteJoinTeamRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// InviteJoinTeamNotify

// optional uint64 invite_cid = 1;
inline bool InviteJoinTeamNotify::has_invite_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinTeamNotify::set_has_invite_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinTeamNotify::clear_has_invite_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinTeamNotify::clear_invite_cid() {
  invite_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_invite_cid();
}
inline ::google::protobuf::uint64 InviteJoinTeamNotify::invite_cid() const {
  return invite_cid_;
}
inline void InviteJoinTeamNotify::set_invite_cid(::google::protobuf::uint64 value) {
  set_has_invite_cid();
  invite_cid_ = value;
}

// optional bytes invite_name = 2;
inline bool InviteJoinTeamNotify::has_invite_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteJoinTeamNotify::set_has_invite_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteJoinTeamNotify::clear_has_invite_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteJoinTeamNotify::clear_invite_name() {
  if (invite_name_ != &::google::protobuf::internal::kEmptyString) {
    invite_name_->clear();
  }
  clear_has_invite_name();
}
inline const ::std::string& InviteJoinTeamNotify::invite_name() const {
  return *invite_name_;
}
inline void InviteJoinTeamNotify::set_invite_name(const ::std::string& value) {
  set_has_invite_name();
  if (invite_name_ == &::google::protobuf::internal::kEmptyString) {
    invite_name_ = new ::std::string;
  }
  invite_name_->assign(value);
}
inline void InviteJoinTeamNotify::set_invite_name(const char* value) {
  set_has_invite_name();
  if (invite_name_ == &::google::protobuf::internal::kEmptyString) {
    invite_name_ = new ::std::string;
  }
  invite_name_->assign(value);
}
inline void InviteJoinTeamNotify::set_invite_name(const void* value, size_t size) {
  set_has_invite_name();
  if (invite_name_ == &::google::protobuf::internal::kEmptyString) {
    invite_name_ = new ::std::string;
  }
  invite_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InviteJoinTeamNotify::mutable_invite_name() {
  set_has_invite_name();
  if (invite_name_ == &::google::protobuf::internal::kEmptyString) {
    invite_name_ = new ::std::string;
  }
  return invite_name_;
}
inline ::std::string* InviteJoinTeamNotify::release_invite_name() {
  clear_has_invite_name();
  if (invite_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = invite_name_;
    invite_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void InviteJoinTeamNotify::set_allocated_invite_name(::std::string* invite_name) {
  if (invite_name_ != &::google::protobuf::internal::kEmptyString) {
    delete invite_name_;
  }
  if (invite_name) {
    set_has_invite_name();
    invite_name_ = invite_name;
  } else {
    clear_has_invite_name();
    invite_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 teamid = 3;
inline bool InviteJoinTeamNotify::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteJoinTeamNotify::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteJoinTeamNotify::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteJoinTeamNotify::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 InviteJoinTeamNotify::teamid() const {
  return teamid_;
}
inline void InviteJoinTeamNotify::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// ReplyInviteJoinTeamReq

// required int32 reply = 1;
inline bool ReplyInviteJoinTeamReq::has_reply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyInviteJoinTeamReq::set_has_reply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyInviteJoinTeamReq::clear_has_reply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyInviteJoinTeamReq::clear_reply() {
  reply_ = 0;
  clear_has_reply();
}
inline ::google::protobuf::int32 ReplyInviteJoinTeamReq::reply() const {
  return reply_;
}
inline void ReplyInviteJoinTeamReq::set_reply(::google::protobuf::int32 value) {
  set_has_reply();
  reply_ = value;
}

// required uint32 teamid = 2;
inline bool ReplyInviteJoinTeamReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyInviteJoinTeamReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyInviteJoinTeamReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyInviteJoinTeamReq::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 ReplyInviteJoinTeamReq::teamid() const {
  return teamid_;
}
inline void ReplyInviteJoinTeamReq::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// ReplyInviteJoinTeamRsp

// optional int32 retcode = 1;
inline bool ReplyInviteJoinTeamRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyInviteJoinTeamRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyInviteJoinTeamRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyInviteJoinTeamRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 ReplyInviteJoinTeamRsp::retcode() const {
  return retcode_;
}
inline void ReplyInviteJoinTeamRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamSetObjReq

// required uint64 object_id = 1;
inline bool TeamSetObjReq::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamSetObjReq::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamSetObjReq::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamSetObjReq::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 TeamSetObjReq::object_id() const {
  return object_id_;
}
inline void TeamSetObjReq::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required int32 min_level = 2;
inline bool TeamSetObjReq::has_min_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamSetObjReq::set_has_min_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamSetObjReq::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamSetObjReq::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 TeamSetObjReq::min_level() const {
  return min_level_;
}
inline void TeamSetObjReq::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// required int32 max_level = 3;
inline bool TeamSetObjReq::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamSetObjReq::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamSetObjReq::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamSetObjReq::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 TeamSetObjReq::max_level() const {
  return max_level_;
}
inline void TeamSetObjReq::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// TeamSetObjRsp

// optional int32 retcode = 1;
inline bool TeamSetObjRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamSetObjRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamSetObjRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamSetObjRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamSetObjRsp::retcode() const {
  return retcode_;
}
inline void TeamSetObjRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamPromoteLeaderReq

// required uint64 cid = 1;
inline bool TeamPromoteLeaderReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPromoteLeaderReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPromoteLeaderReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPromoteLeaderReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TeamPromoteLeaderReq::cid() const {
  return cid_;
}
inline void TeamPromoteLeaderReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// TeamPromoteLeaderRsp

// optional int32 retcode = 1;
inline bool TeamPromoteLeaderRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamPromoteLeaderRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamPromoteLeaderRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamPromoteLeaderRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamPromoteLeaderRsp::retcode() const {
  return retcode_;
}
inline void TeamPromoteLeaderRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamAutoMatchReq

// required int32 auto_match = 1;
inline bool TeamAutoMatchReq::has_auto_match() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamAutoMatchReq::set_has_auto_match() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamAutoMatchReq::clear_has_auto_match() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamAutoMatchReq::clear_auto_match() {
  auto_match_ = 0;
  clear_has_auto_match();
}
inline ::google::protobuf::int32 TeamAutoMatchReq::auto_match() const {
  return auto_match_;
}
inline void TeamAutoMatchReq::set_auto_match(::google::protobuf::int32 value) {
  set_has_auto_match();
  auto_match_ = value;
}

// required uint64 object_id = 2;
inline bool TeamAutoMatchReq::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamAutoMatchReq::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamAutoMatchReq::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamAutoMatchReq::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 TeamAutoMatchReq::object_id() const {
  return object_id_;
}
inline void TeamAutoMatchReq::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required int32 min_level = 3;
inline bool TeamAutoMatchReq::has_min_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamAutoMatchReq::set_has_min_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamAutoMatchReq::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamAutoMatchReq::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 TeamAutoMatchReq::min_level() const {
  return min_level_;
}
inline void TeamAutoMatchReq::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// required int32 max_level = 4;
inline bool TeamAutoMatchReq::has_max_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamAutoMatchReq::set_has_max_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamAutoMatchReq::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamAutoMatchReq::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 TeamAutoMatchReq::max_level() const {
  return max_level_;
}
inline void TeamAutoMatchReq::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// TeamAutoMatchRsp

// optional int32 retcode = 1;
inline bool TeamAutoMatchRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamAutoMatchRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamAutoMatchRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamAutoMatchRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamAutoMatchRsp::retcode() const {
  return retcode_;
}
inline void TeamAutoMatchRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamKickMemReq

// required uint64 kick_cid = 1;
inline bool TeamKickMemReq::has_kick_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamKickMemReq::set_has_kick_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamKickMemReq::clear_has_kick_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamKickMemReq::clear_kick_cid() {
  kick_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_kick_cid();
}
inline ::google::protobuf::uint64 TeamKickMemReq::kick_cid() const {
  return kick_cid_;
}
inline void TeamKickMemReq::set_kick_cid(::google::protobuf::uint64 value) {
  set_has_kick_cid();
  kick_cid_ = value;
}

// -------------------------------------------------------------------

// TeamKickMemRsp

// optional int32 retcode = 1;
inline bool TeamKickMemRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamKickMemRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamKickMemRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamKickMemRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamKickMemRsp::retcode() const {
  return retcode_;
}
inline void TeamKickMemRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamQuitReq

// -------------------------------------------------------------------

// TeamQuitRsp

// optional int32 retcode = 1;
inline bool TeamQuitRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamQuitRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamQuitRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamQuitRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamQuitRsp::retcode() const {
  return retcode_;
}
inline void TeamQuitRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// TeamRefuseNotify

// optional int32 type = 1;
inline bool TeamRefuseNotify::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRefuseNotify::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRefuseNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRefuseNotify::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TeamRefuseNotify::type() const {
  return type_;
}
inline void TeamRefuseNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes name = 2;
inline bool TeamRefuseNotify::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRefuseNotify::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRefuseNotify::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRefuseNotify::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TeamRefuseNotify::name() const {
  return *name_;
}
inline void TeamRefuseNotify::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamRefuseNotify::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TeamRefuseNotify::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TeamRefuseNotify::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TeamRefuseNotify::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TeamRefuseNotify::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TeamMatchAtonceReq

// -------------------------------------------------------------------

// TeamMatchAtonceRsp

// optional int32 retcode = 1;
inline bool TeamMatchAtonceRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMatchAtonceRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMatchAtonceRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMatchAtonceRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TeamMatchAtonceRsp::retcode() const {
  return retcode_;
}
inline void TeamMatchAtonceRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// SCCreteTeam

// optional uint32 teamid = 1;
inline bool SCCreteTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCCreteTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCCreteTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCCreteTeam::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 SCCreteTeam::teamid() const {
  return teamid_;
}
inline void SCCreteTeam::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional .proto_ff.CenterTeamMemProto info = 2;
inline bool SCCreteTeam::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCCreteTeam::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCCreteTeam::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCCreteTeam::clear_info() {
  if (info_ != NULL) info_->::proto_ff::CenterTeamMemProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::CenterTeamMemProto& SCCreteTeam::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::CenterTeamMemProto* SCCreteTeam::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::CenterTeamMemProto;
  return info_;
}
inline ::proto_ff::CenterTeamMemProto* SCCreteTeam::release_info() {
  clear_has_info();
  ::proto_ff::CenterTeamMemProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SCCreteTeam::set_allocated_info(::proto_ff::CenterTeamMemProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// SCJoinTeam

// optional uint32 teamid = 1;
inline bool SCJoinTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCJoinTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCJoinTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCJoinTeam::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 SCJoinTeam::teamid() const {
  return teamid_;
}
inline void SCJoinTeam::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional .proto_ff.CenterTeamMemProto info = 2;
inline bool SCJoinTeam::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCJoinTeam::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCJoinTeam::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCJoinTeam::clear_info() {
  if (info_ != NULL) info_->::proto_ff::CenterTeamMemProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::CenterTeamMemProto& SCJoinTeam::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::CenterTeamMemProto* SCJoinTeam::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::CenterTeamMemProto;
  return info_;
}
inline ::proto_ff::CenterTeamMemProto* SCJoinTeam::release_info() {
  clear_has_info();
  ::proto_ff::CenterTeamMemProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SCJoinTeam::set_allocated_info(::proto_ff::CenterTeamMemProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// SCQuitTeam

// optional uint64 cid = 1;
inline bool SCQuitTeam::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCQuitTeam::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCQuitTeam::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCQuitTeam::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 SCQuitTeam::cid() const {
  return cid_;
}
inline void SCQuitTeam::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 teamid = 2;
inline bool SCQuitTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCQuitTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCQuitTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCQuitTeam::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 SCQuitTeam::teamid() const {
  return teamid_;
}
inline void SCQuitTeam::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// SCUpdateTeam

// optional uint32 teamid = 1;
inline bool SCUpdateTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCUpdateTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCUpdateTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCUpdateTeam::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 SCUpdateTeam::teamid() const {
  return teamid_;
}
inline void SCUpdateTeam::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional .proto_ff.CenterMultiTeamMemProto info = 2;
inline bool SCUpdateTeam::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCUpdateTeam::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCUpdateTeam::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCUpdateTeam::clear_info() {
  if (info_ != NULL) info_->::proto_ff::CenterMultiTeamMemProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::CenterMultiTeamMemProto& SCUpdateTeam::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::CenterMultiTeamMemProto* SCUpdateTeam::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::CenterMultiTeamMemProto;
  return info_;
}
inline ::proto_ff::CenterMultiTeamMemProto* SCUpdateTeam::release_info() {
  clear_has_info();
  ::proto_ff::CenterMultiTeamMemProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SCUpdateTeam::set_allocated_info(::proto_ff::CenterMultiTeamMemProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// SCTeamLeader

// optional uint32 teamid = 1;
inline bool SCTeamLeader::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCTeamLeader::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCTeamLeader::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCTeamLeader::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 SCTeamLeader::teamid() const {
  return teamid_;
}
inline void SCTeamLeader::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint64 leader = 2;
inline bool SCTeamLeader::has_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCTeamLeader::set_has_leader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCTeamLeader::clear_has_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCTeamLeader::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 SCTeamLeader::leader() const {
  return leader_;
}
inline void SCTeamLeader::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// -------------------------------------------------------------------

// SCTeamDismiss

// optional uint32 teamid = 1;
inline bool SCTeamDismiss::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCTeamDismiss::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCTeamDismiss::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCTeamDismiss::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 SCTeamDismiss::teamid() const {
  return teamid_;
}
inline void SCTeamDismiss::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// CLCharTeamUpdate

// optional uint64 cid = 1;
inline bool CLCharTeamUpdate::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLCharTeamUpdate::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLCharTeamUpdate::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLCharTeamUpdate::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CLCharTeamUpdate::cid() const {
  return cid_;
}
inline void CLCharTeamUpdate::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 teamid = 2;
inline bool CLCharTeamUpdate::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLCharTeamUpdate::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLCharTeamUpdate::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLCharTeamUpdate::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 CLCharTeamUpdate::teamid() const {
  return teamid_;
}
inline void CLCharTeamUpdate::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint64 leader = 3;
inline bool CLCharTeamUpdate::has_leader() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLCharTeamUpdate::set_has_leader() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLCharTeamUpdate::clear_has_leader() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLCharTeamUpdate::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 CLCharTeamUpdate::leader() const {
  return leader_;
}
inline void CLCharTeamUpdate::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
}

// optional int32 mem_cnt = 4;
inline bool CLCharTeamUpdate::has_mem_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CLCharTeamUpdate::set_has_mem_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CLCharTeamUpdate::clear_has_mem_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CLCharTeamUpdate::clear_mem_cnt() {
  mem_cnt_ = 0;
  clear_has_mem_cnt();
}
inline ::google::protobuf::int32 CLCharTeamUpdate::mem_cnt() const {
  return mem_cnt_;
}
inline void CLCharTeamUpdate::set_mem_cnt(::google::protobuf::int32 value) {
  set_has_mem_cnt();
  mem_cnt_ = value;
}

// -------------------------------------------------------------------

// CLUpdateSimpleTeam

// optional uint32 teamid = 1;
inline bool CLUpdateSimpleTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLUpdateSimpleTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLUpdateSimpleTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLUpdateSimpleTeam::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 CLUpdateSimpleTeam::teamid() const {
  return teamid_;
}
inline void CLUpdateSimpleTeam::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint64 leadercid = 2;
inline bool CLUpdateSimpleTeam::has_leadercid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLUpdateSimpleTeam::set_has_leadercid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLUpdateSimpleTeam::clear_has_leadercid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLUpdateSimpleTeam::clear_leadercid() {
  leadercid_ = GOOGLE_ULONGLONG(0);
  clear_has_leadercid();
}
inline ::google::protobuf::uint64 CLUpdateSimpleTeam::leadercid() const {
  return leadercid_;
}
inline void CLUpdateSimpleTeam::set_leadercid(::google::protobuf::uint64 value) {
  set_has_leadercid();
  leadercid_ = value;
}

// optional .proto_ff.CenterMultiTeamMemProto info = 3;
inline bool CLUpdateSimpleTeam::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLUpdateSimpleTeam::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLUpdateSimpleTeam::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLUpdateSimpleTeam::clear_info() {
  if (info_ != NULL) info_->::proto_ff::CenterMultiTeamMemProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::CenterMultiTeamMemProto& CLUpdateSimpleTeam::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::CenterMultiTeamMemProto* CLUpdateSimpleTeam::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::CenterMultiTeamMemProto;
  return info_;
}
inline ::proto_ff::CenterMultiTeamMemProto* CLUpdateSimpleTeam::release_info() {
  clear_has_info();
  ::proto_ff::CenterMultiTeamMemProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CLUpdateSimpleTeam::set_allocated_info(::proto_ff::CenterMultiTeamMemProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// CLDismissTeam

// optional uint32 teamid = 1;
inline bool CLDismissTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLDismissTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLDismissTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLDismissTeam::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 CLDismissTeam::teamid() const {
  return teamid_;
}
inline void CLDismissTeam::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// CLCharTeamClonessUpdate

// optional uint64 cid = 1;
inline bool CLCharTeamClonessUpdate::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLCharTeamClonessUpdate::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLCharTeamClonessUpdate::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLCharTeamClonessUpdate::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CLCharTeamClonessUpdate::cid() const {
  return cid_;
}
inline void CLCharTeamClonessUpdate::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 cloness_lev = 2;
inline bool CLCharTeamClonessUpdate::has_cloness_lev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLCharTeamClonessUpdate::set_has_cloness_lev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLCharTeamClonessUpdate::clear_has_cloness_lev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLCharTeamClonessUpdate::clear_cloness_lev() {
  cloness_lev_ = 0;
  clear_has_cloness_lev();
}
inline ::google::protobuf::int32 CLCharTeamClonessUpdate::cloness_lev() const {
  return cloness_lev_;
}
inline void CLCharTeamClonessUpdate::set_cloness_lev(::google::protobuf::int32 value) {
  set_has_cloness_lev();
  cloness_lev_ = value;
}

// -------------------------------------------------------------------

// LSTeamRobotHpSync

// optional uint32 teamid = 1;
inline bool LSTeamRobotHpSync::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LSTeamRobotHpSync::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LSTeamRobotHpSync::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LSTeamRobotHpSync::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 LSTeamRobotHpSync::teamid() const {
  return teamid_;
}
inline void LSTeamRobotHpSync::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint64 robotcid = 2;
inline bool LSTeamRobotHpSync::has_robotcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LSTeamRobotHpSync::set_has_robotcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LSTeamRobotHpSync::clear_has_robotcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LSTeamRobotHpSync::clear_robotcid() {
  robotcid_ = GOOGLE_ULONGLONG(0);
  clear_has_robotcid();
}
inline ::google::protobuf::uint64 LSTeamRobotHpSync::robotcid() const {
  return robotcid_;
}
inline void LSTeamRobotHpSync::set_robotcid(::google::protobuf::uint64 value) {
  set_has_robotcid();
  robotcid_ = value;
}

// optional uint64 curhp = 3;
inline bool LSTeamRobotHpSync::has_curhp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LSTeamRobotHpSync::set_has_curhp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LSTeamRobotHpSync::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LSTeamRobotHpSync::clear_curhp() {
  curhp_ = GOOGLE_ULONGLONG(0);
  clear_has_curhp();
}
inline ::google::protobuf::uint64 LSTeamRobotHpSync::curhp() const {
  return curhp_;
}
inline void LSTeamRobotHpSync::set_curhp(::google::protobuf::uint64 value) {
  set_has_curhp();
  curhp_ = value;
}

// optional uint64 maxhp = 4;
inline bool LSTeamRobotHpSync::has_maxhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LSTeamRobotHpSync::set_has_maxhp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LSTeamRobotHpSync::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LSTeamRobotHpSync::clear_maxhp() {
  maxhp_ = GOOGLE_ULONGLONG(0);
  clear_has_maxhp();
}
inline ::google::protobuf::uint64 LSTeamRobotHpSync::maxhp() const {
  return maxhp_;
}
inline void LSTeamRobotHpSync::set_maxhp(::google::protobuf::uint64 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// -------------------------------------------------------------------

// DupInviteStateProto

// optional uint64 cid = 1;
inline bool DupInviteStateProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupInviteStateProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupInviteStateProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupInviteStateProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 DupInviteStateProto::cid() const {
  return cid_;
}
inline void DupInviteStateProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 state = 2;
inline bool DupInviteStateProto::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupInviteStateProto::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupInviteStateProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupInviteStateProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DupInviteStateProto::state() const {
  return state_;
}
inline void DupInviteStateProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DupAllInviteStateProto

// repeated .proto_ff.DupInviteStateProto all_state = 1;
inline int DupAllInviteStateProto::all_state_size() const {
  return all_state_.size();
}
inline void DupAllInviteStateProto::clear_all_state() {
  all_state_.Clear();
}
inline const ::proto_ff::DupInviteStateProto& DupAllInviteStateProto::all_state(int index) const {
  return all_state_.Get(index);
}
inline ::proto_ff::DupInviteStateProto* DupAllInviteStateProto::mutable_all_state(int index) {
  return all_state_.Mutable(index);
}
inline ::proto_ff::DupInviteStateProto* DupAllInviteStateProto::add_all_state() {
  return all_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupInviteStateProto >&
DupAllInviteStateProto::all_state() const {
  return all_state_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupInviteStateProto >*
DupAllInviteStateProto::mutable_all_state() {
  return &all_state_;
}

// -------------------------------------------------------------------

// Duplicate_CancelStateNotify

// required int32 retcode = 1;
inline bool Duplicate_CancelStateNotify::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_CancelStateNotify::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_CancelStateNotify::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_CancelStateNotify::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_CancelStateNotify::retcode() const {
  return retcode_;
}
inline void Duplicate_CancelStateNotify::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// DupTeamRobotProto

// optional uint64 charcid = 1;
inline bool DupTeamRobotProto::has_charcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTeamRobotProto::set_has_charcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTeamRobotProto::clear_has_charcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTeamRobotProto::clear_charcid() {
  charcid_ = GOOGLE_ULONGLONG(0);
  clear_has_charcid();
}
inline ::google::protobuf::uint64 DupTeamRobotProto::charcid() const {
  return charcid_;
}
inline void DupTeamRobotProto::set_charcid(::google::protobuf::uint64 value) {
  set_has_charcid();
  charcid_ = value;
}

// optional uint32 coef = 2;
inline bool DupTeamRobotProto::has_coef() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTeamRobotProto::set_has_coef() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTeamRobotProto::clear_has_coef() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTeamRobotProto::clear_coef() {
  coef_ = 0u;
  clear_has_coef();
}
inline ::google::protobuf::uint32 DupTeamRobotProto::coef() const {
  return coef_;
}
inline void DupTeamRobotProto::set_coef(::google::protobuf::uint32 value) {
  set_has_coef();
  coef_ = value;
}

// optional uint32 zid = 3;
inline bool DupTeamRobotProto::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupTeamRobotProto::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupTeamRobotProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupTeamRobotProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 DupTeamRobotProto::zid() const {
  return zid_;
}
inline void DupTeamRobotProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint64 robotcid = 4;
inline bool DupTeamRobotProto::has_robotcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupTeamRobotProto::set_has_robotcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupTeamRobotProto::clear_has_robotcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupTeamRobotProto::clear_robotcid() {
  robotcid_ = GOOGLE_ULONGLONG(0);
  clear_has_robotcid();
}
inline ::google::protobuf::uint64 DupTeamRobotProto::robotcid() const {
  return robotcid_;
}
inline void DupTeamRobotProto::set_robotcid(::google::protobuf::uint64 value) {
  set_has_robotcid();
  robotcid_ = value;
}

// optional bytes name = 5;
inline bool DupTeamRobotProto::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DupTeamRobotProto::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DupTeamRobotProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DupTeamRobotProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DupTeamRobotProto::name() const {
  return *name_;
}
inline void DupTeamRobotProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTeamRobotProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTeamRobotProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DupTeamRobotProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DupTeamRobotProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DupTeamRobotProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 6;
inline bool DupTeamRobotProto::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DupTeamRobotProto::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DupTeamRobotProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DupTeamRobotProto::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DupTeamRobotProto::level() const {
  return level_;
}
inline void DupTeamRobotProto::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 prof = 7;
inline bool DupTeamRobotProto::has_prof() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DupTeamRobotProto::set_has_prof() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DupTeamRobotProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DupTeamRobotProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 DupTeamRobotProto::prof() const {
  return prof_;
}
inline void DupTeamRobotProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 8;
inline bool DupTeamRobotProto::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DupTeamRobotProto::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DupTeamRobotProto::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DupTeamRobotProto::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& DupTeamRobotProto::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* DupTeamRobotProto::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* DupTeamRobotProto::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void DupTeamRobotProto::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional int32 vip_level = 9;
inline bool DupTeamRobotProto::has_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DupTeamRobotProto::set_has_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DupTeamRobotProto::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DupTeamRobotProto::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 DupTeamRobotProto::vip_level() const {
  return vip_level_;
}
inline void DupTeamRobotProto::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint64 fight = 10;
inline bool DupTeamRobotProto::has_fight() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DupTeamRobotProto::set_has_fight() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DupTeamRobotProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DupTeamRobotProto::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 DupTeamRobotProto::fight() const {
  return fight_;
}
inline void DupTeamRobotProto::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// -------------------------------------------------------------------

// DupMultTeamRobotProto

// repeated .proto_ff.DupTeamRobotProto info = 1;
inline int DupMultTeamRobotProto::info_size() const {
  return info_.size();
}
inline void DupMultTeamRobotProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::DupTeamRobotProto& DupMultTeamRobotProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::DupTeamRobotProto* DupMultTeamRobotProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::DupTeamRobotProto* DupMultTeamRobotProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamRobotProto >&
DupMultTeamRobotProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamRobotProto >*
DupMultTeamRobotProto::mutable_info() {
  return &info_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Team_2eproto__INCLUDED
