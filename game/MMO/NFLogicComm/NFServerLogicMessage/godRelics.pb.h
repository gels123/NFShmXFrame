// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: godRelics.proto

#ifndef PROTOBUF_godRelics_2eproto__INCLUDED
#define PROTOBUF_godRelics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_godRelics_2eproto();
void protobuf_AssignDesc_godRelics_2eproto();
void protobuf_ShutdownFile_godRelics_2eproto();

class godRelicsgodRelics;
class Sheet_godRelicsgodRelics;
class godRelicscondition;
class Sheet_godRelicscondition;

// ===================================================================

class godRelicsgodRelics : public ::google::protobuf::Message {
 public:
  godRelicsgodRelics();
  virtual ~godRelicsgodRelics();

  godRelicsgodRelics(const godRelicsgodRelics& from);

  inline godRelicsgodRelics& operator=(const godRelicsgodRelics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const godRelicsgodRelics& default_instance();

  void Swap(godRelicsgodRelics* other);

  // implements Message ----------------------------------------------

  godRelicsgodRelics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const godRelicsgodRelics& from);
  void MergeFrom(const godRelicsgodRelics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 functionId = 2;
  inline bool has_functionid() const;
  inline void clear_functionid();
  static const int kFunctionIdFieldNumber = 2;
  inline ::google::protobuf::int32 functionid() const;
  inline void set_functionid(::google::protobuf::int32 value);

  // optional int32 group = 3;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 3;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 skillID = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 4;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.godRelicsgodRelics)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_functionid();
  inline void clear_has_functionid();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 functionid_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_godRelics_2eproto();
  friend void protobuf_AssignDesc_godRelics_2eproto();
  friend void protobuf_ShutdownFile_godRelics_2eproto();

  void InitAsDefaultInstance();
  static godRelicsgodRelics* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_godRelicsgodRelics : public ::google::protobuf::Message {
 public:
  Sheet_godRelicsgodRelics();
  virtual ~Sheet_godRelicsgodRelics();

  Sheet_godRelicsgodRelics(const Sheet_godRelicsgodRelics& from);

  inline Sheet_godRelicsgodRelics& operator=(const Sheet_godRelicsgodRelics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_godRelicsgodRelics& default_instance();

  void Swap(Sheet_godRelicsgodRelics* other);

  // implements Message ----------------------------------------------

  Sheet_godRelicsgodRelics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_godRelicsgodRelics& from);
  void MergeFrom(const Sheet_godRelicsgodRelics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.godRelicsgodRelics godRelicsgodRelics_List = 1;
  inline int godrelicsgodrelics_list_size() const;
  inline void clear_godrelicsgodrelics_list();
  static const int kGodRelicsgodRelicsListFieldNumber = 1;
  inline const ::proto_ff::godRelicsgodRelics& godrelicsgodrelics_list(int index) const;
  inline ::proto_ff::godRelicsgodRelics* mutable_godrelicsgodrelics_list(int index);
  inline ::proto_ff::godRelicsgodRelics* add_godrelicsgodrelics_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicsgodRelics >&
      godrelicsgodrelics_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicsgodRelics >*
      mutable_godrelicsgodrelics_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_godRelicsgodRelics)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicsgodRelics > godrelicsgodrelics_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godRelics_2eproto();
  friend void protobuf_AssignDesc_godRelics_2eproto();
  friend void protobuf_ShutdownFile_godRelics_2eproto();

  void InitAsDefaultInstance();
  static Sheet_godRelicsgodRelics* default_instance_;
};
// -------------------------------------------------------------------

class godRelicscondition : public ::google::protobuf::Message {
 public:
  godRelicscondition();
  virtual ~godRelicscondition();

  godRelicscondition(const godRelicscondition& from);

  inline godRelicscondition& operator=(const godRelicscondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const godRelicscondition& default_instance();

  void Swap(godRelicscondition* other);

  // implements Message ----------------------------------------------

  godRelicscondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const godRelicscondition& from);
  void MergeFrom(const godRelicscondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 group = 2;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 conditon = 3;
  inline bool has_conditon() const;
  inline void clear_conditon();
  static const int kConditonFieldNumber = 3;
  inline ::google::protobuf::int32 conditon() const;
  inline void set_conditon(::google::protobuf::int32 value);

  // optional string parama = 4;
  inline bool has_parama() const;
  inline void clear_parama();
  static const int kParamaFieldNumber = 4;
  inline const ::std::string& parama() const;
  inline void set_parama(const ::std::string& value);
  inline void set_parama(const char* value);
  inline void set_parama(const char* value, size_t size);
  inline ::std::string* mutable_parama();
  inline ::std::string* release_parama();
  inline void set_allocated_parama(::std::string* parama);

  // optional int32 count = 5;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 rewardItem = 6;
  inline bool has_rewarditem() const;
  inline void clear_rewarditem();
  static const int kRewardItemFieldNumber = 6;
  inline ::google::protobuf::int32 rewarditem() const;
  inline void set_rewarditem(::google::protobuf::int32 value);

  // optional int32 rewardNumber = 7;
  inline bool has_rewardnumber() const;
  inline void clear_rewardnumber();
  static const int kRewardNumberFieldNumber = 7;
  inline ::google::protobuf::int32 rewardnumber() const;
  inline void set_rewardnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.godRelicscondition)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_conditon();
  inline void clear_has_conditon();
  inline void set_has_parama();
  inline void clear_has_parama();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_rewarditem();
  inline void clear_has_rewarditem();
  inline void set_has_rewardnumber();
  inline void clear_has_rewardnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 group_;
  ::std::string* parama_;
  ::google::protobuf::int32 conditon_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 rewarditem_;
  ::google::protobuf::int32 rewardnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_godRelics_2eproto();
  friend void protobuf_AssignDesc_godRelics_2eproto();
  friend void protobuf_ShutdownFile_godRelics_2eproto();

  void InitAsDefaultInstance();
  static godRelicscondition* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_godRelicscondition : public ::google::protobuf::Message {
 public:
  Sheet_godRelicscondition();
  virtual ~Sheet_godRelicscondition();

  Sheet_godRelicscondition(const Sheet_godRelicscondition& from);

  inline Sheet_godRelicscondition& operator=(const Sheet_godRelicscondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_godRelicscondition& default_instance();

  void Swap(Sheet_godRelicscondition* other);

  // implements Message ----------------------------------------------

  Sheet_godRelicscondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_godRelicscondition& from);
  void MergeFrom(const Sheet_godRelicscondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.godRelicscondition godRelicscondition_List = 1;
  inline int godrelicscondition_list_size() const;
  inline void clear_godrelicscondition_list();
  static const int kGodRelicsconditionListFieldNumber = 1;
  inline const ::proto_ff::godRelicscondition& godrelicscondition_list(int index) const;
  inline ::proto_ff::godRelicscondition* mutable_godrelicscondition_list(int index);
  inline ::proto_ff::godRelicscondition* add_godrelicscondition_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicscondition >&
      godrelicscondition_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicscondition >*
      mutable_godrelicscondition_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_godRelicscondition)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicscondition > godrelicscondition_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godRelics_2eproto();
  friend void protobuf_AssignDesc_godRelics_2eproto();
  friend void protobuf_ShutdownFile_godRelics_2eproto();

  void InitAsDefaultInstance();
  static Sheet_godRelicscondition* default_instance_;
};
// ===================================================================


// ===================================================================

// godRelicsgodRelics

// optional int32 id = 1;
inline bool godRelicsgodRelics::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void godRelicsgodRelics::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void godRelicsgodRelics::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void godRelicsgodRelics::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 godRelicsgodRelics::id() const {
  return id_;
}
inline void godRelicsgodRelics::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 functionId = 2;
inline bool godRelicsgodRelics::has_functionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void godRelicsgodRelics::set_has_functionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void godRelicsgodRelics::clear_has_functionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void godRelicsgodRelics::clear_functionid() {
  functionid_ = 0;
  clear_has_functionid();
}
inline ::google::protobuf::int32 godRelicsgodRelics::functionid() const {
  return functionid_;
}
inline void godRelicsgodRelics::set_functionid(::google::protobuf::int32 value) {
  set_has_functionid();
  functionid_ = value;
}

// optional int32 group = 3;
inline bool godRelicsgodRelics::has_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void godRelicsgodRelics::set_has_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void godRelicsgodRelics::clear_has_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void godRelicsgodRelics::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 godRelicsgodRelics::group() const {
  return group_;
}
inline void godRelicsgodRelics::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 skillID = 4;
inline bool godRelicsgodRelics::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void godRelicsgodRelics::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void godRelicsgodRelics::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void godRelicsgodRelics::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 godRelicsgodRelics::skillid() const {
  return skillid_;
}
inline void godRelicsgodRelics::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// Sheet_godRelicsgodRelics

// repeated .proto_ff.godRelicsgodRelics godRelicsgodRelics_List = 1;
inline int Sheet_godRelicsgodRelics::godrelicsgodrelics_list_size() const {
  return godrelicsgodrelics_list_.size();
}
inline void Sheet_godRelicsgodRelics::clear_godrelicsgodrelics_list() {
  godrelicsgodrelics_list_.Clear();
}
inline const ::proto_ff::godRelicsgodRelics& Sheet_godRelicsgodRelics::godrelicsgodrelics_list(int index) const {
  return godrelicsgodrelics_list_.Get(index);
}
inline ::proto_ff::godRelicsgodRelics* Sheet_godRelicsgodRelics::mutable_godrelicsgodrelics_list(int index) {
  return godrelicsgodrelics_list_.Mutable(index);
}
inline ::proto_ff::godRelicsgodRelics* Sheet_godRelicsgodRelics::add_godrelicsgodrelics_list() {
  return godrelicsgodrelics_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicsgodRelics >&
Sheet_godRelicsgodRelics::godrelicsgodrelics_list() const {
  return godrelicsgodrelics_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicsgodRelics >*
Sheet_godRelicsgodRelics::mutable_godrelicsgodrelics_list() {
  return &godrelicsgodrelics_list_;
}

// -------------------------------------------------------------------

// godRelicscondition

// optional int32 id = 1;
inline bool godRelicscondition::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void godRelicscondition::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void godRelicscondition::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void godRelicscondition::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 godRelicscondition::id() const {
  return id_;
}
inline void godRelicscondition::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 group = 2;
inline bool godRelicscondition::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void godRelicscondition::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void godRelicscondition::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void godRelicscondition::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 godRelicscondition::group() const {
  return group_;
}
inline void godRelicscondition::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 conditon = 3;
inline bool godRelicscondition::has_conditon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void godRelicscondition::set_has_conditon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void godRelicscondition::clear_has_conditon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void godRelicscondition::clear_conditon() {
  conditon_ = 0;
  clear_has_conditon();
}
inline ::google::protobuf::int32 godRelicscondition::conditon() const {
  return conditon_;
}
inline void godRelicscondition::set_conditon(::google::protobuf::int32 value) {
  set_has_conditon();
  conditon_ = value;
}

// optional string parama = 4;
inline bool godRelicscondition::has_parama() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void godRelicscondition::set_has_parama() {
  _has_bits_[0] |= 0x00000008u;
}
inline void godRelicscondition::clear_has_parama() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void godRelicscondition::clear_parama() {
  if (parama_ != &::google::protobuf::internal::kEmptyString) {
    parama_->clear();
  }
  clear_has_parama();
}
inline const ::std::string& godRelicscondition::parama() const {
  return *parama_;
}
inline void godRelicscondition::set_parama(const ::std::string& value) {
  set_has_parama();
  if (parama_ == &::google::protobuf::internal::kEmptyString) {
    parama_ = new ::std::string;
  }
  parama_->assign(value);
}
inline void godRelicscondition::set_parama(const char* value) {
  set_has_parama();
  if (parama_ == &::google::protobuf::internal::kEmptyString) {
    parama_ = new ::std::string;
  }
  parama_->assign(value);
}
inline void godRelicscondition::set_parama(const char* value, size_t size) {
  set_has_parama();
  if (parama_ == &::google::protobuf::internal::kEmptyString) {
    parama_ = new ::std::string;
  }
  parama_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* godRelicscondition::mutable_parama() {
  set_has_parama();
  if (parama_ == &::google::protobuf::internal::kEmptyString) {
    parama_ = new ::std::string;
  }
  return parama_;
}
inline ::std::string* godRelicscondition::release_parama() {
  clear_has_parama();
  if (parama_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = parama_;
    parama_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void godRelicscondition::set_allocated_parama(::std::string* parama) {
  if (parama_ != &::google::protobuf::internal::kEmptyString) {
    delete parama_;
  }
  if (parama) {
    set_has_parama();
    parama_ = parama;
  } else {
    clear_has_parama();
    parama_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 count = 5;
inline bool godRelicscondition::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void godRelicscondition::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void godRelicscondition::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void godRelicscondition::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 godRelicscondition::count() const {
  return count_;
}
inline void godRelicscondition::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 rewardItem = 6;
inline bool godRelicscondition::has_rewarditem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void godRelicscondition::set_has_rewarditem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void godRelicscondition::clear_has_rewarditem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void godRelicscondition::clear_rewarditem() {
  rewarditem_ = 0;
  clear_has_rewarditem();
}
inline ::google::protobuf::int32 godRelicscondition::rewarditem() const {
  return rewarditem_;
}
inline void godRelicscondition::set_rewarditem(::google::protobuf::int32 value) {
  set_has_rewarditem();
  rewarditem_ = value;
}

// optional int32 rewardNumber = 7;
inline bool godRelicscondition::has_rewardnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void godRelicscondition::set_has_rewardnumber() {
  _has_bits_[0] |= 0x00000040u;
}
inline void godRelicscondition::clear_has_rewardnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void godRelicscondition::clear_rewardnumber() {
  rewardnumber_ = 0;
  clear_has_rewardnumber();
}
inline ::google::protobuf::int32 godRelicscondition::rewardnumber() const {
  return rewardnumber_;
}
inline void godRelicscondition::set_rewardnumber(::google::protobuf::int32 value) {
  set_has_rewardnumber();
  rewardnumber_ = value;
}

// -------------------------------------------------------------------

// Sheet_godRelicscondition

// repeated .proto_ff.godRelicscondition godRelicscondition_List = 1;
inline int Sheet_godRelicscondition::godrelicscondition_list_size() const {
  return godrelicscondition_list_.size();
}
inline void Sheet_godRelicscondition::clear_godrelicscondition_list() {
  godrelicscondition_list_.Clear();
}
inline const ::proto_ff::godRelicscondition& Sheet_godRelicscondition::godrelicscondition_list(int index) const {
  return godrelicscondition_list_.Get(index);
}
inline ::proto_ff::godRelicscondition* Sheet_godRelicscondition::mutable_godrelicscondition_list(int index) {
  return godrelicscondition_list_.Mutable(index);
}
inline ::proto_ff::godRelicscondition* Sheet_godRelicscondition::add_godrelicscondition_list() {
  return godrelicscondition_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicscondition >&
Sheet_godRelicscondition::godrelicscondition_list() const {
  return godrelicscondition_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::godRelicscondition >*
Sheet_godRelicscondition::mutable_godrelicscondition_list() {
  return &godrelicscondition_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_godRelics_2eproto__INCLUDED
