// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Mofa.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Mofa.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_MofaSetupZfDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaSetupZfDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaSetup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaSetup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaSetup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaSetup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaYuansuAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaYuansuAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaYuansuAwakenDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaYuansuAwakenDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaYuansu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaYuansu_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaYuansu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaYuansu_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaDecompose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaDecompose_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaDecompose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaDecompose_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaLvexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaLvexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaLvexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaLvexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaLvatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaLvatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaLvatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaLvatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaZyattZyDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaZyattZyDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaZyatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaZyatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaZyatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaZyatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaZyjxattZyjxDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaZyjxattZyjxDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaZyjxatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaZyjxatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaZyjxatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaZyjxatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaZyjxzfattZyjxzfDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaZyjxzfattZyjxzfDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaZyjxzfatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaZyjxzfatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaZyjxzfatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaZyjxzfatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaExchange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaExchange_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaExchange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaExchange_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MofaName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MofaName_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MofaName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MofaName_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fMofa_2eproto() {
  protobuf_AddDesc_E_5fMofa_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Mofa.proto");
  GOOGLE_CHECK(file != NULL);
  E_MofaSetupZfDesc_descriptor_ = file->message_type(0);
  static const int E_MofaSetupZfDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetupZfDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetupZfDesc, m_type_),
  };
  E_MofaSetupZfDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaSetupZfDesc_descriptor_,
      E_MofaSetupZfDesc::default_instance_,
      E_MofaSetupZfDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetupZfDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetupZfDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaSetupZfDesc));
  E_MofaSetup_descriptor_ = file->message_type(1);
  static const int E_MofaSetup_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_positionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_unlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_zyatt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_bless_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_blessbonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_jxzyatt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_jxblessbonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_jxblessatt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, m_zf_),
  };
  E_MofaSetup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaSetup_descriptor_,
      E_MofaSetup::default_instance_,
      E_MofaSetup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaSetup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaSetup));
  Sheet_MofaSetup_descriptor_ = file->message_type(2);
  static const int Sheet_MofaSetup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaSetup, e_mofasetup_list_),
  };
  Sheet_MofaSetup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaSetup_descriptor_,
      Sheet_MofaSetup::default_instance_,
      Sheet_MofaSetup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaSetup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaSetup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaSetup));
  E_MofaYuansuAttributeDesc_descriptor_ = file->message_type(3);
  static const int E_MofaYuansuAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAttributeDesc, m_type_),
  };
  E_MofaYuansuAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaYuansuAttributeDesc_descriptor_,
      E_MofaYuansuAttributeDesc::default_instance_,
      E_MofaYuansuAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaYuansuAttributeDesc));
  E_MofaYuansuAwakenDesc_descriptor_ = file->message_type(4);
  static const int E_MofaYuansuAwakenDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAwakenDesc, m_lvaddratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAwakenDesc, m_num_),
  };
  E_MofaYuansuAwakenDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaYuansuAwakenDesc_descriptor_,
      E_MofaYuansuAwakenDesc::default_instance_,
      E_MofaYuansuAwakenDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAwakenDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansuAwakenDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaYuansuAwakenDesc));
  E_MofaYuansu_descriptor_ = file->message_type(5);
  static const int E_MofaYuansu_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_attritype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_mosaic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_lvitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_awaken_can_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_awaken_lvmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_awaken_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, m_awaken_),
  };
  E_MofaYuansu_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaYuansu_descriptor_,
      E_MofaYuansu::default_instance_,
      E_MofaYuansu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaYuansu, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaYuansu));
  Sheet_MofaYuansu_descriptor_ = file->message_type(6);
  static const int Sheet_MofaYuansu_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaYuansu, e_mofayuansu_list_),
  };
  Sheet_MofaYuansu_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaYuansu_descriptor_,
      Sheet_MofaYuansu::default_instance_,
      Sheet_MofaYuansu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaYuansu, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaYuansu, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaYuansu));
  E_MofaDecompose_descriptor_ = file->message_type(7);
  static const int E_MofaDecompose_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaDecompose, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaDecompose, m_dpqua_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaDecompose, m_dpitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaDecompose, m_dpess_),
  };
  E_MofaDecompose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaDecompose_descriptor_,
      E_MofaDecompose::default_instance_,
      E_MofaDecompose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaDecompose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaDecompose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaDecompose));
  Sheet_MofaDecompose_descriptor_ = file->message_type(8);
  static const int Sheet_MofaDecompose_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaDecompose, e_mofadecompose_list_),
  };
  Sheet_MofaDecompose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaDecompose_descriptor_,
      Sheet_MofaDecompose::default_instance_,
      Sheet_MofaDecompose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaDecompose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaDecompose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaDecompose));
  E_MofaLvexp_descriptor_ = file->message_type(9);
  static const int E_MofaLvexp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvexp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvexp, m_exp_),
  };
  E_MofaLvexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaLvexp_descriptor_,
      E_MofaLvexp::default_instance_,
      E_MofaLvexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaLvexp));
  Sheet_MofaLvexp_descriptor_ = file->message_type(10);
  static const int Sheet_MofaLvexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaLvexp, e_mofalvexp_list_),
  };
  Sheet_MofaLvexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaLvexp_descriptor_,
      Sheet_MofaLvexp::default_instance_,
      Sheet_MofaLvexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaLvexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaLvexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaLvexp));
  E_MofaLvatt_descriptor_ = file->message_type(11);
  static const int E_MofaLvatt_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvatt, m_attid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvatt, m_att_),
  };
  E_MofaLvatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaLvatt_descriptor_,
      E_MofaLvatt::default_instance_,
      E_MofaLvatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaLvatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaLvatt));
  Sheet_MofaLvatt_descriptor_ = file->message_type(12);
  static const int Sheet_MofaLvatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaLvatt, e_mofalvatt_list_),
  };
  Sheet_MofaLvatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaLvatt_descriptor_,
      Sheet_MofaLvatt::default_instance_,
      Sheet_MofaLvatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaLvatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaLvatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaLvatt));
  E_MofaZyattZyDesc_descriptor_ = file->message_type(13);
  static const int E_MofaZyattZyDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyattZyDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyattZyDesc, m_type_),
  };
  E_MofaZyattZyDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaZyattZyDesc_descriptor_,
      E_MofaZyattZyDesc::default_instance_,
      E_MofaZyattZyDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyattZyDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyattZyDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaZyattZyDesc));
  E_MofaZyatt_descriptor_ = file->message_type(14);
  static const int E_MofaZyatt_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyatt, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyatt, m_attid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyatt, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyatt, m_zy_),
  };
  E_MofaZyatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaZyatt_descriptor_,
      E_MofaZyatt::default_instance_,
      E_MofaZyatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaZyatt));
  Sheet_MofaZyatt_descriptor_ = file->message_type(15);
  static const int Sheet_MofaZyatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyatt, e_mofazyatt_list_),
  };
  Sheet_MofaZyatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaZyatt_descriptor_,
      Sheet_MofaZyatt::default_instance_,
      Sheet_MofaZyatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaZyatt));
  E_MofaZyjxattZyjxDesc_descriptor_ = file->message_type(16);
  static const int E_MofaZyjxattZyjxDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxattZyjxDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxattZyjxDesc, m_type_),
  };
  E_MofaZyjxattZyjxDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaZyjxattZyjxDesc_descriptor_,
      E_MofaZyjxattZyjxDesc::default_instance_,
      E_MofaZyjxattZyjxDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxattZyjxDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxattZyjxDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaZyjxattZyjxDesc));
  E_MofaZyjxatt_descriptor_ = file->message_type(17);
  static const int E_MofaZyjxatt_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxatt, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxatt, m_attid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxatt, m_jxlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxatt, m_zyjx_),
  };
  E_MofaZyjxatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaZyjxatt_descriptor_,
      E_MofaZyjxatt::default_instance_,
      E_MofaZyjxatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaZyjxatt));
  Sheet_MofaZyjxatt_descriptor_ = file->message_type(18);
  static const int Sheet_MofaZyjxatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyjxatt, e_mofazyjxatt_list_),
  };
  Sheet_MofaZyjxatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaZyjxatt_descriptor_,
      Sheet_MofaZyjxatt::default_instance_,
      Sheet_MofaZyjxatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyjxatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyjxatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaZyjxatt));
  E_MofaZyjxzfattZyjxzfDesc_descriptor_ = file->message_type(19);
  static const int E_MofaZyjxzfattZyjxzfDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfattZyjxzfDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfattZyjxzfDesc, m_type_),
  };
  E_MofaZyjxzfattZyjxzfDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaZyjxzfattZyjxzfDesc_descriptor_,
      E_MofaZyjxzfattZyjxzfDesc::default_instance_,
      E_MofaZyjxzfattZyjxzfDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfattZyjxzfDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfattZyjxzfDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaZyjxzfattZyjxzfDesc));
  E_MofaZyjxzfatt_descriptor_ = file->message_type(20);
  static const int E_MofaZyjxzfatt_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfatt, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfatt, m_attid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfatt, m_jxlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfatt, m_zyjxzf_),
  };
  E_MofaZyjxzfatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaZyjxzfatt_descriptor_,
      E_MofaZyjxzfatt::default_instance_,
      E_MofaZyjxzfatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaZyjxzfatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaZyjxzfatt));
  Sheet_MofaZyjxzfatt_descriptor_ = file->message_type(21);
  static const int Sheet_MofaZyjxzfatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyjxzfatt, e_mofazyjxzfatt_list_),
  };
  Sheet_MofaZyjxzfatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaZyjxzfatt_descriptor_,
      Sheet_MofaZyjxzfatt::default_instance_,
      Sheet_MofaZyjxzfatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyjxzfatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaZyjxzfatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaZyjxzfatt));
  E_MofaExchange_descriptor_ = file->message_type(22);
  static const int E_MofaExchange_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaExchange, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaExchange, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaExchange, m_ecitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaExchange, m_ecnum_),
  };
  E_MofaExchange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaExchange_descriptor_,
      E_MofaExchange::default_instance_,
      E_MofaExchange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaExchange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaExchange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaExchange));
  Sheet_MofaExchange_descriptor_ = file->message_type(23);
  static const int Sheet_MofaExchange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaExchange, e_mofaexchange_list_),
  };
  Sheet_MofaExchange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaExchange_descriptor_,
      Sheet_MofaExchange::default_instance_,
      Sheet_MofaExchange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaExchange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaExchange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaExchange));
  E_MofaName_descriptor_ = file->message_type(24);
  static const int E_MofaName_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaName, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaName, m_functionid_),
  };
  E_MofaName_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MofaName_descriptor_,
      E_MofaName::default_instance_,
      E_MofaName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaName, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MofaName, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MofaName));
  Sheet_MofaName_descriptor_ = file->message_type(25);
  static const int Sheet_MofaName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaName, e_mofaname_list_),
  };
  Sheet_MofaName_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MofaName_descriptor_,
      Sheet_MofaName::default_instance_,
      Sheet_MofaName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaName, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MofaName, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MofaName));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fMofa_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaSetupZfDesc_descriptor_, &E_MofaSetupZfDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaSetup_descriptor_, &E_MofaSetup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaSetup_descriptor_, &Sheet_MofaSetup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaYuansuAttributeDesc_descriptor_, &E_MofaYuansuAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaYuansuAwakenDesc_descriptor_, &E_MofaYuansuAwakenDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaYuansu_descriptor_, &E_MofaYuansu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaYuansu_descriptor_, &Sheet_MofaYuansu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaDecompose_descriptor_, &E_MofaDecompose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaDecompose_descriptor_, &Sheet_MofaDecompose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaLvexp_descriptor_, &E_MofaLvexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaLvexp_descriptor_, &Sheet_MofaLvexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaLvatt_descriptor_, &E_MofaLvatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaLvatt_descriptor_, &Sheet_MofaLvatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaZyattZyDesc_descriptor_, &E_MofaZyattZyDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaZyatt_descriptor_, &E_MofaZyatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaZyatt_descriptor_, &Sheet_MofaZyatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaZyjxattZyjxDesc_descriptor_, &E_MofaZyjxattZyjxDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaZyjxatt_descriptor_, &E_MofaZyjxatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaZyjxatt_descriptor_, &Sheet_MofaZyjxatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaZyjxzfattZyjxzfDesc_descriptor_, &E_MofaZyjxzfattZyjxzfDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaZyjxzfatt_descriptor_, &E_MofaZyjxzfatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaZyjxzfatt_descriptor_, &Sheet_MofaZyjxzfatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaExchange_descriptor_, &E_MofaExchange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaExchange_descriptor_, &Sheet_MofaExchange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MofaName_descriptor_, &E_MofaName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MofaName_descriptor_, &Sheet_MofaName::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fMofa_2eproto() {
  delete E_MofaSetupZfDesc::default_instance_;
  delete E_MofaSetupZfDesc_reflection_;
  delete E_MofaSetup::default_instance_;
  delete E_MofaSetup_reflection_;
  delete Sheet_MofaSetup::default_instance_;
  delete Sheet_MofaSetup_reflection_;
  delete E_MofaYuansuAttributeDesc::default_instance_;
  delete E_MofaYuansuAttributeDesc_reflection_;
  delete E_MofaYuansuAwakenDesc::default_instance_;
  delete E_MofaYuansuAwakenDesc_reflection_;
  delete E_MofaYuansu::default_instance_;
  delete E_MofaYuansu_reflection_;
  delete Sheet_MofaYuansu::default_instance_;
  delete Sheet_MofaYuansu_reflection_;
  delete E_MofaDecompose::default_instance_;
  delete E_MofaDecompose_reflection_;
  delete Sheet_MofaDecompose::default_instance_;
  delete Sheet_MofaDecompose_reflection_;
  delete E_MofaLvexp::default_instance_;
  delete E_MofaLvexp_reflection_;
  delete Sheet_MofaLvexp::default_instance_;
  delete Sheet_MofaLvexp_reflection_;
  delete E_MofaLvatt::default_instance_;
  delete E_MofaLvatt_reflection_;
  delete Sheet_MofaLvatt::default_instance_;
  delete Sheet_MofaLvatt_reflection_;
  delete E_MofaZyattZyDesc::default_instance_;
  delete E_MofaZyattZyDesc_reflection_;
  delete E_MofaZyatt::default_instance_;
  delete E_MofaZyatt_reflection_;
  delete Sheet_MofaZyatt::default_instance_;
  delete Sheet_MofaZyatt_reflection_;
  delete E_MofaZyjxattZyjxDesc::default_instance_;
  delete E_MofaZyjxattZyjxDesc_reflection_;
  delete E_MofaZyjxatt::default_instance_;
  delete E_MofaZyjxatt_reflection_;
  delete Sheet_MofaZyjxatt::default_instance_;
  delete Sheet_MofaZyjxatt_reflection_;
  delete E_MofaZyjxzfattZyjxzfDesc::default_instance_;
  delete E_MofaZyjxzfattZyjxzfDesc_reflection_;
  delete E_MofaZyjxzfatt::default_instance_;
  delete E_MofaZyjxzfatt_reflection_;
  delete Sheet_MofaZyjxzfatt::default_instance_;
  delete Sheet_MofaZyjxzfatt_reflection_;
  delete E_MofaExchange::default_instance_;
  delete E_MofaExchange_reflection_;
  delete Sheet_MofaExchange::default_instance_;
  delete Sheet_MofaExchange_reflection_;
  delete E_MofaName::default_instance_;
  delete E_MofaName_reflection_;
  delete Sheet_MofaName::default_instance_;
  delete Sheet_MofaName_reflection_;
}

void protobuf_AddDesc_E_5fMofa_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014E_Mofa.proto\022\010proto_ff\032\025yd_fieldoption"
    "s.proto\"I\n\021E_MofaSetupZfDesc\022\030\n\007m_value\030"
    "\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345"
    "\236\213\"\274\003\n\013E_MofaSetup\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\346\216"
    "\222\345\272\217\022\"\n\014m_positionid\030\002 \001(\005B\014\302\377\024\010\351\203\250\344\275\215id"
    "\022\"\n\010m_unlock\030\003 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\351\201\223\345\205\267\022$\n\007"
    "m_zyatt\030\004 \001(\005B\023\302\377\024\017\351\230\265\347\234\274\345\261\236\346\200\247\347\273\204\022!\n\007m_"
    "bless\030\005 \001(\005B\020\302\377\024\014\347\245\235\347\246\217\351\201\223\345\205\267\022,\n\014m_bless"
    "bonus\030\006 \001(\005B\026\302\377\024\022\347\245\235\347\246\217\345\261\236\346\200\247\345\212\240\346\210\220\022,\n\tm"
    "_jxzyatt\030\007 \001(\005B\031\302\377\024\025\350\247\211\351\206\222\351\230\265\347\234\274\345\261\236\346\200\247\347\273"
    "\204\0224\n\016m_jxblessbonus\030\010 \001(\005B\034\302\377\024\030\350\247\211\351\206\222\347\245\235"
    "\347\246\217\345\261\236\346\200\247\345\212\240\346\210\220\022/\n\014m_jxblessatt\030\t \001(\005B\031\302"
    "\377\024\025\350\247\211\351\206\222\347\245\235\347\246\217\345\261\236\346\200\247\347\273\204\022\?\n\004m_zf\030\n \003(\0132\033"
    ".proto_ff.E_MofaSetupZfDescB\024\302\377\024\014\347\245\235\347\246\217\345"
    "\261\236\346\200\247\210\301\024\003\"H\n\017Sheet_MofaSetup\0225\n\020E_MofaSe"
    "tup_List\030\001 \003(\0132\025.proto_ff.E_MofaSetupB\004\210"
    "\301\024\020\"Q\n\031E_MofaYuansuAttributeDesc\022\030\n\007m_va"
    "lue\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_type\030\002 \001(\005B\n\302\377\024\006"
    "\347\261\273\345\236\213\"p\n\026E_MofaYuansuAwakenDesc\0225\n\014m_lv"
    "addratio\030\001 \001(\005B\037\302\377\024\033\345\215\207\347\272\247\345\261\236\346\200\247\345\212\240\346\210\220\347\231"
    "\276\345\210\206\346\257\224\022\037\n\005m_num\030\002 \001(\005B\020\302\377\024\014\346\235\220\346\226\231\346\225\260\351\207\217"
    "\"\262\003\n\014E_MofaYuansu\022\036\n\010m_itemid\030\001 \001(\005B\014\302\377\024"
    "\010\351\201\223\345\205\267ID\022+\n\013m_attritype\030\002 \001(\005B\026\302\377\024\022\347\211\251\345"
    "\223\201\347\261\273\345\236\213\346\216\222\345\272\217\022%\n\010m_mosaic\030\003 \001(\005B\023\302\377\024\017\345\217"
    "\257\351\225\266\345\265\214\351\203\250\344\275\215\022\"\n\010m_lvitem\030\004 \001(\005B\020\302\377\024\014\345\215\207"
    "\347\272\247\351\201\223\345\205\267\022)\n\014m_awaken_can\030\005 \001(\005B\023\302\377\024\017\346\230\257"
    "\345\220\246\345\217\257\350\247\211\351\206\222\022(\n\016m_awaken_lvmax\030\006 \001(\005B\020\302\377"
    "\024\014\350\247\211\351\206\222\344\270\212\351\231\220\022\'\n\rm_awaken_item\030\007 \001(\005B\020\302"
    "\377\024\014\350\247\211\351\206\222\346\235\220\346\226\231\022H\n\013m_attribute\030\010 \003(\0132#.p"
    "roto_ff.E_MofaYuansuAttributeDescB\016\302\377\024\006\345"
    "\261\236\346\200\247\210\301\024\002\022B\n\010m_awaken\030\t \003(\0132 .proto_ff.E"
    "_MofaYuansuAwakenDescB\016\302\377\024\006\350\247\211\351\206\222\210\301\024\006\"K\n"
    "\020Sheet_MofaYuansu\0227\n\021E_MofaYuansu_List\030\001"
    " \003(\0132\026.proto_ff.E_MofaYuansuB\004\210\301\024@\"\227\001\n\017E"
    "_MofaDecompose\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022!\n\007"
    "m_dpqua\030\002 \001(\005B\020\302\377\024\014\345\210\206\350\247\243\345\223\201\350\264\250\022(\n\010m_dpi"
    "tem\030\003 \001(\005B\026\302\377\024\022\345\210\206\350\247\243\350\277\224\350\277\230\351\201\223\345\205\267\022!\n\007m_d"
    "pess\030\004 \001(\005B\020\302\377\024\014\345\210\206\350\247\243\347\262\276\345\215\216\"T\n\023Sheet_Mo"
    "faDecompose\022=\n\024E_MofaDecompose_List\030\001 \003("
    "\0132\031.proto_ff.E_MofaDecomposeB\004\210\301\024\010\"N\n\013E_"
    "MofaLvexp\022\030\n\004m_lv\030\001 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022%\n\005m"
    "_exp\030\002 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\346\211\200\351\234\200\347\273\217\351\252\214\"I\n\017Sh"
    "eet_MofaLvexp\0226\n\020E_MofaLvexp_List\030\001 \003(\0132"
    "\025.proto_ff.E_MofaLvexpB\005\210\301\024\200\001\"T\n\013E_MofaL"
    "vatt\022 \n\007m_attid\030\001 \001(\003B\017\302\377\024\013\345\261\236\346\200\247\347\273\204id\022#"
    "\n\005m_att\030\002 \003(\005B\024\302\377\024\014\345\261\236\346\200\247\347\255\211\347\272\247\210\301\024d\"I\n\017S"
    "heet_MofaLvatt\0226\n\020E_MofaLvatt_List\030\001 \003(\013"
    "2\025.proto_ff.E_MofaLvattB\005\210\301\024\200\001\"I\n\021E_Mofa"
    "ZyattZyDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n"
    "\006m_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\240\001\n\013E_MofaZyat"
    "t\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\346\216\222\345\272\217\022\035\n\007m_attid\030\002"
    " \001(\003B\014\302\377\024\010\345\261\236\346\200\247ID\022\035\n\tm_quality\030\003 \001(\005B\n\302"
    "\377\024\006\345\223\201\350\264\250\0229\n\004m_zy\030\004 \003(\0132\033.proto_ff.E_Mof"
    "aZyattZyDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\002\"H\n\017Sheet_Mo"
    "faZyatt\0225\n\020E_MofaZyatt_List\030\001 \003(\0132\025.prot"
    "o_ff.E_MofaZyattB\004\210\301\024 \"M\n\025E_MofaZyjxattZ"
    "yjxDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_t"
    "ype\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\253\001\n\rE_MofaZyjxatt\022"
    "\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\346\216\222\345\272\217\022\035\n\007m_attid\030\002 \001"
    "(\003B\014\302\377\024\010\345\261\236\346\200\247ID\022 \n\006m_jxlv\030\003 \001(\005B\020\302\377\024\014\350\247"
    "\211\351\206\222\351\234\200\346\261\202\022\?\n\006m_zyjx\030\004 \003(\0132\037.proto_ff.E_"
    "MofaZyjxattZyjxDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\003\"N\n\021S"
    "heet_MofaZyjxatt\0229\n\022E_MofaZyjxatt_List\030\001"
    " \003(\0132\027.proto_ff.E_MofaZyjxattB\004\210\301\024@\"Q\n\031E"
    "_MofaZyjxzfattZyjxzfDesc\022\030\n\007m_value\030\001 \001("
    "\005B\007\302\377\024\003\345\200\274\022\032\n\006m_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\263"
    "\001\n\017E_MofaZyjxzfatt\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\346\216"
    "\222\345\272\217\022\035\n\007m_attid\030\002 \001(\003B\014\302\377\024\010\345\261\236\346\200\247ID\022 \n\006m"
    "_jxlv\030\003 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\351\234\200\346\261\202\022E\n\010m_zyjxz"
    "f\030\004 \003(\0132#.proto_ff.E_MofaZyjxzfattZyjxzf"
    "DescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\003\"T\n\023Sheet_MofaZyjxzf"
    "att\022=\n\024E_MofaZyjxzfatt_List\030\001 \003(\0132\031.prot"
    "o_ff.E_MofaZyjxzfattB\004\210\301\024@\"\234\001\n\016E_MofaExc"
    "hange\022\036\n\010m_itemid\030\001 \001(\005B\014\302\377\024\010\351\201\223\345\205\267ID\022\035\n"
    "\tm_quality\030\002 \001(\005B\n\302\377\024\006\345\223\201\350\264\250\022\"\n\010m_ecitem"
    "\030\003 \001(\005B\020\302\377\024\014\345\205\221\346\215\242\351\201\223\345\205\267\022\'\n\007m_ecnum\030\004 \001("
    "\005B\026\302\377\024\022\345\205\221\346\215\242\351\201\223\345\205\267\346\225\260\351\207\217\"Q\n\022Sheet_MofaE"
    "xchange\022;\n\023E_MofaExchange_List\030\001 \003(\0132\030.p"
    "roto_ff.E_MofaExchangeB\004\210\301\024 \"F\n\nE_MofaNa"
    "me\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\014m_functionid"
    "\030\002 \001(\005B\014\302\377\024\010\345\212\237\350\203\275id\"E\n\016Sheet_MofaName\0223"
    "\n\017E_MofaName_List\030\001 \003(\0132\024.proto_ff.E_Mof"
    "aNameB\004\210\301\024\010", 3291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Mofa.proto", &protobuf_RegisterTypes);
  E_MofaSetupZfDesc::default_instance_ = new E_MofaSetupZfDesc();
  E_MofaSetup::default_instance_ = new E_MofaSetup();
  Sheet_MofaSetup::default_instance_ = new Sheet_MofaSetup();
  E_MofaYuansuAttributeDesc::default_instance_ = new E_MofaYuansuAttributeDesc();
  E_MofaYuansuAwakenDesc::default_instance_ = new E_MofaYuansuAwakenDesc();
  E_MofaYuansu::default_instance_ = new E_MofaYuansu();
  Sheet_MofaYuansu::default_instance_ = new Sheet_MofaYuansu();
  E_MofaDecompose::default_instance_ = new E_MofaDecompose();
  Sheet_MofaDecompose::default_instance_ = new Sheet_MofaDecompose();
  E_MofaLvexp::default_instance_ = new E_MofaLvexp();
  Sheet_MofaLvexp::default_instance_ = new Sheet_MofaLvexp();
  E_MofaLvatt::default_instance_ = new E_MofaLvatt();
  Sheet_MofaLvatt::default_instance_ = new Sheet_MofaLvatt();
  E_MofaZyattZyDesc::default_instance_ = new E_MofaZyattZyDesc();
  E_MofaZyatt::default_instance_ = new E_MofaZyatt();
  Sheet_MofaZyatt::default_instance_ = new Sheet_MofaZyatt();
  E_MofaZyjxattZyjxDesc::default_instance_ = new E_MofaZyjxattZyjxDesc();
  E_MofaZyjxatt::default_instance_ = new E_MofaZyjxatt();
  Sheet_MofaZyjxatt::default_instance_ = new Sheet_MofaZyjxatt();
  E_MofaZyjxzfattZyjxzfDesc::default_instance_ = new E_MofaZyjxzfattZyjxzfDesc();
  E_MofaZyjxzfatt::default_instance_ = new E_MofaZyjxzfatt();
  Sheet_MofaZyjxzfatt::default_instance_ = new Sheet_MofaZyjxzfatt();
  E_MofaExchange::default_instance_ = new E_MofaExchange();
  Sheet_MofaExchange::default_instance_ = new Sheet_MofaExchange();
  E_MofaName::default_instance_ = new E_MofaName();
  Sheet_MofaName::default_instance_ = new Sheet_MofaName();
  E_MofaSetupZfDesc::default_instance_->InitAsDefaultInstance();
  E_MofaSetup::default_instance_->InitAsDefaultInstance();
  Sheet_MofaSetup::default_instance_->InitAsDefaultInstance();
  E_MofaYuansuAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MofaYuansuAwakenDesc::default_instance_->InitAsDefaultInstance();
  E_MofaYuansu::default_instance_->InitAsDefaultInstance();
  Sheet_MofaYuansu::default_instance_->InitAsDefaultInstance();
  E_MofaDecompose::default_instance_->InitAsDefaultInstance();
  Sheet_MofaDecompose::default_instance_->InitAsDefaultInstance();
  E_MofaLvexp::default_instance_->InitAsDefaultInstance();
  Sheet_MofaLvexp::default_instance_->InitAsDefaultInstance();
  E_MofaLvatt::default_instance_->InitAsDefaultInstance();
  Sheet_MofaLvatt::default_instance_->InitAsDefaultInstance();
  E_MofaZyattZyDesc::default_instance_->InitAsDefaultInstance();
  E_MofaZyatt::default_instance_->InitAsDefaultInstance();
  Sheet_MofaZyatt::default_instance_->InitAsDefaultInstance();
  E_MofaZyjxattZyjxDesc::default_instance_->InitAsDefaultInstance();
  E_MofaZyjxatt::default_instance_->InitAsDefaultInstance();
  Sheet_MofaZyjxatt::default_instance_->InitAsDefaultInstance();
  E_MofaZyjxzfattZyjxzfDesc::default_instance_->InitAsDefaultInstance();
  E_MofaZyjxzfatt::default_instance_->InitAsDefaultInstance();
  Sheet_MofaZyjxzfatt::default_instance_->InitAsDefaultInstance();
  E_MofaExchange::default_instance_->InitAsDefaultInstance();
  Sheet_MofaExchange::default_instance_->InitAsDefaultInstance();
  E_MofaName::default_instance_->InitAsDefaultInstance();
  Sheet_MofaName::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fMofa_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fMofa_2eproto {
  StaticDescriptorInitializer_E_5fMofa_2eproto() {
    protobuf_AddDesc_E_5fMofa_2eproto();
  }
} static_descriptor_initializer_E_5fMofa_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_MofaSetupZfDesc::kMValueFieldNumber;
const int E_MofaSetupZfDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MofaSetupZfDesc::E_MofaSetupZfDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaSetupZfDesc::InitAsDefaultInstance() {
}

E_MofaSetupZfDesc::E_MofaSetupZfDesc(const E_MofaSetupZfDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaSetupZfDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaSetupZfDesc::~E_MofaSetupZfDesc() {
  SharedDtor();
}

void E_MofaSetupZfDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaSetupZfDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaSetupZfDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaSetupZfDesc_descriptor_;
}

const E_MofaSetupZfDesc& E_MofaSetupZfDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaSetupZfDesc* E_MofaSetupZfDesc::default_instance_ = NULL;

E_MofaSetupZfDesc* E_MofaSetupZfDesc::New() const {
  return new E_MofaSetupZfDesc;
}

void E_MofaSetupZfDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaSetupZfDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaSetupZfDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaSetupZfDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaSetupZfDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaSetupZfDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaSetupZfDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaSetupZfDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaSetupZfDesc::MergeFrom(const E_MofaSetupZfDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaSetupZfDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaSetupZfDesc::CopyFrom(const E_MofaSetupZfDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaSetupZfDesc::IsInitialized() const {

  return true;
}

void E_MofaSetupZfDesc::Swap(E_MofaSetupZfDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaSetupZfDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaSetupZfDesc_descriptor_;
  metadata.reflection = E_MofaSetupZfDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaSetup::kMIdFieldNumber;
const int E_MofaSetup::kMPositionidFieldNumber;
const int E_MofaSetup::kMUnlockFieldNumber;
const int E_MofaSetup::kMZyattFieldNumber;
const int E_MofaSetup::kMBlessFieldNumber;
const int E_MofaSetup::kMBlessbonusFieldNumber;
const int E_MofaSetup::kMJxzyattFieldNumber;
const int E_MofaSetup::kMJxblessbonusFieldNumber;
const int E_MofaSetup::kMJxblessattFieldNumber;
const int E_MofaSetup::kMZfFieldNumber;
#endif  // !_MSC_VER

E_MofaSetup::E_MofaSetup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaSetup::InitAsDefaultInstance() {
}

E_MofaSetup::E_MofaSetup(const E_MofaSetup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaSetup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_positionid_ = 0;
  m_unlock_ = 0;
  m_zyatt_ = 0;
  m_bless_ = 0;
  m_blessbonus_ = 0;
  m_jxzyatt_ = 0;
  m_jxblessbonus_ = 0;
  m_jxblessatt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaSetup::~E_MofaSetup() {
  SharedDtor();
}

void E_MofaSetup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaSetup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaSetup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaSetup_descriptor_;
}

const E_MofaSetup& E_MofaSetup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaSetup* E_MofaSetup::default_instance_ = NULL;

E_MofaSetup* E_MofaSetup::New() const {
  return new E_MofaSetup;
}

void E_MofaSetup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_positionid_ = 0;
    m_unlock_ = 0;
    m_zyatt_ = 0;
    m_bless_ = 0;
    m_blessbonus_ = 0;
    m_jxzyatt_ = 0;
    m_jxblessbonus_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_jxblessatt_ = 0;
  }
  m_zf_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaSetup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_positionid;
        break;
      }

      // optional int32 m_positionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_positionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_positionid_)));
          set_has_m_positionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_unlock;
        break;
      }

      // optional int32 m_unlock = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlock_)));
          set_has_m_unlock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_zyatt;
        break;
      }

      // optional int32 m_zyatt = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_zyatt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_zyatt_)));
          set_has_m_zyatt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_bless;
        break;
      }

      // optional int32 m_bless = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bless:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bless_)));
          set_has_m_bless();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_blessbonus;
        break;
      }

      // optional int32 m_blessbonus = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_blessbonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_blessbonus_)));
          set_has_m_blessbonus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_jxzyatt;
        break;
      }

      // optional int32 m_jxzyatt = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_jxzyatt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_jxzyatt_)));
          set_has_m_jxzyatt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_jxblessbonus;
        break;
      }

      // optional int32 m_jxblessbonus = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_jxblessbonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_jxblessbonus_)));
          set_has_m_jxblessbonus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_jxblessatt;
        break;
      }

      // optional int32 m_jxblessatt = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_jxblessatt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_jxblessatt_)));
          set_has_m_jxblessatt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_zf;
        break;
      }

      // repeated .proto_ff.E_MofaSetupZfDesc m_zf = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_zf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_zf()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_zf;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaSetup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_positionid = 2;
  if (has_m_positionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_positionid(), output);
  }

  // optional int32 m_unlock = 3;
  if (has_m_unlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_unlock(), output);
  }

  // optional int32 m_zyatt = 4;
  if (has_m_zyatt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_zyatt(), output);
  }

  // optional int32 m_bless = 5;
  if (has_m_bless()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_bless(), output);
  }

  // optional int32 m_blessbonus = 6;
  if (has_m_blessbonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_blessbonus(), output);
  }

  // optional int32 m_jxzyatt = 7;
  if (has_m_jxzyatt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_jxzyatt(), output);
  }

  // optional int32 m_jxblessbonus = 8;
  if (has_m_jxblessbonus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_jxblessbonus(), output);
  }

  // optional int32 m_jxblessatt = 9;
  if (has_m_jxblessatt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_jxblessatt(), output);
  }

  // repeated .proto_ff.E_MofaSetupZfDesc m_zf = 10;
  for (int i = 0; i < this->m_zf_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->m_zf(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaSetup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_positionid = 2;
  if (has_m_positionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_positionid(), target);
  }

  // optional int32 m_unlock = 3;
  if (has_m_unlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_unlock(), target);
  }

  // optional int32 m_zyatt = 4;
  if (has_m_zyatt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_zyatt(), target);
  }

  // optional int32 m_bless = 5;
  if (has_m_bless()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_bless(), target);
  }

  // optional int32 m_blessbonus = 6;
  if (has_m_blessbonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_blessbonus(), target);
  }

  // optional int32 m_jxzyatt = 7;
  if (has_m_jxzyatt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_jxzyatt(), target);
  }

  // optional int32 m_jxblessbonus = 8;
  if (has_m_jxblessbonus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_jxblessbonus(), target);
  }

  // optional int32 m_jxblessatt = 9;
  if (has_m_jxblessatt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_jxblessatt(), target);
  }

  // repeated .proto_ff.E_MofaSetupZfDesc m_zf = 10;
  for (int i = 0; i < this->m_zf_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->m_zf(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaSetup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_positionid = 2;
    if (has_m_positionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_positionid());
    }

    // optional int32 m_unlock = 3;
    if (has_m_unlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlock());
    }

    // optional int32 m_zyatt = 4;
    if (has_m_zyatt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_zyatt());
    }

    // optional int32 m_bless = 5;
    if (has_m_bless()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bless());
    }

    // optional int32 m_blessbonus = 6;
    if (has_m_blessbonus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_blessbonus());
    }

    // optional int32 m_jxzyatt = 7;
    if (has_m_jxzyatt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_jxzyatt());
    }

    // optional int32 m_jxblessbonus = 8;
    if (has_m_jxblessbonus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_jxblessbonus());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_jxblessatt = 9;
    if (has_m_jxblessatt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_jxblessatt());
    }

  }
  // repeated .proto_ff.E_MofaSetupZfDesc m_zf = 10;
  total_size += 1 * this->m_zf_size();
  for (int i = 0; i < this->m_zf_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_zf(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaSetup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaSetup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaSetup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaSetup::MergeFrom(const E_MofaSetup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_zf_.MergeFrom(from.m_zf_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_positionid()) {
      set_m_positionid(from.m_positionid());
    }
    if (from.has_m_unlock()) {
      set_m_unlock(from.m_unlock());
    }
    if (from.has_m_zyatt()) {
      set_m_zyatt(from.m_zyatt());
    }
    if (from.has_m_bless()) {
      set_m_bless(from.m_bless());
    }
    if (from.has_m_blessbonus()) {
      set_m_blessbonus(from.m_blessbonus());
    }
    if (from.has_m_jxzyatt()) {
      set_m_jxzyatt(from.m_jxzyatt());
    }
    if (from.has_m_jxblessbonus()) {
      set_m_jxblessbonus(from.m_jxblessbonus());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_jxblessatt()) {
      set_m_jxblessatt(from.m_jxblessatt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaSetup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaSetup::CopyFrom(const E_MofaSetup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaSetup::IsInitialized() const {

  return true;
}

void E_MofaSetup::Swap(E_MofaSetup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_positionid_, other->m_positionid_);
    std::swap(m_unlock_, other->m_unlock_);
    std::swap(m_zyatt_, other->m_zyatt_);
    std::swap(m_bless_, other->m_bless_);
    std::swap(m_blessbonus_, other->m_blessbonus_);
    std::swap(m_jxzyatt_, other->m_jxzyatt_);
    std::swap(m_jxblessbonus_, other->m_jxblessbonus_);
    std::swap(m_jxblessatt_, other->m_jxblessatt_);
    m_zf_.Swap(&other->m_zf_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaSetup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaSetup_descriptor_;
  metadata.reflection = E_MofaSetup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaSetup::kEMofaSetupListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaSetup::Sheet_MofaSetup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaSetup::InitAsDefaultInstance() {
}

Sheet_MofaSetup::Sheet_MofaSetup(const Sheet_MofaSetup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaSetup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaSetup::~Sheet_MofaSetup() {
  SharedDtor();
}

void Sheet_MofaSetup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaSetup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaSetup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaSetup_descriptor_;
}

const Sheet_MofaSetup& Sheet_MofaSetup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaSetup* Sheet_MofaSetup::default_instance_ = NULL;

Sheet_MofaSetup* Sheet_MofaSetup::New() const {
  return new Sheet_MofaSetup;
}

void Sheet_MofaSetup::Clear() {
  e_mofasetup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaSetup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaSetup E_MofaSetup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaSetup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofasetup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaSetup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaSetup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaSetup E_MofaSetup_List = 1;
  for (int i = 0; i < this->e_mofasetup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofasetup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaSetup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaSetup E_MofaSetup_List = 1;
  for (int i = 0; i < this->e_mofasetup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofasetup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaSetup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaSetup E_MofaSetup_List = 1;
  total_size += 1 * this->e_mofasetup_list_size();
  for (int i = 0; i < this->e_mofasetup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofasetup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaSetup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaSetup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaSetup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaSetup::MergeFrom(const Sheet_MofaSetup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofasetup_list_.MergeFrom(from.e_mofasetup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaSetup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaSetup::CopyFrom(const Sheet_MofaSetup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaSetup::IsInitialized() const {

  return true;
}

void Sheet_MofaSetup::Swap(Sheet_MofaSetup* other) {
  if (other != this) {
    e_mofasetup_list_.Swap(&other->e_mofasetup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaSetup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaSetup_descriptor_;
  metadata.reflection = Sheet_MofaSetup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaYuansuAttributeDesc::kMValueFieldNumber;
const int E_MofaYuansuAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MofaYuansuAttributeDesc::E_MofaYuansuAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaYuansuAttributeDesc::InitAsDefaultInstance() {
}

E_MofaYuansuAttributeDesc::E_MofaYuansuAttributeDesc(const E_MofaYuansuAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaYuansuAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaYuansuAttributeDesc::~E_MofaYuansuAttributeDesc() {
  SharedDtor();
}

void E_MofaYuansuAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaYuansuAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaYuansuAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaYuansuAttributeDesc_descriptor_;
}

const E_MofaYuansuAttributeDesc& E_MofaYuansuAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaYuansuAttributeDesc* E_MofaYuansuAttributeDesc::default_instance_ = NULL;

E_MofaYuansuAttributeDesc* E_MofaYuansuAttributeDesc::New() const {
  return new E_MofaYuansuAttributeDesc;
}

void E_MofaYuansuAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaYuansuAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaYuansuAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaYuansuAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaYuansuAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaYuansuAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaYuansuAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaYuansuAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaYuansuAttributeDesc::MergeFrom(const E_MofaYuansuAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaYuansuAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaYuansuAttributeDesc::CopyFrom(const E_MofaYuansuAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaYuansuAttributeDesc::IsInitialized() const {

  return true;
}

void E_MofaYuansuAttributeDesc::Swap(E_MofaYuansuAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaYuansuAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaYuansuAttributeDesc_descriptor_;
  metadata.reflection = E_MofaYuansuAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaYuansuAwakenDesc::kMLvaddratioFieldNumber;
const int E_MofaYuansuAwakenDesc::kMNumFieldNumber;
#endif  // !_MSC_VER

E_MofaYuansuAwakenDesc::E_MofaYuansuAwakenDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaYuansuAwakenDesc::InitAsDefaultInstance() {
}

E_MofaYuansuAwakenDesc::E_MofaYuansuAwakenDesc(const E_MofaYuansuAwakenDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaYuansuAwakenDesc::SharedCtor() {
  _cached_size_ = 0;
  m_lvaddratio_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaYuansuAwakenDesc::~E_MofaYuansuAwakenDesc() {
  SharedDtor();
}

void E_MofaYuansuAwakenDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaYuansuAwakenDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaYuansuAwakenDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaYuansuAwakenDesc_descriptor_;
}

const E_MofaYuansuAwakenDesc& E_MofaYuansuAwakenDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaYuansuAwakenDesc* E_MofaYuansuAwakenDesc::default_instance_ = NULL;

E_MofaYuansuAwakenDesc* E_MofaYuansuAwakenDesc::New() const {
  return new E_MofaYuansuAwakenDesc;
}

void E_MofaYuansuAwakenDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lvaddratio_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaYuansuAwakenDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lvaddratio = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvaddratio_)));
          set_has_m_lvaddratio();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaYuansuAwakenDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lvaddratio = 1;
  if (has_m_lvaddratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lvaddratio(), output);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaYuansuAwakenDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lvaddratio = 1;
  if (has_m_lvaddratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lvaddratio(), target);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaYuansuAwakenDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lvaddratio = 1;
    if (has_m_lvaddratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvaddratio());
    }

    // optional int32 m_num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaYuansuAwakenDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaYuansuAwakenDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaYuansuAwakenDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaYuansuAwakenDesc::MergeFrom(const E_MofaYuansuAwakenDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lvaddratio()) {
      set_m_lvaddratio(from.m_lvaddratio());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaYuansuAwakenDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaYuansuAwakenDesc::CopyFrom(const E_MofaYuansuAwakenDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaYuansuAwakenDesc::IsInitialized() const {

  return true;
}

void E_MofaYuansuAwakenDesc::Swap(E_MofaYuansuAwakenDesc* other) {
  if (other != this) {
    std::swap(m_lvaddratio_, other->m_lvaddratio_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaYuansuAwakenDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaYuansuAwakenDesc_descriptor_;
  metadata.reflection = E_MofaYuansuAwakenDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaYuansu::kMItemidFieldNumber;
const int E_MofaYuansu::kMAttritypeFieldNumber;
const int E_MofaYuansu::kMMosaicFieldNumber;
const int E_MofaYuansu::kMLvitemFieldNumber;
const int E_MofaYuansu::kMAwakenCanFieldNumber;
const int E_MofaYuansu::kMAwakenLvmaxFieldNumber;
const int E_MofaYuansu::kMAwakenItemFieldNumber;
const int E_MofaYuansu::kMAttributeFieldNumber;
const int E_MofaYuansu::kMAwakenFieldNumber;
#endif  // !_MSC_VER

E_MofaYuansu::E_MofaYuansu()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaYuansu::InitAsDefaultInstance() {
}

E_MofaYuansu::E_MofaYuansu(const E_MofaYuansu& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaYuansu::SharedCtor() {
  _cached_size_ = 0;
  m_itemid_ = 0;
  m_attritype_ = 0;
  m_mosaic_ = 0;
  m_lvitem_ = 0;
  m_awaken_can_ = 0;
  m_awaken_lvmax_ = 0;
  m_awaken_item_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaYuansu::~E_MofaYuansu() {
  SharedDtor();
}

void E_MofaYuansu::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaYuansu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaYuansu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaYuansu_descriptor_;
}

const E_MofaYuansu& E_MofaYuansu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaYuansu* E_MofaYuansu::default_instance_ = NULL;

E_MofaYuansu* E_MofaYuansu::New() const {
  return new E_MofaYuansu;
}

void E_MofaYuansu::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_itemid_ = 0;
    m_attritype_ = 0;
    m_mosaic_ = 0;
    m_lvitem_ = 0;
    m_awaken_can_ = 0;
    m_awaken_lvmax_ = 0;
    m_awaken_item_ = 0;
  }
  m_attribute_.Clear();
  m_awaken_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaYuansu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_attritype;
        break;
      }

      // optional int32 m_attritype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attritype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attritype_)));
          set_has_m_attritype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_mosaic;
        break;
      }

      // optional int32 m_mosaic = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mosaic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mosaic_)));
          set_has_m_mosaic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_lvitem;
        break;
      }

      // optional int32 m_lvitem = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvitem_)));
          set_has_m_lvitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_awaken_can;
        break;
      }

      // optional int32 m_awaken_can = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awaken_can:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awaken_can_)));
          set_has_m_awaken_can();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_awaken_lvmax;
        break;
      }

      // optional int32 m_awaken_lvmax = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awaken_lvmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awaken_lvmax_)));
          set_has_m_awaken_lvmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_awaken_item;
        break;
      }

      // optional int32 m_awaken_item = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awaken_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awaken_item_)));
          set_has_m_awaken_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MofaYuansuAttributeDesc m_attribute = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_attribute;
        if (input->ExpectTag(74)) goto parse_m_awaken;
        break;
      }

      // repeated .proto_ff.E_MofaYuansuAwakenDesc m_awaken = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_awaken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_awaken()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_awaken;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaYuansu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_itemid = 1;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_itemid(), output);
  }

  // optional int32 m_attritype = 2;
  if (has_m_attritype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_attritype(), output);
  }

  // optional int32 m_mosaic = 3;
  if (has_m_mosaic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_mosaic(), output);
  }

  // optional int32 m_lvitem = 4;
  if (has_m_lvitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_lvitem(), output);
  }

  // optional int32 m_awaken_can = 5;
  if (has_m_awaken_can()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_awaken_can(), output);
  }

  // optional int32 m_awaken_lvmax = 6;
  if (has_m_awaken_lvmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_awaken_lvmax(), output);
  }

  // optional int32 m_awaken_item = 7;
  if (has_m_awaken_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_awaken_item(), output);
  }

  // repeated .proto_ff.E_MofaYuansuAttributeDesc m_attribute = 8;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_MofaYuansuAwakenDesc m_awaken = 9;
  for (int i = 0; i < this->m_awaken_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_awaken(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaYuansu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_itemid = 1;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_itemid(), target);
  }

  // optional int32 m_attritype = 2;
  if (has_m_attritype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_attritype(), target);
  }

  // optional int32 m_mosaic = 3;
  if (has_m_mosaic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_mosaic(), target);
  }

  // optional int32 m_lvitem = 4;
  if (has_m_lvitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_lvitem(), target);
  }

  // optional int32 m_awaken_can = 5;
  if (has_m_awaken_can()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_awaken_can(), target);
  }

  // optional int32 m_awaken_lvmax = 6;
  if (has_m_awaken_lvmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_awaken_lvmax(), target);
  }

  // optional int32 m_awaken_item = 7;
  if (has_m_awaken_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_awaken_item(), target);
  }

  // repeated .proto_ff.E_MofaYuansuAttributeDesc m_attribute = 8;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_MofaYuansuAwakenDesc m_awaken = 9;
  for (int i = 0; i < this->m_awaken_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_awaken(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaYuansu::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_itemid = 1;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_attritype = 2;
    if (has_m_attritype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attritype());
    }

    // optional int32 m_mosaic = 3;
    if (has_m_mosaic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mosaic());
    }

    // optional int32 m_lvitem = 4;
    if (has_m_lvitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvitem());
    }

    // optional int32 m_awaken_can = 5;
    if (has_m_awaken_can()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awaken_can());
    }

    // optional int32 m_awaken_lvmax = 6;
    if (has_m_awaken_lvmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awaken_lvmax());
    }

    // optional int32 m_awaken_item = 7;
    if (has_m_awaken_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awaken_item());
    }

  }
  // repeated .proto_ff.E_MofaYuansuAttributeDesc m_attribute = 8;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_MofaYuansuAwakenDesc m_awaken = 9;
  total_size += 1 * this->m_awaken_size();
  for (int i = 0; i < this->m_awaken_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_awaken(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaYuansu::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaYuansu* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaYuansu*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaYuansu::MergeFrom(const E_MofaYuansu& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_awaken_.MergeFrom(from.m_awaken_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_attritype()) {
      set_m_attritype(from.m_attritype());
    }
    if (from.has_m_mosaic()) {
      set_m_mosaic(from.m_mosaic());
    }
    if (from.has_m_lvitem()) {
      set_m_lvitem(from.m_lvitem());
    }
    if (from.has_m_awaken_can()) {
      set_m_awaken_can(from.m_awaken_can());
    }
    if (from.has_m_awaken_lvmax()) {
      set_m_awaken_lvmax(from.m_awaken_lvmax());
    }
    if (from.has_m_awaken_item()) {
      set_m_awaken_item(from.m_awaken_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaYuansu::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaYuansu::CopyFrom(const E_MofaYuansu& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaYuansu::IsInitialized() const {

  return true;
}

void E_MofaYuansu::Swap(E_MofaYuansu* other) {
  if (other != this) {
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_attritype_, other->m_attritype_);
    std::swap(m_mosaic_, other->m_mosaic_);
    std::swap(m_lvitem_, other->m_lvitem_);
    std::swap(m_awaken_can_, other->m_awaken_can_);
    std::swap(m_awaken_lvmax_, other->m_awaken_lvmax_);
    std::swap(m_awaken_item_, other->m_awaken_item_);
    m_attribute_.Swap(&other->m_attribute_);
    m_awaken_.Swap(&other->m_awaken_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaYuansu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaYuansu_descriptor_;
  metadata.reflection = E_MofaYuansu_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaYuansu::kEMofaYuansuListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaYuansu::Sheet_MofaYuansu()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaYuansu::InitAsDefaultInstance() {
}

Sheet_MofaYuansu::Sheet_MofaYuansu(const Sheet_MofaYuansu& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaYuansu::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaYuansu::~Sheet_MofaYuansu() {
  SharedDtor();
}

void Sheet_MofaYuansu::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaYuansu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaYuansu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaYuansu_descriptor_;
}

const Sheet_MofaYuansu& Sheet_MofaYuansu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaYuansu* Sheet_MofaYuansu::default_instance_ = NULL;

Sheet_MofaYuansu* Sheet_MofaYuansu::New() const {
  return new Sheet_MofaYuansu;
}

void Sheet_MofaYuansu::Clear() {
  e_mofayuansu_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaYuansu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaYuansu E_MofaYuansu_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaYuansu_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofayuansu_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaYuansu_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaYuansu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaYuansu E_MofaYuansu_List = 1;
  for (int i = 0; i < this->e_mofayuansu_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofayuansu_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaYuansu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaYuansu E_MofaYuansu_List = 1;
  for (int i = 0; i < this->e_mofayuansu_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofayuansu_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaYuansu::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaYuansu E_MofaYuansu_List = 1;
  total_size += 1 * this->e_mofayuansu_list_size();
  for (int i = 0; i < this->e_mofayuansu_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofayuansu_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaYuansu::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaYuansu* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaYuansu*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaYuansu::MergeFrom(const Sheet_MofaYuansu& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofayuansu_list_.MergeFrom(from.e_mofayuansu_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaYuansu::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaYuansu::CopyFrom(const Sheet_MofaYuansu& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaYuansu::IsInitialized() const {

  return true;
}

void Sheet_MofaYuansu::Swap(Sheet_MofaYuansu* other) {
  if (other != this) {
    e_mofayuansu_list_.Swap(&other->e_mofayuansu_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaYuansu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaYuansu_descriptor_;
  metadata.reflection = Sheet_MofaYuansu_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaDecompose::kMIdFieldNumber;
const int E_MofaDecompose::kMDpquaFieldNumber;
const int E_MofaDecompose::kMDpitemFieldNumber;
const int E_MofaDecompose::kMDpessFieldNumber;
#endif  // !_MSC_VER

E_MofaDecompose::E_MofaDecompose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaDecompose::InitAsDefaultInstance() {
}

E_MofaDecompose::E_MofaDecompose(const E_MofaDecompose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaDecompose::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_dpqua_ = 0;
  m_dpitem_ = 0;
  m_dpess_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaDecompose::~E_MofaDecompose() {
  SharedDtor();
}

void E_MofaDecompose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaDecompose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaDecompose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaDecompose_descriptor_;
}

const E_MofaDecompose& E_MofaDecompose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaDecompose* E_MofaDecompose::default_instance_ = NULL;

E_MofaDecompose* E_MofaDecompose::New() const {
  return new E_MofaDecompose;
}

void E_MofaDecompose::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_dpqua_ = 0;
    m_dpitem_ = 0;
    m_dpess_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaDecompose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_dpqua;
        break;
      }

      // optional int32 m_dpqua = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dpqua:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dpqua_)));
          set_has_m_dpqua();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_dpitem;
        break;
      }

      // optional int32 m_dpitem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dpitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dpitem_)));
          set_has_m_dpitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_dpess;
        break;
      }

      // optional int32 m_dpess = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dpess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dpess_)));
          set_has_m_dpess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaDecompose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_dpqua = 2;
  if (has_m_dpqua()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_dpqua(), output);
  }

  // optional int32 m_dpitem = 3;
  if (has_m_dpitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_dpitem(), output);
  }

  // optional int32 m_dpess = 4;
  if (has_m_dpess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_dpess(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaDecompose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_dpqua = 2;
  if (has_m_dpqua()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_dpqua(), target);
  }

  // optional int32 m_dpitem = 3;
  if (has_m_dpitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_dpitem(), target);
  }

  // optional int32 m_dpess = 4;
  if (has_m_dpess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_dpess(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaDecompose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_dpqua = 2;
    if (has_m_dpqua()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dpqua());
    }

    // optional int32 m_dpitem = 3;
    if (has_m_dpitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dpitem());
    }

    // optional int32 m_dpess = 4;
    if (has_m_dpess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dpess());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaDecompose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaDecompose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaDecompose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaDecompose::MergeFrom(const E_MofaDecompose& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_dpqua()) {
      set_m_dpqua(from.m_dpqua());
    }
    if (from.has_m_dpitem()) {
      set_m_dpitem(from.m_dpitem());
    }
    if (from.has_m_dpess()) {
      set_m_dpess(from.m_dpess());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaDecompose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaDecompose::CopyFrom(const E_MofaDecompose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaDecompose::IsInitialized() const {

  return true;
}

void E_MofaDecompose::Swap(E_MofaDecompose* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_dpqua_, other->m_dpqua_);
    std::swap(m_dpitem_, other->m_dpitem_);
    std::swap(m_dpess_, other->m_dpess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaDecompose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaDecompose_descriptor_;
  metadata.reflection = E_MofaDecompose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaDecompose::kEMofaDecomposeListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaDecompose::Sheet_MofaDecompose()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaDecompose::InitAsDefaultInstance() {
}

Sheet_MofaDecompose::Sheet_MofaDecompose(const Sheet_MofaDecompose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaDecompose::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaDecompose::~Sheet_MofaDecompose() {
  SharedDtor();
}

void Sheet_MofaDecompose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaDecompose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaDecompose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaDecompose_descriptor_;
}

const Sheet_MofaDecompose& Sheet_MofaDecompose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaDecompose* Sheet_MofaDecompose::default_instance_ = NULL;

Sheet_MofaDecompose* Sheet_MofaDecompose::New() const {
  return new Sheet_MofaDecompose;
}

void Sheet_MofaDecompose::Clear() {
  e_mofadecompose_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaDecompose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaDecompose E_MofaDecompose_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaDecompose_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofadecompose_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaDecompose_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaDecompose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaDecompose E_MofaDecompose_List = 1;
  for (int i = 0; i < this->e_mofadecompose_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofadecompose_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaDecompose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaDecompose E_MofaDecompose_List = 1;
  for (int i = 0; i < this->e_mofadecompose_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofadecompose_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaDecompose::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaDecompose E_MofaDecompose_List = 1;
  total_size += 1 * this->e_mofadecompose_list_size();
  for (int i = 0; i < this->e_mofadecompose_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofadecompose_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaDecompose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaDecompose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaDecompose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaDecompose::MergeFrom(const Sheet_MofaDecompose& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofadecompose_list_.MergeFrom(from.e_mofadecompose_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaDecompose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaDecompose::CopyFrom(const Sheet_MofaDecompose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaDecompose::IsInitialized() const {

  return true;
}

void Sheet_MofaDecompose::Swap(Sheet_MofaDecompose* other) {
  if (other != this) {
    e_mofadecompose_list_.Swap(&other->e_mofadecompose_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaDecompose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaDecompose_descriptor_;
  metadata.reflection = Sheet_MofaDecompose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaLvexp::kMLvFieldNumber;
const int E_MofaLvexp::kMExpFieldNumber;
#endif  // !_MSC_VER

E_MofaLvexp::E_MofaLvexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaLvexp::InitAsDefaultInstance() {
}

E_MofaLvexp::E_MofaLvexp(const E_MofaLvexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaLvexp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaLvexp::~E_MofaLvexp() {
  SharedDtor();
}

void E_MofaLvexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaLvexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaLvexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaLvexp_descriptor_;
}

const E_MofaLvexp& E_MofaLvexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaLvexp* E_MofaLvexp::default_instance_ = NULL;

E_MofaLvexp* E_MofaLvexp::New() const {
  return new E_MofaLvexp;
}

void E_MofaLvexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaLvexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaLvexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaLvexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaLvexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaLvexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaLvexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaLvexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaLvexp::MergeFrom(const E_MofaLvexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaLvexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaLvexp::CopyFrom(const E_MofaLvexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaLvexp::IsInitialized() const {

  return true;
}

void E_MofaLvexp::Swap(E_MofaLvexp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaLvexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaLvexp_descriptor_;
  metadata.reflection = E_MofaLvexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaLvexp::kEMofaLvexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaLvexp::Sheet_MofaLvexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaLvexp::InitAsDefaultInstance() {
}

Sheet_MofaLvexp::Sheet_MofaLvexp(const Sheet_MofaLvexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaLvexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaLvexp::~Sheet_MofaLvexp() {
  SharedDtor();
}

void Sheet_MofaLvexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaLvexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaLvexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaLvexp_descriptor_;
}

const Sheet_MofaLvexp& Sheet_MofaLvexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaLvexp* Sheet_MofaLvexp::default_instance_ = NULL;

Sheet_MofaLvexp* Sheet_MofaLvexp::New() const {
  return new Sheet_MofaLvexp;
}

void Sheet_MofaLvexp::Clear() {
  e_mofalvexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaLvexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaLvexp E_MofaLvexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaLvexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofalvexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaLvexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaLvexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaLvexp E_MofaLvexp_List = 1;
  for (int i = 0; i < this->e_mofalvexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofalvexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaLvexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaLvexp E_MofaLvexp_List = 1;
  for (int i = 0; i < this->e_mofalvexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofalvexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaLvexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaLvexp E_MofaLvexp_List = 1;
  total_size += 1 * this->e_mofalvexp_list_size();
  for (int i = 0; i < this->e_mofalvexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofalvexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaLvexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaLvexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaLvexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaLvexp::MergeFrom(const Sheet_MofaLvexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofalvexp_list_.MergeFrom(from.e_mofalvexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaLvexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaLvexp::CopyFrom(const Sheet_MofaLvexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaLvexp::IsInitialized() const {

  return true;
}

void Sheet_MofaLvexp::Swap(Sheet_MofaLvexp* other) {
  if (other != this) {
    e_mofalvexp_list_.Swap(&other->e_mofalvexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaLvexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaLvexp_descriptor_;
  metadata.reflection = Sheet_MofaLvexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaLvatt::kMAttidFieldNumber;
const int E_MofaLvatt::kMAttFieldNumber;
#endif  // !_MSC_VER

E_MofaLvatt::E_MofaLvatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaLvatt::InitAsDefaultInstance() {
}

E_MofaLvatt::E_MofaLvatt(const E_MofaLvatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaLvatt::SharedCtor() {
  _cached_size_ = 0;
  m_attid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaLvatt::~E_MofaLvatt() {
  SharedDtor();
}

void E_MofaLvatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaLvatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaLvatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaLvatt_descriptor_;
}

const E_MofaLvatt& E_MofaLvatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaLvatt* E_MofaLvatt::default_instance_ = NULL;

E_MofaLvatt* E_MofaLvatt::New() const {
  return new E_MofaLvatt;
}

void E_MofaLvatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_attid_ = GOOGLE_LONGLONG(0);
  }
  m_att_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaLvatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_attid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_attid_)));
          set_has_m_attid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_att;
        break;
      }

      // repeated int32 m_att = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_att:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_m_att())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_att())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_att;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaLvatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_attid = 1;
  if (has_m_attid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_attid(), output);
  }

  // repeated int32 m_att = 2;
  for (int i = 0; i < this->m_att_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->m_att(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaLvatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_attid = 1;
  if (has_m_attid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_attid(), target);
  }

  // repeated int32 m_att = 2;
  for (int i = 0; i < this->m_att_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->m_att(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaLvatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_attid = 1;
    if (has_m_attid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_attid());
    }

  }
  // repeated int32 m_att = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_att_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_att(i));
    }
    total_size += 1 * this->m_att_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaLvatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaLvatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaLvatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaLvatt::MergeFrom(const E_MofaLvatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_att_.MergeFrom(from.m_att_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_attid()) {
      set_m_attid(from.m_attid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaLvatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaLvatt::CopyFrom(const E_MofaLvatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaLvatt::IsInitialized() const {

  return true;
}

void E_MofaLvatt::Swap(E_MofaLvatt* other) {
  if (other != this) {
    std::swap(m_attid_, other->m_attid_);
    m_att_.Swap(&other->m_att_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaLvatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaLvatt_descriptor_;
  metadata.reflection = E_MofaLvatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaLvatt::kEMofaLvattListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaLvatt::Sheet_MofaLvatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaLvatt::InitAsDefaultInstance() {
}

Sheet_MofaLvatt::Sheet_MofaLvatt(const Sheet_MofaLvatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaLvatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaLvatt::~Sheet_MofaLvatt() {
  SharedDtor();
}

void Sheet_MofaLvatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaLvatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaLvatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaLvatt_descriptor_;
}

const Sheet_MofaLvatt& Sheet_MofaLvatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaLvatt* Sheet_MofaLvatt::default_instance_ = NULL;

Sheet_MofaLvatt* Sheet_MofaLvatt::New() const {
  return new Sheet_MofaLvatt;
}

void Sheet_MofaLvatt::Clear() {
  e_mofalvatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaLvatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaLvatt E_MofaLvatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaLvatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofalvatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaLvatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaLvatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaLvatt E_MofaLvatt_List = 1;
  for (int i = 0; i < this->e_mofalvatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofalvatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaLvatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaLvatt E_MofaLvatt_List = 1;
  for (int i = 0; i < this->e_mofalvatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofalvatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaLvatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaLvatt E_MofaLvatt_List = 1;
  total_size += 1 * this->e_mofalvatt_list_size();
  for (int i = 0; i < this->e_mofalvatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofalvatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaLvatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaLvatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaLvatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaLvatt::MergeFrom(const Sheet_MofaLvatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofalvatt_list_.MergeFrom(from.e_mofalvatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaLvatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaLvatt::CopyFrom(const Sheet_MofaLvatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaLvatt::IsInitialized() const {

  return true;
}

void Sheet_MofaLvatt::Swap(Sheet_MofaLvatt* other) {
  if (other != this) {
    e_mofalvatt_list_.Swap(&other->e_mofalvatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaLvatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaLvatt_descriptor_;
  metadata.reflection = Sheet_MofaLvatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaZyattZyDesc::kMValueFieldNumber;
const int E_MofaZyattZyDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MofaZyattZyDesc::E_MofaZyattZyDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaZyattZyDesc::InitAsDefaultInstance() {
}

E_MofaZyattZyDesc::E_MofaZyattZyDesc(const E_MofaZyattZyDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaZyattZyDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaZyattZyDesc::~E_MofaZyattZyDesc() {
  SharedDtor();
}

void E_MofaZyattZyDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaZyattZyDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaZyattZyDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaZyattZyDesc_descriptor_;
}

const E_MofaZyattZyDesc& E_MofaZyattZyDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaZyattZyDesc* E_MofaZyattZyDesc::default_instance_ = NULL;

E_MofaZyattZyDesc* E_MofaZyattZyDesc::New() const {
  return new E_MofaZyattZyDesc;
}

void E_MofaZyattZyDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaZyattZyDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaZyattZyDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaZyattZyDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaZyattZyDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaZyattZyDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaZyattZyDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaZyattZyDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaZyattZyDesc::MergeFrom(const E_MofaZyattZyDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaZyattZyDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaZyattZyDesc::CopyFrom(const E_MofaZyattZyDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaZyattZyDesc::IsInitialized() const {

  return true;
}

void E_MofaZyattZyDesc::Swap(E_MofaZyattZyDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaZyattZyDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaZyattZyDesc_descriptor_;
  metadata.reflection = E_MofaZyattZyDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaZyatt::kMIdFieldNumber;
const int E_MofaZyatt::kMAttidFieldNumber;
const int E_MofaZyatt::kMQualityFieldNumber;
const int E_MofaZyatt::kMZyFieldNumber;
#endif  // !_MSC_VER

E_MofaZyatt::E_MofaZyatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaZyatt::InitAsDefaultInstance() {
}

E_MofaZyatt::E_MofaZyatt(const E_MofaZyatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaZyatt::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_attid_ = GOOGLE_LONGLONG(0);
  m_quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaZyatt::~E_MofaZyatt() {
  SharedDtor();
}

void E_MofaZyatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaZyatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaZyatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaZyatt_descriptor_;
}

const E_MofaZyatt& E_MofaZyatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaZyatt* E_MofaZyatt::default_instance_ = NULL;

E_MofaZyatt* E_MofaZyatt::New() const {
  return new E_MofaZyatt;
}

void E_MofaZyatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_attid_ = GOOGLE_LONGLONG(0);
    m_quality_ = 0;
  }
  m_zy_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaZyatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_attid;
        break;
      }

      // optional int64 m_attid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_attid_)));
          set_has_m_attid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_zy;
        break;
      }

      // repeated .proto_ff.E_MofaZyattZyDesc m_zy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_zy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_zy()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_zy;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaZyatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int64 m_attid = 2;
  if (has_m_attid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_attid(), output);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_quality(), output);
  }

  // repeated .proto_ff.E_MofaZyattZyDesc m_zy = 4;
  for (int i = 0; i < this->m_zy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_zy(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaZyatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int64 m_attid = 2;
  if (has_m_attid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_attid(), target);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_quality(), target);
  }

  // repeated .proto_ff.E_MofaZyattZyDesc m_zy = 4;
  for (int i = 0; i < this->m_zy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_zy(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaZyatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int64 m_attid = 2;
    if (has_m_attid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_attid());
    }

    // optional int32 m_quality = 3;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

  }
  // repeated .proto_ff.E_MofaZyattZyDesc m_zy = 4;
  total_size += 1 * this->m_zy_size();
  for (int i = 0; i < this->m_zy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_zy(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaZyatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaZyatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaZyatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaZyatt::MergeFrom(const E_MofaZyatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_zy_.MergeFrom(from.m_zy_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_attid()) {
      set_m_attid(from.m_attid());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaZyatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaZyatt::CopyFrom(const E_MofaZyatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaZyatt::IsInitialized() const {

  return true;
}

void E_MofaZyatt::Swap(E_MofaZyatt* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_attid_, other->m_attid_);
    std::swap(m_quality_, other->m_quality_);
    m_zy_.Swap(&other->m_zy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaZyatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaZyatt_descriptor_;
  metadata.reflection = E_MofaZyatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaZyatt::kEMofaZyattListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaZyatt::Sheet_MofaZyatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaZyatt::InitAsDefaultInstance() {
}

Sheet_MofaZyatt::Sheet_MofaZyatt(const Sheet_MofaZyatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaZyatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaZyatt::~Sheet_MofaZyatt() {
  SharedDtor();
}

void Sheet_MofaZyatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaZyatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaZyatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaZyatt_descriptor_;
}

const Sheet_MofaZyatt& Sheet_MofaZyatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaZyatt* Sheet_MofaZyatt::default_instance_ = NULL;

Sheet_MofaZyatt* Sheet_MofaZyatt::New() const {
  return new Sheet_MofaZyatt;
}

void Sheet_MofaZyatt::Clear() {
  e_mofazyatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaZyatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaZyatt E_MofaZyatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaZyatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofazyatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaZyatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaZyatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaZyatt E_MofaZyatt_List = 1;
  for (int i = 0; i < this->e_mofazyatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofazyatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaZyatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaZyatt E_MofaZyatt_List = 1;
  for (int i = 0; i < this->e_mofazyatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofazyatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaZyatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaZyatt E_MofaZyatt_List = 1;
  total_size += 1 * this->e_mofazyatt_list_size();
  for (int i = 0; i < this->e_mofazyatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofazyatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaZyatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaZyatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaZyatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaZyatt::MergeFrom(const Sheet_MofaZyatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofazyatt_list_.MergeFrom(from.e_mofazyatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaZyatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaZyatt::CopyFrom(const Sheet_MofaZyatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaZyatt::IsInitialized() const {

  return true;
}

void Sheet_MofaZyatt::Swap(Sheet_MofaZyatt* other) {
  if (other != this) {
    e_mofazyatt_list_.Swap(&other->e_mofazyatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaZyatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaZyatt_descriptor_;
  metadata.reflection = Sheet_MofaZyatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaZyjxattZyjxDesc::kMValueFieldNumber;
const int E_MofaZyjxattZyjxDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MofaZyjxattZyjxDesc::E_MofaZyjxattZyjxDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaZyjxattZyjxDesc::InitAsDefaultInstance() {
}

E_MofaZyjxattZyjxDesc::E_MofaZyjxattZyjxDesc(const E_MofaZyjxattZyjxDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaZyjxattZyjxDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaZyjxattZyjxDesc::~E_MofaZyjxattZyjxDesc() {
  SharedDtor();
}

void E_MofaZyjxattZyjxDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaZyjxattZyjxDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaZyjxattZyjxDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaZyjxattZyjxDesc_descriptor_;
}

const E_MofaZyjxattZyjxDesc& E_MofaZyjxattZyjxDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaZyjxattZyjxDesc* E_MofaZyjxattZyjxDesc::default_instance_ = NULL;

E_MofaZyjxattZyjxDesc* E_MofaZyjxattZyjxDesc::New() const {
  return new E_MofaZyjxattZyjxDesc;
}

void E_MofaZyjxattZyjxDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaZyjxattZyjxDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaZyjxattZyjxDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaZyjxattZyjxDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaZyjxattZyjxDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaZyjxattZyjxDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaZyjxattZyjxDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaZyjxattZyjxDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaZyjxattZyjxDesc::MergeFrom(const E_MofaZyjxattZyjxDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaZyjxattZyjxDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaZyjxattZyjxDesc::CopyFrom(const E_MofaZyjxattZyjxDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaZyjxattZyjxDesc::IsInitialized() const {

  return true;
}

void E_MofaZyjxattZyjxDesc::Swap(E_MofaZyjxattZyjxDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaZyjxattZyjxDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaZyjxattZyjxDesc_descriptor_;
  metadata.reflection = E_MofaZyjxattZyjxDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaZyjxatt::kMIdFieldNumber;
const int E_MofaZyjxatt::kMAttidFieldNumber;
const int E_MofaZyjxatt::kMJxlvFieldNumber;
const int E_MofaZyjxatt::kMZyjxFieldNumber;
#endif  // !_MSC_VER

E_MofaZyjxatt::E_MofaZyjxatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaZyjxatt::InitAsDefaultInstance() {
}

E_MofaZyjxatt::E_MofaZyjxatt(const E_MofaZyjxatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaZyjxatt::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_attid_ = GOOGLE_LONGLONG(0);
  m_jxlv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaZyjxatt::~E_MofaZyjxatt() {
  SharedDtor();
}

void E_MofaZyjxatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaZyjxatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaZyjxatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaZyjxatt_descriptor_;
}

const E_MofaZyjxatt& E_MofaZyjxatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaZyjxatt* E_MofaZyjxatt::default_instance_ = NULL;

E_MofaZyjxatt* E_MofaZyjxatt::New() const {
  return new E_MofaZyjxatt;
}

void E_MofaZyjxatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_attid_ = GOOGLE_LONGLONG(0);
    m_jxlv_ = 0;
  }
  m_zyjx_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaZyjxatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_attid;
        break;
      }

      // optional int64 m_attid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_attid_)));
          set_has_m_attid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_jxlv;
        break;
      }

      // optional int32 m_jxlv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_jxlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_jxlv_)));
          set_has_m_jxlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_zyjx;
        break;
      }

      // repeated .proto_ff.E_MofaZyjxattZyjxDesc m_zyjx = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_zyjx:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_zyjx()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_zyjx;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaZyjxatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int64 m_attid = 2;
  if (has_m_attid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_attid(), output);
  }

  // optional int32 m_jxlv = 3;
  if (has_m_jxlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_jxlv(), output);
  }

  // repeated .proto_ff.E_MofaZyjxattZyjxDesc m_zyjx = 4;
  for (int i = 0; i < this->m_zyjx_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_zyjx(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaZyjxatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int64 m_attid = 2;
  if (has_m_attid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_attid(), target);
  }

  // optional int32 m_jxlv = 3;
  if (has_m_jxlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_jxlv(), target);
  }

  // repeated .proto_ff.E_MofaZyjxattZyjxDesc m_zyjx = 4;
  for (int i = 0; i < this->m_zyjx_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_zyjx(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaZyjxatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int64 m_attid = 2;
    if (has_m_attid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_attid());
    }

    // optional int32 m_jxlv = 3;
    if (has_m_jxlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_jxlv());
    }

  }
  // repeated .proto_ff.E_MofaZyjxattZyjxDesc m_zyjx = 4;
  total_size += 1 * this->m_zyjx_size();
  for (int i = 0; i < this->m_zyjx_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_zyjx(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaZyjxatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaZyjxatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaZyjxatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaZyjxatt::MergeFrom(const E_MofaZyjxatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_zyjx_.MergeFrom(from.m_zyjx_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_attid()) {
      set_m_attid(from.m_attid());
    }
    if (from.has_m_jxlv()) {
      set_m_jxlv(from.m_jxlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaZyjxatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaZyjxatt::CopyFrom(const E_MofaZyjxatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaZyjxatt::IsInitialized() const {

  return true;
}

void E_MofaZyjxatt::Swap(E_MofaZyjxatt* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_attid_, other->m_attid_);
    std::swap(m_jxlv_, other->m_jxlv_);
    m_zyjx_.Swap(&other->m_zyjx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaZyjxatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaZyjxatt_descriptor_;
  metadata.reflection = E_MofaZyjxatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaZyjxatt::kEMofaZyjxattListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaZyjxatt::Sheet_MofaZyjxatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaZyjxatt::InitAsDefaultInstance() {
}

Sheet_MofaZyjxatt::Sheet_MofaZyjxatt(const Sheet_MofaZyjxatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaZyjxatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaZyjxatt::~Sheet_MofaZyjxatt() {
  SharedDtor();
}

void Sheet_MofaZyjxatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaZyjxatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaZyjxatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaZyjxatt_descriptor_;
}

const Sheet_MofaZyjxatt& Sheet_MofaZyjxatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaZyjxatt* Sheet_MofaZyjxatt::default_instance_ = NULL;

Sheet_MofaZyjxatt* Sheet_MofaZyjxatt::New() const {
  return new Sheet_MofaZyjxatt;
}

void Sheet_MofaZyjxatt::Clear() {
  e_mofazyjxatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaZyjxatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaZyjxatt E_MofaZyjxatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaZyjxatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofazyjxatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaZyjxatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaZyjxatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaZyjxatt E_MofaZyjxatt_List = 1;
  for (int i = 0; i < this->e_mofazyjxatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofazyjxatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaZyjxatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaZyjxatt E_MofaZyjxatt_List = 1;
  for (int i = 0; i < this->e_mofazyjxatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofazyjxatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaZyjxatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaZyjxatt E_MofaZyjxatt_List = 1;
  total_size += 1 * this->e_mofazyjxatt_list_size();
  for (int i = 0; i < this->e_mofazyjxatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofazyjxatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaZyjxatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaZyjxatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaZyjxatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaZyjxatt::MergeFrom(const Sheet_MofaZyjxatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofazyjxatt_list_.MergeFrom(from.e_mofazyjxatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaZyjxatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaZyjxatt::CopyFrom(const Sheet_MofaZyjxatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaZyjxatt::IsInitialized() const {

  return true;
}

void Sheet_MofaZyjxatt::Swap(Sheet_MofaZyjxatt* other) {
  if (other != this) {
    e_mofazyjxatt_list_.Swap(&other->e_mofazyjxatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaZyjxatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaZyjxatt_descriptor_;
  metadata.reflection = Sheet_MofaZyjxatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaZyjxzfattZyjxzfDesc::kMValueFieldNumber;
const int E_MofaZyjxzfattZyjxzfDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MofaZyjxzfattZyjxzfDesc::E_MofaZyjxzfattZyjxzfDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaZyjxzfattZyjxzfDesc::InitAsDefaultInstance() {
}

E_MofaZyjxzfattZyjxzfDesc::E_MofaZyjxzfattZyjxzfDesc(const E_MofaZyjxzfattZyjxzfDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaZyjxzfattZyjxzfDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaZyjxzfattZyjxzfDesc::~E_MofaZyjxzfattZyjxzfDesc() {
  SharedDtor();
}

void E_MofaZyjxzfattZyjxzfDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaZyjxzfattZyjxzfDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaZyjxzfattZyjxzfDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaZyjxzfattZyjxzfDesc_descriptor_;
}

const E_MofaZyjxzfattZyjxzfDesc& E_MofaZyjxzfattZyjxzfDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaZyjxzfattZyjxzfDesc* E_MofaZyjxzfattZyjxzfDesc::default_instance_ = NULL;

E_MofaZyjxzfattZyjxzfDesc* E_MofaZyjxzfattZyjxzfDesc::New() const {
  return new E_MofaZyjxzfattZyjxzfDesc;
}

void E_MofaZyjxzfattZyjxzfDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaZyjxzfattZyjxzfDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaZyjxzfattZyjxzfDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaZyjxzfattZyjxzfDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaZyjxzfattZyjxzfDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaZyjxzfattZyjxzfDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaZyjxzfattZyjxzfDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaZyjxzfattZyjxzfDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaZyjxzfattZyjxzfDesc::MergeFrom(const E_MofaZyjxzfattZyjxzfDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaZyjxzfattZyjxzfDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaZyjxzfattZyjxzfDesc::CopyFrom(const E_MofaZyjxzfattZyjxzfDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaZyjxzfattZyjxzfDesc::IsInitialized() const {

  return true;
}

void E_MofaZyjxzfattZyjxzfDesc::Swap(E_MofaZyjxzfattZyjxzfDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaZyjxzfattZyjxzfDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaZyjxzfattZyjxzfDesc_descriptor_;
  metadata.reflection = E_MofaZyjxzfattZyjxzfDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaZyjxzfatt::kMIdFieldNumber;
const int E_MofaZyjxzfatt::kMAttidFieldNumber;
const int E_MofaZyjxzfatt::kMJxlvFieldNumber;
const int E_MofaZyjxzfatt::kMZyjxzfFieldNumber;
#endif  // !_MSC_VER

E_MofaZyjxzfatt::E_MofaZyjxzfatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaZyjxzfatt::InitAsDefaultInstance() {
}

E_MofaZyjxzfatt::E_MofaZyjxzfatt(const E_MofaZyjxzfatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaZyjxzfatt::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_attid_ = GOOGLE_LONGLONG(0);
  m_jxlv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaZyjxzfatt::~E_MofaZyjxzfatt() {
  SharedDtor();
}

void E_MofaZyjxzfatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaZyjxzfatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaZyjxzfatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaZyjxzfatt_descriptor_;
}

const E_MofaZyjxzfatt& E_MofaZyjxzfatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaZyjxzfatt* E_MofaZyjxzfatt::default_instance_ = NULL;

E_MofaZyjxzfatt* E_MofaZyjxzfatt::New() const {
  return new E_MofaZyjxzfatt;
}

void E_MofaZyjxzfatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_attid_ = GOOGLE_LONGLONG(0);
    m_jxlv_ = 0;
  }
  m_zyjxzf_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaZyjxzfatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_attid;
        break;
      }

      // optional int64 m_attid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_attid_)));
          set_has_m_attid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_jxlv;
        break;
      }

      // optional int32 m_jxlv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_jxlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_jxlv_)));
          set_has_m_jxlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_zyjxzf;
        break;
      }

      // repeated .proto_ff.E_MofaZyjxzfattZyjxzfDesc m_zyjxzf = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_zyjxzf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_zyjxzf()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_zyjxzf;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaZyjxzfatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int64 m_attid = 2;
  if (has_m_attid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_attid(), output);
  }

  // optional int32 m_jxlv = 3;
  if (has_m_jxlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_jxlv(), output);
  }

  // repeated .proto_ff.E_MofaZyjxzfattZyjxzfDesc m_zyjxzf = 4;
  for (int i = 0; i < this->m_zyjxzf_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_zyjxzf(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaZyjxzfatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int64 m_attid = 2;
  if (has_m_attid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_attid(), target);
  }

  // optional int32 m_jxlv = 3;
  if (has_m_jxlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_jxlv(), target);
  }

  // repeated .proto_ff.E_MofaZyjxzfattZyjxzfDesc m_zyjxzf = 4;
  for (int i = 0; i < this->m_zyjxzf_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_zyjxzf(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaZyjxzfatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int64 m_attid = 2;
    if (has_m_attid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_attid());
    }

    // optional int32 m_jxlv = 3;
    if (has_m_jxlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_jxlv());
    }

  }
  // repeated .proto_ff.E_MofaZyjxzfattZyjxzfDesc m_zyjxzf = 4;
  total_size += 1 * this->m_zyjxzf_size();
  for (int i = 0; i < this->m_zyjxzf_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_zyjxzf(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaZyjxzfatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaZyjxzfatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaZyjxzfatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaZyjxzfatt::MergeFrom(const E_MofaZyjxzfatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_zyjxzf_.MergeFrom(from.m_zyjxzf_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_attid()) {
      set_m_attid(from.m_attid());
    }
    if (from.has_m_jxlv()) {
      set_m_jxlv(from.m_jxlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaZyjxzfatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaZyjxzfatt::CopyFrom(const E_MofaZyjxzfatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaZyjxzfatt::IsInitialized() const {

  return true;
}

void E_MofaZyjxzfatt::Swap(E_MofaZyjxzfatt* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_attid_, other->m_attid_);
    std::swap(m_jxlv_, other->m_jxlv_);
    m_zyjxzf_.Swap(&other->m_zyjxzf_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaZyjxzfatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaZyjxzfatt_descriptor_;
  metadata.reflection = E_MofaZyjxzfatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaZyjxzfatt::kEMofaZyjxzfattListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaZyjxzfatt::Sheet_MofaZyjxzfatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaZyjxzfatt::InitAsDefaultInstance() {
}

Sheet_MofaZyjxzfatt::Sheet_MofaZyjxzfatt(const Sheet_MofaZyjxzfatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaZyjxzfatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaZyjxzfatt::~Sheet_MofaZyjxzfatt() {
  SharedDtor();
}

void Sheet_MofaZyjxzfatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaZyjxzfatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaZyjxzfatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaZyjxzfatt_descriptor_;
}

const Sheet_MofaZyjxzfatt& Sheet_MofaZyjxzfatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaZyjxzfatt* Sheet_MofaZyjxzfatt::default_instance_ = NULL;

Sheet_MofaZyjxzfatt* Sheet_MofaZyjxzfatt::New() const {
  return new Sheet_MofaZyjxzfatt;
}

void Sheet_MofaZyjxzfatt::Clear() {
  e_mofazyjxzfatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaZyjxzfatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaZyjxzfatt E_MofaZyjxzfatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaZyjxzfatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofazyjxzfatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaZyjxzfatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaZyjxzfatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaZyjxzfatt E_MofaZyjxzfatt_List = 1;
  for (int i = 0; i < this->e_mofazyjxzfatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofazyjxzfatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaZyjxzfatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaZyjxzfatt E_MofaZyjxzfatt_List = 1;
  for (int i = 0; i < this->e_mofazyjxzfatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofazyjxzfatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaZyjxzfatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaZyjxzfatt E_MofaZyjxzfatt_List = 1;
  total_size += 1 * this->e_mofazyjxzfatt_list_size();
  for (int i = 0; i < this->e_mofazyjxzfatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofazyjxzfatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaZyjxzfatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaZyjxzfatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaZyjxzfatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaZyjxzfatt::MergeFrom(const Sheet_MofaZyjxzfatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofazyjxzfatt_list_.MergeFrom(from.e_mofazyjxzfatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaZyjxzfatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaZyjxzfatt::CopyFrom(const Sheet_MofaZyjxzfatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaZyjxzfatt::IsInitialized() const {

  return true;
}

void Sheet_MofaZyjxzfatt::Swap(Sheet_MofaZyjxzfatt* other) {
  if (other != this) {
    e_mofazyjxzfatt_list_.Swap(&other->e_mofazyjxzfatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaZyjxzfatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaZyjxzfatt_descriptor_;
  metadata.reflection = Sheet_MofaZyjxzfatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaExchange::kMItemidFieldNumber;
const int E_MofaExchange::kMQualityFieldNumber;
const int E_MofaExchange::kMEcitemFieldNumber;
const int E_MofaExchange::kMEcnumFieldNumber;
#endif  // !_MSC_VER

E_MofaExchange::E_MofaExchange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaExchange::InitAsDefaultInstance() {
}

E_MofaExchange::E_MofaExchange(const E_MofaExchange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaExchange::SharedCtor() {
  _cached_size_ = 0;
  m_itemid_ = 0;
  m_quality_ = 0;
  m_ecitem_ = 0;
  m_ecnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaExchange::~E_MofaExchange() {
  SharedDtor();
}

void E_MofaExchange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaExchange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaExchange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaExchange_descriptor_;
}

const E_MofaExchange& E_MofaExchange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaExchange* E_MofaExchange::default_instance_ = NULL;

E_MofaExchange* E_MofaExchange::New() const {
  return new E_MofaExchange;
}

void E_MofaExchange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_itemid_ = 0;
    m_quality_ = 0;
    m_ecitem_ = 0;
    m_ecnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaExchange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_ecitem;
        break;
      }

      // optional int32 m_ecitem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ecitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ecitem_)));
          set_has_m_ecitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_ecnum;
        break;
      }

      // optional int32 m_ecnum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ecnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ecnum_)));
          set_has_m_ecnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaExchange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_itemid = 1;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_itemid(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_ecitem = 3;
  if (has_m_ecitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_ecitem(), output);
  }

  // optional int32 m_ecnum = 4;
  if (has_m_ecnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_ecnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaExchange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_itemid = 1;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_itemid(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_ecitem = 3;
  if (has_m_ecitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_ecitem(), target);
  }

  // optional int32 m_ecnum = 4;
  if (has_m_ecnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_ecnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaExchange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_itemid = 1;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_ecitem = 3;
    if (has_m_ecitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ecitem());
    }

    // optional int32 m_ecnum = 4;
    if (has_m_ecnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ecnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaExchange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaExchange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaExchange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaExchange::MergeFrom(const E_MofaExchange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_ecitem()) {
      set_m_ecitem(from.m_ecitem());
    }
    if (from.has_m_ecnum()) {
      set_m_ecnum(from.m_ecnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaExchange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaExchange::CopyFrom(const E_MofaExchange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaExchange::IsInitialized() const {

  return true;
}

void E_MofaExchange::Swap(E_MofaExchange* other) {
  if (other != this) {
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_ecitem_, other->m_ecitem_);
    std::swap(m_ecnum_, other->m_ecnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaExchange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaExchange_descriptor_;
  metadata.reflection = E_MofaExchange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaExchange::kEMofaExchangeListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaExchange::Sheet_MofaExchange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaExchange::InitAsDefaultInstance() {
}

Sheet_MofaExchange::Sheet_MofaExchange(const Sheet_MofaExchange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaExchange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaExchange::~Sheet_MofaExchange() {
  SharedDtor();
}

void Sheet_MofaExchange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaExchange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaExchange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaExchange_descriptor_;
}

const Sheet_MofaExchange& Sheet_MofaExchange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaExchange* Sheet_MofaExchange::default_instance_ = NULL;

Sheet_MofaExchange* Sheet_MofaExchange::New() const {
  return new Sheet_MofaExchange;
}

void Sheet_MofaExchange::Clear() {
  e_mofaexchange_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaExchange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaExchange E_MofaExchange_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaExchange_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofaexchange_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaExchange_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaExchange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaExchange E_MofaExchange_List = 1;
  for (int i = 0; i < this->e_mofaexchange_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofaexchange_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaExchange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaExchange E_MofaExchange_List = 1;
  for (int i = 0; i < this->e_mofaexchange_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofaexchange_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaExchange::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaExchange E_MofaExchange_List = 1;
  total_size += 1 * this->e_mofaexchange_list_size();
  for (int i = 0; i < this->e_mofaexchange_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofaexchange_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaExchange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaExchange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaExchange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaExchange::MergeFrom(const Sheet_MofaExchange& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofaexchange_list_.MergeFrom(from.e_mofaexchange_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaExchange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaExchange::CopyFrom(const Sheet_MofaExchange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaExchange::IsInitialized() const {

  return true;
}

void Sheet_MofaExchange::Swap(Sheet_MofaExchange* other) {
  if (other != this) {
    e_mofaexchange_list_.Swap(&other->e_mofaexchange_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaExchange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaExchange_descriptor_;
  metadata.reflection = Sheet_MofaExchange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MofaName::kMIdFieldNumber;
const int E_MofaName::kMFunctionidFieldNumber;
#endif  // !_MSC_VER

E_MofaName::E_MofaName()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MofaName::InitAsDefaultInstance() {
}

E_MofaName::E_MofaName(const E_MofaName& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MofaName::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_functionid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MofaName::~E_MofaName() {
  SharedDtor();
}

void E_MofaName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MofaName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MofaName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MofaName_descriptor_;
}

const E_MofaName& E_MofaName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

E_MofaName* E_MofaName::default_instance_ = NULL;

E_MofaName* E_MofaName::New() const {
  return new E_MofaName;
}

void E_MofaName::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_functionid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MofaName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_functionid;
        break;
      }

      // optional int32 m_functionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_functionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_functionid_)));
          set_has_m_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MofaName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_functionid = 2;
  if (has_m_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_functionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MofaName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_functionid = 2;
  if (has_m_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_functionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MofaName::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_functionid = 2;
    if (has_m_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_functionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MofaName::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MofaName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MofaName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MofaName::MergeFrom(const E_MofaName& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_functionid()) {
      set_m_functionid(from.m_functionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MofaName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MofaName::CopyFrom(const E_MofaName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MofaName::IsInitialized() const {

  return true;
}

void E_MofaName::Swap(E_MofaName* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_functionid_, other->m_functionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MofaName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MofaName_descriptor_;
  metadata.reflection = E_MofaName_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MofaName::kEMofaNameListFieldNumber;
#endif  // !_MSC_VER

Sheet_MofaName::Sheet_MofaName()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MofaName::InitAsDefaultInstance() {
}

Sheet_MofaName::Sheet_MofaName(const Sheet_MofaName& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MofaName::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MofaName::~Sheet_MofaName() {
  SharedDtor();
}

void Sheet_MofaName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MofaName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MofaName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MofaName_descriptor_;
}

const Sheet_MofaName& Sheet_MofaName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMofa_2eproto();
  return *default_instance_;
}

Sheet_MofaName* Sheet_MofaName::default_instance_ = NULL;

Sheet_MofaName* Sheet_MofaName::New() const {
  return new Sheet_MofaName;
}

void Sheet_MofaName::Clear() {
  e_mofaname_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MofaName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MofaName E_MofaName_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MofaName_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mofaname_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MofaName_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MofaName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MofaName E_MofaName_List = 1;
  for (int i = 0; i < this->e_mofaname_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mofaname_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MofaName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MofaName E_MofaName_List = 1;
  for (int i = 0; i < this->e_mofaname_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mofaname_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MofaName::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MofaName E_MofaName_List = 1;
  total_size += 1 * this->e_mofaname_list_size();
  for (int i = 0; i < this->e_mofaname_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mofaname_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MofaName::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MofaName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MofaName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MofaName::MergeFrom(const Sheet_MofaName& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mofaname_list_.MergeFrom(from.e_mofaname_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MofaName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MofaName::CopyFrom(const Sheet_MofaName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MofaName::IsInitialized() const {

  return true;
}

void Sheet_MofaName::Swap(Sheet_MofaName* other) {
  if (other != this) {
    e_mofaname_list_.Swap(&other->e_mofaname_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MofaName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MofaName_descriptor_;
  metadata.reflection = Sheet_MofaName_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
