// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: marry.proto

#ifndef PROTOBUF_marry_2eproto__INCLUDED
#define PROTOBUF_marry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_marry_2eproto();
void protobuf_AssignDesc_marry_2eproto();
void protobuf_ShutdownFile_marry_2eproto();

class NotifyMarrySelf;
class NotifyMarryDst;
class MarryReq;
class MarryRsp;
class NotifyMarryApply;
class MarryApplyOptReq;
class MarryApplyOptRsp;
class NotifyMarryRefuse;
class NotifyMarryCmpt;
class NotifyNewMarry;
class MarryRecvGearRewardReq;
class MarryRecvGearRewardRsp;
class MarryRecvChildReq;
class MarryRecvChildRsp;
class DivorceReq;
class DivorceRsp;
class MarryChildOptReq;
class MarryChildOptRsp;
class ExpressReq;
class ExpressRsp;
class NotifyExpressToDst;
class ExpressDataReq;
class ExpressDataRsp;
class MarryInviteDstBuyDupReq;
class MarryInviteDstBuyDupRsp;
class NotifyMarryDstBuyDup;
class MarryBuyRefuseReq;
class MarryBuyDupReq;
class MarryBuyDupRsp;
class NotifyMarryBuyResult;
class MarryLockLvReq;
class MarryLockLvRsp;
class MarryBoxBuyReq;
class MarryBoxBuyRsp;
class MarryBoxRecvReq;
class MarryBoxRecvRsp;
class NotifyMarryDupSelect;
class MarryDupSelectReq;
class MarryDupSelectRsp;
class NotifyMarryDupResult;
class SearchMarryFriendReq;
class SearchMarryFriendRsp;
class MarryTaskRecvReq;
class MarryTaskRecvRsp;
class MarryWeddingDataReq;
class NotifyWeddingData;
class NotifyWeddingPlan;
class NotifyWeddingStep;
class NotifyWeddingRole;
class MakeWeddingReq;
class MakeWeddingRsp;
class WeddingInviteReq;
class WeddingInviteRsp;
class EnterWeddingDupReq;
class EnterWeddingDupRsp;
class NotifyWeddingInvite;
class WeddingBuySeatReq;
class WeddingBuySeatRsp;
class WeddingApplyReq;
class WeddingApplyRsp;
class NotifyWeddingTourFollow;
class NotifyWeddingApply;
class NotifyBroadExpress;
class WeddingSignReq;
class WeddingSignRsp;
class WeddingFireReq;
class WeddingFireRsp;
class NotifyBroadFire;
class NotifyWeddingDupData;
class NotifyWeddingDupRole;
class throwCakeReq;
class throwCakeRsp;
class NotifyMarryRedNum;
class SendMarryRedReq;
class SendMarryRedRsp;
class C2LMarryReq;
class L2CMarryRsp;
class C2LNotifyMarryCmpt;
class L2CUpdateMarryBrief;
class C2LNotifyDivorce;
class C2LExpressReq;
class L2CNotifyExpressSuccess;
class C2LNotifyExpressToDst;
class C2LNotifyMarryDst;
class C2LGlobalExpressReq;
class C2LNotifyMarryBuySuccess;
class C2LMarryRecvDstCard;
class C2LWeddingBuySeatReq;
class L2CWeddingBuySeatRsp;
class C2LNotifyWeddingTour;
class C2LWeddingTourOver;

// ===================================================================

class NotifyMarrySelf : public ::google::protobuf::Message {
 public:
  NotifyMarrySelf();
  virtual ~NotifyMarrySelf();

  NotifyMarrySelf(const NotifyMarrySelf& from);

  inline NotifyMarrySelf& operator=(const NotifyMarrySelf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarrySelf& default_instance();

  void Swap(NotifyMarrySelf* other);

  // implements Message ----------------------------------------------

  NotifyMarrySelf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarrySelf& from);
  void MergeFrom(const NotifyMarrySelf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.MarrySelfInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::MarrySelfInfo& info() const;
  inline ::proto_ff::MarrySelfInfo* mutable_info();
  inline ::proto_ff::MarrySelfInfo* release_info();
  inline void set_allocated_info(::proto_ff::MarrySelfInfo* info);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarrySelf)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::MarrySelfInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarrySelf* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryDst : public ::google::protobuf::Message {
 public:
  NotifyMarryDst();
  virtual ~NotifyMarryDst();

  NotifyMarryDst(const NotifyMarryDst& from);

  inline NotifyMarryDst& operator=(const NotifyMarryDst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryDst& default_instance();

  void Swap(NotifyMarryDst* other);

  // implements Message ----------------------------------------------

  NotifyMarryDst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryDst& from);
  void MergeFrom(const NotifyMarryDst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RolePlayerMiniInfo mini = 1;
  inline bool has_mini() const;
  inline void clear_mini();
  static const int kMiniFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& mini() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_mini();
  inline ::proto_ff::RolePlayerMiniInfo* release_mini();
  inline void set_allocated_mini(::proto_ff::RolePlayerMiniInfo* mini);

  // optional .proto_ff.MarryBrief brief = 2;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 2;
  inline const ::proto_ff::MarryBrief& brief() const;
  inline ::proto_ff::MarryBrief* mutable_brief();
  inline ::proto_ff::MarryBrief* release_brief();
  inline void set_allocated_brief(::proto_ff::MarryBrief* brief);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryDst)
 private:
  inline void set_has_mini();
  inline void clear_has_mini();
  inline void set_has_brief();
  inline void clear_has_brief();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* mini_;
  ::proto_ff::MarryBrief* brief_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryDst* default_instance_;
};
// -------------------------------------------------------------------

class MarryReq : public ::google::protobuf::Message {
 public:
  MarryReq();
  virtual ~MarryReq();

  MarryReq(const MarryReq& from);

  inline MarryReq& operator=(const MarryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryReq& default_instance();

  void Swap(MarryReq* other);

  // implements Message ----------------------------------------------

  MarryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryReq& from);
  void MergeFrom(const MarryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dst_cid = 1;
  inline bool has_dst_cid() const;
  inline void clear_dst_cid();
  static const int kDstCidFieldNumber = 1;
  inline ::google::protobuf::uint64 dst_cid() const;
  inline void set_dst_cid(::google::protobuf::uint64 value);

  // optional int32 gear = 2;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 2;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryReq)
 private:
  inline void set_has_dst_cid();
  inline void clear_has_dst_cid();
  inline void set_has_gear();
  inline void clear_has_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dst_cid_;
  ::google::protobuf::int32 gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryRsp : public ::google::protobuf::Message {
 public:
  MarryRsp();
  virtual ~MarryRsp();

  MarryRsp(const MarryRsp& from);

  inline MarryRsp& operator=(const MarryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryRsp& default_instance();

  void Swap(MarryRsp* other);

  // implements Message ----------------------------------------------

  MarryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryRsp& from);
  void MergeFrom(const MarryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 dst_cid = 2;
  inline bool has_dst_cid() const;
  inline void clear_dst_cid();
  static const int kDstCidFieldNumber = 2;
  inline ::google::protobuf::uint64 dst_cid() const;
  inline void set_dst_cid(::google::protobuf::uint64 value);

  // optional int32 gear = 3;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 3;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_dst_cid();
  inline void clear_has_dst_cid();
  inline void set_has_gear();
  inline void clear_has_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dst_cid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryApply : public ::google::protobuf::Message {
 public:
  NotifyMarryApply();
  virtual ~NotifyMarryApply();

  NotifyMarryApply(const NotifyMarryApply& from);

  inline NotifyMarryApply& operator=(const NotifyMarryApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryApply& default_instance();

  void Swap(NotifyMarryApply* other);

  // implements Message ----------------------------------------------

  NotifyMarryApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryApply& from);
  void MergeFrom(const NotifyMarryApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RolePlayerMiniInfo src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& src() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_src();
  inline ::proto_ff::RolePlayerMiniInfo* release_src();
  inline void set_allocated_src(::proto_ff::RolePlayerMiniInfo* src);

  // optional int32 gear = 2;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 2;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryApply)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_gear();
  inline void clear_has_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* src_;
  ::google::protobuf::int32 gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryApply* default_instance_;
};
// -------------------------------------------------------------------

class MarryApplyOptReq : public ::google::protobuf::Message {
 public:
  MarryApplyOptReq();
  virtual ~MarryApplyOptReq();

  MarryApplyOptReq(const MarryApplyOptReq& from);

  inline MarryApplyOptReq& operator=(const MarryApplyOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryApplyOptReq& default_instance();

  void Swap(MarryApplyOptReq* other);

  // implements Message ----------------------------------------------

  MarryApplyOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryApplyOptReq& from);
  void MergeFrom(const MarryApplyOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryApplyOptReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryApplyOptReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryApplyOptRsp : public ::google::protobuf::Message {
 public:
  MarryApplyOptRsp();
  virtual ~MarryApplyOptRsp();

  MarryApplyOptRsp(const MarryApplyOptRsp& from);

  inline MarryApplyOptRsp& operator=(const MarryApplyOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryApplyOptRsp& default_instance();

  void Swap(MarryApplyOptRsp* other);

  // implements Message ----------------------------------------------

  MarryApplyOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryApplyOptRsp& from);
  void MergeFrom(const MarryApplyOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryApplyOptRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryApplyOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryRefuse : public ::google::protobuf::Message {
 public:
  NotifyMarryRefuse();
  virtual ~NotifyMarryRefuse();

  NotifyMarryRefuse(const NotifyMarryRefuse& from);

  inline NotifyMarryRefuse& operator=(const NotifyMarryRefuse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryRefuse& default_instance();

  void Swap(NotifyMarryRefuse* other);

  // implements Message ----------------------------------------------

  NotifyMarryRefuse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryRefuse& from);
  void MergeFrom(const NotifyMarryRefuse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .proto_ff.RolePlayerMiniInfo dst = 2;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 2;
  inline const ::proto_ff::RolePlayerMiniInfo& dst() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_dst();
  inline ::proto_ff::RolePlayerMiniInfo* release_dst();
  inline void set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryRefuse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_dst();
  inline void clear_has_dst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* dst_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryRefuse* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryCmpt : public ::google::protobuf::Message {
 public:
  NotifyMarryCmpt();
  virtual ~NotifyMarryCmpt();

  NotifyMarryCmpt(const NotifyMarryCmpt& from);

  inline NotifyMarryCmpt& operator=(const NotifyMarryCmpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryCmpt& default_instance();

  void Swap(NotifyMarryCmpt* other);

  // implements Message ----------------------------------------------

  NotifyMarryCmpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryCmpt& from);
  void MergeFrom(const NotifyMarryCmpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RolePlayerMiniInfo dst = 1;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& dst() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_dst();
  inline ::proto_ff::RolePlayerMiniInfo* release_dst();
  inline void set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst);

  // optional int32 gear = 2;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 2;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // optional uint64 applyer = 3;
  inline bool has_applyer() const;
  inline void clear_applyer();
  static const int kApplyerFieldNumber = 3;
  inline ::google::protobuf::uint64 applyer() const;
  inline void set_applyer(::google::protobuf::uint64 value);

  // optional int32 marry_id = 4;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 4;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryCmpt)
 private:
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_gear();
  inline void clear_has_gear();
  inline void set_has_applyer();
  inline void clear_has_applyer();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* dst_;
  ::google::protobuf::uint64 applyer_;
  ::google::protobuf::int32 gear_;
  ::google::protobuf::int32 marry_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryCmpt* default_instance_;
};
// -------------------------------------------------------------------

class NotifyNewMarry : public ::google::protobuf::Message {
 public:
  NotifyNewMarry();
  virtual ~NotifyNewMarry();

  NotifyNewMarry(const NotifyNewMarry& from);

  inline NotifyNewMarry& operator=(const NotifyNewMarry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyNewMarry& default_instance();

  void Swap(NotifyNewMarry* other);

  // implements Message ----------------------------------------------

  NotifyNewMarry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyNewMarry& from);
  void MergeFrom(const NotifyNewMarry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RolePlayerMiniInfo src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& src() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_src();
  inline ::proto_ff::RolePlayerMiniInfo* release_src();
  inline void set_allocated_src(::proto_ff::RolePlayerMiniInfo* src);

  // optional .proto_ff.RolePlayerMiniInfo dst = 2;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 2;
  inline const ::proto_ff::RolePlayerMiniInfo& dst() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_dst();
  inline ::proto_ff::RolePlayerMiniInfo* release_dst();
  inline void set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst);

  // optional int32 marry_id = 3;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 3;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // optional int32 gear = 4;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 4;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyNewMarry)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_gear();
  inline void clear_has_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* src_;
  ::proto_ff::RolePlayerMiniInfo* dst_;
  ::google::protobuf::int32 marry_id_;
  ::google::protobuf::int32 gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyNewMarry* default_instance_;
};
// -------------------------------------------------------------------

class MarryRecvGearRewardReq : public ::google::protobuf::Message {
 public:
  MarryRecvGearRewardReq();
  virtual ~MarryRecvGearRewardReq();

  MarryRecvGearRewardReq(const MarryRecvGearRewardReq& from);

  inline MarryRecvGearRewardReq& operator=(const MarryRecvGearRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryRecvGearRewardReq& default_instance();

  void Swap(MarryRecvGearRewardReq* other);

  // implements Message ----------------------------------------------

  MarryRecvGearRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryRecvGearRewardReq& from);
  void MergeFrom(const MarryRecvGearRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryRecvGearRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryRecvGearRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryRecvGearRewardRsp : public ::google::protobuf::Message {
 public:
  MarryRecvGearRewardRsp();
  virtual ~MarryRecvGearRewardRsp();

  MarryRecvGearRewardRsp(const MarryRecvGearRewardRsp& from);

  inline MarryRecvGearRewardRsp& operator=(const MarryRecvGearRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryRecvGearRewardRsp& default_instance();

  void Swap(MarryRecvGearRewardRsp* other);

  // implements Message ----------------------------------------------

  MarryRecvGearRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryRecvGearRewardRsp& from);
  void MergeFrom(const MarryRecvGearRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryRecvGearRewardRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryRecvGearRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryRecvChildReq : public ::google::protobuf::Message {
 public:
  MarryRecvChildReq();
  virtual ~MarryRecvChildReq();

  MarryRecvChildReq(const MarryRecvChildReq& from);

  inline MarryRecvChildReq& operator=(const MarryRecvChildReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryRecvChildReq& default_instance();

  void Swap(MarryRecvChildReq* other);

  // implements Message ----------------------------------------------

  MarryRecvChildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryRecvChildReq& from);
  void MergeFrom(const MarryRecvChildReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 child_id = 1;
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 1;
  inline ::google::protobuf::int32 child_id() const;
  inline void set_child_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryRecvChildReq)
 private:
  inline void set_has_child_id();
  inline void clear_has_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 child_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryRecvChildReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryRecvChildRsp : public ::google::protobuf::Message {
 public:
  MarryRecvChildRsp();
  virtual ~MarryRecvChildRsp();

  MarryRecvChildRsp(const MarryRecvChildRsp& from);

  inline MarryRecvChildRsp& operator=(const MarryRecvChildRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryRecvChildRsp& default_instance();

  void Swap(MarryRecvChildRsp* other);

  // implements Message ----------------------------------------------

  MarryRecvChildRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryRecvChildRsp& from);
  void MergeFrom(const MarryRecvChildRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 child_id = 2;
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 2;
  inline ::google::protobuf::int32 child_id() const;
  inline void set_child_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryRecvChildRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_child_id();
  inline void clear_has_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 child_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryRecvChildRsp* default_instance_;
};
// -------------------------------------------------------------------

class DivorceReq : public ::google::protobuf::Message {
 public:
  DivorceReq();
  virtual ~DivorceReq();

  DivorceReq(const DivorceReq& from);

  inline DivorceReq& operator=(const DivorceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DivorceReq& default_instance();

  void Swap(DivorceReq* other);

  // implements Message ----------------------------------------------

  DivorceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DivorceReq& from);
  void MergeFrom(const DivorceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DivorceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static DivorceReq* default_instance_;
};
// -------------------------------------------------------------------

class DivorceRsp : public ::google::protobuf::Message {
 public:
  DivorceRsp();
  virtual ~DivorceRsp();

  DivorceRsp(const DivorceRsp& from);

  inline DivorceRsp& operator=(const DivorceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DivorceRsp& default_instance();

  void Swap(DivorceRsp* other);

  // implements Message ----------------------------------------------

  DivorceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DivorceRsp& from);
  void MergeFrom(const DivorceRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DivorceRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static DivorceRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryChildOptReq : public ::google::protobuf::Message {
 public:
  MarryChildOptReq();
  virtual ~MarryChildOptReq();

  MarryChildOptReq(const MarryChildOptReq& from);

  inline MarryChildOptReq& operator=(const MarryChildOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryChildOptReq& default_instance();

  void Swap(MarryChildOptReq* other);

  // implements Message ----------------------------------------------

  MarryChildOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryChildOptReq& from);
  void MergeFrom(const MarryChildOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 child_id = 2;
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 2;
  inline ::google::protobuf::int32 child_id() const;
  inline void set_child_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryChildOptReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_child_id();
  inline void clear_has_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 child_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryChildOptReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryChildOptRsp : public ::google::protobuf::Message {
 public:
  MarryChildOptRsp();
  virtual ~MarryChildOptRsp();

  MarryChildOptRsp(const MarryChildOptRsp& from);

  inline MarryChildOptRsp& operator=(const MarryChildOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryChildOptRsp& default_instance();

  void Swap(MarryChildOptRsp* other);

  // implements Message ----------------------------------------------

  MarryChildOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryChildOptRsp& from);
  void MergeFrom(const MarryChildOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 child_id = 3;
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 3;
  inline ::google::protobuf::int32 child_id() const;
  inline void set_child_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryChildOptRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_child_id();
  inline void clear_has_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 child_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryChildOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class ExpressReq : public ::google::protobuf::Message {
 public:
  ExpressReq();
  virtual ~ExpressReq();

  ExpressReq(const ExpressReq& from);

  inline ExpressReq& operator=(const ExpressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressReq& default_instance();

  void Swap(ExpressReq* other);

  // implements Message ----------------------------------------------

  ExpressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpressReq& from);
  void MergeFrom(const ExpressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::uint64 item() const;
  inline void set_item(::google::protobuf::uint64 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 text_id = 4;
  inline bool has_text_id() const;
  inline void clear_text_id();
  static const int kTextIdFieldNumber = 4;
  inline ::google::protobuf::int32 text_id() const;
  inline void set_text_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExpressReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_text_id();
  inline void clear_has_text_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 item_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 text_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static ExpressReq* default_instance_;
};
// -------------------------------------------------------------------

class ExpressRsp : public ::google::protobuf::Message {
 public:
  ExpressRsp();
  virtual ~ExpressRsp();

  ExpressRsp(const ExpressRsp& from);

  inline ExpressRsp& operator=(const ExpressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressRsp& default_instance();

  void Swap(ExpressRsp* other);

  // implements Message ----------------------------------------------

  ExpressRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpressRsp& from);
  void MergeFrom(const ExpressRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline ::google::protobuf::uint64 item() const;
  inline void set_item(::google::protobuf::uint64 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 text_id = 5;
  inline bool has_text_id() const;
  inline void clear_text_id();
  static const int kTextIdFieldNumber = 5;
  inline ::google::protobuf::int32 text_id() const;
  inline void set_text_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExpressRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_text_id();
  inline void clear_has_text_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 item_;
  ::google::protobuf::int32 text_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static ExpressRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyExpressToDst : public ::google::protobuf::Message {
 public:
  NotifyExpressToDst();
  virtual ~NotifyExpressToDst();

  NotifyExpressToDst(const NotifyExpressToDst& from);

  inline NotifyExpressToDst& operator=(const NotifyExpressToDst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyExpressToDst& default_instance();

  void Swap(NotifyExpressToDst* other);

  // implements Message ----------------------------------------------

  NotifyExpressToDst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyExpressToDst& from);
  void MergeFrom(const NotifyExpressToDst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RolePlayerMiniInfo src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& src() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_src();
  inline ::proto_ff::RolePlayerMiniInfo* release_src();
  inline void set_allocated_src(::proto_ff::RolePlayerMiniInfo* src);

  // optional uint64 item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::uint64 item() const;
  inline void set_item(::google::protobuf::uint64 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 text_id = 4;
  inline bool has_text_id() const;
  inline void clear_text_id();
  static const int kTextIdFieldNumber = 4;
  inline ::google::protobuf::int32 text_id() const;
  inline void set_text_id(::google::protobuf::int32 value);

  // optional uint64 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyExpressToDst)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_text_id();
  inline void clear_has_text_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* src_;
  ::google::protobuf::uint64 item_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 text_id_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyExpressToDst* default_instance_;
};
// -------------------------------------------------------------------

class ExpressDataReq : public ::google::protobuf::Message {
 public:
  ExpressDataReq();
  virtual ~ExpressDataReq();

  ExpressDataReq(const ExpressDataReq& from);

  inline ExpressDataReq& operator=(const ExpressDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressDataReq& default_instance();

  void Swap(ExpressDataReq* other);

  // implements Message ----------------------------------------------

  ExpressDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpressDataReq& from);
  void MergeFrom(const ExpressDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExpressDataReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static ExpressDataReq* default_instance_;
};
// -------------------------------------------------------------------

class ExpressDataRsp : public ::google::protobuf::Message {
 public:
  ExpressDataRsp();
  virtual ~ExpressDataRsp();

  ExpressDataRsp(const ExpressDataRsp& from);

  inline ExpressDataRsp& operator=(const ExpressDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressDataRsp& default_instance();

  void Swap(ExpressDataRsp* other);

  // implements Message ----------------------------------------------

  ExpressDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpressDataRsp& from);
  void MergeFrom(const ExpressDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.ExpressLog logs = 2;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 2;
  inline const ::proto_ff::ExpressLog& logs(int index) const;
  inline ::proto_ff::ExpressLog* mutable_logs(int index);
  inline ::proto_ff::ExpressLog* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:proto_ff.ExpressDataRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog > logs_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static ExpressDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryInviteDstBuyDupReq : public ::google::protobuf::Message {
 public:
  MarryInviteDstBuyDupReq();
  virtual ~MarryInviteDstBuyDupReq();

  MarryInviteDstBuyDupReq(const MarryInviteDstBuyDupReq& from);

  inline MarryInviteDstBuyDupReq& operator=(const MarryInviteDstBuyDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryInviteDstBuyDupReq& default_instance();

  void Swap(MarryInviteDstBuyDupReq* other);

  // implements Message ----------------------------------------------

  MarryInviteDstBuyDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryInviteDstBuyDupReq& from);
  void MergeFrom(const MarryInviteDstBuyDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryInviteDstBuyDupReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryInviteDstBuyDupReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryInviteDstBuyDupRsp : public ::google::protobuf::Message {
 public:
  MarryInviteDstBuyDupRsp();
  virtual ~MarryInviteDstBuyDupRsp();

  MarryInviteDstBuyDupRsp(const MarryInviteDstBuyDupRsp& from);

  inline MarryInviteDstBuyDupRsp& operator=(const MarryInviteDstBuyDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryInviteDstBuyDupRsp& default_instance();

  void Swap(MarryInviteDstBuyDupRsp* other);

  // implements Message ----------------------------------------------

  MarryInviteDstBuyDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryInviteDstBuyDupRsp& from);
  void MergeFrom(const MarryInviteDstBuyDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryInviteDstBuyDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryInviteDstBuyDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryDstBuyDup : public ::google::protobuf::Message {
 public:
  NotifyMarryDstBuyDup();
  virtual ~NotifyMarryDstBuyDup();

  NotifyMarryDstBuyDup(const NotifyMarryDstBuyDup& from);

  inline NotifyMarryDstBuyDup& operator=(const NotifyMarryDstBuyDup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryDstBuyDup& default_instance();

  void Swap(NotifyMarryDstBuyDup* other);

  // implements Message ----------------------------------------------

  NotifyMarryDstBuyDup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryDstBuyDup& from);
  void MergeFrom(const NotifyMarryDstBuyDup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryDstBuyDup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryDstBuyDup* default_instance_;
};
// -------------------------------------------------------------------

class MarryBuyRefuseReq : public ::google::protobuf::Message {
 public:
  MarryBuyRefuseReq();
  virtual ~MarryBuyRefuseReq();

  MarryBuyRefuseReq(const MarryBuyRefuseReq& from);

  inline MarryBuyRefuseReq& operator=(const MarryBuyRefuseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBuyRefuseReq& default_instance();

  void Swap(MarryBuyRefuseReq* other);

  // implements Message ----------------------------------------------

  MarryBuyRefuseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBuyRefuseReq& from);
  void MergeFrom(const MarryBuyRefuseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBuyRefuseReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBuyRefuseReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryBuyDupReq : public ::google::protobuf::Message {
 public:
  MarryBuyDupReq();
  virtual ~MarryBuyDupReq();

  MarryBuyDupReq(const MarryBuyDupReq& from);

  inline MarryBuyDupReq& operator=(const MarryBuyDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBuyDupReq& default_instance();

  void Swap(MarryBuyDupReq* other);

  // implements Message ----------------------------------------------

  MarryBuyDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBuyDupReq& from);
  void MergeFrom(const MarryBuyDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBuyDupReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBuyDupReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryBuyDupRsp : public ::google::protobuf::Message {
 public:
  MarryBuyDupRsp();
  virtual ~MarryBuyDupRsp();

  MarryBuyDupRsp(const MarryBuyDupRsp& from);

  inline MarryBuyDupRsp& operator=(const MarryBuyDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBuyDupRsp& default_instance();

  void Swap(MarryBuyDupRsp* other);

  // implements Message ----------------------------------------------

  MarryBuyDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBuyDupRsp& from);
  void MergeFrom(const MarryBuyDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBuyDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBuyDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryBuyResult : public ::google::protobuf::Message {
 public:
  NotifyMarryBuyResult();
  virtual ~NotifyMarryBuyResult();

  NotifyMarryBuyResult(const NotifyMarryBuyResult& from);

  inline NotifyMarryBuyResult& operator=(const NotifyMarryBuyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryBuyResult& default_instance();

  void Swap(NotifyMarryBuyResult* other);

  // implements Message ----------------------------------------------

  NotifyMarryBuyResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryBuyResult& from);
  void MergeFrom(const NotifyMarryBuyResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryBuyResult)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryBuyResult* default_instance_;
};
// -------------------------------------------------------------------

class MarryLockLvReq : public ::google::protobuf::Message {
 public:
  MarryLockLvReq();
  virtual ~MarryLockLvReq();

  MarryLockLvReq(const MarryLockLvReq& from);

  inline MarryLockLvReq& operator=(const MarryLockLvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryLockLvReq& default_instance();

  void Swap(MarryLockLvReq* other);

  // implements Message ----------------------------------------------

  MarryLockLvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryLockLvReq& from);
  void MergeFrom(const MarryLockLvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryLockLvReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryLockLvReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryLockLvRsp : public ::google::protobuf::Message {
 public:
  MarryLockLvRsp();
  virtual ~MarryLockLvRsp();

  MarryLockLvRsp(const MarryLockLvRsp& from);

  inline MarryLockLvRsp& operator=(const MarryLockLvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryLockLvRsp& default_instance();

  void Swap(MarryLockLvRsp* other);

  // implements Message ----------------------------------------------

  MarryLockLvRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryLockLvRsp& from);
  void MergeFrom(const MarryLockLvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryLockLvRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryLockLvRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryBoxBuyReq : public ::google::protobuf::Message {
 public:
  MarryBoxBuyReq();
  virtual ~MarryBoxBuyReq();

  MarryBoxBuyReq(const MarryBoxBuyReq& from);

  inline MarryBoxBuyReq& operator=(const MarryBoxBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBoxBuyReq& default_instance();

  void Swap(MarryBoxBuyReq* other);

  // implements Message ----------------------------------------------

  MarryBoxBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBoxBuyReq& from);
  void MergeFrom(const MarryBoxBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBoxBuyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBoxBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryBoxBuyRsp : public ::google::protobuf::Message {
 public:
  MarryBoxBuyRsp();
  virtual ~MarryBoxBuyRsp();

  MarryBoxBuyRsp(const MarryBoxBuyRsp& from);

  inline MarryBoxBuyRsp& operator=(const MarryBoxBuyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBoxBuyRsp& default_instance();

  void Swap(MarryBoxBuyRsp* other);

  // implements Message ----------------------------------------------

  MarryBoxBuyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBoxBuyRsp& from);
  void MergeFrom(const MarryBoxBuyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBoxBuyRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBoxBuyRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryBoxRecvReq : public ::google::protobuf::Message {
 public:
  MarryBoxRecvReq();
  virtual ~MarryBoxRecvReq();

  MarryBoxRecvReq(const MarryBoxRecvReq& from);

  inline MarryBoxRecvReq& operator=(const MarryBoxRecvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBoxRecvReq& default_instance();

  void Swap(MarryBoxRecvReq* other);

  // implements Message ----------------------------------------------

  MarryBoxRecvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBoxRecvReq& from);
  void MergeFrom(const MarryBoxRecvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBoxRecvReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBoxRecvReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryBoxRecvRsp : public ::google::protobuf::Message {
 public:
  MarryBoxRecvRsp();
  virtual ~MarryBoxRecvRsp();

  MarryBoxRecvRsp(const MarryBoxRecvRsp& from);

  inline MarryBoxRecvRsp& operator=(const MarryBoxRecvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryBoxRecvRsp& default_instance();

  void Swap(MarryBoxRecvRsp* other);

  // implements Message ----------------------------------------------

  MarryBoxRecvRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryBoxRecvRsp& from);
  void MergeFrom(const MarryBoxRecvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryBoxRecvRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryBoxRecvRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryDupSelect : public ::google::protobuf::Message {
 public:
  NotifyMarryDupSelect();
  virtual ~NotifyMarryDupSelect();

  NotifyMarryDupSelect(const NotifyMarryDupSelect& from);

  inline NotifyMarryDupSelect& operator=(const NotifyMarryDupSelect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryDupSelect& default_instance();

  void Swap(NotifyMarryDupSelect* other);

  // implements Message ----------------------------------------------

  NotifyMarryDupSelect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryDupSelect& from);
  void MergeFrom(const NotifyMarryDupSelect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryDupSelect)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryDupSelect* default_instance_;
};
// -------------------------------------------------------------------

class MarryDupSelectReq : public ::google::protobuf::Message {
 public:
  MarryDupSelectReq();
  virtual ~MarryDupSelectReq();

  MarryDupSelectReq(const MarryDupSelectReq& from);

  inline MarryDupSelectReq& operator=(const MarryDupSelectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryDupSelectReq& default_instance();

  void Swap(MarryDupSelectReq* other);

  // implements Message ----------------------------------------------

  MarryDupSelectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryDupSelectReq& from);
  void MergeFrom(const MarryDupSelectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryDupSelectReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryDupSelectReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryDupSelectRsp : public ::google::protobuf::Message {
 public:
  MarryDupSelectRsp();
  virtual ~MarryDupSelectRsp();

  MarryDupSelectRsp(const MarryDupSelectRsp& from);

  inline MarryDupSelectRsp& operator=(const MarryDupSelectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryDupSelectRsp& default_instance();

  void Swap(MarryDupSelectRsp* other);

  // implements Message ----------------------------------------------

  MarryDupSelectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryDupSelectRsp& from);
  void MergeFrom(const MarryDupSelectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryDupSelectRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryDupSelectRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryDupResult : public ::google::protobuf::Message {
 public:
  NotifyMarryDupResult();
  virtual ~NotifyMarryDupResult();

  NotifyMarryDupResult(const NotifyMarryDupResult& from);

  inline NotifyMarryDupResult& operator=(const NotifyMarryDupResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryDupResult& default_instance();

  void Swap(NotifyMarryDupResult* other);

  // implements Message ----------------------------------------------

  NotifyMarryDupResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryDupResult& from);
  void MergeFrom(const NotifyMarryDupResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 boxid = 4;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 4;
  inline ::google::protobuf::int32 boxid() const;
  inline void set_boxid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryDupResult)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_boxid();
  inline void clear_has_boxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 boxid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryDupResult* default_instance_;
};
// -------------------------------------------------------------------

class SearchMarryFriendReq : public ::google::protobuf::Message {
 public:
  SearchMarryFriendReq();
  virtual ~SearchMarryFriendReq();

  SearchMarryFriendReq(const SearchMarryFriendReq& from);

  inline SearchMarryFriendReq& operator=(const SearchMarryFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchMarryFriendReq& default_instance();

  void Swap(SearchMarryFriendReq* other);

  // implements Message ----------------------------------------------

  SearchMarryFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchMarryFriendReq& from);
  void MergeFrom(const SearchMarryFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.SearchMarryFriendReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static SearchMarryFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class SearchMarryFriendRsp : public ::google::protobuf::Message {
 public:
  SearchMarryFriendRsp();
  virtual ~SearchMarryFriendRsp();

  SearchMarryFriendRsp(const SearchMarryFriendRsp& from);

  inline SearchMarryFriendRsp& operator=(const SearchMarryFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchMarryFriendRsp& default_instance();

  void Swap(SearchMarryFriendRsp* other);

  // implements Message ----------------------------------------------

  SearchMarryFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchMarryFriendRsp& from);
  void MergeFrom(const SearchMarryFriendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.RolePlayerMiniInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& infos(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_infos(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.SearchMarryFriendRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static SearchMarryFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryTaskRecvReq : public ::google::protobuf::Message {
 public:
  MarryTaskRecvReq();
  virtual ~MarryTaskRecvReq();

  MarryTaskRecvReq(const MarryTaskRecvReq& from);

  inline MarryTaskRecvReq& operator=(const MarryTaskRecvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryTaskRecvReq& default_instance();

  void Swap(MarryTaskRecvReq* other);

  // implements Message ----------------------------------------------

  MarryTaskRecvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryTaskRecvReq& from);
  void MergeFrom(const MarryTaskRecvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryTaskRecvReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryTaskRecvReq* default_instance_;
};
// -------------------------------------------------------------------

class MarryTaskRecvRsp : public ::google::protobuf::Message {
 public:
  MarryTaskRecvRsp();
  virtual ~MarryTaskRecvRsp();

  MarryTaskRecvRsp(const MarryTaskRecvRsp& from);

  inline MarryTaskRecvRsp& operator=(const MarryTaskRecvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryTaskRecvRsp& default_instance();

  void Swap(MarryTaskRecvRsp* other);

  // implements Message ----------------------------------------------

  MarryTaskRecvRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryTaskRecvRsp& from);
  void MergeFrom(const MarryTaskRecvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryTaskRecvRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryTaskRecvRsp* default_instance_;
};
// -------------------------------------------------------------------

class MarryWeddingDataReq : public ::google::protobuf::Message {
 public:
  MarryWeddingDataReq();
  virtual ~MarryWeddingDataReq();

  MarryWeddingDataReq(const MarryWeddingDataReq& from);

  inline MarryWeddingDataReq& operator=(const MarryWeddingDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryWeddingDataReq& default_instance();

  void Swap(MarryWeddingDataReq* other);

  // implements Message ----------------------------------------------

  MarryWeddingDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryWeddingDataReq& from);
  void MergeFrom(const MarryWeddingDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MarryWeddingDataReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MarryWeddingDataReq* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingData : public ::google::protobuf::Message {
 public:
  NotifyWeddingData();
  virtual ~NotifyWeddingData();

  NotifyWeddingData(const NotifyWeddingData& from);

  inline NotifyWeddingData& operator=(const NotifyWeddingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingData& default_instance();

  void Swap(NotifyWeddingData* other);

  // implements Message ----------------------------------------------

  NotifyWeddingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingData& from);
  void MergeFrom(const NotifyWeddingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.WeddingSimpleInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::WeddingSimpleInfo& infos(int index) const;
  inline ::proto_ff::WeddingSimpleInfo* mutable_infos(int index);
  inline ::proto_ff::WeddingSimpleInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >*
      mutable_infos();

  // optional int32 wedding_num = 3;
  inline bool has_wedding_num() const;
  inline void clear_wedding_num();
  static const int kWeddingNumFieldNumber = 3;
  inline ::google::protobuf::int32 wedding_num() const;
  inline void set_wedding_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_wedding_num();
  inline void clear_has_wedding_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo > infos_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 wedding_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingPlan : public ::google::protobuf::Message {
 public:
  NotifyWeddingPlan();
  virtual ~NotifyWeddingPlan();

  NotifyWeddingPlan(const NotifyWeddingPlan& from);

  inline NotifyWeddingPlan& operator=(const NotifyWeddingPlan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingPlan& default_instance();

  void Swap(NotifyWeddingPlan* other);

  // implements Message ----------------------------------------------

  NotifyWeddingPlan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingPlan& from);
  void MergeFrom(const NotifyWeddingPlan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.WeddingSimpleInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::WeddingSimpleInfo& infos(int index) const;
  inline ::proto_ff::WeddingSimpleInfo* mutable_infos(int index);
  inline ::proto_ff::WeddingSimpleInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingPlan)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingPlan* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingStep : public ::google::protobuf::Message {
 public:
  NotifyWeddingStep();
  virtual ~NotifyWeddingStep();

  NotifyWeddingStep(const NotifyWeddingStep& from);

  inline NotifyWeddingStep& operator=(const NotifyWeddingStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingStep& default_instance();

  void Swap(NotifyWeddingStep* other);

  // implements Message ----------------------------------------------

  NotifyWeddingStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingStep& from);
  void MergeFrom(const NotifyWeddingStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // optional int32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingStep)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;
  ::google::protobuf::int32 step_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingStep* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingRole : public ::google::protobuf::Message {
 public:
  NotifyWeddingRole();
  virtual ~NotifyWeddingRole();

  NotifyWeddingRole(const NotifyWeddingRole& from);

  inline NotifyWeddingRole& operator=(const NotifyWeddingRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingRole& default_instance();

  void Swap(NotifyWeddingRole* other);

  // implements Message ----------------------------------------------

  NotifyWeddingRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingRole& from);
  void MergeFrom(const NotifyWeddingRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 can_join_wedding = 1;
  inline int can_join_wedding_size() const;
  inline void clear_can_join_wedding();
  static const int kCanJoinWeddingFieldNumber = 1;
  inline ::google::protobuf::int32 can_join_wedding(int index) const;
  inline void set_can_join_wedding(int index, ::google::protobuf::int32 value);
  inline void add_can_join_wedding(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      can_join_wedding() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_can_join_wedding();

  // repeated int32 apply_wedding = 2;
  inline int apply_wedding_size() const;
  inline void clear_apply_wedding();
  static const int kApplyWeddingFieldNumber = 2;
  inline ::google::protobuf::int32 apply_wedding(int index) const;
  inline void set_apply_wedding(int index, ::google::protobuf::int32 value);
  inline void add_apply_wedding(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      apply_wedding() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_apply_wedding();

  // repeated .proto_ff.WeddingDetail detail = 3;
  inline int detail_size() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 3;
  inline const ::proto_ff::WeddingDetail& detail(int index) const;
  inline ::proto_ff::WeddingDetail* mutable_detail(int index);
  inline ::proto_ff::WeddingDetail* add_detail();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDetail >&
      detail() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDetail >*
      mutable_detail();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingRole)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > can_join_wedding_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > apply_wedding_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDetail > detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingRole* default_instance_;
};
// -------------------------------------------------------------------

class MakeWeddingReq : public ::google::protobuf::Message {
 public:
  MakeWeddingReq();
  virtual ~MakeWeddingReq();

  MakeWeddingReq(const MakeWeddingReq& from);

  inline MakeWeddingReq& operator=(const MakeWeddingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeWeddingReq& default_instance();

  void Swap(MakeWeddingReq* other);

  // implements Message ----------------------------------------------

  MakeWeddingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeWeddingReq& from);
  void MergeFrom(const MakeWeddingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // optional int32 wedding_gear = 2;
  inline bool has_wedding_gear() const;
  inline void clear_wedding_gear();
  static const int kWeddingGearFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_gear() const;
  inline void set_wedding_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MakeWeddingReq)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_wedding_gear();
  inline void clear_has_wedding_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;
  ::google::protobuf::int32 wedding_gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MakeWeddingReq* default_instance_;
};
// -------------------------------------------------------------------

class MakeWeddingRsp : public ::google::protobuf::Message {
 public:
  MakeWeddingRsp();
  virtual ~MakeWeddingRsp();

  MakeWeddingRsp(const MakeWeddingRsp& from);

  inline MakeWeddingRsp& operator=(const MakeWeddingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeWeddingRsp& default_instance();

  void Swap(MakeWeddingRsp* other);

  // implements Message ----------------------------------------------

  MakeWeddingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeWeddingRsp& from);
  void MergeFrom(const MakeWeddingRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MakeWeddingRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static MakeWeddingRsp* default_instance_;
};
// -------------------------------------------------------------------

class WeddingInviteReq : public ::google::protobuf::Message {
 public:
  WeddingInviteReq();
  virtual ~WeddingInviteReq();

  WeddingInviteReq(const WeddingInviteReq& from);

  inline WeddingInviteReq& operator=(const WeddingInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingInviteReq& default_instance();

  void Swap(WeddingInviteReq* other);

  // implements Message ----------------------------------------------

  WeddingInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingInviteReq& from);
  void MergeFrom(const WeddingInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 invite_type = 1;
  inline bool has_invite_type() const;
  inline void clear_invite_type();
  static const int kInviteTypeFieldNumber = 1;
  inline ::google::protobuf::int32 invite_type() const;
  inline void set_invite_type(::google::protobuf::int32 value);

  // repeated uint64 invite_cid_list = 2;
  inline int invite_cid_list_size() const;
  inline void clear_invite_cid_list();
  static const int kInviteCidListFieldNumber = 2;
  inline ::google::protobuf::uint64 invite_cid_list(int index) const;
  inline void set_invite_cid_list(int index, ::google::protobuf::uint64 value);
  inline void add_invite_cid_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      invite_cid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_invite_cid_list();

  // optional int32 wedding_id = 3;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 3;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingInviteReq)
 private:
  inline void set_has_invite_type();
  inline void clear_has_invite_type();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > invite_cid_list_;
  ::google::protobuf::int32 invite_type_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class WeddingInviteRsp : public ::google::protobuf::Message {
 public:
  WeddingInviteRsp();
  virtual ~WeddingInviteRsp();

  WeddingInviteRsp(const WeddingInviteRsp& from);

  inline WeddingInviteRsp& operator=(const WeddingInviteRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingInviteRsp& default_instance();

  void Swap(WeddingInviteRsp* other);

  // implements Message ----------------------------------------------

  WeddingInviteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingInviteRsp& from);
  void MergeFrom(const WeddingInviteRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 invite_type = 2;
  inline bool has_invite_type() const;
  inline void clear_invite_type();
  static const int kInviteTypeFieldNumber = 2;
  inline ::google::protobuf::int32 invite_type() const;
  inline void set_invite_type(::google::protobuf::int32 value);

  // repeated uint64 invite_cid_list = 3;
  inline int invite_cid_list_size() const;
  inline void clear_invite_cid_list();
  static const int kInviteCidListFieldNumber = 3;
  inline ::google::protobuf::uint64 invite_cid_list(int index) const;
  inline void set_invite_cid_list(int index, ::google::protobuf::uint64 value);
  inline void add_invite_cid_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      invite_cid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_invite_cid_list();

  // optional int32 wedding_id = 4;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 4;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingInviteRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_invite_type();
  inline void clear_has_invite_type();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 invite_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > invite_cid_list_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingInviteRsp* default_instance_;
};
// -------------------------------------------------------------------

class EnterWeddingDupReq : public ::google::protobuf::Message {
 public:
  EnterWeddingDupReq();
  virtual ~EnterWeddingDupReq();

  EnterWeddingDupReq(const EnterWeddingDupReq& from);

  inline EnterWeddingDupReq& operator=(const EnterWeddingDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWeddingDupReq& default_instance();

  void Swap(EnterWeddingDupReq* other);

  // implements Message ----------------------------------------------

  EnterWeddingDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterWeddingDupReq& from);
  void MergeFrom(const EnterWeddingDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterWeddingDupReq)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static EnterWeddingDupReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterWeddingDupRsp : public ::google::protobuf::Message {
 public:
  EnterWeddingDupRsp();
  virtual ~EnterWeddingDupRsp();

  EnterWeddingDupRsp(const EnterWeddingDupRsp& from);

  inline EnterWeddingDupRsp& operator=(const EnterWeddingDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWeddingDupRsp& default_instance();

  void Swap(EnterWeddingDupRsp* other);

  // implements Message ----------------------------------------------

  EnterWeddingDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterWeddingDupRsp& from);
  void MergeFrom(const EnterWeddingDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 wedding_id = 2;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterWeddingDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static EnterWeddingDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingInvite : public ::google::protobuf::Message {
 public:
  NotifyWeddingInvite();
  virtual ~NotifyWeddingInvite();

  NotifyWeddingInvite(const NotifyWeddingInvite& from);

  inline NotifyWeddingInvite& operator=(const NotifyWeddingInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingInvite& default_instance();

  void Swap(NotifyWeddingInvite* other);

  // implements Message ----------------------------------------------

  NotifyWeddingInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingInvite& from);
  void MergeFrom(const NotifyWeddingInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingInvite)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingInvite* default_instance_;
};
// -------------------------------------------------------------------

class WeddingBuySeatReq : public ::google::protobuf::Message {
 public:
  WeddingBuySeatReq();
  virtual ~WeddingBuySeatReq();

  WeddingBuySeatReq(const WeddingBuySeatReq& from);

  inline WeddingBuySeatReq& operator=(const WeddingBuySeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingBuySeatReq& default_instance();

  void Swap(WeddingBuySeatReq* other);

  // implements Message ----------------------------------------------

  WeddingBuySeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingBuySeatReq& from);
  void MergeFrom(const WeddingBuySeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingBuySeatReq)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingBuySeatReq* default_instance_;
};
// -------------------------------------------------------------------

class WeddingBuySeatRsp : public ::google::protobuf::Message {
 public:
  WeddingBuySeatRsp();
  virtual ~WeddingBuySeatRsp();

  WeddingBuySeatRsp(const WeddingBuySeatRsp& from);

  inline WeddingBuySeatRsp& operator=(const WeddingBuySeatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingBuySeatRsp& default_instance();

  void Swap(WeddingBuySeatRsp* other);

  // implements Message ----------------------------------------------

  WeddingBuySeatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingBuySeatRsp& from);
  void MergeFrom(const WeddingBuySeatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 wedding_id = 2;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingBuySeatRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingBuySeatRsp* default_instance_;
};
// -------------------------------------------------------------------

class WeddingApplyReq : public ::google::protobuf::Message {
 public:
  WeddingApplyReq();
  virtual ~WeddingApplyReq();

  WeddingApplyReq(const WeddingApplyReq& from);

  inline WeddingApplyReq& operator=(const WeddingApplyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingApplyReq& default_instance();

  void Swap(WeddingApplyReq* other);

  // implements Message ----------------------------------------------

  WeddingApplyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingApplyReq& from);
  void MergeFrom(const WeddingApplyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingApplyReq)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingApplyReq* default_instance_;
};
// -------------------------------------------------------------------

class WeddingApplyRsp : public ::google::protobuf::Message {
 public:
  WeddingApplyRsp();
  virtual ~WeddingApplyRsp();

  WeddingApplyRsp(const WeddingApplyRsp& from);

  inline WeddingApplyRsp& operator=(const WeddingApplyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingApplyRsp& default_instance();

  void Swap(WeddingApplyRsp* other);

  // implements Message ----------------------------------------------

  WeddingApplyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingApplyRsp& from);
  void MergeFrom(const WeddingApplyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 wedding_id = 2;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingApplyRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingApplyRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingTourFollow : public ::google::protobuf::Message {
 public:
  NotifyWeddingTourFollow();
  virtual ~NotifyWeddingTourFollow();

  NotifyWeddingTourFollow(const NotifyWeddingTourFollow& from);

  inline NotifyWeddingTourFollow& operator=(const NotifyWeddingTourFollow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingTourFollow& default_instance();

  void Swap(NotifyWeddingTourFollow* other);

  // implements Message ----------------------------------------------

  NotifyWeddingTourFollow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingTourFollow& from);
  void MergeFrom(const NotifyWeddingTourFollow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 monster_cid = 1;
  inline bool has_monster_cid() const;
  inline void clear_monster_cid();
  static const int kMonsterCidFieldNumber = 1;
  inline ::google::protobuf::uint64 monster_cid() const;
  inline void set_monster_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingTourFollow)
 private:
  inline void set_has_monster_cid();
  inline void clear_has_monster_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 monster_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingTourFollow* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingApply : public ::google::protobuf::Message {
 public:
  NotifyWeddingApply();
  virtual ~NotifyWeddingApply();

  NotifyWeddingApply(const NotifyWeddingApply& from);

  inline NotifyWeddingApply& operator=(const NotifyWeddingApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingApply& default_instance();

  void Swap(NotifyWeddingApply* other);

  // implements Message ----------------------------------------------

  NotifyWeddingApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingApply& from);
  void MergeFrom(const NotifyWeddingApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingApply)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingApply* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBroadExpress : public ::google::protobuf::Message {
 public:
  NotifyBroadExpress();
  virtual ~NotifyBroadExpress();

  NotifyBroadExpress(const NotifyBroadExpress& from);

  inline NotifyBroadExpress& operator=(const NotifyBroadExpress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBroadExpress& default_instance();

  void Swap(NotifyBroadExpress* other);

  // implements Message ----------------------------------------------

  NotifyBroadExpress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBroadExpress& from);
  void MergeFrom(const NotifyBroadExpress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional uint64 src_id = 3;
  inline bool has_src_id() const;
  inline void clear_src_id();
  static const int kSrcIdFieldNumber = 3;
  inline ::google::protobuf::uint64 src_id() const;
  inline void set_src_id(::google::protobuf::uint64 value);

  // optional bytes src_name = 4;
  inline bool has_src_name() const;
  inline void clear_src_name();
  static const int kSrcNameFieldNumber = 4;
  inline const ::std::string& src_name() const;
  inline void set_src_name(const ::std::string& value);
  inline void set_src_name(const char* value);
  inline void set_src_name(const void* value, size_t size);
  inline ::std::string* mutable_src_name();
  inline ::std::string* release_src_name();
  inline void set_allocated_src_name(::std::string* src_name);

  // optional bytes dst_name = 5;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 5;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const void* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyBroadExpress)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_src_name();
  inline void clear_has_src_name();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::uint64 src_id_;
  ::std::string* src_name_;
  ::std::string* dst_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyBroadExpress* default_instance_;
};
// -------------------------------------------------------------------

class WeddingSignReq : public ::google::protobuf::Message {
 public:
  WeddingSignReq();
  virtual ~WeddingSignReq();

  WeddingSignReq(const WeddingSignReq& from);

  inline WeddingSignReq& operator=(const WeddingSignReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingSignReq& default_instance();

  void Swap(WeddingSignReq* other);

  // implements Message ----------------------------------------------

  WeddingSignReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingSignReq& from);
  void MergeFrom(const WeddingSignReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingSignReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingSignReq* default_instance_;
};
// -------------------------------------------------------------------

class WeddingSignRsp : public ::google::protobuf::Message {
 public:
  WeddingSignRsp();
  virtual ~WeddingSignRsp();

  WeddingSignRsp(const WeddingSignRsp& from);

  inline WeddingSignRsp& operator=(const WeddingSignRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingSignRsp& default_instance();

  void Swap(WeddingSignRsp* other);

  // implements Message ----------------------------------------------

  WeddingSignRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingSignRsp& from);
  void MergeFrom(const WeddingSignRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingSignRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingSignRsp* default_instance_;
};
// -------------------------------------------------------------------

class WeddingFireReq : public ::google::protobuf::Message {
 public:
  WeddingFireReq();
  virtual ~WeddingFireReq();

  WeddingFireReq(const WeddingFireReq& from);

  inline WeddingFireReq& operator=(const WeddingFireReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingFireReq& default_instance();

  void Swap(WeddingFireReq* other);

  // implements Message ----------------------------------------------

  WeddingFireReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingFireReq& from);
  void MergeFrom(const WeddingFireReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingFireReq)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingFireReq* default_instance_;
};
// -------------------------------------------------------------------

class WeddingFireRsp : public ::google::protobuf::Message {
 public:
  WeddingFireRsp();
  virtual ~WeddingFireRsp();

  WeddingFireRsp(const WeddingFireRsp& from);

  inline WeddingFireRsp& operator=(const WeddingFireRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeddingFireRsp& default_instance();

  void Swap(WeddingFireRsp* other);

  // implements Message ----------------------------------------------

  WeddingFireRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeddingFireRsp& from);
  void MergeFrom(const WeddingFireRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WeddingFireRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static WeddingFireRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyBroadFire : public ::google::protobuf::Message {
 public:
  NotifyBroadFire();
  virtual ~NotifyBroadFire();

  NotifyBroadFire(const NotifyBroadFire& from);

  inline NotifyBroadFire& operator=(const NotifyBroadFire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyBroadFire& default_instance();

  void Swap(NotifyBroadFire* other);

  // implements Message ----------------------------------------------

  NotifyBroadFire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyBroadFire& from);
  void MergeFrom(const NotifyBroadFire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyBroadFire)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyBroadFire* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingDupData : public ::google::protobuf::Message {
 public:
  NotifyWeddingDupData();
  virtual ~NotifyWeddingDupData();

  NotifyWeddingDupData(const NotifyWeddingDupData& from);

  inline NotifyWeddingDupData& operator=(const NotifyWeddingDupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingDupData& default_instance();

  void Swap(NotifyWeddingDupData* other);

  // implements Message ----------------------------------------------

  NotifyWeddingDupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingDupData& from);
  void MergeFrom(const NotifyWeddingDupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // optional int32 enter = 2;
  inline bool has_enter() const;
  inline void clear_enter();
  static const int kEnterFieldNumber = 2;
  inline ::google::protobuf::int32 enter() const;
  inline void set_enter(::google::protobuf::int32 value);

  // optional uint64 step_end_time = 3;
  inline bool has_step_end_time() const;
  inline void clear_step_end_time();
  static const int kStepEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 step_end_time() const;
  inline void set_step_end_time(::google::protobuf::uint64 value);

  // optional uint64 qinyou_npc_cid = 4;
  inline bool has_qinyou_npc_cid() const;
  inline void clear_qinyou_npc_cid();
  static const int kQinyouNpcCidFieldNumber = 4;
  inline ::google::protobuf::uint64 qinyou_npc_cid() const;
  inline void set_qinyou_npc_cid(::google::protobuf::uint64 value);

  // optional int32 qinyou_result = 5;
  inline bool has_qinyou_result() const;
  inline void clear_qinyou_result();
  static const int kQinyouResultFieldNumber = 5;
  inline ::google::protobuf::int32 qinyou_result() const;
  inline void set_qinyou_result(::google::protobuf::int32 value);

  // optional int32 warm_value = 6;
  inline bool has_warm_value() const;
  inline void clear_warm_value();
  static const int kWarmValueFieldNumber = 6;
  inline ::google::protobuf::int32 warm_value() const;
  inline void set_warm_value(::google::protobuf::int32 value);

  // repeated .proto_ff.RolePlayerMiniInfo infos = 7;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 7;
  inline const ::proto_ff::RolePlayerMiniInfo& infos(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_infos(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingDupData)
 private:
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_enter();
  inline void clear_has_enter();
  inline void set_has_step_end_time();
  inline void clear_has_step_end_time();
  inline void set_has_qinyou_npc_cid();
  inline void clear_has_qinyou_npc_cid();
  inline void set_has_qinyou_result();
  inline void clear_has_qinyou_result();
  inline void set_has_warm_value();
  inline void clear_has_warm_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 enter_;
  ::google::protobuf::uint64 step_end_time_;
  ::google::protobuf::uint64 qinyou_npc_cid_;
  ::google::protobuf::int32 qinyou_result_;
  ::google::protobuf::int32 warm_value_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingDupData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyWeddingDupRole : public ::google::protobuf::Message {
 public:
  NotifyWeddingDupRole();
  virtual ~NotifyWeddingDupRole();

  NotifyWeddingDupRole(const NotifyWeddingDupRole& from);

  inline NotifyWeddingDupRole& operator=(const NotifyWeddingDupRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyWeddingDupRole& default_instance();

  void Swap(NotifyWeddingDupRole* other);

  // implements Message ----------------------------------------------

  NotifyWeddingDupRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyWeddingDupRole& from);
  void MergeFrom(const NotifyWeddingDupRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sign_num = 1;
  inline bool has_sign_num() const;
  inline void clear_sign_num();
  static const int kSignNumFieldNumber = 1;
  inline ::google::protobuf::int32 sign_num() const;
  inline void set_sign_num(::google::protobuf::int32 value);

  // optional uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional int32 cakeRewardNum = 3;
  inline bool has_cakerewardnum() const;
  inline void clear_cakerewardnum();
  static const int kCakeRewardNumFieldNumber = 3;
  inline ::google::protobuf::int32 cakerewardnum() const;
  inline void set_cakerewardnum(::google::protobuf::int32 value);

  // optional int32 curCakeNum = 4;
  inline bool has_curcakenum() const;
  inline void clear_curcakenum();
  static const int kCurCakeNumFieldNumber = 4;
  inline ::google::protobuf::int32 curcakenum() const;
  inline void set_curcakenum(::google::protobuf::int32 value);

  // repeated uint64 yanxi_cid = 5;
  inline int yanxi_cid_size() const;
  inline void clear_yanxi_cid();
  static const int kYanxiCidFieldNumber = 5;
  inline ::google::protobuf::uint64 yanxi_cid(int index) const;
  inline void set_yanxi_cid(int index, ::google::protobuf::uint64 value);
  inline void add_yanxi_cid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      yanxi_cid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_yanxi_cid();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyWeddingDupRole)
 private:
  inline void set_has_sign_num();
  inline void clear_has_sign_num();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_cakerewardnum();
  inline void clear_has_cakerewardnum();
  inline void set_has_curcakenum();
  inline void clear_has_curcakenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 exp_;
  ::google::protobuf::int32 sign_num_;
  ::google::protobuf::int32 cakerewardnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > yanxi_cid_;
  ::google::protobuf::int32 curcakenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyWeddingDupRole* default_instance_;
};
// -------------------------------------------------------------------

class throwCakeReq : public ::google::protobuf::Message {
 public:
  throwCakeReq();
  virtual ~throwCakeReq();

  throwCakeReq(const throwCakeReq& from);

  inline throwCakeReq& operator=(const throwCakeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const throwCakeReq& default_instance();

  void Swap(throwCakeReq* other);

  // implements Message ----------------------------------------------

  throwCakeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const throwCakeReq& from);
  void MergeFrom(const throwCakeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 target_cid = 1;
  inline bool has_target_cid() const;
  inline void clear_target_cid();
  static const int kTargetCidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_cid() const;
  inline void set_target_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.throwCakeReq)
 private:
  inline void set_has_target_cid();
  inline void clear_has_target_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static throwCakeReq* default_instance_;
};
// -------------------------------------------------------------------

class throwCakeRsp : public ::google::protobuf::Message {
 public:
  throwCakeRsp();
  virtual ~throwCakeRsp();

  throwCakeRsp(const throwCakeRsp& from);

  inline throwCakeRsp& operator=(const throwCakeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const throwCakeRsp& default_instance();

  void Swap(throwCakeRsp* other);

  // implements Message ----------------------------------------------

  throwCakeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const throwCakeRsp& from);
  void MergeFrom(const throwCakeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.throwCakeRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static throwCakeRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyMarryRedNum : public ::google::protobuf::Message {
 public:
  NotifyMarryRedNum();
  virtual ~NotifyMarryRedNum();

  NotifyMarryRedNum(const NotifyMarryRedNum& from);

  inline NotifyMarryRedNum& operator=(const NotifyMarryRedNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMarryRedNum& default_instance();

  void Swap(NotifyMarryRedNum* other);

  // implements Message ----------------------------------------------

  NotifyMarryRedNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyMarryRedNum& from);
  void MergeFrom(const NotifyMarryRedNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyMarryRedNum)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static NotifyMarryRedNum* default_instance_;
};
// -------------------------------------------------------------------

class SendMarryRedReq : public ::google::protobuf::Message {
 public:
  SendMarryRedReq();
  virtual ~SendMarryRedReq();

  SendMarryRedReq(const SendMarryRedReq& from);

  inline SendMarryRedReq& operator=(const SendMarryRedReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMarryRedReq& default_instance();

  void Swap(SendMarryRedReq* other);

  // implements Message ----------------------------------------------

  SendMarryRedReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMarryRedReq& from);
  void MergeFrom(const SendMarryRedReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.SendMarryRedReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static SendMarryRedReq* default_instance_;
};
// -------------------------------------------------------------------

class SendMarryRedRsp : public ::google::protobuf::Message {
 public:
  SendMarryRedRsp();
  virtual ~SendMarryRedRsp();

  SendMarryRedRsp(const SendMarryRedRsp& from);

  inline SendMarryRedRsp& operator=(const SendMarryRedRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMarryRedRsp& default_instance();

  void Swap(SendMarryRedRsp* other);

  // implements Message ----------------------------------------------

  SendMarryRedRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMarryRedRsp& from);
  void MergeFrom(const SendMarryRedRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SendMarryRedRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static SendMarryRedRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LMarryReq : public ::google::protobuf::Message {
 public:
  C2LMarryReq();
  virtual ~C2LMarryReq();

  C2LMarryReq(const C2LMarryReq& from);

  inline C2LMarryReq& operator=(const C2LMarryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LMarryReq& default_instance();

  void Swap(C2LMarryReq* other);

  // implements Message ----------------------------------------------

  C2LMarryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LMarryReq& from);
  void MergeFrom(const C2LMarryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 src_id = 1;
  inline bool has_src_id() const;
  inline void clear_src_id();
  static const int kSrcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 src_id() const;
  inline void set_src_id(::google::protobuf::uint64 value);

  // optional uint64 dst_cid = 2;
  inline bool has_dst_cid() const;
  inline void clear_dst_cid();
  static const int kDstCidFieldNumber = 2;
  inline ::google::protobuf::uint64 dst_cid() const;
  inline void set_dst_cid(::google::protobuf::uint64 value);

  // optional int32 gear = 3;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 3;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LMarryReq)
 private:
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_dst_cid();
  inline void clear_has_dst_cid();
  inline void set_has_gear();
  inline void clear_has_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_id_;
  ::google::protobuf::uint64 dst_cid_;
  ::google::protobuf::int32 gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LMarryReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CMarryRsp : public ::google::protobuf::Message {
 public:
  L2CMarryRsp();
  virtual ~L2CMarryRsp();

  L2CMarryRsp(const L2CMarryRsp& from);

  inline L2CMarryRsp& operator=(const L2CMarryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CMarryRsp& default_instance();

  void Swap(L2CMarryRsp* other);

  // implements Message ----------------------------------------------

  L2CMarryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CMarryRsp& from);
  void MergeFrom(const L2CMarryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 src_id = 2;
  inline bool has_src_id() const;
  inline void clear_src_id();
  static const int kSrcIdFieldNumber = 2;
  inline ::google::protobuf::uint64 src_id() const;
  inline void set_src_id(::google::protobuf::uint64 value);

  // optional uint64 dst_cid = 3;
  inline bool has_dst_cid() const;
  inline void clear_dst_cid();
  static const int kDstCidFieldNumber = 3;
  inline ::google::protobuf::uint64 dst_cid() const;
  inline void set_dst_cid(::google::protobuf::uint64 value);

  // optional int32 gear = 4;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 4;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CMarryRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_dst_cid();
  inline void clear_has_dst_cid();
  inline void set_has_gear();
  inline void clear_has_gear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_id_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 gear_;
  ::google::protobuf::uint64 dst_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static L2CMarryRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LNotifyMarryCmpt : public ::google::protobuf::Message {
 public:
  C2LNotifyMarryCmpt();
  virtual ~C2LNotifyMarryCmpt();

  C2LNotifyMarryCmpt(const C2LNotifyMarryCmpt& from);

  inline C2LNotifyMarryCmpt& operator=(const C2LNotifyMarryCmpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LNotifyMarryCmpt& default_instance();

  void Swap(C2LNotifyMarryCmpt* other);

  // implements Message ----------------------------------------------

  C2LNotifyMarryCmpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LNotifyMarryCmpt& from);
  void MergeFrom(const C2LNotifyMarryCmpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RolePlayerMiniInfo dst = 1;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 1;
  inline const ::proto_ff::RolePlayerMiniInfo& dst() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_dst();
  inline ::proto_ff::RolePlayerMiniInfo* release_dst();
  inline void set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst);

  // optional int32 gear = 2;
  inline bool has_gear() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 2;
  inline ::google::protobuf::int32 gear() const;
  inline void set_gear(::google::protobuf::int32 value);

  // optional uint64 applyer = 3;
  inline bool has_applyer() const;
  inline void clear_applyer();
  static const int kApplyerFieldNumber = 3;
  inline ::google::protobuf::uint64 applyer() const;
  inline void set_applyer(::google::protobuf::uint64 value);

  // optional int32 marry_id = 4;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 4;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // optional uint64 cid = 5;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 5;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LNotifyMarryCmpt)
 private:
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_gear();
  inline void clear_has_gear();
  inline void set_has_applyer();
  inline void clear_has_applyer();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* dst_;
  ::google::protobuf::uint64 applyer_;
  ::google::protobuf::int32 gear_;
  ::google::protobuf::int32 marry_id_;
  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LNotifyMarryCmpt* default_instance_;
};
// -------------------------------------------------------------------

class L2CUpdateMarryBrief : public ::google::protobuf::Message {
 public:
  L2CUpdateMarryBrief();
  virtual ~L2CUpdateMarryBrief();

  L2CUpdateMarryBrief(const L2CUpdateMarryBrief& from);

  inline L2CUpdateMarryBrief& operator=(const L2CUpdateMarryBrief& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CUpdateMarryBrief& default_instance();

  void Swap(L2CUpdateMarryBrief* other);

  // implements Message ----------------------------------------------

  L2CUpdateMarryBrief* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CUpdateMarryBrief& from);
  void MergeFrom(const L2CUpdateMarryBrief& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional .proto_ff.MarryBrief brief = 2;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 2;
  inline const ::proto_ff::MarryBrief& brief() const;
  inline ::proto_ff::MarryBrief* mutable_brief();
  inline ::proto_ff::MarryBrief* release_brief();
  inline void set_allocated_brief(::proto_ff::MarryBrief* brief);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CUpdateMarryBrief)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_brief();
  inline void clear_has_brief();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::proto_ff::MarryBrief* brief_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static L2CUpdateMarryBrief* default_instance_;
};
// -------------------------------------------------------------------

class C2LNotifyDivorce : public ::google::protobuf::Message {
 public:
  C2LNotifyDivorce();
  virtual ~C2LNotifyDivorce();

  C2LNotifyDivorce(const C2LNotifyDivorce& from);

  inline C2LNotifyDivorce& operator=(const C2LNotifyDivorce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LNotifyDivorce& default_instance();

  void Swap(C2LNotifyDivorce* other);

  // implements Message ----------------------------------------------

  C2LNotifyDivorce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LNotifyDivorce& from);
  void MergeFrom(const C2LNotifyDivorce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LNotifyDivorce)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LNotifyDivorce* default_instance_;
};
// -------------------------------------------------------------------

class C2LExpressReq : public ::google::protobuf::Message {
 public:
  C2LExpressReq();
  virtual ~C2LExpressReq();

  C2LExpressReq(const C2LExpressReq& from);

  inline C2LExpressReq& operator=(const C2LExpressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LExpressReq& default_instance();

  void Swap(C2LExpressReq* other);

  // implements Message ----------------------------------------------

  C2LExpressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LExpressReq& from);
  void MergeFrom(const C2LExpressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .proto_ff.ExpressReq req = 3;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 3;
  inline const ::proto_ff::ExpressReq& req() const;
  inline ::proto_ff::ExpressReq* mutable_req();
  inline ::proto_ff::ExpressReq* release_req();
  inline void set_allocated_req(::proto_ff::ExpressReq* req);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LExpressReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::proto_ff::ExpressReq* req_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LExpressReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CNotifyExpressSuccess : public ::google::protobuf::Message {
 public:
  L2CNotifyExpressSuccess();
  virtual ~L2CNotifyExpressSuccess();

  L2CNotifyExpressSuccess(const L2CNotifyExpressSuccess& from);

  inline L2CNotifyExpressSuccess& operator=(const L2CNotifyExpressSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CNotifyExpressSuccess& default_instance();

  void Swap(L2CNotifyExpressSuccess* other);

  // implements Message ----------------------------------------------

  L2CNotifyExpressSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CNotifyExpressSuccess& from);
  void MergeFrom(const L2CNotifyExpressSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional .proto_ff.ExpressReq req = 2;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 2;
  inline const ::proto_ff::ExpressReq& req() const;
  inline ::proto_ff::ExpressReq* mutable_req();
  inline ::proto_ff::ExpressReq* release_req();
  inline void set_allocated_req(::proto_ff::ExpressReq* req);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CNotifyExpressSuccess)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::proto_ff::ExpressReq* req_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static L2CNotifyExpressSuccess* default_instance_;
};
// -------------------------------------------------------------------

class C2LNotifyExpressToDst : public ::google::protobuf::Message {
 public:
  C2LNotifyExpressToDst();
  virtual ~C2LNotifyExpressToDst();

  C2LNotifyExpressToDst(const C2LNotifyExpressToDst& from);

  inline C2LNotifyExpressToDst& operator=(const C2LNotifyExpressToDst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LNotifyExpressToDst& default_instance();

  void Swap(C2LNotifyExpressToDst* other);

  // implements Message ----------------------------------------------

  C2LNotifyExpressToDst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LNotifyExpressToDst& from);
  void MergeFrom(const C2LNotifyExpressToDst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional .proto_ff.NotifyExpressToDst req = 2;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 2;
  inline const ::proto_ff::NotifyExpressToDst& req() const;
  inline ::proto_ff::NotifyExpressToDst* mutable_req();
  inline ::proto_ff::NotifyExpressToDst* release_req();
  inline void set_allocated_req(::proto_ff::NotifyExpressToDst* req);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LNotifyExpressToDst)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::proto_ff::NotifyExpressToDst* req_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LNotifyExpressToDst* default_instance_;
};
// -------------------------------------------------------------------

class C2LNotifyMarryDst : public ::google::protobuf::Message {
 public:
  C2LNotifyMarryDst();
  virtual ~C2LNotifyMarryDst();

  C2LNotifyMarryDst(const C2LNotifyMarryDst& from);

  inline C2LNotifyMarryDst& operator=(const C2LNotifyMarryDst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LNotifyMarryDst& default_instance();

  void Swap(C2LNotifyMarryDst* other);

  // implements Message ----------------------------------------------

  C2LNotifyMarryDst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LNotifyMarryDst& from);
  void MergeFrom(const C2LNotifyMarryDst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 my_dst_recv_day = 3;
  inline bool has_my_dst_recv_day() const;
  inline void clear_my_dst_recv_day();
  static const int kMyDstRecvDayFieldNumber = 3;
  inline ::google::protobuf::int32 my_dst_recv_day() const;
  inline void set_my_dst_recv_day(::google::protobuf::int32 value);

  // optional int32 dst_give_dup_num = 4;
  inline bool has_dst_give_dup_num() const;
  inline void clear_dst_give_dup_num();
  static const int kDstGiveDupNumFieldNumber = 4;
  inline ::google::protobuf::int32 dst_give_dup_num() const;
  inline void set_dst_give_dup_num(::google::protobuf::int32 value);

  // optional int32 marry_id = 5;
  inline bool has_marry_id() const;
  inline void clear_marry_id();
  static const int kMarryIdFieldNumber = 5;
  inline ::google::protobuf::int32 marry_id() const;
  inline void set_marry_id(::google::protobuf::int32 value);

  // optional .proto_ff.MarryBrief brief = 6;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 6;
  inline const ::proto_ff::MarryBrief& brief() const;
  inline ::proto_ff::MarryBrief* mutable_brief();
  inline ::proto_ff::MarryBrief* release_brief();
  inline void set_allocated_brief(::proto_ff::MarryBrief* brief);

  // optional bytes dst_name = 7;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 7;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const void* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // repeated int32 gear = 8;
  inline int gear_size() const;
  inline void clear_gear();
  static const int kGearFieldNumber = 8;
  inline ::google::protobuf::int32 gear(int index) const;
  inline void set_gear(int index, ::google::protobuf::int32 value);
  inline void add_gear(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gear() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gear();

  // @@protoc_insertion_point(class_scope:proto_ff.C2LNotifyMarryDst)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_my_dst_recv_day();
  inline void clear_has_my_dst_recv_day();
  inline void set_has_dst_give_dup_num();
  inline void clear_has_dst_give_dup_num();
  inline void set_has_marry_id();
  inline void clear_has_marry_id();
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 my_dst_recv_day_;
  ::google::protobuf::int32 dst_give_dup_num_;
  ::google::protobuf::int32 marry_id_;
  ::proto_ff::MarryBrief* brief_;
  ::std::string* dst_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LNotifyMarryDst* default_instance_;
};
// -------------------------------------------------------------------

class C2LGlobalExpressReq : public ::google::protobuf::Message {
 public:
  C2LGlobalExpressReq();
  virtual ~C2LGlobalExpressReq();

  C2LGlobalExpressReq(const C2LGlobalExpressReq& from);

  inline C2LGlobalExpressReq& operator=(const C2LGlobalExpressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LGlobalExpressReq& default_instance();

  void Swap(C2LGlobalExpressReq* other);

  // implements Message ----------------------------------------------

  C2LGlobalExpressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LGlobalExpressReq& from);
  void MergeFrom(const C2LGlobalExpressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LGlobalExpressReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LGlobalExpressReq* default_instance_;
};
// -------------------------------------------------------------------

class C2LNotifyMarryBuySuccess : public ::google::protobuf::Message {
 public:
  C2LNotifyMarryBuySuccess();
  virtual ~C2LNotifyMarryBuySuccess();

  C2LNotifyMarryBuySuccess(const C2LNotifyMarryBuySuccess& from);

  inline C2LNotifyMarryBuySuccess& operator=(const C2LNotifyMarryBuySuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LNotifyMarryBuySuccess& default_instance();

  void Swap(C2LNotifyMarryBuySuccess* other);

  // implements Message ----------------------------------------------

  C2LNotifyMarryBuySuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LNotifyMarryBuySuccess& from);
  void MergeFrom(const C2LNotifyMarryBuySuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LNotifyMarryBuySuccess)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LNotifyMarryBuySuccess* default_instance_;
};
// -------------------------------------------------------------------

class C2LMarryRecvDstCard : public ::google::protobuf::Message {
 public:
  C2LMarryRecvDstCard();
  virtual ~C2LMarryRecvDstCard();

  C2LMarryRecvDstCard(const C2LMarryRecvDstCard& from);

  inline C2LMarryRecvDstCard& operator=(const C2LMarryRecvDstCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LMarryRecvDstCard& default_instance();

  void Swap(C2LMarryRecvDstCard* other);

  // implements Message ----------------------------------------------

  C2LMarryRecvDstCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LMarryRecvDstCard& from);
  void MergeFrom(const C2LMarryRecvDstCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 days = 2;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 2;
  inline ::google::protobuf::int32 days() const;
  inline void set_days(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LMarryRecvDstCard)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_days();
  inline void clear_has_days();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 days_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LMarryRecvDstCard* default_instance_;
};
// -------------------------------------------------------------------

class C2LWeddingBuySeatReq : public ::google::protobuf::Message {
 public:
  C2LWeddingBuySeatReq();
  virtual ~C2LWeddingBuySeatReq();

  C2LWeddingBuySeatReq(const C2LWeddingBuySeatReq& from);

  inline C2LWeddingBuySeatReq& operator=(const C2LWeddingBuySeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LWeddingBuySeatReq& default_instance();

  void Swap(C2LWeddingBuySeatReq* other);

  // implements Message ----------------------------------------------

  C2LWeddingBuySeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LWeddingBuySeatReq& from);
  void MergeFrom(const C2LWeddingBuySeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 wedding_id = 2;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 2;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LWeddingBuySeatReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LWeddingBuySeatReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CWeddingBuySeatRsp : public ::google::protobuf::Message {
 public:
  L2CWeddingBuySeatRsp();
  virtual ~L2CWeddingBuySeatRsp();

  L2CWeddingBuySeatRsp(const L2CWeddingBuySeatRsp& from);

  inline L2CWeddingBuySeatRsp& operator=(const L2CWeddingBuySeatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CWeddingBuySeatRsp& default_instance();

  void Swap(L2CWeddingBuySeatRsp* other);

  // implements Message ----------------------------------------------

  L2CWeddingBuySeatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CWeddingBuySeatRsp& from);
  void MergeFrom(const L2CWeddingBuySeatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 wedding_id = 3;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 3;
  inline ::google::protobuf::int32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CWeddingBuySeatRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static L2CWeddingBuySeatRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LNotifyWeddingTour : public ::google::protobuf::Message {
 public:
  C2LNotifyWeddingTour();
  virtual ~C2LNotifyWeddingTour();

  C2LNotifyWeddingTour(const C2LNotifyWeddingTour& from);

  inline C2LNotifyWeddingTour& operator=(const C2LNotifyWeddingTour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LNotifyWeddingTour& default_instance();

  void Swap(C2LNotifyWeddingTour* other);

  // implements Message ----------------------------------------------

  C2LNotifyWeddingTour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LNotifyWeddingTour& from);
  void MergeFrom(const C2LNotifyWeddingTour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wedding_id = 1;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 1;
  inline ::google::protobuf::uint32 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::uint32 value);

  // optional uint64 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional uint64 tour_end_time = 3;
  inline bool has_tour_end_time() const;
  inline void clear_tour_end_time();
  static const int kTourEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 tour_end_time() const;
  inline void set_tour_end_time(::google::protobuf::uint64 value);

  // optional uint64 src_cid = 4;
  inline bool has_src_cid() const;
  inline void clear_src_cid();
  static const int kSrcCidFieldNumber = 4;
  inline ::google::protobuf::uint64 src_cid() const;
  inline void set_src_cid(::google::protobuf::uint64 value);

  // optional uint64 dst_cid = 5;
  inline bool has_dst_cid() const;
  inline void clear_dst_cid();
  static const int kDstCidFieldNumber = 5;
  inline ::google::protobuf::uint64 dst_cid() const;
  inline void set_dst_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LNotifyWeddingTour)
 private:
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_tour_end_time();
  inline void clear_has_tour_end_time();
  inline void set_has_src_cid();
  inline void clear_has_src_cid();
  inline void set_has_dst_cid();
  inline void clear_has_dst_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 scene_id_;
  ::google::protobuf::uint64 tour_end_time_;
  ::google::protobuf::uint64 src_cid_;
  ::google::protobuf::uint64 dst_cid_;
  ::google::protobuf::uint32 wedding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LNotifyWeddingTour* default_instance_;
};
// -------------------------------------------------------------------

class C2LWeddingTourOver : public ::google::protobuf::Message {
 public:
  C2LWeddingTourOver();
  virtual ~C2LWeddingTourOver();

  C2LWeddingTourOver(const C2LWeddingTourOver& from);

  inline C2LWeddingTourOver& operator=(const C2LWeddingTourOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LWeddingTourOver& default_instance();

  void Swap(C2LWeddingTourOver* other);

  // implements Message ----------------------------------------------

  C2LWeddingTourOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LWeddingTourOver& from);
  void MergeFrom(const C2LWeddingTourOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.C2LWeddingTourOver)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_marry_2eproto();
  friend void protobuf_AssignDesc_marry_2eproto();
  friend void protobuf_ShutdownFile_marry_2eproto();

  void InitAsDefaultInstance();
  static C2LWeddingTourOver* default_instance_;
};
// ===================================================================


// ===================================================================

// NotifyMarrySelf

// optional .proto_ff.MarrySelfInfo info = 1;
inline bool NotifyMarrySelf::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarrySelf::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarrySelf::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarrySelf::clear_info() {
  if (info_ != NULL) info_->::proto_ff::MarrySelfInfo::Clear();
  clear_has_info();
}
inline const ::proto_ff::MarrySelfInfo& NotifyMarrySelf::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::MarrySelfInfo* NotifyMarrySelf::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::MarrySelfInfo;
  return info_;
}
inline ::proto_ff::MarrySelfInfo* NotifyMarrySelf::release_info() {
  clear_has_info();
  ::proto_ff::MarrySelfInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void NotifyMarrySelf::set_allocated_info(::proto_ff::MarrySelfInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// NotifyMarryDst

// optional .proto_ff.RolePlayerMiniInfo mini = 1;
inline bool NotifyMarryDst::has_mini() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryDst::set_has_mini() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryDst::clear_has_mini() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryDst::clear_mini() {
  if (mini_ != NULL) mini_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_mini();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyMarryDst::mini() const {
  return mini_ != NULL ? *mini_ : *default_instance_->mini_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryDst::mutable_mini() {
  set_has_mini();
  if (mini_ == NULL) mini_ = new ::proto_ff::RolePlayerMiniInfo;
  return mini_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryDst::release_mini() {
  clear_has_mini();
  ::proto_ff::RolePlayerMiniInfo* temp = mini_;
  mini_ = NULL;
  return temp;
}
inline void NotifyMarryDst::set_allocated_mini(::proto_ff::RolePlayerMiniInfo* mini) {
  delete mini_;
  mini_ = mini;
  if (mini) {
    set_has_mini();
  } else {
    clear_has_mini();
  }
}

// optional .proto_ff.MarryBrief brief = 2;
inline bool NotifyMarryDst::has_brief() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMarryDst::set_has_brief() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMarryDst::clear_has_brief() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMarryDst::clear_brief() {
  if (brief_ != NULL) brief_->::proto_ff::MarryBrief::Clear();
  clear_has_brief();
}
inline const ::proto_ff::MarryBrief& NotifyMarryDst::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::proto_ff::MarryBrief* NotifyMarryDst::mutable_brief() {
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::proto_ff::MarryBrief;
  return brief_;
}
inline ::proto_ff::MarryBrief* NotifyMarryDst::release_brief() {
  clear_has_brief();
  ::proto_ff::MarryBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void NotifyMarryDst::set_allocated_brief(::proto_ff::MarryBrief* brief) {
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// -------------------------------------------------------------------

// MarryReq

// optional uint64 dst_cid = 1;
inline bool MarryReq::has_dst_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryReq::set_has_dst_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryReq::clear_has_dst_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryReq::clear_dst_cid() {
  dst_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_cid();
}
inline ::google::protobuf::uint64 MarryReq::dst_cid() const {
  return dst_cid_;
}
inline void MarryReq::set_dst_cid(::google::protobuf::uint64 value) {
  set_has_dst_cid();
  dst_cid_ = value;
}

// optional int32 gear = 2;
inline bool MarryReq::has_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryReq::set_has_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryReq::clear_has_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryReq::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 MarryReq::gear() const {
  return gear_;
}
inline void MarryReq::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// -------------------------------------------------------------------

// MarryRsp

// optional int32 ret = 1;
inline bool MarryRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryRsp::ret() const {
  return ret_;
}
inline void MarryRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 dst_cid = 2;
inline bool MarryRsp::has_dst_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryRsp::set_has_dst_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryRsp::clear_has_dst_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryRsp::clear_dst_cid() {
  dst_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_cid();
}
inline ::google::protobuf::uint64 MarryRsp::dst_cid() const {
  return dst_cid_;
}
inline void MarryRsp::set_dst_cid(::google::protobuf::uint64 value) {
  set_has_dst_cid();
  dst_cid_ = value;
}

// optional int32 gear = 3;
inline bool MarryRsp::has_gear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarryRsp::set_has_gear() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarryRsp::clear_has_gear() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarryRsp::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 MarryRsp::gear() const {
  return gear_;
}
inline void MarryRsp::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryApply

// optional .proto_ff.RolePlayerMiniInfo src = 1;
inline bool NotifyMarryApply::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryApply::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryApply::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryApply::clear_src() {
  if (src_ != NULL) src_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_src();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyMarryApply::src() const {
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryApply::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::proto_ff::RolePlayerMiniInfo;
  return src_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryApply::release_src() {
  clear_has_src();
  ::proto_ff::RolePlayerMiniInfo* temp = src_;
  src_ = NULL;
  return temp;
}
inline void NotifyMarryApply::set_allocated_src(::proto_ff::RolePlayerMiniInfo* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
}

// optional int32 gear = 2;
inline bool NotifyMarryApply::has_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMarryApply::set_has_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMarryApply::clear_has_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMarryApply::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 NotifyMarryApply::gear() const {
  return gear_;
}
inline void NotifyMarryApply::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// -------------------------------------------------------------------

// MarryApplyOptReq

// optional int32 opt = 1;
inline bool MarryApplyOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryApplyOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryApplyOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryApplyOptReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 MarryApplyOptReq::opt() const {
  return opt_;
}
inline void MarryApplyOptReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// MarryApplyOptRsp

// optional int32 ret = 1;
inline bool MarryApplyOptRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryApplyOptRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryApplyOptRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryApplyOptRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryApplyOptRsp::ret() const {
  return ret_;
}
inline void MarryApplyOptRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 opt = 2;
inline bool MarryApplyOptRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryApplyOptRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryApplyOptRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryApplyOptRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 MarryApplyOptRsp::opt() const {
  return opt_;
}
inline void MarryApplyOptRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryRefuse

// optional int32 ret = 1;
inline bool NotifyMarryRefuse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryRefuse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryRefuse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryRefuse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 NotifyMarryRefuse::ret() const {
  return ret_;
}
inline void NotifyMarryRefuse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .proto_ff.RolePlayerMiniInfo dst = 2;
inline bool NotifyMarryRefuse::has_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMarryRefuse::set_has_dst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMarryRefuse::clear_has_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMarryRefuse::clear_dst() {
  if (dst_ != NULL) dst_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_dst();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyMarryRefuse::dst() const {
  return dst_ != NULL ? *dst_ : *default_instance_->dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryRefuse::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) dst_ = new ::proto_ff::RolePlayerMiniInfo;
  return dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryRefuse::release_dst() {
  clear_has_dst();
  ::proto_ff::RolePlayerMiniInfo* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void NotifyMarryRefuse::set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
}

// -------------------------------------------------------------------

// NotifyMarryCmpt

// optional .proto_ff.RolePlayerMiniInfo dst = 1;
inline bool NotifyMarryCmpt::has_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryCmpt::set_has_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryCmpt::clear_has_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryCmpt::clear_dst() {
  if (dst_ != NULL) dst_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_dst();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyMarryCmpt::dst() const {
  return dst_ != NULL ? *dst_ : *default_instance_->dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryCmpt::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) dst_ = new ::proto_ff::RolePlayerMiniInfo;
  return dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyMarryCmpt::release_dst() {
  clear_has_dst();
  ::proto_ff::RolePlayerMiniInfo* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void NotifyMarryCmpt::set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
}

// optional int32 gear = 2;
inline bool NotifyMarryCmpt::has_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMarryCmpt::set_has_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMarryCmpt::clear_has_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMarryCmpt::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 NotifyMarryCmpt::gear() const {
  return gear_;
}
inline void NotifyMarryCmpt::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// optional uint64 applyer = 3;
inline bool NotifyMarryCmpt::has_applyer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMarryCmpt::set_has_applyer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMarryCmpt::clear_has_applyer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMarryCmpt::clear_applyer() {
  applyer_ = GOOGLE_ULONGLONG(0);
  clear_has_applyer();
}
inline ::google::protobuf::uint64 NotifyMarryCmpt::applyer() const {
  return applyer_;
}
inline void NotifyMarryCmpt::set_applyer(::google::protobuf::uint64 value) {
  set_has_applyer();
  applyer_ = value;
}

// optional int32 marry_id = 4;
inline bool NotifyMarryCmpt::has_marry_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyMarryCmpt::set_has_marry_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyMarryCmpt::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyMarryCmpt::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 NotifyMarryCmpt::marry_id() const {
  return marry_id_;
}
inline void NotifyMarryCmpt::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// -------------------------------------------------------------------

// NotifyNewMarry

// optional .proto_ff.RolePlayerMiniInfo src = 1;
inline bool NotifyNewMarry::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyNewMarry::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyNewMarry::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyNewMarry::clear_src() {
  if (src_ != NULL) src_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_src();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyNewMarry::src() const {
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyNewMarry::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::proto_ff::RolePlayerMiniInfo;
  return src_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyNewMarry::release_src() {
  clear_has_src();
  ::proto_ff::RolePlayerMiniInfo* temp = src_;
  src_ = NULL;
  return temp;
}
inline void NotifyNewMarry::set_allocated_src(::proto_ff::RolePlayerMiniInfo* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
}

// optional .proto_ff.RolePlayerMiniInfo dst = 2;
inline bool NotifyNewMarry::has_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyNewMarry::set_has_dst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyNewMarry::clear_has_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyNewMarry::clear_dst() {
  if (dst_ != NULL) dst_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_dst();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyNewMarry::dst() const {
  return dst_ != NULL ? *dst_ : *default_instance_->dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyNewMarry::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) dst_ = new ::proto_ff::RolePlayerMiniInfo;
  return dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyNewMarry::release_dst() {
  clear_has_dst();
  ::proto_ff::RolePlayerMiniInfo* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void NotifyNewMarry::set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
}

// optional int32 marry_id = 3;
inline bool NotifyNewMarry::has_marry_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyNewMarry::set_has_marry_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyNewMarry::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyNewMarry::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 NotifyNewMarry::marry_id() const {
  return marry_id_;
}
inline void NotifyNewMarry::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// optional int32 gear = 4;
inline bool NotifyNewMarry::has_gear() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyNewMarry::set_has_gear() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyNewMarry::clear_has_gear() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyNewMarry::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 NotifyNewMarry::gear() const {
  return gear_;
}
inline void NotifyNewMarry::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// -------------------------------------------------------------------

// MarryRecvGearRewardReq

// -------------------------------------------------------------------

// MarryRecvGearRewardRsp

// optional int32 ret = 1;
inline bool MarryRecvGearRewardRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryRecvGearRewardRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryRecvGearRewardRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryRecvGearRewardRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryRecvGearRewardRsp::ret() const {
  return ret_;
}
inline void MarryRecvGearRewardRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MarryRecvChildReq

// optional int32 child_id = 1;
inline bool MarryRecvChildReq::has_child_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryRecvChildReq::set_has_child_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryRecvChildReq::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryRecvChildReq::clear_child_id() {
  child_id_ = 0;
  clear_has_child_id();
}
inline ::google::protobuf::int32 MarryRecvChildReq::child_id() const {
  return child_id_;
}
inline void MarryRecvChildReq::set_child_id(::google::protobuf::int32 value) {
  set_has_child_id();
  child_id_ = value;
}

// -------------------------------------------------------------------

// MarryRecvChildRsp

// optional int32 ret = 1;
inline bool MarryRecvChildRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryRecvChildRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryRecvChildRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryRecvChildRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryRecvChildRsp::ret() const {
  return ret_;
}
inline void MarryRecvChildRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 child_id = 2;
inline bool MarryRecvChildRsp::has_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryRecvChildRsp::set_has_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryRecvChildRsp::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryRecvChildRsp::clear_child_id() {
  child_id_ = 0;
  clear_has_child_id();
}
inline ::google::protobuf::int32 MarryRecvChildRsp::child_id() const {
  return child_id_;
}
inline void MarryRecvChildRsp::set_child_id(::google::protobuf::int32 value) {
  set_has_child_id();
  child_id_ = value;
}

// -------------------------------------------------------------------

// DivorceReq

// -------------------------------------------------------------------

// DivorceRsp

// optional int32 ret = 1;
inline bool DivorceRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DivorceRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DivorceRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DivorceRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DivorceRsp::ret() const {
  return ret_;
}
inline void DivorceRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MarryChildOptReq

// optional int32 type = 1;
inline bool MarryChildOptReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryChildOptReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryChildOptReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryChildOptReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarryChildOptReq::type() const {
  return type_;
}
inline void MarryChildOptReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 child_id = 2;
inline bool MarryChildOptReq::has_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryChildOptReq::set_has_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryChildOptReq::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryChildOptReq::clear_child_id() {
  child_id_ = 0;
  clear_has_child_id();
}
inline ::google::protobuf::int32 MarryChildOptReq::child_id() const {
  return child_id_;
}
inline void MarryChildOptReq::set_child_id(::google::protobuf::int32 value) {
  set_has_child_id();
  child_id_ = value;
}

// -------------------------------------------------------------------

// MarryChildOptRsp

// optional int32 ret = 1;
inline bool MarryChildOptRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryChildOptRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryChildOptRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryChildOptRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryChildOptRsp::ret() const {
  return ret_;
}
inline void MarryChildOptRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool MarryChildOptRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryChildOptRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryChildOptRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryChildOptRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarryChildOptRsp::type() const {
  return type_;
}
inline void MarryChildOptRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 child_id = 3;
inline bool MarryChildOptRsp::has_child_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarryChildOptRsp::set_has_child_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarryChildOptRsp::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarryChildOptRsp::clear_child_id() {
  child_id_ = 0;
  clear_has_child_id();
}
inline ::google::protobuf::int32 MarryChildOptRsp::child_id() const {
  return child_id_;
}
inline void MarryChildOptRsp::set_child_id(::google::protobuf::int32 value) {
  set_has_child_id();
  child_id_ = value;
}

// -------------------------------------------------------------------

// ExpressReq

// optional uint64 cid = 1;
inline bool ExpressReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpressReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpressReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpressReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ExpressReq::cid() const {
  return cid_;
}
inline void ExpressReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 item = 2;
inline bool ExpressReq::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpressReq::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpressReq::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpressReq::clear_item() {
  item_ = GOOGLE_ULONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::uint64 ExpressReq::item() const {
  return item_;
}
inline void ExpressReq::set_item(::google::protobuf::uint64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 num = 3;
inline bool ExpressReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExpressReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExpressReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExpressReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ExpressReq::num() const {
  return num_;
}
inline void ExpressReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 text_id = 4;
inline bool ExpressReq::has_text_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExpressReq::set_has_text_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExpressReq::clear_has_text_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExpressReq::clear_text_id() {
  text_id_ = 0;
  clear_has_text_id();
}
inline ::google::protobuf::int32 ExpressReq::text_id() const {
  return text_id_;
}
inline void ExpressReq::set_text_id(::google::protobuf::int32 value) {
  set_has_text_id();
  text_id_ = value;
}

// -------------------------------------------------------------------

// ExpressRsp

// optional int32 ret = 1;
inline bool ExpressRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpressRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpressRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpressRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ExpressRsp::ret() const {
  return ret_;
}
inline void ExpressRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 cid = 2;
inline bool ExpressRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpressRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpressRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpressRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ExpressRsp::cid() const {
  return cid_;
}
inline void ExpressRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 item = 3;
inline bool ExpressRsp::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExpressRsp::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExpressRsp::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExpressRsp::clear_item() {
  item_ = GOOGLE_ULONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::uint64 ExpressRsp::item() const {
  return item_;
}
inline void ExpressRsp::set_item(::google::protobuf::uint64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 num = 4;
inline bool ExpressRsp::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExpressRsp::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExpressRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExpressRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ExpressRsp::num() const {
  return num_;
}
inline void ExpressRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 text_id = 5;
inline bool ExpressRsp::has_text_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExpressRsp::set_has_text_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExpressRsp::clear_has_text_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExpressRsp::clear_text_id() {
  text_id_ = 0;
  clear_has_text_id();
}
inline ::google::protobuf::int32 ExpressRsp::text_id() const {
  return text_id_;
}
inline void ExpressRsp::set_text_id(::google::protobuf::int32 value) {
  set_has_text_id();
  text_id_ = value;
}

// -------------------------------------------------------------------

// NotifyExpressToDst

// optional .proto_ff.RolePlayerMiniInfo src = 1;
inline bool NotifyExpressToDst::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyExpressToDst::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyExpressToDst::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyExpressToDst::clear_src() {
  if (src_ != NULL) src_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_src();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyExpressToDst::src() const {
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyExpressToDst::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::proto_ff::RolePlayerMiniInfo;
  return src_;
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyExpressToDst::release_src() {
  clear_has_src();
  ::proto_ff::RolePlayerMiniInfo* temp = src_;
  src_ = NULL;
  return temp;
}
inline void NotifyExpressToDst::set_allocated_src(::proto_ff::RolePlayerMiniInfo* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
}

// optional uint64 item = 2;
inline bool NotifyExpressToDst::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyExpressToDst::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyExpressToDst::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyExpressToDst::clear_item() {
  item_ = GOOGLE_ULONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::uint64 NotifyExpressToDst::item() const {
  return item_;
}
inline void NotifyExpressToDst::set_item(::google::protobuf::uint64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 num = 3;
inline bool NotifyExpressToDst::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyExpressToDst::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyExpressToDst::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyExpressToDst::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 NotifyExpressToDst::num() const {
  return num_;
}
inline void NotifyExpressToDst::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 text_id = 4;
inline bool NotifyExpressToDst::has_text_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyExpressToDst::set_has_text_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyExpressToDst::clear_has_text_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyExpressToDst::clear_text_id() {
  text_id_ = 0;
  clear_has_text_id();
}
inline ::google::protobuf::int32 NotifyExpressToDst::text_id() const {
  return text_id_;
}
inline void NotifyExpressToDst::set_text_id(::google::protobuf::int32 value) {
  set_has_text_id();
  text_id_ = value;
}

// optional uint64 time = 5;
inline bool NotifyExpressToDst::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyExpressToDst::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyExpressToDst::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyExpressToDst::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 NotifyExpressToDst::time() const {
  return time_;
}
inline void NotifyExpressToDst::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ExpressDataReq

// optional int32 type = 1;
inline bool ExpressDataReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpressDataReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpressDataReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpressDataReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ExpressDataReq::type() const {
  return type_;
}
inline void ExpressDataReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ExpressDataRsp

// optional int32 type = 1;
inline bool ExpressDataRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpressDataRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpressDataRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpressDataRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ExpressDataRsp::type() const {
  return type_;
}
inline void ExpressDataRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.ExpressLog logs = 2;
inline int ExpressDataRsp::logs_size() const {
  return logs_.size();
}
inline void ExpressDataRsp::clear_logs() {
  logs_.Clear();
}
inline const ::proto_ff::ExpressLog& ExpressDataRsp::logs(int index) const {
  return logs_.Get(index);
}
inline ::proto_ff::ExpressLog* ExpressDataRsp::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::proto_ff::ExpressLog* ExpressDataRsp::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >&
ExpressDataRsp::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ExpressLog >*
ExpressDataRsp::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// MarryInviteDstBuyDupReq

// -------------------------------------------------------------------

// MarryInviteDstBuyDupRsp

// optional int32 ret = 1;
inline bool MarryInviteDstBuyDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryInviteDstBuyDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryInviteDstBuyDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryInviteDstBuyDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryInviteDstBuyDupRsp::ret() const {
  return ret_;
}
inline void MarryInviteDstBuyDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryDstBuyDup

// -------------------------------------------------------------------

// MarryBuyRefuseReq

// -------------------------------------------------------------------

// MarryBuyDupReq

// optional int32 type = 1;
inline bool MarryBuyDupReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryBuyDupReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryBuyDupReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryBuyDupReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarryBuyDupReq::type() const {
  return type_;
}
inline void MarryBuyDupReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MarryBuyDupRsp

// optional int32 ret = 1;
inline bool MarryBuyDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryBuyDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryBuyDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryBuyDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryBuyDupRsp::ret() const {
  return ret_;
}
inline void MarryBuyDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryBuyResult

// optional int32 ret = 1;
inline bool NotifyMarryBuyResult::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryBuyResult::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryBuyResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryBuyResult::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 NotifyMarryBuyResult::ret() const {
  return ret_;
}
inline void NotifyMarryBuyResult::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MarryLockLvReq

// -------------------------------------------------------------------

// MarryLockLvRsp

// optional int32 ret = 1;
inline bool MarryLockLvRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryLockLvRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryLockLvRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryLockLvRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryLockLvRsp::ret() const {
  return ret_;
}
inline void MarryLockLvRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MarryBoxBuyReq

// -------------------------------------------------------------------

// MarryBoxBuyRsp

// optional int32 ret = 1;
inline bool MarryBoxBuyRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryBoxBuyRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryBoxBuyRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryBoxBuyRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryBoxBuyRsp::ret() const {
  return ret_;
}
inline void MarryBoxBuyRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MarryBoxRecvReq

// optional int32 type = 1;
inline bool MarryBoxRecvReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryBoxRecvReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryBoxRecvReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryBoxRecvReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarryBoxRecvReq::type() const {
  return type_;
}
inline void MarryBoxRecvReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MarryBoxRecvRsp

// optional int32 ret = 1;
inline bool MarryBoxRecvRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryBoxRecvRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryBoxRecvRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryBoxRecvRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryBoxRecvRsp::ret() const {
  return ret_;
}
inline void MarryBoxRecvRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool MarryBoxRecvRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryBoxRecvRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryBoxRecvRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryBoxRecvRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MarryBoxRecvRsp::type() const {
  return type_;
}
inline void MarryBoxRecvRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryDupSelect

// -------------------------------------------------------------------

// MarryDupSelectReq

// optional int32 id = 1;
inline bool MarryDupSelectReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryDupSelectReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryDupSelectReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryDupSelectReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MarryDupSelectReq::id() const {
  return id_;
}
inline void MarryDupSelectReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MarryDupSelectRsp

// optional int32 id = 1;
inline bool MarryDupSelectRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryDupSelectRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryDupSelectRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryDupSelectRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MarryDupSelectRsp::id() const {
  return id_;
}
inline void MarryDupSelectRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryDupResult

// optional int32 ret = 1;
inline bool NotifyMarryDupResult::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryDupResult::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryDupResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryDupResult::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 NotifyMarryDupResult::ret() const {
  return ret_;
}
inline void NotifyMarryDupResult::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 code = 2;
inline bool NotifyMarryDupResult::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMarryDupResult::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMarryDupResult::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMarryDupResult::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 NotifyMarryDupResult::code() const {
  return code_;
}
inline void NotifyMarryDupResult::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int32 exp = 3;
inline bool NotifyMarryDupResult::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMarryDupResult::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMarryDupResult::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMarryDupResult::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 NotifyMarryDupResult::exp() const {
  return exp_;
}
inline void NotifyMarryDupResult::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 boxid = 4;
inline bool NotifyMarryDupResult::has_boxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyMarryDupResult::set_has_boxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyMarryDupResult::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyMarryDupResult::clear_boxid() {
  boxid_ = 0;
  clear_has_boxid();
}
inline ::google::protobuf::int32 NotifyMarryDupResult::boxid() const {
  return boxid_;
}
inline void NotifyMarryDupResult::set_boxid(::google::protobuf::int32 value) {
  set_has_boxid();
  boxid_ = value;
}

// -------------------------------------------------------------------

// SearchMarryFriendReq

// -------------------------------------------------------------------

// SearchMarryFriendRsp

// repeated .proto_ff.RolePlayerMiniInfo infos = 1;
inline int SearchMarryFriendRsp::infos_size() const {
  return infos_.size();
}
inline void SearchMarryFriendRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& SearchMarryFriendRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* SearchMarryFriendRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* SearchMarryFriendRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
SearchMarryFriendRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
SearchMarryFriendRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// MarryTaskRecvReq

// -------------------------------------------------------------------

// MarryTaskRecvRsp

// optional int32 ret = 1;
inline bool MarryTaskRecvRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryTaskRecvRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryTaskRecvRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryTaskRecvRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MarryTaskRecvRsp::ret() const {
  return ret_;
}
inline void MarryTaskRecvRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// MarryWeddingDataReq

// -------------------------------------------------------------------

// NotifyWeddingData

// optional int32 type = 1;
inline bool NotifyWeddingData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyWeddingData::type() const {
  return type_;
}
inline void NotifyWeddingData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.WeddingSimpleInfo infos = 2;
inline int NotifyWeddingData::infos_size() const {
  return infos_.size();
}
inline void NotifyWeddingData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::WeddingSimpleInfo& NotifyWeddingData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::WeddingSimpleInfo* NotifyWeddingData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::WeddingSimpleInfo* NotifyWeddingData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >&
NotifyWeddingData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >*
NotifyWeddingData::mutable_infos() {
  return &infos_;
}

// optional int32 wedding_num = 3;
inline bool NotifyWeddingData::has_wedding_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyWeddingData::set_has_wedding_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyWeddingData::clear_has_wedding_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyWeddingData::clear_wedding_num() {
  wedding_num_ = 0;
  clear_has_wedding_num();
}
inline ::google::protobuf::int32 NotifyWeddingData::wedding_num() const {
  return wedding_num_;
}
inline void NotifyWeddingData::set_wedding_num(::google::protobuf::int32 value) {
  set_has_wedding_num();
  wedding_num_ = value;
}

// -------------------------------------------------------------------

// NotifyWeddingPlan

// repeated .proto_ff.WeddingSimpleInfo infos = 1;
inline int NotifyWeddingPlan::infos_size() const {
  return infos_.size();
}
inline void NotifyWeddingPlan::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::WeddingSimpleInfo& NotifyWeddingPlan::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::WeddingSimpleInfo* NotifyWeddingPlan::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::WeddingSimpleInfo* NotifyWeddingPlan::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >&
NotifyWeddingPlan::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingSimpleInfo >*
NotifyWeddingPlan::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyWeddingStep

// optional int32 wedding_id = 1;
inline bool NotifyWeddingStep::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingStep::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingStep::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingStep::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 NotifyWeddingStep::wedding_id() const {
  return wedding_id_;
}
inline void NotifyWeddingStep::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 step = 2;
inline bool NotifyWeddingStep::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyWeddingStep::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyWeddingStep::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyWeddingStep::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 NotifyWeddingStep::step() const {
  return step_;
}
inline void NotifyWeddingStep::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// -------------------------------------------------------------------

// NotifyWeddingRole

// repeated int32 can_join_wedding = 1;
inline int NotifyWeddingRole::can_join_wedding_size() const {
  return can_join_wedding_.size();
}
inline void NotifyWeddingRole::clear_can_join_wedding() {
  can_join_wedding_.Clear();
}
inline ::google::protobuf::int32 NotifyWeddingRole::can_join_wedding(int index) const {
  return can_join_wedding_.Get(index);
}
inline void NotifyWeddingRole::set_can_join_wedding(int index, ::google::protobuf::int32 value) {
  can_join_wedding_.Set(index, value);
}
inline void NotifyWeddingRole::add_can_join_wedding(::google::protobuf::int32 value) {
  can_join_wedding_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyWeddingRole::can_join_wedding() const {
  return can_join_wedding_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyWeddingRole::mutable_can_join_wedding() {
  return &can_join_wedding_;
}

// repeated int32 apply_wedding = 2;
inline int NotifyWeddingRole::apply_wedding_size() const {
  return apply_wedding_.size();
}
inline void NotifyWeddingRole::clear_apply_wedding() {
  apply_wedding_.Clear();
}
inline ::google::protobuf::int32 NotifyWeddingRole::apply_wedding(int index) const {
  return apply_wedding_.Get(index);
}
inline void NotifyWeddingRole::set_apply_wedding(int index, ::google::protobuf::int32 value) {
  apply_wedding_.Set(index, value);
}
inline void NotifyWeddingRole::add_apply_wedding(::google::protobuf::int32 value) {
  apply_wedding_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyWeddingRole::apply_wedding() const {
  return apply_wedding_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyWeddingRole::mutable_apply_wedding() {
  return &apply_wedding_;
}

// repeated .proto_ff.WeddingDetail detail = 3;
inline int NotifyWeddingRole::detail_size() const {
  return detail_.size();
}
inline void NotifyWeddingRole::clear_detail() {
  detail_.Clear();
}
inline const ::proto_ff::WeddingDetail& NotifyWeddingRole::detail(int index) const {
  return detail_.Get(index);
}
inline ::proto_ff::WeddingDetail* NotifyWeddingRole::mutable_detail(int index) {
  return detail_.Mutable(index);
}
inline ::proto_ff::WeddingDetail* NotifyWeddingRole::add_detail() {
  return detail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDetail >&
NotifyWeddingRole::detail() const {
  return detail_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WeddingDetail >*
NotifyWeddingRole::mutable_detail() {
  return &detail_;
}

// -------------------------------------------------------------------

// MakeWeddingReq

// optional int32 wedding_id = 1;
inline bool MakeWeddingReq::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeWeddingReq::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MakeWeddingReq::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MakeWeddingReq::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 MakeWeddingReq::wedding_id() const {
  return wedding_id_;
}
inline void MakeWeddingReq::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 wedding_gear = 2;
inline bool MakeWeddingReq::has_wedding_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeWeddingReq::set_has_wedding_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MakeWeddingReq::clear_has_wedding_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MakeWeddingReq::clear_wedding_gear() {
  wedding_gear_ = 0;
  clear_has_wedding_gear();
}
inline ::google::protobuf::int32 MakeWeddingReq::wedding_gear() const {
  return wedding_gear_;
}
inline void MakeWeddingReq::set_wedding_gear(::google::protobuf::int32 value) {
  set_has_wedding_gear();
  wedding_gear_ = value;
}

// -------------------------------------------------------------------

// MakeWeddingRsp

// optional int32 ret = 1;
inline bool MakeWeddingRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeWeddingRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MakeWeddingRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MakeWeddingRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MakeWeddingRsp::ret() const {
  return ret_;
}
inline void MakeWeddingRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WeddingInviteReq

// optional int32 invite_type = 1;
inline bool WeddingInviteReq::has_invite_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingInviteReq::set_has_invite_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingInviteReq::clear_has_invite_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingInviteReq::clear_invite_type() {
  invite_type_ = 0;
  clear_has_invite_type();
}
inline ::google::protobuf::int32 WeddingInviteReq::invite_type() const {
  return invite_type_;
}
inline void WeddingInviteReq::set_invite_type(::google::protobuf::int32 value) {
  set_has_invite_type();
  invite_type_ = value;
}

// repeated uint64 invite_cid_list = 2;
inline int WeddingInviteReq::invite_cid_list_size() const {
  return invite_cid_list_.size();
}
inline void WeddingInviteReq::clear_invite_cid_list() {
  invite_cid_list_.Clear();
}
inline ::google::protobuf::uint64 WeddingInviteReq::invite_cid_list(int index) const {
  return invite_cid_list_.Get(index);
}
inline void WeddingInviteReq::set_invite_cid_list(int index, ::google::protobuf::uint64 value) {
  invite_cid_list_.Set(index, value);
}
inline void WeddingInviteReq::add_invite_cid_list(::google::protobuf::uint64 value) {
  invite_cid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WeddingInviteReq::invite_cid_list() const {
  return invite_cid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WeddingInviteReq::mutable_invite_cid_list() {
  return &invite_cid_list_;
}

// optional int32 wedding_id = 3;
inline bool WeddingInviteReq::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeddingInviteReq::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeddingInviteReq::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeddingInviteReq::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingInviteReq::wedding_id() const {
  return wedding_id_;
}
inline void WeddingInviteReq::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// WeddingInviteRsp

// optional int32 ret = 1;
inline bool WeddingInviteRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingInviteRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingInviteRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingInviteRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WeddingInviteRsp::ret() const {
  return ret_;
}
inline void WeddingInviteRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 invite_type = 2;
inline bool WeddingInviteRsp::has_invite_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingInviteRsp::set_has_invite_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingInviteRsp::clear_has_invite_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingInviteRsp::clear_invite_type() {
  invite_type_ = 0;
  clear_has_invite_type();
}
inline ::google::protobuf::int32 WeddingInviteRsp::invite_type() const {
  return invite_type_;
}
inline void WeddingInviteRsp::set_invite_type(::google::protobuf::int32 value) {
  set_has_invite_type();
  invite_type_ = value;
}

// repeated uint64 invite_cid_list = 3;
inline int WeddingInviteRsp::invite_cid_list_size() const {
  return invite_cid_list_.size();
}
inline void WeddingInviteRsp::clear_invite_cid_list() {
  invite_cid_list_.Clear();
}
inline ::google::protobuf::uint64 WeddingInviteRsp::invite_cid_list(int index) const {
  return invite_cid_list_.Get(index);
}
inline void WeddingInviteRsp::set_invite_cid_list(int index, ::google::protobuf::uint64 value) {
  invite_cid_list_.Set(index, value);
}
inline void WeddingInviteRsp::add_invite_cid_list(::google::protobuf::uint64 value) {
  invite_cid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WeddingInviteRsp::invite_cid_list() const {
  return invite_cid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WeddingInviteRsp::mutable_invite_cid_list() {
  return &invite_cid_list_;
}

// optional int32 wedding_id = 4;
inline bool WeddingInviteRsp::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeddingInviteRsp::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeddingInviteRsp::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeddingInviteRsp::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingInviteRsp::wedding_id() const {
  return wedding_id_;
}
inline void WeddingInviteRsp::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// EnterWeddingDupReq

// optional int32 wedding_id = 1;
inline bool EnterWeddingDupReq::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterWeddingDupReq::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterWeddingDupReq::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterWeddingDupReq::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 EnterWeddingDupReq::wedding_id() const {
  return wedding_id_;
}
inline void EnterWeddingDupReq::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// EnterWeddingDupRsp

// optional int32 ret = 1;
inline bool EnterWeddingDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterWeddingDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterWeddingDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterWeddingDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 EnterWeddingDupRsp::ret() const {
  return ret_;
}
inline void EnterWeddingDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 wedding_id = 2;
inline bool EnterWeddingDupRsp::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterWeddingDupRsp::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterWeddingDupRsp::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterWeddingDupRsp::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 EnterWeddingDupRsp::wedding_id() const {
  return wedding_id_;
}
inline void EnterWeddingDupRsp::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// NotifyWeddingInvite

// optional int32 wedding_id = 1;
inline bool NotifyWeddingInvite::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingInvite::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingInvite::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingInvite::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 NotifyWeddingInvite::wedding_id() const {
  return wedding_id_;
}
inline void NotifyWeddingInvite::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// WeddingBuySeatReq

// optional int32 wedding_id = 1;
inline bool WeddingBuySeatReq::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingBuySeatReq::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingBuySeatReq::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingBuySeatReq::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingBuySeatReq::wedding_id() const {
  return wedding_id_;
}
inline void WeddingBuySeatReq::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// WeddingBuySeatRsp

// optional int32 ret = 1;
inline bool WeddingBuySeatRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingBuySeatRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingBuySeatRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingBuySeatRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WeddingBuySeatRsp::ret() const {
  return ret_;
}
inline void WeddingBuySeatRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 wedding_id = 2;
inline bool WeddingBuySeatRsp::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingBuySeatRsp::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingBuySeatRsp::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingBuySeatRsp::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingBuySeatRsp::wedding_id() const {
  return wedding_id_;
}
inline void WeddingBuySeatRsp::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// WeddingApplyReq

// optional int32 wedding_id = 1;
inline bool WeddingApplyReq::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingApplyReq::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingApplyReq::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingApplyReq::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingApplyReq::wedding_id() const {
  return wedding_id_;
}
inline void WeddingApplyReq::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// WeddingApplyRsp

// optional int32 ret = 1;
inline bool WeddingApplyRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingApplyRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingApplyRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingApplyRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WeddingApplyRsp::ret() const {
  return ret_;
}
inline void WeddingApplyRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 wedding_id = 2;
inline bool WeddingApplyRsp::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingApplyRsp::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingApplyRsp::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingApplyRsp::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 WeddingApplyRsp::wedding_id() const {
  return wedding_id_;
}
inline void WeddingApplyRsp::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// NotifyWeddingTourFollow

// optional uint64 monster_cid = 1;
inline bool NotifyWeddingTourFollow::has_monster_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingTourFollow::set_has_monster_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingTourFollow::clear_has_monster_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingTourFollow::clear_monster_cid() {
  monster_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_monster_cid();
}
inline ::google::protobuf::uint64 NotifyWeddingTourFollow::monster_cid() const {
  return monster_cid_;
}
inline void NotifyWeddingTourFollow::set_monster_cid(::google::protobuf::uint64 value) {
  set_has_monster_cid();
  monster_cid_ = value;
}

// -------------------------------------------------------------------

// NotifyWeddingApply

// optional int32 wedding_id = 1;
inline bool NotifyWeddingApply::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingApply::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingApply::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingApply::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 NotifyWeddingApply::wedding_id() const {
  return wedding_id_;
}
inline void NotifyWeddingApply::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// NotifyBroadExpress

// optional int32 itemid = 1;
inline bool NotifyBroadExpress::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBroadExpress::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBroadExpress::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBroadExpress::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 NotifyBroadExpress::itemid() const {
  return itemid_;
}
inline void NotifyBroadExpress::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 num = 2;
inline bool NotifyBroadExpress::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyBroadExpress::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyBroadExpress::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyBroadExpress::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 NotifyBroadExpress::num() const {
  return num_;
}
inline void NotifyBroadExpress::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional uint64 src_id = 3;
inline bool NotifyBroadExpress::has_src_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyBroadExpress::set_has_src_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyBroadExpress::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyBroadExpress::clear_src_id() {
  src_id_ = GOOGLE_ULONGLONG(0);
  clear_has_src_id();
}
inline ::google::protobuf::uint64 NotifyBroadExpress::src_id() const {
  return src_id_;
}
inline void NotifyBroadExpress::set_src_id(::google::protobuf::uint64 value) {
  set_has_src_id();
  src_id_ = value;
}

// optional bytes src_name = 4;
inline bool NotifyBroadExpress::has_src_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyBroadExpress::set_has_src_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyBroadExpress::clear_has_src_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyBroadExpress::clear_src_name() {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    src_name_->clear();
  }
  clear_has_src_name();
}
inline const ::std::string& NotifyBroadExpress::src_name() const {
  return *src_name_;
}
inline void NotifyBroadExpress::set_src_name(const ::std::string& value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void NotifyBroadExpress::set_src_name(const char* value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void NotifyBroadExpress::set_src_name(const void* value, size_t size) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyBroadExpress::mutable_src_name() {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  return src_name_;
}
inline ::std::string* NotifyBroadExpress::release_src_name() {
  clear_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = src_name_;
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyBroadExpress::set_allocated_src_name(::std::string* src_name) {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    delete src_name_;
  }
  if (src_name) {
    set_has_src_name();
    src_name_ = src_name;
  } else {
    clear_has_src_name();
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes dst_name = 5;
inline bool NotifyBroadExpress::has_dst_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyBroadExpress::set_has_dst_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyBroadExpress::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyBroadExpress::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& NotifyBroadExpress::dst_name() const {
  return *dst_name_;
}
inline void NotifyBroadExpress::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void NotifyBroadExpress::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void NotifyBroadExpress::set_dst_name(const void* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyBroadExpress::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* NotifyBroadExpress::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyBroadExpress::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WeddingSignReq

// -------------------------------------------------------------------

// WeddingSignRsp

// optional int32 ret = 1;
inline bool WeddingSignRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingSignRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingSignRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingSignRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WeddingSignRsp::ret() const {
  return ret_;
}
inline void WeddingSignRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WeddingFireReq

// optional int32 itemid = 1;
inline bool WeddingFireReq::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingFireReq::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingFireReq::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingFireReq::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 WeddingFireReq::itemid() const {
  return itemid_;
}
inline void WeddingFireReq::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// WeddingFireRsp

// optional int32 ret = 1;
inline bool WeddingFireRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeddingFireRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeddingFireRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeddingFireRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WeddingFireRsp::ret() const {
  return ret_;
}
inline void WeddingFireRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 itemid = 2;
inline bool WeddingFireRsp::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeddingFireRsp::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeddingFireRsp::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeddingFireRsp::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 WeddingFireRsp::itemid() const {
  return itemid_;
}
inline void WeddingFireRsp::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// NotifyBroadFire

// optional uint64 cid = 1;
inline bool NotifyBroadFire::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyBroadFire::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyBroadFire::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyBroadFire::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyBroadFire::cid() const {
  return cid_;
}
inline void NotifyBroadFire::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 itemid = 2;
inline bool NotifyBroadFire::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyBroadFire::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyBroadFire::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyBroadFire::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 NotifyBroadFire::itemid() const {
  return itemid_;
}
inline void NotifyBroadFire::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// NotifyWeddingDupData

// optional int32 step = 1;
inline bool NotifyWeddingDupData::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingDupData::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingDupData::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingDupData::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 NotifyWeddingDupData::step() const {
  return step_;
}
inline void NotifyWeddingDupData::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// optional int32 enter = 2;
inline bool NotifyWeddingDupData::has_enter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyWeddingDupData::set_has_enter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyWeddingDupData::clear_has_enter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyWeddingDupData::clear_enter() {
  enter_ = 0;
  clear_has_enter();
}
inline ::google::protobuf::int32 NotifyWeddingDupData::enter() const {
  return enter_;
}
inline void NotifyWeddingDupData::set_enter(::google::protobuf::int32 value) {
  set_has_enter();
  enter_ = value;
}

// optional uint64 step_end_time = 3;
inline bool NotifyWeddingDupData::has_step_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyWeddingDupData::set_has_step_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyWeddingDupData::clear_has_step_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyWeddingDupData::clear_step_end_time() {
  step_end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_step_end_time();
}
inline ::google::protobuf::uint64 NotifyWeddingDupData::step_end_time() const {
  return step_end_time_;
}
inline void NotifyWeddingDupData::set_step_end_time(::google::protobuf::uint64 value) {
  set_has_step_end_time();
  step_end_time_ = value;
}

// optional uint64 qinyou_npc_cid = 4;
inline bool NotifyWeddingDupData::has_qinyou_npc_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyWeddingDupData::set_has_qinyou_npc_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyWeddingDupData::clear_has_qinyou_npc_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyWeddingDupData::clear_qinyou_npc_cid() {
  qinyou_npc_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_qinyou_npc_cid();
}
inline ::google::protobuf::uint64 NotifyWeddingDupData::qinyou_npc_cid() const {
  return qinyou_npc_cid_;
}
inline void NotifyWeddingDupData::set_qinyou_npc_cid(::google::protobuf::uint64 value) {
  set_has_qinyou_npc_cid();
  qinyou_npc_cid_ = value;
}

// optional int32 qinyou_result = 5;
inline bool NotifyWeddingDupData::has_qinyou_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyWeddingDupData::set_has_qinyou_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyWeddingDupData::clear_has_qinyou_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyWeddingDupData::clear_qinyou_result() {
  qinyou_result_ = 0;
  clear_has_qinyou_result();
}
inline ::google::protobuf::int32 NotifyWeddingDupData::qinyou_result() const {
  return qinyou_result_;
}
inline void NotifyWeddingDupData::set_qinyou_result(::google::protobuf::int32 value) {
  set_has_qinyou_result();
  qinyou_result_ = value;
}

// optional int32 warm_value = 6;
inline bool NotifyWeddingDupData::has_warm_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyWeddingDupData::set_has_warm_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyWeddingDupData::clear_has_warm_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyWeddingDupData::clear_warm_value() {
  warm_value_ = 0;
  clear_has_warm_value();
}
inline ::google::protobuf::int32 NotifyWeddingDupData::warm_value() const {
  return warm_value_;
}
inline void NotifyWeddingDupData::set_warm_value(::google::protobuf::int32 value) {
  set_has_warm_value();
  warm_value_ = value;
}

// repeated .proto_ff.RolePlayerMiniInfo infos = 7;
inline int NotifyWeddingDupData::infos_size() const {
  return infos_.size();
}
inline void NotifyWeddingDupData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& NotifyWeddingDupData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyWeddingDupData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* NotifyWeddingDupData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
NotifyWeddingDupData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
NotifyWeddingDupData::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyWeddingDupRole

// optional int32 sign_num = 1;
inline bool NotifyWeddingDupRole::has_sign_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWeddingDupRole::set_has_sign_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyWeddingDupRole::clear_has_sign_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyWeddingDupRole::clear_sign_num() {
  sign_num_ = 0;
  clear_has_sign_num();
}
inline ::google::protobuf::int32 NotifyWeddingDupRole::sign_num() const {
  return sign_num_;
}
inline void NotifyWeddingDupRole::set_sign_num(::google::protobuf::int32 value) {
  set_has_sign_num();
  sign_num_ = value;
}

// optional uint64 exp = 2;
inline bool NotifyWeddingDupRole::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyWeddingDupRole::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyWeddingDupRole::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyWeddingDupRole::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 NotifyWeddingDupRole::exp() const {
  return exp_;
}
inline void NotifyWeddingDupRole::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 cakeRewardNum = 3;
inline bool NotifyWeddingDupRole::has_cakerewardnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyWeddingDupRole::set_has_cakerewardnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyWeddingDupRole::clear_has_cakerewardnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyWeddingDupRole::clear_cakerewardnum() {
  cakerewardnum_ = 0;
  clear_has_cakerewardnum();
}
inline ::google::protobuf::int32 NotifyWeddingDupRole::cakerewardnum() const {
  return cakerewardnum_;
}
inline void NotifyWeddingDupRole::set_cakerewardnum(::google::protobuf::int32 value) {
  set_has_cakerewardnum();
  cakerewardnum_ = value;
}

// optional int32 curCakeNum = 4;
inline bool NotifyWeddingDupRole::has_curcakenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyWeddingDupRole::set_has_curcakenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyWeddingDupRole::clear_has_curcakenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyWeddingDupRole::clear_curcakenum() {
  curcakenum_ = 0;
  clear_has_curcakenum();
}
inline ::google::protobuf::int32 NotifyWeddingDupRole::curcakenum() const {
  return curcakenum_;
}
inline void NotifyWeddingDupRole::set_curcakenum(::google::protobuf::int32 value) {
  set_has_curcakenum();
  curcakenum_ = value;
}

// repeated uint64 yanxi_cid = 5;
inline int NotifyWeddingDupRole::yanxi_cid_size() const {
  return yanxi_cid_.size();
}
inline void NotifyWeddingDupRole::clear_yanxi_cid() {
  yanxi_cid_.Clear();
}
inline ::google::protobuf::uint64 NotifyWeddingDupRole::yanxi_cid(int index) const {
  return yanxi_cid_.Get(index);
}
inline void NotifyWeddingDupRole::set_yanxi_cid(int index, ::google::protobuf::uint64 value) {
  yanxi_cid_.Set(index, value);
}
inline void NotifyWeddingDupRole::add_yanxi_cid(::google::protobuf::uint64 value) {
  yanxi_cid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NotifyWeddingDupRole::yanxi_cid() const {
  return yanxi_cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NotifyWeddingDupRole::mutable_yanxi_cid() {
  return &yanxi_cid_;
}

// -------------------------------------------------------------------

// throwCakeReq

// optional uint64 target_cid = 1;
inline bool throwCakeReq::has_target_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void throwCakeReq::set_has_target_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void throwCakeReq::clear_has_target_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void throwCakeReq::clear_target_cid() {
  target_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_cid();
}
inline ::google::protobuf::uint64 throwCakeReq::target_cid() const {
  return target_cid_;
}
inline void throwCakeReq::set_target_cid(::google::protobuf::uint64 value) {
  set_has_target_cid();
  target_cid_ = value;
}

// -------------------------------------------------------------------

// throwCakeRsp

// optional int32 ret = 1;
inline bool throwCakeRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void throwCakeRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void throwCakeRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void throwCakeRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 throwCakeRsp::ret() const {
  return ret_;
}
inline void throwCakeRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// NotifyMarryRedNum

// optional int32 num = 1;
inline bool NotifyMarryRedNum::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMarryRedNum::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMarryRedNum::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMarryRedNum::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 NotifyMarryRedNum::num() const {
  return num_;
}
inline void NotifyMarryRedNum::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// SendMarryRedReq

// -------------------------------------------------------------------

// SendMarryRedRsp

// optional int32 ret = 1;
inline bool SendMarryRedRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMarryRedRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMarryRedRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMarryRedRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SendMarryRedRsp::ret() const {
  return ret_;
}
inline void SendMarryRedRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// C2LMarryReq

// optional uint64 src_id = 1;
inline bool C2LMarryReq::has_src_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LMarryReq::set_has_src_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LMarryReq::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LMarryReq::clear_src_id() {
  src_id_ = GOOGLE_ULONGLONG(0);
  clear_has_src_id();
}
inline ::google::protobuf::uint64 C2LMarryReq::src_id() const {
  return src_id_;
}
inline void C2LMarryReq::set_src_id(::google::protobuf::uint64 value) {
  set_has_src_id();
  src_id_ = value;
}

// optional uint64 dst_cid = 2;
inline bool C2LMarryReq::has_dst_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LMarryReq::set_has_dst_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LMarryReq::clear_has_dst_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LMarryReq::clear_dst_cid() {
  dst_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_cid();
}
inline ::google::protobuf::uint64 C2LMarryReq::dst_cid() const {
  return dst_cid_;
}
inline void C2LMarryReq::set_dst_cid(::google::protobuf::uint64 value) {
  set_has_dst_cid();
  dst_cid_ = value;
}

// optional int32 gear = 3;
inline bool C2LMarryReq::has_gear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LMarryReq::set_has_gear() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LMarryReq::clear_has_gear() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LMarryReq::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 C2LMarryReq::gear() const {
  return gear_;
}
inline void C2LMarryReq::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// -------------------------------------------------------------------

// L2CMarryRsp

// optional int32 ret = 1;
inline bool L2CMarryRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CMarryRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CMarryRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CMarryRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CMarryRsp::ret() const {
  return ret_;
}
inline void L2CMarryRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 src_id = 2;
inline bool L2CMarryRsp::has_src_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CMarryRsp::set_has_src_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CMarryRsp::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CMarryRsp::clear_src_id() {
  src_id_ = GOOGLE_ULONGLONG(0);
  clear_has_src_id();
}
inline ::google::protobuf::uint64 L2CMarryRsp::src_id() const {
  return src_id_;
}
inline void L2CMarryRsp::set_src_id(::google::protobuf::uint64 value) {
  set_has_src_id();
  src_id_ = value;
}

// optional uint64 dst_cid = 3;
inline bool L2CMarryRsp::has_dst_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CMarryRsp::set_has_dst_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CMarryRsp::clear_has_dst_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CMarryRsp::clear_dst_cid() {
  dst_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_cid();
}
inline ::google::protobuf::uint64 L2CMarryRsp::dst_cid() const {
  return dst_cid_;
}
inline void L2CMarryRsp::set_dst_cid(::google::protobuf::uint64 value) {
  set_has_dst_cid();
  dst_cid_ = value;
}

// optional int32 gear = 4;
inline bool L2CMarryRsp::has_gear() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CMarryRsp::set_has_gear() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CMarryRsp::clear_has_gear() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CMarryRsp::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 L2CMarryRsp::gear() const {
  return gear_;
}
inline void L2CMarryRsp::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// -------------------------------------------------------------------

// C2LNotifyMarryCmpt

// optional .proto_ff.RolePlayerMiniInfo dst = 1;
inline bool C2LNotifyMarryCmpt::has_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LNotifyMarryCmpt::set_has_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LNotifyMarryCmpt::clear_has_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LNotifyMarryCmpt::clear_dst() {
  if (dst_ != NULL) dst_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_dst();
}
inline const ::proto_ff::RolePlayerMiniInfo& C2LNotifyMarryCmpt::dst() const {
  return dst_ != NULL ? *dst_ : *default_instance_->dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* C2LNotifyMarryCmpt::mutable_dst() {
  set_has_dst();
  if (dst_ == NULL) dst_ = new ::proto_ff::RolePlayerMiniInfo;
  return dst_;
}
inline ::proto_ff::RolePlayerMiniInfo* C2LNotifyMarryCmpt::release_dst() {
  clear_has_dst();
  ::proto_ff::RolePlayerMiniInfo* temp = dst_;
  dst_ = NULL;
  return temp;
}
inline void C2LNotifyMarryCmpt::set_allocated_dst(::proto_ff::RolePlayerMiniInfo* dst) {
  delete dst_;
  dst_ = dst;
  if (dst) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
}

// optional int32 gear = 2;
inline bool C2LNotifyMarryCmpt::has_gear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LNotifyMarryCmpt::set_has_gear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LNotifyMarryCmpt::clear_has_gear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LNotifyMarryCmpt::clear_gear() {
  gear_ = 0;
  clear_has_gear();
}
inline ::google::protobuf::int32 C2LNotifyMarryCmpt::gear() const {
  return gear_;
}
inline void C2LNotifyMarryCmpt::set_gear(::google::protobuf::int32 value) {
  set_has_gear();
  gear_ = value;
}

// optional uint64 applyer = 3;
inline bool C2LNotifyMarryCmpt::has_applyer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LNotifyMarryCmpt::set_has_applyer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LNotifyMarryCmpt::clear_has_applyer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LNotifyMarryCmpt::clear_applyer() {
  applyer_ = GOOGLE_ULONGLONG(0);
  clear_has_applyer();
}
inline ::google::protobuf::uint64 C2LNotifyMarryCmpt::applyer() const {
  return applyer_;
}
inline void C2LNotifyMarryCmpt::set_applyer(::google::protobuf::uint64 value) {
  set_has_applyer();
  applyer_ = value;
}

// optional int32 marry_id = 4;
inline bool C2LNotifyMarryCmpt::has_marry_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LNotifyMarryCmpt::set_has_marry_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LNotifyMarryCmpt::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LNotifyMarryCmpt::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 C2LNotifyMarryCmpt::marry_id() const {
  return marry_id_;
}
inline void C2LNotifyMarryCmpt::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// optional uint64 cid = 5;
inline bool C2LNotifyMarryCmpt::has_cid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LNotifyMarryCmpt::set_has_cid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LNotifyMarryCmpt::clear_has_cid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LNotifyMarryCmpt::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LNotifyMarryCmpt::cid() const {
  return cid_;
}
inline void C2LNotifyMarryCmpt::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// L2CUpdateMarryBrief

// optional uint64 cid = 1;
inline bool L2CUpdateMarryBrief::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CUpdateMarryBrief::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CUpdateMarryBrief::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CUpdateMarryBrief::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CUpdateMarryBrief::cid() const {
  return cid_;
}
inline void L2CUpdateMarryBrief::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional .proto_ff.MarryBrief brief = 2;
inline bool L2CUpdateMarryBrief::has_brief() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CUpdateMarryBrief::set_has_brief() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CUpdateMarryBrief::clear_has_brief() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CUpdateMarryBrief::clear_brief() {
  if (brief_ != NULL) brief_->::proto_ff::MarryBrief::Clear();
  clear_has_brief();
}
inline const ::proto_ff::MarryBrief& L2CUpdateMarryBrief::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::proto_ff::MarryBrief* L2CUpdateMarryBrief::mutable_brief() {
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::proto_ff::MarryBrief;
  return brief_;
}
inline ::proto_ff::MarryBrief* L2CUpdateMarryBrief::release_brief() {
  clear_has_brief();
  ::proto_ff::MarryBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void L2CUpdateMarryBrief::set_allocated_brief(::proto_ff::MarryBrief* brief) {
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// -------------------------------------------------------------------

// C2LNotifyDivorce

// optional uint64 cid = 1;
inline bool C2LNotifyDivorce::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LNotifyDivorce::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LNotifyDivorce::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LNotifyDivorce::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LNotifyDivorce::cid() const {
  return cid_;
}
inline void C2LNotifyDivorce::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// C2LExpressReq

// optional uint64 cid = 1;
inline bool C2LExpressReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LExpressReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LExpressReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LExpressReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LExpressReq::cid() const {
  return cid_;
}
inline void C2LExpressReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool C2LExpressReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LExpressReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LExpressReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LExpressReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& C2LExpressReq::name() const {
  return *name_;
}
inline void C2LExpressReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void C2LExpressReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void C2LExpressReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2LExpressReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* C2LExpressReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2LExpressReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.ExpressReq req = 3;
inline bool C2LExpressReq::has_req() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LExpressReq::set_has_req() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LExpressReq::clear_has_req() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LExpressReq::clear_req() {
  if (req_ != NULL) req_->::proto_ff::ExpressReq::Clear();
  clear_has_req();
}
inline const ::proto_ff::ExpressReq& C2LExpressReq::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::proto_ff::ExpressReq* C2LExpressReq::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::proto_ff::ExpressReq;
  return req_;
}
inline ::proto_ff::ExpressReq* C2LExpressReq::release_req() {
  clear_has_req();
  ::proto_ff::ExpressReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void C2LExpressReq::set_allocated_req(::proto_ff::ExpressReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// -------------------------------------------------------------------

// L2CNotifyExpressSuccess

// optional uint64 cid = 1;
inline bool L2CNotifyExpressSuccess::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CNotifyExpressSuccess::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CNotifyExpressSuccess::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CNotifyExpressSuccess::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CNotifyExpressSuccess::cid() const {
  return cid_;
}
inline void L2CNotifyExpressSuccess::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional .proto_ff.ExpressReq req = 2;
inline bool L2CNotifyExpressSuccess::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CNotifyExpressSuccess::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CNotifyExpressSuccess::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CNotifyExpressSuccess::clear_req() {
  if (req_ != NULL) req_->::proto_ff::ExpressReq::Clear();
  clear_has_req();
}
inline const ::proto_ff::ExpressReq& L2CNotifyExpressSuccess::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::proto_ff::ExpressReq* L2CNotifyExpressSuccess::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::proto_ff::ExpressReq;
  return req_;
}
inline ::proto_ff::ExpressReq* L2CNotifyExpressSuccess::release_req() {
  clear_has_req();
  ::proto_ff::ExpressReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void L2CNotifyExpressSuccess::set_allocated_req(::proto_ff::ExpressReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// -------------------------------------------------------------------

// C2LNotifyExpressToDst

// optional uint64 cid = 1;
inline bool C2LNotifyExpressToDst::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LNotifyExpressToDst::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LNotifyExpressToDst::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LNotifyExpressToDst::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LNotifyExpressToDst::cid() const {
  return cid_;
}
inline void C2LNotifyExpressToDst::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional .proto_ff.NotifyExpressToDst req = 2;
inline bool C2LNotifyExpressToDst::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LNotifyExpressToDst::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LNotifyExpressToDst::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LNotifyExpressToDst::clear_req() {
  if (req_ != NULL) req_->::proto_ff::NotifyExpressToDst::Clear();
  clear_has_req();
}
inline const ::proto_ff::NotifyExpressToDst& C2LNotifyExpressToDst::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::proto_ff::NotifyExpressToDst* C2LNotifyExpressToDst::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::proto_ff::NotifyExpressToDst;
  return req_;
}
inline ::proto_ff::NotifyExpressToDst* C2LNotifyExpressToDst::release_req() {
  clear_has_req();
  ::proto_ff::NotifyExpressToDst* temp = req_;
  req_ = NULL;
  return temp;
}
inline void C2LNotifyExpressToDst::set_allocated_req(::proto_ff::NotifyExpressToDst* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// -------------------------------------------------------------------

// C2LNotifyMarryDst

// optional int32 type = 1;
inline bool C2LNotifyMarryDst::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LNotifyMarryDst::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LNotifyMarryDst::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LNotifyMarryDst::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 C2LNotifyMarryDst::type() const {
  return type_;
}
inline void C2LNotifyMarryDst::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 cid = 2;
inline bool C2LNotifyMarryDst::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LNotifyMarryDst::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LNotifyMarryDst::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LNotifyMarryDst::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LNotifyMarryDst::cid() const {
  return cid_;
}
inline void C2LNotifyMarryDst::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 my_dst_recv_day = 3;
inline bool C2LNotifyMarryDst::has_my_dst_recv_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LNotifyMarryDst::set_has_my_dst_recv_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LNotifyMarryDst::clear_has_my_dst_recv_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LNotifyMarryDst::clear_my_dst_recv_day() {
  my_dst_recv_day_ = 0;
  clear_has_my_dst_recv_day();
}
inline ::google::protobuf::int32 C2LNotifyMarryDst::my_dst_recv_day() const {
  return my_dst_recv_day_;
}
inline void C2LNotifyMarryDst::set_my_dst_recv_day(::google::protobuf::int32 value) {
  set_has_my_dst_recv_day();
  my_dst_recv_day_ = value;
}

// optional int32 dst_give_dup_num = 4;
inline bool C2LNotifyMarryDst::has_dst_give_dup_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LNotifyMarryDst::set_has_dst_give_dup_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LNotifyMarryDst::clear_has_dst_give_dup_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LNotifyMarryDst::clear_dst_give_dup_num() {
  dst_give_dup_num_ = 0;
  clear_has_dst_give_dup_num();
}
inline ::google::protobuf::int32 C2LNotifyMarryDst::dst_give_dup_num() const {
  return dst_give_dup_num_;
}
inline void C2LNotifyMarryDst::set_dst_give_dup_num(::google::protobuf::int32 value) {
  set_has_dst_give_dup_num();
  dst_give_dup_num_ = value;
}

// optional int32 marry_id = 5;
inline bool C2LNotifyMarryDst::has_marry_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LNotifyMarryDst::set_has_marry_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LNotifyMarryDst::clear_has_marry_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LNotifyMarryDst::clear_marry_id() {
  marry_id_ = 0;
  clear_has_marry_id();
}
inline ::google::protobuf::int32 C2LNotifyMarryDst::marry_id() const {
  return marry_id_;
}
inline void C2LNotifyMarryDst::set_marry_id(::google::protobuf::int32 value) {
  set_has_marry_id();
  marry_id_ = value;
}

// optional .proto_ff.MarryBrief brief = 6;
inline bool C2LNotifyMarryDst::has_brief() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2LNotifyMarryDst::set_has_brief() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2LNotifyMarryDst::clear_has_brief() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2LNotifyMarryDst::clear_brief() {
  if (brief_ != NULL) brief_->::proto_ff::MarryBrief::Clear();
  clear_has_brief();
}
inline const ::proto_ff::MarryBrief& C2LNotifyMarryDst::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::proto_ff::MarryBrief* C2LNotifyMarryDst::mutable_brief() {
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::proto_ff::MarryBrief;
  return brief_;
}
inline ::proto_ff::MarryBrief* C2LNotifyMarryDst::release_brief() {
  clear_has_brief();
  ::proto_ff::MarryBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void C2LNotifyMarryDst::set_allocated_brief(::proto_ff::MarryBrief* brief) {
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// optional bytes dst_name = 7;
inline bool C2LNotifyMarryDst::has_dst_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void C2LNotifyMarryDst::set_has_dst_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void C2LNotifyMarryDst::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void C2LNotifyMarryDst::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& C2LNotifyMarryDst::dst_name() const {
  return *dst_name_;
}
inline void C2LNotifyMarryDst::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void C2LNotifyMarryDst::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void C2LNotifyMarryDst::set_dst_name(const void* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2LNotifyMarryDst::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* C2LNotifyMarryDst::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2LNotifyMarryDst::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 gear = 8;
inline int C2LNotifyMarryDst::gear_size() const {
  return gear_.size();
}
inline void C2LNotifyMarryDst::clear_gear() {
  gear_.Clear();
}
inline ::google::protobuf::int32 C2LNotifyMarryDst::gear(int index) const {
  return gear_.Get(index);
}
inline void C2LNotifyMarryDst::set_gear(int index, ::google::protobuf::int32 value) {
  gear_.Set(index, value);
}
inline void C2LNotifyMarryDst::add_gear(::google::protobuf::int32 value) {
  gear_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
C2LNotifyMarryDst::gear() const {
  return gear_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
C2LNotifyMarryDst::mutable_gear() {
  return &gear_;
}

// -------------------------------------------------------------------

// C2LGlobalExpressReq

// optional uint64 cid = 1;
inline bool C2LGlobalExpressReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LGlobalExpressReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LGlobalExpressReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LGlobalExpressReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LGlobalExpressReq::cid() const {
  return cid_;
}
inline void C2LGlobalExpressReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// C2LNotifyMarryBuySuccess

// optional uint64 cid = 1;
inline bool C2LNotifyMarryBuySuccess::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LNotifyMarryBuySuccess::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LNotifyMarryBuySuccess::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LNotifyMarryBuySuccess::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LNotifyMarryBuySuccess::cid() const {
  return cid_;
}
inline void C2LNotifyMarryBuySuccess::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 ret = 2;
inline bool C2LNotifyMarryBuySuccess::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LNotifyMarryBuySuccess::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LNotifyMarryBuySuccess::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LNotifyMarryBuySuccess::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 C2LNotifyMarryBuySuccess::ret() const {
  return ret_;
}
inline void C2LNotifyMarryBuySuccess::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 3;
inline bool C2LNotifyMarryBuySuccess::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LNotifyMarryBuySuccess::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LNotifyMarryBuySuccess::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LNotifyMarryBuySuccess::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 C2LNotifyMarryBuySuccess::type() const {
  return type_;
}
inline void C2LNotifyMarryBuySuccess::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// C2LMarryRecvDstCard

// optional uint64 cid = 1;
inline bool C2LMarryRecvDstCard::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LMarryRecvDstCard::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LMarryRecvDstCard::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LMarryRecvDstCard::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LMarryRecvDstCard::cid() const {
  return cid_;
}
inline void C2LMarryRecvDstCard::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 days = 2;
inline bool C2LMarryRecvDstCard::has_days() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LMarryRecvDstCard::set_has_days() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LMarryRecvDstCard::clear_has_days() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LMarryRecvDstCard::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 C2LMarryRecvDstCard::days() const {
  return days_;
}
inline void C2LMarryRecvDstCard::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
}

// -------------------------------------------------------------------

// C2LWeddingBuySeatReq

// optional uint64 cid = 1;
inline bool C2LWeddingBuySeatReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LWeddingBuySeatReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LWeddingBuySeatReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LWeddingBuySeatReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LWeddingBuySeatReq::cid() const {
  return cid_;
}
inline void C2LWeddingBuySeatReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 wedding_id = 2;
inline bool C2LWeddingBuySeatReq::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LWeddingBuySeatReq::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LWeddingBuySeatReq::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LWeddingBuySeatReq::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 C2LWeddingBuySeatReq::wedding_id() const {
  return wedding_id_;
}
inline void C2LWeddingBuySeatReq::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// L2CWeddingBuySeatRsp

// optional int32 ret = 1;
inline bool L2CWeddingBuySeatRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CWeddingBuySeatRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CWeddingBuySeatRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CWeddingBuySeatRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CWeddingBuySeatRsp::ret() const {
  return ret_;
}
inline void L2CWeddingBuySeatRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 cid = 2;
inline bool L2CWeddingBuySeatRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CWeddingBuySeatRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CWeddingBuySeatRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CWeddingBuySeatRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CWeddingBuySeatRsp::cid() const {
  return cid_;
}
inline void L2CWeddingBuySeatRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 wedding_id = 3;
inline bool L2CWeddingBuySeatRsp::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CWeddingBuySeatRsp::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CWeddingBuySeatRsp::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CWeddingBuySeatRsp::clear_wedding_id() {
  wedding_id_ = 0;
  clear_has_wedding_id();
}
inline ::google::protobuf::int32 L2CWeddingBuySeatRsp::wedding_id() const {
  return wedding_id_;
}
inline void L2CWeddingBuySeatRsp::set_wedding_id(::google::protobuf::int32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// -------------------------------------------------------------------

// C2LNotifyWeddingTour

// optional uint32 wedding_id = 1;
inline bool C2LNotifyWeddingTour::has_wedding_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LNotifyWeddingTour::set_has_wedding_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LNotifyWeddingTour::clear_has_wedding_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LNotifyWeddingTour::clear_wedding_id() {
  wedding_id_ = 0u;
  clear_has_wedding_id();
}
inline ::google::protobuf::uint32 C2LNotifyWeddingTour::wedding_id() const {
  return wedding_id_;
}
inline void C2LNotifyWeddingTour::set_wedding_id(::google::protobuf::uint32 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional uint64 scene_id = 2;
inline bool C2LNotifyWeddingTour::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LNotifyWeddingTour::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LNotifyWeddingTour::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LNotifyWeddingTour::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 C2LNotifyWeddingTour::scene_id() const {
  return scene_id_;
}
inline void C2LNotifyWeddingTour::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional uint64 tour_end_time = 3;
inline bool C2LNotifyWeddingTour::has_tour_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LNotifyWeddingTour::set_has_tour_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LNotifyWeddingTour::clear_has_tour_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LNotifyWeddingTour::clear_tour_end_time() {
  tour_end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_tour_end_time();
}
inline ::google::protobuf::uint64 C2LNotifyWeddingTour::tour_end_time() const {
  return tour_end_time_;
}
inline void C2LNotifyWeddingTour::set_tour_end_time(::google::protobuf::uint64 value) {
  set_has_tour_end_time();
  tour_end_time_ = value;
}

// optional uint64 src_cid = 4;
inline bool C2LNotifyWeddingTour::has_src_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LNotifyWeddingTour::set_has_src_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LNotifyWeddingTour::clear_has_src_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LNotifyWeddingTour::clear_src_cid() {
  src_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_src_cid();
}
inline ::google::protobuf::uint64 C2LNotifyWeddingTour::src_cid() const {
  return src_cid_;
}
inline void C2LNotifyWeddingTour::set_src_cid(::google::protobuf::uint64 value) {
  set_has_src_cid();
  src_cid_ = value;
}

// optional uint64 dst_cid = 5;
inline bool C2LNotifyWeddingTour::has_dst_cid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LNotifyWeddingTour::set_has_dst_cid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LNotifyWeddingTour::clear_has_dst_cid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LNotifyWeddingTour::clear_dst_cid() {
  dst_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_cid();
}
inline ::google::protobuf::uint64 C2LNotifyWeddingTour::dst_cid() const {
  return dst_cid_;
}
inline void C2LNotifyWeddingTour::set_dst_cid(::google::protobuf::uint64 value) {
  set_has_dst_cid();
  dst_cid_ = value;
}

// -------------------------------------------------------------------

// C2LWeddingTourOver


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_marry_2eproto__INCLUDED
