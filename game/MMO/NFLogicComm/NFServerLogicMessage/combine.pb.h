// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: combine.proto

#ifndef PROTOBUF_combine_2eproto__INCLUDED
#define PROTOBUF_combine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_combine_2eproto();
void protobuf_AssignDesc_combine_2eproto();
void protobuf_ShutdownFile_combine_2eproto();

class combinecitemneedMaterialDesc;
class combinecitem;
class Sheet_combinecitem;
class combinestarUp;
class Sheet_combinestarUp;
class combineitemUp;
class Sheet_combineitemUp;
class combinerankUp;
class Sheet_combinerankUp;
class combinequalityUpneedEqupDesc;
class combinequalityUpneedMaterialDesc;
class combinequalityUp;
class Sheet_combinequalityUp;

// ===================================================================

class combinecitemneedMaterialDesc : public ::google::protobuf::Message {
 public:
  combinecitemneedMaterialDesc();
  virtual ~combinecitemneedMaterialDesc();

  combinecitemneedMaterialDesc(const combinecitemneedMaterialDesc& from);

  inline combinecitemneedMaterialDesc& operator=(const combinecitemneedMaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinecitemneedMaterialDesc& default_instance();

  void Swap(combinecitemneedMaterialDesc* other);

  // implements Message ----------------------------------------------

  combinecitemneedMaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinecitemneedMaterialDesc& from);
  void MergeFrom(const combinecitemneedMaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.combinecitemneedMaterialDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinecitemneedMaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class combinecitem : public ::google::protobuf::Message {
 public:
  combinecitem();
  virtual ~combinecitem();

  combinecitem(const combinecitem& from);

  inline combinecitem& operator=(const combinecitem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinecitem& default_instance();

  void Swap(combinecitem* other);

  // implements Message ----------------------------------------------

  combinecitem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinecitem& from);
  void MergeFrom(const combinecitem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 newItem = 1;
  inline bool has_newitem() const;
  inline void clear_newitem();
  static const int kNewItemFieldNumber = 1;
  inline ::google::protobuf::int64 newitem() const;
  inline void set_newitem(::google::protobuf::int64 value);

  // optional int32 moneyType = 2;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 2;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // optional int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 huobiType = 4;
  inline bool has_huobitype() const;
  inline void clear_huobitype();
  static const int kHuobiTypeFieldNumber = 4;
  inline ::google::protobuf::int32 huobitype() const;
  inline void set_huobitype(::google::protobuf::int32 value);

  // optional int32 huobiPrice = 5;
  inline bool has_huobiprice() const;
  inline void clear_huobiprice();
  static const int kHuobiPriceFieldNumber = 5;
  inline ::google::protobuf::int32 huobiprice() const;
  inline void set_huobiprice(::google::protobuf::int32 value);

  // optional int32 probability = 6;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 6;
  inline ::google::protobuf::int32 probability() const;
  inline void set_probability(::google::protobuf::int32 value);

  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 floor = 8;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 8;
  inline ::google::protobuf::int32 floor() const;
  inline void set_floor(::google::protobuf::int32 value);

  // repeated .proto_ff.combinecitemneedMaterialDesc needMaterial = 9;
  inline int needmaterial_size() const;
  inline void clear_needmaterial();
  static const int kNeedMaterialFieldNumber = 9;
  inline const ::proto_ff::combinecitemneedMaterialDesc& needmaterial(int index) const;
  inline ::proto_ff::combinecitemneedMaterialDesc* mutable_needmaterial(int index);
  inline ::proto_ff::combinecitemneedMaterialDesc* add_needmaterial();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitemneedMaterialDesc >&
      needmaterial() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitemneedMaterialDesc >*
      mutable_needmaterial();

  // @@protoc_insertion_point(class_scope:proto_ff.combinecitem)
 private:
  inline void set_has_newitem();
  inline void clear_has_newitem();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_huobitype();
  inline void clear_has_huobitype();
  inline void set_has_huobiprice();
  inline void clear_has_huobiprice();
  inline void set_has_probability();
  inline void clear_has_probability();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_floor();
  inline void clear_has_floor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 newitem_;
  ::google::protobuf::int32 moneytype_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 huobitype_;
  ::google::protobuf::int32 huobiprice_;
  ::google::protobuf::int32 probability_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitemneedMaterialDesc > needmaterial_;
  ::google::protobuf::int32 floor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinecitem* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_combinecitem : public ::google::protobuf::Message {
 public:
  Sheet_combinecitem();
  virtual ~Sheet_combinecitem();

  Sheet_combinecitem(const Sheet_combinecitem& from);

  inline Sheet_combinecitem& operator=(const Sheet_combinecitem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_combinecitem& default_instance();

  void Swap(Sheet_combinecitem* other);

  // implements Message ----------------------------------------------

  Sheet_combinecitem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_combinecitem& from);
  void MergeFrom(const Sheet_combinecitem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.combinecitem combinecitem_List = 1;
  inline int combinecitem_list_size() const;
  inline void clear_combinecitem_list();
  static const int kCombinecitemListFieldNumber = 1;
  inline const ::proto_ff::combinecitem& combinecitem_list(int index) const;
  inline ::proto_ff::combinecitem* mutable_combinecitem_list(int index);
  inline ::proto_ff::combinecitem* add_combinecitem_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitem >&
      combinecitem_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitem >*
      mutable_combinecitem_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_combinecitem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitem > combinecitem_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static Sheet_combinecitem* default_instance_;
};
// -------------------------------------------------------------------

class combinestarUp : public ::google::protobuf::Message {
 public:
  combinestarUp();
  virtual ~combinestarUp();

  combinestarUp(const combinestarUp& from);

  inline combinestarUp& operator=(const combinestarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinestarUp& default_instance();

  void Swap(combinestarUp* other);

  // implements Message ----------------------------------------------

  combinestarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinestarUp& from);
  void MergeFrom(const combinestarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 newItem = 1;
  inline bool has_newitem() const;
  inline void clear_newitem();
  static const int kNewItemFieldNumber = 1;
  inline ::google::protobuf::int64 newitem() const;
  inline void set_newitem(::google::protobuf::int64 value);

  // optional int32 equipMin = 2;
  inline bool has_equipmin() const;
  inline void clear_equipmin();
  static const int kEquipMinFieldNumber = 2;
  inline ::google::protobuf::int32 equipmin() const;
  inline void set_equipmin(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 needMaterial_id = 4;
  inline bool has_needmaterial_id() const;
  inline void clear_needmaterial_id();
  static const int kNeedMaterialIdFieldNumber = 4;
  inline ::google::protobuf::int64 needmaterial_id() const;
  inline void set_needmaterial_id(::google::protobuf::int64 value);

  // optional int32 needMaterial_num = 5;
  inline bool has_needmaterial_num() const;
  inline void clear_needmaterial_num();
  static const int kNeedMaterialNumFieldNumber = 5;
  inline ::google::protobuf::int32 needmaterial_num() const;
  inline void set_needmaterial_num(::google::protobuf::int32 value);

  // optional int32 star = 6;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 6;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 wearQuality = 7;
  inline bool has_wearquality() const;
  inline void clear_wearquality();
  static const int kWearQualityFieldNumber = 7;
  inline ::google::protobuf::int32 wearquality() const;
  inline void set_wearquality(::google::protobuf::int32 value);

  // optional int32 quality = 8;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 8;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 sameProfession = 9;
  inline bool has_sameprofession() const;
  inline void clear_sameprofession();
  static const int kSameProfessionFieldNumber = 9;
  inline ::google::protobuf::int32 sameprofession() const;
  inline void set_sameprofession(::google::protobuf::int32 value);

  // optional string samePosition = 10;
  inline bool has_sameposition() const;
  inline void clear_sameposition();
  static const int kSamePositionFieldNumber = 10;
  inline const ::std::string& sameposition() const;
  inline void set_sameposition(const ::std::string& value);
  inline void set_sameposition(const char* value);
  inline void set_sameposition(const char* value, size_t size);
  inline ::std::string* mutable_sameposition();
  inline ::std::string* release_sameposition();
  inline void set_allocated_sameposition(::std::string* sameposition);

  // optional int32 probability = 11;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 11;
  inline ::google::protobuf::int32 probability() const;
  inline void set_probability(::google::protobuf::int32 value);

  // optional int32 increase = 12;
  inline bool has_increase() const;
  inline void clear_increase();
  static const int kIncreaseFieldNumber = 12;
  inline ::google::protobuf::int32 increase() const;
  inline void set_increase(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.combinestarUp)
 private:
  inline void set_has_newitem();
  inline void clear_has_newitem();
  inline void set_has_equipmin();
  inline void clear_has_equipmin();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_needmaterial_id();
  inline void clear_has_needmaterial_id();
  inline void set_has_needmaterial_num();
  inline void clear_has_needmaterial_num();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_wearquality();
  inline void clear_has_wearquality();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_sameprofession();
  inline void clear_has_sameprofession();
  inline void set_has_sameposition();
  inline void clear_has_sameposition();
  inline void set_has_probability();
  inline void clear_has_probability();
  inline void set_has_increase();
  inline void clear_has_increase();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 newitem_;
  ::google::protobuf::int32 equipmin_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int64 needmaterial_id_;
  ::google::protobuf::int32 needmaterial_num_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 wearquality_;
  ::google::protobuf::int32 quality_;
  ::std::string* sameposition_;
  ::google::protobuf::int32 sameprofession_;
  ::google::protobuf::int32 probability_;
  ::google::protobuf::int32 increase_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinestarUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_combinestarUp : public ::google::protobuf::Message {
 public:
  Sheet_combinestarUp();
  virtual ~Sheet_combinestarUp();

  Sheet_combinestarUp(const Sheet_combinestarUp& from);

  inline Sheet_combinestarUp& operator=(const Sheet_combinestarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_combinestarUp& default_instance();

  void Swap(Sheet_combinestarUp* other);

  // implements Message ----------------------------------------------

  Sheet_combinestarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_combinestarUp& from);
  void MergeFrom(const Sheet_combinestarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.combinestarUp combinestarUp_List = 1;
  inline int combinestarup_list_size() const;
  inline void clear_combinestarup_list();
  static const int kCombinestarUpListFieldNumber = 1;
  inline const ::proto_ff::combinestarUp& combinestarup_list(int index) const;
  inline ::proto_ff::combinestarUp* mutable_combinestarup_list(int index);
  inline ::proto_ff::combinestarUp* add_combinestarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinestarUp >&
      combinestarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinestarUp >*
      mutable_combinestarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_combinestarUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinestarUp > combinestarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static Sheet_combinestarUp* default_instance_;
};
// -------------------------------------------------------------------

class combineitemUp : public ::google::protobuf::Message {
 public:
  combineitemUp();
  virtual ~combineitemUp();

  combineitemUp(const combineitemUp& from);

  inline combineitemUp& operator=(const combineitemUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combineitemUp& default_instance();

  void Swap(combineitemUp* other);

  // implements Message ----------------------------------------------

  combineitemUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combineitemUp& from);
  void MergeFrom(const combineitemUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 newItem = 1;
  inline bool has_newitem() const;
  inline void clear_newitem();
  static const int kNewItemFieldNumber = 1;
  inline ::google::protobuf::int64 newitem() const;
  inline void set_newitem(::google::protobuf::int64 value);

  // optional int32 moneyType = 2;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 2;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // optional int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int64 needMaterialID = 4;
  inline bool has_needmaterialid() const;
  inline void clear_needmaterialid();
  static const int kNeedMaterialIDFieldNumber = 4;
  inline ::google::protobuf::int64 needmaterialid() const;
  inline void set_needmaterialid(::google::protobuf::int64 value);

  // optional int32 needMaterialMin = 5;
  inline bool has_needmaterialmin() const;
  inline void clear_needmaterialmin();
  static const int kNeedMaterialMinFieldNumber = 5;
  inline ::google::protobuf::int32 needmaterialmin() const;
  inline void set_needmaterialmin(::google::protobuf::int32 value);

  // optional int32 needMaterialMan = 6;
  inline bool has_needmaterialman() const;
  inline void clear_needmaterialman();
  static const int kNeedMaterialManFieldNumber = 6;
  inline ::google::protobuf::int32 needmaterialman() const;
  inline void set_needmaterialman(::google::protobuf::int32 value);

  // optional int32 probability = 7;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 7;
  inline ::google::protobuf::int32 probability() const;
  inline void set_probability(::google::protobuf::int32 value);

  // optional int32 increase = 8;
  inline bool has_increase() const;
  inline void clear_increase();
  static const int kIncreaseFieldNumber = 8;
  inline ::google::protobuf::int32 increase() const;
  inline void set_increase(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.combineitemUp)
 private:
  inline void set_has_newitem();
  inline void clear_has_newitem();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_needmaterialid();
  inline void clear_has_needmaterialid();
  inline void set_has_needmaterialmin();
  inline void clear_has_needmaterialmin();
  inline void set_has_needmaterialman();
  inline void clear_has_needmaterialman();
  inline void set_has_probability();
  inline void clear_has_probability();
  inline void set_has_increase();
  inline void clear_has_increase();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 newitem_;
  ::google::protobuf::int32 moneytype_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int64 needmaterialid_;
  ::google::protobuf::int32 needmaterialmin_;
  ::google::protobuf::int32 needmaterialman_;
  ::google::protobuf::int32 probability_;
  ::google::protobuf::int32 increase_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combineitemUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_combineitemUp : public ::google::protobuf::Message {
 public:
  Sheet_combineitemUp();
  virtual ~Sheet_combineitemUp();

  Sheet_combineitemUp(const Sheet_combineitemUp& from);

  inline Sheet_combineitemUp& operator=(const Sheet_combineitemUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_combineitemUp& default_instance();

  void Swap(Sheet_combineitemUp* other);

  // implements Message ----------------------------------------------

  Sheet_combineitemUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_combineitemUp& from);
  void MergeFrom(const Sheet_combineitemUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.combineitemUp combineitemUp_List = 1;
  inline int combineitemup_list_size() const;
  inline void clear_combineitemup_list();
  static const int kCombineitemUpListFieldNumber = 1;
  inline const ::proto_ff::combineitemUp& combineitemup_list(int index) const;
  inline ::proto_ff::combineitemUp* mutable_combineitemup_list(int index);
  inline ::proto_ff::combineitemUp* add_combineitemup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combineitemUp >&
      combineitemup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combineitemUp >*
      mutable_combineitemup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_combineitemUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::combineitemUp > combineitemup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static Sheet_combineitemUp* default_instance_;
};
// -------------------------------------------------------------------

class combinerankUp : public ::google::protobuf::Message {
 public:
  combinerankUp();
  virtual ~combinerankUp();

  combinerankUp(const combinerankUp& from);

  inline combinerankUp& operator=(const combinerankUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinerankUp& default_instance();

  void Swap(combinerankUp* other);

  // implements Message ----------------------------------------------

  combinerankUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinerankUp& from);
  void MergeFrom(const combinerankUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 newItem = 1;
  inline bool has_newitem() const;
  inline void clear_newitem();
  static const int kNewItemFieldNumber = 1;
  inline ::google::protobuf::int64 newitem() const;
  inline void set_newitem(::google::protobuf::int64 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 needMaterial_id = 3;
  inline bool has_needmaterial_id() const;
  inline void clear_needmaterial_id();
  static const int kNeedMaterialIdFieldNumber = 3;
  inline ::google::protobuf::int64 needmaterial_id() const;
  inline void set_needmaterial_id(::google::protobuf::int64 value);

  // optional int32 needMaterial_num = 4;
  inline bool has_needmaterial_num() const;
  inline void clear_needmaterial_num();
  static const int kNeedMaterialNumFieldNumber = 4;
  inline ::google::protobuf::int32 needmaterial_num() const;
  inline void set_needmaterial_num(::google::protobuf::int32 value);

  // optional int32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 wearQuality = 6;
  inline bool has_wearquality() const;
  inline void clear_wearquality();
  static const int kWearQualityFieldNumber = 6;
  inline ::google::protobuf::int32 wearquality() const;
  inline void set_wearquality(::google::protobuf::int32 value);

  // optional int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 sameProfession = 8;
  inline bool has_sameprofession() const;
  inline void clear_sameprofession();
  static const int kSameProfessionFieldNumber = 8;
  inline ::google::protobuf::int32 sameprofession() const;
  inline void set_sameprofession(::google::protobuf::int32 value);

  // optional string samePosition = 9;
  inline bool has_sameposition() const;
  inline void clear_sameposition();
  static const int kSamePositionFieldNumber = 9;
  inline const ::std::string& sameposition() const;
  inline void set_sameposition(const ::std::string& value);
  inline void set_sameposition(const char* value);
  inline void set_sameposition(const char* value, size_t size);
  inline ::std::string* mutable_sameposition();
  inline ::std::string* release_sameposition();
  inline void set_allocated_sameposition(::std::string* sameposition);

  // optional int32 probability = 10;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 10;
  inline ::google::protobuf::int32 probability() const;
  inline void set_probability(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.combinerankUp)
 private:
  inline void set_has_newitem();
  inline void clear_has_newitem();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_needmaterial_id();
  inline void clear_has_needmaterial_id();
  inline void set_has_needmaterial_num();
  inline void clear_has_needmaterial_num();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_wearquality();
  inline void clear_has_wearquality();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_sameprofession();
  inline void clear_has_sameprofession();
  inline void set_has_sameposition();
  inline void clear_has_sameposition();
  inline void set_has_probability();
  inline void clear_has_probability();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 newitem_;
  ::google::protobuf::int64 needmaterial_id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 needmaterial_num_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 wearquality_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 sameprofession_;
  ::std::string* sameposition_;
  ::google::protobuf::int32 probability_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinerankUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_combinerankUp : public ::google::protobuf::Message {
 public:
  Sheet_combinerankUp();
  virtual ~Sheet_combinerankUp();

  Sheet_combinerankUp(const Sheet_combinerankUp& from);

  inline Sheet_combinerankUp& operator=(const Sheet_combinerankUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_combinerankUp& default_instance();

  void Swap(Sheet_combinerankUp* other);

  // implements Message ----------------------------------------------

  Sheet_combinerankUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_combinerankUp& from);
  void MergeFrom(const Sheet_combinerankUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.combinerankUp combinerankUp_List = 1;
  inline int combinerankup_list_size() const;
  inline void clear_combinerankup_list();
  static const int kCombinerankUpListFieldNumber = 1;
  inline const ::proto_ff::combinerankUp& combinerankup_list(int index) const;
  inline ::proto_ff::combinerankUp* mutable_combinerankup_list(int index);
  inline ::proto_ff::combinerankUp* add_combinerankup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinerankUp >&
      combinerankup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinerankUp >*
      mutable_combinerankup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_combinerankUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinerankUp > combinerankup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static Sheet_combinerankUp* default_instance_;
};
// -------------------------------------------------------------------

class combinequalityUpneedEqupDesc : public ::google::protobuf::Message {
 public:
  combinequalityUpneedEqupDesc();
  virtual ~combinequalityUpneedEqupDesc();

  combinequalityUpneedEqupDesc(const combinequalityUpneedEqupDesc& from);

  inline combinequalityUpneedEqupDesc& operator=(const combinequalityUpneedEqupDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinequalityUpneedEqupDesc& default_instance();

  void Swap(combinequalityUpneedEqupDesc* other);

  // implements Message ----------------------------------------------

  combinequalityUpneedEqupDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinequalityUpneedEqupDesc& from);
  void MergeFrom(const combinequalityUpneedEqupDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:proto_ff.combinequalityUpneedEqupDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinequalityUpneedEqupDesc* default_instance_;
};
// -------------------------------------------------------------------

class combinequalityUpneedMaterialDesc : public ::google::protobuf::Message {
 public:
  combinequalityUpneedMaterialDesc();
  virtual ~combinequalityUpneedMaterialDesc();

  combinequalityUpneedMaterialDesc(const combinequalityUpneedMaterialDesc& from);

  inline combinequalityUpneedMaterialDesc& operator=(const combinequalityUpneedMaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinequalityUpneedMaterialDesc& default_instance();

  void Swap(combinequalityUpneedMaterialDesc* other);

  // implements Message ----------------------------------------------

  combinequalityUpneedMaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinequalityUpneedMaterialDesc& from);
  void MergeFrom(const combinequalityUpneedMaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.combinequalityUpneedMaterialDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinequalityUpneedMaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class combinequalityUp : public ::google::protobuf::Message {
 public:
  combinequalityUp();
  virtual ~combinequalityUp();

  combinequalityUp(const combinequalityUp& from);

  inline combinequalityUp& operator=(const combinequalityUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const combinequalityUp& default_instance();

  void Swap(combinequalityUp* other);

  // implements Message ----------------------------------------------

  combinequalityUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const combinequalityUp& from);
  void MergeFrom(const combinequalityUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 newItem = 1;
  inline bool has_newitem() const;
  inline void clear_newitem();
  static const int kNewItemFieldNumber = 1;
  inline ::google::protobuf::int64 newitem() const;
  inline void set_newitem(::google::protobuf::int64 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 needEqup_num = 3;
  inline bool has_needequp_num() const;
  inline void clear_needequp_num();
  static const int kNeedEqupNumFieldNumber = 3;
  inline ::google::protobuf::int32 needequp_num() const;
  inline void set_needequp_num(::google::protobuf::int32 value);

  // optional int32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 wearQuality = 5;
  inline bool has_wearquality() const;
  inline void clear_wearquality();
  static const int kWearQualityFieldNumber = 5;
  inline ::google::protobuf::int32 wearquality() const;
  inline void set_wearquality(::google::protobuf::int32 value);

  // optional int32 quality = 6;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 6;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 sameProfession = 7;
  inline bool has_sameprofession() const;
  inline void clear_sameprofession();
  static const int kSameProfessionFieldNumber = 7;
  inline ::google::protobuf::int32 sameprofession() const;
  inline void set_sameprofession(::google::protobuf::int32 value);

  // optional string samePosition = 8;
  inline bool has_sameposition() const;
  inline void clear_sameposition();
  static const int kSamePositionFieldNumber = 8;
  inline const ::std::string& sameposition() const;
  inline void set_sameposition(const ::std::string& value);
  inline void set_sameposition(const char* value);
  inline void set_sameposition(const char* value, size_t size);
  inline ::std::string* mutable_sameposition();
  inline ::std::string* release_sameposition();
  inline void set_allocated_sameposition(::std::string* sameposition);

  // optional int32 probability = 9;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 9;
  inline ::google::protobuf::int32 probability() const;
  inline void set_probability(::google::protobuf::int32 value);

  // optional int32 costType = 10;
  inline bool has_costtype() const;
  inline void clear_costtype();
  static const int kCostTypeFieldNumber = 10;
  inline ::google::protobuf::int32 costtype() const;
  inline void set_costtype(::google::protobuf::int32 value);

  // optional int32 bindJewelCost = 11;
  inline bool has_bindjewelcost() const;
  inline void clear_bindjewelcost();
  static const int kBindJewelCostFieldNumber = 11;
  inline ::google::protobuf::int32 bindjewelcost() const;
  inline void set_bindjewelcost(::google::protobuf::int32 value);

  // repeated .proto_ff.combinequalityUpneedEqupDesc needEqup = 12;
  inline int needequp_size() const;
  inline void clear_needequp();
  static const int kNeedEqupFieldNumber = 12;
  inline const ::proto_ff::combinequalityUpneedEqupDesc& needequp(int index) const;
  inline ::proto_ff::combinequalityUpneedEqupDesc* mutable_needequp(int index);
  inline ::proto_ff::combinequalityUpneedEqupDesc* add_needequp();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedEqupDesc >&
      needequp() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedEqupDesc >*
      mutable_needequp();

  // repeated .proto_ff.combinequalityUpneedMaterialDesc needMaterial = 13;
  inline int needmaterial_size() const;
  inline void clear_needmaterial();
  static const int kNeedMaterialFieldNumber = 13;
  inline const ::proto_ff::combinequalityUpneedMaterialDesc& needmaterial(int index) const;
  inline ::proto_ff::combinequalityUpneedMaterialDesc* mutable_needmaterial(int index);
  inline ::proto_ff::combinequalityUpneedMaterialDesc* add_needmaterial();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedMaterialDesc >&
      needmaterial() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedMaterialDesc >*
      mutable_needmaterial();

  // @@protoc_insertion_point(class_scope:proto_ff.combinequalityUp)
 private:
  inline void set_has_newitem();
  inline void clear_has_newitem();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_needequp_num();
  inline void clear_has_needequp_num();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_wearquality();
  inline void clear_has_wearquality();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_sameprofession();
  inline void clear_has_sameprofession();
  inline void set_has_sameposition();
  inline void clear_has_sameposition();
  inline void set_has_probability();
  inline void clear_has_probability();
  inline void set_has_costtype();
  inline void clear_has_costtype();
  inline void set_has_bindjewelcost();
  inline void clear_has_bindjewelcost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 newitem_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 needequp_num_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 wearquality_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 sameprofession_;
  ::std::string* sameposition_;
  ::google::protobuf::int32 probability_;
  ::google::protobuf::int32 costtype_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedEqupDesc > needequp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedMaterialDesc > needmaterial_;
  ::google::protobuf::int32 bindjewelcost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static combinequalityUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_combinequalityUp : public ::google::protobuf::Message {
 public:
  Sheet_combinequalityUp();
  virtual ~Sheet_combinequalityUp();

  Sheet_combinequalityUp(const Sheet_combinequalityUp& from);

  inline Sheet_combinequalityUp& operator=(const Sheet_combinequalityUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_combinequalityUp& default_instance();

  void Swap(Sheet_combinequalityUp* other);

  // implements Message ----------------------------------------------

  Sheet_combinequalityUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_combinequalityUp& from);
  void MergeFrom(const Sheet_combinequalityUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.combinequalityUp combinequalityUp_List = 1;
  inline int combinequalityup_list_size() const;
  inline void clear_combinequalityup_list();
  static const int kCombinequalityUpListFieldNumber = 1;
  inline const ::proto_ff::combinequalityUp& combinequalityup_list(int index) const;
  inline ::proto_ff::combinequalityUp* mutable_combinequalityup_list(int index);
  inline ::proto_ff::combinequalityUp* add_combinequalityup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUp >&
      combinequalityup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUp >*
      mutable_combinequalityup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_combinequalityUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUp > combinequalityup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_combine_2eproto();
  friend void protobuf_AssignDesc_combine_2eproto();
  friend void protobuf_ShutdownFile_combine_2eproto();

  void InitAsDefaultInstance();
  static Sheet_combinequalityUp* default_instance_;
};
// ===================================================================


// ===================================================================

// combinecitemneedMaterialDesc

// optional int64 id = 1;
inline bool combinecitemneedMaterialDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinecitemneedMaterialDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinecitemneedMaterialDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinecitemneedMaterialDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 combinecitemneedMaterialDesc::id() const {
  return id_;
}
inline void combinecitemneedMaterialDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// combinecitem

// optional int64 newItem = 1;
inline bool combinecitem::has_newitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinecitem::set_has_newitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinecitem::clear_has_newitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinecitem::clear_newitem() {
  newitem_ = GOOGLE_LONGLONG(0);
  clear_has_newitem();
}
inline ::google::protobuf::int64 combinecitem::newitem() const {
  return newitem_;
}
inline void combinecitem::set_newitem(::google::protobuf::int64 value) {
  set_has_newitem();
  newitem_ = value;
}

// optional int32 moneyType = 2;
inline bool combinecitem::has_moneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void combinecitem::set_has_moneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void combinecitem::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void combinecitem::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 combinecitem::moneytype() const {
  return moneytype_;
}
inline void combinecitem::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional int32 price = 3;
inline bool combinecitem::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void combinecitem::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void combinecitem::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void combinecitem::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 combinecitem::price() const {
  return price_;
}
inline void combinecitem::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int32 huobiType = 4;
inline bool combinecitem::has_huobitype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void combinecitem::set_has_huobitype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void combinecitem::clear_has_huobitype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void combinecitem::clear_huobitype() {
  huobitype_ = 0;
  clear_has_huobitype();
}
inline ::google::protobuf::int32 combinecitem::huobitype() const {
  return huobitype_;
}
inline void combinecitem::set_huobitype(::google::protobuf::int32 value) {
  set_has_huobitype();
  huobitype_ = value;
}

// optional int32 huobiPrice = 5;
inline bool combinecitem::has_huobiprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void combinecitem::set_has_huobiprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void combinecitem::clear_has_huobiprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void combinecitem::clear_huobiprice() {
  huobiprice_ = 0;
  clear_has_huobiprice();
}
inline ::google::protobuf::int32 combinecitem::huobiprice() const {
  return huobiprice_;
}
inline void combinecitem::set_huobiprice(::google::protobuf::int32 value) {
  set_has_huobiprice();
  huobiprice_ = value;
}

// optional int32 probability = 6;
inline bool combinecitem::has_probability() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void combinecitem::set_has_probability() {
  _has_bits_[0] |= 0x00000020u;
}
inline void combinecitem::clear_has_probability() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void combinecitem::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline ::google::protobuf::int32 combinecitem::probability() const {
  return probability_;
}
inline void combinecitem::set_probability(::google::protobuf::int32 value) {
  set_has_probability();
  probability_ = value;
}

// optional int32 level = 7;
inline bool combinecitem::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void combinecitem::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void combinecitem::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void combinecitem::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 combinecitem::level() const {
  return level_;
}
inline void combinecitem::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 floor = 8;
inline bool combinecitem::has_floor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void combinecitem::set_has_floor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void combinecitem::clear_has_floor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void combinecitem::clear_floor() {
  floor_ = 0;
  clear_has_floor();
}
inline ::google::protobuf::int32 combinecitem::floor() const {
  return floor_;
}
inline void combinecitem::set_floor(::google::protobuf::int32 value) {
  set_has_floor();
  floor_ = value;
}

// repeated .proto_ff.combinecitemneedMaterialDesc needMaterial = 9;
inline int combinecitem::needmaterial_size() const {
  return needmaterial_.size();
}
inline void combinecitem::clear_needmaterial() {
  needmaterial_.Clear();
}
inline const ::proto_ff::combinecitemneedMaterialDesc& combinecitem::needmaterial(int index) const {
  return needmaterial_.Get(index);
}
inline ::proto_ff::combinecitemneedMaterialDesc* combinecitem::mutable_needmaterial(int index) {
  return needmaterial_.Mutable(index);
}
inline ::proto_ff::combinecitemneedMaterialDesc* combinecitem::add_needmaterial() {
  return needmaterial_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitemneedMaterialDesc >&
combinecitem::needmaterial() const {
  return needmaterial_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitemneedMaterialDesc >*
combinecitem::mutable_needmaterial() {
  return &needmaterial_;
}

// -------------------------------------------------------------------

// Sheet_combinecitem

// repeated .proto_ff.combinecitem combinecitem_List = 1;
inline int Sheet_combinecitem::combinecitem_list_size() const {
  return combinecitem_list_.size();
}
inline void Sheet_combinecitem::clear_combinecitem_list() {
  combinecitem_list_.Clear();
}
inline const ::proto_ff::combinecitem& Sheet_combinecitem::combinecitem_list(int index) const {
  return combinecitem_list_.Get(index);
}
inline ::proto_ff::combinecitem* Sheet_combinecitem::mutable_combinecitem_list(int index) {
  return combinecitem_list_.Mutable(index);
}
inline ::proto_ff::combinecitem* Sheet_combinecitem::add_combinecitem_list() {
  return combinecitem_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitem >&
Sheet_combinecitem::combinecitem_list() const {
  return combinecitem_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinecitem >*
Sheet_combinecitem::mutable_combinecitem_list() {
  return &combinecitem_list_;
}

// -------------------------------------------------------------------

// combinestarUp

// optional int64 newItem = 1;
inline bool combinestarUp::has_newitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinestarUp::set_has_newitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinestarUp::clear_has_newitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinestarUp::clear_newitem() {
  newitem_ = GOOGLE_LONGLONG(0);
  clear_has_newitem();
}
inline ::google::protobuf::int64 combinestarUp::newitem() const {
  return newitem_;
}
inline void combinestarUp::set_newitem(::google::protobuf::int64 value) {
  set_has_newitem();
  newitem_ = value;
}

// optional int32 equipMin = 2;
inline bool combinestarUp::has_equipmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void combinestarUp::set_has_equipmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void combinestarUp::clear_has_equipmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void combinestarUp::clear_equipmin() {
  equipmin_ = 0;
  clear_has_equipmin();
}
inline ::google::protobuf::int32 combinestarUp::equipmin() const {
  return equipmin_;
}
inline void combinestarUp::set_equipmin(::google::protobuf::int32 value) {
  set_has_equipmin();
  equipmin_ = value;
}

// optional int32 num = 3;
inline bool combinestarUp::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void combinestarUp::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void combinestarUp::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void combinestarUp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 combinestarUp::num() const {
  return num_;
}
inline void combinestarUp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 needMaterial_id = 4;
inline bool combinestarUp::has_needmaterial_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void combinestarUp::set_has_needmaterial_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void combinestarUp::clear_has_needmaterial_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void combinestarUp::clear_needmaterial_id() {
  needmaterial_id_ = GOOGLE_LONGLONG(0);
  clear_has_needmaterial_id();
}
inline ::google::protobuf::int64 combinestarUp::needmaterial_id() const {
  return needmaterial_id_;
}
inline void combinestarUp::set_needmaterial_id(::google::protobuf::int64 value) {
  set_has_needmaterial_id();
  needmaterial_id_ = value;
}

// optional int32 needMaterial_num = 5;
inline bool combinestarUp::has_needmaterial_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void combinestarUp::set_has_needmaterial_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void combinestarUp::clear_has_needmaterial_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void combinestarUp::clear_needmaterial_num() {
  needmaterial_num_ = 0;
  clear_has_needmaterial_num();
}
inline ::google::protobuf::int32 combinestarUp::needmaterial_num() const {
  return needmaterial_num_;
}
inline void combinestarUp::set_needmaterial_num(::google::protobuf::int32 value) {
  set_has_needmaterial_num();
  needmaterial_num_ = value;
}

// optional int32 star = 6;
inline bool combinestarUp::has_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void combinestarUp::set_has_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void combinestarUp::clear_has_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void combinestarUp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 combinestarUp::star() const {
  return star_;
}
inline void combinestarUp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 wearQuality = 7;
inline bool combinestarUp::has_wearquality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void combinestarUp::set_has_wearquality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void combinestarUp::clear_has_wearquality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void combinestarUp::clear_wearquality() {
  wearquality_ = 0;
  clear_has_wearquality();
}
inline ::google::protobuf::int32 combinestarUp::wearquality() const {
  return wearquality_;
}
inline void combinestarUp::set_wearquality(::google::protobuf::int32 value) {
  set_has_wearquality();
  wearquality_ = value;
}

// optional int32 quality = 8;
inline bool combinestarUp::has_quality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void combinestarUp::set_has_quality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void combinestarUp::clear_has_quality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void combinestarUp::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 combinestarUp::quality() const {
  return quality_;
}
inline void combinestarUp::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 sameProfession = 9;
inline bool combinestarUp::has_sameprofession() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void combinestarUp::set_has_sameprofession() {
  _has_bits_[0] |= 0x00000100u;
}
inline void combinestarUp::clear_has_sameprofession() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void combinestarUp::clear_sameprofession() {
  sameprofession_ = 0;
  clear_has_sameprofession();
}
inline ::google::protobuf::int32 combinestarUp::sameprofession() const {
  return sameprofession_;
}
inline void combinestarUp::set_sameprofession(::google::protobuf::int32 value) {
  set_has_sameprofession();
  sameprofession_ = value;
}

// optional string samePosition = 10;
inline bool combinestarUp::has_sameposition() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void combinestarUp::set_has_sameposition() {
  _has_bits_[0] |= 0x00000200u;
}
inline void combinestarUp::clear_has_sameposition() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void combinestarUp::clear_sameposition() {
  if (sameposition_ != &::google::protobuf::internal::kEmptyString) {
    sameposition_->clear();
  }
  clear_has_sameposition();
}
inline const ::std::string& combinestarUp::sameposition() const {
  return *sameposition_;
}
inline void combinestarUp::set_sameposition(const ::std::string& value) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(value);
}
inline void combinestarUp::set_sameposition(const char* value) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(value);
}
inline void combinestarUp::set_sameposition(const char* value, size_t size) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* combinestarUp::mutable_sameposition() {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  return sameposition_;
}
inline ::std::string* combinestarUp::release_sameposition() {
  clear_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sameposition_;
    sameposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void combinestarUp::set_allocated_sameposition(::std::string* sameposition) {
  if (sameposition_ != &::google::protobuf::internal::kEmptyString) {
    delete sameposition_;
  }
  if (sameposition) {
    set_has_sameposition();
    sameposition_ = sameposition;
  } else {
    clear_has_sameposition();
    sameposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 probability = 11;
inline bool combinestarUp::has_probability() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void combinestarUp::set_has_probability() {
  _has_bits_[0] |= 0x00000400u;
}
inline void combinestarUp::clear_has_probability() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void combinestarUp::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline ::google::protobuf::int32 combinestarUp::probability() const {
  return probability_;
}
inline void combinestarUp::set_probability(::google::protobuf::int32 value) {
  set_has_probability();
  probability_ = value;
}

// optional int32 increase = 12;
inline bool combinestarUp::has_increase() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void combinestarUp::set_has_increase() {
  _has_bits_[0] |= 0x00000800u;
}
inline void combinestarUp::clear_has_increase() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void combinestarUp::clear_increase() {
  increase_ = 0;
  clear_has_increase();
}
inline ::google::protobuf::int32 combinestarUp::increase() const {
  return increase_;
}
inline void combinestarUp::set_increase(::google::protobuf::int32 value) {
  set_has_increase();
  increase_ = value;
}

// -------------------------------------------------------------------

// Sheet_combinestarUp

// repeated .proto_ff.combinestarUp combinestarUp_List = 1;
inline int Sheet_combinestarUp::combinestarup_list_size() const {
  return combinestarup_list_.size();
}
inline void Sheet_combinestarUp::clear_combinestarup_list() {
  combinestarup_list_.Clear();
}
inline const ::proto_ff::combinestarUp& Sheet_combinestarUp::combinestarup_list(int index) const {
  return combinestarup_list_.Get(index);
}
inline ::proto_ff::combinestarUp* Sheet_combinestarUp::mutable_combinestarup_list(int index) {
  return combinestarup_list_.Mutable(index);
}
inline ::proto_ff::combinestarUp* Sheet_combinestarUp::add_combinestarup_list() {
  return combinestarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinestarUp >&
Sheet_combinestarUp::combinestarup_list() const {
  return combinestarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinestarUp >*
Sheet_combinestarUp::mutable_combinestarup_list() {
  return &combinestarup_list_;
}

// -------------------------------------------------------------------

// combineitemUp

// optional int64 newItem = 1;
inline bool combineitemUp::has_newitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combineitemUp::set_has_newitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combineitemUp::clear_has_newitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combineitemUp::clear_newitem() {
  newitem_ = GOOGLE_LONGLONG(0);
  clear_has_newitem();
}
inline ::google::protobuf::int64 combineitemUp::newitem() const {
  return newitem_;
}
inline void combineitemUp::set_newitem(::google::protobuf::int64 value) {
  set_has_newitem();
  newitem_ = value;
}

// optional int32 moneyType = 2;
inline bool combineitemUp::has_moneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void combineitemUp::set_has_moneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void combineitemUp::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void combineitemUp::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 combineitemUp::moneytype() const {
  return moneytype_;
}
inline void combineitemUp::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional int32 price = 3;
inline bool combineitemUp::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void combineitemUp::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void combineitemUp::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void combineitemUp::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 combineitemUp::price() const {
  return price_;
}
inline void combineitemUp::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int64 needMaterialID = 4;
inline bool combineitemUp::has_needmaterialid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void combineitemUp::set_has_needmaterialid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void combineitemUp::clear_has_needmaterialid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void combineitemUp::clear_needmaterialid() {
  needmaterialid_ = GOOGLE_LONGLONG(0);
  clear_has_needmaterialid();
}
inline ::google::protobuf::int64 combineitemUp::needmaterialid() const {
  return needmaterialid_;
}
inline void combineitemUp::set_needmaterialid(::google::protobuf::int64 value) {
  set_has_needmaterialid();
  needmaterialid_ = value;
}

// optional int32 needMaterialMin = 5;
inline bool combineitemUp::has_needmaterialmin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void combineitemUp::set_has_needmaterialmin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void combineitemUp::clear_has_needmaterialmin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void combineitemUp::clear_needmaterialmin() {
  needmaterialmin_ = 0;
  clear_has_needmaterialmin();
}
inline ::google::protobuf::int32 combineitemUp::needmaterialmin() const {
  return needmaterialmin_;
}
inline void combineitemUp::set_needmaterialmin(::google::protobuf::int32 value) {
  set_has_needmaterialmin();
  needmaterialmin_ = value;
}

// optional int32 needMaterialMan = 6;
inline bool combineitemUp::has_needmaterialman() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void combineitemUp::set_has_needmaterialman() {
  _has_bits_[0] |= 0x00000020u;
}
inline void combineitemUp::clear_has_needmaterialman() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void combineitemUp::clear_needmaterialman() {
  needmaterialman_ = 0;
  clear_has_needmaterialman();
}
inline ::google::protobuf::int32 combineitemUp::needmaterialman() const {
  return needmaterialman_;
}
inline void combineitemUp::set_needmaterialman(::google::protobuf::int32 value) {
  set_has_needmaterialman();
  needmaterialman_ = value;
}

// optional int32 probability = 7;
inline bool combineitemUp::has_probability() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void combineitemUp::set_has_probability() {
  _has_bits_[0] |= 0x00000040u;
}
inline void combineitemUp::clear_has_probability() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void combineitemUp::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline ::google::protobuf::int32 combineitemUp::probability() const {
  return probability_;
}
inline void combineitemUp::set_probability(::google::protobuf::int32 value) {
  set_has_probability();
  probability_ = value;
}

// optional int32 increase = 8;
inline bool combineitemUp::has_increase() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void combineitemUp::set_has_increase() {
  _has_bits_[0] |= 0x00000080u;
}
inline void combineitemUp::clear_has_increase() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void combineitemUp::clear_increase() {
  increase_ = 0;
  clear_has_increase();
}
inline ::google::protobuf::int32 combineitemUp::increase() const {
  return increase_;
}
inline void combineitemUp::set_increase(::google::protobuf::int32 value) {
  set_has_increase();
  increase_ = value;
}

// -------------------------------------------------------------------

// Sheet_combineitemUp

// repeated .proto_ff.combineitemUp combineitemUp_List = 1;
inline int Sheet_combineitemUp::combineitemup_list_size() const {
  return combineitemup_list_.size();
}
inline void Sheet_combineitemUp::clear_combineitemup_list() {
  combineitemup_list_.Clear();
}
inline const ::proto_ff::combineitemUp& Sheet_combineitemUp::combineitemup_list(int index) const {
  return combineitemup_list_.Get(index);
}
inline ::proto_ff::combineitemUp* Sheet_combineitemUp::mutable_combineitemup_list(int index) {
  return combineitemup_list_.Mutable(index);
}
inline ::proto_ff::combineitemUp* Sheet_combineitemUp::add_combineitemup_list() {
  return combineitemup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combineitemUp >&
Sheet_combineitemUp::combineitemup_list() const {
  return combineitemup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combineitemUp >*
Sheet_combineitemUp::mutable_combineitemup_list() {
  return &combineitemup_list_;
}

// -------------------------------------------------------------------

// combinerankUp

// optional int64 newItem = 1;
inline bool combinerankUp::has_newitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinerankUp::set_has_newitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinerankUp::clear_has_newitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinerankUp::clear_newitem() {
  newitem_ = GOOGLE_LONGLONG(0);
  clear_has_newitem();
}
inline ::google::protobuf::int64 combinerankUp::newitem() const {
  return newitem_;
}
inline void combinerankUp::set_newitem(::google::protobuf::int64 value) {
  set_has_newitem();
  newitem_ = value;
}

// optional int32 num = 2;
inline bool combinerankUp::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void combinerankUp::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void combinerankUp::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void combinerankUp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 combinerankUp::num() const {
  return num_;
}
inline void combinerankUp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 needMaterial_id = 3;
inline bool combinerankUp::has_needmaterial_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void combinerankUp::set_has_needmaterial_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void combinerankUp::clear_has_needmaterial_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void combinerankUp::clear_needmaterial_id() {
  needmaterial_id_ = GOOGLE_LONGLONG(0);
  clear_has_needmaterial_id();
}
inline ::google::protobuf::int64 combinerankUp::needmaterial_id() const {
  return needmaterial_id_;
}
inline void combinerankUp::set_needmaterial_id(::google::protobuf::int64 value) {
  set_has_needmaterial_id();
  needmaterial_id_ = value;
}

// optional int32 needMaterial_num = 4;
inline bool combinerankUp::has_needmaterial_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void combinerankUp::set_has_needmaterial_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void combinerankUp::clear_has_needmaterial_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void combinerankUp::clear_needmaterial_num() {
  needmaterial_num_ = 0;
  clear_has_needmaterial_num();
}
inline ::google::protobuf::int32 combinerankUp::needmaterial_num() const {
  return needmaterial_num_;
}
inline void combinerankUp::set_needmaterial_num(::google::protobuf::int32 value) {
  set_has_needmaterial_num();
  needmaterial_num_ = value;
}

// optional int32 star = 5;
inline bool combinerankUp::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void combinerankUp::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void combinerankUp::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void combinerankUp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 combinerankUp::star() const {
  return star_;
}
inline void combinerankUp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 wearQuality = 6;
inline bool combinerankUp::has_wearquality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void combinerankUp::set_has_wearquality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void combinerankUp::clear_has_wearquality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void combinerankUp::clear_wearquality() {
  wearquality_ = 0;
  clear_has_wearquality();
}
inline ::google::protobuf::int32 combinerankUp::wearquality() const {
  return wearquality_;
}
inline void combinerankUp::set_wearquality(::google::protobuf::int32 value) {
  set_has_wearquality();
  wearquality_ = value;
}

// optional int32 quality = 7;
inline bool combinerankUp::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void combinerankUp::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void combinerankUp::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void combinerankUp::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 combinerankUp::quality() const {
  return quality_;
}
inline void combinerankUp::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 sameProfession = 8;
inline bool combinerankUp::has_sameprofession() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void combinerankUp::set_has_sameprofession() {
  _has_bits_[0] |= 0x00000080u;
}
inline void combinerankUp::clear_has_sameprofession() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void combinerankUp::clear_sameprofession() {
  sameprofession_ = 0;
  clear_has_sameprofession();
}
inline ::google::protobuf::int32 combinerankUp::sameprofession() const {
  return sameprofession_;
}
inline void combinerankUp::set_sameprofession(::google::protobuf::int32 value) {
  set_has_sameprofession();
  sameprofession_ = value;
}

// optional string samePosition = 9;
inline bool combinerankUp::has_sameposition() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void combinerankUp::set_has_sameposition() {
  _has_bits_[0] |= 0x00000100u;
}
inline void combinerankUp::clear_has_sameposition() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void combinerankUp::clear_sameposition() {
  if (sameposition_ != &::google::protobuf::internal::kEmptyString) {
    sameposition_->clear();
  }
  clear_has_sameposition();
}
inline const ::std::string& combinerankUp::sameposition() const {
  return *sameposition_;
}
inline void combinerankUp::set_sameposition(const ::std::string& value) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(value);
}
inline void combinerankUp::set_sameposition(const char* value) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(value);
}
inline void combinerankUp::set_sameposition(const char* value, size_t size) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* combinerankUp::mutable_sameposition() {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  return sameposition_;
}
inline ::std::string* combinerankUp::release_sameposition() {
  clear_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sameposition_;
    sameposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void combinerankUp::set_allocated_sameposition(::std::string* sameposition) {
  if (sameposition_ != &::google::protobuf::internal::kEmptyString) {
    delete sameposition_;
  }
  if (sameposition) {
    set_has_sameposition();
    sameposition_ = sameposition;
  } else {
    clear_has_sameposition();
    sameposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 probability = 10;
inline bool combinerankUp::has_probability() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void combinerankUp::set_has_probability() {
  _has_bits_[0] |= 0x00000200u;
}
inline void combinerankUp::clear_has_probability() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void combinerankUp::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline ::google::protobuf::int32 combinerankUp::probability() const {
  return probability_;
}
inline void combinerankUp::set_probability(::google::protobuf::int32 value) {
  set_has_probability();
  probability_ = value;
}

// -------------------------------------------------------------------

// Sheet_combinerankUp

// repeated .proto_ff.combinerankUp combinerankUp_List = 1;
inline int Sheet_combinerankUp::combinerankup_list_size() const {
  return combinerankup_list_.size();
}
inline void Sheet_combinerankUp::clear_combinerankup_list() {
  combinerankup_list_.Clear();
}
inline const ::proto_ff::combinerankUp& Sheet_combinerankUp::combinerankup_list(int index) const {
  return combinerankup_list_.Get(index);
}
inline ::proto_ff::combinerankUp* Sheet_combinerankUp::mutable_combinerankup_list(int index) {
  return combinerankup_list_.Mutable(index);
}
inline ::proto_ff::combinerankUp* Sheet_combinerankUp::add_combinerankup_list() {
  return combinerankup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinerankUp >&
Sheet_combinerankUp::combinerankup_list() const {
  return combinerankup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinerankUp >*
Sheet_combinerankUp::mutable_combinerankup_list() {
  return &combinerankup_list_;
}

// -------------------------------------------------------------------

// combinequalityUpneedEqupDesc

// optional string id = 1;
inline bool combinequalityUpneedEqupDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinequalityUpneedEqupDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinequalityUpneedEqupDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinequalityUpneedEqupDesc::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& combinequalityUpneedEqupDesc::id() const {
  return *id_;
}
inline void combinequalityUpneedEqupDesc::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void combinequalityUpneedEqupDesc::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void combinequalityUpneedEqupDesc::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* combinequalityUpneedEqupDesc::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* combinequalityUpneedEqupDesc::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void combinequalityUpneedEqupDesc::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// combinequalityUpneedMaterialDesc

// optional int64 id = 1;
inline bool combinequalityUpneedMaterialDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinequalityUpneedMaterialDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinequalityUpneedMaterialDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinequalityUpneedMaterialDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 combinequalityUpneedMaterialDesc::id() const {
  return id_;
}
inline void combinequalityUpneedMaterialDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// combinequalityUp

// optional int64 newItem = 1;
inline bool combinequalityUp::has_newitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void combinequalityUp::set_has_newitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void combinequalityUp::clear_has_newitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void combinequalityUp::clear_newitem() {
  newitem_ = GOOGLE_LONGLONG(0);
  clear_has_newitem();
}
inline ::google::protobuf::int64 combinequalityUp::newitem() const {
  return newitem_;
}
inline void combinequalityUp::set_newitem(::google::protobuf::int64 value) {
  set_has_newitem();
  newitem_ = value;
}

// optional int32 num = 2;
inline bool combinequalityUp::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void combinequalityUp::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void combinequalityUp::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void combinequalityUp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 combinequalityUp::num() const {
  return num_;
}
inline void combinequalityUp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 needEqup_num = 3;
inline bool combinequalityUp::has_needequp_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void combinequalityUp::set_has_needequp_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void combinequalityUp::clear_has_needequp_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void combinequalityUp::clear_needequp_num() {
  needequp_num_ = 0;
  clear_has_needequp_num();
}
inline ::google::protobuf::int32 combinequalityUp::needequp_num() const {
  return needequp_num_;
}
inline void combinequalityUp::set_needequp_num(::google::protobuf::int32 value) {
  set_has_needequp_num();
  needequp_num_ = value;
}

// optional int32 star = 4;
inline bool combinequalityUp::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void combinequalityUp::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void combinequalityUp::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void combinequalityUp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 combinequalityUp::star() const {
  return star_;
}
inline void combinequalityUp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 wearQuality = 5;
inline bool combinequalityUp::has_wearquality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void combinequalityUp::set_has_wearquality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void combinequalityUp::clear_has_wearquality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void combinequalityUp::clear_wearquality() {
  wearquality_ = 0;
  clear_has_wearquality();
}
inline ::google::protobuf::int32 combinequalityUp::wearquality() const {
  return wearquality_;
}
inline void combinequalityUp::set_wearquality(::google::protobuf::int32 value) {
  set_has_wearquality();
  wearquality_ = value;
}

// optional int32 quality = 6;
inline bool combinequalityUp::has_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void combinequalityUp::set_has_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void combinequalityUp::clear_has_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void combinequalityUp::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 combinequalityUp::quality() const {
  return quality_;
}
inline void combinequalityUp::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 sameProfession = 7;
inline bool combinequalityUp::has_sameprofession() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void combinequalityUp::set_has_sameprofession() {
  _has_bits_[0] |= 0x00000040u;
}
inline void combinequalityUp::clear_has_sameprofession() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void combinequalityUp::clear_sameprofession() {
  sameprofession_ = 0;
  clear_has_sameprofession();
}
inline ::google::protobuf::int32 combinequalityUp::sameprofession() const {
  return sameprofession_;
}
inline void combinequalityUp::set_sameprofession(::google::protobuf::int32 value) {
  set_has_sameprofession();
  sameprofession_ = value;
}

// optional string samePosition = 8;
inline bool combinequalityUp::has_sameposition() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void combinequalityUp::set_has_sameposition() {
  _has_bits_[0] |= 0x00000080u;
}
inline void combinequalityUp::clear_has_sameposition() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void combinequalityUp::clear_sameposition() {
  if (sameposition_ != &::google::protobuf::internal::kEmptyString) {
    sameposition_->clear();
  }
  clear_has_sameposition();
}
inline const ::std::string& combinequalityUp::sameposition() const {
  return *sameposition_;
}
inline void combinequalityUp::set_sameposition(const ::std::string& value) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(value);
}
inline void combinequalityUp::set_sameposition(const char* value) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(value);
}
inline void combinequalityUp::set_sameposition(const char* value, size_t size) {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  sameposition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* combinequalityUp::mutable_sameposition() {
  set_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    sameposition_ = new ::std::string;
  }
  return sameposition_;
}
inline ::std::string* combinequalityUp::release_sameposition() {
  clear_has_sameposition();
  if (sameposition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sameposition_;
    sameposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void combinequalityUp::set_allocated_sameposition(::std::string* sameposition) {
  if (sameposition_ != &::google::protobuf::internal::kEmptyString) {
    delete sameposition_;
  }
  if (sameposition) {
    set_has_sameposition();
    sameposition_ = sameposition;
  } else {
    clear_has_sameposition();
    sameposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 probability = 9;
inline bool combinequalityUp::has_probability() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void combinequalityUp::set_has_probability() {
  _has_bits_[0] |= 0x00000100u;
}
inline void combinequalityUp::clear_has_probability() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void combinequalityUp::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline ::google::protobuf::int32 combinequalityUp::probability() const {
  return probability_;
}
inline void combinequalityUp::set_probability(::google::protobuf::int32 value) {
  set_has_probability();
  probability_ = value;
}

// optional int32 costType = 10;
inline bool combinequalityUp::has_costtype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void combinequalityUp::set_has_costtype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void combinequalityUp::clear_has_costtype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void combinequalityUp::clear_costtype() {
  costtype_ = 0;
  clear_has_costtype();
}
inline ::google::protobuf::int32 combinequalityUp::costtype() const {
  return costtype_;
}
inline void combinequalityUp::set_costtype(::google::protobuf::int32 value) {
  set_has_costtype();
  costtype_ = value;
}

// optional int32 bindJewelCost = 11;
inline bool combinequalityUp::has_bindjewelcost() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void combinequalityUp::set_has_bindjewelcost() {
  _has_bits_[0] |= 0x00000400u;
}
inline void combinequalityUp::clear_has_bindjewelcost() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void combinequalityUp::clear_bindjewelcost() {
  bindjewelcost_ = 0;
  clear_has_bindjewelcost();
}
inline ::google::protobuf::int32 combinequalityUp::bindjewelcost() const {
  return bindjewelcost_;
}
inline void combinequalityUp::set_bindjewelcost(::google::protobuf::int32 value) {
  set_has_bindjewelcost();
  bindjewelcost_ = value;
}

// repeated .proto_ff.combinequalityUpneedEqupDesc needEqup = 12;
inline int combinequalityUp::needequp_size() const {
  return needequp_.size();
}
inline void combinequalityUp::clear_needequp() {
  needequp_.Clear();
}
inline const ::proto_ff::combinequalityUpneedEqupDesc& combinequalityUp::needequp(int index) const {
  return needequp_.Get(index);
}
inline ::proto_ff::combinequalityUpneedEqupDesc* combinequalityUp::mutable_needequp(int index) {
  return needequp_.Mutable(index);
}
inline ::proto_ff::combinequalityUpneedEqupDesc* combinequalityUp::add_needequp() {
  return needequp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedEqupDesc >&
combinequalityUp::needequp() const {
  return needequp_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedEqupDesc >*
combinequalityUp::mutable_needequp() {
  return &needequp_;
}

// repeated .proto_ff.combinequalityUpneedMaterialDesc needMaterial = 13;
inline int combinequalityUp::needmaterial_size() const {
  return needmaterial_.size();
}
inline void combinequalityUp::clear_needmaterial() {
  needmaterial_.Clear();
}
inline const ::proto_ff::combinequalityUpneedMaterialDesc& combinequalityUp::needmaterial(int index) const {
  return needmaterial_.Get(index);
}
inline ::proto_ff::combinequalityUpneedMaterialDesc* combinequalityUp::mutable_needmaterial(int index) {
  return needmaterial_.Mutable(index);
}
inline ::proto_ff::combinequalityUpneedMaterialDesc* combinequalityUp::add_needmaterial() {
  return needmaterial_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedMaterialDesc >&
combinequalityUp::needmaterial() const {
  return needmaterial_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUpneedMaterialDesc >*
combinequalityUp::mutable_needmaterial() {
  return &needmaterial_;
}

// -------------------------------------------------------------------

// Sheet_combinequalityUp

// repeated .proto_ff.combinequalityUp combinequalityUp_List = 1;
inline int Sheet_combinequalityUp::combinequalityup_list_size() const {
  return combinequalityup_list_.size();
}
inline void Sheet_combinequalityUp::clear_combinequalityup_list() {
  combinequalityup_list_.Clear();
}
inline const ::proto_ff::combinequalityUp& Sheet_combinequalityUp::combinequalityup_list(int index) const {
  return combinequalityup_list_.Get(index);
}
inline ::proto_ff::combinequalityUp* Sheet_combinequalityUp::mutable_combinequalityup_list(int index) {
  return combinequalityup_list_.Mutable(index);
}
inline ::proto_ff::combinequalityUp* Sheet_combinequalityUp::add_combinequalityup_list() {
  return combinequalityup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUp >&
Sheet_combinequalityUp::combinequalityup_list() const {
  return combinequalityup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::combinequalityUp >*
Sheet_combinequalityUp::mutable_combinequalityup_list() {
  return &combinequalityup_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_combine_2eproto__INCLUDED
