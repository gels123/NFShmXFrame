// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Teleport.proto

#ifndef PROTOBUF_E_5fTeleport_2eproto__INCLUDED
#define PROTOBUF_E_5fTeleport_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fTeleport_2eproto();
void protobuf_AssignDesc_E_5fTeleport_2eproto();
void protobuf_ShutdownFile_E_5fTeleport_2eproto();

class E_TeleportTeleport;
class Sheet_TeleportTeleport;

// ===================================================================

class E_TeleportTeleport : public ::google::protobuf::Message {
 public:
  E_TeleportTeleport();
  virtual ~E_TeleportTeleport();

  E_TeleportTeleport(const E_TeleportTeleport& from);

  inline E_TeleportTeleport& operator=(const E_TeleportTeleport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TeleportTeleport& default_instance();

  void Swap(E_TeleportTeleport* other);

  // implements Message ----------------------------------------------

  E_TeleportTeleport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TeleportTeleport& from);
  void MergeFrom(const E_TeleportTeleport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_teleportid = 1;
  inline bool has_m_teleportid() const;
  inline void clear_m_teleportid();
  static const int kMTeleportidFieldNumber = 1;
  inline ::google::protobuf::int64 m_teleportid() const;
  inline void set_m_teleportid(::google::protobuf::int64 value);

  // optional int32 m_teleporttype = 2;
  inline bool has_m_teleporttype() const;
  inline void clear_m_teleporttype();
  static const int kMTeleporttypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_teleporttype() const;
  inline void set_m_teleporttype(::google::protobuf::int32 value);

  // optional string m_name = 3;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 3;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int64 m_monsterid = 4;
  inline bool has_m_monsterid() const;
  inline void clear_m_monsterid();
  static const int kMMonsteridFieldNumber = 4;
  inline ::google::protobuf::int64 m_monsterid() const;
  inline void set_m_monsterid(::google::protobuf::int64 value);

  // optional int32 m_showcondition = 5;
  inline bool has_m_showcondition() const;
  inline void clear_m_showcondition();
  static const int kMShowconditionFieldNumber = 5;
  inline ::google::protobuf::int32 m_showcondition() const;
  inline void set_m_showcondition(::google::protobuf::int32 value);

  // optional string m_conditionvalue = 6;
  inline bool has_m_conditionvalue() const;
  inline void clear_m_conditionvalue();
  static const int kMConditionvalueFieldNumber = 6;
  inline const ::std::string& m_conditionvalue() const;
  inline void set_m_conditionvalue(const ::std::string& value);
  inline void set_m_conditionvalue(const char* value);
  inline void set_m_conditionvalue(const char* value, size_t size);
  inline ::std::string* mutable_m_conditionvalue();
  inline ::std::string* release_m_conditionvalue();
  inline void set_allocated_m_conditionvalue(::std::string* m_conditionvalue);

  // optional int32 m_canenter = 7;
  inline bool has_m_canenter() const;
  inline void clear_m_canenter();
  static const int kMCanenterFieldNumber = 7;
  inline ::google::protobuf::int32 m_canenter() const;
  inline void set_m_canenter(::google::protobuf::int32 value);

  // optional int64 m_showpathid = 8;
  inline bool has_m_showpathid() const;
  inline void clear_m_showpathid();
  static const int kMShowpathidFieldNumber = 8;
  inline ::google::protobuf::int64 m_showpathid() const;
  inline void set_m_showpathid(::google::protobuf::int64 value);

  // optional int64 m_topathid = 9;
  inline bool has_m_topathid() const;
  inline void clear_m_topathid();
  static const int kMTopathidFieldNumber = 9;
  inline ::google::protobuf::int64 m_topathid() const;
  inline void set_m_topathid(::google::protobuf::int64 value);

  // optional int64 m_toduplicateid = 10;
  inline bool has_m_toduplicateid() const;
  inline void clear_m_toduplicateid();
  static const int kMToduplicateidFieldNumber = 10;
  inline ::google::protobuf::int64 m_toduplicateid() const;
  inline void set_m_toduplicateid(::google::protobuf::int64 value);

  // optional string m_entercost = 11;
  inline bool has_m_entercost() const;
  inline void clear_m_entercost();
  static const int kMEntercostFieldNumber = 11;
  inline const ::std::string& m_entercost() const;
  inline void set_m_entercost(const ::std::string& value);
  inline void set_m_entercost(const char* value);
  inline void set_m_entercost(const char* value, size_t size);
  inline ::std::string* mutable_m_entercost();
  inline ::std::string* release_m_entercost();
  inline void set_allocated_m_entercost(::std::string* m_entercost);

  // optional int32 m_trigrange = 12;
  inline bool has_m_trigrange() const;
  inline void clear_m_trigrange();
  static const int kMTrigrangeFieldNumber = 12;
  inline ::google::protobuf::int32 m_trigrange() const;
  inline void set_m_trigrange(::google::protobuf::int32 value);

  // optional int32 m_livingtime = 13;
  inline bool has_m_livingtime() const;
  inline void clear_m_livingtime();
  static const int kMLivingtimeFieldNumber = 13;
  inline ::google::protobuf::int32 m_livingtime() const;
  inline void set_m_livingtime(::google::protobuf::int32 value);

  // optional int64 m_openchatid = 14;
  inline bool has_m_openchatid() const;
  inline void clear_m_openchatid();
  static const int kMOpenchatidFieldNumber = 14;
  inline ::google::protobuf::int64 m_openchatid() const;
  inline void set_m_openchatid(::google::protobuf::int64 value);

  // optional int64 m_progresschatid = 15;
  inline bool has_m_progresschatid() const;
  inline void clear_m_progresschatid();
  static const int kMProgresschatidFieldNumber = 15;
  inline ::google::protobuf::int64 m_progresschatid() const;
  inline void set_m_progresschatid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TeleportTeleport)
 private:
  inline void set_has_m_teleportid();
  inline void clear_has_m_teleportid();
  inline void set_has_m_teleporttype();
  inline void clear_has_m_teleporttype();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_monsterid();
  inline void clear_has_m_monsterid();
  inline void set_has_m_showcondition();
  inline void clear_has_m_showcondition();
  inline void set_has_m_conditionvalue();
  inline void clear_has_m_conditionvalue();
  inline void set_has_m_canenter();
  inline void clear_has_m_canenter();
  inline void set_has_m_showpathid();
  inline void clear_has_m_showpathid();
  inline void set_has_m_topathid();
  inline void clear_has_m_topathid();
  inline void set_has_m_toduplicateid();
  inline void clear_has_m_toduplicateid();
  inline void set_has_m_entercost();
  inline void clear_has_m_entercost();
  inline void set_has_m_trigrange();
  inline void clear_has_m_trigrange();
  inline void set_has_m_livingtime();
  inline void clear_has_m_livingtime();
  inline void set_has_m_openchatid();
  inline void clear_has_m_openchatid();
  inline void set_has_m_progresschatid();
  inline void clear_has_m_progresschatid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_teleportid_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_teleporttype_;
  ::google::protobuf::int32 m_showcondition_;
  ::google::protobuf::int64 m_monsterid_;
  ::std::string* m_conditionvalue_;
  ::google::protobuf::int64 m_showpathid_;
  ::google::protobuf::int64 m_topathid_;
  ::google::protobuf::int32 m_canenter_;
  ::google::protobuf::int32 m_trigrange_;
  ::google::protobuf::int64 m_toduplicateid_;
  ::std::string* m_entercost_;
  ::google::protobuf::int64 m_openchatid_;
  ::google::protobuf::int64 m_progresschatid_;
  ::google::protobuf::int32 m_livingtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTeleport_2eproto();
  friend void protobuf_AssignDesc_E_5fTeleport_2eproto();
  friend void protobuf_ShutdownFile_E_5fTeleport_2eproto();

  void InitAsDefaultInstance();
  static E_TeleportTeleport* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_TeleportTeleport : public ::google::protobuf::Message {
 public:
  Sheet_TeleportTeleport();
  virtual ~Sheet_TeleportTeleport();

  Sheet_TeleportTeleport(const Sheet_TeleportTeleport& from);

  inline Sheet_TeleportTeleport& operator=(const Sheet_TeleportTeleport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_TeleportTeleport& default_instance();

  void Swap(Sheet_TeleportTeleport* other);

  // implements Message ----------------------------------------------

  Sheet_TeleportTeleport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_TeleportTeleport& from);
  void MergeFrom(const Sheet_TeleportTeleport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_TeleportTeleport E_TeleportTeleport_List = 1;
  inline int e_teleportteleport_list_size() const;
  inline void clear_e_teleportteleport_list();
  static const int kETeleportTeleportListFieldNumber = 1;
  inline const ::proto_ff::E_TeleportTeleport& e_teleportteleport_list(int index) const;
  inline ::proto_ff::E_TeleportTeleport* mutable_e_teleportteleport_list(int index);
  inline ::proto_ff::E_TeleportTeleport* add_e_teleportteleport_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TeleportTeleport >&
      e_teleportteleport_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TeleportTeleport >*
      mutable_e_teleportteleport_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_TeleportTeleport)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TeleportTeleport > e_teleportteleport_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTeleport_2eproto();
  friend void protobuf_AssignDesc_E_5fTeleport_2eproto();
  friend void protobuf_ShutdownFile_E_5fTeleport_2eproto();

  void InitAsDefaultInstance();
  static Sheet_TeleportTeleport* default_instance_;
};
// ===================================================================


// ===================================================================

// E_TeleportTeleport

// optional int64 m_teleportid = 1;
inline bool E_TeleportTeleport::has_m_teleportid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TeleportTeleport::set_has_m_teleportid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TeleportTeleport::clear_has_m_teleportid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TeleportTeleport::clear_m_teleportid() {
  m_teleportid_ = GOOGLE_LONGLONG(0);
  clear_has_m_teleportid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_teleportid() const {
  return m_teleportid_;
}
inline void E_TeleportTeleport::set_m_teleportid(::google::protobuf::int64 value) {
  set_has_m_teleportid();
  m_teleportid_ = value;
}

// optional int32 m_teleporttype = 2;
inline bool E_TeleportTeleport::has_m_teleporttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TeleportTeleport::set_has_m_teleporttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TeleportTeleport::clear_has_m_teleporttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TeleportTeleport::clear_m_teleporttype() {
  m_teleporttype_ = 0;
  clear_has_m_teleporttype();
}
inline ::google::protobuf::int32 E_TeleportTeleport::m_teleporttype() const {
  return m_teleporttype_;
}
inline void E_TeleportTeleport::set_m_teleporttype(::google::protobuf::int32 value) {
  set_has_m_teleporttype();
  m_teleporttype_ = value;
}

// optional string m_name = 3;
inline bool E_TeleportTeleport::has_m_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_TeleportTeleport::set_has_m_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_TeleportTeleport::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_TeleportTeleport::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_TeleportTeleport::m_name() const {
  return *m_name_;
}
inline void E_TeleportTeleport::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_TeleportTeleport::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_TeleportTeleport::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_TeleportTeleport::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_TeleportTeleport::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_TeleportTeleport::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 m_monsterid = 4;
inline bool E_TeleportTeleport::has_m_monsterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_TeleportTeleport::set_has_m_monsterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_TeleportTeleport::clear_has_m_monsterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_TeleportTeleport::clear_m_monsterid() {
  m_monsterid_ = GOOGLE_LONGLONG(0);
  clear_has_m_monsterid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_monsterid() const {
  return m_monsterid_;
}
inline void E_TeleportTeleport::set_m_monsterid(::google::protobuf::int64 value) {
  set_has_m_monsterid();
  m_monsterid_ = value;
}

// optional int32 m_showcondition = 5;
inline bool E_TeleportTeleport::has_m_showcondition() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_TeleportTeleport::set_has_m_showcondition() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_TeleportTeleport::clear_has_m_showcondition() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_TeleportTeleport::clear_m_showcondition() {
  m_showcondition_ = 0;
  clear_has_m_showcondition();
}
inline ::google::protobuf::int32 E_TeleportTeleport::m_showcondition() const {
  return m_showcondition_;
}
inline void E_TeleportTeleport::set_m_showcondition(::google::protobuf::int32 value) {
  set_has_m_showcondition();
  m_showcondition_ = value;
}

// optional string m_conditionvalue = 6;
inline bool E_TeleportTeleport::has_m_conditionvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_TeleportTeleport::set_has_m_conditionvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_TeleportTeleport::clear_has_m_conditionvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_TeleportTeleport::clear_m_conditionvalue() {
  if (m_conditionvalue_ != &::google::protobuf::internal::kEmptyString) {
    m_conditionvalue_->clear();
  }
  clear_has_m_conditionvalue();
}
inline const ::std::string& E_TeleportTeleport::m_conditionvalue() const {
  return *m_conditionvalue_;
}
inline void E_TeleportTeleport::set_m_conditionvalue(const ::std::string& value) {
  set_has_m_conditionvalue();
  if (m_conditionvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_conditionvalue_ = new ::std::string;
  }
  m_conditionvalue_->assign(value);
}
inline void E_TeleportTeleport::set_m_conditionvalue(const char* value) {
  set_has_m_conditionvalue();
  if (m_conditionvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_conditionvalue_ = new ::std::string;
  }
  m_conditionvalue_->assign(value);
}
inline void E_TeleportTeleport::set_m_conditionvalue(const char* value, size_t size) {
  set_has_m_conditionvalue();
  if (m_conditionvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_conditionvalue_ = new ::std::string;
  }
  m_conditionvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_TeleportTeleport::mutable_m_conditionvalue() {
  set_has_m_conditionvalue();
  if (m_conditionvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_conditionvalue_ = new ::std::string;
  }
  return m_conditionvalue_;
}
inline ::std::string* E_TeleportTeleport::release_m_conditionvalue() {
  clear_has_m_conditionvalue();
  if (m_conditionvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_conditionvalue_;
    m_conditionvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_TeleportTeleport::set_allocated_m_conditionvalue(::std::string* m_conditionvalue) {
  if (m_conditionvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_conditionvalue_;
  }
  if (m_conditionvalue) {
    set_has_m_conditionvalue();
    m_conditionvalue_ = m_conditionvalue;
  } else {
    clear_has_m_conditionvalue();
    m_conditionvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_canenter = 7;
inline bool E_TeleportTeleport::has_m_canenter() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_TeleportTeleport::set_has_m_canenter() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_TeleportTeleport::clear_has_m_canenter() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_TeleportTeleport::clear_m_canenter() {
  m_canenter_ = 0;
  clear_has_m_canenter();
}
inline ::google::protobuf::int32 E_TeleportTeleport::m_canenter() const {
  return m_canenter_;
}
inline void E_TeleportTeleport::set_m_canenter(::google::protobuf::int32 value) {
  set_has_m_canenter();
  m_canenter_ = value;
}

// optional int64 m_showpathid = 8;
inline bool E_TeleportTeleport::has_m_showpathid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_TeleportTeleport::set_has_m_showpathid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_TeleportTeleport::clear_has_m_showpathid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_TeleportTeleport::clear_m_showpathid() {
  m_showpathid_ = GOOGLE_LONGLONG(0);
  clear_has_m_showpathid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_showpathid() const {
  return m_showpathid_;
}
inline void E_TeleportTeleport::set_m_showpathid(::google::protobuf::int64 value) {
  set_has_m_showpathid();
  m_showpathid_ = value;
}

// optional int64 m_topathid = 9;
inline bool E_TeleportTeleport::has_m_topathid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_TeleportTeleport::set_has_m_topathid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_TeleportTeleport::clear_has_m_topathid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_TeleportTeleport::clear_m_topathid() {
  m_topathid_ = GOOGLE_LONGLONG(0);
  clear_has_m_topathid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_topathid() const {
  return m_topathid_;
}
inline void E_TeleportTeleport::set_m_topathid(::google::protobuf::int64 value) {
  set_has_m_topathid();
  m_topathid_ = value;
}

// optional int64 m_toduplicateid = 10;
inline bool E_TeleportTeleport::has_m_toduplicateid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_TeleportTeleport::set_has_m_toduplicateid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_TeleportTeleport::clear_has_m_toduplicateid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_TeleportTeleport::clear_m_toduplicateid() {
  m_toduplicateid_ = GOOGLE_LONGLONG(0);
  clear_has_m_toduplicateid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_toduplicateid() const {
  return m_toduplicateid_;
}
inline void E_TeleportTeleport::set_m_toduplicateid(::google::protobuf::int64 value) {
  set_has_m_toduplicateid();
  m_toduplicateid_ = value;
}

// optional string m_entercost = 11;
inline bool E_TeleportTeleport::has_m_entercost() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_TeleportTeleport::set_has_m_entercost() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_TeleportTeleport::clear_has_m_entercost() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_TeleportTeleport::clear_m_entercost() {
  if (m_entercost_ != &::google::protobuf::internal::kEmptyString) {
    m_entercost_->clear();
  }
  clear_has_m_entercost();
}
inline const ::std::string& E_TeleportTeleport::m_entercost() const {
  return *m_entercost_;
}
inline void E_TeleportTeleport::set_m_entercost(const ::std::string& value) {
  set_has_m_entercost();
  if (m_entercost_ == &::google::protobuf::internal::kEmptyString) {
    m_entercost_ = new ::std::string;
  }
  m_entercost_->assign(value);
}
inline void E_TeleportTeleport::set_m_entercost(const char* value) {
  set_has_m_entercost();
  if (m_entercost_ == &::google::protobuf::internal::kEmptyString) {
    m_entercost_ = new ::std::string;
  }
  m_entercost_->assign(value);
}
inline void E_TeleportTeleport::set_m_entercost(const char* value, size_t size) {
  set_has_m_entercost();
  if (m_entercost_ == &::google::protobuf::internal::kEmptyString) {
    m_entercost_ = new ::std::string;
  }
  m_entercost_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_TeleportTeleport::mutable_m_entercost() {
  set_has_m_entercost();
  if (m_entercost_ == &::google::protobuf::internal::kEmptyString) {
    m_entercost_ = new ::std::string;
  }
  return m_entercost_;
}
inline ::std::string* E_TeleportTeleport::release_m_entercost() {
  clear_has_m_entercost();
  if (m_entercost_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_entercost_;
    m_entercost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_TeleportTeleport::set_allocated_m_entercost(::std::string* m_entercost) {
  if (m_entercost_ != &::google::protobuf::internal::kEmptyString) {
    delete m_entercost_;
  }
  if (m_entercost) {
    set_has_m_entercost();
    m_entercost_ = m_entercost;
  } else {
    clear_has_m_entercost();
    m_entercost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_trigrange = 12;
inline bool E_TeleportTeleport::has_m_trigrange() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_TeleportTeleport::set_has_m_trigrange() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_TeleportTeleport::clear_has_m_trigrange() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_TeleportTeleport::clear_m_trigrange() {
  m_trigrange_ = 0;
  clear_has_m_trigrange();
}
inline ::google::protobuf::int32 E_TeleportTeleport::m_trigrange() const {
  return m_trigrange_;
}
inline void E_TeleportTeleport::set_m_trigrange(::google::protobuf::int32 value) {
  set_has_m_trigrange();
  m_trigrange_ = value;
}

// optional int32 m_livingtime = 13;
inline bool E_TeleportTeleport::has_m_livingtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_TeleportTeleport::set_has_m_livingtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_TeleportTeleport::clear_has_m_livingtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_TeleportTeleport::clear_m_livingtime() {
  m_livingtime_ = 0;
  clear_has_m_livingtime();
}
inline ::google::protobuf::int32 E_TeleportTeleport::m_livingtime() const {
  return m_livingtime_;
}
inline void E_TeleportTeleport::set_m_livingtime(::google::protobuf::int32 value) {
  set_has_m_livingtime();
  m_livingtime_ = value;
}

// optional int64 m_openchatid = 14;
inline bool E_TeleportTeleport::has_m_openchatid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_TeleportTeleport::set_has_m_openchatid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_TeleportTeleport::clear_has_m_openchatid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_TeleportTeleport::clear_m_openchatid() {
  m_openchatid_ = GOOGLE_LONGLONG(0);
  clear_has_m_openchatid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_openchatid() const {
  return m_openchatid_;
}
inline void E_TeleportTeleport::set_m_openchatid(::google::protobuf::int64 value) {
  set_has_m_openchatid();
  m_openchatid_ = value;
}

// optional int64 m_progresschatid = 15;
inline bool E_TeleportTeleport::has_m_progresschatid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_TeleportTeleport::set_has_m_progresschatid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_TeleportTeleport::clear_has_m_progresschatid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_TeleportTeleport::clear_m_progresschatid() {
  m_progresschatid_ = GOOGLE_LONGLONG(0);
  clear_has_m_progresschatid();
}
inline ::google::protobuf::int64 E_TeleportTeleport::m_progresschatid() const {
  return m_progresschatid_;
}
inline void E_TeleportTeleport::set_m_progresschatid(::google::protobuf::int64 value) {
  set_has_m_progresschatid();
  m_progresschatid_ = value;
}

// -------------------------------------------------------------------

// Sheet_TeleportTeleport

// repeated .proto_ff.E_TeleportTeleport E_TeleportTeleport_List = 1;
inline int Sheet_TeleportTeleport::e_teleportteleport_list_size() const {
  return e_teleportteleport_list_.size();
}
inline void Sheet_TeleportTeleport::clear_e_teleportteleport_list() {
  e_teleportteleport_list_.Clear();
}
inline const ::proto_ff::E_TeleportTeleport& Sheet_TeleportTeleport::e_teleportteleport_list(int index) const {
  return e_teleportteleport_list_.Get(index);
}
inline ::proto_ff::E_TeleportTeleport* Sheet_TeleportTeleport::mutable_e_teleportteleport_list(int index) {
  return e_teleportteleport_list_.Mutable(index);
}
inline ::proto_ff::E_TeleportTeleport* Sheet_TeleportTeleport::add_e_teleportteleport_list() {
  return e_teleportteleport_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TeleportTeleport >&
Sheet_TeleportTeleport::e_teleportteleport_list() const {
  return e_teleportteleport_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TeleportTeleport >*
Sheet_TeleportTeleport::mutable_e_teleportteleport_list() {
  return &e_teleportteleport_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fTeleport_2eproto__INCLUDED
