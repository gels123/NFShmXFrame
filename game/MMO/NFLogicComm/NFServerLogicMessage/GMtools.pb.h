// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GMtools.proto

#ifndef PROTOBUF_GMtools_2eproto__INCLUDED
#define PROTOBUF_GMtools_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GMtools_2eproto();
void protobuf_AssignDesc_GMtools_2eproto();
void protobuf_ShutdownFile_GMtools_2eproto();

class GMtoolsGMTools;
class Sheet_GMtoolsGMTools;
class GMtoolsrecharge;
class Sheet_GMtoolsrecharge;
class GMtoolsgift;
class Sheet_GMtoolsgift;
class GMtoolsunlimit;
class Sheet_GMtoolsunlimit;
class GMtoolsupperLimit;
class Sheet_GMtoolsupperLimit;

// ===================================================================

class GMtoolsGMTools : public ::google::protobuf::Message {
 public:
  GMtoolsGMTools();
  virtual ~GMtoolsGMTools();

  GMtoolsGMTools(const GMtoolsGMTools& from);

  inline GMtoolsGMTools& operator=(const GMtoolsGMTools& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMtoolsGMTools& default_instance();

  void Swap(GMtoolsGMTools* other);

  // implements Message ----------------------------------------------

  GMtoolsGMTools* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMtoolsGMTools& from);
  void MergeFrom(const GMtoolsGMTools& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string typePrarm = 3;
  inline bool has_typeprarm() const;
  inline void clear_typeprarm();
  static const int kTypePrarmFieldNumber = 3;
  inline const ::std::string& typeprarm() const;
  inline void set_typeprarm(const ::std::string& value);
  inline void set_typeprarm(const char* value);
  inline void set_typeprarm(const char* value, size_t size);
  inline ::std::string* mutable_typeprarm();
  inline ::std::string* release_typeprarm();
  inline void set_allocated_typeprarm(::std::string* typeprarm);

  // @@protoc_insertion_point(class_scope:proto_ff.GMtoolsGMTools)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_typeprarm();
  inline void clear_has_typeprarm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::std::string* typeprarm_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static GMtoolsGMTools* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GMtoolsGMTools : public ::google::protobuf::Message {
 public:
  Sheet_GMtoolsGMTools();
  virtual ~Sheet_GMtoolsGMTools();

  Sheet_GMtoolsGMTools(const Sheet_GMtoolsGMTools& from);

  inline Sheet_GMtoolsGMTools& operator=(const Sheet_GMtoolsGMTools& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GMtoolsGMTools& default_instance();

  void Swap(Sheet_GMtoolsGMTools* other);

  // implements Message ----------------------------------------------

  Sheet_GMtoolsGMTools* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GMtoolsGMTools& from);
  void MergeFrom(const Sheet_GMtoolsGMTools& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMtoolsGMTools GMtoolsGMTools_List = 1;
  inline int gmtoolsgmtools_list_size() const;
  inline void clear_gmtoolsgmtools_list();
  static const int kGMtoolsGMToolsListFieldNumber = 1;
  inline const ::proto_ff::GMtoolsGMTools& gmtoolsgmtools_list(int index) const;
  inline ::proto_ff::GMtoolsGMTools* mutable_gmtoolsgmtools_list(int index);
  inline ::proto_ff::GMtoolsGMTools* add_gmtoolsgmtools_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsGMTools >&
      gmtoolsgmtools_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsGMTools >*
      mutable_gmtoolsgmtools_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GMtoolsGMTools)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsGMTools > gmtoolsgmtools_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GMtoolsGMTools* default_instance_;
};
// -------------------------------------------------------------------

class GMtoolsrecharge : public ::google::protobuf::Message {
 public:
  GMtoolsrecharge();
  virtual ~GMtoolsrecharge();

  GMtoolsrecharge(const GMtoolsrecharge& from);

  inline GMtoolsrecharge& operator=(const GMtoolsrecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMtoolsrecharge& default_instance();

  void Swap(GMtoolsrecharge* other);

  // implements Message ----------------------------------------------

  GMtoolsrecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMtoolsrecharge& from);
  void MergeFrom(const GMtoolsrecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 cost = 2;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 2;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // optional int32 rechaarge = 3;
  inline bool has_rechaarge() const;
  inline void clear_rechaarge();
  static const int kRechaargeFieldNumber = 3;
  inline ::google::protobuf::int32 rechaarge() const;
  inline void set_rechaarge(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMtoolsrecharge)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_rechaarge();
  inline void clear_has_rechaarge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 rechaarge_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static GMtoolsrecharge* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GMtoolsrecharge : public ::google::protobuf::Message {
 public:
  Sheet_GMtoolsrecharge();
  virtual ~Sheet_GMtoolsrecharge();

  Sheet_GMtoolsrecharge(const Sheet_GMtoolsrecharge& from);

  inline Sheet_GMtoolsrecharge& operator=(const Sheet_GMtoolsrecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GMtoolsrecharge& default_instance();

  void Swap(Sheet_GMtoolsrecharge* other);

  // implements Message ----------------------------------------------

  Sheet_GMtoolsrecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GMtoolsrecharge& from);
  void MergeFrom(const Sheet_GMtoolsrecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMtoolsrecharge GMtoolsrecharge_List = 1;
  inline int gmtoolsrecharge_list_size() const;
  inline void clear_gmtoolsrecharge_list();
  static const int kGMtoolsrechargeListFieldNumber = 1;
  inline const ::proto_ff::GMtoolsrecharge& gmtoolsrecharge_list(int index) const;
  inline ::proto_ff::GMtoolsrecharge* mutable_gmtoolsrecharge_list(int index);
  inline ::proto_ff::GMtoolsrecharge* add_gmtoolsrecharge_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsrecharge >&
      gmtoolsrecharge_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsrecharge >*
      mutable_gmtoolsrecharge_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GMtoolsrecharge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsrecharge > gmtoolsrecharge_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GMtoolsrecharge* default_instance_;
};
// -------------------------------------------------------------------

class GMtoolsgift : public ::google::protobuf::Message {
 public:
  GMtoolsgift();
  virtual ~GMtoolsgift();

  GMtoolsgift(const GMtoolsgift& from);

  inline GMtoolsgift& operator=(const GMtoolsgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMtoolsgift& default_instance();

  void Swap(GMtoolsgift* other);

  // implements Message ----------------------------------------------

  GMtoolsgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMtoolsgift& from);
  void MergeFrom(const GMtoolsgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 upperLimit = 2;
  inline bool has_upperlimit() const;
  inline void clear_upperlimit();
  static const int kUpperLimitFieldNumber = 2;
  inline ::google::protobuf::int32 upperlimit() const;
  inline void set_upperlimit(::google::protobuf::int32 value);

  // optional string condition = 3;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 3;
  inline const ::std::string& condition() const;
  inline void set_condition(const ::std::string& value);
  inline void set_condition(const char* value);
  inline void set_condition(const char* value, size_t size);
  inline ::std::string* mutable_condition();
  inline ::std::string* release_condition();
  inline void set_allocated_condition(::std::string* condition);

  // optional int32 cost = 4;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 4;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // optional int32 daily = 5;
  inline bool has_daily() const;
  inline void clear_daily();
  static const int kDailyFieldNumber = 5;
  inline ::google::protobuf::int32 daily() const;
  inline void set_daily(::google::protobuf::int32 value);

  // optional int64 boxid = 6;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 6;
  inline ::google::protobuf::int64 boxid() const;
  inline void set_boxid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMtoolsgift)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_upperlimit();
  inline void clear_has_upperlimit();
  inline void set_has_condition();
  inline void clear_has_condition();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_daily();
  inline void clear_has_daily();
  inline void set_has_boxid();
  inline void clear_has_boxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 upperlimit_;
  ::std::string* condition_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 daily_;
  ::google::protobuf::int64 boxid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static GMtoolsgift* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GMtoolsgift : public ::google::protobuf::Message {
 public:
  Sheet_GMtoolsgift();
  virtual ~Sheet_GMtoolsgift();

  Sheet_GMtoolsgift(const Sheet_GMtoolsgift& from);

  inline Sheet_GMtoolsgift& operator=(const Sheet_GMtoolsgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GMtoolsgift& default_instance();

  void Swap(Sheet_GMtoolsgift* other);

  // implements Message ----------------------------------------------

  Sheet_GMtoolsgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GMtoolsgift& from);
  void MergeFrom(const Sheet_GMtoolsgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMtoolsgift GMtoolsgift_List = 1;
  inline int gmtoolsgift_list_size() const;
  inline void clear_gmtoolsgift_list();
  static const int kGMtoolsgiftListFieldNumber = 1;
  inline const ::proto_ff::GMtoolsgift& gmtoolsgift_list(int index) const;
  inline ::proto_ff::GMtoolsgift* mutable_gmtoolsgift_list(int index);
  inline ::proto_ff::GMtoolsgift* add_gmtoolsgift_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsgift >&
      gmtoolsgift_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsgift >*
      mutable_gmtoolsgift_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GMtoolsgift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsgift > gmtoolsgift_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GMtoolsgift* default_instance_;
};
// -------------------------------------------------------------------

class GMtoolsunlimit : public ::google::protobuf::Message {
 public:
  GMtoolsunlimit();
  virtual ~GMtoolsunlimit();

  GMtoolsunlimit(const GMtoolsunlimit& from);

  inline GMtoolsunlimit& operator=(const GMtoolsunlimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMtoolsunlimit& default_instance();

  void Swap(GMtoolsunlimit* other);

  // implements Message ----------------------------------------------

  GMtoolsunlimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMtoolsunlimit& from);
  void MergeFrom(const GMtoolsunlimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 upperLimit = 2;
  inline bool has_upperlimit() const;
  inline void clear_upperlimit();
  static const int kUpperLimitFieldNumber = 2;
  inline ::google::protobuf::int32 upperlimit() const;
  inline void set_upperlimit(::google::protobuf::int32 value);

  // optional int32 cost = 3;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // optional int64 boxid = 4;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 4;
  inline ::google::protobuf::int64 boxid() const;
  inline void set_boxid(::google::protobuf::int64 value);

  // optional int32 dailyNum = 5;
  inline bool has_dailynum() const;
  inline void clear_dailynum();
  static const int kDailyNumFieldNumber = 5;
  inline ::google::protobuf::int32 dailynum() const;
  inline void set_dailynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMtoolsunlimit)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_upperlimit();
  inline void clear_has_upperlimit();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_dailynum();
  inline void clear_has_dailynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 upperlimit_;
  ::google::protobuf::int64 boxid_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 dailynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static GMtoolsunlimit* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GMtoolsunlimit : public ::google::protobuf::Message {
 public:
  Sheet_GMtoolsunlimit();
  virtual ~Sheet_GMtoolsunlimit();

  Sheet_GMtoolsunlimit(const Sheet_GMtoolsunlimit& from);

  inline Sheet_GMtoolsunlimit& operator=(const Sheet_GMtoolsunlimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GMtoolsunlimit& default_instance();

  void Swap(Sheet_GMtoolsunlimit* other);

  // implements Message ----------------------------------------------

  Sheet_GMtoolsunlimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GMtoolsunlimit& from);
  void MergeFrom(const Sheet_GMtoolsunlimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMtoolsunlimit GMtoolsunlimit_List = 1;
  inline int gmtoolsunlimit_list_size() const;
  inline void clear_gmtoolsunlimit_list();
  static const int kGMtoolsunlimitListFieldNumber = 1;
  inline const ::proto_ff::GMtoolsunlimit& gmtoolsunlimit_list(int index) const;
  inline ::proto_ff::GMtoolsunlimit* mutable_gmtoolsunlimit_list(int index);
  inline ::proto_ff::GMtoolsunlimit* add_gmtoolsunlimit_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsunlimit >&
      gmtoolsunlimit_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsunlimit >*
      mutable_gmtoolsunlimit_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GMtoolsunlimit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsunlimit > gmtoolsunlimit_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GMtoolsunlimit* default_instance_;
};
// -------------------------------------------------------------------

class GMtoolsupperLimit : public ::google::protobuf::Message {
 public:
  GMtoolsupperLimit();
  virtual ~GMtoolsupperLimit();

  GMtoolsupperLimit(const GMtoolsupperLimit& from);

  inline GMtoolsupperLimit& operator=(const GMtoolsupperLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMtoolsupperLimit& default_instance();

  void Swap(GMtoolsupperLimit* other);

  // implements Message ----------------------------------------------

  GMtoolsupperLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMtoolsupperLimit& from);
  void MergeFrom(const GMtoolsupperLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMtoolsupperLimit)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static GMtoolsupperLimit* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GMtoolsupperLimit : public ::google::protobuf::Message {
 public:
  Sheet_GMtoolsupperLimit();
  virtual ~Sheet_GMtoolsupperLimit();

  Sheet_GMtoolsupperLimit(const Sheet_GMtoolsupperLimit& from);

  inline Sheet_GMtoolsupperLimit& operator=(const Sheet_GMtoolsupperLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GMtoolsupperLimit& default_instance();

  void Swap(Sheet_GMtoolsupperLimit* other);

  // implements Message ----------------------------------------------

  Sheet_GMtoolsupperLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GMtoolsupperLimit& from);
  void MergeFrom(const Sheet_GMtoolsupperLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMtoolsupperLimit GMtoolsupperLimit_List = 1;
  inline int gmtoolsupperlimit_list_size() const;
  inline void clear_gmtoolsupperlimit_list();
  static const int kGMtoolsupperLimitListFieldNumber = 1;
  inline const ::proto_ff::GMtoolsupperLimit& gmtoolsupperlimit_list(int index) const;
  inline ::proto_ff::GMtoolsupperLimit* mutable_gmtoolsupperlimit_list(int index);
  inline ::proto_ff::GMtoolsupperLimit* add_gmtoolsupperlimit_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsupperLimit >&
      gmtoolsupperlimit_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsupperLimit >*
      mutable_gmtoolsupperlimit_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GMtoolsupperLimit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsupperLimit > gmtoolsupperlimit_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GMtools_2eproto();
  friend void protobuf_AssignDesc_GMtools_2eproto();
  friend void protobuf_ShutdownFile_GMtools_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GMtoolsupperLimit* default_instance_;
};
// ===================================================================


// ===================================================================

// GMtoolsGMTools

// optional int32 id = 1;
inline bool GMtoolsGMTools::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMtoolsGMTools::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMtoolsGMTools::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMtoolsGMTools::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMtoolsGMTools::id() const {
  return id_;
}
inline void GMtoolsGMTools::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool GMtoolsGMTools::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMtoolsGMTools::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMtoolsGMTools::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMtoolsGMTools::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GMtoolsGMTools::type() const {
  return type_;
}
inline void GMtoolsGMTools::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string typePrarm = 3;
inline bool GMtoolsGMTools::has_typeprarm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMtoolsGMTools::set_has_typeprarm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMtoolsGMTools::clear_has_typeprarm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMtoolsGMTools::clear_typeprarm() {
  if (typeprarm_ != &::google::protobuf::internal::kEmptyString) {
    typeprarm_->clear();
  }
  clear_has_typeprarm();
}
inline const ::std::string& GMtoolsGMTools::typeprarm() const {
  return *typeprarm_;
}
inline void GMtoolsGMTools::set_typeprarm(const ::std::string& value) {
  set_has_typeprarm();
  if (typeprarm_ == &::google::protobuf::internal::kEmptyString) {
    typeprarm_ = new ::std::string;
  }
  typeprarm_->assign(value);
}
inline void GMtoolsGMTools::set_typeprarm(const char* value) {
  set_has_typeprarm();
  if (typeprarm_ == &::google::protobuf::internal::kEmptyString) {
    typeprarm_ = new ::std::string;
  }
  typeprarm_->assign(value);
}
inline void GMtoolsGMTools::set_typeprarm(const char* value, size_t size) {
  set_has_typeprarm();
  if (typeprarm_ == &::google::protobuf::internal::kEmptyString) {
    typeprarm_ = new ::std::string;
  }
  typeprarm_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMtoolsGMTools::mutable_typeprarm() {
  set_has_typeprarm();
  if (typeprarm_ == &::google::protobuf::internal::kEmptyString) {
    typeprarm_ = new ::std::string;
  }
  return typeprarm_;
}
inline ::std::string* GMtoolsGMTools::release_typeprarm() {
  clear_has_typeprarm();
  if (typeprarm_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = typeprarm_;
    typeprarm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMtoolsGMTools::set_allocated_typeprarm(::std::string* typeprarm) {
  if (typeprarm_ != &::google::protobuf::internal::kEmptyString) {
    delete typeprarm_;
  }
  if (typeprarm) {
    set_has_typeprarm();
    typeprarm_ = typeprarm;
  } else {
    clear_has_typeprarm();
    typeprarm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_GMtoolsGMTools

// repeated .proto_ff.GMtoolsGMTools GMtoolsGMTools_List = 1;
inline int Sheet_GMtoolsGMTools::gmtoolsgmtools_list_size() const {
  return gmtoolsgmtools_list_.size();
}
inline void Sheet_GMtoolsGMTools::clear_gmtoolsgmtools_list() {
  gmtoolsgmtools_list_.Clear();
}
inline const ::proto_ff::GMtoolsGMTools& Sheet_GMtoolsGMTools::gmtoolsgmtools_list(int index) const {
  return gmtoolsgmtools_list_.Get(index);
}
inline ::proto_ff::GMtoolsGMTools* Sheet_GMtoolsGMTools::mutable_gmtoolsgmtools_list(int index) {
  return gmtoolsgmtools_list_.Mutable(index);
}
inline ::proto_ff::GMtoolsGMTools* Sheet_GMtoolsGMTools::add_gmtoolsgmtools_list() {
  return gmtoolsgmtools_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsGMTools >&
Sheet_GMtoolsGMTools::gmtoolsgmtools_list() const {
  return gmtoolsgmtools_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsGMTools >*
Sheet_GMtoolsGMTools::mutable_gmtoolsgmtools_list() {
  return &gmtoolsgmtools_list_;
}

// -------------------------------------------------------------------

// GMtoolsrecharge

// optional int32 id = 1;
inline bool GMtoolsrecharge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMtoolsrecharge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMtoolsrecharge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMtoolsrecharge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMtoolsrecharge::id() const {
  return id_;
}
inline void GMtoolsrecharge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 cost = 2;
inline bool GMtoolsrecharge::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMtoolsrecharge::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMtoolsrecharge::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMtoolsrecharge::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 GMtoolsrecharge::cost() const {
  return cost_;
}
inline void GMtoolsrecharge::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
}

// optional int32 rechaarge = 3;
inline bool GMtoolsrecharge::has_rechaarge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMtoolsrecharge::set_has_rechaarge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMtoolsrecharge::clear_has_rechaarge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMtoolsrecharge::clear_rechaarge() {
  rechaarge_ = 0;
  clear_has_rechaarge();
}
inline ::google::protobuf::int32 GMtoolsrecharge::rechaarge() const {
  return rechaarge_;
}
inline void GMtoolsrecharge::set_rechaarge(::google::protobuf::int32 value) {
  set_has_rechaarge();
  rechaarge_ = value;
}

// -------------------------------------------------------------------

// Sheet_GMtoolsrecharge

// repeated .proto_ff.GMtoolsrecharge GMtoolsrecharge_List = 1;
inline int Sheet_GMtoolsrecharge::gmtoolsrecharge_list_size() const {
  return gmtoolsrecharge_list_.size();
}
inline void Sheet_GMtoolsrecharge::clear_gmtoolsrecharge_list() {
  gmtoolsrecharge_list_.Clear();
}
inline const ::proto_ff::GMtoolsrecharge& Sheet_GMtoolsrecharge::gmtoolsrecharge_list(int index) const {
  return gmtoolsrecharge_list_.Get(index);
}
inline ::proto_ff::GMtoolsrecharge* Sheet_GMtoolsrecharge::mutable_gmtoolsrecharge_list(int index) {
  return gmtoolsrecharge_list_.Mutable(index);
}
inline ::proto_ff::GMtoolsrecharge* Sheet_GMtoolsrecharge::add_gmtoolsrecharge_list() {
  return gmtoolsrecharge_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsrecharge >&
Sheet_GMtoolsrecharge::gmtoolsrecharge_list() const {
  return gmtoolsrecharge_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsrecharge >*
Sheet_GMtoolsrecharge::mutable_gmtoolsrecharge_list() {
  return &gmtoolsrecharge_list_;
}

// -------------------------------------------------------------------

// GMtoolsgift

// optional int32 id = 1;
inline bool GMtoolsgift::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMtoolsgift::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMtoolsgift::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMtoolsgift::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMtoolsgift::id() const {
  return id_;
}
inline void GMtoolsgift::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 upperLimit = 2;
inline bool GMtoolsgift::has_upperlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMtoolsgift::set_has_upperlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMtoolsgift::clear_has_upperlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMtoolsgift::clear_upperlimit() {
  upperlimit_ = 0;
  clear_has_upperlimit();
}
inline ::google::protobuf::int32 GMtoolsgift::upperlimit() const {
  return upperlimit_;
}
inline void GMtoolsgift::set_upperlimit(::google::protobuf::int32 value) {
  set_has_upperlimit();
  upperlimit_ = value;
}

// optional string condition = 3;
inline bool GMtoolsgift::has_condition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMtoolsgift::set_has_condition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMtoolsgift::clear_has_condition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMtoolsgift::clear_condition() {
  if (condition_ != &::google::protobuf::internal::kEmptyString) {
    condition_->clear();
  }
  clear_has_condition();
}
inline const ::std::string& GMtoolsgift::condition() const {
  return *condition_;
}
inline void GMtoolsgift::set_condition(const ::std::string& value) {
  set_has_condition();
  if (condition_ == &::google::protobuf::internal::kEmptyString) {
    condition_ = new ::std::string;
  }
  condition_->assign(value);
}
inline void GMtoolsgift::set_condition(const char* value) {
  set_has_condition();
  if (condition_ == &::google::protobuf::internal::kEmptyString) {
    condition_ = new ::std::string;
  }
  condition_->assign(value);
}
inline void GMtoolsgift::set_condition(const char* value, size_t size) {
  set_has_condition();
  if (condition_ == &::google::protobuf::internal::kEmptyString) {
    condition_ = new ::std::string;
  }
  condition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMtoolsgift::mutable_condition() {
  set_has_condition();
  if (condition_ == &::google::protobuf::internal::kEmptyString) {
    condition_ = new ::std::string;
  }
  return condition_;
}
inline ::std::string* GMtoolsgift::release_condition() {
  clear_has_condition();
  if (condition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = condition_;
    condition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMtoolsgift::set_allocated_condition(::std::string* condition) {
  if (condition_ != &::google::protobuf::internal::kEmptyString) {
    delete condition_;
  }
  if (condition) {
    set_has_condition();
    condition_ = condition;
  } else {
    clear_has_condition();
    condition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 cost = 4;
inline bool GMtoolsgift::has_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMtoolsgift::set_has_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMtoolsgift::clear_has_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMtoolsgift::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 GMtoolsgift::cost() const {
  return cost_;
}
inline void GMtoolsgift::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
}

// optional int32 daily = 5;
inline bool GMtoolsgift::has_daily() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMtoolsgift::set_has_daily() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMtoolsgift::clear_has_daily() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMtoolsgift::clear_daily() {
  daily_ = 0;
  clear_has_daily();
}
inline ::google::protobuf::int32 GMtoolsgift::daily() const {
  return daily_;
}
inline void GMtoolsgift::set_daily(::google::protobuf::int32 value) {
  set_has_daily();
  daily_ = value;
}

// optional int64 boxid = 6;
inline bool GMtoolsgift::has_boxid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMtoolsgift::set_has_boxid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMtoolsgift::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMtoolsgift::clear_boxid() {
  boxid_ = GOOGLE_LONGLONG(0);
  clear_has_boxid();
}
inline ::google::protobuf::int64 GMtoolsgift::boxid() const {
  return boxid_;
}
inline void GMtoolsgift::set_boxid(::google::protobuf::int64 value) {
  set_has_boxid();
  boxid_ = value;
}

// -------------------------------------------------------------------

// Sheet_GMtoolsgift

// repeated .proto_ff.GMtoolsgift GMtoolsgift_List = 1;
inline int Sheet_GMtoolsgift::gmtoolsgift_list_size() const {
  return gmtoolsgift_list_.size();
}
inline void Sheet_GMtoolsgift::clear_gmtoolsgift_list() {
  gmtoolsgift_list_.Clear();
}
inline const ::proto_ff::GMtoolsgift& Sheet_GMtoolsgift::gmtoolsgift_list(int index) const {
  return gmtoolsgift_list_.Get(index);
}
inline ::proto_ff::GMtoolsgift* Sheet_GMtoolsgift::mutable_gmtoolsgift_list(int index) {
  return gmtoolsgift_list_.Mutable(index);
}
inline ::proto_ff::GMtoolsgift* Sheet_GMtoolsgift::add_gmtoolsgift_list() {
  return gmtoolsgift_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsgift >&
Sheet_GMtoolsgift::gmtoolsgift_list() const {
  return gmtoolsgift_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsgift >*
Sheet_GMtoolsgift::mutable_gmtoolsgift_list() {
  return &gmtoolsgift_list_;
}

// -------------------------------------------------------------------

// GMtoolsunlimit

// optional int32 id = 1;
inline bool GMtoolsunlimit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMtoolsunlimit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMtoolsunlimit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMtoolsunlimit::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMtoolsunlimit::id() const {
  return id_;
}
inline void GMtoolsunlimit::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 upperLimit = 2;
inline bool GMtoolsunlimit::has_upperlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMtoolsunlimit::set_has_upperlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMtoolsunlimit::clear_has_upperlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMtoolsunlimit::clear_upperlimit() {
  upperlimit_ = 0;
  clear_has_upperlimit();
}
inline ::google::protobuf::int32 GMtoolsunlimit::upperlimit() const {
  return upperlimit_;
}
inline void GMtoolsunlimit::set_upperlimit(::google::protobuf::int32 value) {
  set_has_upperlimit();
  upperlimit_ = value;
}

// optional int32 cost = 3;
inline bool GMtoolsunlimit::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMtoolsunlimit::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMtoolsunlimit::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMtoolsunlimit::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 GMtoolsunlimit::cost() const {
  return cost_;
}
inline void GMtoolsunlimit::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
}

// optional int64 boxid = 4;
inline bool GMtoolsunlimit::has_boxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMtoolsunlimit::set_has_boxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMtoolsunlimit::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMtoolsunlimit::clear_boxid() {
  boxid_ = GOOGLE_LONGLONG(0);
  clear_has_boxid();
}
inline ::google::protobuf::int64 GMtoolsunlimit::boxid() const {
  return boxid_;
}
inline void GMtoolsunlimit::set_boxid(::google::protobuf::int64 value) {
  set_has_boxid();
  boxid_ = value;
}

// optional int32 dailyNum = 5;
inline bool GMtoolsunlimit::has_dailynum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMtoolsunlimit::set_has_dailynum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMtoolsunlimit::clear_has_dailynum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMtoolsunlimit::clear_dailynum() {
  dailynum_ = 0;
  clear_has_dailynum();
}
inline ::google::protobuf::int32 GMtoolsunlimit::dailynum() const {
  return dailynum_;
}
inline void GMtoolsunlimit::set_dailynum(::google::protobuf::int32 value) {
  set_has_dailynum();
  dailynum_ = value;
}

// -------------------------------------------------------------------

// Sheet_GMtoolsunlimit

// repeated .proto_ff.GMtoolsunlimit GMtoolsunlimit_List = 1;
inline int Sheet_GMtoolsunlimit::gmtoolsunlimit_list_size() const {
  return gmtoolsunlimit_list_.size();
}
inline void Sheet_GMtoolsunlimit::clear_gmtoolsunlimit_list() {
  gmtoolsunlimit_list_.Clear();
}
inline const ::proto_ff::GMtoolsunlimit& Sheet_GMtoolsunlimit::gmtoolsunlimit_list(int index) const {
  return gmtoolsunlimit_list_.Get(index);
}
inline ::proto_ff::GMtoolsunlimit* Sheet_GMtoolsunlimit::mutable_gmtoolsunlimit_list(int index) {
  return gmtoolsunlimit_list_.Mutable(index);
}
inline ::proto_ff::GMtoolsunlimit* Sheet_GMtoolsunlimit::add_gmtoolsunlimit_list() {
  return gmtoolsunlimit_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsunlimit >&
Sheet_GMtoolsunlimit::gmtoolsunlimit_list() const {
  return gmtoolsunlimit_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsunlimit >*
Sheet_GMtoolsunlimit::mutable_gmtoolsunlimit_list() {
  return &gmtoolsunlimit_list_;
}

// -------------------------------------------------------------------

// GMtoolsupperLimit

// optional int32 id = 1;
inline bool GMtoolsupperLimit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMtoolsupperLimit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMtoolsupperLimit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMtoolsupperLimit::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMtoolsupperLimit::id() const {
  return id_;
}
inline void GMtoolsupperLimit::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool GMtoolsupperLimit::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMtoolsupperLimit::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMtoolsupperLimit::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMtoolsupperLimit::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GMtoolsupperLimit::type() const {
  return type_;
}
inline void GMtoolsupperLimit::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 param = 3;
inline bool GMtoolsupperLimit::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMtoolsupperLimit::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMtoolsupperLimit::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMtoolsupperLimit::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 GMtoolsupperLimit::param() const {
  return param_;
}
inline void GMtoolsupperLimit::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// Sheet_GMtoolsupperLimit

// repeated .proto_ff.GMtoolsupperLimit GMtoolsupperLimit_List = 1;
inline int Sheet_GMtoolsupperLimit::gmtoolsupperlimit_list_size() const {
  return gmtoolsupperlimit_list_.size();
}
inline void Sheet_GMtoolsupperLimit::clear_gmtoolsupperlimit_list() {
  gmtoolsupperlimit_list_.Clear();
}
inline const ::proto_ff::GMtoolsupperLimit& Sheet_GMtoolsupperLimit::gmtoolsupperlimit_list(int index) const {
  return gmtoolsupperlimit_list_.Get(index);
}
inline ::proto_ff::GMtoolsupperLimit* Sheet_GMtoolsupperLimit::mutable_gmtoolsupperlimit_list(int index) {
  return gmtoolsupperlimit_list_.Mutable(index);
}
inline ::proto_ff::GMtoolsupperLimit* Sheet_GMtoolsupperLimit::add_gmtoolsupperlimit_list() {
  return gmtoolsupperlimit_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsupperLimit >&
Sheet_GMtoolsupperLimit::gmtoolsupperlimit_list() const {
  return gmtoolsupperlimit_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMtoolsupperLimit >*
Sheet_GMtoolsupperLimit::mutable_gmtoolsupperlimit_list() {
  return &gmtoolsupperlimit_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GMtools_2eproto__INCLUDED
