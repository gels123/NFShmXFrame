// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Equipimprove.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Equipimprove.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_EquipimproveUpqualityMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveUpqualityMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveUpqualityAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveUpqualityAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveUpquality_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveUpquality_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipimproveUpquality_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipimproveUpquality_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveAwakenAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveAwakenAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveAwakenBreakDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveAwakenBreakDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveAwaken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveAwaken_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipimproveAwaken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipimproveAwaken_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSoaringAttrDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSoaringAttrDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSoaring_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSoaring_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipimproveSoaring_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipimproveSoaring_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSealSealDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSealSealDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSeal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSeal_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipimproveSeal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipimproveSeal_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSealslot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSealslot_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipimproveSealslot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipimproveSealslot_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSealsuitSuitDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSealsuitSuitDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipimproveSealsuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipimproveSealsuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipimproveSealsuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipimproveSealsuit_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fEquipimprove_2eproto() {
  protobuf_AddDesc_E_5fEquipimprove_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Equipimprove.proto");
  GOOGLE_CHECK(file != NULL);
  E_EquipimproveUpqualityMaterialDesc_descriptor_ = file->message_type(0);
  static const int E_EquipimproveUpqualityMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityMaterialDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityMaterialDesc, m_id_),
  };
  E_EquipimproveUpqualityMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveUpqualityMaterialDesc_descriptor_,
      E_EquipimproveUpqualityMaterialDesc::default_instance_,
      E_EquipimproveUpqualityMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveUpqualityMaterialDesc));
  E_EquipimproveUpqualityAttributeDesc_descriptor_ = file->message_type(1);
  static const int E_EquipimproveUpqualityAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityAttributeDesc, m_type_),
  };
  E_EquipimproveUpqualityAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveUpqualityAttributeDesc_descriptor_,
      E_EquipimproveUpqualityAttributeDesc::default_instance_,
      E_EquipimproveUpqualityAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpqualityAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveUpqualityAttributeDesc));
  E_EquipimproveUpquality_descriptor_ = file->message_type(2);
  static const int E_EquipimproveUpquality_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_wearqualitylimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_luckid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_lucksuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_lucknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_qualityatt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_qualityvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, m_attribute_),
  };
  E_EquipimproveUpquality_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveUpquality_descriptor_,
      E_EquipimproveUpquality::default_instance_,
      E_EquipimproveUpquality_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveUpquality, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveUpquality));
  Sheet_EquipimproveUpquality_descriptor_ = file->message_type(3);
  static const int Sheet_EquipimproveUpquality_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveUpquality, e_equipimproveupquality_list_),
  };
  Sheet_EquipimproveUpquality_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipimproveUpquality_descriptor_,
      Sheet_EquipimproveUpquality::default_instance_,
      Sheet_EquipimproveUpquality_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveUpquality, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveUpquality, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipimproveUpquality));
  E_EquipimproveAwakenAttributeDesc_descriptor_ = file->message_type(4);
  static const int E_EquipimproveAwakenAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenAttributeDesc, m_type_),
  };
  E_EquipimproveAwakenAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveAwakenAttributeDesc_descriptor_,
      E_EquipimproveAwakenAttributeDesc::default_instance_,
      E_EquipimproveAwakenAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveAwakenAttributeDesc));
  E_EquipimproveAwakenBreakDesc_descriptor_ = file->message_type(5);
  static const int E_EquipimproveAwakenBreakDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenBreakDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenBreakDesc, m_type_),
  };
  E_EquipimproveAwakenBreakDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveAwakenBreakDesc_descriptor_,
      E_EquipimproveAwakenBreakDesc::default_instance_,
      E_EquipimproveAwakenBreakDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenBreakDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwakenBreakDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveAwakenBreakDesc));
  E_EquipimproveAwaken_descriptor_ = file->message_type(6);
  static const int E_EquipimproveAwaken_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_wearqualitylimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_qualitylimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_wearstarlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_awakenlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_material_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_material_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_break_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_break_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, m_break_),
  };
  E_EquipimproveAwaken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveAwaken_descriptor_,
      E_EquipimproveAwaken::default_instance_,
      E_EquipimproveAwaken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveAwaken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveAwaken));
  Sheet_EquipimproveAwaken_descriptor_ = file->message_type(7);
  static const int Sheet_EquipimproveAwaken_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveAwaken, e_equipimproveawaken_list_),
  };
  Sheet_EquipimproveAwaken_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipimproveAwaken_descriptor_,
      Sheet_EquipimproveAwaken::default_instance_,
      Sheet_EquipimproveAwaken_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveAwaken, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveAwaken, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipimproveAwaken));
  E_EquipimproveSoaringAttrDesc_descriptor_ = file->message_type(8);
  static const int E_EquipimproveSoaringAttrDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaringAttrDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaringAttrDesc, m_type_),
  };
  E_EquipimproveSoaringAttrDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSoaringAttrDesc_descriptor_,
      E_EquipimproveSoaringAttrDesc::default_instance_,
      E_EquipimproveSoaringAttrDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaringAttrDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaringAttrDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSoaringAttrDesc));
  E_EquipimproveSoaring_descriptor_ = file->message_type(9);
  static const int E_EquipimproveSoaring_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_lvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_awaken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, m_attr_),
  };
  E_EquipimproveSoaring_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSoaring_descriptor_,
      E_EquipimproveSoaring::default_instance_,
      E_EquipimproveSoaring_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSoaring, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSoaring));
  Sheet_EquipimproveSoaring_descriptor_ = file->message_type(10);
  static const int Sheet_EquipimproveSoaring_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSoaring, e_equipimprovesoaring_list_),
  };
  Sheet_EquipimproveSoaring_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipimproveSoaring_descriptor_,
      Sheet_EquipimproveSoaring::default_instance_,
      Sheet_EquipimproveSoaring_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSoaring, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSoaring, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipimproveSoaring));
  E_EquipimproveSealSealDesc_descriptor_ = file->message_type(11);
  static const int E_EquipimproveSealSealDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealSealDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealSealDesc, m_type_),
  };
  E_EquipimproveSealSealDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSealSealDesc_descriptor_,
      E_EquipimproveSealSealDesc::default_instance_,
      E_EquipimproveSealSealDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealSealDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealSealDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSealSealDesc));
  E_EquipimproveSeal_descriptor_ = file->message_type(12);
  static const int E_EquipimproveSeal_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_sealposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_seallv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_preid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_nextid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_numb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_nextvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, m_seal_),
  };
  E_EquipimproveSeal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSeal_descriptor_,
      E_EquipimproveSeal::default_instance_,
      E_EquipimproveSeal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSeal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSeal));
  Sheet_EquipimproveSeal_descriptor_ = file->message_type(13);
  static const int Sheet_EquipimproveSeal_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSeal, e_equipimproveseal_list_),
  };
  Sheet_EquipimproveSeal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipimproveSeal_descriptor_,
      Sheet_EquipimproveSeal::default_instance_,
      Sheet_EquipimproveSeal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSeal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSeal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipimproveSeal));
  E_EquipimproveSealslot_descriptor_ = file->message_type(14);
  static const int E_EquipimproveSealslot_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealslot, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealslot, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealslot, m_character_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealslot, m_star_),
  };
  E_EquipimproveSealslot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSealslot_descriptor_,
      E_EquipimproveSealslot::default_instance_,
      E_EquipimproveSealslot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealslot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealslot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSealslot));
  Sheet_EquipimproveSealslot_descriptor_ = file->message_type(15);
  static const int Sheet_EquipimproveSealslot_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSealslot, e_equipimprovesealslot_list_),
  };
  Sheet_EquipimproveSealslot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipimproveSealslot_descriptor_,
      Sheet_EquipimproveSealslot::default_instance_,
      Sheet_EquipimproveSealslot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSealslot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSealslot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipimproveSealslot));
  E_EquipimproveSealsuitSuitDesc_descriptor_ = file->message_type(16);
  static const int E_EquipimproveSealsuitSuitDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuitSuitDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuitSuitDesc, m_type_),
  };
  E_EquipimproveSealsuitSuitDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSealsuitSuitDesc_descriptor_,
      E_EquipimproveSealsuitSuitDesc::default_instance_,
      E_EquipimproveSealsuitSuitDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuitSuitDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuitSuitDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSealsuitSuitDesc));
  E_EquipimproveSealsuit_descriptor_ = file->message_type(17);
  static const int E_EquipimproveSealsuit_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, m_wearnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, m_suit_),
  };
  E_EquipimproveSealsuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipimproveSealsuit_descriptor_,
      E_EquipimproveSealsuit::default_instance_,
      E_EquipimproveSealsuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipimproveSealsuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipimproveSealsuit));
  Sheet_EquipimproveSealsuit_descriptor_ = file->message_type(18);
  static const int Sheet_EquipimproveSealsuit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSealsuit, e_equipimprovesealsuit_list_),
  };
  Sheet_EquipimproveSealsuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipimproveSealsuit_descriptor_,
      Sheet_EquipimproveSealsuit::default_instance_,
      Sheet_EquipimproveSealsuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSealsuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipimproveSealsuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipimproveSealsuit));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fEquipimprove_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveUpqualityMaterialDesc_descriptor_, &E_EquipimproveUpqualityMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveUpqualityAttributeDesc_descriptor_, &E_EquipimproveUpqualityAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveUpquality_descriptor_, &E_EquipimproveUpquality::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipimproveUpquality_descriptor_, &Sheet_EquipimproveUpquality::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveAwakenAttributeDesc_descriptor_, &E_EquipimproveAwakenAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveAwakenBreakDesc_descriptor_, &E_EquipimproveAwakenBreakDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveAwaken_descriptor_, &E_EquipimproveAwaken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipimproveAwaken_descriptor_, &Sheet_EquipimproveAwaken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSoaringAttrDesc_descriptor_, &E_EquipimproveSoaringAttrDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSoaring_descriptor_, &E_EquipimproveSoaring::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipimproveSoaring_descriptor_, &Sheet_EquipimproveSoaring::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSealSealDesc_descriptor_, &E_EquipimproveSealSealDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSeal_descriptor_, &E_EquipimproveSeal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipimproveSeal_descriptor_, &Sheet_EquipimproveSeal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSealslot_descriptor_, &E_EquipimproveSealslot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipimproveSealslot_descriptor_, &Sheet_EquipimproveSealslot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSealsuitSuitDesc_descriptor_, &E_EquipimproveSealsuitSuitDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipimproveSealsuit_descriptor_, &E_EquipimproveSealsuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipimproveSealsuit_descriptor_, &Sheet_EquipimproveSealsuit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fEquipimprove_2eproto() {
  delete E_EquipimproveUpqualityMaterialDesc::default_instance_;
  delete E_EquipimproveUpqualityMaterialDesc_reflection_;
  delete E_EquipimproveUpqualityAttributeDesc::default_instance_;
  delete E_EquipimproveUpqualityAttributeDesc_reflection_;
  delete E_EquipimproveUpquality::default_instance_;
  delete E_EquipimproveUpquality_reflection_;
  delete Sheet_EquipimproveUpquality::default_instance_;
  delete Sheet_EquipimproveUpquality_reflection_;
  delete E_EquipimproveAwakenAttributeDesc::default_instance_;
  delete E_EquipimproveAwakenAttributeDesc_reflection_;
  delete E_EquipimproveAwakenBreakDesc::default_instance_;
  delete E_EquipimproveAwakenBreakDesc_reflection_;
  delete E_EquipimproveAwaken::default_instance_;
  delete E_EquipimproveAwaken_reflection_;
  delete Sheet_EquipimproveAwaken::default_instance_;
  delete Sheet_EquipimproveAwaken_reflection_;
  delete E_EquipimproveSoaringAttrDesc::default_instance_;
  delete E_EquipimproveSoaringAttrDesc_reflection_;
  delete E_EquipimproveSoaring::default_instance_;
  delete E_EquipimproveSoaring_reflection_;
  delete Sheet_EquipimproveSoaring::default_instance_;
  delete Sheet_EquipimproveSoaring_reflection_;
  delete E_EquipimproveSealSealDesc::default_instance_;
  delete E_EquipimproveSealSealDesc_reflection_;
  delete E_EquipimproveSeal::default_instance_;
  delete E_EquipimproveSeal_reflection_;
  delete Sheet_EquipimproveSeal::default_instance_;
  delete Sheet_EquipimproveSeal_reflection_;
  delete E_EquipimproveSealslot::default_instance_;
  delete E_EquipimproveSealslot_reflection_;
  delete Sheet_EquipimproveSealslot::default_instance_;
  delete Sheet_EquipimproveSealslot_reflection_;
  delete E_EquipimproveSealsuitSuitDesc::default_instance_;
  delete E_EquipimproveSealsuitSuitDesc_reflection_;
  delete E_EquipimproveSealsuit::default_instance_;
  delete E_EquipimproveSealsuit_reflection_;
  delete Sheet_EquipimproveSealsuit::default_instance_;
  delete Sheet_EquipimproveSealsuit_reflection_;
}

void protobuf_AddDesc_E_5fEquipimprove_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024E_Equipimprove.proto\022\010proto_ff\032\025yd_fie"
    "ldoptions.proto\"V\n#E_EquipimproveUpquali"
    "tyMaterialDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207"
    "\217\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"V\n$E_Equipimprov"
    "eUpqualityAttributeDesc\022\030\n\007m_value\030\001 \001(\005"
    "B\007\302\377\024\003\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\241\005\n\027E_Eq"
    "uipimproveUpquality\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002i"
    "d\022\035\n\tm_quality\030\002 \001(\005B\n\302\377\024\006\345\223\201\351\230\266\022(\n\nm_po"
    "sition\030\003 \001(\tB\024\302\377\024\014\350\243\205\345\244\207\351\203\250\344\275\215\220\301\024@\0222\n\022m_"
    "wearqualitylimit\030\004 \001(\005B\026\302\377\024\022\350\243\205\345\244\207\345\223\201\351\230\266"
    "\344\270\213\351\231\220\022 \n\006m_star\030\005 \001(\005B\020\302\377\024\014\346\230\237\347\272\247\347\255\211\347\272\247"
    "\022#\n\tm_starnum\030\006 \001(\005B\020\302\377\024\014\346\230\237\347\272\247\346\230\237\346\225\260\022,\n"
    "\tm_success\030\007 \001(\005B\031\302\377\024\025\345\215\207\346\230\237\345\237\272\347\241\200\346\210\220\345\212\237"
    "\347\216\207\022$\n\010m_luckid\030\010 \001(\005B\022\302\377\024\016\345\271\270\350\277\220\351\201\223\345\205\267i"
    "d\022*\n\rm_lucksuccess\030\t \001(\005B\023\302\377\024\017\345\212\240\346\210\220\346\210\220\345"
    "\212\237\347\216\207\022)\n\tm_lucknum\030\n \001(\005B\026\302\377\024\022\345\271\270\350\277\220\351\201\223\345"
    "\205\267\346\225\260\351\207\217\022&\n\014m_qualityatt\030\013 \001(\005B\020\302\377\024\014\345\223\201\351"
    "\230\266\345\261\236\346\200\247\022+\n\016m_qualityvalue\030\014 \001(\005B\023\302\377\024\017\345\223"
    "\201\351\230\266\345\261\236\346\200\247\345\200\274\022W\n\nm_material\030\r \003(\0132-.prot"
    "o_ff.E_EquipimproveUpqualityMaterialDesc"
    "B\024\302\377\024\014\345\215\207\346\230\237\346\235\220\346\226\231\210\301\024\002\022S\n\013m_attribute\030\016 "
    "\003(\0132..proto_ff.E_EquipimproveUpqualityAt"
    "tributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\002\"m\n\033Sheet_Equ"
    "ipimproveUpquality\022N\n\034E_EquipimproveUpqu"
    "ality_List\030\001 \003(\0132!.proto_ff.E_Equipimpro"
    "veUpqualityB\005\210\301\024\200\001\"S\n!E_EquipimproveAwak"
    "enAttributeDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200"
    "\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"O\n\035E_Equipimprov"
    "eAwakenBreakDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345"
    "\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\210\005\n\024E_Equipimpr"
    "oveAwaken\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\035\n\tm_qua"
    "lity\030\002 \001(\005B\n\302\377\024\006\345\223\201\351\230\266\022(\n\nm_position\030\003 \001"
    "(\tB\024\302\377\024\014\350\243\205\345\244\207\351\203\250\344\275\215\220\301\024@\0222\n\022m_wearqualit"
    "ylimit\030\004 \001(\005B\026\302\377\024\022\350\243\205\345\244\207\345\223\201\351\230\266\344\270\213\351\231\220\022.\n\016"
    "m_qualitylimit\030\005 \001(\005B\026\302\377\024\022\350\243\205\345\244\207\345\223\201\350\264\250\344\270"
    "\213\351\231\220\022/\n\017m_wearstarlimit\030\006 \001(\005B\026\302\377\024\022\350\243\205\345\244"
    "\207\346\230\237\347\272\247\344\270\213\351\231\220\022$\n\nm_awakenlv\030\007 \001(\005B\020\302\377\024\014\350"
    "\247\211\351\206\222\347\255\211\347\272\247\022)\n\rm_material_id\030\010 \001(\005B\022\302\377\024\016"
    "\350\247\211\351\206\222\346\235\220\346\226\231ID\022.\n\016m_material_num\030\t \001(\005B\026"
    "\302\377\024\022\350\247\211\351\206\222\346\235\220\346\226\231\346\225\260\351\207\217\022&\n\nm_break_id\030\n \001"
    "(\005B\022\302\377\024\016\347\252\201\347\240\264\346\235\220\346\226\231ID\022+\n\013m_break_num\030\013 "
    "\001(\005B\026\302\377\024\022\347\252\201\347\240\264\346\235\220\346\226\231\346\225\260\351\207\217\022V\n\013m_attribu"
    "te\030\014 \003(\0132+.proto_ff.E_EquipimproveAwaken"
    "AttributeDescB\024\302\377\024\014\350\247\211\351\206\222\345\261\236\346\200\247\210\301\024\003\022N\n\007m"
    "_break\030\r \003(\0132\'.proto_ff.E_EquipimproveAw"
    "akenBreakDescB\024\302\377\024\014\347\252\201\347\240\264\345\261\236\346\200\247\210\301\024\004\"d\n\030S"
    "heet_EquipimproveAwaken\022H\n\031E_Equipimprov"
    "eAwaken_List\030\001 \003(\0132\036.proto_ff.E_Equipimp"
    "roveAwakenB\005\210\301\024\200\004\"O\n\035E_EquipimproveSoari"
    "ngAttrDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\006"
    "m_type\030\002 \001(\005B\004\302\377\024\000\"\275\002\n\025E_EquipimproveSoa"
    "ring\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022 \n\006m_lvid\030\002 \001"
    "(\005B\020\302\377\024\014\351\243\236\345\215\207\347\255\211\347\272\247\022(\n\010m_awaken\030\003 \001(\005B\026"
    "\302\377\024\022\350\247\211\351\206\222\345\223\201\351\230\266\344\270\213\351\231\220\022\"\n\010m_itemid\030\004 \001(\005"
    "B\020\302\377\024\014\351\243\236\345\215\207\346\235\220\346\226\231\022)\n\tm_itemnum\030\005 \001(\005B\026\302"
    "\377\024\022\351\243\236\345\215\207\346\235\220\346\226\231\346\225\260\351\207\217\022$\n\nm_position\030\006 \001("
    "\tB\020\302\377\024\010\351\203\250\344\275\215id\220\301\024@\022M\n\006m_attr\030\007 \003(\0132\'.pr"
    "oto_ff.E_EquipimproveSoaringAttrDescB\024\302\377"
    "\024\014\351\243\236\345\215\207\345\261\236\346\200\247\210\301\024\003\"f\n\031Sheet_Equipimprove"
    "Soaring\022I\n\032E_EquipimproveSoaring_List\030\001 "
    "\003(\0132\037.proto_ff.E_EquipimproveSoaringB\004\210\301"
    "\024 \"L\n\032E_EquipimproveSealSealDesc\022\030\n\007m_va"
    "lue\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000"
    "\"\376\002\n\022E_EquipimproveSeal\022 \n\004m_id\030\001 \001(\005B\022\302"
    "\377\024\016\345\215\260\347\254\246\347\211\251\345\223\201id\0222\n\016m_sealposition\030\002 \001("
    "\tB\032\302\377\024\022\345\215\260\347\254\246\351\225\266\345\265\214\351\203\250\344\275\215\220\301\024@\022\"\n\010m_seall"
    "v\030\003 \001(\005B\020\302\377\024\014\345\215\260\347\254\246\345\223\201\351\230\266\022#\n\007m_preid\030\004 \001"
    "(\005B\022\302\377\024\016\344\270\212\351\230\266\345\215\260\347\254\246ID\022$\n\010m_nextid\030\005 \001(\005"
    "B\022\302\377\024\016\344\270\213\351\230\266\345\215\260\347\254\246ID\0220\n\006m_numb\030\006 \001(\tB \302\377"
    "\024\030\345\257\271\345\272\224\344\270\200\351\230\266\345\215\260\347\254\246\346\225\260\351\207\217\220\301\024@\022%\n\013m_next"
    "value\030\007 \001(\005B\020\302\377\024\014\344\270\213\347\272\247\345\267\256\345\200\274\022J\n\006m_seal\030"
    "\010 \003(\0132$.proto_ff.E_EquipimproveSealSealD"
    "escB\024\302\377\024\014\345\215\260\347\254\246\345\261\236\346\200\247\210\301\024\003\"]\n\026Sheet_Equip"
    "improveSeal\022C\n\027E_EquipimproveSeal_List\030\001"
    " \003(\0132\034.proto_ff.E_EquipimproveSealB\004\210\301\024\020"
    "\"\264\001\n\026E_EquipimproveSealslot\022\032\n\004m_id\030\001 \001("
    "\005B\014\302\377\024\010\346\247\275\344\275\215id\022)\n\tm_quality\030\002 \001(\005B\026\302\377\024\022"
    "\346\211\200\351\234\200\350\243\205\345\244\207\345\223\201\351\230\266\022+\n\013m_character\030\003 \001(\005B"
    "\026\302\377\024\022\346\211\200\351\234\200\350\243\205\345\244\207\345\223\201\350\264\250\022&\n\006m_star\030\004 \001(\005B"
    "\026\302\377\024\022\346\211\200\351\234\200\350\243\205\345\244\207\346\230\237\346\225\260\"i\n\032Sheet_Equipim"
    "proveSealslot\022K\n\033E_EquipimproveSealslot_"
    "List\030\001 \003(\0132 .proto_ff.E_EquipimproveSeal"
    "slotB\004\210\301\024@\"P\n\036E_EquipimproveSealsuitSuit"
    "Desc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\006m_type"
    "\030\002 \001(\005B\004\302\377\024\000\"\362\001\n\026E_EquipimproveSealsuit\022"
    "\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022#\n\tm_wearnum\030\002 \001(\005"
    "B\020\302\377\024\014\350\243\205\351\205\215\346\225\260\351\207\217\022#\n\tm_quality\030\003 \001(\005B\020\302"
    "\377\024\014\350\243\205\351\205\215\345\223\201\351\230\266\022(\n\nm_position\030\004 \001(\tB\024\302\377\024"
    "\014\350\243\205\345\244\207\351\203\250\344\275\215\220\301\024@\022N\n\006m_suit\030\005 \003(\0132(.prot"
    "o_ff.E_EquipimproveSealsuitSuitDescB\024\302\377\024"
    "\014\345\215\260\347\254\246\345\261\236\346\200\247\210\301\024\005\"j\n\032Sheet_EquipimproveS"
    "ealsuit\022L\n\033E_EquipimproveSealsuit_List\030\001"
    " \003(\0132 .proto_ff.E_EquipimproveSealsuitB\005"
    "\210\301\024\200\010", 3725);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Equipimprove.proto", &protobuf_RegisterTypes);
  E_EquipimproveUpqualityMaterialDesc::default_instance_ = new E_EquipimproveUpqualityMaterialDesc();
  E_EquipimproveUpqualityAttributeDesc::default_instance_ = new E_EquipimproveUpqualityAttributeDesc();
  E_EquipimproveUpquality::default_instance_ = new E_EquipimproveUpquality();
  Sheet_EquipimproveUpquality::default_instance_ = new Sheet_EquipimproveUpquality();
  E_EquipimproveAwakenAttributeDesc::default_instance_ = new E_EquipimproveAwakenAttributeDesc();
  E_EquipimproveAwakenBreakDesc::default_instance_ = new E_EquipimproveAwakenBreakDesc();
  E_EquipimproveAwaken::default_instance_ = new E_EquipimproveAwaken();
  Sheet_EquipimproveAwaken::default_instance_ = new Sheet_EquipimproveAwaken();
  E_EquipimproveSoaringAttrDesc::default_instance_ = new E_EquipimproveSoaringAttrDesc();
  E_EquipimproveSoaring::default_instance_ = new E_EquipimproveSoaring();
  Sheet_EquipimproveSoaring::default_instance_ = new Sheet_EquipimproveSoaring();
  E_EquipimproveSealSealDesc::default_instance_ = new E_EquipimproveSealSealDesc();
  E_EquipimproveSeal::default_instance_ = new E_EquipimproveSeal();
  Sheet_EquipimproveSeal::default_instance_ = new Sheet_EquipimproveSeal();
  E_EquipimproveSealslot::default_instance_ = new E_EquipimproveSealslot();
  Sheet_EquipimproveSealslot::default_instance_ = new Sheet_EquipimproveSealslot();
  E_EquipimproveSealsuitSuitDesc::default_instance_ = new E_EquipimproveSealsuitSuitDesc();
  E_EquipimproveSealsuit::default_instance_ = new E_EquipimproveSealsuit();
  Sheet_EquipimproveSealsuit::default_instance_ = new Sheet_EquipimproveSealsuit();
  E_EquipimproveUpqualityMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveUpqualityAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveUpquality::default_instance_->InitAsDefaultInstance();
  Sheet_EquipimproveUpquality::default_instance_->InitAsDefaultInstance();
  E_EquipimproveAwakenAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveAwakenBreakDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveAwaken::default_instance_->InitAsDefaultInstance();
  Sheet_EquipimproveAwaken::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSoaringAttrDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSoaring::default_instance_->InitAsDefaultInstance();
  Sheet_EquipimproveSoaring::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSealSealDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSeal::default_instance_->InitAsDefaultInstance();
  Sheet_EquipimproveSeal::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSealslot::default_instance_->InitAsDefaultInstance();
  Sheet_EquipimproveSealslot::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSealsuitSuitDesc::default_instance_->InitAsDefaultInstance();
  E_EquipimproveSealsuit::default_instance_->InitAsDefaultInstance();
  Sheet_EquipimproveSealsuit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fEquipimprove_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fEquipimprove_2eproto {
  StaticDescriptorInitializer_E_5fEquipimprove_2eproto() {
    protobuf_AddDesc_E_5fEquipimprove_2eproto();
  }
} static_descriptor_initializer_E_5fEquipimprove_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveUpqualityMaterialDesc::kMNumFieldNumber;
const int E_EquipimproveUpqualityMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveUpqualityMaterialDesc::E_EquipimproveUpqualityMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveUpqualityMaterialDesc::InitAsDefaultInstance() {
}

E_EquipimproveUpqualityMaterialDesc::E_EquipimproveUpqualityMaterialDesc(const E_EquipimproveUpqualityMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveUpqualityMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveUpqualityMaterialDesc::~E_EquipimproveUpqualityMaterialDesc() {
  SharedDtor();
}

void E_EquipimproveUpqualityMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveUpqualityMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveUpqualityMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveUpqualityMaterialDesc_descriptor_;
}

const E_EquipimproveUpqualityMaterialDesc& E_EquipimproveUpqualityMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveUpqualityMaterialDesc* E_EquipimproveUpqualityMaterialDesc::default_instance_ = NULL;

E_EquipimproveUpqualityMaterialDesc* E_EquipimproveUpqualityMaterialDesc::New() const {
  return new E_EquipimproveUpqualityMaterialDesc;
}

void E_EquipimproveUpqualityMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveUpqualityMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveUpqualityMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveUpqualityMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveUpqualityMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveUpqualityMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveUpqualityMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveUpqualityMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveUpqualityMaterialDesc::MergeFrom(const E_EquipimproveUpqualityMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveUpqualityMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveUpqualityMaterialDesc::CopyFrom(const E_EquipimproveUpqualityMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveUpqualityMaterialDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveUpqualityMaterialDesc::Swap(E_EquipimproveUpqualityMaterialDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveUpqualityMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveUpqualityMaterialDesc_descriptor_;
  metadata.reflection = E_EquipimproveUpqualityMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveUpqualityAttributeDesc::kMValueFieldNumber;
const int E_EquipimproveUpqualityAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveUpqualityAttributeDesc::E_EquipimproveUpqualityAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveUpqualityAttributeDesc::InitAsDefaultInstance() {
}

E_EquipimproveUpqualityAttributeDesc::E_EquipimproveUpqualityAttributeDesc(const E_EquipimproveUpqualityAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveUpqualityAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveUpqualityAttributeDesc::~E_EquipimproveUpqualityAttributeDesc() {
  SharedDtor();
}

void E_EquipimproveUpqualityAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveUpqualityAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveUpqualityAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveUpqualityAttributeDesc_descriptor_;
}

const E_EquipimproveUpqualityAttributeDesc& E_EquipimproveUpqualityAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveUpqualityAttributeDesc* E_EquipimproveUpqualityAttributeDesc::default_instance_ = NULL;

E_EquipimproveUpqualityAttributeDesc* E_EquipimproveUpqualityAttributeDesc::New() const {
  return new E_EquipimproveUpqualityAttributeDesc;
}

void E_EquipimproveUpqualityAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveUpqualityAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveUpqualityAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveUpqualityAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveUpqualityAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveUpqualityAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveUpqualityAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveUpqualityAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveUpqualityAttributeDesc::MergeFrom(const E_EquipimproveUpqualityAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveUpqualityAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveUpqualityAttributeDesc::CopyFrom(const E_EquipimproveUpqualityAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveUpqualityAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveUpqualityAttributeDesc::Swap(E_EquipimproveUpqualityAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveUpqualityAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveUpqualityAttributeDesc_descriptor_;
  metadata.reflection = E_EquipimproveUpqualityAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveUpquality::kMIdFieldNumber;
const int E_EquipimproveUpquality::kMQualityFieldNumber;
const int E_EquipimproveUpquality::kMPositionFieldNumber;
const int E_EquipimproveUpquality::kMWearqualitylimitFieldNumber;
const int E_EquipimproveUpquality::kMStarFieldNumber;
const int E_EquipimproveUpquality::kMStarnumFieldNumber;
const int E_EquipimproveUpquality::kMSuccessFieldNumber;
const int E_EquipimproveUpquality::kMLuckidFieldNumber;
const int E_EquipimproveUpquality::kMLucksuccessFieldNumber;
const int E_EquipimproveUpquality::kMLucknumFieldNumber;
const int E_EquipimproveUpquality::kMQualityattFieldNumber;
const int E_EquipimproveUpquality::kMQualityvalueFieldNumber;
const int E_EquipimproveUpquality::kMMaterialFieldNumber;
const int E_EquipimproveUpquality::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveUpquality::E_EquipimproveUpquality()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveUpquality::InitAsDefaultInstance() {
}

E_EquipimproveUpquality::E_EquipimproveUpquality(const E_EquipimproveUpquality& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveUpquality::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_quality_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_wearqualitylimit_ = 0;
  m_star_ = 0;
  m_starnum_ = 0;
  m_success_ = 0;
  m_luckid_ = 0;
  m_lucksuccess_ = 0;
  m_lucknum_ = 0;
  m_qualityatt_ = 0;
  m_qualityvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveUpquality::~E_EquipimproveUpquality() {
  SharedDtor();
}

void E_EquipimproveUpquality::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipimproveUpquality::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveUpquality::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveUpquality_descriptor_;
}

const E_EquipimproveUpquality& E_EquipimproveUpquality::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveUpquality* E_EquipimproveUpquality::default_instance_ = NULL;

E_EquipimproveUpquality* E_EquipimproveUpquality::New() const {
  return new E_EquipimproveUpquality;
}

void E_EquipimproveUpquality::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_quality_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_wearqualitylimit_ = 0;
    m_star_ = 0;
    m_starnum_ = 0;
    m_success_ = 0;
    m_luckid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_lucksuccess_ = 0;
    m_lucknum_ = 0;
    m_qualityatt_ = 0;
    m_qualityvalue_ = 0;
  }
  m_material_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveUpquality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_wearqualitylimit;
        break;
      }

      // optional int32 m_wearqualitylimit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearqualitylimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearqualitylimit_)));
          set_has_m_wearqualitylimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_starnum;
        break;
      }

      // optional int32 m_starnum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starnum_)));
          set_has_m_starnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_success;
        break;
      }

      // optional int32 m_success = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_)));
          set_has_m_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_luckid;
        break;
      }

      // optional int32 m_luckid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_luckid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_luckid_)));
          set_has_m_luckid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_lucksuccess;
        break;
      }

      // optional int32 m_lucksuccess = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lucksuccess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lucksuccess_)));
          set_has_m_lucksuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_lucknum;
        break;
      }

      // optional int32 m_lucknum = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lucknum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lucknum_)));
          set_has_m_lucknum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_qualityatt;
        break;
      }

      // optional int32 m_qualityatt = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_qualityatt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_qualityatt_)));
          set_has_m_qualityatt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_qualityvalue;
        break;
      }

      // optional int32 m_qualityvalue = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_qualityvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_qualityvalue_)));
          set_has_m_qualityvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_EquipimproveUpqualityMaterialDesc m_material = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_material;
        if (input->ExpectTag(114)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipimproveUpqualityAttributeDesc m_attribute = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveUpquality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_wearqualitylimit = 4;
  if (has_m_wearqualitylimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_wearqualitylimit(), output);
  }

  // optional int32 m_star = 5;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_star(), output);
  }

  // optional int32 m_starnum = 6;
  if (has_m_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_starnum(), output);
  }

  // optional int32 m_success = 7;
  if (has_m_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_success(), output);
  }

  // optional int32 m_luckid = 8;
  if (has_m_luckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_luckid(), output);
  }

  // optional int32 m_lucksuccess = 9;
  if (has_m_lucksuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_lucksuccess(), output);
  }

  // optional int32 m_lucknum = 10;
  if (has_m_lucknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_lucknum(), output);
  }

  // optional int32 m_qualityatt = 11;
  if (has_m_qualityatt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_qualityatt(), output);
  }

  // optional int32 m_qualityvalue = 12;
  if (has_m_qualityvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_qualityvalue(), output);
  }

  // repeated .proto_ff.E_EquipimproveUpqualityMaterialDesc m_material = 13;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->m_material(i), output);
  }

  // repeated .proto_ff.E_EquipimproveUpqualityAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveUpquality::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_wearqualitylimit = 4;
  if (has_m_wearqualitylimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_wearqualitylimit(), target);
  }

  // optional int32 m_star = 5;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_star(), target);
  }

  // optional int32 m_starnum = 6;
  if (has_m_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_starnum(), target);
  }

  // optional int32 m_success = 7;
  if (has_m_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_success(), target);
  }

  // optional int32 m_luckid = 8;
  if (has_m_luckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_luckid(), target);
  }

  // optional int32 m_lucksuccess = 9;
  if (has_m_lucksuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_lucksuccess(), target);
  }

  // optional int32 m_lucknum = 10;
  if (has_m_lucknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_lucknum(), target);
  }

  // optional int32 m_qualityatt = 11;
  if (has_m_qualityatt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_qualityatt(), target);
  }

  // optional int32 m_qualityvalue = 12;
  if (has_m_qualityvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_qualityvalue(), target);
  }

  // repeated .proto_ff.E_EquipimproveUpqualityMaterialDesc m_material = 13;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->m_material(i), target);
  }

  // repeated .proto_ff.E_EquipimproveUpqualityAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveUpquality::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_wearqualitylimit = 4;
    if (has_m_wearqualitylimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearqualitylimit());
    }

    // optional int32 m_star = 5;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_starnum = 6;
    if (has_m_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starnum());
    }

    // optional int32 m_success = 7;
    if (has_m_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success());
    }

    // optional int32 m_luckid = 8;
    if (has_m_luckid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_luckid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_lucksuccess = 9;
    if (has_m_lucksuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lucksuccess());
    }

    // optional int32 m_lucknum = 10;
    if (has_m_lucknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lucknum());
    }

    // optional int32 m_qualityatt = 11;
    if (has_m_qualityatt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_qualityatt());
    }

    // optional int32 m_qualityvalue = 12;
    if (has_m_qualityvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_qualityvalue());
    }

  }
  // repeated .proto_ff.E_EquipimproveUpqualityMaterialDesc m_material = 13;
  total_size += 1 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated .proto_ff.E_EquipimproveUpqualityAttributeDesc m_attribute = 14;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveUpquality::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveUpquality* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveUpquality*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveUpquality::MergeFrom(const E_EquipimproveUpquality& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_wearqualitylimit()) {
      set_m_wearqualitylimit(from.m_wearqualitylimit());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_starnum()) {
      set_m_starnum(from.m_starnum());
    }
    if (from.has_m_success()) {
      set_m_success(from.m_success());
    }
    if (from.has_m_luckid()) {
      set_m_luckid(from.m_luckid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_lucksuccess()) {
      set_m_lucksuccess(from.m_lucksuccess());
    }
    if (from.has_m_lucknum()) {
      set_m_lucknum(from.m_lucknum());
    }
    if (from.has_m_qualityatt()) {
      set_m_qualityatt(from.m_qualityatt());
    }
    if (from.has_m_qualityvalue()) {
      set_m_qualityvalue(from.m_qualityvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveUpquality::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveUpquality::CopyFrom(const E_EquipimproveUpquality& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveUpquality::IsInitialized() const {

  return true;
}

void E_EquipimproveUpquality::Swap(E_EquipimproveUpquality* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_wearqualitylimit_, other->m_wearqualitylimit_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_starnum_, other->m_starnum_);
    std::swap(m_success_, other->m_success_);
    std::swap(m_luckid_, other->m_luckid_);
    std::swap(m_lucksuccess_, other->m_lucksuccess_);
    std::swap(m_lucknum_, other->m_lucknum_);
    std::swap(m_qualityatt_, other->m_qualityatt_);
    std::swap(m_qualityvalue_, other->m_qualityvalue_);
    m_material_.Swap(&other->m_material_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveUpquality::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveUpquality_descriptor_;
  metadata.reflection = E_EquipimproveUpquality_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipimproveUpquality::kEEquipimproveUpqualityListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipimproveUpquality::Sheet_EquipimproveUpquality()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipimproveUpquality::InitAsDefaultInstance() {
}

Sheet_EquipimproveUpquality::Sheet_EquipimproveUpquality(const Sheet_EquipimproveUpquality& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipimproveUpquality::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipimproveUpquality::~Sheet_EquipimproveUpquality() {
  SharedDtor();
}

void Sheet_EquipimproveUpquality::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipimproveUpquality::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipimproveUpquality::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipimproveUpquality_descriptor_;
}

const Sheet_EquipimproveUpquality& Sheet_EquipimproveUpquality::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

Sheet_EquipimproveUpquality* Sheet_EquipimproveUpquality::default_instance_ = NULL;

Sheet_EquipimproveUpquality* Sheet_EquipimproveUpquality::New() const {
  return new Sheet_EquipimproveUpquality;
}

void Sheet_EquipimproveUpquality::Clear() {
  e_equipimproveupquality_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipimproveUpquality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipimproveUpquality E_EquipimproveUpquality_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipimproveUpquality_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipimproveupquality_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipimproveUpquality_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipimproveUpquality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipimproveUpquality E_EquipimproveUpquality_List = 1;
  for (int i = 0; i < this->e_equipimproveupquality_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipimproveupquality_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipimproveUpquality::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipimproveUpquality E_EquipimproveUpquality_List = 1;
  for (int i = 0; i < this->e_equipimproveupquality_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipimproveupquality_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipimproveUpquality::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipimproveUpquality E_EquipimproveUpquality_List = 1;
  total_size += 1 * this->e_equipimproveupquality_list_size();
  for (int i = 0; i < this->e_equipimproveupquality_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipimproveupquality_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipimproveUpquality::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipimproveUpquality* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipimproveUpquality*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipimproveUpquality::MergeFrom(const Sheet_EquipimproveUpquality& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipimproveupquality_list_.MergeFrom(from.e_equipimproveupquality_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipimproveUpquality::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipimproveUpquality::CopyFrom(const Sheet_EquipimproveUpquality& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipimproveUpquality::IsInitialized() const {

  return true;
}

void Sheet_EquipimproveUpquality::Swap(Sheet_EquipimproveUpquality* other) {
  if (other != this) {
    e_equipimproveupquality_list_.Swap(&other->e_equipimproveupquality_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipimproveUpquality::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipimproveUpquality_descriptor_;
  metadata.reflection = Sheet_EquipimproveUpquality_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveAwakenAttributeDesc::kMValueFieldNumber;
const int E_EquipimproveAwakenAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveAwakenAttributeDesc::E_EquipimproveAwakenAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveAwakenAttributeDesc::InitAsDefaultInstance() {
}

E_EquipimproveAwakenAttributeDesc::E_EquipimproveAwakenAttributeDesc(const E_EquipimproveAwakenAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveAwakenAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveAwakenAttributeDesc::~E_EquipimproveAwakenAttributeDesc() {
  SharedDtor();
}

void E_EquipimproveAwakenAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveAwakenAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveAwakenAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveAwakenAttributeDesc_descriptor_;
}

const E_EquipimproveAwakenAttributeDesc& E_EquipimproveAwakenAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveAwakenAttributeDesc* E_EquipimproveAwakenAttributeDesc::default_instance_ = NULL;

E_EquipimproveAwakenAttributeDesc* E_EquipimproveAwakenAttributeDesc::New() const {
  return new E_EquipimproveAwakenAttributeDesc;
}

void E_EquipimproveAwakenAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveAwakenAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveAwakenAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveAwakenAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveAwakenAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveAwakenAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveAwakenAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveAwakenAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveAwakenAttributeDesc::MergeFrom(const E_EquipimproveAwakenAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveAwakenAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveAwakenAttributeDesc::CopyFrom(const E_EquipimproveAwakenAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveAwakenAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveAwakenAttributeDesc::Swap(E_EquipimproveAwakenAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveAwakenAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveAwakenAttributeDesc_descriptor_;
  metadata.reflection = E_EquipimproveAwakenAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveAwakenBreakDesc::kMValueFieldNumber;
const int E_EquipimproveAwakenBreakDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveAwakenBreakDesc::E_EquipimproveAwakenBreakDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveAwakenBreakDesc::InitAsDefaultInstance() {
}

E_EquipimproveAwakenBreakDesc::E_EquipimproveAwakenBreakDesc(const E_EquipimproveAwakenBreakDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveAwakenBreakDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveAwakenBreakDesc::~E_EquipimproveAwakenBreakDesc() {
  SharedDtor();
}

void E_EquipimproveAwakenBreakDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveAwakenBreakDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveAwakenBreakDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveAwakenBreakDesc_descriptor_;
}

const E_EquipimproveAwakenBreakDesc& E_EquipimproveAwakenBreakDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveAwakenBreakDesc* E_EquipimproveAwakenBreakDesc::default_instance_ = NULL;

E_EquipimproveAwakenBreakDesc* E_EquipimproveAwakenBreakDesc::New() const {
  return new E_EquipimproveAwakenBreakDesc;
}

void E_EquipimproveAwakenBreakDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveAwakenBreakDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveAwakenBreakDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveAwakenBreakDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveAwakenBreakDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveAwakenBreakDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveAwakenBreakDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveAwakenBreakDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveAwakenBreakDesc::MergeFrom(const E_EquipimproveAwakenBreakDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveAwakenBreakDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveAwakenBreakDesc::CopyFrom(const E_EquipimproveAwakenBreakDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveAwakenBreakDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveAwakenBreakDesc::Swap(E_EquipimproveAwakenBreakDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveAwakenBreakDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveAwakenBreakDesc_descriptor_;
  metadata.reflection = E_EquipimproveAwakenBreakDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveAwaken::kMIdFieldNumber;
const int E_EquipimproveAwaken::kMQualityFieldNumber;
const int E_EquipimproveAwaken::kMPositionFieldNumber;
const int E_EquipimproveAwaken::kMWearqualitylimitFieldNumber;
const int E_EquipimproveAwaken::kMQualitylimitFieldNumber;
const int E_EquipimproveAwaken::kMWearstarlimitFieldNumber;
const int E_EquipimproveAwaken::kMAwakenlvFieldNumber;
const int E_EquipimproveAwaken::kMMaterialIdFieldNumber;
const int E_EquipimproveAwaken::kMMaterialNumFieldNumber;
const int E_EquipimproveAwaken::kMBreakIdFieldNumber;
const int E_EquipimproveAwaken::kMBreakNumFieldNumber;
const int E_EquipimproveAwaken::kMAttributeFieldNumber;
const int E_EquipimproveAwaken::kMBreakFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveAwaken::E_EquipimproveAwaken()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveAwaken::InitAsDefaultInstance() {
}

E_EquipimproveAwaken::E_EquipimproveAwaken(const E_EquipimproveAwaken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveAwaken::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_quality_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_wearqualitylimit_ = 0;
  m_qualitylimit_ = 0;
  m_wearstarlimit_ = 0;
  m_awakenlv_ = 0;
  m_material_id_ = 0;
  m_material_num_ = 0;
  m_break_id_ = 0;
  m_break_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveAwaken::~E_EquipimproveAwaken() {
  SharedDtor();
}

void E_EquipimproveAwaken::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipimproveAwaken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveAwaken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveAwaken_descriptor_;
}

const E_EquipimproveAwaken& E_EquipimproveAwaken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveAwaken* E_EquipimproveAwaken::default_instance_ = NULL;

E_EquipimproveAwaken* E_EquipimproveAwaken::New() const {
  return new E_EquipimproveAwaken;
}

void E_EquipimproveAwaken::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_quality_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
    m_wearqualitylimit_ = 0;
    m_qualitylimit_ = 0;
    m_wearstarlimit_ = 0;
    m_awakenlv_ = 0;
    m_material_id_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_material_num_ = 0;
    m_break_id_ = 0;
    m_break_num_ = 0;
  }
  m_attribute_.Clear();
  m_break_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveAwaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_position;
        break;
      }

      // optional string m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_wearqualitylimit;
        break;
      }

      // optional int32 m_wearqualitylimit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearqualitylimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearqualitylimit_)));
          set_has_m_wearqualitylimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_qualitylimit;
        break;
      }

      // optional int32 m_qualitylimit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_qualitylimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_qualitylimit_)));
          set_has_m_qualitylimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_wearstarlimit;
        break;
      }

      // optional int32 m_wearstarlimit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearstarlimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearstarlimit_)));
          set_has_m_wearstarlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_awakenlv;
        break;
      }

      // optional int32 m_awakenlv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakenlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakenlv_)));
          set_has_m_awakenlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_material_id;
        break;
      }

      // optional int32 m_material_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_material_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_material_id_)));
          set_has_m_material_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_material_num;
        break;
      }

      // optional int32 m_material_num = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_material_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_material_num_)));
          set_has_m_material_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_break_id;
        break;
      }

      // optional int32 m_break_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_break_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_break_id_)));
          set_has_m_break_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_break_num;
        break;
      }

      // optional int32 m_break_num = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_break_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_break_num_)));
          set_has_m_break_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipimproveAwakenAttributeDesc m_attribute = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_attribute;
        if (input->ExpectTag(106)) goto parse_m_break;
        break;
      }

      // repeated .proto_ff.E_EquipimproveAwakenBreakDesc m_break = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_break:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_break()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_break;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveAwaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_position(), output);
  }

  // optional int32 m_wearqualitylimit = 4;
  if (has_m_wearqualitylimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_wearqualitylimit(), output);
  }

  // optional int32 m_qualitylimit = 5;
  if (has_m_qualitylimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_qualitylimit(), output);
  }

  // optional int32 m_wearstarlimit = 6;
  if (has_m_wearstarlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_wearstarlimit(), output);
  }

  // optional int32 m_awakenlv = 7;
  if (has_m_awakenlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_awakenlv(), output);
  }

  // optional int32 m_material_id = 8;
  if (has_m_material_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_material_id(), output);
  }

  // optional int32 m_material_num = 9;
  if (has_m_material_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_material_num(), output);
  }

  // optional int32 m_break_id = 10;
  if (has_m_break_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_break_id(), output);
  }

  // optional int32 m_break_num = 11;
  if (has_m_break_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_break_num(), output);
  }

  // repeated .proto_ff.E_EquipimproveAwakenAttributeDesc m_attribute = 12;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_EquipimproveAwakenBreakDesc m_break = 13;
  for (int i = 0; i < this->m_break_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->m_break(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveAwaken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional string m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_position(), target);
  }

  // optional int32 m_wearqualitylimit = 4;
  if (has_m_wearqualitylimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_wearqualitylimit(), target);
  }

  // optional int32 m_qualitylimit = 5;
  if (has_m_qualitylimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_qualitylimit(), target);
  }

  // optional int32 m_wearstarlimit = 6;
  if (has_m_wearstarlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_wearstarlimit(), target);
  }

  // optional int32 m_awakenlv = 7;
  if (has_m_awakenlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_awakenlv(), target);
  }

  // optional int32 m_material_id = 8;
  if (has_m_material_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_material_id(), target);
  }

  // optional int32 m_material_num = 9;
  if (has_m_material_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_material_num(), target);
  }

  // optional int32 m_break_id = 10;
  if (has_m_break_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_break_id(), target);
  }

  // optional int32 m_break_num = 11;
  if (has_m_break_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_break_num(), target);
  }

  // repeated .proto_ff.E_EquipimproveAwakenAttributeDesc m_attribute = 12;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_EquipimproveAwakenBreakDesc m_break = 13;
  for (int i = 0; i < this->m_break_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->m_break(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveAwaken::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional string m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

    // optional int32 m_wearqualitylimit = 4;
    if (has_m_wearqualitylimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearqualitylimit());
    }

    // optional int32 m_qualitylimit = 5;
    if (has_m_qualitylimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_qualitylimit());
    }

    // optional int32 m_wearstarlimit = 6;
    if (has_m_wearstarlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearstarlimit());
    }

    // optional int32 m_awakenlv = 7;
    if (has_m_awakenlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakenlv());
    }

    // optional int32 m_material_id = 8;
    if (has_m_material_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_material_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_material_num = 9;
    if (has_m_material_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_material_num());
    }

    // optional int32 m_break_id = 10;
    if (has_m_break_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_break_id());
    }

    // optional int32 m_break_num = 11;
    if (has_m_break_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_break_num());
    }

  }
  // repeated .proto_ff.E_EquipimproveAwakenAttributeDesc m_attribute = 12;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_EquipimproveAwakenBreakDesc m_break = 13;
  total_size += 1 * this->m_break_size();
  for (int i = 0; i < this->m_break_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_break(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveAwaken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveAwaken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveAwaken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveAwaken::MergeFrom(const E_EquipimproveAwaken& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_break_.MergeFrom(from.m_break_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_wearqualitylimit()) {
      set_m_wearqualitylimit(from.m_wearqualitylimit());
    }
    if (from.has_m_qualitylimit()) {
      set_m_qualitylimit(from.m_qualitylimit());
    }
    if (from.has_m_wearstarlimit()) {
      set_m_wearstarlimit(from.m_wearstarlimit());
    }
    if (from.has_m_awakenlv()) {
      set_m_awakenlv(from.m_awakenlv());
    }
    if (from.has_m_material_id()) {
      set_m_material_id(from.m_material_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_material_num()) {
      set_m_material_num(from.m_material_num());
    }
    if (from.has_m_break_id()) {
      set_m_break_id(from.m_break_id());
    }
    if (from.has_m_break_num()) {
      set_m_break_num(from.m_break_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveAwaken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveAwaken::CopyFrom(const E_EquipimproveAwaken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveAwaken::IsInitialized() const {

  return true;
}

void E_EquipimproveAwaken::Swap(E_EquipimproveAwaken* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_wearqualitylimit_, other->m_wearqualitylimit_);
    std::swap(m_qualitylimit_, other->m_qualitylimit_);
    std::swap(m_wearstarlimit_, other->m_wearstarlimit_);
    std::swap(m_awakenlv_, other->m_awakenlv_);
    std::swap(m_material_id_, other->m_material_id_);
    std::swap(m_material_num_, other->m_material_num_);
    std::swap(m_break_id_, other->m_break_id_);
    std::swap(m_break_num_, other->m_break_num_);
    m_attribute_.Swap(&other->m_attribute_);
    m_break_.Swap(&other->m_break_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveAwaken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveAwaken_descriptor_;
  metadata.reflection = E_EquipimproveAwaken_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipimproveAwaken::kEEquipimproveAwakenListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipimproveAwaken::Sheet_EquipimproveAwaken()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipimproveAwaken::InitAsDefaultInstance() {
}

Sheet_EquipimproveAwaken::Sheet_EquipimproveAwaken(const Sheet_EquipimproveAwaken& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipimproveAwaken::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipimproveAwaken::~Sheet_EquipimproveAwaken() {
  SharedDtor();
}

void Sheet_EquipimproveAwaken::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipimproveAwaken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipimproveAwaken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipimproveAwaken_descriptor_;
}

const Sheet_EquipimproveAwaken& Sheet_EquipimproveAwaken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

Sheet_EquipimproveAwaken* Sheet_EquipimproveAwaken::default_instance_ = NULL;

Sheet_EquipimproveAwaken* Sheet_EquipimproveAwaken::New() const {
  return new Sheet_EquipimproveAwaken;
}

void Sheet_EquipimproveAwaken::Clear() {
  e_equipimproveawaken_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipimproveAwaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipimproveAwaken E_EquipimproveAwaken_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipimproveAwaken_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipimproveawaken_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipimproveAwaken_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipimproveAwaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipimproveAwaken E_EquipimproveAwaken_List = 1;
  for (int i = 0; i < this->e_equipimproveawaken_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipimproveawaken_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipimproveAwaken::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipimproveAwaken E_EquipimproveAwaken_List = 1;
  for (int i = 0; i < this->e_equipimproveawaken_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipimproveawaken_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipimproveAwaken::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipimproveAwaken E_EquipimproveAwaken_List = 1;
  total_size += 1 * this->e_equipimproveawaken_list_size();
  for (int i = 0; i < this->e_equipimproveawaken_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipimproveawaken_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipimproveAwaken::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipimproveAwaken* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipimproveAwaken*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipimproveAwaken::MergeFrom(const Sheet_EquipimproveAwaken& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipimproveawaken_list_.MergeFrom(from.e_equipimproveawaken_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipimproveAwaken::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipimproveAwaken::CopyFrom(const Sheet_EquipimproveAwaken& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipimproveAwaken::IsInitialized() const {

  return true;
}

void Sheet_EquipimproveAwaken::Swap(Sheet_EquipimproveAwaken* other) {
  if (other != this) {
    e_equipimproveawaken_list_.Swap(&other->e_equipimproveawaken_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipimproveAwaken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipimproveAwaken_descriptor_;
  metadata.reflection = Sheet_EquipimproveAwaken_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSoaringAttrDesc::kMValueFieldNumber;
const int E_EquipimproveSoaringAttrDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSoaringAttrDesc::E_EquipimproveSoaringAttrDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSoaringAttrDesc::InitAsDefaultInstance() {
}

E_EquipimproveSoaringAttrDesc::E_EquipimproveSoaringAttrDesc(const E_EquipimproveSoaringAttrDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSoaringAttrDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSoaringAttrDesc::~E_EquipimproveSoaringAttrDesc() {
  SharedDtor();
}

void E_EquipimproveSoaringAttrDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveSoaringAttrDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSoaringAttrDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSoaringAttrDesc_descriptor_;
}

const E_EquipimproveSoaringAttrDesc& E_EquipimproveSoaringAttrDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSoaringAttrDesc* E_EquipimproveSoaringAttrDesc::default_instance_ = NULL;

E_EquipimproveSoaringAttrDesc* E_EquipimproveSoaringAttrDesc::New() const {
  return new E_EquipimproveSoaringAttrDesc;
}

void E_EquipimproveSoaringAttrDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSoaringAttrDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSoaringAttrDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSoaringAttrDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSoaringAttrDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSoaringAttrDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSoaringAttrDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSoaringAttrDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSoaringAttrDesc::MergeFrom(const E_EquipimproveSoaringAttrDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSoaringAttrDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSoaringAttrDesc::CopyFrom(const E_EquipimproveSoaringAttrDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSoaringAttrDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveSoaringAttrDesc::Swap(E_EquipimproveSoaringAttrDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSoaringAttrDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSoaringAttrDesc_descriptor_;
  metadata.reflection = E_EquipimproveSoaringAttrDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSoaring::kMIdFieldNumber;
const int E_EquipimproveSoaring::kMLvidFieldNumber;
const int E_EquipimproveSoaring::kMAwakenFieldNumber;
const int E_EquipimproveSoaring::kMItemidFieldNumber;
const int E_EquipimproveSoaring::kMItemnumFieldNumber;
const int E_EquipimproveSoaring::kMPositionFieldNumber;
const int E_EquipimproveSoaring::kMAttrFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSoaring::E_EquipimproveSoaring()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSoaring::InitAsDefaultInstance() {
}

E_EquipimproveSoaring::E_EquipimproveSoaring(const E_EquipimproveSoaring& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSoaring::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lvid_ = 0;
  m_awaken_ = 0;
  m_itemid_ = 0;
  m_itemnum_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSoaring::~E_EquipimproveSoaring() {
  SharedDtor();
}

void E_EquipimproveSoaring::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipimproveSoaring::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSoaring::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSoaring_descriptor_;
}

const E_EquipimproveSoaring& E_EquipimproveSoaring::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSoaring* E_EquipimproveSoaring::default_instance_ = NULL;

E_EquipimproveSoaring* E_EquipimproveSoaring::New() const {
  return new E_EquipimproveSoaring;
}

void E_EquipimproveSoaring::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lvid_ = 0;
    m_awaken_ = 0;
    m_itemid_ = 0;
    m_itemnum_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
  }
  m_attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSoaring::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lvid;
        break;
      }

      // optional int32 m_lvid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvid_)));
          set_has_m_lvid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_awaken;
        break;
      }

      // optional int32 m_awaken = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awaken:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awaken_)));
          set_has_m_awaken();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_position;
        break;
      }

      // optional string m_position = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attr;
        break;
      }

      // repeated .proto_ff.E_EquipimproveSoaringAttrDesc m_attr = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSoaring::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_lvid = 2;
  if (has_m_lvid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lvid(), output);
  }

  // optional int32 m_awaken = 3;
  if (has_m_awaken()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_awaken(), output);
  }

  // optional int32 m_itemid = 4;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itemid(), output);
  }

  // optional int32 m_itemnum = 5;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_itemnum(), output);
  }

  // optional string m_position = 6;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_position(), output);
  }

  // repeated .proto_ff.E_EquipimproveSoaringAttrDesc m_attr = 7;
  for (int i = 0; i < this->m_attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSoaring::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lvid = 2;
  if (has_m_lvid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lvid(), target);
  }

  // optional int32 m_awaken = 3;
  if (has_m_awaken()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_awaken(), target);
  }

  // optional int32 m_itemid = 4;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itemid(), target);
  }

  // optional int32 m_itemnum = 5;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_itemnum(), target);
  }

  // optional string m_position = 6;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_position(), target);
  }

  // repeated .proto_ff.E_EquipimproveSoaringAttrDesc m_attr = 7;
  for (int i = 0; i < this->m_attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSoaring::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_lvid = 2;
    if (has_m_lvid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvid());
    }

    // optional int32 m_awaken = 3;
    if (has_m_awaken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awaken());
    }

    // optional int32 m_itemid = 4;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_itemnum = 5;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

    // optional string m_position = 6;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

  }
  // repeated .proto_ff.E_EquipimproveSoaringAttrDesc m_attr = 7;
  total_size += 1 * this->m_attr_size();
  for (int i = 0; i < this->m_attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSoaring::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSoaring* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSoaring*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSoaring::MergeFrom(const E_EquipimproveSoaring& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attr_.MergeFrom(from.m_attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lvid()) {
      set_m_lvid(from.m_lvid());
    }
    if (from.has_m_awaken()) {
      set_m_awaken(from.m_awaken());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSoaring::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSoaring::CopyFrom(const E_EquipimproveSoaring& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSoaring::IsInitialized() const {

  return true;
}

void E_EquipimproveSoaring::Swap(E_EquipimproveSoaring* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lvid_, other->m_lvid_);
    std::swap(m_awaken_, other->m_awaken_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_itemnum_, other->m_itemnum_);
    std::swap(m_position_, other->m_position_);
    m_attr_.Swap(&other->m_attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSoaring::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSoaring_descriptor_;
  metadata.reflection = E_EquipimproveSoaring_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipimproveSoaring::kEEquipimproveSoaringListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipimproveSoaring::Sheet_EquipimproveSoaring()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipimproveSoaring::InitAsDefaultInstance() {
}

Sheet_EquipimproveSoaring::Sheet_EquipimproveSoaring(const Sheet_EquipimproveSoaring& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipimproveSoaring::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipimproveSoaring::~Sheet_EquipimproveSoaring() {
  SharedDtor();
}

void Sheet_EquipimproveSoaring::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipimproveSoaring::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipimproveSoaring::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipimproveSoaring_descriptor_;
}

const Sheet_EquipimproveSoaring& Sheet_EquipimproveSoaring::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

Sheet_EquipimproveSoaring* Sheet_EquipimproveSoaring::default_instance_ = NULL;

Sheet_EquipimproveSoaring* Sheet_EquipimproveSoaring::New() const {
  return new Sheet_EquipimproveSoaring;
}

void Sheet_EquipimproveSoaring::Clear() {
  e_equipimprovesoaring_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipimproveSoaring::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipimproveSoaring E_EquipimproveSoaring_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipimproveSoaring_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipimprovesoaring_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipimproveSoaring_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipimproveSoaring::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipimproveSoaring E_EquipimproveSoaring_List = 1;
  for (int i = 0; i < this->e_equipimprovesoaring_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipimprovesoaring_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipimproveSoaring::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipimproveSoaring E_EquipimproveSoaring_List = 1;
  for (int i = 0; i < this->e_equipimprovesoaring_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipimprovesoaring_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipimproveSoaring::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipimproveSoaring E_EquipimproveSoaring_List = 1;
  total_size += 1 * this->e_equipimprovesoaring_list_size();
  for (int i = 0; i < this->e_equipimprovesoaring_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipimprovesoaring_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipimproveSoaring::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipimproveSoaring* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipimproveSoaring*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipimproveSoaring::MergeFrom(const Sheet_EquipimproveSoaring& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipimprovesoaring_list_.MergeFrom(from.e_equipimprovesoaring_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipimproveSoaring::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipimproveSoaring::CopyFrom(const Sheet_EquipimproveSoaring& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipimproveSoaring::IsInitialized() const {

  return true;
}

void Sheet_EquipimproveSoaring::Swap(Sheet_EquipimproveSoaring* other) {
  if (other != this) {
    e_equipimprovesoaring_list_.Swap(&other->e_equipimprovesoaring_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipimproveSoaring::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipimproveSoaring_descriptor_;
  metadata.reflection = Sheet_EquipimproveSoaring_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSealSealDesc::kMValueFieldNumber;
const int E_EquipimproveSealSealDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSealSealDesc::E_EquipimproveSealSealDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSealSealDesc::InitAsDefaultInstance() {
}

E_EquipimproveSealSealDesc::E_EquipimproveSealSealDesc(const E_EquipimproveSealSealDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSealSealDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSealSealDesc::~E_EquipimproveSealSealDesc() {
  SharedDtor();
}

void E_EquipimproveSealSealDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveSealSealDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSealSealDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSealSealDesc_descriptor_;
}

const E_EquipimproveSealSealDesc& E_EquipimproveSealSealDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSealSealDesc* E_EquipimproveSealSealDesc::default_instance_ = NULL;

E_EquipimproveSealSealDesc* E_EquipimproveSealSealDesc::New() const {
  return new E_EquipimproveSealSealDesc;
}

void E_EquipimproveSealSealDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSealSealDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSealSealDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSealSealDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSealSealDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSealSealDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSealSealDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSealSealDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSealSealDesc::MergeFrom(const E_EquipimproveSealSealDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSealSealDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSealSealDesc::CopyFrom(const E_EquipimproveSealSealDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSealSealDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveSealSealDesc::Swap(E_EquipimproveSealSealDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSealSealDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSealSealDesc_descriptor_;
  metadata.reflection = E_EquipimproveSealSealDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSeal::kMIdFieldNumber;
const int E_EquipimproveSeal::kMSealpositionFieldNumber;
const int E_EquipimproveSeal::kMSeallvFieldNumber;
const int E_EquipimproveSeal::kMPreidFieldNumber;
const int E_EquipimproveSeal::kMNextidFieldNumber;
const int E_EquipimproveSeal::kMNumbFieldNumber;
const int E_EquipimproveSeal::kMNextvalueFieldNumber;
const int E_EquipimproveSeal::kMSealFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSeal::E_EquipimproveSeal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSeal::InitAsDefaultInstance() {
}

E_EquipimproveSeal::E_EquipimproveSeal(const E_EquipimproveSeal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSeal::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_sealposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_seallv_ = 0;
  m_preid_ = 0;
  m_nextid_ = 0;
  m_numb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_nextvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSeal::~E_EquipimproveSeal() {
  SharedDtor();
}

void E_EquipimproveSeal::SharedDtor() {
  if (m_sealposition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sealposition_;
  }
  if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
    delete m_numb_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipimproveSeal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSeal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSeal_descriptor_;
}

const E_EquipimproveSeal& E_EquipimproveSeal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSeal* E_EquipimproveSeal::default_instance_ = NULL;

E_EquipimproveSeal* E_EquipimproveSeal::New() const {
  return new E_EquipimproveSeal;
}

void E_EquipimproveSeal::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_sealposition()) {
      if (m_sealposition_ != &::google::protobuf::internal::kEmptyString) {
        m_sealposition_->clear();
      }
    }
    m_seallv_ = 0;
    m_preid_ = 0;
    m_nextid_ = 0;
    if (has_m_numb()) {
      if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
        m_numb_->clear();
      }
    }
    m_nextvalue_ = 0;
  }
  m_seal_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSeal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_sealposition;
        break;
      }

      // optional string m_sealposition = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_sealposition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_sealposition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_sealposition().data(), this->m_sealposition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_seallv;
        break;
      }

      // optional int32 m_seallv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_seallv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_seallv_)));
          set_has_m_seallv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_preid;
        break;
      }

      // optional int32 m_preid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_preid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_preid_)));
          set_has_m_preid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_nextid;
        break;
      }

      // optional int32 m_nextid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nextid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nextid_)));
          set_has_m_nextid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_numb;
        break;
      }

      // optional string m_numb = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_numb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_numb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_numb().data(), this->m_numb().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_nextvalue;
        break;
      }

      // optional int32 m_nextvalue = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nextvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nextvalue_)));
          set_has_m_nextvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_seal;
        break;
      }

      // repeated .proto_ff.E_EquipimproveSealSealDesc m_seal = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_seal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_seal()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_seal;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSeal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_sealposition = 2;
  if (has_m_sealposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sealposition().data(), this->m_sealposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_sealposition(), output);
  }

  // optional int32 m_seallv = 3;
  if (has_m_seallv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_seallv(), output);
  }

  // optional int32 m_preid = 4;
  if (has_m_preid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_preid(), output);
  }

  // optional int32 m_nextid = 5;
  if (has_m_nextid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_nextid(), output);
  }

  // optional string m_numb = 6;
  if (has_m_numb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_numb().data(), this->m_numb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_numb(), output);
  }

  // optional int32 m_nextvalue = 7;
  if (has_m_nextvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_nextvalue(), output);
  }

  // repeated .proto_ff.E_EquipimproveSealSealDesc m_seal = 8;
  for (int i = 0; i < this->m_seal_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_seal(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSeal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_sealposition = 2;
  if (has_m_sealposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_sealposition().data(), this->m_sealposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_sealposition(), target);
  }

  // optional int32 m_seallv = 3;
  if (has_m_seallv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_seallv(), target);
  }

  // optional int32 m_preid = 4;
  if (has_m_preid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_preid(), target);
  }

  // optional int32 m_nextid = 5;
  if (has_m_nextid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_nextid(), target);
  }

  // optional string m_numb = 6;
  if (has_m_numb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_numb().data(), this->m_numb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_numb(), target);
  }

  // optional int32 m_nextvalue = 7;
  if (has_m_nextvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_nextvalue(), target);
  }

  // repeated .proto_ff.E_EquipimproveSealSealDesc m_seal = 8;
  for (int i = 0; i < this->m_seal_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_seal(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSeal::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_sealposition = 2;
    if (has_m_sealposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_sealposition());
    }

    // optional int32 m_seallv = 3;
    if (has_m_seallv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_seallv());
    }

    // optional int32 m_preid = 4;
    if (has_m_preid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_preid());
    }

    // optional int32 m_nextid = 5;
    if (has_m_nextid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nextid());
    }

    // optional string m_numb = 6;
    if (has_m_numb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_numb());
    }

    // optional int32 m_nextvalue = 7;
    if (has_m_nextvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nextvalue());
    }

  }
  // repeated .proto_ff.E_EquipimproveSealSealDesc m_seal = 8;
  total_size += 1 * this->m_seal_size();
  for (int i = 0; i < this->m_seal_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_seal(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSeal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSeal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSeal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSeal::MergeFrom(const E_EquipimproveSeal& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_seal_.MergeFrom(from.m_seal_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_sealposition()) {
      set_m_sealposition(from.m_sealposition());
    }
    if (from.has_m_seallv()) {
      set_m_seallv(from.m_seallv());
    }
    if (from.has_m_preid()) {
      set_m_preid(from.m_preid());
    }
    if (from.has_m_nextid()) {
      set_m_nextid(from.m_nextid());
    }
    if (from.has_m_numb()) {
      set_m_numb(from.m_numb());
    }
    if (from.has_m_nextvalue()) {
      set_m_nextvalue(from.m_nextvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSeal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSeal::CopyFrom(const E_EquipimproveSeal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSeal::IsInitialized() const {

  return true;
}

void E_EquipimproveSeal::Swap(E_EquipimproveSeal* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_sealposition_, other->m_sealposition_);
    std::swap(m_seallv_, other->m_seallv_);
    std::swap(m_preid_, other->m_preid_);
    std::swap(m_nextid_, other->m_nextid_);
    std::swap(m_numb_, other->m_numb_);
    std::swap(m_nextvalue_, other->m_nextvalue_);
    m_seal_.Swap(&other->m_seal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSeal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSeal_descriptor_;
  metadata.reflection = E_EquipimproveSeal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipimproveSeal::kEEquipimproveSealListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipimproveSeal::Sheet_EquipimproveSeal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipimproveSeal::InitAsDefaultInstance() {
}

Sheet_EquipimproveSeal::Sheet_EquipimproveSeal(const Sheet_EquipimproveSeal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipimproveSeal::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipimproveSeal::~Sheet_EquipimproveSeal() {
  SharedDtor();
}

void Sheet_EquipimproveSeal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipimproveSeal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipimproveSeal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipimproveSeal_descriptor_;
}

const Sheet_EquipimproveSeal& Sheet_EquipimproveSeal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

Sheet_EquipimproveSeal* Sheet_EquipimproveSeal::default_instance_ = NULL;

Sheet_EquipimproveSeal* Sheet_EquipimproveSeal::New() const {
  return new Sheet_EquipimproveSeal;
}

void Sheet_EquipimproveSeal::Clear() {
  e_equipimproveseal_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipimproveSeal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipimproveSeal E_EquipimproveSeal_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipimproveSeal_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipimproveseal_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipimproveSeal_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipimproveSeal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipimproveSeal E_EquipimproveSeal_List = 1;
  for (int i = 0; i < this->e_equipimproveseal_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipimproveseal_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipimproveSeal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipimproveSeal E_EquipimproveSeal_List = 1;
  for (int i = 0; i < this->e_equipimproveseal_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipimproveseal_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipimproveSeal::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipimproveSeal E_EquipimproveSeal_List = 1;
  total_size += 1 * this->e_equipimproveseal_list_size();
  for (int i = 0; i < this->e_equipimproveseal_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipimproveseal_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipimproveSeal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipimproveSeal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipimproveSeal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipimproveSeal::MergeFrom(const Sheet_EquipimproveSeal& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipimproveseal_list_.MergeFrom(from.e_equipimproveseal_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipimproveSeal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipimproveSeal::CopyFrom(const Sheet_EquipimproveSeal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipimproveSeal::IsInitialized() const {

  return true;
}

void Sheet_EquipimproveSeal::Swap(Sheet_EquipimproveSeal* other) {
  if (other != this) {
    e_equipimproveseal_list_.Swap(&other->e_equipimproveseal_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipimproveSeal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipimproveSeal_descriptor_;
  metadata.reflection = Sheet_EquipimproveSeal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSealslot::kMIdFieldNumber;
const int E_EquipimproveSealslot::kMQualityFieldNumber;
const int E_EquipimproveSealslot::kMCharacterFieldNumber;
const int E_EquipimproveSealslot::kMStarFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSealslot::E_EquipimproveSealslot()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSealslot::InitAsDefaultInstance() {
}

E_EquipimproveSealslot::E_EquipimproveSealslot(const E_EquipimproveSealslot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSealslot::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_quality_ = 0;
  m_character_ = 0;
  m_star_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSealslot::~E_EquipimproveSealslot() {
  SharedDtor();
}

void E_EquipimproveSealslot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveSealslot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSealslot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSealslot_descriptor_;
}

const E_EquipimproveSealslot& E_EquipimproveSealslot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSealslot* E_EquipimproveSealslot::default_instance_ = NULL;

E_EquipimproveSealslot* E_EquipimproveSealslot::New() const {
  return new E_EquipimproveSealslot;
}

void E_EquipimproveSealslot::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_quality_ = 0;
    m_character_ = 0;
    m_star_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSealslot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_character;
        break;
      }

      // optional int32 m_character = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_character:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_character_)));
          set_has_m_character();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSealslot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_character = 3;
  if (has_m_character()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_character(), output);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_star(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSealslot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_character = 3;
  if (has_m_character()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_character(), target);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_star(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSealslot::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_character = 3;
    if (has_m_character()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_character());
    }

    // optional int32 m_star = 4;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSealslot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSealslot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSealslot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSealslot::MergeFrom(const E_EquipimproveSealslot& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_character()) {
      set_m_character(from.m_character());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSealslot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSealslot::CopyFrom(const E_EquipimproveSealslot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSealslot::IsInitialized() const {

  return true;
}

void E_EquipimproveSealslot::Swap(E_EquipimproveSealslot* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_character_, other->m_character_);
    std::swap(m_star_, other->m_star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSealslot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSealslot_descriptor_;
  metadata.reflection = E_EquipimproveSealslot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipimproveSealslot::kEEquipimproveSealslotListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipimproveSealslot::Sheet_EquipimproveSealslot()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipimproveSealslot::InitAsDefaultInstance() {
}

Sheet_EquipimproveSealslot::Sheet_EquipimproveSealslot(const Sheet_EquipimproveSealslot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipimproveSealslot::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipimproveSealslot::~Sheet_EquipimproveSealslot() {
  SharedDtor();
}

void Sheet_EquipimproveSealslot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipimproveSealslot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipimproveSealslot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipimproveSealslot_descriptor_;
}

const Sheet_EquipimproveSealslot& Sheet_EquipimproveSealslot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

Sheet_EquipimproveSealslot* Sheet_EquipimproveSealslot::default_instance_ = NULL;

Sheet_EquipimproveSealslot* Sheet_EquipimproveSealslot::New() const {
  return new Sheet_EquipimproveSealslot;
}

void Sheet_EquipimproveSealslot::Clear() {
  e_equipimprovesealslot_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipimproveSealslot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipimproveSealslot E_EquipimproveSealslot_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipimproveSealslot_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipimprovesealslot_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipimproveSealslot_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipimproveSealslot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipimproveSealslot E_EquipimproveSealslot_List = 1;
  for (int i = 0; i < this->e_equipimprovesealslot_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipimprovesealslot_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipimproveSealslot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipimproveSealslot E_EquipimproveSealslot_List = 1;
  for (int i = 0; i < this->e_equipimprovesealslot_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipimprovesealslot_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipimproveSealslot::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipimproveSealslot E_EquipimproveSealslot_List = 1;
  total_size += 1 * this->e_equipimprovesealslot_list_size();
  for (int i = 0; i < this->e_equipimprovesealslot_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipimprovesealslot_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipimproveSealslot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipimproveSealslot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipimproveSealslot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipimproveSealslot::MergeFrom(const Sheet_EquipimproveSealslot& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipimprovesealslot_list_.MergeFrom(from.e_equipimprovesealslot_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipimproveSealslot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipimproveSealslot::CopyFrom(const Sheet_EquipimproveSealslot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipimproveSealslot::IsInitialized() const {

  return true;
}

void Sheet_EquipimproveSealslot::Swap(Sheet_EquipimproveSealslot* other) {
  if (other != this) {
    e_equipimprovesealslot_list_.Swap(&other->e_equipimprovesealslot_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipimproveSealslot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipimproveSealslot_descriptor_;
  metadata.reflection = Sheet_EquipimproveSealslot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSealsuitSuitDesc::kMValueFieldNumber;
const int E_EquipimproveSealsuitSuitDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSealsuitSuitDesc::E_EquipimproveSealsuitSuitDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSealsuitSuitDesc::InitAsDefaultInstance() {
}

E_EquipimproveSealsuitSuitDesc::E_EquipimproveSealsuitSuitDesc(const E_EquipimproveSealsuitSuitDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSealsuitSuitDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSealsuitSuitDesc::~E_EquipimproveSealsuitSuitDesc() {
  SharedDtor();
}

void E_EquipimproveSealsuitSuitDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipimproveSealsuitSuitDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSealsuitSuitDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSealsuitSuitDesc_descriptor_;
}

const E_EquipimproveSealsuitSuitDesc& E_EquipimproveSealsuitSuitDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSealsuitSuitDesc* E_EquipimproveSealsuitSuitDesc::default_instance_ = NULL;

E_EquipimproveSealsuitSuitDesc* E_EquipimproveSealsuitSuitDesc::New() const {
  return new E_EquipimproveSealsuitSuitDesc;
}

void E_EquipimproveSealsuitSuitDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSealsuitSuitDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSealsuitSuitDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSealsuitSuitDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSealsuitSuitDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSealsuitSuitDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSealsuitSuitDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSealsuitSuitDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSealsuitSuitDesc::MergeFrom(const E_EquipimproveSealsuitSuitDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSealsuitSuitDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSealsuitSuitDesc::CopyFrom(const E_EquipimproveSealsuitSuitDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSealsuitSuitDesc::IsInitialized() const {

  return true;
}

void E_EquipimproveSealsuitSuitDesc::Swap(E_EquipimproveSealsuitSuitDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSealsuitSuitDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSealsuitSuitDesc_descriptor_;
  metadata.reflection = E_EquipimproveSealsuitSuitDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipimproveSealsuit::kMIdFieldNumber;
const int E_EquipimproveSealsuit::kMWearnumFieldNumber;
const int E_EquipimproveSealsuit::kMQualityFieldNumber;
const int E_EquipimproveSealsuit::kMPositionFieldNumber;
const int E_EquipimproveSealsuit::kMSuitFieldNumber;
#endif  // !_MSC_VER

E_EquipimproveSealsuit::E_EquipimproveSealsuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipimproveSealsuit::InitAsDefaultInstance() {
}

E_EquipimproveSealsuit::E_EquipimproveSealsuit(const E_EquipimproveSealsuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipimproveSealsuit::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_wearnum_ = 0;
  m_quality_ = 0;
  m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipimproveSealsuit::~E_EquipimproveSealsuit() {
  SharedDtor();
}

void E_EquipimproveSealsuit::SharedDtor() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipimproveSealsuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipimproveSealsuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipimproveSealsuit_descriptor_;
}

const E_EquipimproveSealsuit& E_EquipimproveSealsuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

E_EquipimproveSealsuit* E_EquipimproveSealsuit::default_instance_ = NULL;

E_EquipimproveSealsuit* E_EquipimproveSealsuit::New() const {
  return new E_EquipimproveSealsuit;
}

void E_EquipimproveSealsuit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_wearnum_ = 0;
    m_quality_ = 0;
    if (has_m_position()) {
      if (m_position_ != &::google::protobuf::internal::kEmptyString) {
        m_position_->clear();
      }
    }
  }
  m_suit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipimproveSealsuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_wearnum;
        break;
      }

      // optional int32 m_wearnum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearnum_)));
          set_has_m_wearnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_position;
        break;
      }

      // optional string m_position = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position().data(), this->m_position().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_suit;
        break;
      }

      // repeated .proto_ff.E_EquipimproveSealsuitSuitDesc m_suit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_suit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_suit()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_suit;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipimproveSealsuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_wearnum = 2;
  if (has_m_wearnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_wearnum(), output);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_quality(), output);
  }

  // optional string m_position = 4;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_position(), output);
  }

  // repeated .proto_ff.E_EquipimproveSealsuitSuitDesc m_suit = 5;
  for (int i = 0; i < this->m_suit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_suit(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipimproveSealsuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_wearnum = 2;
  if (has_m_wearnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_wearnum(), target);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_quality(), target);
  }

  // optional string m_position = 4;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position().data(), this->m_position().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_position(), target);
  }

  // repeated .proto_ff.E_EquipimproveSealsuitSuitDesc m_suit = 5;
  for (int i = 0; i < this->m_suit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_suit(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipimproveSealsuit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_wearnum = 2;
    if (has_m_wearnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearnum());
    }

    // optional int32 m_quality = 3;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional string m_position = 4;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_position());
    }

  }
  // repeated .proto_ff.E_EquipimproveSealsuitSuitDesc m_suit = 5;
  total_size += 1 * this->m_suit_size();
  for (int i = 0; i < this->m_suit_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_suit(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipimproveSealsuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipimproveSealsuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipimproveSealsuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipimproveSealsuit::MergeFrom(const E_EquipimproveSealsuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_suit_.MergeFrom(from.m_suit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_wearnum()) {
      set_m_wearnum(from.m_wearnum());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipimproveSealsuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipimproveSealsuit::CopyFrom(const E_EquipimproveSealsuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipimproveSealsuit::IsInitialized() const {

  return true;
}

void E_EquipimproveSealsuit::Swap(E_EquipimproveSealsuit* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_wearnum_, other->m_wearnum_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_position_, other->m_position_);
    m_suit_.Swap(&other->m_suit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipimproveSealsuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipimproveSealsuit_descriptor_;
  metadata.reflection = E_EquipimproveSealsuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipimproveSealsuit::kEEquipimproveSealsuitListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipimproveSealsuit::Sheet_EquipimproveSealsuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipimproveSealsuit::InitAsDefaultInstance() {
}

Sheet_EquipimproveSealsuit::Sheet_EquipimproveSealsuit(const Sheet_EquipimproveSealsuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipimproveSealsuit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipimproveSealsuit::~Sheet_EquipimproveSealsuit() {
  SharedDtor();
}

void Sheet_EquipimproveSealsuit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipimproveSealsuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipimproveSealsuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipimproveSealsuit_descriptor_;
}

const Sheet_EquipimproveSealsuit& Sheet_EquipimproveSealsuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEquipimprove_2eproto();
  return *default_instance_;
}

Sheet_EquipimproveSealsuit* Sheet_EquipimproveSealsuit::default_instance_ = NULL;

Sheet_EquipimproveSealsuit* Sheet_EquipimproveSealsuit::New() const {
  return new Sheet_EquipimproveSealsuit;
}

void Sheet_EquipimproveSealsuit::Clear() {
  e_equipimprovesealsuit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipimproveSealsuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipimproveSealsuit E_EquipimproveSealsuit_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipimproveSealsuit_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipimprovesealsuit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipimproveSealsuit_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipimproveSealsuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipimproveSealsuit E_EquipimproveSealsuit_List = 1;
  for (int i = 0; i < this->e_equipimprovesealsuit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipimprovesealsuit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipimproveSealsuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipimproveSealsuit E_EquipimproveSealsuit_List = 1;
  for (int i = 0; i < this->e_equipimprovesealsuit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipimprovesealsuit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipimproveSealsuit::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipimproveSealsuit E_EquipimproveSealsuit_List = 1;
  total_size += 1 * this->e_equipimprovesealsuit_list_size();
  for (int i = 0; i < this->e_equipimprovesealsuit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipimprovesealsuit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipimproveSealsuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipimproveSealsuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipimproveSealsuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipimproveSealsuit::MergeFrom(const Sheet_EquipimproveSealsuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipimprovesealsuit_list_.MergeFrom(from.e_equipimprovesealsuit_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipimproveSealsuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipimproveSealsuit::CopyFrom(const Sheet_EquipimproveSealsuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipimproveSealsuit::IsInitialized() const {

  return true;
}

void Sheet_EquipimproveSealsuit::Swap(Sheet_EquipimproveSealsuit* other) {
  if (other != this) {
    e_equipimprovesealsuit_list_.Swap(&other->e_equipimprovesealsuit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipimproveSealsuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipimproveSealsuit_descriptor_;
  metadata.reflection = Sheet_EquipimproveSealsuit_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
