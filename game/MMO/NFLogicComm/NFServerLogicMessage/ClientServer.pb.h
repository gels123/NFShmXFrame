// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientServer.proto

#ifndef PROTOBUF_ClientServer_2eproto__INCLUDED
#define PROTOBUF_ClientServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientServer_2eproto();
void protobuf_AssignDesc_ClientServer_2eproto();
void protobuf_ShutdownFile_ClientServer_2eproto();

class FunctionUnlockInfoRsp;
class FunctionUnlockGetRewardReq;
class FunctionUnlockGetRewardRsp;
class FacadeInfoReq;
class FacadeInfoRsp;
class FacadeSkillUnlockNotify;
class FacadeSkillLevReq;
class FacadeSkillLevRsp;
class FacadeLevupReq;
class FacadeLevupRsp;
class FacadeDressReq;
class FacadeDressRsp;
class FacadeUnDressReq;
class FacadeUnDressRsp;
class FacadeFragmentUseReq;
class FacadeFragmentUseRsp;
class FacadeFantasyInfoReq;
class FacadeFantasyInfoRsp;
class FacadeFantasyActiveReq;
class FacadeFastasyActiveRsp;
class FacadeFantasyLevelupReq;
class FacadeFastasyLevelupRsp;
class FacadeFastasyDressReq;
class FacadeFastasyDressRsp;
class FacadeFastasyUnDressReq;
class FacadeFastasyUnDressRsp;
class PlayerSeatReq;
class PlayerSeatRsp;
class PlayerSeatExpRsp;
class PlayerLoginHangUpDataReq;
class PlayerLoginHangUpDataRsp;
class PlayerHangUpRewardReq;
class PlayerHangUpRewardRsp;
class GetDailyTaskDataReq;
class GetDailyTaskDataRsp;
class UpdateDailyTaskNotify;
class GetDailyTaskRewardReq;
class GetDailyTaskRewardRsp;
class DailyTaskLevelupReq;
class DailyTaskLevelupRsp;
class DailyLimitTaskAddReadyReq;
class DailyLimitTaskAddReadyRsp;
class DailyBackTaskBackReq;
class DailyBackTaskBackRsp;
class DailyLimitTaskAddAllReadyReq;
class DailyLimitTaskAddAllReadyRsp;
class DailyBackTaskBackAllReq;
class DailyBackTaskBackAllRsp;

// ===================================================================

class FunctionUnlockInfoRsp : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfoRsp();
  virtual ~FunctionUnlockInfoRsp();

  FunctionUnlockInfoRsp(const FunctionUnlockInfoRsp& from);

  inline FunctionUnlockInfoRsp& operator=(const FunctionUnlockInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfoRsp& default_instance();

  void Swap(FunctionUnlockInfoRsp* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfoRsp& from);
  void MergeFrom(const FunctionUnlockInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required int32 synType = 2;
  inline bool has_syntype() const;
  inline void clear_syntype();
  static const int kSynTypeFieldNumber = 2;
  inline ::google::protobuf::int32 syntype() const;
  inline void set_syntype(::google::protobuf::int32 value);

  // repeated .proto_ff.FunctionUnlockInfoData data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::proto_ff::FunctionUnlockInfoData& data(int index) const;
  inline ::proto_ff::FunctionUnlockInfoData* mutable_data(int index);
  inline ::proto_ff::FunctionUnlockInfoData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfoRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_syntype();
  inline void clear_has_syntype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 syntype_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockGetRewardReq : public ::google::protobuf::Message {
 public:
  FunctionUnlockGetRewardReq();
  virtual ~FunctionUnlockGetRewardReq();

  FunctionUnlockGetRewardReq(const FunctionUnlockGetRewardReq& from);

  inline FunctionUnlockGetRewardReq& operator=(const FunctionUnlockGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockGetRewardReq& default_instance();

  void Swap(FunctionUnlockGetRewardReq* other);

  // implements Message ----------------------------------------------

  FunctionUnlockGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockGetRewardReq& from);
  void MergeFrom(const FunctionUnlockGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 function_id = 1;
  inline bool has_function_id() const;
  inline void clear_function_id();
  static const int kFunctionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 function_id() const;
  inline void set_function_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockGetRewardReq)
 private:
  inline void set_has_function_id();
  inline void clear_has_function_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 function_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockGetRewardRsp : public ::google::protobuf::Message {
 public:
  FunctionUnlockGetRewardRsp();
  virtual ~FunctionUnlockGetRewardRsp();

  FunctionUnlockGetRewardRsp(const FunctionUnlockGetRewardRsp& from);

  inline FunctionUnlockGetRewardRsp& operator=(const FunctionUnlockGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockGetRewardRsp& default_instance();

  void Swap(FunctionUnlockGetRewardRsp* other);

  // implements Message ----------------------------------------------

  FunctionUnlockGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockGetRewardRsp& from);
  void MergeFrom(const FunctionUnlockGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional .proto_ff.FunctionUnlockInfoData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::FunctionUnlockInfoData& data() const;
  inline ::proto_ff::FunctionUnlockInfoData* mutable_data();
  inline ::proto_ff::FunctionUnlockInfoData* release_data();
  inline void set_allocated_data(::proto_ff::FunctionUnlockInfoData* data);

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockGetRewardRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::FunctionUnlockInfoData* data_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeInfoReq : public ::google::protobuf::Message {
 public:
  FacadeInfoReq();
  virtual ~FacadeInfoReq();

  FacadeInfoReq(const FacadeInfoReq& from);

  inline FacadeInfoReq& operator=(const FacadeInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeInfoReq& default_instance();

  void Swap(FacadeInfoReq* other);

  // implements Message ----------------------------------------------

  FacadeInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeInfoReq& from);
  void MergeFrom(const FacadeInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeInfoReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeInfoRsp : public ::google::protobuf::Message {
 public:
  FacadeInfoRsp();
  virtual ~FacadeInfoRsp();

  FacadeInfoRsp(const FacadeInfoRsp& from);

  inline FacadeInfoRsp& operator=(const FacadeInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeInfoRsp& default_instance();

  void Swap(FacadeInfoRsp* other);

  // implements Message ----------------------------------------------

  FacadeInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeInfoRsp& from);
  void MergeFrom(const FacadeInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 facade_id = 2;
  inline bool has_facade_id() const;
  inline void clear_facade_id();
  static const int kFacadeIdFieldNumber = 2;
  inline ::google::protobuf::uint64 facade_id() const;
  inline void set_facade_id(::google::protobuf::uint64 value);

  // optional uint32 facade_lev = 3;
  inline bool has_facade_lev() const;
  inline void clear_facade_lev();
  static const int kFacadeLevFieldNumber = 3;
  inline ::google::protobuf::uint32 facade_lev() const;
  inline void set_facade_lev(::google::protobuf::uint32 value);

  // optional uint64 facade_exp = 4;
  inline bool has_facade_exp() const;
  inline void clear_facade_exp();
  static const int kFacadeExpFieldNumber = 4;
  inline ::google::protobuf::uint64 facade_exp() const;
  inline void set_facade_exp(::google::protobuf::uint64 value);

  // optional bool use_facade = 5;
  inline bool has_use_facade() const;
  inline void clear_use_facade();
  static const int kUseFacadeFieldNumber = 5;
  inline bool use_facade() const;
  inline void set_use_facade(bool value);

  // optional bool use_soul_item = 6;
  inline bool has_use_soul_item() const;
  inline void clear_use_soul_item();
  static const int kUseSoulItemFieldNumber = 6;
  inline bool use_soul_item() const;
  inline void set_use_soul_item(bool value);

  // repeated .proto_ff.FacadeFragmentData fragment_data = 7;
  inline int fragment_data_size() const;
  inline void clear_fragment_data();
  static const int kFragmentDataFieldNumber = 7;
  inline const ::proto_ff::FacadeFragmentData& fragment_data(int index) const;
  inline ::proto_ff::FacadeFragmentData* mutable_fragment_data(int index);
  inline ::proto_ff::FacadeFragmentData* add_fragment_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >&
      fragment_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >*
      mutable_fragment_data();

  // optional uint64 fight_value = 8;
  inline bool has_fight_value() const;
  inline void clear_fight_value();
  static const int kFightValueFieldNumber = 8;
  inline ::google::protobuf::uint64 fight_value() const;
  inline void set_fight_value(::google::protobuf::uint64 value);

  // repeated .proto_ff.FacadeSkillData skill_data = 9;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 9;
  inline const ::proto_ff::FacadeSkillData& skill_data(int index) const;
  inline ::proto_ff::FacadeSkillData* mutable_skill_data(int index);
  inline ::proto_ff::FacadeSkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >*
      mutable_skill_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeInfoRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_facade_id();
  inline void clear_has_facade_id();
  inline void set_has_facade_lev();
  inline void clear_has_facade_lev();
  inline void set_has_facade_exp();
  inline void clear_has_facade_exp();
  inline void set_has_use_facade();
  inline void clear_has_use_facade();
  inline void set_has_use_soul_item();
  inline void clear_has_use_soul_item();
  inline void set_has_fight_value();
  inline void clear_has_fight_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 facade_id_;
  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 facade_lev_;
  ::google::protobuf::uint64 facade_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData > fragment_data_;
  ::google::protobuf::uint64 fight_value_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData > skill_data_;
  bool use_facade_;
  bool use_soul_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSkillUnlockNotify : public ::google::protobuf::Message {
 public:
  FacadeSkillUnlockNotify();
  virtual ~FacadeSkillUnlockNotify();

  FacadeSkillUnlockNotify(const FacadeSkillUnlockNotify& from);

  inline FacadeSkillUnlockNotify& operator=(const FacadeSkillUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSkillUnlockNotify& default_instance();

  void Swap(FacadeSkillUnlockNotify* other);

  // implements Message ----------------------------------------------

  FacadeSkillUnlockNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSkillUnlockNotify& from);
  void MergeFrom(const FacadeSkillUnlockNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional .proto_ff.FacadeSkillData skill_data = 2;
  inline bool has_skill_data() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 2;
  inline const ::proto_ff::FacadeSkillData& skill_data() const;
  inline ::proto_ff::FacadeSkillData* mutable_skill_data();
  inline ::proto_ff::FacadeSkillData* release_skill_data();
  inline void set_allocated_skill_data(::proto_ff::FacadeSkillData* skill_data);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSkillUnlockNotify)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_skill_data();
  inline void clear_has_skill_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::FacadeSkillData* skill_data_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeSkillUnlockNotify* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSkillLevReq : public ::google::protobuf::Message {
 public:
  FacadeSkillLevReq();
  virtual ~FacadeSkillLevReq();

  FacadeSkillLevReq(const FacadeSkillLevReq& from);

  inline FacadeSkillLevReq& operator=(const FacadeSkillLevReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSkillLevReq& default_instance();

  void Swap(FacadeSkillLevReq* other);

  // implements Message ----------------------------------------------

  FacadeSkillLevReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSkillLevReq& from);
  void MergeFrom(const FacadeSkillLevReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSkillLevReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeSkillLevReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeSkillLevRsp : public ::google::protobuf::Message {
 public:
  FacadeSkillLevRsp();
  virtual ~FacadeSkillLevRsp();

  FacadeSkillLevRsp(const FacadeSkillLevRsp& from);

  inline FacadeSkillLevRsp& operator=(const FacadeSkillLevRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeSkillLevRsp& default_instance();

  void Swap(FacadeSkillLevRsp* other);

  // implements Message ----------------------------------------------

  FacadeSkillLevRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeSkillLevRsp& from);
  void MergeFrom(const FacadeSkillLevRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional .proto_ff.FacadeSkillData skill_data = 3;
  inline bool has_skill_data() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 3;
  inline const ::proto_ff::FacadeSkillData& skill_data() const;
  inline ::proto_ff::FacadeSkillData* mutable_skill_data();
  inline ::proto_ff::FacadeSkillData* release_skill_data();
  inline void set_allocated_skill_data(::proto_ff::FacadeSkillData* skill_data);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeSkillLevRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_skill_data();
  inline void clear_has_skill_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;
  ::proto_ff::FacadeSkillData* skill_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeSkillLevRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeLevupReq : public ::google::protobuf::Message {
 public:
  FacadeLevupReq();
  virtual ~FacadeLevupReq();

  FacadeLevupReq(const FacadeLevupReq& from);

  inline FacadeLevupReq& operator=(const FacadeLevupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeLevupReq& default_instance();

  void Swap(FacadeLevupReq* other);

  // implements Message ----------------------------------------------

  FacadeLevupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeLevupReq& from);
  void MergeFrom(const FacadeLevupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 material_id = 2;
  inline bool has_material_id() const;
  inline void clear_material_id();
  static const int kMaterialIdFieldNumber = 2;
  inline ::google::protobuf::uint64 material_id() const;
  inline void set_material_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeLevupReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_material_id();
  inline void clear_has_material_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 material_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeLevupReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeLevupRsp : public ::google::protobuf::Message {
 public:
  FacadeLevupRsp();
  virtual ~FacadeLevupRsp();

  FacadeLevupRsp(const FacadeLevupRsp& from);

  inline FacadeLevupRsp& operator=(const FacadeLevupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeLevupRsp& default_instance();

  void Swap(FacadeLevupRsp* other);

  // implements Message ----------------------------------------------

  FacadeLevupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeLevupRsp& from);
  void MergeFrom(const FacadeLevupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional uint64 facade_id = 3;
  inline bool has_facade_id() const;
  inline void clear_facade_id();
  static const int kFacadeIdFieldNumber = 3;
  inline ::google::protobuf::uint64 facade_id() const;
  inline void set_facade_id(::google::protobuf::uint64 value);

  // optional uint32 facade_lev = 4;
  inline bool has_facade_lev() const;
  inline void clear_facade_lev();
  static const int kFacadeLevFieldNumber = 4;
  inline ::google::protobuf::uint32 facade_lev() const;
  inline void set_facade_lev(::google::protobuf::uint32 value);

  // optional uint64 facade_exp = 5;
  inline bool has_facade_exp() const;
  inline void clear_facade_exp();
  static const int kFacadeExpFieldNumber = 5;
  inline ::google::protobuf::uint64 facade_exp() const;
  inline void set_facade_exp(::google::protobuf::uint64 value);

  // optional uint64 fight_value = 8;
  inline bool has_fight_value() const;
  inline void clear_fight_value();
  static const int kFightValueFieldNumber = 8;
  inline ::google::protobuf::uint64 fight_value() const;
  inline void set_fight_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeLevupRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_facade_id();
  inline void clear_has_facade_id();
  inline void set_has_facade_lev();
  inline void clear_has_facade_lev();
  inline void set_has_facade_exp();
  inline void clear_has_facade_exp();
  inline void set_has_fight_value();
  inline void clear_has_fight_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;
  ::google::protobuf::uint64 facade_id_;
  ::google::protobuf::uint64 facade_exp_;
  ::google::protobuf::uint64 fight_value_;
  ::google::protobuf::uint32 facade_lev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeLevupRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeDressReq : public ::google::protobuf::Message {
 public:
  FacadeDressReq();
  virtual ~FacadeDressReq();

  FacadeDressReq(const FacadeDressReq& from);

  inline FacadeDressReq& operator=(const FacadeDressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeDressReq& default_instance();

  void Swap(FacadeDressReq* other);

  // implements Message ----------------------------------------------

  FacadeDressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeDressReq& from);
  void MergeFrom(const FacadeDressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeDressReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeDressReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeDressRsp : public ::google::protobuf::Message {
 public:
  FacadeDressRsp();
  virtual ~FacadeDressRsp();

  FacadeDressRsp(const FacadeDressRsp& from);

  inline FacadeDressRsp& operator=(const FacadeDressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeDressRsp& default_instance();

  void Swap(FacadeDressRsp* other);

  // implements Message ----------------------------------------------

  FacadeDressRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeDressRsp& from);
  void MergeFrom(const FacadeDressRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional bool use_facade = 3;
  inline bool has_use_facade() const;
  inline void clear_use_facade();
  static const int kUseFacadeFieldNumber = 3;
  inline bool use_facade() const;
  inline void set_use_facade(bool value);

  // optional uint64 fight_value = 8;
  inline bool has_fight_value() const;
  inline void clear_fight_value();
  static const int kFightValueFieldNumber = 8;
  inline ::google::protobuf::uint64 fight_value() const;
  inline void set_fight_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeDressRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_use_facade();
  inline void clear_has_use_facade();
  inline void set_has_fight_value();
  inline void clear_has_fight_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;
  ::google::protobuf::uint64 fight_value_;
  bool use_facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeDressRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeUnDressReq : public ::google::protobuf::Message {
 public:
  FacadeUnDressReq();
  virtual ~FacadeUnDressReq();

  FacadeUnDressReq(const FacadeUnDressReq& from);

  inline FacadeUnDressReq& operator=(const FacadeUnDressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeUnDressReq& default_instance();

  void Swap(FacadeUnDressReq* other);

  // implements Message ----------------------------------------------

  FacadeUnDressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeUnDressReq& from);
  void MergeFrom(const FacadeUnDressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeUnDressReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeUnDressReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeUnDressRsp : public ::google::protobuf::Message {
 public:
  FacadeUnDressRsp();
  virtual ~FacadeUnDressRsp();

  FacadeUnDressRsp(const FacadeUnDressRsp& from);

  inline FacadeUnDressRsp& operator=(const FacadeUnDressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeUnDressRsp& default_instance();

  void Swap(FacadeUnDressRsp* other);

  // implements Message ----------------------------------------------

  FacadeUnDressRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeUnDressRsp& from);
  void MergeFrom(const FacadeUnDressRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional bool use_facade = 3;
  inline bool has_use_facade() const;
  inline void clear_use_facade();
  static const int kUseFacadeFieldNumber = 3;
  inline bool use_facade() const;
  inline void set_use_facade(bool value);

  // optional uint64 fight_value = 8;
  inline bool has_fight_value() const;
  inline void clear_fight_value();
  static const int kFightValueFieldNumber = 8;
  inline ::google::protobuf::uint64 fight_value() const;
  inline void set_fight_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeUnDressRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_use_facade();
  inline void clear_has_use_facade();
  inline void set_has_fight_value();
  inline void clear_has_fight_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;
  ::google::protobuf::uint64 fight_value_;
  bool use_facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeUnDressRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFragmentUseReq : public ::google::protobuf::Message {
 public:
  FacadeFragmentUseReq();
  virtual ~FacadeFragmentUseReq();

  FacadeFragmentUseReq(const FacadeFragmentUseReq& from);

  inline FacadeFragmentUseReq& operator=(const FacadeFragmentUseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFragmentUseReq& default_instance();

  void Swap(FacadeFragmentUseReq* other);

  // implements Message ----------------------------------------------

  FacadeFragmentUseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFragmentUseReq& from);
  void MergeFrom(const FacadeFragmentUseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 fragment_id = 2;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 2;
  inline ::google::protobuf::uint64 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFragmentUseReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fragment_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFragmentUseReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFragmentUseRsp : public ::google::protobuf::Message {
 public:
  FacadeFragmentUseRsp();
  virtual ~FacadeFragmentUseRsp();

  FacadeFragmentUseRsp(const FacadeFragmentUseRsp& from);

  inline FacadeFragmentUseRsp& operator=(const FacadeFragmentUseRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFragmentUseRsp& default_instance();

  void Swap(FacadeFragmentUseRsp* other);

  // implements Message ----------------------------------------------

  FacadeFragmentUseRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFragmentUseRsp& from);
  void MergeFrom(const FacadeFragmentUseRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // repeated .proto_ff.FacadeFragmentData fragment_data = 3;
  inline int fragment_data_size() const;
  inline void clear_fragment_data();
  static const int kFragmentDataFieldNumber = 3;
  inline const ::proto_ff::FacadeFragmentData& fragment_data(int index) const;
  inline ::proto_ff::FacadeFragmentData* mutable_fragment_data(int index);
  inline ::proto_ff::FacadeFragmentData* add_fragment_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >&
      fragment_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >*
      mutable_fragment_data();

  // optional uint64 fight_value = 4;
  inline bool has_fight_value() const;
  inline void clear_fight_value();
  static const int kFightValueFieldNumber = 4;
  inline ::google::protobuf::uint64 fight_value() const;
  inline void set_fight_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFragmentUseRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_fight_value();
  inline void clear_has_fight_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData > fragment_data_;
  ::google::protobuf::uint64 fight_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFragmentUseRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyInfoReq : public ::google::protobuf::Message {
 public:
  FacadeFantasyInfoReq();
  virtual ~FacadeFantasyInfoReq();

  FacadeFantasyInfoReq(const FacadeFantasyInfoReq& from);

  inline FacadeFantasyInfoReq& operator=(const FacadeFantasyInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyInfoReq& default_instance();

  void Swap(FacadeFantasyInfoReq* other);

  // implements Message ----------------------------------------------

  FacadeFantasyInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyInfoReq& from);
  void MergeFrom(const FacadeFantasyInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyInfoReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyInfoRsp : public ::google::protobuf::Message {
 public:
  FacadeFantasyInfoRsp();
  virtual ~FacadeFantasyInfoRsp();

  FacadeFantasyInfoRsp(const FacadeFantasyInfoRsp& from);

  inline FacadeFantasyInfoRsp& operator=(const FacadeFantasyInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyInfoRsp& default_instance();

  void Swap(FacadeFantasyInfoRsp* other);

  // implements Message ----------------------------------------------

  FacadeFantasyInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyInfoRsp& from);
  void MergeFrom(const FacadeFantasyInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // repeated .proto_ff.FacadeFantasyData fantasy_data = 5;
  inline int fantasy_data_size() const;
  inline void clear_fantasy_data();
  static const int kFantasyDataFieldNumber = 5;
  inline const ::proto_ff::FacadeFantasyData& fantasy_data(int index) const;
  inline ::proto_ff::FacadeFantasyData* mutable_fantasy_data(int index);
  inline ::proto_ff::FacadeFantasyData* add_fantasy_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >&
      fantasy_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >*
      mutable_fantasy_data();

  // optional uint64 equip_fantasy_id = 6;
  inline bool has_equip_fantasy_id() const;
  inline void clear_equip_fantasy_id();
  static const int kEquipFantasyIdFieldNumber = 6;
  inline ::google::protobuf::uint64 equip_fantasy_id() const;
  inline void set_equip_fantasy_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyInfoRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_equip_fantasy_id();
  inline void clear_has_equip_fantasy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData > fantasy_data_;
  ::google::protobuf::uint64 equip_fantasy_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyActiveReq : public ::google::protobuf::Message {
 public:
  FacadeFantasyActiveReq();
  virtual ~FacadeFantasyActiveReq();

  FacadeFantasyActiveReq(const FacadeFantasyActiveReq& from);

  inline FacadeFantasyActiveReq& operator=(const FacadeFantasyActiveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyActiveReq& default_instance();

  void Swap(FacadeFantasyActiveReq* other);

  // implements Message ----------------------------------------------

  FacadeFantasyActiveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyActiveReq& from);
  void MergeFrom(const FacadeFantasyActiveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 fantasy_id = 2;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyActiveReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyActiveReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFastasyActiveRsp : public ::google::protobuf::Message {
 public:
  FacadeFastasyActiveRsp();
  virtual ~FacadeFastasyActiveRsp();

  FacadeFastasyActiveRsp(const FacadeFastasyActiveRsp& from);

  inline FacadeFastasyActiveRsp& operator=(const FacadeFastasyActiveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFastasyActiveRsp& default_instance();

  void Swap(FacadeFastasyActiveRsp* other);

  // implements Message ----------------------------------------------

  FacadeFastasyActiveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFastasyActiveRsp& from);
  void MergeFrom(const FacadeFastasyActiveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional .proto_ff.FacadeFantasyData fantasy_data = 2;
  inline bool has_fantasy_data() const;
  inline void clear_fantasy_data();
  static const int kFantasyDataFieldNumber = 2;
  inline const ::proto_ff::FacadeFantasyData& fantasy_data() const;
  inline ::proto_ff::FacadeFantasyData* mutable_fantasy_data();
  inline ::proto_ff::FacadeFantasyData* release_fantasy_data();
  inline void set_allocated_fantasy_data(::proto_ff::FacadeFantasyData* fantasy_data);

  // optional uint32 ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFastasyActiveRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_fantasy_data();
  inline void clear_has_fantasy_data();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::FacadeFantasyData* fantasy_data_;
  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFastasyActiveRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFantasyLevelupReq : public ::google::protobuf::Message {
 public:
  FacadeFantasyLevelupReq();
  virtual ~FacadeFantasyLevelupReq();

  FacadeFantasyLevelupReq(const FacadeFantasyLevelupReq& from);

  inline FacadeFantasyLevelupReq& operator=(const FacadeFantasyLevelupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFantasyLevelupReq& default_instance();

  void Swap(FacadeFantasyLevelupReq* other);

  // implements Message ----------------------------------------------

  FacadeFantasyLevelupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFantasyLevelupReq& from);
  void MergeFrom(const FacadeFantasyLevelupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 fantasy_id = 2;
  inline bool has_fantasy_id() const;
  inline void clear_fantasy_id();
  static const int kFantasyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 fantasy_id() const;
  inline void set_fantasy_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFantasyLevelupReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_fantasy_id();
  inline void clear_has_fantasy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fantasy_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFantasyLevelupReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFastasyLevelupRsp : public ::google::protobuf::Message {
 public:
  FacadeFastasyLevelupRsp();
  virtual ~FacadeFastasyLevelupRsp();

  FacadeFastasyLevelupRsp(const FacadeFastasyLevelupRsp& from);

  inline FacadeFastasyLevelupRsp& operator=(const FacadeFastasyLevelupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFastasyLevelupRsp& default_instance();

  void Swap(FacadeFastasyLevelupRsp* other);

  // implements Message ----------------------------------------------

  FacadeFastasyLevelupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFastasyLevelupRsp& from);
  void MergeFrom(const FacadeFastasyLevelupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional .proto_ff.FacadeFantasyData fantasy_data = 2;
  inline bool has_fantasy_data() const;
  inline void clear_fantasy_data();
  static const int kFantasyDataFieldNumber = 2;
  inline const ::proto_ff::FacadeFantasyData& fantasy_data() const;
  inline ::proto_ff::FacadeFantasyData* mutable_fantasy_data();
  inline ::proto_ff::FacadeFantasyData* release_fantasy_data();
  inline void set_allocated_fantasy_data(::proto_ff::FacadeFantasyData* fantasy_data);

  // optional uint32 ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFastasyLevelupRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_fantasy_data();
  inline void clear_has_fantasy_data();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::FacadeFantasyData* fantasy_data_;
  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFastasyLevelupRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFastasyDressReq : public ::google::protobuf::Message {
 public:
  FacadeFastasyDressReq();
  virtual ~FacadeFastasyDressReq();

  FacadeFastasyDressReq(const FacadeFastasyDressReq& from);

  inline FacadeFastasyDressReq& operator=(const FacadeFastasyDressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFastasyDressReq& default_instance();

  void Swap(FacadeFastasyDressReq* other);

  // implements Message ----------------------------------------------

  FacadeFastasyDressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFastasyDressReq& from);
  void MergeFrom(const FacadeFastasyDressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 equip_fantasy_id = 2;
  inline bool has_equip_fantasy_id() const;
  inline void clear_equip_fantasy_id();
  static const int kEquipFantasyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 equip_fantasy_id() const;
  inline void set_equip_fantasy_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFastasyDressReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_equip_fantasy_id();
  inline void clear_has_equip_fantasy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_fantasy_id_;
  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFastasyDressReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFastasyDressRsp : public ::google::protobuf::Message {
 public:
  FacadeFastasyDressRsp();
  virtual ~FacadeFastasyDressRsp();

  FacadeFastasyDressRsp(const FacadeFastasyDressRsp& from);

  inline FacadeFastasyDressRsp& operator=(const FacadeFastasyDressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFastasyDressRsp& default_instance();

  void Swap(FacadeFastasyDressRsp* other);

  // implements Message ----------------------------------------------

  FacadeFastasyDressRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFastasyDressRsp& from);
  void MergeFrom(const FacadeFastasyDressRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // optional uint64 equip_fantasy_id = 3;
  inline bool has_equip_fantasy_id() const;
  inline void clear_equip_fantasy_id();
  static const int kEquipFantasyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 equip_fantasy_id() const;
  inline void set_equip_fantasy_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFastasyDressRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_equip_fantasy_id();
  inline void clear_has_equip_fantasy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;
  ::google::protobuf::uint64 equip_fantasy_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFastasyDressRsp* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFastasyUnDressReq : public ::google::protobuf::Message {
 public:
  FacadeFastasyUnDressReq();
  virtual ~FacadeFastasyUnDressReq();

  FacadeFastasyUnDressReq(const FacadeFastasyUnDressReq& from);

  inline FacadeFastasyUnDressReq& operator=(const FacadeFastasyUnDressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFastasyUnDressReq& default_instance();

  void Swap(FacadeFastasyUnDressReq* other);

  // implements Message ----------------------------------------------

  FacadeFastasyUnDressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFastasyUnDressReq& from);
  void MergeFrom(const FacadeFastasyUnDressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFastasyUnDressReq)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFastasyUnDressReq* default_instance_;
};
// -------------------------------------------------------------------

class FacadeFastasyUnDressRsp : public ::google::protobuf::Message {
 public:
  FacadeFastasyUnDressRsp();
  virtual ~FacadeFastasyUnDressRsp();

  FacadeFastasyUnDressRsp(const FacadeFastasyUnDressRsp& from);

  inline FacadeFastasyUnDressRsp& operator=(const FacadeFastasyUnDressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeFastasyUnDressRsp& default_instance();

  void Swap(FacadeFastasyUnDressRsp* other);

  // implements Message ----------------------------------------------

  FacadeFastasyUnDressRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeFastasyUnDressRsp& from);
  void MergeFrom(const FacadeFastasyUnDressRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 ret_code() const;
  inline void set_ret_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeFastasyUnDressRsp)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static FacadeFastasyUnDressRsp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSeatReq : public ::google::protobuf::Message {
 public:
  PlayerSeatReq();
  virtual ~PlayerSeatReq();

  PlayerSeatReq(const PlayerSeatReq& from);

  inline PlayerSeatReq& operator=(const PlayerSeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSeatReq& default_instance();

  void Swap(PlayerSeatReq* other);

  // implements Message ----------------------------------------------

  PlayerSeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerSeatReq& from);
  void MergeFrom(const PlayerSeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerSeatReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerSeatReq* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSeatRsp : public ::google::protobuf::Message {
 public:
  PlayerSeatRsp();
  virtual ~PlayerSeatRsp();

  PlayerSeatRsp(const PlayerSeatRsp& from);

  inline PlayerSeatRsp& operator=(const PlayerSeatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSeatRsp& default_instance();

  void Swap(PlayerSeatRsp* other);

  // implements Message ----------------------------------------------

  PlayerSeatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerSeatRsp& from);
  void MergeFrom(const PlayerSeatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 online_hangup_time = 4;
  inline bool has_online_hangup_time() const;
  inline void clear_online_hangup_time();
  static const int kOnlineHangupTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 online_hangup_time() const;
  inline void set_online_hangup_time(::google::protobuf::uint32 value);

  // optional uint64 online_all_exp = 5;
  inline bool has_online_all_exp() const;
  inline void clear_online_all_exp();
  static const int kOnlineAllExpFieldNumber = 5;
  inline ::google::protobuf::uint64 online_all_exp() const;
  inline void set_online_all_exp(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::proto_ff::ComPair64& items(int index) const;
  inline ::proto_ff::ComPair64* mutable_items(int index);
  inline ::proto_ff::ComPair64* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerSeatRsp)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_online_hangup_time();
  inline void clear_has_online_hangup_time();
  inline void set_has_online_all_exp();
  inline void clear_has_online_all_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint64 online_all_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > items_;
  ::google::protobuf::uint32 online_hangup_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerSeatRsp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSeatExpRsp : public ::google::protobuf::Message {
 public:
  PlayerSeatExpRsp();
  virtual ~PlayerSeatExpRsp();

  PlayerSeatExpRsp(const PlayerSeatExpRsp& from);

  inline PlayerSeatExpRsp& operator=(const PlayerSeatExpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSeatExpRsp& default_instance();

  void Swap(PlayerSeatExpRsp* other);

  // implements Message ----------------------------------------------

  PlayerSeatExpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerSeatExpRsp& from);
  void MergeFrom(const PlayerSeatExpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // optional uint32 online_hangup_time = 2;
  inline bool has_online_hangup_time() const;
  inline void clear_online_hangup_time();
  static const int kOnlineHangupTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 online_hangup_time() const;
  inline void set_online_hangup_time(::google::protobuf::uint32 value);

  // optional uint64 online_all_exp = 3;
  inline bool has_online_all_exp() const;
  inline void clear_online_all_exp();
  static const int kOnlineAllExpFieldNumber = 3;
  inline ::google::protobuf::uint64 online_all_exp() const;
  inline void set_online_all_exp(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::proto_ff::ComPair64& items(int index) const;
  inline ::proto_ff::ComPair64* mutable_items(int index);
  inline ::proto_ff::ComPair64* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerSeatExpRsp)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_online_hangup_time();
  inline void clear_has_online_hangup_time();
  inline void set_has_online_all_exp();
  inline void clear_has_online_all_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint64 online_all_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > items_;
  ::google::protobuf::uint32 online_hangup_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerSeatExpRsp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginHangUpDataReq : public ::google::protobuf::Message {
 public:
  PlayerLoginHangUpDataReq();
  virtual ~PlayerLoginHangUpDataReq();

  PlayerLoginHangUpDataReq(const PlayerLoginHangUpDataReq& from);

  inline PlayerLoginHangUpDataReq& operator=(const PlayerLoginHangUpDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginHangUpDataReq& default_instance();

  void Swap(PlayerLoginHangUpDataReq* other);

  // implements Message ----------------------------------------------

  PlayerLoginHangUpDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLoginHangUpDataReq& from);
  void MergeFrom(const PlayerLoginHangUpDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerLoginHangUpDataReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginHangUpDataReq* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginHangUpDataRsp : public ::google::protobuf::Message {
 public:
  PlayerLoginHangUpDataRsp();
  virtual ~PlayerLoginHangUpDataRsp();

  PlayerLoginHangUpDataRsp(const PlayerLoginHangUpDataRsp& from);

  inline PlayerLoginHangUpDataRsp& operator=(const PlayerLoginHangUpDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginHangUpDataRsp& default_instance();

  void Swap(PlayerLoginHangUpDataRsp* other);

  // implements Message ----------------------------------------------

  PlayerLoginHangUpDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLoginHangUpDataRsp& from);
  void MergeFrom(const PlayerLoginHangUpDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hangup_time = 1;
  inline bool has_hangup_time() const;
  inline void clear_hangup_time();
  static const int kHangupTimeFieldNumber = 1;
  inline ::google::protobuf::int32 hangup_time() const;
  inline void set_hangup_time(::google::protobuf::int32 value);

  // optional int32 hangup_surplus_time = 2;
  inline bool has_hangup_surplus_time() const;
  inline void clear_hangup_surplus_time();
  static const int kHangupSurplusTimeFieldNumber = 2;
  inline ::google::protobuf::int32 hangup_surplus_time() const;
  inline void set_hangup_surplus_time(::google::protobuf::int32 value);

  // optional uint64 add_exp = 3;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::uint64 add_exp() const;
  inline void set_add_exp(::google::protobuf::uint64 value);

  // optional int32 before_lv = 4;
  inline bool has_before_lv() const;
  inline void clear_before_lv();
  static const int kBeforeLvFieldNumber = 4;
  inline ::google::protobuf::int32 before_lv() const;
  inline void set_before_lv(::google::protobuf::int32 value);

  // optional int32 after_lv = 5;
  inline bool has_after_lv() const;
  inline void clear_after_lv();
  static const int kAfterLvFieldNumber = 5;
  inline ::google::protobuf::int32 after_lv() const;
  inline void set_after_lv(::google::protobuf::int32 value);

  // optional uint64 before_fight = 6;
  inline bool has_before_fight() const;
  inline void clear_before_fight();
  static const int kBeforeFightFieldNumber = 6;
  inline ::google::protobuf::uint64 before_fight() const;
  inline void set_before_fight(::google::protobuf::uint64 value);

  // optional uint64 after_fight = 7;
  inline bool has_after_fight() const;
  inline void clear_after_fight();
  static const int kAfterFightFieldNumber = 7;
  inline ::google::protobuf::uint64 after_fight() const;
  inline void set_after_fight(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::proto_ff::ComPair64& items(int index) const;
  inline ::proto_ff::ComPair64* mutable_items(int index);
  inline ::proto_ff::ComPair64* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_items();

  // repeated int32 add_value = 9;
  inline int add_value_size() const;
  inline void clear_add_value();
  static const int kAddValueFieldNumber = 9;
  inline ::google::protobuf::int32 add_value(int index) const;
  inline void set_add_value(int index, ::google::protobuf::int32 value);
  inline void add_add_value(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      add_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_add_value();

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerLoginHangUpDataRsp)
 private:
  inline void set_has_hangup_time();
  inline void clear_has_hangup_time();
  inline void set_has_hangup_surplus_time();
  inline void clear_has_hangup_surplus_time();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  inline void set_has_before_lv();
  inline void clear_has_before_lv();
  inline void set_has_after_lv();
  inline void clear_has_after_lv();
  inline void set_has_before_fight();
  inline void clear_has_before_fight();
  inline void set_has_after_fight();
  inline void clear_has_after_fight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 hangup_time_;
  ::google::protobuf::int32 hangup_surplus_time_;
  ::google::protobuf::uint64 add_exp_;
  ::google::protobuf::int32 before_lv_;
  ::google::protobuf::int32 after_lv_;
  ::google::protobuf::uint64 before_fight_;
  ::google::protobuf::uint64 after_fight_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > add_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginHangUpDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHangUpRewardReq : public ::google::protobuf::Message {
 public:
  PlayerHangUpRewardReq();
  virtual ~PlayerHangUpRewardReq();

  PlayerHangUpRewardReq(const PlayerHangUpRewardReq& from);

  inline PlayerHangUpRewardReq& operator=(const PlayerHangUpRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHangUpRewardReq& default_instance();

  void Swap(PlayerHangUpRewardReq* other);

  // implements Message ----------------------------------------------

  PlayerHangUpRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerHangUpRewardReq& from);
  void MergeFrom(const PlayerHangUpRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerHangUpRewardReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerHangUpRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHangUpRewardRsp : public ::google::protobuf::Message {
 public:
  PlayerHangUpRewardRsp();
  virtual ~PlayerHangUpRewardRsp();

  PlayerHangUpRewardRsp(const PlayerHangUpRewardRsp& from);

  inline PlayerHangUpRewardRsp& operator=(const PlayerHangUpRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHangUpRewardRsp& default_instance();

  void Swap(PlayerHangUpRewardRsp* other);

  // implements Message ----------------------------------------------

  PlayerHangUpRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerHangUpRewardRsp& from);
  void MergeFrom(const PlayerHangUpRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerHangUpRewardRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerHangUpRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyTaskDataReq : public ::google::protobuf::Message {
 public:
  GetDailyTaskDataReq();
  virtual ~GetDailyTaskDataReq();

  GetDailyTaskDataReq(const GetDailyTaskDataReq& from);

  inline GetDailyTaskDataReq& operator=(const GetDailyTaskDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyTaskDataReq& default_instance();

  void Swap(GetDailyTaskDataReq* other);

  // implements Message ----------------------------------------------

  GetDailyTaskDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyTaskDataReq& from);
  void MergeFrom(const GetDailyTaskDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GetDailyTaskDataReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static GetDailyTaskDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyTaskDataRsp : public ::google::protobuf::Message {
 public:
  GetDailyTaskDataRsp();
  virtual ~GetDailyTaskDataRsp();

  GetDailyTaskDataRsp(const GetDailyTaskDataRsp& from);

  inline GetDailyTaskDataRsp& operator=(const GetDailyTaskDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyTaskDataRsp& default_instance();

  void Swap(GetDailyTaskDataRsp* other);

  // implements Message ----------------------------------------------

  GetDailyTaskDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyTaskDataRsp& from);
  void MergeFrom(const GetDailyTaskDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.DailyTaskAllData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::DailyTaskAllData& data() const;
  inline ::proto_ff::DailyTaskAllData* mutable_data();
  inline ::proto_ff::DailyTaskAllData* release_data();
  inline void set_allocated_data(::proto_ff::DailyTaskAllData* data);

  // @@protoc_insertion_point(class_scope:proto_ff.GetDailyTaskDataRsp)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::DailyTaskAllData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static GetDailyTaskDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class UpdateDailyTaskNotify : public ::google::protobuf::Message {
 public:
  UpdateDailyTaskNotify();
  virtual ~UpdateDailyTaskNotify();

  UpdateDailyTaskNotify(const UpdateDailyTaskNotify& from);

  inline UpdateDailyTaskNotify& operator=(const UpdateDailyTaskNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDailyTaskNotify& default_instance();

  void Swap(UpdateDailyTaskNotify* other);

  // implements Message ----------------------------------------------

  UpdateDailyTaskNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDailyTaskNotify& from);
  void MergeFrom(const UpdateDailyTaskNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DailyTaskEntry data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::DailyTaskEntry& data(int index) const;
  inline ::proto_ff::DailyTaskEntry* mutable_data(int index);
  inline ::proto_ff::DailyTaskEntry* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
      mutable_data();

  // repeated .proto_ff.DailyTaskLimitEntry limit_data = 2;
  inline int limit_data_size() const;
  inline void clear_limit_data();
  static const int kLimitDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskLimitEntry& limit_data(int index) const;
  inline ::proto_ff::DailyTaskLimitEntry* mutable_limit_data(int index);
  inline ::proto_ff::DailyTaskLimitEntry* add_limit_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
      limit_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
      mutable_limit_data();

  // repeated .proto_ff.DailyTaskRewardEntry reward_data = 3;
  inline int reward_data_size() const;
  inline void clear_reward_data();
  static const int kRewardDataFieldNumber = 3;
  inline const ::proto_ff::DailyTaskRewardEntry& reward_data(int index) const;
  inline ::proto_ff::DailyTaskRewardEntry* mutable_reward_data(int index);
  inline ::proto_ff::DailyTaskRewardEntry* add_reward_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
      reward_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
      mutable_reward_data();

  // repeated .proto_ff.DailyTaskBackEntry back_data = 4;
  inline int back_data_size() const;
  inline void clear_back_data();
  static const int kBackDataFieldNumber = 4;
  inline const ::proto_ff::DailyTaskBackEntry& back_data(int index) const;
  inline ::proto_ff::DailyTaskBackEntry* mutable_back_data(int index);
  inline ::proto_ff::DailyTaskBackEntry* add_back_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
      back_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
      mutable_back_data();

  // optional uint32 daily_score = 5;
  inline bool has_daily_score() const;
  inline void clear_daily_score();
  static const int kDailyScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_score() const;
  inline void set_daily_score(::google::protobuf::uint32 value);

  // optional uint64 daily_exp = 6;
  inline bool has_daily_exp() const;
  inline void clear_daily_exp();
  static const int kDailyExpFieldNumber = 6;
  inline ::google::protobuf::uint64 daily_exp() const;
  inline void set_daily_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.UpdateDailyTaskNotify)
 private:
  inline void set_has_daily_score();
  inline void clear_has_daily_score();
  inline void set_has_daily_exp();
  inline void clear_has_daily_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry > data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry > limit_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry > reward_data_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry > back_data_;
  ::google::protobuf::uint64 daily_exp_;
  ::google::protobuf::uint32 daily_score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static UpdateDailyTaskNotify* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyTaskRewardReq : public ::google::protobuf::Message {
 public:
  GetDailyTaskRewardReq();
  virtual ~GetDailyTaskRewardReq();

  GetDailyTaskRewardReq(const GetDailyTaskRewardReq& from);

  inline GetDailyTaskRewardReq& operator=(const GetDailyTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyTaskRewardReq& default_instance();

  void Swap(GetDailyTaskRewardReq* other);

  // implements Message ----------------------------------------------

  GetDailyTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyTaskRewardReq& from);
  void MergeFrom(const GetDailyTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GetDailyTaskRewardReq)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reward_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static GetDailyTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetDailyTaskRewardRsp : public ::google::protobuf::Message {
 public:
  GetDailyTaskRewardRsp();
  virtual ~GetDailyTaskRewardRsp();

  GetDailyTaskRewardRsp(const GetDailyTaskRewardRsp& from);

  inline GetDailyTaskRewardRsp& operator=(const GetDailyTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDailyTaskRewardRsp& default_instance();

  void Swap(GetDailyTaskRewardRsp* other);

  // implements Message ----------------------------------------------

  GetDailyTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDailyTaskRewardRsp& from);
  void MergeFrom(const GetDailyTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional int32 reward_id = 2;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GetDailyTaskRewardRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;
  ::google::protobuf::int32 reward_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static GetDailyTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskLevelupReq : public ::google::protobuf::Message {
 public:
  DailyTaskLevelupReq();
  virtual ~DailyTaskLevelupReq();

  DailyTaskLevelupReq(const DailyTaskLevelupReq& from);

  inline DailyTaskLevelupReq& operator=(const DailyTaskLevelupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskLevelupReq& default_instance();

  void Swap(DailyTaskLevelupReq* other);

  // implements Message ----------------------------------------------

  DailyTaskLevelupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskLevelupReq& from);
  void MergeFrom(const DailyTaskLevelupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskLevelupReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskLevelupReq* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskLevelupRsp : public ::google::protobuf::Message {
 public:
  DailyTaskLevelupRsp();
  virtual ~DailyTaskLevelupRsp();

  DailyTaskLevelupRsp(const DailyTaskLevelupRsp& from);

  inline DailyTaskLevelupRsp& operator=(const DailyTaskLevelupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskLevelupRsp& default_instance();

  void Swap(DailyTaskLevelupRsp* other);

  // implements Message ----------------------------------------------

  DailyTaskLevelupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskLevelupRsp& from);
  void MergeFrom(const DailyTaskLevelupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional uint32 daily_level = 2;
  inline bool has_daily_level() const;
  inline void clear_daily_level();
  static const int kDailyLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_level() const;
  inline void set_daily_level(::google::protobuf::uint32 value);

  // optional uint64 daily_exp = 3;
  inline bool has_daily_exp() const;
  inline void clear_daily_exp();
  static const int kDailyExpFieldNumber = 3;
  inline ::google::protobuf::uint64 daily_exp() const;
  inline void set_daily_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyTaskLevelupRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_daily_level();
  inline void clear_has_daily_level();
  inline void set_has_daily_exp();
  inline void clear_has_daily_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;
  ::google::protobuf::uint32 daily_level_;
  ::google::protobuf::uint64 daily_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskLevelupRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyLimitTaskAddReadyReq : public ::google::protobuf::Message {
 public:
  DailyLimitTaskAddReadyReq();
  virtual ~DailyLimitTaskAddReadyReq();

  DailyLimitTaskAddReadyReq(const DailyLimitTaskAddReadyReq& from);

  inline DailyLimitTaskAddReadyReq& operator=(const DailyLimitTaskAddReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyLimitTaskAddReadyReq& default_instance();

  void Swap(DailyLimitTaskAddReadyReq* other);

  // implements Message ----------------------------------------------

  DailyLimitTaskAddReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyLimitTaskAddReadyReq& from);
  void MergeFrom(const DailyLimitTaskAddReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int64 task_id() const;
  inline void set_task_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyLimitTaskAddReadyReq)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 task_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyLimitTaskAddReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class DailyLimitTaskAddReadyRsp : public ::google::protobuf::Message {
 public:
  DailyLimitTaskAddReadyRsp();
  virtual ~DailyLimitTaskAddReadyRsp();

  DailyLimitTaskAddReadyRsp(const DailyLimitTaskAddReadyRsp& from);

  inline DailyLimitTaskAddReadyRsp& operator=(const DailyLimitTaskAddReadyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyLimitTaskAddReadyRsp& default_instance();

  void Swap(DailyLimitTaskAddReadyRsp* other);

  // implements Message ----------------------------------------------

  DailyLimitTaskAddReadyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyLimitTaskAddReadyRsp& from);
  void MergeFrom(const DailyLimitTaskAddReadyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional .proto_ff.DailyTaskLimitEntry data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskLimitEntry& data() const;
  inline ::proto_ff::DailyTaskLimitEntry* mutable_data();
  inline ::proto_ff::DailyTaskLimitEntry* release_data();
  inline void set_allocated_data(::proto_ff::DailyTaskLimitEntry* data);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyLimitTaskAddReadyRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::DailyTaskLimitEntry* data_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyLimitTaskAddReadyRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyBackTaskBackReq : public ::google::protobuf::Message {
 public:
  DailyBackTaskBackReq();
  virtual ~DailyBackTaskBackReq();

  DailyBackTaskBackReq(const DailyBackTaskBackReq& from);

  inline DailyBackTaskBackReq& operator=(const DailyBackTaskBackReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyBackTaskBackReq& default_instance();

  void Swap(DailyBackTaskBackReq* other);

  // implements Message ----------------------------------------------

  DailyBackTaskBackReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyBackTaskBackReq& from);
  void MergeFrom(const DailyBackTaskBackReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 back_id = 1;
  inline bool has_back_id() const;
  inline void clear_back_id();
  static const int kBackIdFieldNumber = 1;
  inline ::google::protobuf::int64 back_id() const;
  inline void set_back_id(::google::protobuf::int64 value);

  // optional int32 left_time = 2;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 2;
  inline ::google::protobuf::int32 left_time() const;
  inline void set_left_time(::google::protobuf::int32 value);

  // optional int32 external_left_time = 3;
  inline bool has_external_left_time() const;
  inline void clear_external_left_time();
  static const int kExternalLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 external_left_time() const;
  inline void set_external_left_time(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyBackTaskBackReq)
 private:
  inline void set_has_back_id();
  inline void clear_has_back_id();
  inline void set_has_left_time();
  inline void clear_has_left_time();
  inline void set_has_external_left_time();
  inline void clear_has_external_left_time();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 back_id_;
  ::google::protobuf::int32 left_time_;
  ::google::protobuf::int32 external_left_time_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyBackTaskBackReq* default_instance_;
};
// -------------------------------------------------------------------

class DailyBackTaskBackRsp : public ::google::protobuf::Message {
 public:
  DailyBackTaskBackRsp();
  virtual ~DailyBackTaskBackRsp();

  DailyBackTaskBackRsp(const DailyBackTaskBackRsp& from);

  inline DailyBackTaskBackRsp& operator=(const DailyBackTaskBackRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyBackTaskBackRsp& default_instance();

  void Swap(DailyBackTaskBackRsp* other);

  // implements Message ----------------------------------------------

  DailyBackTaskBackRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyBackTaskBackRsp& from);
  void MergeFrom(const DailyBackTaskBackRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional .proto_ff.DailyTaskBackEntry data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskBackEntry& data() const;
  inline ::proto_ff::DailyTaskBackEntry* mutable_data();
  inline ::proto_ff::DailyTaskBackEntry* release_data();
  inline void set_allocated_data(::proto_ff::DailyTaskBackEntry* data);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyBackTaskBackRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::DailyTaskBackEntry* data_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyBackTaskBackRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyLimitTaskAddAllReadyReq : public ::google::protobuf::Message {
 public:
  DailyLimitTaskAddAllReadyReq();
  virtual ~DailyLimitTaskAddAllReadyReq();

  DailyLimitTaskAddAllReadyReq(const DailyLimitTaskAddAllReadyReq& from);

  inline DailyLimitTaskAddAllReadyReq& operator=(const DailyLimitTaskAddAllReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyLimitTaskAddAllReadyReq& default_instance();

  void Swap(DailyLimitTaskAddAllReadyReq* other);

  // implements Message ----------------------------------------------

  DailyLimitTaskAddAllReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyLimitTaskAddAllReadyReq& from);
  void MergeFrom(const DailyLimitTaskAddAllReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DailyLimitTaskAddAllReadyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyLimitTaskAddAllReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class DailyLimitTaskAddAllReadyRsp : public ::google::protobuf::Message {
 public:
  DailyLimitTaskAddAllReadyRsp();
  virtual ~DailyLimitTaskAddAllReadyRsp();

  DailyLimitTaskAddAllReadyRsp(const DailyLimitTaskAddAllReadyRsp& from);

  inline DailyLimitTaskAddAllReadyRsp& operator=(const DailyLimitTaskAddAllReadyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyLimitTaskAddAllReadyRsp& default_instance();

  void Swap(DailyLimitTaskAddAllReadyRsp* other);

  // implements Message ----------------------------------------------

  DailyLimitTaskAddAllReadyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyLimitTaskAddAllReadyRsp& from);
  void MergeFrom(const DailyLimitTaskAddAllReadyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // repeated .proto_ff.DailyTaskLimitEntry data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskLimitEntry& data(int index) const;
  inline ::proto_ff::DailyTaskLimitEntry* mutable_data(int index);
  inline ::proto_ff::DailyTaskLimitEntry* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.DailyLimitTaskAddAllReadyRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry > data_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyLimitTaskAddAllReadyRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyBackTaskBackAllReq : public ::google::protobuf::Message {
 public:
  DailyBackTaskBackAllReq();
  virtual ~DailyBackTaskBackAllReq();

  DailyBackTaskBackAllReq(const DailyBackTaskBackAllReq& from);

  inline DailyBackTaskBackAllReq& operator=(const DailyBackTaskBackAllReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyBackTaskBackAllReq& default_instance();

  void Swap(DailyBackTaskBackAllReq* other);

  // implements Message ----------------------------------------------

  DailyBackTaskBackAllReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyBackTaskBackAllReq& from);
  void MergeFrom(const DailyBackTaskBackAllReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bool back = 2;
  inline bool has_back() const;
  inline void clear_back();
  static const int kBackFieldNumber = 2;
  inline bool back() const;
  inline void set_back(bool value);

  // optional bool external_back = 3;
  inline bool has_external_back() const;
  inline void clear_external_back();
  static const int kExternalBackFieldNumber = 3;
  inline bool external_back() const;
  inline void set_external_back(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.DailyBackTaskBackAllReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_back();
  inline void clear_has_back();
  inline void set_has_external_back();
  inline void clear_has_external_back();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  bool back_;
  bool external_back_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyBackTaskBackAllReq* default_instance_;
};
// -------------------------------------------------------------------

class DailyBackTaskBackAllRsp : public ::google::protobuf::Message {
 public:
  DailyBackTaskBackAllRsp();
  virtual ~DailyBackTaskBackAllRsp();

  DailyBackTaskBackAllRsp(const DailyBackTaskBackAllRsp& from);

  inline DailyBackTaskBackAllRsp& operator=(const DailyBackTaskBackAllRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyBackTaskBackAllRsp& default_instance();

  void Swap(DailyBackTaskBackAllRsp* other);

  // implements Message ----------------------------------------------

  DailyBackTaskBackAllRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyBackTaskBackAllRsp& from);
  void MergeFrom(const DailyBackTaskBackAllRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // repeated .proto_ff.DailyTaskBackEntry data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskBackEntry& data(int index) const;
  inline ::proto_ff::DailyTaskBackEntry* mutable_data(int index);
  inline ::proto_ff::DailyTaskBackEntry* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.DailyBackTaskBackAllRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry > data_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientServer_2eproto();
  friend void protobuf_AssignDesc_ClientServer_2eproto();
  friend void protobuf_ShutdownFile_ClientServer_2eproto();

  void InitAsDefaultInstance();
  static DailyBackTaskBackAllRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// FunctionUnlockInfoRsp

// required int32 retCode = 1;
inline bool FunctionUnlockInfoRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockInfoRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockInfoRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockInfoRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 FunctionUnlockInfoRsp::retcode() const {
  return retcode_;
}
inline void FunctionUnlockInfoRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required int32 synType = 2;
inline bool FunctionUnlockInfoRsp::has_syntype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionUnlockInfoRsp::set_has_syntype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionUnlockInfoRsp::clear_has_syntype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionUnlockInfoRsp::clear_syntype() {
  syntype_ = 0;
  clear_has_syntype();
}
inline ::google::protobuf::int32 FunctionUnlockInfoRsp::syntype() const {
  return syntype_;
}
inline void FunctionUnlockInfoRsp::set_syntype(::google::protobuf::int32 value) {
  set_has_syntype();
  syntype_ = value;
}

// repeated .proto_ff.FunctionUnlockInfoData data = 3;
inline int FunctionUnlockInfoRsp::data_size() const {
  return data_.size();
}
inline void FunctionUnlockInfoRsp::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FunctionUnlockInfoData& FunctionUnlockInfoRsp::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfoRsp::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockInfoRsp::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >&
FunctionUnlockInfoRsp::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FunctionUnlockInfoData >*
FunctionUnlockInfoRsp::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// FunctionUnlockGetRewardReq

// optional uint64 function_id = 1;
inline bool FunctionUnlockGetRewardReq::has_function_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockGetRewardReq::set_has_function_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockGetRewardReq::clear_has_function_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockGetRewardReq::clear_function_id() {
  function_id_ = GOOGLE_ULONGLONG(0);
  clear_has_function_id();
}
inline ::google::protobuf::uint64 FunctionUnlockGetRewardReq::function_id() const {
  return function_id_;
}
inline void FunctionUnlockGetRewardReq::set_function_id(::google::protobuf::uint64 value) {
  set_has_function_id();
  function_id_ = value;
}

// -------------------------------------------------------------------

// FunctionUnlockGetRewardRsp

// optional int32 ret_code = 1;
inline bool FunctionUnlockGetRewardRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockGetRewardRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockGetRewardRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockGetRewardRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 FunctionUnlockGetRewardRsp::ret_code() const {
  return ret_code_;
}
inline void FunctionUnlockGetRewardRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional .proto_ff.FunctionUnlockInfoData data = 2;
inline bool FunctionUnlockGetRewardRsp::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionUnlockGetRewardRsp::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionUnlockGetRewardRsp::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionUnlockGetRewardRsp::clear_data() {
  if (data_ != NULL) data_->::proto_ff::FunctionUnlockInfoData::Clear();
  clear_has_data();
}
inline const ::proto_ff::FunctionUnlockInfoData& FunctionUnlockGetRewardRsp::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockGetRewardRsp::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::FunctionUnlockInfoData;
  return data_;
}
inline ::proto_ff::FunctionUnlockInfoData* FunctionUnlockGetRewardRsp::release_data() {
  clear_has_data();
  ::proto_ff::FunctionUnlockInfoData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void FunctionUnlockGetRewardRsp::set_allocated_data(::proto_ff::FunctionUnlockInfoData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// FacadeInfoReq

// optional uint32 facade_type = 1;
inline bool FacadeInfoReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeInfoReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeInfoReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeInfoReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeInfoReq::facade_type() const {
  return facade_type_;
}
inline void FacadeInfoReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// -------------------------------------------------------------------

// FacadeInfoRsp

// optional uint32 facade_type = 1;
inline bool FacadeInfoRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeInfoRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeInfoRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeInfoRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeInfoRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeInfoRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 facade_id = 2;
inline bool FacadeInfoRsp::has_facade_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeInfoRsp::set_has_facade_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeInfoRsp::clear_has_facade_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeInfoRsp::clear_facade_id() {
  facade_id_ = GOOGLE_ULONGLONG(0);
  clear_has_facade_id();
}
inline ::google::protobuf::uint64 FacadeInfoRsp::facade_id() const {
  return facade_id_;
}
inline void FacadeInfoRsp::set_facade_id(::google::protobuf::uint64 value) {
  set_has_facade_id();
  facade_id_ = value;
}

// optional uint32 facade_lev = 3;
inline bool FacadeInfoRsp::has_facade_lev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeInfoRsp::set_has_facade_lev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeInfoRsp::clear_has_facade_lev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeInfoRsp::clear_facade_lev() {
  facade_lev_ = 0u;
  clear_has_facade_lev();
}
inline ::google::protobuf::uint32 FacadeInfoRsp::facade_lev() const {
  return facade_lev_;
}
inline void FacadeInfoRsp::set_facade_lev(::google::protobuf::uint32 value) {
  set_has_facade_lev();
  facade_lev_ = value;
}

// optional uint64 facade_exp = 4;
inline bool FacadeInfoRsp::has_facade_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacadeInfoRsp::set_has_facade_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacadeInfoRsp::clear_has_facade_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacadeInfoRsp::clear_facade_exp() {
  facade_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_facade_exp();
}
inline ::google::protobuf::uint64 FacadeInfoRsp::facade_exp() const {
  return facade_exp_;
}
inline void FacadeInfoRsp::set_facade_exp(::google::protobuf::uint64 value) {
  set_has_facade_exp();
  facade_exp_ = value;
}

// optional bool use_facade = 5;
inline bool FacadeInfoRsp::has_use_facade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FacadeInfoRsp::set_has_use_facade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FacadeInfoRsp::clear_has_use_facade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FacadeInfoRsp::clear_use_facade() {
  use_facade_ = false;
  clear_has_use_facade();
}
inline bool FacadeInfoRsp::use_facade() const {
  return use_facade_;
}
inline void FacadeInfoRsp::set_use_facade(bool value) {
  set_has_use_facade();
  use_facade_ = value;
}

// optional bool use_soul_item = 6;
inline bool FacadeInfoRsp::has_use_soul_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FacadeInfoRsp::set_has_use_soul_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FacadeInfoRsp::clear_has_use_soul_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FacadeInfoRsp::clear_use_soul_item() {
  use_soul_item_ = false;
  clear_has_use_soul_item();
}
inline bool FacadeInfoRsp::use_soul_item() const {
  return use_soul_item_;
}
inline void FacadeInfoRsp::set_use_soul_item(bool value) {
  set_has_use_soul_item();
  use_soul_item_ = value;
}

// repeated .proto_ff.FacadeFragmentData fragment_data = 7;
inline int FacadeInfoRsp::fragment_data_size() const {
  return fragment_data_.size();
}
inline void FacadeInfoRsp::clear_fragment_data() {
  fragment_data_.Clear();
}
inline const ::proto_ff::FacadeFragmentData& FacadeInfoRsp::fragment_data(int index) const {
  return fragment_data_.Get(index);
}
inline ::proto_ff::FacadeFragmentData* FacadeInfoRsp::mutable_fragment_data(int index) {
  return fragment_data_.Mutable(index);
}
inline ::proto_ff::FacadeFragmentData* FacadeInfoRsp::add_fragment_data() {
  return fragment_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >&
FacadeInfoRsp::fragment_data() const {
  return fragment_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >*
FacadeInfoRsp::mutable_fragment_data() {
  return &fragment_data_;
}

// optional uint64 fight_value = 8;
inline bool FacadeInfoRsp::has_fight_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FacadeInfoRsp::set_has_fight_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FacadeInfoRsp::clear_has_fight_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FacadeInfoRsp::clear_fight_value() {
  fight_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_value();
}
inline ::google::protobuf::uint64 FacadeInfoRsp::fight_value() const {
  return fight_value_;
}
inline void FacadeInfoRsp::set_fight_value(::google::protobuf::uint64 value) {
  set_has_fight_value();
  fight_value_ = value;
}

// repeated .proto_ff.FacadeSkillData skill_data = 9;
inline int FacadeInfoRsp::skill_data_size() const {
  return skill_data_.size();
}
inline void FacadeInfoRsp::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::FacadeSkillData& FacadeInfoRsp::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::FacadeSkillData* FacadeInfoRsp::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::FacadeSkillData* FacadeInfoRsp::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >&
FacadeInfoRsp::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >*
FacadeInfoRsp::mutable_skill_data() {
  return &skill_data_;
}

// -------------------------------------------------------------------

// FacadeSkillUnlockNotify

// optional uint32 facade_type = 1;
inline bool FacadeSkillUnlockNotify::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSkillUnlockNotify::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSkillUnlockNotify::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSkillUnlockNotify::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeSkillUnlockNotify::facade_type() const {
  return facade_type_;
}
inline void FacadeSkillUnlockNotify::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional .proto_ff.FacadeSkillData skill_data = 2;
inline bool FacadeSkillUnlockNotify::has_skill_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSkillUnlockNotify::set_has_skill_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSkillUnlockNotify::clear_has_skill_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSkillUnlockNotify::clear_skill_data() {
  if (skill_data_ != NULL) skill_data_->::proto_ff::FacadeSkillData::Clear();
  clear_has_skill_data();
}
inline const ::proto_ff::FacadeSkillData& FacadeSkillUnlockNotify::skill_data() const {
  return skill_data_ != NULL ? *skill_data_ : *default_instance_->skill_data_;
}
inline ::proto_ff::FacadeSkillData* FacadeSkillUnlockNotify::mutable_skill_data() {
  set_has_skill_data();
  if (skill_data_ == NULL) skill_data_ = new ::proto_ff::FacadeSkillData;
  return skill_data_;
}
inline ::proto_ff::FacadeSkillData* FacadeSkillUnlockNotify::release_skill_data() {
  clear_has_skill_data();
  ::proto_ff::FacadeSkillData* temp = skill_data_;
  skill_data_ = NULL;
  return temp;
}
inline void FacadeSkillUnlockNotify::set_allocated_skill_data(::proto_ff::FacadeSkillData* skill_data) {
  delete skill_data_;
  skill_data_ = skill_data;
  if (skill_data) {
    set_has_skill_data();
  } else {
    clear_has_skill_data();
  }
}

// -------------------------------------------------------------------

// FacadeSkillLevReq

// optional uint32 facade_type = 1;
inline bool FacadeSkillLevReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSkillLevReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSkillLevReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSkillLevReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeSkillLevReq::facade_type() const {
  return facade_type_;
}
inline void FacadeSkillLevReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 skill_id = 2;
inline bool FacadeSkillLevReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSkillLevReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSkillLevReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSkillLevReq::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 FacadeSkillLevReq::skill_id() const {
  return skill_id_;
}
inline void FacadeSkillLevReq::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// FacadeSkillLevRsp

// optional uint32 facade_type = 1;
inline bool FacadeSkillLevRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeSkillLevRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeSkillLevRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeSkillLevRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeSkillLevRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeSkillLevRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeSkillLevRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeSkillLevRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeSkillLevRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeSkillLevRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeSkillLevRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeSkillLevRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional .proto_ff.FacadeSkillData skill_data = 3;
inline bool FacadeSkillLevRsp::has_skill_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeSkillLevRsp::set_has_skill_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeSkillLevRsp::clear_has_skill_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeSkillLevRsp::clear_skill_data() {
  if (skill_data_ != NULL) skill_data_->::proto_ff::FacadeSkillData::Clear();
  clear_has_skill_data();
}
inline const ::proto_ff::FacadeSkillData& FacadeSkillLevRsp::skill_data() const {
  return skill_data_ != NULL ? *skill_data_ : *default_instance_->skill_data_;
}
inline ::proto_ff::FacadeSkillData* FacadeSkillLevRsp::mutable_skill_data() {
  set_has_skill_data();
  if (skill_data_ == NULL) skill_data_ = new ::proto_ff::FacadeSkillData;
  return skill_data_;
}
inline ::proto_ff::FacadeSkillData* FacadeSkillLevRsp::release_skill_data() {
  clear_has_skill_data();
  ::proto_ff::FacadeSkillData* temp = skill_data_;
  skill_data_ = NULL;
  return temp;
}
inline void FacadeSkillLevRsp::set_allocated_skill_data(::proto_ff::FacadeSkillData* skill_data) {
  delete skill_data_;
  skill_data_ = skill_data;
  if (skill_data) {
    set_has_skill_data();
  } else {
    clear_has_skill_data();
  }
}

// -------------------------------------------------------------------

// FacadeLevupReq

// optional uint32 facade_type = 1;
inline bool FacadeLevupReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeLevupReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeLevupReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeLevupReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeLevupReq::facade_type() const {
  return facade_type_;
}
inline void FacadeLevupReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 material_id = 2;
inline bool FacadeLevupReq::has_material_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeLevupReq::set_has_material_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeLevupReq::clear_has_material_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeLevupReq::clear_material_id() {
  material_id_ = GOOGLE_ULONGLONG(0);
  clear_has_material_id();
}
inline ::google::protobuf::uint64 FacadeLevupReq::material_id() const {
  return material_id_;
}
inline void FacadeLevupReq::set_material_id(::google::protobuf::uint64 value) {
  set_has_material_id();
  material_id_ = value;
}

// -------------------------------------------------------------------

// FacadeLevupRsp

// optional uint32 facade_type = 1;
inline bool FacadeLevupRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeLevupRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeLevupRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeLevupRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeLevupRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeLevupRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeLevupRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeLevupRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeLevupRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeLevupRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeLevupRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeLevupRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 facade_id = 3;
inline bool FacadeLevupRsp::has_facade_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeLevupRsp::set_has_facade_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeLevupRsp::clear_has_facade_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeLevupRsp::clear_facade_id() {
  facade_id_ = GOOGLE_ULONGLONG(0);
  clear_has_facade_id();
}
inline ::google::protobuf::uint64 FacadeLevupRsp::facade_id() const {
  return facade_id_;
}
inline void FacadeLevupRsp::set_facade_id(::google::protobuf::uint64 value) {
  set_has_facade_id();
  facade_id_ = value;
}

// optional uint32 facade_lev = 4;
inline bool FacadeLevupRsp::has_facade_lev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacadeLevupRsp::set_has_facade_lev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacadeLevupRsp::clear_has_facade_lev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacadeLevupRsp::clear_facade_lev() {
  facade_lev_ = 0u;
  clear_has_facade_lev();
}
inline ::google::protobuf::uint32 FacadeLevupRsp::facade_lev() const {
  return facade_lev_;
}
inline void FacadeLevupRsp::set_facade_lev(::google::protobuf::uint32 value) {
  set_has_facade_lev();
  facade_lev_ = value;
}

// optional uint64 facade_exp = 5;
inline bool FacadeLevupRsp::has_facade_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FacadeLevupRsp::set_has_facade_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FacadeLevupRsp::clear_has_facade_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FacadeLevupRsp::clear_facade_exp() {
  facade_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_facade_exp();
}
inline ::google::protobuf::uint64 FacadeLevupRsp::facade_exp() const {
  return facade_exp_;
}
inline void FacadeLevupRsp::set_facade_exp(::google::protobuf::uint64 value) {
  set_has_facade_exp();
  facade_exp_ = value;
}

// optional uint64 fight_value = 8;
inline bool FacadeLevupRsp::has_fight_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FacadeLevupRsp::set_has_fight_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FacadeLevupRsp::clear_has_fight_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FacadeLevupRsp::clear_fight_value() {
  fight_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_value();
}
inline ::google::protobuf::uint64 FacadeLevupRsp::fight_value() const {
  return fight_value_;
}
inline void FacadeLevupRsp::set_fight_value(::google::protobuf::uint64 value) {
  set_has_fight_value();
  fight_value_ = value;
}

// -------------------------------------------------------------------

// FacadeDressReq

// optional uint32 facade_type = 1;
inline bool FacadeDressReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeDressReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeDressReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeDressReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeDressReq::facade_type() const {
  return facade_type_;
}
inline void FacadeDressReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// -------------------------------------------------------------------

// FacadeDressRsp

// optional uint32 facade_type = 1;
inline bool FacadeDressRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeDressRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeDressRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeDressRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeDressRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeDressRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeDressRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeDressRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeDressRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeDressRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeDressRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeDressRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional bool use_facade = 3;
inline bool FacadeDressRsp::has_use_facade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeDressRsp::set_has_use_facade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeDressRsp::clear_has_use_facade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeDressRsp::clear_use_facade() {
  use_facade_ = false;
  clear_has_use_facade();
}
inline bool FacadeDressRsp::use_facade() const {
  return use_facade_;
}
inline void FacadeDressRsp::set_use_facade(bool value) {
  set_has_use_facade();
  use_facade_ = value;
}

// optional uint64 fight_value = 8;
inline bool FacadeDressRsp::has_fight_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacadeDressRsp::set_has_fight_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacadeDressRsp::clear_has_fight_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacadeDressRsp::clear_fight_value() {
  fight_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_value();
}
inline ::google::protobuf::uint64 FacadeDressRsp::fight_value() const {
  return fight_value_;
}
inline void FacadeDressRsp::set_fight_value(::google::protobuf::uint64 value) {
  set_has_fight_value();
  fight_value_ = value;
}

// -------------------------------------------------------------------

// FacadeUnDressReq

// optional uint32 facade_type = 1;
inline bool FacadeUnDressReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeUnDressReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeUnDressReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeUnDressReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeUnDressReq::facade_type() const {
  return facade_type_;
}
inline void FacadeUnDressReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// -------------------------------------------------------------------

// FacadeUnDressRsp

// optional uint32 facade_type = 1;
inline bool FacadeUnDressRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeUnDressRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeUnDressRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeUnDressRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeUnDressRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeUnDressRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeUnDressRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeUnDressRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeUnDressRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeUnDressRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeUnDressRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeUnDressRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional bool use_facade = 3;
inline bool FacadeUnDressRsp::has_use_facade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeUnDressRsp::set_has_use_facade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeUnDressRsp::clear_has_use_facade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeUnDressRsp::clear_use_facade() {
  use_facade_ = false;
  clear_has_use_facade();
}
inline bool FacadeUnDressRsp::use_facade() const {
  return use_facade_;
}
inline void FacadeUnDressRsp::set_use_facade(bool value) {
  set_has_use_facade();
  use_facade_ = value;
}

// optional uint64 fight_value = 8;
inline bool FacadeUnDressRsp::has_fight_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacadeUnDressRsp::set_has_fight_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacadeUnDressRsp::clear_has_fight_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacadeUnDressRsp::clear_fight_value() {
  fight_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_value();
}
inline ::google::protobuf::uint64 FacadeUnDressRsp::fight_value() const {
  return fight_value_;
}
inline void FacadeUnDressRsp::set_fight_value(::google::protobuf::uint64 value) {
  set_has_fight_value();
  fight_value_ = value;
}

// -------------------------------------------------------------------

// FacadeFragmentUseReq

// optional uint32 facade_type = 1;
inline bool FacadeFragmentUseReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFragmentUseReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFragmentUseReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFragmentUseReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFragmentUseReq::facade_type() const {
  return facade_type_;
}
inline void FacadeFragmentUseReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 fragment_id = 2;
inline bool FacadeFragmentUseReq::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFragmentUseReq::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFragmentUseReq::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFragmentUseReq::clear_fragment_id() {
  fragment_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fragment_id();
}
inline ::google::protobuf::uint64 FacadeFragmentUseReq::fragment_id() const {
  return fragment_id_;
}
inline void FacadeFragmentUseReq::set_fragment_id(::google::protobuf::uint64 value) {
  set_has_fragment_id();
  fragment_id_ = value;
}

// -------------------------------------------------------------------

// FacadeFragmentUseRsp

// optional uint32 facade_type = 1;
inline bool FacadeFragmentUseRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFragmentUseRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFragmentUseRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFragmentUseRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFragmentUseRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeFragmentUseRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeFragmentUseRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFragmentUseRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFragmentUseRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFragmentUseRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeFragmentUseRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeFragmentUseRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .proto_ff.FacadeFragmentData fragment_data = 3;
inline int FacadeFragmentUseRsp::fragment_data_size() const {
  return fragment_data_.size();
}
inline void FacadeFragmentUseRsp::clear_fragment_data() {
  fragment_data_.Clear();
}
inline const ::proto_ff::FacadeFragmentData& FacadeFragmentUseRsp::fragment_data(int index) const {
  return fragment_data_.Get(index);
}
inline ::proto_ff::FacadeFragmentData* FacadeFragmentUseRsp::mutable_fragment_data(int index) {
  return fragment_data_.Mutable(index);
}
inline ::proto_ff::FacadeFragmentData* FacadeFragmentUseRsp::add_fragment_data() {
  return fragment_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >&
FacadeFragmentUseRsp::fragment_data() const {
  return fragment_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >*
FacadeFragmentUseRsp::mutable_fragment_data() {
  return &fragment_data_;
}

// optional uint64 fight_value = 4;
inline bool FacadeFragmentUseRsp::has_fight_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacadeFragmentUseRsp::set_has_fight_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacadeFragmentUseRsp::clear_has_fight_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacadeFragmentUseRsp::clear_fight_value() {
  fight_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_value();
}
inline ::google::protobuf::uint64 FacadeFragmentUseRsp::fight_value() const {
  return fight_value_;
}
inline void FacadeFragmentUseRsp::set_fight_value(::google::protobuf::uint64 value) {
  set_has_fight_value();
  fight_value_ = value;
}

// -------------------------------------------------------------------

// FacadeFantasyInfoReq

// optional uint32 facade_type = 1;
inline bool FacadeFantasyInfoReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyInfoReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyInfoReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyInfoReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFantasyInfoReq::facade_type() const {
  return facade_type_;
}
inline void FacadeFantasyInfoReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// -------------------------------------------------------------------

// FacadeFantasyInfoRsp

// optional uint32 facade_type = 1;
inline bool FacadeFantasyInfoRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyInfoRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyInfoRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyInfoRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFantasyInfoRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeFantasyInfoRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// repeated .proto_ff.FacadeFantasyData fantasy_data = 5;
inline int FacadeFantasyInfoRsp::fantasy_data_size() const {
  return fantasy_data_.size();
}
inline void FacadeFantasyInfoRsp::clear_fantasy_data() {
  fantasy_data_.Clear();
}
inline const ::proto_ff::FacadeFantasyData& FacadeFantasyInfoRsp::fantasy_data(int index) const {
  return fantasy_data_.Get(index);
}
inline ::proto_ff::FacadeFantasyData* FacadeFantasyInfoRsp::mutable_fantasy_data(int index) {
  return fantasy_data_.Mutable(index);
}
inline ::proto_ff::FacadeFantasyData* FacadeFantasyInfoRsp::add_fantasy_data() {
  return fantasy_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >&
FacadeFantasyInfoRsp::fantasy_data() const {
  return fantasy_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >*
FacadeFantasyInfoRsp::mutable_fantasy_data() {
  return &fantasy_data_;
}

// optional uint64 equip_fantasy_id = 6;
inline bool FacadeFantasyInfoRsp::has_equip_fantasy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeFantasyInfoRsp::set_has_equip_fantasy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeFantasyInfoRsp::clear_has_equip_fantasy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeFantasyInfoRsp::clear_equip_fantasy_id() {
  equip_fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFantasyInfoRsp::equip_fantasy_id() const {
  return equip_fantasy_id_;
}
inline void FacadeFantasyInfoRsp::set_equip_fantasy_id(::google::protobuf::uint64 value) {
  set_has_equip_fantasy_id();
  equip_fantasy_id_ = value;
}

// -------------------------------------------------------------------

// FacadeFantasyActiveReq

// optional uint32 facade_type = 1;
inline bool FacadeFantasyActiveReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyActiveReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyActiveReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyActiveReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFantasyActiveReq::facade_type() const {
  return facade_type_;
}
inline void FacadeFantasyActiveReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 fantasy_id = 2;
inline bool FacadeFantasyActiveReq::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFantasyActiveReq::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFantasyActiveReq::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFantasyActiveReq::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFantasyActiveReq::fantasy_id() const {
  return fantasy_id_;
}
inline void FacadeFantasyActiveReq::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// -------------------------------------------------------------------

// FacadeFastasyActiveRsp

// optional uint32 facade_type = 1;
inline bool FacadeFastasyActiveRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFastasyActiveRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFastasyActiveRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFastasyActiveRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFastasyActiveRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeFastasyActiveRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional .proto_ff.FacadeFantasyData fantasy_data = 2;
inline bool FacadeFastasyActiveRsp::has_fantasy_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFastasyActiveRsp::set_has_fantasy_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFastasyActiveRsp::clear_has_fantasy_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFastasyActiveRsp::clear_fantasy_data() {
  if (fantasy_data_ != NULL) fantasy_data_->::proto_ff::FacadeFantasyData::Clear();
  clear_has_fantasy_data();
}
inline const ::proto_ff::FacadeFantasyData& FacadeFastasyActiveRsp::fantasy_data() const {
  return fantasy_data_ != NULL ? *fantasy_data_ : *default_instance_->fantasy_data_;
}
inline ::proto_ff::FacadeFantasyData* FacadeFastasyActiveRsp::mutable_fantasy_data() {
  set_has_fantasy_data();
  if (fantasy_data_ == NULL) fantasy_data_ = new ::proto_ff::FacadeFantasyData;
  return fantasy_data_;
}
inline ::proto_ff::FacadeFantasyData* FacadeFastasyActiveRsp::release_fantasy_data() {
  clear_has_fantasy_data();
  ::proto_ff::FacadeFantasyData* temp = fantasy_data_;
  fantasy_data_ = NULL;
  return temp;
}
inline void FacadeFastasyActiveRsp::set_allocated_fantasy_data(::proto_ff::FacadeFantasyData* fantasy_data) {
  delete fantasy_data_;
  fantasy_data_ = fantasy_data;
  if (fantasy_data) {
    set_has_fantasy_data();
  } else {
    clear_has_fantasy_data();
  }
}

// optional uint32 ret_code = 3;
inline bool FacadeFastasyActiveRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeFastasyActiveRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeFastasyActiveRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeFastasyActiveRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeFastasyActiveRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeFastasyActiveRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// FacadeFantasyLevelupReq

// optional uint32 facade_type = 1;
inline bool FacadeFantasyLevelupReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFantasyLevelupReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFantasyLevelupReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFantasyLevelupReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFantasyLevelupReq::facade_type() const {
  return facade_type_;
}
inline void FacadeFantasyLevelupReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 fantasy_id = 2;
inline bool FacadeFantasyLevelupReq::has_fantasy_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFantasyLevelupReq::set_has_fantasy_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFantasyLevelupReq::clear_has_fantasy_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFantasyLevelupReq::clear_fantasy_id() {
  fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFantasyLevelupReq::fantasy_id() const {
  return fantasy_id_;
}
inline void FacadeFantasyLevelupReq::set_fantasy_id(::google::protobuf::uint64 value) {
  set_has_fantasy_id();
  fantasy_id_ = value;
}

// -------------------------------------------------------------------

// FacadeFastasyLevelupRsp

// optional uint32 facade_type = 1;
inline bool FacadeFastasyLevelupRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFastasyLevelupRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFastasyLevelupRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFastasyLevelupRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFastasyLevelupRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeFastasyLevelupRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional .proto_ff.FacadeFantasyData fantasy_data = 2;
inline bool FacadeFastasyLevelupRsp::has_fantasy_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFastasyLevelupRsp::set_has_fantasy_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFastasyLevelupRsp::clear_has_fantasy_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFastasyLevelupRsp::clear_fantasy_data() {
  if (fantasy_data_ != NULL) fantasy_data_->::proto_ff::FacadeFantasyData::Clear();
  clear_has_fantasy_data();
}
inline const ::proto_ff::FacadeFantasyData& FacadeFastasyLevelupRsp::fantasy_data() const {
  return fantasy_data_ != NULL ? *fantasy_data_ : *default_instance_->fantasy_data_;
}
inline ::proto_ff::FacadeFantasyData* FacadeFastasyLevelupRsp::mutable_fantasy_data() {
  set_has_fantasy_data();
  if (fantasy_data_ == NULL) fantasy_data_ = new ::proto_ff::FacadeFantasyData;
  return fantasy_data_;
}
inline ::proto_ff::FacadeFantasyData* FacadeFastasyLevelupRsp::release_fantasy_data() {
  clear_has_fantasy_data();
  ::proto_ff::FacadeFantasyData* temp = fantasy_data_;
  fantasy_data_ = NULL;
  return temp;
}
inline void FacadeFastasyLevelupRsp::set_allocated_fantasy_data(::proto_ff::FacadeFantasyData* fantasy_data) {
  delete fantasy_data_;
  fantasy_data_ = fantasy_data;
  if (fantasy_data) {
    set_has_fantasy_data();
  } else {
    clear_has_fantasy_data();
  }
}

// optional uint32 ret_code = 3;
inline bool FacadeFastasyLevelupRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeFastasyLevelupRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeFastasyLevelupRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeFastasyLevelupRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeFastasyLevelupRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeFastasyLevelupRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// FacadeFastasyDressReq

// optional uint32 facade_type = 1;
inline bool FacadeFastasyDressReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFastasyDressReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFastasyDressReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFastasyDressReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFastasyDressReq::facade_type() const {
  return facade_type_;
}
inline void FacadeFastasyDressReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 equip_fantasy_id = 2;
inline bool FacadeFastasyDressReq::has_equip_fantasy_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFastasyDressReq::set_has_equip_fantasy_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFastasyDressReq::clear_has_equip_fantasy_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFastasyDressReq::clear_equip_fantasy_id() {
  equip_fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFastasyDressReq::equip_fantasy_id() const {
  return equip_fantasy_id_;
}
inline void FacadeFastasyDressReq::set_equip_fantasy_id(::google::protobuf::uint64 value) {
  set_has_equip_fantasy_id();
  equip_fantasy_id_ = value;
}

// -------------------------------------------------------------------

// FacadeFastasyDressRsp

// optional uint32 facade_type = 1;
inline bool FacadeFastasyDressRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFastasyDressRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFastasyDressRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFastasyDressRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFastasyDressRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeFastasyDressRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeFastasyDressRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFastasyDressRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFastasyDressRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFastasyDressRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeFastasyDressRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeFastasyDressRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 equip_fantasy_id = 3;
inline bool FacadeFastasyDressRsp::has_equip_fantasy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeFastasyDressRsp::set_has_equip_fantasy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeFastasyDressRsp::clear_has_equip_fantasy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeFastasyDressRsp::clear_equip_fantasy_id() {
  equip_fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeFastasyDressRsp::equip_fantasy_id() const {
  return equip_fantasy_id_;
}
inline void FacadeFastasyDressRsp::set_equip_fantasy_id(::google::protobuf::uint64 value) {
  set_has_equip_fantasy_id();
  equip_fantasy_id_ = value;
}

// -------------------------------------------------------------------

// FacadeFastasyUnDressReq

// optional uint32 facade_type = 1;
inline bool FacadeFastasyUnDressReq::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFastasyUnDressReq::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFastasyUnDressReq::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFastasyUnDressReq::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFastasyUnDressReq::facade_type() const {
  return facade_type_;
}
inline void FacadeFastasyUnDressReq::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// -------------------------------------------------------------------

// FacadeFastasyUnDressRsp

// optional uint32 facade_type = 1;
inline bool FacadeFastasyUnDressRsp::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeFastasyUnDressRsp::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeFastasyUnDressRsp::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeFastasyUnDressRsp::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeFastasyUnDressRsp::facade_type() const {
  return facade_type_;
}
inline void FacadeFastasyUnDressRsp::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint32 ret_code = 2;
inline bool FacadeFastasyUnDressRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeFastasyUnDressRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeFastasyUnDressRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeFastasyUnDressRsp::clear_ret_code() {
  ret_code_ = 0u;
  clear_has_ret_code();
}
inline ::google::protobuf::uint32 FacadeFastasyUnDressRsp::ret_code() const {
  return ret_code_;
}
inline void FacadeFastasyUnDressRsp::set_ret_code(::google::protobuf::uint32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// PlayerSeatReq

// optional int32 opt = 1;
inline bool PlayerSeatReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSeatReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSeatReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSeatReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 PlayerSeatReq::opt() const {
  return opt_;
}
inline void PlayerSeatReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// PlayerSeatRsp

// optional int32 opt = 1;
inline bool PlayerSeatRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSeatRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSeatRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSeatRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 PlayerSeatRsp::opt() const {
  return opt_;
}
inline void PlayerSeatRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional int32 ret = 2;
inline bool PlayerSeatRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSeatRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSeatRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSeatRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 PlayerSeatRsp::ret() const {
  return ret_;
}
inline void PlayerSeatRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 exp = 3;
inline bool PlayerSeatRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSeatRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerSeatRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerSeatRsp::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 PlayerSeatRsp::exp() const {
  return exp_;
}
inline void PlayerSeatRsp::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 online_hangup_time = 4;
inline bool PlayerSeatRsp::has_online_hangup_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerSeatRsp::set_has_online_hangup_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerSeatRsp::clear_has_online_hangup_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerSeatRsp::clear_online_hangup_time() {
  online_hangup_time_ = 0u;
  clear_has_online_hangup_time();
}
inline ::google::protobuf::uint32 PlayerSeatRsp::online_hangup_time() const {
  return online_hangup_time_;
}
inline void PlayerSeatRsp::set_online_hangup_time(::google::protobuf::uint32 value) {
  set_has_online_hangup_time();
  online_hangup_time_ = value;
}

// optional uint64 online_all_exp = 5;
inline bool PlayerSeatRsp::has_online_all_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerSeatRsp::set_has_online_all_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerSeatRsp::clear_has_online_all_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerSeatRsp::clear_online_all_exp() {
  online_all_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_online_all_exp();
}
inline ::google::protobuf::uint64 PlayerSeatRsp::online_all_exp() const {
  return online_all_exp_;
}
inline void PlayerSeatRsp::set_online_all_exp(::google::protobuf::uint64 value) {
  set_has_online_all_exp();
  online_all_exp_ = value;
}

// repeated .proto_ff.ComPair64 items = 6;
inline int PlayerSeatRsp::items_size() const {
  return items_.size();
}
inline void PlayerSeatRsp::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComPair64& PlayerSeatRsp::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComPair64* PlayerSeatRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComPair64* PlayerSeatRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
PlayerSeatRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
PlayerSeatRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PlayerSeatExpRsp

// optional uint64 exp = 1;
inline bool PlayerSeatExpRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSeatExpRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSeatExpRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSeatExpRsp::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 PlayerSeatExpRsp::exp() const {
  return exp_;
}
inline void PlayerSeatExpRsp::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 online_hangup_time = 2;
inline bool PlayerSeatExpRsp::has_online_hangup_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSeatExpRsp::set_has_online_hangup_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSeatExpRsp::clear_has_online_hangup_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSeatExpRsp::clear_online_hangup_time() {
  online_hangup_time_ = 0u;
  clear_has_online_hangup_time();
}
inline ::google::protobuf::uint32 PlayerSeatExpRsp::online_hangup_time() const {
  return online_hangup_time_;
}
inline void PlayerSeatExpRsp::set_online_hangup_time(::google::protobuf::uint32 value) {
  set_has_online_hangup_time();
  online_hangup_time_ = value;
}

// optional uint64 online_all_exp = 3;
inline bool PlayerSeatExpRsp::has_online_all_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSeatExpRsp::set_has_online_all_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerSeatExpRsp::clear_has_online_all_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerSeatExpRsp::clear_online_all_exp() {
  online_all_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_online_all_exp();
}
inline ::google::protobuf::uint64 PlayerSeatExpRsp::online_all_exp() const {
  return online_all_exp_;
}
inline void PlayerSeatExpRsp::set_online_all_exp(::google::protobuf::uint64 value) {
  set_has_online_all_exp();
  online_all_exp_ = value;
}

// repeated .proto_ff.ComPair64 items = 4;
inline int PlayerSeatExpRsp::items_size() const {
  return items_.size();
}
inline void PlayerSeatExpRsp::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComPair64& PlayerSeatExpRsp::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComPair64* PlayerSeatExpRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComPair64* PlayerSeatExpRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
PlayerSeatExpRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
PlayerSeatExpRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PlayerLoginHangUpDataReq

// -------------------------------------------------------------------

// PlayerLoginHangUpDataRsp

// optional int32 hangup_time = 1;
inline bool PlayerLoginHangUpDataRsp::has_hangup_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_hangup_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_hangup_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLoginHangUpDataRsp::clear_hangup_time() {
  hangup_time_ = 0;
  clear_has_hangup_time();
}
inline ::google::protobuf::int32 PlayerLoginHangUpDataRsp::hangup_time() const {
  return hangup_time_;
}
inline void PlayerLoginHangUpDataRsp::set_hangup_time(::google::protobuf::int32 value) {
  set_has_hangup_time();
  hangup_time_ = value;
}

// optional int32 hangup_surplus_time = 2;
inline bool PlayerLoginHangUpDataRsp::has_hangup_surplus_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_hangup_surplus_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_hangup_surplus_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLoginHangUpDataRsp::clear_hangup_surplus_time() {
  hangup_surplus_time_ = 0;
  clear_has_hangup_surplus_time();
}
inline ::google::protobuf::int32 PlayerLoginHangUpDataRsp::hangup_surplus_time() const {
  return hangup_surplus_time_;
}
inline void PlayerLoginHangUpDataRsp::set_hangup_surplus_time(::google::protobuf::int32 value) {
  set_has_hangup_surplus_time();
  hangup_surplus_time_ = value;
}

// optional uint64 add_exp = 3;
inline bool PlayerLoginHangUpDataRsp::has_add_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_add_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerLoginHangUpDataRsp::clear_add_exp() {
  add_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_add_exp();
}
inline ::google::protobuf::uint64 PlayerLoginHangUpDataRsp::add_exp() const {
  return add_exp_;
}
inline void PlayerLoginHangUpDataRsp::set_add_exp(::google::protobuf::uint64 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// optional int32 before_lv = 4;
inline bool PlayerLoginHangUpDataRsp::has_before_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_before_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_before_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerLoginHangUpDataRsp::clear_before_lv() {
  before_lv_ = 0;
  clear_has_before_lv();
}
inline ::google::protobuf::int32 PlayerLoginHangUpDataRsp::before_lv() const {
  return before_lv_;
}
inline void PlayerLoginHangUpDataRsp::set_before_lv(::google::protobuf::int32 value) {
  set_has_before_lv();
  before_lv_ = value;
}

// optional int32 after_lv = 5;
inline bool PlayerLoginHangUpDataRsp::has_after_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_after_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_after_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerLoginHangUpDataRsp::clear_after_lv() {
  after_lv_ = 0;
  clear_has_after_lv();
}
inline ::google::protobuf::int32 PlayerLoginHangUpDataRsp::after_lv() const {
  return after_lv_;
}
inline void PlayerLoginHangUpDataRsp::set_after_lv(::google::protobuf::int32 value) {
  set_has_after_lv();
  after_lv_ = value;
}

// optional uint64 before_fight = 6;
inline bool PlayerLoginHangUpDataRsp::has_before_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_before_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_before_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerLoginHangUpDataRsp::clear_before_fight() {
  before_fight_ = GOOGLE_ULONGLONG(0);
  clear_has_before_fight();
}
inline ::google::protobuf::uint64 PlayerLoginHangUpDataRsp::before_fight() const {
  return before_fight_;
}
inline void PlayerLoginHangUpDataRsp::set_before_fight(::google::protobuf::uint64 value) {
  set_has_before_fight();
  before_fight_ = value;
}

// optional uint64 after_fight = 7;
inline bool PlayerLoginHangUpDataRsp::has_after_fight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerLoginHangUpDataRsp::set_has_after_fight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerLoginHangUpDataRsp::clear_has_after_fight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerLoginHangUpDataRsp::clear_after_fight() {
  after_fight_ = GOOGLE_ULONGLONG(0);
  clear_has_after_fight();
}
inline ::google::protobuf::uint64 PlayerLoginHangUpDataRsp::after_fight() const {
  return after_fight_;
}
inline void PlayerLoginHangUpDataRsp::set_after_fight(::google::protobuf::uint64 value) {
  set_has_after_fight();
  after_fight_ = value;
}

// repeated .proto_ff.ComPair64 items = 8;
inline int PlayerLoginHangUpDataRsp::items_size() const {
  return items_.size();
}
inline void PlayerLoginHangUpDataRsp::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComPair64& PlayerLoginHangUpDataRsp::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComPair64* PlayerLoginHangUpDataRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComPair64* PlayerLoginHangUpDataRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
PlayerLoginHangUpDataRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
PlayerLoginHangUpDataRsp::mutable_items() {
  return &items_;
}

// repeated int32 add_value = 9;
inline int PlayerLoginHangUpDataRsp::add_value_size() const {
  return add_value_.size();
}
inline void PlayerLoginHangUpDataRsp::clear_add_value() {
  add_value_.Clear();
}
inline ::google::protobuf::int32 PlayerLoginHangUpDataRsp::add_value(int index) const {
  return add_value_.Get(index);
}
inline void PlayerLoginHangUpDataRsp::set_add_value(int index, ::google::protobuf::int32 value) {
  add_value_.Set(index, value);
}
inline void PlayerLoginHangUpDataRsp::add_add_value(::google::protobuf::int32 value) {
  add_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerLoginHangUpDataRsp::add_value() const {
  return add_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerLoginHangUpDataRsp::mutable_add_value() {
  return &add_value_;
}

// -------------------------------------------------------------------

// PlayerHangUpRewardReq

// optional int32 opt = 1;
inline bool PlayerHangUpRewardReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerHangUpRewardReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerHangUpRewardReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerHangUpRewardReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 PlayerHangUpRewardReq::opt() const {
  return opt_;
}
inline void PlayerHangUpRewardReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// PlayerHangUpRewardRsp

// optional int32 ret = 2;
inline bool PlayerHangUpRewardRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerHangUpRewardRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerHangUpRewardRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerHangUpRewardRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 PlayerHangUpRewardRsp::ret() const {
  return ret_;
}
inline void PlayerHangUpRewardRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GetDailyTaskDataReq

// -------------------------------------------------------------------

// GetDailyTaskDataRsp

// optional .proto_ff.DailyTaskAllData data = 1;
inline bool GetDailyTaskDataRsp::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDailyTaskDataRsp::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDailyTaskDataRsp::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDailyTaskDataRsp::clear_data() {
  if (data_ != NULL) data_->::proto_ff::DailyTaskAllData::Clear();
  clear_has_data();
}
inline const ::proto_ff::DailyTaskAllData& GetDailyTaskDataRsp::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::DailyTaskAllData* GetDailyTaskDataRsp::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::DailyTaskAllData;
  return data_;
}
inline ::proto_ff::DailyTaskAllData* GetDailyTaskDataRsp::release_data() {
  clear_has_data();
  ::proto_ff::DailyTaskAllData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GetDailyTaskDataRsp::set_allocated_data(::proto_ff::DailyTaskAllData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// UpdateDailyTaskNotify

// repeated .proto_ff.DailyTaskEntry data = 1;
inline int UpdateDailyTaskNotify::data_size() const {
  return data_.size();
}
inline void UpdateDailyTaskNotify::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::DailyTaskEntry& UpdateDailyTaskNotify::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::DailyTaskEntry* UpdateDailyTaskNotify::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::DailyTaskEntry* UpdateDailyTaskNotify::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >&
UpdateDailyTaskNotify::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskEntry >*
UpdateDailyTaskNotify::mutable_data() {
  return &data_;
}

// repeated .proto_ff.DailyTaskLimitEntry limit_data = 2;
inline int UpdateDailyTaskNotify::limit_data_size() const {
  return limit_data_.size();
}
inline void UpdateDailyTaskNotify::clear_limit_data() {
  limit_data_.Clear();
}
inline const ::proto_ff::DailyTaskLimitEntry& UpdateDailyTaskNotify::limit_data(int index) const {
  return limit_data_.Get(index);
}
inline ::proto_ff::DailyTaskLimitEntry* UpdateDailyTaskNotify::mutable_limit_data(int index) {
  return limit_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskLimitEntry* UpdateDailyTaskNotify::add_limit_data() {
  return limit_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
UpdateDailyTaskNotify::limit_data() const {
  return limit_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
UpdateDailyTaskNotify::mutable_limit_data() {
  return &limit_data_;
}

// repeated .proto_ff.DailyTaskRewardEntry reward_data = 3;
inline int UpdateDailyTaskNotify::reward_data_size() const {
  return reward_data_.size();
}
inline void UpdateDailyTaskNotify::clear_reward_data() {
  reward_data_.Clear();
}
inline const ::proto_ff::DailyTaskRewardEntry& UpdateDailyTaskNotify::reward_data(int index) const {
  return reward_data_.Get(index);
}
inline ::proto_ff::DailyTaskRewardEntry* UpdateDailyTaskNotify::mutable_reward_data(int index) {
  return reward_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskRewardEntry* UpdateDailyTaskNotify::add_reward_data() {
  return reward_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >&
UpdateDailyTaskNotify::reward_data() const {
  return reward_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskRewardEntry >*
UpdateDailyTaskNotify::mutable_reward_data() {
  return &reward_data_;
}

// repeated .proto_ff.DailyTaskBackEntry back_data = 4;
inline int UpdateDailyTaskNotify::back_data_size() const {
  return back_data_.size();
}
inline void UpdateDailyTaskNotify::clear_back_data() {
  back_data_.Clear();
}
inline const ::proto_ff::DailyTaskBackEntry& UpdateDailyTaskNotify::back_data(int index) const {
  return back_data_.Get(index);
}
inline ::proto_ff::DailyTaskBackEntry* UpdateDailyTaskNotify::mutable_back_data(int index) {
  return back_data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackEntry* UpdateDailyTaskNotify::add_back_data() {
  return back_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
UpdateDailyTaskNotify::back_data() const {
  return back_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
UpdateDailyTaskNotify::mutable_back_data() {
  return &back_data_;
}

// optional uint32 daily_score = 5;
inline bool UpdateDailyTaskNotify::has_daily_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateDailyTaskNotify::set_has_daily_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateDailyTaskNotify::clear_has_daily_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateDailyTaskNotify::clear_daily_score() {
  daily_score_ = 0u;
  clear_has_daily_score();
}
inline ::google::protobuf::uint32 UpdateDailyTaskNotify::daily_score() const {
  return daily_score_;
}
inline void UpdateDailyTaskNotify::set_daily_score(::google::protobuf::uint32 value) {
  set_has_daily_score();
  daily_score_ = value;
}

// optional uint64 daily_exp = 6;
inline bool UpdateDailyTaskNotify::has_daily_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateDailyTaskNotify::set_has_daily_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateDailyTaskNotify::clear_has_daily_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateDailyTaskNotify::clear_daily_exp() {
  daily_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_daily_exp();
}
inline ::google::protobuf::uint64 UpdateDailyTaskNotify::daily_exp() const {
  return daily_exp_;
}
inline void UpdateDailyTaskNotify::set_daily_exp(::google::protobuf::uint64 value) {
  set_has_daily_exp();
  daily_exp_ = value;
}

// -------------------------------------------------------------------

// GetDailyTaskRewardReq

// optional int32 reward_id = 1;
inline bool GetDailyTaskRewardReq::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDailyTaskRewardReq::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDailyTaskRewardReq::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDailyTaskRewardReq::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 GetDailyTaskRewardReq::reward_id() const {
  return reward_id_;
}
inline void GetDailyTaskRewardReq::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// -------------------------------------------------------------------

// GetDailyTaskRewardRsp

// optional int32 ret_code = 1;
inline bool GetDailyTaskRewardRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDailyTaskRewardRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDailyTaskRewardRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDailyTaskRewardRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 GetDailyTaskRewardRsp::ret_code() const {
  return ret_code_;
}
inline void GetDailyTaskRewardRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional int32 reward_id = 2;
inline bool GetDailyTaskRewardRsp::has_reward_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetDailyTaskRewardRsp::set_has_reward_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetDailyTaskRewardRsp::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetDailyTaskRewardRsp::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 GetDailyTaskRewardRsp::reward_id() const {
  return reward_id_;
}
inline void GetDailyTaskRewardRsp::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// -------------------------------------------------------------------

// DailyTaskLevelupReq

// -------------------------------------------------------------------

// DailyTaskLevelupRsp

// optional int32 ret_code = 1;
inline bool DailyTaskLevelupRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskLevelupRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskLevelupRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskLevelupRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 DailyTaskLevelupRsp::ret_code() const {
  return ret_code_;
}
inline void DailyTaskLevelupRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint32 daily_level = 2;
inline bool DailyTaskLevelupRsp::has_daily_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskLevelupRsp::set_has_daily_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskLevelupRsp::clear_has_daily_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskLevelupRsp::clear_daily_level() {
  daily_level_ = 0u;
  clear_has_daily_level();
}
inline ::google::protobuf::uint32 DailyTaskLevelupRsp::daily_level() const {
  return daily_level_;
}
inline void DailyTaskLevelupRsp::set_daily_level(::google::protobuf::uint32 value) {
  set_has_daily_level();
  daily_level_ = value;
}

// optional uint64 daily_exp = 3;
inline bool DailyTaskLevelupRsp::has_daily_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskLevelupRsp::set_has_daily_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskLevelupRsp::clear_has_daily_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskLevelupRsp::clear_daily_exp() {
  daily_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_daily_exp();
}
inline ::google::protobuf::uint64 DailyTaskLevelupRsp::daily_exp() const {
  return daily_exp_;
}
inline void DailyTaskLevelupRsp::set_daily_exp(::google::protobuf::uint64 value) {
  set_has_daily_exp();
  daily_exp_ = value;
}

// -------------------------------------------------------------------

// DailyLimitTaskAddReadyReq

// optional int64 task_id = 1;
inline bool DailyLimitTaskAddReadyReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyLimitTaskAddReadyReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyLimitTaskAddReadyReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyLimitTaskAddReadyReq::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 DailyLimitTaskAddReadyReq::task_id() const {
  return task_id_;
}
inline void DailyLimitTaskAddReadyReq::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// DailyLimitTaskAddReadyRsp

// optional int32 ret_code = 1;
inline bool DailyLimitTaskAddReadyRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyLimitTaskAddReadyRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyLimitTaskAddReadyRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyLimitTaskAddReadyRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 DailyLimitTaskAddReadyRsp::ret_code() const {
  return ret_code_;
}
inline void DailyLimitTaskAddReadyRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional .proto_ff.DailyTaskLimitEntry data = 2;
inline bool DailyLimitTaskAddReadyRsp::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyLimitTaskAddReadyRsp::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyLimitTaskAddReadyRsp::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyLimitTaskAddReadyRsp::clear_data() {
  if (data_ != NULL) data_->::proto_ff::DailyTaskLimitEntry::Clear();
  clear_has_data();
}
inline const ::proto_ff::DailyTaskLimitEntry& DailyLimitTaskAddReadyRsp::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::DailyTaskLimitEntry* DailyLimitTaskAddReadyRsp::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::DailyTaskLimitEntry;
  return data_;
}
inline ::proto_ff::DailyTaskLimitEntry* DailyLimitTaskAddReadyRsp::release_data() {
  clear_has_data();
  ::proto_ff::DailyTaskLimitEntry* temp = data_;
  data_ = NULL;
  return temp;
}
inline void DailyLimitTaskAddReadyRsp::set_allocated_data(::proto_ff::DailyTaskLimitEntry* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// DailyBackTaskBackReq

// optional int64 back_id = 1;
inline bool DailyBackTaskBackReq::has_back_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyBackTaskBackReq::set_has_back_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyBackTaskBackReq::clear_has_back_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyBackTaskBackReq::clear_back_id() {
  back_id_ = GOOGLE_LONGLONG(0);
  clear_has_back_id();
}
inline ::google::protobuf::int64 DailyBackTaskBackReq::back_id() const {
  return back_id_;
}
inline void DailyBackTaskBackReq::set_back_id(::google::protobuf::int64 value) {
  set_has_back_id();
  back_id_ = value;
}

// optional int32 left_time = 2;
inline bool DailyBackTaskBackReq::has_left_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyBackTaskBackReq::set_has_left_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyBackTaskBackReq::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyBackTaskBackReq::clear_left_time() {
  left_time_ = 0;
  clear_has_left_time();
}
inline ::google::protobuf::int32 DailyBackTaskBackReq::left_time() const {
  return left_time_;
}
inline void DailyBackTaskBackReq::set_left_time(::google::protobuf::int32 value) {
  set_has_left_time();
  left_time_ = value;
}

// optional int32 external_left_time = 3;
inline bool DailyBackTaskBackReq::has_external_left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyBackTaskBackReq::set_has_external_left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyBackTaskBackReq::clear_has_external_left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyBackTaskBackReq::clear_external_left_time() {
  external_left_time_ = 0;
  clear_has_external_left_time();
}
inline ::google::protobuf::int32 DailyBackTaskBackReq::external_left_time() const {
  return external_left_time_;
}
inline void DailyBackTaskBackReq::set_external_left_time(::google::protobuf::int32 value) {
  set_has_external_left_time();
  external_left_time_ = value;
}

// optional int32 type = 4;
inline bool DailyBackTaskBackReq::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyBackTaskBackReq::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyBackTaskBackReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyBackTaskBackReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DailyBackTaskBackReq::type() const {
  return type_;
}
inline void DailyBackTaskBackReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// DailyBackTaskBackRsp

// optional int32 ret_code = 1;
inline bool DailyBackTaskBackRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyBackTaskBackRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyBackTaskBackRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyBackTaskBackRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 DailyBackTaskBackRsp::ret_code() const {
  return ret_code_;
}
inline void DailyBackTaskBackRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional .proto_ff.DailyTaskBackEntry data = 2;
inline bool DailyBackTaskBackRsp::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyBackTaskBackRsp::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyBackTaskBackRsp::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyBackTaskBackRsp::clear_data() {
  if (data_ != NULL) data_->::proto_ff::DailyTaskBackEntry::Clear();
  clear_has_data();
}
inline const ::proto_ff::DailyTaskBackEntry& DailyBackTaskBackRsp::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::DailyTaskBackEntry* DailyBackTaskBackRsp::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::DailyTaskBackEntry;
  return data_;
}
inline ::proto_ff::DailyTaskBackEntry* DailyBackTaskBackRsp::release_data() {
  clear_has_data();
  ::proto_ff::DailyTaskBackEntry* temp = data_;
  data_ = NULL;
  return temp;
}
inline void DailyBackTaskBackRsp::set_allocated_data(::proto_ff::DailyTaskBackEntry* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// DailyLimitTaskAddAllReadyReq

// -------------------------------------------------------------------

// DailyLimitTaskAddAllReadyRsp

// optional int32 ret_code = 1;
inline bool DailyLimitTaskAddAllReadyRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyLimitTaskAddAllReadyRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyLimitTaskAddAllReadyRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyLimitTaskAddAllReadyRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 DailyLimitTaskAddAllReadyRsp::ret_code() const {
  return ret_code_;
}
inline void DailyLimitTaskAddAllReadyRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .proto_ff.DailyTaskLimitEntry data = 2;
inline int DailyLimitTaskAddAllReadyRsp::data_size() const {
  return data_.size();
}
inline void DailyLimitTaskAddAllReadyRsp::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::DailyTaskLimitEntry& DailyLimitTaskAddAllReadyRsp::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyLimitTaskAddAllReadyRsp::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::DailyTaskLimitEntry* DailyLimitTaskAddAllReadyRsp::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >&
DailyLimitTaskAddAllReadyRsp::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskLimitEntry >*
DailyLimitTaskAddAllReadyRsp::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// DailyBackTaskBackAllReq

// optional int32 type = 1;
inline bool DailyBackTaskBackAllReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyBackTaskBackAllReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyBackTaskBackAllReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyBackTaskBackAllReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DailyBackTaskBackAllReq::type() const {
  return type_;
}
inline void DailyBackTaskBackAllReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional bool back = 2;
inline bool DailyBackTaskBackAllReq::has_back() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyBackTaskBackAllReq::set_has_back() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyBackTaskBackAllReq::clear_has_back() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyBackTaskBackAllReq::clear_back() {
  back_ = false;
  clear_has_back();
}
inline bool DailyBackTaskBackAllReq::back() const {
  return back_;
}
inline void DailyBackTaskBackAllReq::set_back(bool value) {
  set_has_back();
  back_ = value;
}

// optional bool external_back = 3;
inline bool DailyBackTaskBackAllReq::has_external_back() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyBackTaskBackAllReq::set_has_external_back() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyBackTaskBackAllReq::clear_has_external_back() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyBackTaskBackAllReq::clear_external_back() {
  external_back_ = false;
  clear_has_external_back();
}
inline bool DailyBackTaskBackAllReq::external_back() const {
  return external_back_;
}
inline void DailyBackTaskBackAllReq::set_external_back(bool value) {
  set_has_external_back();
  external_back_ = value;
}

// -------------------------------------------------------------------

// DailyBackTaskBackAllRsp

// optional int32 ret_code = 1;
inline bool DailyBackTaskBackAllRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyBackTaskBackAllRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyBackTaskBackAllRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyBackTaskBackAllRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 DailyBackTaskBackAllRsp::ret_code() const {
  return ret_code_;
}
inline void DailyBackTaskBackAllRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .proto_ff.DailyTaskBackEntry data = 2;
inline int DailyBackTaskBackAllRsp::data_size() const {
  return data_.size();
}
inline void DailyBackTaskBackAllRsp::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::DailyTaskBackEntry& DailyBackTaskBackAllRsp::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyBackTaskBackAllRsp::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::DailyTaskBackEntry* DailyBackTaskBackAllRsp::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >&
DailyBackTaskBackAllRsp::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DailyTaskBackEntry >*
DailyBackTaskBackAllRsp::mutable_data() {
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientServer_2eproto__INCLUDED
