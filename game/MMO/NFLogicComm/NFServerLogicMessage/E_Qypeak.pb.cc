// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Qypeak.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Qypeak.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_QypeakBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QypeakBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QypeakBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QypeakBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_QypeakConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_QypeakConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_QypeakConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_QypeakConstant_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fQypeak_2eproto() {
  protobuf_AddDesc_E_5fQypeak_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Qypeak.proto");
  GOOGLE_CHECK(file != NULL);
  E_QypeakBack_descriptor_ = file->message_type(0);
  static const int E_QypeakBack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakBack, m_layers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakBack, m_skillnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakBack, m_reward_),
  };
  E_QypeakBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QypeakBack_descriptor_,
      E_QypeakBack::default_instance_,
      E_QypeakBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QypeakBack));
  Sheet_QypeakBack_descriptor_ = file->message_type(1);
  static const int Sheet_QypeakBack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QypeakBack, e_qypeakback_list_),
  };
  Sheet_QypeakBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QypeakBack_descriptor_,
      Sheet_QypeakBack::default_instance_,
      Sheet_QypeakBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QypeakBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QypeakBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QypeakBack));
  E_QypeakConstant_descriptor_ = file->message_type(2);
  static const int E_QypeakConstant_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, m_mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, m_revivalbuff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, m_rankreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, m_titleshow_),
  };
  E_QypeakConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_QypeakConstant_descriptor_,
      E_QypeakConstant::default_instance_,
      E_QypeakConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_QypeakConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_QypeakConstant));
  Sheet_QypeakConstant_descriptor_ = file->message_type(3);
  static const int Sheet_QypeakConstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QypeakConstant, e_qypeakconstant_list_),
  };
  Sheet_QypeakConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_QypeakConstant_descriptor_,
      Sheet_QypeakConstant::default_instance_,
      Sheet_QypeakConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QypeakConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_QypeakConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_QypeakConstant));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fQypeak_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QypeakBack_descriptor_, &E_QypeakBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QypeakBack_descriptor_, &Sheet_QypeakBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_QypeakConstant_descriptor_, &E_QypeakConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_QypeakConstant_descriptor_, &Sheet_QypeakConstant::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fQypeak_2eproto() {
  delete E_QypeakBack::default_instance_;
  delete E_QypeakBack_reflection_;
  delete Sheet_QypeakBack::default_instance_;
  delete Sheet_QypeakBack_reflection_;
  delete E_QypeakConstant::default_instance_;
  delete E_QypeakConstant_reflection_;
  delete Sheet_QypeakConstant::default_instance_;
  delete Sheet_QypeakConstant_reflection_;
}

void protobuf_AddDesc_E_5fQypeak_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016E_Qypeak.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"p\n\014E_QypeakBack\022\034\n\010m_layers\030\001 "
    "\001(\005B\n\302\377\024\006\345\261\202\346\225\260\022$\n\nm_skillNum\030\002 \001(\005B\020\302\377\024"
    "\014\345\207\273\346\235\200\346\225\260\351\207\217\022\034\n\010m_reward\030\003 \001(\005B\n\302\377\024\006\345\245\226"
    "\345\212\261\"K\n\020Sheet_QypeakBack\0227\n\021E_QypeakBack_"
    "List\030\001 \003(\0132\026.proto_ff.E_QypeakBackB\004\210\301\024\020"
    "\"\305\001\n\020E_QypeakConstant\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024"
    "\002id\022\035\n\007m_mapid\030\002 \001(\005B\014\302\377\024\010\345\234\260\345\233\276id\022%\n\rm_"
    "revivalBuff\030\003 \001(\005B\016\302\377\024\n\345\244\215\346\264\273buff\022*\n\014m_r"
    "ankreward\030\004 \003(\005B\024\302\377\024\014\346\216\222\345\220\215\345\245\226\345\212\261\210\301\024\003\022)\n"
    "\013m_titleshow\030\005 \003(\005B\024\302\377\024\014\347\247\260\345\217\267\345\261\225\347\244\272\210\301\024\003"
    "\"W\n\024Sheet_QypeakConstant\022\?\n\025E_QypeakCons"
    "tant_List\030\001 \003(\0132\032.proto_ff.E_QypeakConst"
    "antB\004\210\301\024\002", 529);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Qypeak.proto", &protobuf_RegisterTypes);
  E_QypeakBack::default_instance_ = new E_QypeakBack();
  Sheet_QypeakBack::default_instance_ = new Sheet_QypeakBack();
  E_QypeakConstant::default_instance_ = new E_QypeakConstant();
  Sheet_QypeakConstant::default_instance_ = new Sheet_QypeakConstant();
  E_QypeakBack::default_instance_->InitAsDefaultInstance();
  Sheet_QypeakBack::default_instance_->InitAsDefaultInstance();
  E_QypeakConstant::default_instance_->InitAsDefaultInstance();
  Sheet_QypeakConstant::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fQypeak_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fQypeak_2eproto {
  StaticDescriptorInitializer_E_5fQypeak_2eproto() {
    protobuf_AddDesc_E_5fQypeak_2eproto();
  }
} static_descriptor_initializer_E_5fQypeak_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_QypeakBack::kMLayersFieldNumber;
const int E_QypeakBack::kMSkillNumFieldNumber;
const int E_QypeakBack::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_QypeakBack::E_QypeakBack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QypeakBack::InitAsDefaultInstance() {
}

E_QypeakBack::E_QypeakBack(const E_QypeakBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QypeakBack::SharedCtor() {
  _cached_size_ = 0;
  m_layers_ = 0;
  m_skillnum_ = 0;
  m_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QypeakBack::~E_QypeakBack() {
  SharedDtor();
}

void E_QypeakBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QypeakBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QypeakBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QypeakBack_descriptor_;
}

const E_QypeakBack& E_QypeakBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQypeak_2eproto();
  return *default_instance_;
}

E_QypeakBack* E_QypeakBack::default_instance_ = NULL;

E_QypeakBack* E_QypeakBack::New() const {
  return new E_QypeakBack;
}

void E_QypeakBack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_layers_ = 0;
    m_skillnum_ = 0;
    m_reward_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QypeakBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_layers = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_layers_)));
          set_has_m_layers();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_skillNum;
        break;
      }

      // optional int32 m_skillNum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillnum_)));
          set_has_m_skillnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_reward;
        break;
      }

      // optional int32 m_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_reward_)));
          set_has_m_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QypeakBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_layers = 1;
  if (has_m_layers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_layers(), output);
  }

  // optional int32 m_skillNum = 2;
  if (has_m_skillnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_skillnum(), output);
  }

  // optional int32 m_reward = 3;
  if (has_m_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_reward(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QypeakBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_layers = 1;
  if (has_m_layers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_layers(), target);
  }

  // optional int32 m_skillNum = 2;
  if (has_m_skillnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_skillnum(), target);
  }

  // optional int32 m_reward = 3;
  if (has_m_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_reward(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QypeakBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_layers = 1;
    if (has_m_layers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_layers());
    }

    // optional int32 m_skillNum = 2;
    if (has_m_skillnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillnum());
    }

    // optional int32 m_reward = 3;
    if (has_m_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_reward());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QypeakBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QypeakBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QypeakBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QypeakBack::MergeFrom(const E_QypeakBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_layers()) {
      set_m_layers(from.m_layers());
    }
    if (from.has_m_skillnum()) {
      set_m_skillnum(from.m_skillnum());
    }
    if (from.has_m_reward()) {
      set_m_reward(from.m_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QypeakBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QypeakBack::CopyFrom(const E_QypeakBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QypeakBack::IsInitialized() const {

  return true;
}

void E_QypeakBack::Swap(E_QypeakBack* other) {
  if (other != this) {
    std::swap(m_layers_, other->m_layers_);
    std::swap(m_skillnum_, other->m_skillnum_);
    std::swap(m_reward_, other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QypeakBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QypeakBack_descriptor_;
  metadata.reflection = E_QypeakBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QypeakBack::kEQypeakBackListFieldNumber;
#endif  // !_MSC_VER

Sheet_QypeakBack::Sheet_QypeakBack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QypeakBack::InitAsDefaultInstance() {
}

Sheet_QypeakBack::Sheet_QypeakBack(const Sheet_QypeakBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QypeakBack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QypeakBack::~Sheet_QypeakBack() {
  SharedDtor();
}

void Sheet_QypeakBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QypeakBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QypeakBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QypeakBack_descriptor_;
}

const Sheet_QypeakBack& Sheet_QypeakBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQypeak_2eproto();
  return *default_instance_;
}

Sheet_QypeakBack* Sheet_QypeakBack::default_instance_ = NULL;

Sheet_QypeakBack* Sheet_QypeakBack::New() const {
  return new Sheet_QypeakBack;
}

void Sheet_QypeakBack::Clear() {
  e_qypeakback_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QypeakBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QypeakBack E_QypeakBack_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QypeakBack_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qypeakback_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QypeakBack_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QypeakBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QypeakBack E_QypeakBack_List = 1;
  for (int i = 0; i < this->e_qypeakback_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qypeakback_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QypeakBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QypeakBack E_QypeakBack_List = 1;
  for (int i = 0; i < this->e_qypeakback_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qypeakback_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QypeakBack::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QypeakBack E_QypeakBack_List = 1;
  total_size += 1 * this->e_qypeakback_list_size();
  for (int i = 0; i < this->e_qypeakback_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qypeakback_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QypeakBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QypeakBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QypeakBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QypeakBack::MergeFrom(const Sheet_QypeakBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qypeakback_list_.MergeFrom(from.e_qypeakback_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QypeakBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QypeakBack::CopyFrom(const Sheet_QypeakBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QypeakBack::IsInitialized() const {

  return true;
}

void Sheet_QypeakBack::Swap(Sheet_QypeakBack* other) {
  if (other != this) {
    e_qypeakback_list_.Swap(&other->e_qypeakback_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QypeakBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QypeakBack_descriptor_;
  metadata.reflection = Sheet_QypeakBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_QypeakConstant::kMIdFieldNumber;
const int E_QypeakConstant::kMMapidFieldNumber;
const int E_QypeakConstant::kMRevivalBuffFieldNumber;
const int E_QypeakConstant::kMRankrewardFieldNumber;
const int E_QypeakConstant::kMTitleshowFieldNumber;
#endif  // !_MSC_VER

E_QypeakConstant::E_QypeakConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_QypeakConstant::InitAsDefaultInstance() {
}

E_QypeakConstant::E_QypeakConstant(const E_QypeakConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_QypeakConstant::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_mapid_ = 0;
  m_revivalbuff_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_QypeakConstant::~E_QypeakConstant() {
  SharedDtor();
}

void E_QypeakConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_QypeakConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_QypeakConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_QypeakConstant_descriptor_;
}

const E_QypeakConstant& E_QypeakConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQypeak_2eproto();
  return *default_instance_;
}

E_QypeakConstant* E_QypeakConstant::default_instance_ = NULL;

E_QypeakConstant* E_QypeakConstant::New() const {
  return new E_QypeakConstant;
}

void E_QypeakConstant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_mapid_ = 0;
    m_revivalbuff_ = 0;
  }
  m_rankreward_.Clear();
  m_titleshow_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_QypeakConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_mapid;
        break;
      }

      // optional int32 m_mapid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mapid_)));
          set_has_m_mapid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_revivalBuff;
        break;
      }

      // optional int32 m_revivalBuff = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_revivalBuff:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_revivalbuff_)));
          set_has_m_revivalbuff();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_rankreward;
        break;
      }

      // repeated int32 m_rankreward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rankreward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_m_rankreward())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_rankreward())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_rankreward;
        if (input->ExpectTag(40)) goto parse_m_titleshow;
        break;
      }

      // repeated int32 m_titleshow = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_titleshow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_m_titleshow())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_titleshow())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_titleshow;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_QypeakConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_mapid = 2;
  if (has_m_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_mapid(), output);
  }

  // optional int32 m_revivalBuff = 3;
  if (has_m_revivalbuff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_revivalbuff(), output);
  }

  // repeated int32 m_rankreward = 4;
  for (int i = 0; i < this->m_rankreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->m_rankreward(i), output);
  }

  // repeated int32 m_titleshow = 5;
  for (int i = 0; i < this->m_titleshow_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->m_titleshow(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_QypeakConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_mapid = 2;
  if (has_m_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_mapid(), target);
  }

  // optional int32 m_revivalBuff = 3;
  if (has_m_revivalbuff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_revivalbuff(), target);
  }

  // repeated int32 m_rankreward = 4;
  for (int i = 0; i < this->m_rankreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->m_rankreward(i), target);
  }

  // repeated int32 m_titleshow = 5;
  for (int i = 0; i < this->m_titleshow_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->m_titleshow(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_QypeakConstant::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_mapid = 2;
    if (has_m_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mapid());
    }

    // optional int32 m_revivalBuff = 3;
    if (has_m_revivalbuff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_revivalbuff());
    }

  }
  // repeated int32 m_rankreward = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_rankreward_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_rankreward(i));
    }
    total_size += 1 * this->m_rankreward_size() + data_size;
  }

  // repeated int32 m_titleshow = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_titleshow_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_titleshow(i));
    }
    total_size += 1 * this->m_titleshow_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_QypeakConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_QypeakConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_QypeakConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_QypeakConstant::MergeFrom(const E_QypeakConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_rankreward_.MergeFrom(from.m_rankreward_);
  m_titleshow_.MergeFrom(from.m_titleshow_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_mapid()) {
      set_m_mapid(from.m_mapid());
    }
    if (from.has_m_revivalbuff()) {
      set_m_revivalbuff(from.m_revivalbuff());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_QypeakConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_QypeakConstant::CopyFrom(const E_QypeakConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_QypeakConstant::IsInitialized() const {

  return true;
}

void E_QypeakConstant::Swap(E_QypeakConstant* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_mapid_, other->m_mapid_);
    std::swap(m_revivalbuff_, other->m_revivalbuff_);
    m_rankreward_.Swap(&other->m_rankreward_);
    m_titleshow_.Swap(&other->m_titleshow_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_QypeakConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_QypeakConstant_descriptor_;
  metadata.reflection = E_QypeakConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_QypeakConstant::kEQypeakConstantListFieldNumber;
#endif  // !_MSC_VER

Sheet_QypeakConstant::Sheet_QypeakConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_QypeakConstant::InitAsDefaultInstance() {
}

Sheet_QypeakConstant::Sheet_QypeakConstant(const Sheet_QypeakConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_QypeakConstant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_QypeakConstant::~Sheet_QypeakConstant() {
  SharedDtor();
}

void Sheet_QypeakConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_QypeakConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_QypeakConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_QypeakConstant_descriptor_;
}

const Sheet_QypeakConstant& Sheet_QypeakConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fQypeak_2eproto();
  return *default_instance_;
}

Sheet_QypeakConstant* Sheet_QypeakConstant::default_instance_ = NULL;

Sheet_QypeakConstant* Sheet_QypeakConstant::New() const {
  return new Sheet_QypeakConstant;
}

void Sheet_QypeakConstant::Clear() {
  e_qypeakconstant_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_QypeakConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_QypeakConstant E_QypeakConstant_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_QypeakConstant_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_qypeakconstant_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_QypeakConstant_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_QypeakConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_QypeakConstant E_QypeakConstant_List = 1;
  for (int i = 0; i < this->e_qypeakconstant_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_qypeakconstant_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_QypeakConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_QypeakConstant E_QypeakConstant_List = 1;
  for (int i = 0; i < this->e_qypeakconstant_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_qypeakconstant_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_QypeakConstant::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_QypeakConstant E_QypeakConstant_List = 1;
  total_size += 1 * this->e_qypeakconstant_list_size();
  for (int i = 0; i < this->e_qypeakconstant_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_qypeakconstant_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_QypeakConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_QypeakConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_QypeakConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_QypeakConstant::MergeFrom(const Sheet_QypeakConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_qypeakconstant_list_.MergeFrom(from.e_qypeakconstant_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_QypeakConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_QypeakConstant::CopyFrom(const Sheet_QypeakConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_QypeakConstant::IsInitialized() const {

  return true;
}

void Sheet_QypeakConstant::Swap(Sheet_QypeakConstant* other) {
  if (other != this) {
    e_qypeakconstant_list_.Swap(&other->e_qypeakconstant_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_QypeakConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_QypeakConstant_descriptor_;
  metadata.reflection = Sheet_QypeakConstant_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
