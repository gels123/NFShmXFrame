// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: occupation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "occupation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_OccupationOccupation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OccupationOccupation_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_OccupationOccupation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_OccupationOccupation_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OccupationStage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OccupationStage_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_OccupationStage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_OccupationStage_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OccupationAttributeAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OccupationAttributeAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OccupationAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OccupationAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_OccupationAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_OccupationAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OccupationSoulAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OccupationSoulAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OccupationSoul_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OccupationSoul_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_OccupationSoul_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_OccupationSoul_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_occupation_2eproto() {
  protobuf_AddDesc_occupation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "occupation.proto");
  GOOGLE_CHECK(file != NULL);
  E_OccupationOccupation_descriptor_ = file->message_type(0);
  static const int E_OccupationOccupation_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_professionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_modelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_activedesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, m_itemids_),
  };
  E_OccupationOccupation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OccupationOccupation_descriptor_,
      E_OccupationOccupation::default_instance_,
      E_OccupationOccupation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationOccupation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OccupationOccupation));
  Sheet_OccupationOccupation_descriptor_ = file->message_type(1);
  static const int Sheet_OccupationOccupation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationOccupation, e_occupationoccupation_list_),
  };
  Sheet_OccupationOccupation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_OccupationOccupation_descriptor_,
      Sheet_OccupationOccupation::default_instance_,
      Sheet_OccupationOccupation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationOccupation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationOccupation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_OccupationOccupation));
  E_OccupationStage_descriptor_ = file->message_type(2);
  static const int E_OccupationStage_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_stgae_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_stgaeattshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_stgaeatt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_battle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_lightsoul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_soultpye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, m_itemid_),
  };
  E_OccupationStage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OccupationStage_descriptor_,
      E_OccupationStage::default_instance_,
      E_OccupationStage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationStage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OccupationStage));
  Sheet_OccupationStage_descriptor_ = file->message_type(3);
  static const int Sheet_OccupationStage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationStage, e_occupationstage_list_),
  };
  Sheet_OccupationStage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_OccupationStage_descriptor_,
      Sheet_OccupationStage::default_instance_,
      Sheet_OccupationStage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationStage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationStage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_OccupationStage));
  E_OccupationAttributeAttributeDesc_descriptor_ = file->message_type(4);
  static const int E_OccupationAttributeAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttributeAttributeDesc, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttributeAttributeDesc, m_value_),
  };
  E_OccupationAttributeAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OccupationAttributeAttributeDesc_descriptor_,
      E_OccupationAttributeAttributeDesc::default_instance_,
      E_OccupationAttributeAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttributeAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttributeAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OccupationAttributeAttributeDesc));
  E_OccupationAttribute_descriptor_ = file->message_type(5);
  static const int E_OccupationAttribute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttribute, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttribute, m_attribute_),
  };
  E_OccupationAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OccupationAttribute_descriptor_,
      E_OccupationAttribute::default_instance_,
      E_OccupationAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OccupationAttribute));
  Sheet_OccupationAttribute_descriptor_ = file->message_type(6);
  static const int Sheet_OccupationAttribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationAttribute, e_occupationattribute_list_),
  };
  Sheet_OccupationAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_OccupationAttribute_descriptor_,
      Sheet_OccupationAttribute::default_instance_,
      Sheet_OccupationAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_OccupationAttribute));
  E_OccupationSoulAttributeDesc_descriptor_ = file->message_type(7);
  static const int E_OccupationSoulAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoulAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoulAttributeDesc, m_value_),
  };
  E_OccupationSoulAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OccupationSoulAttributeDesc_descriptor_,
      E_OccupationSoulAttributeDesc::default_instance_,
      E_OccupationSoulAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoulAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoulAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OccupationSoulAttributeDesc));
  E_OccupationSoul_descriptor_ = file->message_type(8);
  static const int E_OccupationSoul_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoul, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoul, m_soultpye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoul, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoul, m_attribute_),
  };
  E_OccupationSoul_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OccupationSoul_descriptor_,
      E_OccupationSoul::default_instance_,
      E_OccupationSoul_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoul, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OccupationSoul, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OccupationSoul));
  Sheet_OccupationSoul_descriptor_ = file->message_type(9);
  static const int Sheet_OccupationSoul_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationSoul, e_occupationsoul_list_),
  };
  Sheet_OccupationSoul_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_OccupationSoul_descriptor_,
      Sheet_OccupationSoul::default_instance_,
      Sheet_OccupationSoul_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationSoul, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OccupationSoul, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_OccupationSoul));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_occupation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OccupationOccupation_descriptor_, &E_OccupationOccupation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_OccupationOccupation_descriptor_, &Sheet_OccupationOccupation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OccupationStage_descriptor_, &E_OccupationStage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_OccupationStage_descriptor_, &Sheet_OccupationStage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OccupationAttributeAttributeDesc_descriptor_, &E_OccupationAttributeAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OccupationAttribute_descriptor_, &E_OccupationAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_OccupationAttribute_descriptor_, &Sheet_OccupationAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OccupationSoulAttributeDesc_descriptor_, &E_OccupationSoulAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OccupationSoul_descriptor_, &E_OccupationSoul::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_OccupationSoul_descriptor_, &Sheet_OccupationSoul::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_occupation_2eproto() {
  delete E_OccupationOccupation::default_instance_;
  delete E_OccupationOccupation_reflection_;
  delete Sheet_OccupationOccupation::default_instance_;
  delete Sheet_OccupationOccupation_reflection_;
  delete E_OccupationStage::default_instance_;
  delete E_OccupationStage_reflection_;
  delete Sheet_OccupationStage::default_instance_;
  delete Sheet_OccupationStage_reflection_;
  delete E_OccupationAttributeAttributeDesc::default_instance_;
  delete E_OccupationAttributeAttributeDesc_reflection_;
  delete E_OccupationAttribute::default_instance_;
  delete E_OccupationAttribute_reflection_;
  delete Sheet_OccupationAttribute::default_instance_;
  delete Sheet_OccupationAttribute_reflection_;
  delete E_OccupationSoulAttributeDesc::default_instance_;
  delete E_OccupationSoulAttributeDesc_reflection_;
  delete E_OccupationSoul::default_instance_;
  delete E_OccupationSoul_reflection_;
  delete Sheet_OccupationSoul::default_instance_;
  delete Sheet_OccupationSoul_reflection_;
}

void protobuf_AddDesc_occupation_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020occupation.proto\022\010proto_ff\032\025yd_fieldop"
    "tions.proto\"\216\003\n\026E_OccupationOccupation\022 "
    "\n\004m_id\030\001 \001(\003B\022\302\377\024\016\350\275\254\350\201\214\350\201\214\344\270\232ID\022\'\n\016m_pr"
    "ofessionid\030\002 \001(\005B\017\302\377\024\013\344\270\273\350\201\214\344\270\232ID\022!\n\007m_g"
    "rade\030\003 \001(\005B\020\302\377\024\014\350\201\214\344\270\232\347\255\211\347\272\247\022+\n\007m_equip\030"
    "\004 \001(\tB\032\302\377\024\022\345\261\225\347\244\272\346\255\246\345\231\250\346\250\241\345\236\213\220\301\024<\022-\n\tm_m"
    "odelid\030\005 \001(\tB\032\302\377\024\022\345\261\225\347\244\272\350\241\243\346\234\215\346\250\241\345\236\213\220\301\024<"
    "\022*\n\014m_activedesc\030\006 \001(\tB\024\302\377\024\014\346\277\200\346\264\273\346\217\217\350\277\260"
    "\220\301\024x\022!\n\007m_level\030\007 \001(\005B\020\302\377\024\014\347\255\211\347\272\247\350\246\201\346\261\202\022"
    "&\n\nm_skill_id\030\010 \001(\003B\022\302\377\024\016\345\242\236\345\212\240\346\212\200\350\203\275ID\022"
    "3\n\tm_itemids\030\t \001(\tB \302\377\024\030\350\275\254\350\201\214\351\201\223\345\205\267\345\245\226\345"
    "\212\261\345\245\226\345\212\261\220\301\024<\"i\n\032Sheet_OccupationOccupati"
    "on\022K\n\033E_OccupationOccupation_List\030\001 \003(\0132"
    " .proto_ff.E_OccupationOccupationB\004\210\301\024\024\""
    "\321\003\n\021E_OccupationStage\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024"
    "\002id\022!\n\007m_grade\030\002 \001(\005B\020\302\377\024\014\350\201\214\344\270\232\347\255\211\347\272\247\022\037"
    "\n\007m_stgae\030\003 \001(\tB\016\302\377\024\006\351\230\266\346\256\265\220\301\024<\022\036\n\004m_lv\030"
    "\004 \001(\005B\020\302\377\024\014\350\246\201\346\261\202\347\255\211\347\272\247\0221\n\016m_stgaeattsho"
    "w\030\005 \001(\005B\031\302\377\024\025\345\261\236\346\200\247\346\230\257\345\220\246\345\261\225\347\244\272\347\224\250\022$\n\nm_"
    "stgaeatt\030\006 \001(\005B\020\302\377\024\014\351\230\266\346\256\265\345\261\236\346\200\247\022(\n\010m_ta"
    "skid\030\007 \001(\tB\026\302\377\024\016\351\230\266\346\256\265\344\273\273\345\212\241ID\220\301\024<\022\"\n\010m_"
    "battle\030\010 \001(\005B\020\302\377\024\014\346\216\250\350\215\220\346\210\230\345\212\233\022#\n\tm_skil"
    "lid\030\t \001(\005B\020\302\377\024\014\346\277\200\346\264\273\346\212\200\350\203\275\022)\n\013m_lightso"
    "ul\030\n \001(\tB\024\302\377\024\014\347\202\271\344\272\256\351\276\231\351\255\202\220\301\024<\022$\n\nm_soul"
    "tpye\030\013 \001(\005B\020\302\377\024\014\351\276\231\351\255\202\347\261\273\345\236\213\022%\n\010m_itemid"
    "\030\014 \001(\005B\023\302\377\024\017\347\202\271\344\272\256\347\232\204\351\201\223\345\205\267\"Z\n\025Sheet_Occ"
    "upationStage\022A\n\026E_OccupationStage_List\030\001"
    " \003(\0132\033.proto_ff.E_OccupationStageB\004\210\301\024(\""
    "Y\n\"E_OccupationAttributeAttributeDesc\022\026\n"
    "\006m_item\030\001 \001(\005B\006\302\377\024\002ID\022\033\n\007m_value\030\002 \001(\005B\n"
    "\302\377\024\006\346\225\260\351\207\217\"\214\001\n\025E_OccupationAttribute\022\032\n\004"
    "m_id\030\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247id\022W\n\013m_attribute\030"
    "\002 \003(\0132,.proto_ff.E_OccupationAttributeAt"
    "tributeDescB\024\302\377\024\014\345\261\236\346\200\247\351\201\223\345\205\267\210\301\024\006\"f\n\031She"
    "et_OccupationAttribute\022I\n\032E_OccupationAt"
    "tribute_List\030\001 \003(\0132\037.proto_ff.E_Occupati"
    "onAttributeB\004\210\301\024\024\"Q\n\035E_OccupationSoulAtt"
    "ributeDesc\022\026\n\006m_type\030\001 \001(\005B\006\302\377\024\002ID\022\030\n\007m_"
    "value\030\002 \001(\005B\007\302\377\024\003\345\200\274\"\310\001\n\020E_OccupationSou"
    "l\022\032\n\004m_id\030\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247id\022$\n\nm_soult"
    "pye\030\002 \001(\005B\020\302\377\024\014\345\261\236\346\200\247\347\261\273\345\236\213\022\036\n\nm_positio"
    "n\030\003 \001(\005B\n\302\377\024\006\344\275\215\347\275\256\022R\n\013m_attribute\030\004 \003(\013"
    "2\'.proto_ff.E_OccupationSoulAttributeDes"
    "cB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\006\"W\n\024Sheet_Occupat"
    "ionSoul\022\?\n\025E_OccupationSoul_List\030\001 \003(\0132\032"
    ".proto_ff.E_OccupationSoulB\004\210\301\024<", 1832);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "occupation.proto", &protobuf_RegisterTypes);
  E_OccupationOccupation::default_instance_ = new E_OccupationOccupation();
  Sheet_OccupationOccupation::default_instance_ = new Sheet_OccupationOccupation();
  E_OccupationStage::default_instance_ = new E_OccupationStage();
  Sheet_OccupationStage::default_instance_ = new Sheet_OccupationStage();
  E_OccupationAttributeAttributeDesc::default_instance_ = new E_OccupationAttributeAttributeDesc();
  E_OccupationAttribute::default_instance_ = new E_OccupationAttribute();
  Sheet_OccupationAttribute::default_instance_ = new Sheet_OccupationAttribute();
  E_OccupationSoulAttributeDesc::default_instance_ = new E_OccupationSoulAttributeDesc();
  E_OccupationSoul::default_instance_ = new E_OccupationSoul();
  Sheet_OccupationSoul::default_instance_ = new Sheet_OccupationSoul();
  E_OccupationOccupation::default_instance_->InitAsDefaultInstance();
  Sheet_OccupationOccupation::default_instance_->InitAsDefaultInstance();
  E_OccupationStage::default_instance_->InitAsDefaultInstance();
  Sheet_OccupationStage::default_instance_->InitAsDefaultInstance();
  E_OccupationAttributeAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_OccupationAttribute::default_instance_->InitAsDefaultInstance();
  Sheet_OccupationAttribute::default_instance_->InitAsDefaultInstance();
  E_OccupationSoulAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_OccupationSoul::default_instance_->InitAsDefaultInstance();
  Sheet_OccupationSoul::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_occupation_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_occupation_2eproto {
  StaticDescriptorInitializer_occupation_2eproto() {
    protobuf_AddDesc_occupation_2eproto();
  }
} static_descriptor_initializer_occupation_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_OccupationOccupation::kMIdFieldNumber;
const int E_OccupationOccupation::kMProfessionidFieldNumber;
const int E_OccupationOccupation::kMGradeFieldNumber;
const int E_OccupationOccupation::kMEquipFieldNumber;
const int E_OccupationOccupation::kMModelidFieldNumber;
const int E_OccupationOccupation::kMActivedescFieldNumber;
const int E_OccupationOccupation::kMLevelFieldNumber;
const int E_OccupationOccupation::kMSkillIdFieldNumber;
const int E_OccupationOccupation::kMItemidsFieldNumber;
#endif  // !_MSC_VER

E_OccupationOccupation::E_OccupationOccupation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OccupationOccupation::InitAsDefaultInstance() {
}

E_OccupationOccupation::E_OccupationOccupation(const E_OccupationOccupation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OccupationOccupation::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_professionid_ = 0;
  m_grade_ = 0;
  m_equip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_modelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_level_ = 0;
  m_skill_id_ = GOOGLE_LONGLONG(0);
  m_itemids_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OccupationOccupation::~E_OccupationOccupation() {
  SharedDtor();
}

void E_OccupationOccupation::SharedDtor() {
  if (m_equip_ != &::google::protobuf::internal::kEmptyString) {
    delete m_equip_;
  }
  if (m_modelid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_modelid_;
  }
  if (m_activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete m_activedesc_;
  }
  if (m_itemids_ != &::google::protobuf::internal::kEmptyString) {
    delete m_itemids_;
  }
  if (this != default_instance_) {
  }
}

void E_OccupationOccupation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OccupationOccupation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OccupationOccupation_descriptor_;
}

const E_OccupationOccupation& E_OccupationOccupation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

E_OccupationOccupation* E_OccupationOccupation::default_instance_ = NULL;

E_OccupationOccupation* E_OccupationOccupation::New() const {
  return new E_OccupationOccupation;
}

void E_OccupationOccupation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_professionid_ = 0;
    m_grade_ = 0;
    if (has_m_equip()) {
      if (m_equip_ != &::google::protobuf::internal::kEmptyString) {
        m_equip_->clear();
      }
    }
    if (has_m_modelid()) {
      if (m_modelid_ != &::google::protobuf::internal::kEmptyString) {
        m_modelid_->clear();
      }
    }
    if (has_m_activedesc()) {
      if (m_activedesc_ != &::google::protobuf::internal::kEmptyString) {
        m_activedesc_->clear();
      }
    }
    m_level_ = 0;
    m_skill_id_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_itemids()) {
      if (m_itemids_ != &::google::protobuf::internal::kEmptyString) {
        m_itemids_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OccupationOccupation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_professionid;
        break;
      }

      // optional int32 m_professionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_professionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_professionid_)));
          set_has_m_professionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_grade;
        break;
      }

      // optional int32 m_grade = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grade_)));
          set_has_m_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_equip;
        break;
      }

      // optional string m_equip = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_equip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_equip().data(), this->m_equip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_modelid;
        break;
      }

      // optional string m_modelid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_modelid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_modelid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_modelid().data(), this->m_modelid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_activedesc;
        break;
      }

      // optional string m_activedesc = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_activedesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_activedesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_activedesc().data(), this->m_activedesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_skill_id;
        break;
      }

      // optional int64 m_skill_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_skill_id_)));
          set_has_m_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_itemids;
        break;
      }

      // optional string m_itemids = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_itemids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_itemids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_itemids().data(), this->m_itemids().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OccupationOccupation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_professionid = 2;
  if (has_m_professionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_professionid(), output);
  }

  // optional int32 m_grade = 3;
  if (has_m_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_grade(), output);
  }

  // optional string m_equip = 4;
  if (has_m_equip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_equip().data(), this->m_equip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_equip(), output);
  }

  // optional string m_modelid = 5;
  if (has_m_modelid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_modelid().data(), this->m_modelid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_modelid(), output);
  }

  // optional string m_activedesc = 6;
  if (has_m_activedesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_activedesc().data(), this->m_activedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_activedesc(), output);
  }

  // optional int32 m_level = 7;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_level(), output);
  }

  // optional int64 m_skill_id = 8;
  if (has_m_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->m_skill_id(), output);
  }

  // optional string m_itemids = 9;
  if (has_m_itemids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_itemids().data(), this->m_itemids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_itemids(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OccupationOccupation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_professionid = 2;
  if (has_m_professionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_professionid(), target);
  }

  // optional int32 m_grade = 3;
  if (has_m_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_grade(), target);
  }

  // optional string m_equip = 4;
  if (has_m_equip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_equip().data(), this->m_equip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_equip(), target);
  }

  // optional string m_modelid = 5;
  if (has_m_modelid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_modelid().data(), this->m_modelid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_modelid(), target);
  }

  // optional string m_activedesc = 6;
  if (has_m_activedesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_activedesc().data(), this->m_activedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_activedesc(), target);
  }

  // optional int32 m_level = 7;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_level(), target);
  }

  // optional int64 m_skill_id = 8;
  if (has_m_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->m_skill_id(), target);
  }

  // optional string m_itemids = 9;
  if (has_m_itemids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_itemids().data(), this->m_itemids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_itemids(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OccupationOccupation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_professionid = 2;
    if (has_m_professionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_professionid());
    }

    // optional int32 m_grade = 3;
    if (has_m_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grade());
    }

    // optional string m_equip = 4;
    if (has_m_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_equip());
    }

    // optional string m_modelid = 5;
    if (has_m_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_modelid());
    }

    // optional string m_activedesc = 6;
    if (has_m_activedesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_activedesc());
    }

    // optional int32 m_level = 7;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int64 m_skill_id = 8;
    if (has_m_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_skill_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string m_itemids = 9;
    if (has_m_itemids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_itemids());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OccupationOccupation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OccupationOccupation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OccupationOccupation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OccupationOccupation::MergeFrom(const E_OccupationOccupation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_professionid()) {
      set_m_professionid(from.m_professionid());
    }
    if (from.has_m_grade()) {
      set_m_grade(from.m_grade());
    }
    if (from.has_m_equip()) {
      set_m_equip(from.m_equip());
    }
    if (from.has_m_modelid()) {
      set_m_modelid(from.m_modelid());
    }
    if (from.has_m_activedesc()) {
      set_m_activedesc(from.m_activedesc());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_skill_id()) {
      set_m_skill_id(from.m_skill_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_itemids()) {
      set_m_itemids(from.m_itemids());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OccupationOccupation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OccupationOccupation::CopyFrom(const E_OccupationOccupation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OccupationOccupation::IsInitialized() const {

  return true;
}

void E_OccupationOccupation::Swap(E_OccupationOccupation* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_professionid_, other->m_professionid_);
    std::swap(m_grade_, other->m_grade_);
    std::swap(m_equip_, other->m_equip_);
    std::swap(m_modelid_, other->m_modelid_);
    std::swap(m_activedesc_, other->m_activedesc_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_skill_id_, other->m_skill_id_);
    std::swap(m_itemids_, other->m_itemids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OccupationOccupation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OccupationOccupation_descriptor_;
  metadata.reflection = E_OccupationOccupation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_OccupationOccupation::kEOccupationOccupationListFieldNumber;
#endif  // !_MSC_VER

Sheet_OccupationOccupation::Sheet_OccupationOccupation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_OccupationOccupation::InitAsDefaultInstance() {
}

Sheet_OccupationOccupation::Sheet_OccupationOccupation(const Sheet_OccupationOccupation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_OccupationOccupation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_OccupationOccupation::~Sheet_OccupationOccupation() {
  SharedDtor();
}

void Sheet_OccupationOccupation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_OccupationOccupation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_OccupationOccupation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_OccupationOccupation_descriptor_;
}

const Sheet_OccupationOccupation& Sheet_OccupationOccupation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

Sheet_OccupationOccupation* Sheet_OccupationOccupation::default_instance_ = NULL;

Sheet_OccupationOccupation* Sheet_OccupationOccupation::New() const {
  return new Sheet_OccupationOccupation;
}

void Sheet_OccupationOccupation::Clear() {
  e_occupationoccupation_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_OccupationOccupation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_OccupationOccupation E_OccupationOccupation_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_OccupationOccupation_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_occupationoccupation_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_OccupationOccupation_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_OccupationOccupation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_OccupationOccupation E_OccupationOccupation_List = 1;
  for (int i = 0; i < this->e_occupationoccupation_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_occupationoccupation_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_OccupationOccupation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_OccupationOccupation E_OccupationOccupation_List = 1;
  for (int i = 0; i < this->e_occupationoccupation_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_occupationoccupation_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_OccupationOccupation::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_OccupationOccupation E_OccupationOccupation_List = 1;
  total_size += 1 * this->e_occupationoccupation_list_size();
  for (int i = 0; i < this->e_occupationoccupation_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_occupationoccupation_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_OccupationOccupation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_OccupationOccupation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_OccupationOccupation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_OccupationOccupation::MergeFrom(const Sheet_OccupationOccupation& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_occupationoccupation_list_.MergeFrom(from.e_occupationoccupation_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_OccupationOccupation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_OccupationOccupation::CopyFrom(const Sheet_OccupationOccupation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_OccupationOccupation::IsInitialized() const {

  return true;
}

void Sheet_OccupationOccupation::Swap(Sheet_OccupationOccupation* other) {
  if (other != this) {
    e_occupationoccupation_list_.Swap(&other->e_occupationoccupation_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_OccupationOccupation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_OccupationOccupation_descriptor_;
  metadata.reflection = Sheet_OccupationOccupation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OccupationStage::kMIdFieldNumber;
const int E_OccupationStage::kMGradeFieldNumber;
const int E_OccupationStage::kMStgaeFieldNumber;
const int E_OccupationStage::kMLvFieldNumber;
const int E_OccupationStage::kMStgaeattshowFieldNumber;
const int E_OccupationStage::kMStgaeattFieldNumber;
const int E_OccupationStage::kMTaskidFieldNumber;
const int E_OccupationStage::kMBattleFieldNumber;
const int E_OccupationStage::kMSkillidFieldNumber;
const int E_OccupationStage::kMLightsoulFieldNumber;
const int E_OccupationStage::kMSoultpyeFieldNumber;
const int E_OccupationStage::kMItemidFieldNumber;
#endif  // !_MSC_VER

E_OccupationStage::E_OccupationStage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OccupationStage::InitAsDefaultInstance() {
}

E_OccupationStage::E_OccupationStage(const E_OccupationStage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OccupationStage::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_grade_ = 0;
  m_stgae_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_lv_ = 0;
  m_stgaeattshow_ = 0;
  m_stgaeatt_ = 0;
  m_taskid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_battle_ = 0;
  m_skillid_ = 0;
  m_lightsoul_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_soultpye_ = 0;
  m_itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OccupationStage::~E_OccupationStage() {
  SharedDtor();
}

void E_OccupationStage::SharedDtor() {
  if (m_stgae_ != &::google::protobuf::internal::kEmptyString) {
    delete m_stgae_;
  }
  if (m_taskid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_taskid_;
  }
  if (m_lightsoul_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lightsoul_;
  }
  if (this != default_instance_) {
  }
}

void E_OccupationStage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OccupationStage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OccupationStage_descriptor_;
}

const E_OccupationStage& E_OccupationStage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

E_OccupationStage* E_OccupationStage::default_instance_ = NULL;

E_OccupationStage* E_OccupationStage::New() const {
  return new E_OccupationStage;
}

void E_OccupationStage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_grade_ = 0;
    if (has_m_stgae()) {
      if (m_stgae_ != &::google::protobuf::internal::kEmptyString) {
        m_stgae_->clear();
      }
    }
    m_lv_ = 0;
    m_stgaeattshow_ = 0;
    m_stgaeatt_ = 0;
    if (has_m_taskid()) {
      if (m_taskid_ != &::google::protobuf::internal::kEmptyString) {
        m_taskid_->clear();
      }
    }
    m_battle_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_skillid_ = 0;
    if (has_m_lightsoul()) {
      if (m_lightsoul_ != &::google::protobuf::internal::kEmptyString) {
        m_lightsoul_->clear();
      }
    }
    m_soultpye_ = 0;
    m_itemid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OccupationStage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_grade;
        break;
      }

      // optional int32 m_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grade_)));
          set_has_m_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_stgae;
        break;
      }

      // optional string m_stgae = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_stgae:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_stgae()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_stgae().data(), this->m_stgae().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_stgaeattshow;
        break;
      }

      // optional int32 m_stgaeattshow = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stgaeattshow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stgaeattshow_)));
          set_has_m_stgaeattshow();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_stgaeatt;
        break;
      }

      // optional int32 m_stgaeatt = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stgaeatt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stgaeatt_)));
          set_has_m_stgaeatt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_taskid;
        break;
      }

      // optional string m_taskid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_taskid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_taskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_taskid().data(), this->m_taskid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_battle;
        break;
      }

      // optional int32 m_battle = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_battle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_battle_)));
          set_has_m_battle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_skillid;
        break;
      }

      // optional int32 m_skillid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_lightsoul;
        break;
      }

      // optional string m_lightsoul = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_lightsoul:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_lightsoul()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_lightsoul().data(), this->m_lightsoul().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_soultpye;
        break;
      }

      // optional int32 m_soultpye = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_soultpye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_soultpye_)));
          set_has_m_soultpye();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OccupationStage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_grade = 2;
  if (has_m_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_grade(), output);
  }

  // optional string m_stgae = 3;
  if (has_m_stgae()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_stgae().data(), this->m_stgae().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_stgae(), output);
  }

  // optional int32 m_lv = 4;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_lv(), output);
  }

  // optional int32 m_stgaeattshow = 5;
  if (has_m_stgaeattshow()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_stgaeattshow(), output);
  }

  // optional int32 m_stgaeatt = 6;
  if (has_m_stgaeatt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_stgaeatt(), output);
  }

  // optional string m_taskid = 7;
  if (has_m_taskid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_taskid().data(), this->m_taskid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_taskid(), output);
  }

  // optional int32 m_battle = 8;
  if (has_m_battle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_battle(), output);
  }

  // optional int32 m_skillid = 9;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_skillid(), output);
  }

  // optional string m_lightsoul = 10;
  if (has_m_lightsoul()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lightsoul().data(), this->m_lightsoul().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->m_lightsoul(), output);
  }

  // optional int32 m_soultpye = 11;
  if (has_m_soultpye()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_soultpye(), output);
  }

  // optional int32 m_itemid = 12;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OccupationStage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_grade = 2;
  if (has_m_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_grade(), target);
  }

  // optional string m_stgae = 3;
  if (has_m_stgae()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_stgae().data(), this->m_stgae().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_stgae(), target);
  }

  // optional int32 m_lv = 4;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_lv(), target);
  }

  // optional int32 m_stgaeattshow = 5;
  if (has_m_stgaeattshow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_stgaeattshow(), target);
  }

  // optional int32 m_stgaeatt = 6;
  if (has_m_stgaeatt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_stgaeatt(), target);
  }

  // optional string m_taskid = 7;
  if (has_m_taskid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_taskid().data(), this->m_taskid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_taskid(), target);
  }

  // optional int32 m_battle = 8;
  if (has_m_battle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_battle(), target);
  }

  // optional int32 m_skillid = 9;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_skillid(), target);
  }

  // optional string m_lightsoul = 10;
  if (has_m_lightsoul()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lightsoul().data(), this->m_lightsoul().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->m_lightsoul(), target);
  }

  // optional int32 m_soultpye = 11;
  if (has_m_soultpye()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_soultpye(), target);
  }

  // optional int32 m_itemid = 12;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OccupationStage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_grade = 2;
    if (has_m_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grade());
    }

    // optional string m_stgae = 3;
    if (has_m_stgae()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_stgae());
    }

    // optional int32 m_lv = 4;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_stgaeattshow = 5;
    if (has_m_stgaeattshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stgaeattshow());
    }

    // optional int32 m_stgaeatt = 6;
    if (has_m_stgaeatt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stgaeatt());
    }

    // optional string m_taskid = 7;
    if (has_m_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_taskid());
    }

    // optional int32 m_battle = 8;
    if (has_m_battle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_battle());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_skillid = 9;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

    // optional string m_lightsoul = 10;
    if (has_m_lightsoul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_lightsoul());
    }

    // optional int32 m_soultpye = 11;
    if (has_m_soultpye()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_soultpye());
    }

    // optional int32 m_itemid = 12;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OccupationStage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OccupationStage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OccupationStage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OccupationStage::MergeFrom(const E_OccupationStage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_grade()) {
      set_m_grade(from.m_grade());
    }
    if (from.has_m_stgae()) {
      set_m_stgae(from.m_stgae());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_stgaeattshow()) {
      set_m_stgaeattshow(from.m_stgaeattshow());
    }
    if (from.has_m_stgaeatt()) {
      set_m_stgaeatt(from.m_stgaeatt());
    }
    if (from.has_m_taskid()) {
      set_m_taskid(from.m_taskid());
    }
    if (from.has_m_battle()) {
      set_m_battle(from.m_battle());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_lightsoul()) {
      set_m_lightsoul(from.m_lightsoul());
    }
    if (from.has_m_soultpye()) {
      set_m_soultpye(from.m_soultpye());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OccupationStage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OccupationStage::CopyFrom(const E_OccupationStage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OccupationStage::IsInitialized() const {

  return true;
}

void E_OccupationStage::Swap(E_OccupationStage* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_grade_, other->m_grade_);
    std::swap(m_stgae_, other->m_stgae_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_stgaeattshow_, other->m_stgaeattshow_);
    std::swap(m_stgaeatt_, other->m_stgaeatt_);
    std::swap(m_taskid_, other->m_taskid_);
    std::swap(m_battle_, other->m_battle_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_lightsoul_, other->m_lightsoul_);
    std::swap(m_soultpye_, other->m_soultpye_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OccupationStage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OccupationStage_descriptor_;
  metadata.reflection = E_OccupationStage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_OccupationStage::kEOccupationStageListFieldNumber;
#endif  // !_MSC_VER

Sheet_OccupationStage::Sheet_OccupationStage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_OccupationStage::InitAsDefaultInstance() {
}

Sheet_OccupationStage::Sheet_OccupationStage(const Sheet_OccupationStage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_OccupationStage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_OccupationStage::~Sheet_OccupationStage() {
  SharedDtor();
}

void Sheet_OccupationStage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_OccupationStage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_OccupationStage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_OccupationStage_descriptor_;
}

const Sheet_OccupationStage& Sheet_OccupationStage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

Sheet_OccupationStage* Sheet_OccupationStage::default_instance_ = NULL;

Sheet_OccupationStage* Sheet_OccupationStage::New() const {
  return new Sheet_OccupationStage;
}

void Sheet_OccupationStage::Clear() {
  e_occupationstage_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_OccupationStage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_OccupationStage E_OccupationStage_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_OccupationStage_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_occupationstage_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_OccupationStage_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_OccupationStage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_OccupationStage E_OccupationStage_List = 1;
  for (int i = 0; i < this->e_occupationstage_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_occupationstage_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_OccupationStage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_OccupationStage E_OccupationStage_List = 1;
  for (int i = 0; i < this->e_occupationstage_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_occupationstage_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_OccupationStage::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_OccupationStage E_OccupationStage_List = 1;
  total_size += 1 * this->e_occupationstage_list_size();
  for (int i = 0; i < this->e_occupationstage_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_occupationstage_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_OccupationStage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_OccupationStage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_OccupationStage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_OccupationStage::MergeFrom(const Sheet_OccupationStage& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_occupationstage_list_.MergeFrom(from.e_occupationstage_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_OccupationStage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_OccupationStage::CopyFrom(const Sheet_OccupationStage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_OccupationStage::IsInitialized() const {

  return true;
}

void Sheet_OccupationStage::Swap(Sheet_OccupationStage* other) {
  if (other != this) {
    e_occupationstage_list_.Swap(&other->e_occupationstage_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_OccupationStage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_OccupationStage_descriptor_;
  metadata.reflection = Sheet_OccupationStage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OccupationAttributeAttributeDesc::kMItemFieldNumber;
const int E_OccupationAttributeAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_OccupationAttributeAttributeDesc::E_OccupationAttributeAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OccupationAttributeAttributeDesc::InitAsDefaultInstance() {
}

E_OccupationAttributeAttributeDesc::E_OccupationAttributeAttributeDesc(const E_OccupationAttributeAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OccupationAttributeAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_item_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OccupationAttributeAttributeDesc::~E_OccupationAttributeAttributeDesc() {
  SharedDtor();
}

void E_OccupationAttributeAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OccupationAttributeAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OccupationAttributeAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OccupationAttributeAttributeDesc_descriptor_;
}

const E_OccupationAttributeAttributeDesc& E_OccupationAttributeAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

E_OccupationAttributeAttributeDesc* E_OccupationAttributeAttributeDesc::default_instance_ = NULL;

E_OccupationAttributeAttributeDesc* E_OccupationAttributeAttributeDesc::New() const {
  return new E_OccupationAttributeAttributeDesc;
}

void E_OccupationAttributeAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_item_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OccupationAttributeAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OccupationAttributeAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_item(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OccupationAttributeAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_item(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OccupationAttributeAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_item = 1;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OccupationAttributeAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OccupationAttributeAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OccupationAttributeAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OccupationAttributeAttributeDesc::MergeFrom(const E_OccupationAttributeAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OccupationAttributeAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OccupationAttributeAttributeDesc::CopyFrom(const E_OccupationAttributeAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OccupationAttributeAttributeDesc::IsInitialized() const {

  return true;
}

void E_OccupationAttributeAttributeDesc::Swap(E_OccupationAttributeAttributeDesc* other) {
  if (other != this) {
    std::swap(m_item_, other->m_item_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OccupationAttributeAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OccupationAttributeAttributeDesc_descriptor_;
  metadata.reflection = E_OccupationAttributeAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OccupationAttribute::kMIdFieldNumber;
const int E_OccupationAttribute::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_OccupationAttribute::E_OccupationAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OccupationAttribute::InitAsDefaultInstance() {
}

E_OccupationAttribute::E_OccupationAttribute(const E_OccupationAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OccupationAttribute::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OccupationAttribute::~E_OccupationAttribute() {
  SharedDtor();
}

void E_OccupationAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OccupationAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OccupationAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OccupationAttribute_descriptor_;
}

const E_OccupationAttribute& E_OccupationAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

E_OccupationAttribute* E_OccupationAttribute::default_instance_ = NULL;

E_OccupationAttribute* E_OccupationAttribute::New() const {
  return new E_OccupationAttribute;
}

void E_OccupationAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OccupationAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_OccupationAttributeAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OccupationAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_OccupationAttributeAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OccupationAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_OccupationAttributeAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OccupationAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_OccupationAttributeAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OccupationAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OccupationAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OccupationAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OccupationAttribute::MergeFrom(const E_OccupationAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OccupationAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OccupationAttribute::CopyFrom(const E_OccupationAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OccupationAttribute::IsInitialized() const {

  return true;
}

void E_OccupationAttribute::Swap(E_OccupationAttribute* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OccupationAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OccupationAttribute_descriptor_;
  metadata.reflection = E_OccupationAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_OccupationAttribute::kEOccupationAttributeListFieldNumber;
#endif  // !_MSC_VER

Sheet_OccupationAttribute::Sheet_OccupationAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_OccupationAttribute::InitAsDefaultInstance() {
}

Sheet_OccupationAttribute::Sheet_OccupationAttribute(const Sheet_OccupationAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_OccupationAttribute::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_OccupationAttribute::~Sheet_OccupationAttribute() {
  SharedDtor();
}

void Sheet_OccupationAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_OccupationAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_OccupationAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_OccupationAttribute_descriptor_;
}

const Sheet_OccupationAttribute& Sheet_OccupationAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

Sheet_OccupationAttribute* Sheet_OccupationAttribute::default_instance_ = NULL;

Sheet_OccupationAttribute* Sheet_OccupationAttribute::New() const {
  return new Sheet_OccupationAttribute;
}

void Sheet_OccupationAttribute::Clear() {
  e_occupationattribute_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_OccupationAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_OccupationAttribute E_OccupationAttribute_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_OccupationAttribute_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_occupationattribute_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_OccupationAttribute_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_OccupationAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_OccupationAttribute E_OccupationAttribute_List = 1;
  for (int i = 0; i < this->e_occupationattribute_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_occupationattribute_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_OccupationAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_OccupationAttribute E_OccupationAttribute_List = 1;
  for (int i = 0; i < this->e_occupationattribute_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_occupationattribute_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_OccupationAttribute::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_OccupationAttribute E_OccupationAttribute_List = 1;
  total_size += 1 * this->e_occupationattribute_list_size();
  for (int i = 0; i < this->e_occupationattribute_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_occupationattribute_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_OccupationAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_OccupationAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_OccupationAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_OccupationAttribute::MergeFrom(const Sheet_OccupationAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_occupationattribute_list_.MergeFrom(from.e_occupationattribute_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_OccupationAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_OccupationAttribute::CopyFrom(const Sheet_OccupationAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_OccupationAttribute::IsInitialized() const {

  return true;
}

void Sheet_OccupationAttribute::Swap(Sheet_OccupationAttribute* other) {
  if (other != this) {
    e_occupationattribute_list_.Swap(&other->e_occupationattribute_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_OccupationAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_OccupationAttribute_descriptor_;
  metadata.reflection = Sheet_OccupationAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OccupationSoulAttributeDesc::kMTypeFieldNumber;
const int E_OccupationSoulAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_OccupationSoulAttributeDesc::E_OccupationSoulAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OccupationSoulAttributeDesc::InitAsDefaultInstance() {
}

E_OccupationSoulAttributeDesc::E_OccupationSoulAttributeDesc(const E_OccupationSoulAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OccupationSoulAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OccupationSoulAttributeDesc::~E_OccupationSoulAttributeDesc() {
  SharedDtor();
}

void E_OccupationSoulAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OccupationSoulAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OccupationSoulAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OccupationSoulAttributeDesc_descriptor_;
}

const E_OccupationSoulAttributeDesc& E_OccupationSoulAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

E_OccupationSoulAttributeDesc* E_OccupationSoulAttributeDesc::default_instance_ = NULL;

E_OccupationSoulAttributeDesc* E_OccupationSoulAttributeDesc::New() const {
  return new E_OccupationSoulAttributeDesc;
}

void E_OccupationSoulAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OccupationSoulAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OccupationSoulAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OccupationSoulAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OccupationSoulAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OccupationSoulAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OccupationSoulAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OccupationSoulAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OccupationSoulAttributeDesc::MergeFrom(const E_OccupationSoulAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OccupationSoulAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OccupationSoulAttributeDesc::CopyFrom(const E_OccupationSoulAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OccupationSoulAttributeDesc::IsInitialized() const {

  return true;
}

void E_OccupationSoulAttributeDesc::Swap(E_OccupationSoulAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OccupationSoulAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OccupationSoulAttributeDesc_descriptor_;
  metadata.reflection = E_OccupationSoulAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OccupationSoul::kMIdFieldNumber;
const int E_OccupationSoul::kMSoultpyeFieldNumber;
const int E_OccupationSoul::kMPositionFieldNumber;
const int E_OccupationSoul::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_OccupationSoul::E_OccupationSoul()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OccupationSoul::InitAsDefaultInstance() {
}

E_OccupationSoul::E_OccupationSoul(const E_OccupationSoul& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OccupationSoul::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_soultpye_ = 0;
  m_position_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OccupationSoul::~E_OccupationSoul() {
  SharedDtor();
}

void E_OccupationSoul::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OccupationSoul::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OccupationSoul::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OccupationSoul_descriptor_;
}

const E_OccupationSoul& E_OccupationSoul::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

E_OccupationSoul* E_OccupationSoul::default_instance_ = NULL;

E_OccupationSoul* E_OccupationSoul::New() const {
  return new E_OccupationSoul;
}

void E_OccupationSoul::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_soultpye_ = 0;
    m_position_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OccupationSoul::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_soultpye;
        break;
      }

      // optional int32 m_soultpye = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_soultpye:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_soultpye_)));
          set_has_m_soultpye();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_OccupationSoulAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OccupationSoul::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_soultpye = 2;
  if (has_m_soultpye()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_soultpye(), output);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_position(), output);
  }

  // repeated .proto_ff.E_OccupationSoulAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OccupationSoul::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_soultpye = 2;
  if (has_m_soultpye()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_soultpye(), target);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_position(), target);
  }

  // repeated .proto_ff.E_OccupationSoulAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OccupationSoul::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_soultpye = 2;
    if (has_m_soultpye()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_soultpye());
    }

    // optional int32 m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

  }
  // repeated .proto_ff.E_OccupationSoulAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OccupationSoul::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OccupationSoul* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OccupationSoul*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OccupationSoul::MergeFrom(const E_OccupationSoul& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_soultpye()) {
      set_m_soultpye(from.m_soultpye());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OccupationSoul::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OccupationSoul::CopyFrom(const E_OccupationSoul& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OccupationSoul::IsInitialized() const {

  return true;
}

void E_OccupationSoul::Swap(E_OccupationSoul* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_soultpye_, other->m_soultpye_);
    std::swap(m_position_, other->m_position_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OccupationSoul::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OccupationSoul_descriptor_;
  metadata.reflection = E_OccupationSoul_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_OccupationSoul::kEOccupationSoulListFieldNumber;
#endif  // !_MSC_VER

Sheet_OccupationSoul::Sheet_OccupationSoul()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_OccupationSoul::InitAsDefaultInstance() {
}

Sheet_OccupationSoul::Sheet_OccupationSoul(const Sheet_OccupationSoul& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_OccupationSoul::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_OccupationSoul::~Sheet_OccupationSoul() {
  SharedDtor();
}

void Sheet_OccupationSoul::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_OccupationSoul::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_OccupationSoul::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_OccupationSoul_descriptor_;
}

const Sheet_OccupationSoul& Sheet_OccupationSoul::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_occupation_2eproto();
  return *default_instance_;
}

Sheet_OccupationSoul* Sheet_OccupationSoul::default_instance_ = NULL;

Sheet_OccupationSoul* Sheet_OccupationSoul::New() const {
  return new Sheet_OccupationSoul;
}

void Sheet_OccupationSoul::Clear() {
  e_occupationsoul_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_OccupationSoul::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_OccupationSoul E_OccupationSoul_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_OccupationSoul_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_occupationsoul_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_OccupationSoul_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_OccupationSoul::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_OccupationSoul E_OccupationSoul_List = 1;
  for (int i = 0; i < this->e_occupationsoul_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_occupationsoul_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_OccupationSoul::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_OccupationSoul E_OccupationSoul_List = 1;
  for (int i = 0; i < this->e_occupationsoul_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_occupationsoul_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_OccupationSoul::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_OccupationSoul E_OccupationSoul_List = 1;
  total_size += 1 * this->e_occupationsoul_list_size();
  for (int i = 0; i < this->e_occupationsoul_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_occupationsoul_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_OccupationSoul::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_OccupationSoul* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_OccupationSoul*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_OccupationSoul::MergeFrom(const Sheet_OccupationSoul& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_occupationsoul_list_.MergeFrom(from.e_occupationsoul_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_OccupationSoul::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_OccupationSoul::CopyFrom(const Sheet_OccupationSoul& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_OccupationSoul::IsInitialized() const {

  return true;
}

void Sheet_OccupationSoul::Swap(Sheet_OccupationSoul* other) {
  if (other != this) {
    e_occupationsoul_list_.Swap(&other->e_occupationsoul_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_OccupationSoul::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_OccupationSoul_descriptor_;
  metadata.reflection = Sheet_OccupationSoul_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
