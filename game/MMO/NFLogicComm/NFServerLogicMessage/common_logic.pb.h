// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_logic.proto

#ifndef PROTOBUF_common_5flogic_2eproto__INCLUDED
#define PROTOBUF_common_5flogic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_5flogic_2eproto();
void protobuf_AssignDesc_common_5flogic_2eproto();
void protobuf_ShutdownFile_common_5flogic_2eproto();

class PacketMsg;
class ServerPacketMsg;

enum EMODULE_ID {
  EMODULE_ID_NONE = 0,
  EMODULE_ID_SERV_SYS = 1,
  EMODULE_ID_PLAYER = 2,
  EMODULE_ID_LOGIN = 3,
  EMODULE_ID_SCENE = 4,
  EMODULE_ID_SKILL = 5,
  EMODULE_ID_BUFF = 6,
  EMODULE_ID_PACKAGE = 7,
  EMODULE_ID_TASK = 8,
  EMODULE_ID_CHAT = 9,
  EMODULE_ID_DUPLICATE = 10,
  EMODULE_ID_FRIEND = 11,
  EMODULE_ID_MOVE = 12,
  EMODULE_ID_MAIL = 13,
  EMODULE_ID_DROP = 14,
  EMODULE_ID_ACHIEVEMENT = 15,
  EMODULE_ID_ENEMY = 16,
  EMODULE_ID_PVP = 17,
  EMODULE_ID_MALL = 18,
  EMODULE_ID_BOWL = 19,
  EMODULE_ID_ACTIVITY = 20,
  EMODULE_ID_TEAM = 21,
  EMODULE_ID_AUCTIONEER = 22,
  EMODULE_ID_PLAYERPET = 23,
  EMODULE_ID_SEND_ZONE_MSG = 24,
  EMODULE_ID_RECV_ZONE_MSG = 25,
  EMODULE_ID_RANKINGLIST = 26,
  EMODULE_ID_GM = 27,
  EMODULE_ID_TREASURE = 28,
  EMODULE_ID_ARENA = 29,
  EMODULE_ID_MIRROR = 30,
  EMODULE_ID_QUERY = 31,
  EMODULE_ID_BREACH = 32,
  EMODULE_ID_UNION = 33,
  EMOUDLE_ID_COLLECT = 34,
  EMODULE_ID_CONVOY = 35,
  EMODULE_ID_RUNBUSINESS = 36,
  EMODULE_ID_TITLE = 37,
  EMODULE_ID_WELFARE = 38,
  EMODULE_ID_OPERATELIMIT = 39,
  EMODULE_ID_HUOYUEDU = 40,
  EMODULE_ID_PLANE = 41,
  EMODULE_ID_HORSE = 42,
  EMODULE_ID_GODHOOD = 43,
  EMODULE_ID_PANDOS = 44,
  EMODULE_ID_PAY = 45,
  EMODULE_ID_COMPETE = 46,
  EMODULE_ID_ADVENTURE = 47,
  EMODULE_ID_MAPBOSS = 48,
  EMODULE_ID_YODA = 49,
  EMODULE_ID_FUNCTIONUNLOCK = 50,
  EMODULE_ID_FESTIVAL = 51,
  EMODULE_ID_EMBLEM = 52,
  EMODULE_ID_IDENTIFY = 53,
  EMODULE_ID_OCCUPATION = 54,
  EMODULE_ID_ELEMENT = 55,
  EMODULE_ID_WING = 56,
  EMODULE_ID_FASHION = 57,
  EMODULE_ID_MOUNT = 58,
  EMODULE_ID_ARTIFACT = 59,
  EMODULE_ID_FATESTAR = 60,
  EMODULE_ID_DAILY = 61,
  EMODULE_ID_FIELD = 62,
  EMODULE_ID_PARTNER = 63,
  EMODULE_ID_VIP = 64,
  EMODULE_ID_RECOVERY = 66,
  EMODULE_ID_OPERATIONACTIVE = 67,
  EMODULE_ID_OPERATION_RANK = 68,
  EMODULE_ID_MARRY = 69,
  EMODULE_ID_SERVEROPENACTIVE = 70,
  EMODULE_ID_SERVEROPENRANK = 71,
  EMODULE_ID_POKER = 72,
  EMODULE_ID_3V3 = 73,
  EMODULE_ID_UNIONWAR = 74,
  EMODULE_ID_MYSTERYSHOP = 75,
  EMODULE_IDPACKAGETESTREBATE = 76,
  EMODULE_ID_WORLDBOSS = 77,
  EMODULE_ID_TUTOR = 79,
  EMODULE_ID_MANOR = 81,
  EMODULE_ID_POWER = 82,
  EMODULE_ID_HEAD = 83,
  EMODULE_ID_ONLINE_GIFT = 84,
  EMODULE_ID_GM_HELP = 85,
  EMODULE_ID_GODGM = 86,
  EMODULE_ID_ARRIVAL_BOSS = 87,
  EMODULE_ID_LIMIT = 88
};
bool EMODULE_ID_IsValid(int value);
const EMODULE_ID EMODULE_ID_MIN = EMODULE_ID_NONE;
const EMODULE_ID EMODULE_ID_MAX = EMODULE_ID_LIMIT;
const int EMODULE_ID_ARRAYSIZE = EMODULE_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMODULE_ID_descriptor();
inline const ::std::string& EMODULE_ID_Name(EMODULE_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMODULE_ID_descriptor(), value);
}
inline bool EMODULE_ID_Parse(
    const ::std::string& name, EMODULE_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMODULE_ID>(
    EMODULE_ID_descriptor(), name, value);
}
// ===================================================================

class PacketMsg : public ::google::protobuf::Message {
 public:
  PacketMsg();
  virtual ~PacketMsg();

  PacketMsg(const PacketMsg& from);

  inline PacketMsg& operator=(const PacketMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketMsg& default_instance();

  void Swap(PacketMsg* other);

  // implements Message ----------------------------------------------

  PacketMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketMsg& from);
  void MergeFrom(const PacketMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // optional uint32 serverType = 2;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);

  // optional uint32 upper_limit = 3;
  inline bool has_upper_limit() const;
  inline void clear_upper_limit();
  static const int kUpperLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 upper_limit() const;
  inline void set_upper_limit(::google::protobuf::uint32 value);

  // optional uint32 min_interval = 4;
  inline bool has_min_interval() const;
  inline void clear_min_interval();
  static const int kMinIntervalFieldNumber = 4;
  inline ::google::protobuf::uint32 min_interval() const;
  inline void set_min_interval(::google::protobuf::uint32 value);

  // optional uint32 control_time = 5;
  inline bool has_control_time() const;
  inline void clear_control_time();
  static const int kControlTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 control_time() const;
  inline void set_control_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PacketMsg)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_upper_limit();
  inline void clear_has_upper_limit();
  inline void set_has_min_interval();
  inline void clear_has_min_interval();
  inline void set_has_control_time();
  inline void clear_has_control_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 upper_limit_;
  ::google::protobuf::uint32 min_interval_;
  ::google::protobuf::uint32 control_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PacketMsg* default_instance_;
};
// -------------------------------------------------------------------

class ServerPacketMsg : public ::google::protobuf::Message {
 public:
  ServerPacketMsg();
  virtual ~ServerPacketMsg();

  ServerPacketMsg(const ServerPacketMsg& from);

  inline ServerPacketMsg& operator=(const ServerPacketMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerPacketMsg& default_instance();

  void Swap(ServerPacketMsg* other);

  // implements Message ----------------------------------------------

  ServerPacketMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerPacketMsg& from);
  void MergeFrom(const ServerPacketMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.PacketMsg PacketMsg = 1;
  inline int packetmsg_size() const;
  inline void clear_packetmsg();
  static const int kPacketMsgFieldNumber = 1;
  inline const ::proto_ff::PacketMsg& packetmsg(int index) const;
  inline ::proto_ff::PacketMsg* mutable_packetmsg(int index);
  inline ::proto_ff::PacketMsg* add_packetmsg();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >&
      packetmsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >*
      mutable_packetmsg();

  // @@protoc_insertion_point(class_scope:proto_ff.ServerPacketMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg > packetmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ServerPacketMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// PacketMsg

// optional uint32 cmd = 1;
inline bool PacketMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketMsg::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 PacketMsg::cmd() const {
  return cmd_;
}
inline void PacketMsg::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional uint32 serverType = 2;
inline bool PacketMsg::has_servertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketMsg::set_has_servertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketMsg::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketMsg::clear_servertype() {
  servertype_ = 0u;
  clear_has_servertype();
}
inline ::google::protobuf::uint32 PacketMsg::servertype() const {
  return servertype_;
}
inline void PacketMsg::set_servertype(::google::protobuf::uint32 value) {
  set_has_servertype();
  servertype_ = value;
}

// optional uint32 upper_limit = 3;
inline bool PacketMsg::has_upper_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketMsg::set_has_upper_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketMsg::clear_has_upper_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketMsg::clear_upper_limit() {
  upper_limit_ = 0u;
  clear_has_upper_limit();
}
inline ::google::protobuf::uint32 PacketMsg::upper_limit() const {
  return upper_limit_;
}
inline void PacketMsg::set_upper_limit(::google::protobuf::uint32 value) {
  set_has_upper_limit();
  upper_limit_ = value;
}

// optional uint32 min_interval = 4;
inline bool PacketMsg::has_min_interval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PacketMsg::set_has_min_interval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PacketMsg::clear_has_min_interval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PacketMsg::clear_min_interval() {
  min_interval_ = 0u;
  clear_has_min_interval();
}
inline ::google::protobuf::uint32 PacketMsg::min_interval() const {
  return min_interval_;
}
inline void PacketMsg::set_min_interval(::google::protobuf::uint32 value) {
  set_has_min_interval();
  min_interval_ = value;
}

// optional uint32 control_time = 5;
inline bool PacketMsg::has_control_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PacketMsg::set_has_control_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PacketMsg::clear_has_control_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PacketMsg::clear_control_time() {
  control_time_ = 0u;
  clear_has_control_time();
}
inline ::google::protobuf::uint32 PacketMsg::control_time() const {
  return control_time_;
}
inline void PacketMsg::set_control_time(::google::protobuf::uint32 value) {
  set_has_control_time();
  control_time_ = value;
}

// -------------------------------------------------------------------

// ServerPacketMsg

// repeated .proto_ff.PacketMsg PacketMsg = 1;
inline int ServerPacketMsg::packetmsg_size() const {
  return packetmsg_.size();
}
inline void ServerPacketMsg::clear_packetmsg() {
  packetmsg_.Clear();
}
inline const ::proto_ff::PacketMsg& ServerPacketMsg::packetmsg(int index) const {
  return packetmsg_.Get(index);
}
inline ::proto_ff::PacketMsg* ServerPacketMsg::mutable_packetmsg(int index) {
  return packetmsg_.Mutable(index);
}
inline ::proto_ff::PacketMsg* ServerPacketMsg::add_packetmsg() {
  return packetmsg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >&
ServerPacketMsg::packetmsg() const {
  return packetmsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >*
ServerPacketMsg::mutable_packetmsg() {
  return &packetmsg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::EMODULE_ID>() {
  return ::proto_ff::EMODULE_ID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_5flogic_2eproto__INCLUDED
