// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arena.proto

#ifndef PROTOBUF_arena_2eproto__INCLUDED
#define PROTOBUF_arena_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_arena_2eproto();
void protobuf_AssignDesc_arena_2eproto();
void protobuf_ShutdownFile_arena_2eproto();

class arenarobotattrDesc;
class arenarobot;
class Sheet_arenarobot;
class arenaarenAwardRewardDesc;
class arenaarenAward;
class Sheet_arenaarenAward;
class arenarankawardRewardDesc;
class arenarankaward;
class Sheet_arenarankaward;
class arenafirstrankRewardDesc;
class arenafirstrank;
class Sheet_arenafirstrank;
class arenabuychallenge;
class Sheet_arenabuychallenge;

// ===================================================================

class arenarobotattrDesc : public ::google::protobuf::Message {
 public:
  arenarobotattrDesc();
  virtual ~arenarobotattrDesc();

  arenarobotattrDesc(const arenarobotattrDesc& from);

  inline arenarobotattrDesc& operator=(const arenarobotattrDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenarobotattrDesc& default_instance();

  void Swap(arenarobotattrDesc* other);

  // implements Message ----------------------------------------------

  arenarobotattrDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenarobotattrDesc& from);
  void MergeFrom(const arenarobotattrDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int32 val() const;
  inline void set_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.arenarobotattrDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenarobotattrDesc* default_instance_;
};
// -------------------------------------------------------------------

class arenarobot : public ::google::protobuf::Message {
 public:
  arenarobot();
  virtual ~arenarobot();

  arenarobot(const arenarobot& from);

  inline arenarobot& operator=(const arenarobot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenarobot& default_instance();

  void Swap(arenarobot* other);

  // implements Message ----------------------------------------------

  arenarobot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenarobot& from);
  void MergeFrom(const arenarobot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 arenaId = 1;
  inline bool has_arenaid() const;
  inline void clear_arenaid();
  static const int kArenaIdFieldNumber = 1;
  inline ::google::protobuf::int32 arenaid() const;
  inline void set_arenaid(::google::protobuf::int32 value);

  // optional string robotname = 2;
  inline bool has_robotname() const;
  inline void clear_robotname();
  static const int kRobotnameFieldNumber = 2;
  inline const ::std::string& robotname() const;
  inline void set_robotname(const ::std::string& value);
  inline void set_robotname(const char* value);
  inline void set_robotname(const char* value, size_t size);
  inline ::std::string* mutable_robotname();
  inline ::std::string* release_robotname();
  inline void set_allocated_robotname(::std::string* robotname);

  // optional int32 aiId = 3;
  inline bool has_aiid() const;
  inline void clear_aiid();
  static const int kAiIdFieldNumber = 3;
  inline ::google::protobuf::int32 aiid() const;
  inline void set_aiid(::google::protobuf::int32 value);

  // optional int32 rankId = 4;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 4;
  inline ::google::protobuf::int32 rankid() const;
  inline void set_rankid(::google::protobuf::int32 value);

  // optional int32 robotProfession = 5;
  inline bool has_robotprofession() const;
  inline void clear_robotprofession();
  static const int kRobotProfessionFieldNumber = 5;
  inline ::google::protobuf::int32 robotprofession() const;
  inline void set_robotprofession(::google::protobuf::int32 value);

  // optional int32 robotLv = 6;
  inline bool has_robotlv() const;
  inline void clear_robotlv();
  static const int kRobotLvFieldNumber = 6;
  inline ::google::protobuf::int32 robotlv() const;
  inline void set_robotlv(::google::protobuf::int32 value);

  // optional int32 sword = 7;
  inline bool has_sword() const;
  inline void clear_sword();
  static const int kSwordFieldNumber = 7;
  inline ::google::protobuf::int32 sword() const;
  inline void set_sword(::google::protobuf::int32 value);

  // optional int32 occupationID = 8;
  inline bool has_occupationid() const;
  inline void clear_occupationid();
  static const int kOccupationIDFieldNumber = 8;
  inline ::google::protobuf::int32 occupationid() const;
  inline void set_occupationid(::google::protobuf::int32 value);

  // repeated .proto_ff.arenarobotattrDesc attr = 9;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 9;
  inline const ::proto_ff::arenarobotattrDesc& attr(int index) const;
  inline ::proto_ff::arenarobotattrDesc* mutable_attr(int index);
  inline ::proto_ff::arenarobotattrDesc* add_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobotattrDesc >&
      attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobotattrDesc >*
      mutable_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.arenarobot)
 private:
  inline void set_has_arenaid();
  inline void clear_has_arenaid();
  inline void set_has_robotname();
  inline void clear_has_robotname();
  inline void set_has_aiid();
  inline void clear_has_aiid();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_robotprofession();
  inline void clear_has_robotprofession();
  inline void set_has_robotlv();
  inline void clear_has_robotlv();
  inline void set_has_sword();
  inline void clear_has_sword();
  inline void set_has_occupationid();
  inline void clear_has_occupationid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* robotname_;
  ::google::protobuf::int32 arenaid_;
  ::google::protobuf::int32 aiid_;
  ::google::protobuf::int32 rankid_;
  ::google::protobuf::int32 robotprofession_;
  ::google::protobuf::int32 robotlv_;
  ::google::protobuf::int32 sword_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobotattrDesc > attr_;
  ::google::protobuf::int32 occupationid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenarobot* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_arenarobot : public ::google::protobuf::Message {
 public:
  Sheet_arenarobot();
  virtual ~Sheet_arenarobot();

  Sheet_arenarobot(const Sheet_arenarobot& from);

  inline Sheet_arenarobot& operator=(const Sheet_arenarobot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_arenarobot& default_instance();

  void Swap(Sheet_arenarobot* other);

  // implements Message ----------------------------------------------

  Sheet_arenarobot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_arenarobot& from);
  void MergeFrom(const Sheet_arenarobot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.arenarobot arenarobot_List = 1;
  inline int arenarobot_list_size() const;
  inline void clear_arenarobot_list();
  static const int kArenarobotListFieldNumber = 1;
  inline const ::proto_ff::arenarobot& arenarobot_list(int index) const;
  inline ::proto_ff::arenarobot* mutable_arenarobot_list(int index);
  inline ::proto_ff::arenarobot* add_arenarobot_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobot >&
      arenarobot_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobot >*
      mutable_arenarobot_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_arenarobot)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobot > arenarobot_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static Sheet_arenarobot* default_instance_;
};
// -------------------------------------------------------------------

class arenaarenAwardRewardDesc : public ::google::protobuf::Message {
 public:
  arenaarenAwardRewardDesc();
  virtual ~arenaarenAwardRewardDesc();

  arenaarenAwardRewardDesc(const arenaarenAwardRewardDesc& from);

  inline arenaarenAwardRewardDesc& operator=(const arenaarenAwardRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenaarenAwardRewardDesc& default_instance();

  void Swap(arenaarenAwardRewardDesc* other);

  // implements Message ----------------------------------------------

  arenaarenAwardRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenaarenAwardRewardDesc& from);
  void MergeFrom(const arenaarenAwardRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.arenaarenAwardRewardDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenaarenAwardRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class arenaarenAward : public ::google::protobuf::Message {
 public:
  arenaarenAward();
  virtual ~arenaarenAward();

  arenaarenAward(const arenaarenAward& from);

  inline arenaarenAward& operator=(const arenaarenAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenaarenAward& default_instance();

  void Swap(arenaarenAward* other);

  // implements Message ----------------------------------------------

  arenaarenAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenaarenAward& from);
  void MergeFrom(const arenaarenAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 lvDown = 2;
  inline bool has_lvdown() const;
  inline void clear_lvdown();
  static const int kLvDownFieldNumber = 2;
  inline ::google::protobuf::int32 lvdown() const;
  inline void set_lvdown(::google::protobuf::int32 value);

  // optional int32 lvUp = 3;
  inline bool has_lvup() const;
  inline void clear_lvup();
  static const int kLvUpFieldNumber = 3;
  inline ::google::protobuf::int32 lvup() const;
  inline void set_lvup(::google::protobuf::int32 value);

  // repeated .proto_ff.arenaarenAwardRewardDesc Reward = 4;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::proto_ff::arenaarenAwardRewardDesc& reward(int index) const;
  inline ::proto_ff::arenaarenAwardRewardDesc* mutable_reward(int index);
  inline ::proto_ff::arenaarenAwardRewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAwardRewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAwardRewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.arenaarenAward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lvdown();
  inline void clear_has_lvdown();
  inline void set_has_lvup();
  inline void clear_has_lvup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lvdown_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAwardRewardDesc > reward_;
  ::google::protobuf::int32 lvup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenaarenAward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_arenaarenAward : public ::google::protobuf::Message {
 public:
  Sheet_arenaarenAward();
  virtual ~Sheet_arenaarenAward();

  Sheet_arenaarenAward(const Sheet_arenaarenAward& from);

  inline Sheet_arenaarenAward& operator=(const Sheet_arenaarenAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_arenaarenAward& default_instance();

  void Swap(Sheet_arenaarenAward* other);

  // implements Message ----------------------------------------------

  Sheet_arenaarenAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_arenaarenAward& from);
  void MergeFrom(const Sheet_arenaarenAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.arenaarenAward arenaarenAward_List = 1;
  inline int arenaarenaward_list_size() const;
  inline void clear_arenaarenaward_list();
  static const int kArenaarenAwardListFieldNumber = 1;
  inline const ::proto_ff::arenaarenAward& arenaarenaward_list(int index) const;
  inline ::proto_ff::arenaarenAward* mutable_arenaarenaward_list(int index);
  inline ::proto_ff::arenaarenAward* add_arenaarenaward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAward >&
      arenaarenaward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAward >*
      mutable_arenaarenaward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_arenaarenAward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAward > arenaarenaward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static Sheet_arenaarenAward* default_instance_;
};
// -------------------------------------------------------------------

class arenarankawardRewardDesc : public ::google::protobuf::Message {
 public:
  arenarankawardRewardDesc();
  virtual ~arenarankawardRewardDesc();

  arenarankawardRewardDesc(const arenarankawardRewardDesc& from);

  inline arenarankawardRewardDesc& operator=(const arenarankawardRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenarankawardRewardDesc& default_instance();

  void Swap(arenarankawardRewardDesc* other);

  // implements Message ----------------------------------------------

  arenarankawardRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenarankawardRewardDesc& from);
  void MergeFrom(const arenarankawardRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.arenarankawardRewardDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenarankawardRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class arenarankaward : public ::google::protobuf::Message {
 public:
  arenarankaward();
  virtual ~arenarankaward();

  arenarankaward(const arenarankaward& from);

  inline arenarankaward& operator=(const arenarankaward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenarankaward& default_instance();

  void Swap(arenarankaward* other);

  // implements Message ----------------------------------------------

  arenarankaward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenarankaward& from);
  void MergeFrom(const arenarankaward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PrizeId = 1;
  inline bool has_prizeid() const;
  inline void clear_prizeid();
  static const int kPrizeIdFieldNumber = 1;
  inline ::google::protobuf::int32 prizeid() const;
  inline void set_prizeid(::google::protobuf::int32 value);

  // optional int32 arenaDown = 2;
  inline bool has_arenadown() const;
  inline void clear_arenadown();
  static const int kArenaDownFieldNumber = 2;
  inline ::google::protobuf::int32 arenadown() const;
  inline void set_arenadown(::google::protobuf::int32 value);

  // optional int32 arenaUp = 3;
  inline bool has_arenaup() const;
  inline void clear_arenaup();
  static const int kArenaUpFieldNumber = 3;
  inline ::google::protobuf::int32 arenaup() const;
  inline void set_arenaup(::google::protobuf::int32 value);

  // repeated .proto_ff.arenarankawardRewardDesc Reward = 4;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::proto_ff::arenarankawardRewardDesc& reward(int index) const;
  inline ::proto_ff::arenarankawardRewardDesc* mutable_reward(int index);
  inline ::proto_ff::arenarankawardRewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankawardRewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankawardRewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.arenarankaward)
 private:
  inline void set_has_prizeid();
  inline void clear_has_prizeid();
  inline void set_has_arenadown();
  inline void clear_has_arenadown();
  inline void set_has_arenaup();
  inline void clear_has_arenaup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 prizeid_;
  ::google::protobuf::int32 arenadown_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankawardRewardDesc > reward_;
  ::google::protobuf::int32 arenaup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenarankaward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_arenarankaward : public ::google::protobuf::Message {
 public:
  Sheet_arenarankaward();
  virtual ~Sheet_arenarankaward();

  Sheet_arenarankaward(const Sheet_arenarankaward& from);

  inline Sheet_arenarankaward& operator=(const Sheet_arenarankaward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_arenarankaward& default_instance();

  void Swap(Sheet_arenarankaward* other);

  // implements Message ----------------------------------------------

  Sheet_arenarankaward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_arenarankaward& from);
  void MergeFrom(const Sheet_arenarankaward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.arenarankaward arenarankaward_List = 1;
  inline int arenarankaward_list_size() const;
  inline void clear_arenarankaward_list();
  static const int kArenarankawardListFieldNumber = 1;
  inline const ::proto_ff::arenarankaward& arenarankaward_list(int index) const;
  inline ::proto_ff::arenarankaward* mutable_arenarankaward_list(int index);
  inline ::proto_ff::arenarankaward* add_arenarankaward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankaward >&
      arenarankaward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankaward >*
      mutable_arenarankaward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_arenarankaward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankaward > arenarankaward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static Sheet_arenarankaward* default_instance_;
};
// -------------------------------------------------------------------

class arenafirstrankRewardDesc : public ::google::protobuf::Message {
 public:
  arenafirstrankRewardDesc();
  virtual ~arenafirstrankRewardDesc();

  arenafirstrankRewardDesc(const arenafirstrankRewardDesc& from);

  inline arenafirstrankRewardDesc& operator=(const arenafirstrankRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenafirstrankRewardDesc& default_instance();

  void Swap(arenafirstrankRewardDesc* other);

  // implements Message ----------------------------------------------

  arenafirstrankRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenafirstrankRewardDesc& from);
  void MergeFrom(const arenafirstrankRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.arenafirstrankRewardDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenafirstrankRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class arenafirstrank : public ::google::protobuf::Message {
 public:
  arenafirstrank();
  virtual ~arenafirstrank();

  arenafirstrank(const arenafirstrank& from);

  inline arenafirstrank& operator=(const arenafirstrank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenafirstrank& default_instance();

  void Swap(arenafirstrank* other);

  // implements Message ----------------------------------------------

  arenafirstrank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenafirstrank& from);
  void MergeFrom(const arenafirstrank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 rankDown = 2;
  inline bool has_rankdown() const;
  inline void clear_rankdown();
  static const int kRankDownFieldNumber = 2;
  inline ::google::protobuf::int32 rankdown() const;
  inline void set_rankdown(::google::protobuf::int32 value);

  // optional int32 rankUp = 3;
  inline bool has_rankup() const;
  inline void clear_rankup();
  static const int kRankUpFieldNumber = 3;
  inline ::google::protobuf::int32 rankup() const;
  inline void set_rankup(::google::protobuf::int32 value);

  // repeated .proto_ff.arenafirstrankRewardDesc Reward = 4;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::proto_ff::arenafirstrankRewardDesc& reward(int index) const;
  inline ::proto_ff::arenafirstrankRewardDesc* mutable_reward(int index);
  inline ::proto_ff::arenafirstrankRewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrankRewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrankRewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.arenafirstrank)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rankdown();
  inline void clear_has_rankdown();
  inline void set_has_rankup();
  inline void clear_has_rankup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 rankdown_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrankRewardDesc > reward_;
  ::google::protobuf::int32 rankup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenafirstrank* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_arenafirstrank : public ::google::protobuf::Message {
 public:
  Sheet_arenafirstrank();
  virtual ~Sheet_arenafirstrank();

  Sheet_arenafirstrank(const Sheet_arenafirstrank& from);

  inline Sheet_arenafirstrank& operator=(const Sheet_arenafirstrank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_arenafirstrank& default_instance();

  void Swap(Sheet_arenafirstrank* other);

  // implements Message ----------------------------------------------

  Sheet_arenafirstrank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_arenafirstrank& from);
  void MergeFrom(const Sheet_arenafirstrank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.arenafirstrank arenafirstrank_List = 1;
  inline int arenafirstrank_list_size() const;
  inline void clear_arenafirstrank_list();
  static const int kArenafirstrankListFieldNumber = 1;
  inline const ::proto_ff::arenafirstrank& arenafirstrank_list(int index) const;
  inline ::proto_ff::arenafirstrank* mutable_arenafirstrank_list(int index);
  inline ::proto_ff::arenafirstrank* add_arenafirstrank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrank >&
      arenafirstrank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrank >*
      mutable_arenafirstrank_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_arenafirstrank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrank > arenafirstrank_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static Sheet_arenafirstrank* default_instance_;
};
// -------------------------------------------------------------------

class arenabuychallenge : public ::google::protobuf::Message {
 public:
  arenabuychallenge();
  virtual ~arenabuychallenge();

  arenabuychallenge(const arenabuychallenge& from);

  inline arenabuychallenge& operator=(const arenabuychallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arenabuychallenge& default_instance();

  void Swap(arenabuychallenge* other);

  // implements Message ----------------------------------------------

  arenabuychallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arenabuychallenge& from);
  void MergeFrom(const arenabuychallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 costType = 2;
  inline bool has_costtype() const;
  inline void clear_costtype();
  static const int kCostTypeFieldNumber = 2;
  inline ::google::protobuf::int32 costtype() const;
  inline void set_costtype(::google::protobuf::int32 value);

  // optional int32 cost = 3;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.arenabuychallenge)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_costtype();
  inline void clear_has_costtype();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 costtype_;
  ::google::protobuf::int32 cost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static arenabuychallenge* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_arenabuychallenge : public ::google::protobuf::Message {
 public:
  Sheet_arenabuychallenge();
  virtual ~Sheet_arenabuychallenge();

  Sheet_arenabuychallenge(const Sheet_arenabuychallenge& from);

  inline Sheet_arenabuychallenge& operator=(const Sheet_arenabuychallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_arenabuychallenge& default_instance();

  void Swap(Sheet_arenabuychallenge* other);

  // implements Message ----------------------------------------------

  Sheet_arenabuychallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_arenabuychallenge& from);
  void MergeFrom(const Sheet_arenabuychallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.arenabuychallenge arenabuychallenge_List = 1;
  inline int arenabuychallenge_list_size() const;
  inline void clear_arenabuychallenge_list();
  static const int kArenabuychallengeListFieldNumber = 1;
  inline const ::proto_ff::arenabuychallenge& arenabuychallenge_list(int index) const;
  inline ::proto_ff::arenabuychallenge* mutable_arenabuychallenge_list(int index);
  inline ::proto_ff::arenabuychallenge* add_arenabuychallenge_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenabuychallenge >&
      arenabuychallenge_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenabuychallenge >*
      mutable_arenabuychallenge_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_arenabuychallenge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::arenabuychallenge > arenabuychallenge_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_arena_2eproto();
  friend void protobuf_AssignDesc_arena_2eproto();
  friend void protobuf_ShutdownFile_arena_2eproto();

  void InitAsDefaultInstance();
  static Sheet_arenabuychallenge* default_instance_;
};
// ===================================================================


// ===================================================================

// arenarobotattrDesc

// optional int32 type = 1;
inline bool arenarobotattrDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenarobotattrDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenarobotattrDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenarobotattrDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 arenarobotattrDesc::type() const {
  return type_;
}
inline void arenarobotattrDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 val = 2;
inline bool arenarobotattrDesc::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenarobotattrDesc::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenarobotattrDesc::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenarobotattrDesc::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 arenarobotattrDesc::val() const {
  return val_;
}
inline void arenarobotattrDesc::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// arenarobot

// optional int32 arenaId = 1;
inline bool arenarobot::has_arenaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenarobot::set_has_arenaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenarobot::clear_has_arenaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenarobot::clear_arenaid() {
  arenaid_ = 0;
  clear_has_arenaid();
}
inline ::google::protobuf::int32 arenarobot::arenaid() const {
  return arenaid_;
}
inline void arenarobot::set_arenaid(::google::protobuf::int32 value) {
  set_has_arenaid();
  arenaid_ = value;
}

// optional string robotname = 2;
inline bool arenarobot::has_robotname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenarobot::set_has_robotname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenarobot::clear_has_robotname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenarobot::clear_robotname() {
  if (robotname_ != &::google::protobuf::internal::kEmptyString) {
    robotname_->clear();
  }
  clear_has_robotname();
}
inline const ::std::string& arenarobot::robotname() const {
  return *robotname_;
}
inline void arenarobot::set_robotname(const ::std::string& value) {
  set_has_robotname();
  if (robotname_ == &::google::protobuf::internal::kEmptyString) {
    robotname_ = new ::std::string;
  }
  robotname_->assign(value);
}
inline void arenarobot::set_robotname(const char* value) {
  set_has_robotname();
  if (robotname_ == &::google::protobuf::internal::kEmptyString) {
    robotname_ = new ::std::string;
  }
  robotname_->assign(value);
}
inline void arenarobot::set_robotname(const char* value, size_t size) {
  set_has_robotname();
  if (robotname_ == &::google::protobuf::internal::kEmptyString) {
    robotname_ = new ::std::string;
  }
  robotname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* arenarobot::mutable_robotname() {
  set_has_robotname();
  if (robotname_ == &::google::protobuf::internal::kEmptyString) {
    robotname_ = new ::std::string;
  }
  return robotname_;
}
inline ::std::string* arenarobot::release_robotname() {
  clear_has_robotname();
  if (robotname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = robotname_;
    robotname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void arenarobot::set_allocated_robotname(::std::string* robotname) {
  if (robotname_ != &::google::protobuf::internal::kEmptyString) {
    delete robotname_;
  }
  if (robotname) {
    set_has_robotname();
    robotname_ = robotname;
  } else {
    clear_has_robotname();
    robotname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 aiId = 3;
inline bool arenarobot::has_aiid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void arenarobot::set_has_aiid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void arenarobot::clear_has_aiid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void arenarobot::clear_aiid() {
  aiid_ = 0;
  clear_has_aiid();
}
inline ::google::protobuf::int32 arenarobot::aiid() const {
  return aiid_;
}
inline void arenarobot::set_aiid(::google::protobuf::int32 value) {
  set_has_aiid();
  aiid_ = value;
}

// optional int32 rankId = 4;
inline bool arenarobot::has_rankid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void arenarobot::set_has_rankid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void arenarobot::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void arenarobot::clear_rankid() {
  rankid_ = 0;
  clear_has_rankid();
}
inline ::google::protobuf::int32 arenarobot::rankid() const {
  return rankid_;
}
inline void arenarobot::set_rankid(::google::protobuf::int32 value) {
  set_has_rankid();
  rankid_ = value;
}

// optional int32 robotProfession = 5;
inline bool arenarobot::has_robotprofession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void arenarobot::set_has_robotprofession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void arenarobot::clear_has_robotprofession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void arenarobot::clear_robotprofession() {
  robotprofession_ = 0;
  clear_has_robotprofession();
}
inline ::google::protobuf::int32 arenarobot::robotprofession() const {
  return robotprofession_;
}
inline void arenarobot::set_robotprofession(::google::protobuf::int32 value) {
  set_has_robotprofession();
  robotprofession_ = value;
}

// optional int32 robotLv = 6;
inline bool arenarobot::has_robotlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void arenarobot::set_has_robotlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void arenarobot::clear_has_robotlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void arenarobot::clear_robotlv() {
  robotlv_ = 0;
  clear_has_robotlv();
}
inline ::google::protobuf::int32 arenarobot::robotlv() const {
  return robotlv_;
}
inline void arenarobot::set_robotlv(::google::protobuf::int32 value) {
  set_has_robotlv();
  robotlv_ = value;
}

// optional int32 sword = 7;
inline bool arenarobot::has_sword() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void arenarobot::set_has_sword() {
  _has_bits_[0] |= 0x00000040u;
}
inline void arenarobot::clear_has_sword() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void arenarobot::clear_sword() {
  sword_ = 0;
  clear_has_sword();
}
inline ::google::protobuf::int32 arenarobot::sword() const {
  return sword_;
}
inline void arenarobot::set_sword(::google::protobuf::int32 value) {
  set_has_sword();
  sword_ = value;
}

// optional int32 occupationID = 8;
inline bool arenarobot::has_occupationid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void arenarobot::set_has_occupationid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void arenarobot::clear_has_occupationid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void arenarobot::clear_occupationid() {
  occupationid_ = 0;
  clear_has_occupationid();
}
inline ::google::protobuf::int32 arenarobot::occupationid() const {
  return occupationid_;
}
inline void arenarobot::set_occupationid(::google::protobuf::int32 value) {
  set_has_occupationid();
  occupationid_ = value;
}

// repeated .proto_ff.arenarobotattrDesc attr = 9;
inline int arenarobot::attr_size() const {
  return attr_.size();
}
inline void arenarobot::clear_attr() {
  attr_.Clear();
}
inline const ::proto_ff::arenarobotattrDesc& arenarobot::attr(int index) const {
  return attr_.Get(index);
}
inline ::proto_ff::arenarobotattrDesc* arenarobot::mutable_attr(int index) {
  return attr_.Mutable(index);
}
inline ::proto_ff::arenarobotattrDesc* arenarobot::add_attr() {
  return attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobotattrDesc >&
arenarobot::attr() const {
  return attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobotattrDesc >*
arenarobot::mutable_attr() {
  return &attr_;
}

// -------------------------------------------------------------------

// Sheet_arenarobot

// repeated .proto_ff.arenarobot arenarobot_List = 1;
inline int Sheet_arenarobot::arenarobot_list_size() const {
  return arenarobot_list_.size();
}
inline void Sheet_arenarobot::clear_arenarobot_list() {
  arenarobot_list_.Clear();
}
inline const ::proto_ff::arenarobot& Sheet_arenarobot::arenarobot_list(int index) const {
  return arenarobot_list_.Get(index);
}
inline ::proto_ff::arenarobot* Sheet_arenarobot::mutable_arenarobot_list(int index) {
  return arenarobot_list_.Mutable(index);
}
inline ::proto_ff::arenarobot* Sheet_arenarobot::add_arenarobot_list() {
  return arenarobot_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobot >&
Sheet_arenarobot::arenarobot_list() const {
  return arenarobot_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarobot >*
Sheet_arenarobot::mutable_arenarobot_list() {
  return &arenarobot_list_;
}

// -------------------------------------------------------------------

// arenaarenAwardRewardDesc

// optional int32 ID = 1;
inline bool arenaarenAwardRewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenaarenAwardRewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenaarenAwardRewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenaarenAwardRewardDesc::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 arenaarenAwardRewardDesc::id() const {
  return id_;
}
inline void arenaarenAwardRewardDesc::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Value = 2;
inline bool arenaarenAwardRewardDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenaarenAwardRewardDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenaarenAwardRewardDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenaarenAwardRewardDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 arenaarenAwardRewardDesc::value() const {
  return value_;
}
inline void arenaarenAwardRewardDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// arenaarenAward

// optional int32 id = 1;
inline bool arenaarenAward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenaarenAward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenaarenAward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenaarenAward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 arenaarenAward::id() const {
  return id_;
}
inline void arenaarenAward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 lvDown = 2;
inline bool arenaarenAward::has_lvdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenaarenAward::set_has_lvdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenaarenAward::clear_has_lvdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenaarenAward::clear_lvdown() {
  lvdown_ = 0;
  clear_has_lvdown();
}
inline ::google::protobuf::int32 arenaarenAward::lvdown() const {
  return lvdown_;
}
inline void arenaarenAward::set_lvdown(::google::protobuf::int32 value) {
  set_has_lvdown();
  lvdown_ = value;
}

// optional int32 lvUp = 3;
inline bool arenaarenAward::has_lvup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void arenaarenAward::set_has_lvup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void arenaarenAward::clear_has_lvup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void arenaarenAward::clear_lvup() {
  lvup_ = 0;
  clear_has_lvup();
}
inline ::google::protobuf::int32 arenaarenAward::lvup() const {
  return lvup_;
}
inline void arenaarenAward::set_lvup(::google::protobuf::int32 value) {
  set_has_lvup();
  lvup_ = value;
}

// repeated .proto_ff.arenaarenAwardRewardDesc Reward = 4;
inline int arenaarenAward::reward_size() const {
  return reward_.size();
}
inline void arenaarenAward::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::arenaarenAwardRewardDesc& arenaarenAward::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::arenaarenAwardRewardDesc* arenaarenAward::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::arenaarenAwardRewardDesc* arenaarenAward::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAwardRewardDesc >&
arenaarenAward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAwardRewardDesc >*
arenaarenAward::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_arenaarenAward

// repeated .proto_ff.arenaarenAward arenaarenAward_List = 1;
inline int Sheet_arenaarenAward::arenaarenaward_list_size() const {
  return arenaarenaward_list_.size();
}
inline void Sheet_arenaarenAward::clear_arenaarenaward_list() {
  arenaarenaward_list_.Clear();
}
inline const ::proto_ff::arenaarenAward& Sheet_arenaarenAward::arenaarenaward_list(int index) const {
  return arenaarenaward_list_.Get(index);
}
inline ::proto_ff::arenaarenAward* Sheet_arenaarenAward::mutable_arenaarenaward_list(int index) {
  return arenaarenaward_list_.Mutable(index);
}
inline ::proto_ff::arenaarenAward* Sheet_arenaarenAward::add_arenaarenaward_list() {
  return arenaarenaward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAward >&
Sheet_arenaarenAward::arenaarenaward_list() const {
  return arenaarenaward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenaarenAward >*
Sheet_arenaarenAward::mutable_arenaarenaward_list() {
  return &arenaarenaward_list_;
}

// -------------------------------------------------------------------

// arenarankawardRewardDesc

// optional int32 ID = 1;
inline bool arenarankawardRewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenarankawardRewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenarankawardRewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenarankawardRewardDesc::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 arenarankawardRewardDesc::id() const {
  return id_;
}
inline void arenarankawardRewardDesc::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Value = 2;
inline bool arenarankawardRewardDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenarankawardRewardDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenarankawardRewardDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenarankawardRewardDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 arenarankawardRewardDesc::value() const {
  return value_;
}
inline void arenarankawardRewardDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// arenarankaward

// optional int32 PrizeId = 1;
inline bool arenarankaward::has_prizeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenarankaward::set_has_prizeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenarankaward::clear_has_prizeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenarankaward::clear_prizeid() {
  prizeid_ = 0;
  clear_has_prizeid();
}
inline ::google::protobuf::int32 arenarankaward::prizeid() const {
  return prizeid_;
}
inline void arenarankaward::set_prizeid(::google::protobuf::int32 value) {
  set_has_prizeid();
  prizeid_ = value;
}

// optional int32 arenaDown = 2;
inline bool arenarankaward::has_arenadown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenarankaward::set_has_arenadown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenarankaward::clear_has_arenadown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenarankaward::clear_arenadown() {
  arenadown_ = 0;
  clear_has_arenadown();
}
inline ::google::protobuf::int32 arenarankaward::arenadown() const {
  return arenadown_;
}
inline void arenarankaward::set_arenadown(::google::protobuf::int32 value) {
  set_has_arenadown();
  arenadown_ = value;
}

// optional int32 arenaUp = 3;
inline bool arenarankaward::has_arenaup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void arenarankaward::set_has_arenaup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void arenarankaward::clear_has_arenaup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void arenarankaward::clear_arenaup() {
  arenaup_ = 0;
  clear_has_arenaup();
}
inline ::google::protobuf::int32 arenarankaward::arenaup() const {
  return arenaup_;
}
inline void arenarankaward::set_arenaup(::google::protobuf::int32 value) {
  set_has_arenaup();
  arenaup_ = value;
}

// repeated .proto_ff.arenarankawardRewardDesc Reward = 4;
inline int arenarankaward::reward_size() const {
  return reward_.size();
}
inline void arenarankaward::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::arenarankawardRewardDesc& arenarankaward::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::arenarankawardRewardDesc* arenarankaward::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::arenarankawardRewardDesc* arenarankaward::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankawardRewardDesc >&
arenarankaward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankawardRewardDesc >*
arenarankaward::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_arenarankaward

// repeated .proto_ff.arenarankaward arenarankaward_List = 1;
inline int Sheet_arenarankaward::arenarankaward_list_size() const {
  return arenarankaward_list_.size();
}
inline void Sheet_arenarankaward::clear_arenarankaward_list() {
  arenarankaward_list_.Clear();
}
inline const ::proto_ff::arenarankaward& Sheet_arenarankaward::arenarankaward_list(int index) const {
  return arenarankaward_list_.Get(index);
}
inline ::proto_ff::arenarankaward* Sheet_arenarankaward::mutable_arenarankaward_list(int index) {
  return arenarankaward_list_.Mutable(index);
}
inline ::proto_ff::arenarankaward* Sheet_arenarankaward::add_arenarankaward_list() {
  return arenarankaward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankaward >&
Sheet_arenarankaward::arenarankaward_list() const {
  return arenarankaward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenarankaward >*
Sheet_arenarankaward::mutable_arenarankaward_list() {
  return &arenarankaward_list_;
}

// -------------------------------------------------------------------

// arenafirstrankRewardDesc

// optional int32 ID = 1;
inline bool arenafirstrankRewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenafirstrankRewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenafirstrankRewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenafirstrankRewardDesc::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 arenafirstrankRewardDesc::id() const {
  return id_;
}
inline void arenafirstrankRewardDesc::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Value = 2;
inline bool arenafirstrankRewardDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenafirstrankRewardDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenafirstrankRewardDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenafirstrankRewardDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 arenafirstrankRewardDesc::value() const {
  return value_;
}
inline void arenafirstrankRewardDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// arenafirstrank

// optional int32 id = 1;
inline bool arenafirstrank::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenafirstrank::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenafirstrank::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenafirstrank::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 arenafirstrank::id() const {
  return id_;
}
inline void arenafirstrank::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 rankDown = 2;
inline bool arenafirstrank::has_rankdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenafirstrank::set_has_rankdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenafirstrank::clear_has_rankdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenafirstrank::clear_rankdown() {
  rankdown_ = 0;
  clear_has_rankdown();
}
inline ::google::protobuf::int32 arenafirstrank::rankdown() const {
  return rankdown_;
}
inline void arenafirstrank::set_rankdown(::google::protobuf::int32 value) {
  set_has_rankdown();
  rankdown_ = value;
}

// optional int32 rankUp = 3;
inline bool arenafirstrank::has_rankup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void arenafirstrank::set_has_rankup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void arenafirstrank::clear_has_rankup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void arenafirstrank::clear_rankup() {
  rankup_ = 0;
  clear_has_rankup();
}
inline ::google::protobuf::int32 arenafirstrank::rankup() const {
  return rankup_;
}
inline void arenafirstrank::set_rankup(::google::protobuf::int32 value) {
  set_has_rankup();
  rankup_ = value;
}

// repeated .proto_ff.arenafirstrankRewardDesc Reward = 4;
inline int arenafirstrank::reward_size() const {
  return reward_.size();
}
inline void arenafirstrank::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::arenafirstrankRewardDesc& arenafirstrank::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::arenafirstrankRewardDesc* arenafirstrank::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::arenafirstrankRewardDesc* arenafirstrank::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrankRewardDesc >&
arenafirstrank::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrankRewardDesc >*
arenafirstrank::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_arenafirstrank

// repeated .proto_ff.arenafirstrank arenafirstrank_List = 1;
inline int Sheet_arenafirstrank::arenafirstrank_list_size() const {
  return arenafirstrank_list_.size();
}
inline void Sheet_arenafirstrank::clear_arenafirstrank_list() {
  arenafirstrank_list_.Clear();
}
inline const ::proto_ff::arenafirstrank& Sheet_arenafirstrank::arenafirstrank_list(int index) const {
  return arenafirstrank_list_.Get(index);
}
inline ::proto_ff::arenafirstrank* Sheet_arenafirstrank::mutable_arenafirstrank_list(int index) {
  return arenafirstrank_list_.Mutable(index);
}
inline ::proto_ff::arenafirstrank* Sheet_arenafirstrank::add_arenafirstrank_list() {
  return arenafirstrank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrank >&
Sheet_arenafirstrank::arenafirstrank_list() const {
  return arenafirstrank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenafirstrank >*
Sheet_arenafirstrank::mutable_arenafirstrank_list() {
  return &arenafirstrank_list_;
}

// -------------------------------------------------------------------

// arenabuychallenge

// optional int32 count = 1;
inline bool arenabuychallenge::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arenabuychallenge::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arenabuychallenge::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arenabuychallenge::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 arenabuychallenge::count() const {
  return count_;
}
inline void arenabuychallenge::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 costType = 2;
inline bool arenabuychallenge::has_costtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arenabuychallenge::set_has_costtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arenabuychallenge::clear_has_costtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arenabuychallenge::clear_costtype() {
  costtype_ = 0;
  clear_has_costtype();
}
inline ::google::protobuf::int32 arenabuychallenge::costtype() const {
  return costtype_;
}
inline void arenabuychallenge::set_costtype(::google::protobuf::int32 value) {
  set_has_costtype();
  costtype_ = value;
}

// optional int32 cost = 3;
inline bool arenabuychallenge::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void arenabuychallenge::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void arenabuychallenge::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void arenabuychallenge::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 arenabuychallenge::cost() const {
  return cost_;
}
inline void arenabuychallenge::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
}

// -------------------------------------------------------------------

// Sheet_arenabuychallenge

// repeated .proto_ff.arenabuychallenge arenabuychallenge_List = 1;
inline int Sheet_arenabuychallenge::arenabuychallenge_list_size() const {
  return arenabuychallenge_list_.size();
}
inline void Sheet_arenabuychallenge::clear_arenabuychallenge_list() {
  arenabuychallenge_list_.Clear();
}
inline const ::proto_ff::arenabuychallenge& Sheet_arenabuychallenge::arenabuychallenge_list(int index) const {
  return arenabuychallenge_list_.Get(index);
}
inline ::proto_ff::arenabuychallenge* Sheet_arenabuychallenge::mutable_arenabuychallenge_list(int index) {
  return arenabuychallenge_list_.Mutable(index);
}
inline ::proto_ff::arenabuychallenge* Sheet_arenabuychallenge::add_arenabuychallenge_list() {
  return arenabuychallenge_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::arenabuychallenge >&
Sheet_arenabuychallenge::arenabuychallenge_list() const {
  return arenabuychallenge_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::arenabuychallenge >*
Sheet_arenabuychallenge::mutable_arenabuychallenge_list() {
  return &arenabuychallenge_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_arena_2eproto__INCLUDED
