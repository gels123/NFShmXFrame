// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: attribute.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "attribute.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* attributeattribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  attributeattribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_attributeattribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_attributeattribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* attributesuppress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  attributesuppress_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_attributesuppress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_attributesuppress_reflection_ = NULL;
const ::google::protobuf::Descriptor* attributepowersup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  attributepowersup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_attributepowersup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_attributepowersup_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_attribute_2eproto() {
  protobuf_AddDesc_attribute_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "attribute.proto");
  GOOGLE_CHECK(file != NULL);
  attributeattribute_descriptor_ = file->message_type(0);
  static const int attributeattribute_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributeattribute, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributeattribute, percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributeattribute, power_),
  };
  attributeattribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      attributeattribute_descriptor_,
      attributeattribute::default_instance_,
      attributeattribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributeattribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributeattribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(attributeattribute));
  Sheet_attributeattribute_descriptor_ = file->message_type(1);
  static const int Sheet_attributeattribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributeattribute, attributeattribute_list_),
  };
  Sheet_attributeattribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_attributeattribute_descriptor_,
      Sheet_attributeattribute::default_instance_,
      Sheet_attributeattribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributeattribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributeattribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_attributeattribute));
  attributesuppress_descriptor_ = file->message_type(2);
  static const int attributesuppress_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, lvldiff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, hitsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, critsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, killsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, statesuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, lvsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, hitsuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, critsuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, killsuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, statesuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, lvsuppvp_),
  };
  attributesuppress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      attributesuppress_descriptor_,
      attributesuppress::default_instance_,
      attributesuppress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributesuppress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(attributesuppress));
  Sheet_attributesuppress_descriptor_ = file->message_type(3);
  static const int Sheet_attributesuppress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributesuppress, attributesuppress_list_),
  };
  Sheet_attributesuppress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_attributesuppress_descriptor_,
      Sheet_attributesuppress::default_instance_,
      Sheet_attributesuppress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributesuppress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributesuppress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_attributesuppress));
  attributepowersup_descriptor_ = file->message_type(4);
  static const int attributepowersup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributepowersup, powerdiff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributepowersup, powersuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributepowersup, powersuppvp_),
  };
  attributepowersup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      attributepowersup_descriptor_,
      attributepowersup::default_instance_,
      attributepowersup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributepowersup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(attributepowersup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(attributepowersup));
  Sheet_attributepowersup_descriptor_ = file->message_type(5);
  static const int Sheet_attributepowersup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributepowersup, attributepowersup_list_),
  };
  Sheet_attributepowersup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_attributepowersup_descriptor_,
      Sheet_attributepowersup::default_instance_,
      Sheet_attributepowersup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributepowersup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_attributepowersup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_attributepowersup));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_attribute_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    attributeattribute_descriptor_, &attributeattribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_attributeattribute_descriptor_, &Sheet_attributeattribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    attributesuppress_descriptor_, &attributesuppress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_attributesuppress_descriptor_, &Sheet_attributesuppress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    attributepowersup_descriptor_, &attributepowersup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_attributepowersup_descriptor_, &Sheet_attributepowersup::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_attribute_2eproto() {
  delete attributeattribute::default_instance_;
  delete attributeattribute_reflection_;
  delete Sheet_attributeattribute::default_instance_;
  delete Sheet_attributeattribute_reflection_;
  delete attributesuppress::default_instance_;
  delete attributesuppress_reflection_;
  delete Sheet_attributesuppress::default_instance_;
  delete Sheet_attributesuppress_reflection_;
  delete attributepowersup::default_instance_;
  delete attributepowersup_reflection_;
  delete Sheet_attributepowersup::default_instance_;
  delete Sheet_attributepowersup_reflection_;
}

void protobuf_AddDesc_attribute_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017attribute.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"l\n\022attributeattribute\022\030\n\002id\030\001"
    " \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022\036\n\007percent\030\002 \001(\005B\r\302\377\024"
    "\t\347\231\276\345\210\206\346\257\224\022\034\n\005power\030\003 \001(\002B\r\302\377\024\t\346\210\230\346\226\227\345\212\233"
    "\"`\n\030Sheet_attributeattribute\022D\n\027attribut"
    "eattribute_List\030\001 \003(\0132\034.proto_ff.attribu"
    "teattributeB\005\210\301\024\310\001\"\253\003\n\021attributesuppress"
    "\022\036\n\007lvlDiff\030\001 \001(\005B\r\302\377\024\t\347\255\211\347\272\247\345\267\256\022#\n\thitS"
    "upPve\030\002 \001(\005B\020\302\377\024\014\345\221\275\344\270\255\345\216\213\345\210\266\022$\n\ncritSup"
    "Pve\030\003 \001(\005B\020\302\377\024\014\346\232\264\345\207\273\345\216\213\345\210\266\022$\n\nkillSupPv"
    "e\030\004 \001(\005B\020\302\377\024\014\345\277\205\346\235\200\345\216\213\345\210\266\022%\n\013stateSupPve"
    "\030\005 \001(\005B\020\302\377\024\014\347\212\266\346\200\201\345\216\213\345\210\266\022\"\n\010lvSupPve\030\006 \001"
    "(\005B\020\302\377\024\014\347\255\211\347\272\247\345\216\213\345\210\266\022#\n\thitSupPvp\030\007 \001(\005B"
    "\020\302\377\024\014\345\221\275\344\270\255\345\216\213\345\210\266\022$\n\ncritSupPvp\030\010 \001(\005B\020\302"
    "\377\024\014\346\232\264\345\207\273\345\216\213\345\210\266\022$\n\nkillSupPvp\030\t \001(\005B\020\302\377\024"
    "\014\345\277\205\346\235\200\345\216\213\345\210\266\022%\n\013stateSupPvp\030\n \001(\005B\020\302\377\024\014"
    "\347\212\266\346\200\201\345\216\213\345\210\266\022\"\n\010lvSupPvp\030\013 \001(\005B\020\302\377\024\014\347\255\211\347"
    "\272\247\345\216\213\345\210\266\"]\n\027Sheet_attributesuppress\022B\n\026a"
    "ttributesuppress_List\030\001 \003(\0132\033.proto_ff.a"
    "ttributesuppressB\005\210\301\024\330\004\"\203\001\n\021attributepow"
    "ersup\022 \n\tpowerDiff\030\001 \001(\005B\r\302\377\024\t\346\210\230\345\212\233\345\267\256\022"
    "%\n\013powerSupPve\030\002 \001(\005B\020\302\377\024\014\346\210\230\345\212\233\345\216\213\345\210\266\022%"
    "\n\013powerSupPvp\030\003 \001(\005B\020\302\377\024\014\346\210\230\345\212\233\345\216\213\345\210\266\"]\n"
    "\027Sheet_attributepowersup\022B\n\026attributepow"
    "ersup_List\030\001 \003(\0132\033.proto_ff.attributepow"
    "ersupB\005\210\301\024\310\001", 1012);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "attribute.proto", &protobuf_RegisterTypes);
  attributeattribute::default_instance_ = new attributeattribute();
  Sheet_attributeattribute::default_instance_ = new Sheet_attributeattribute();
  attributesuppress::default_instance_ = new attributesuppress();
  Sheet_attributesuppress::default_instance_ = new Sheet_attributesuppress();
  attributepowersup::default_instance_ = new attributepowersup();
  Sheet_attributepowersup::default_instance_ = new Sheet_attributepowersup();
  attributeattribute::default_instance_->InitAsDefaultInstance();
  Sheet_attributeattribute::default_instance_->InitAsDefaultInstance();
  attributesuppress::default_instance_->InitAsDefaultInstance();
  Sheet_attributesuppress::default_instance_->InitAsDefaultInstance();
  attributepowersup::default_instance_->InitAsDefaultInstance();
  Sheet_attributepowersup::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_attribute_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_attribute_2eproto {
  StaticDescriptorInitializer_attribute_2eproto() {
    protobuf_AddDesc_attribute_2eproto();
  }
} static_descriptor_initializer_attribute_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int attributeattribute::kIdFieldNumber;
const int attributeattribute::kPercentFieldNumber;
const int attributeattribute::kPowerFieldNumber;
#endif  // !_MSC_VER

attributeattribute::attributeattribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void attributeattribute::InitAsDefaultInstance() {
}

attributeattribute::attributeattribute(const attributeattribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void attributeattribute::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  percent_ = 0;
  power_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

attributeattribute::~attributeattribute() {
  SharedDtor();
}

void attributeattribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void attributeattribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* attributeattribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return attributeattribute_descriptor_;
}

const attributeattribute& attributeattribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

attributeattribute* attributeattribute::default_instance_ = NULL;

attributeattribute* attributeattribute::New() const {
  return new attributeattribute;
}

void attributeattribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    percent_ = 0;
    power_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool attributeattribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_percent;
        break;
      }

      // optional int32 percent = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percent_)));
          set_has_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_power;
        break;
      }

      // optional float power = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &power_)));
          set_has_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void attributeattribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 percent = 2;
  if (has_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->percent(), output);
  }

  // optional float power = 3;
  if (has_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->power(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* attributeattribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 percent = 2;
  if (has_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->percent(), target);
  }

  // optional float power = 3;
  if (has_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->power(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int attributeattribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 percent = 2;
    if (has_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percent());
    }

    // optional float power = 3;
    if (has_power()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void attributeattribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const attributeattribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const attributeattribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void attributeattribute::MergeFrom(const attributeattribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_percent()) {
      set_percent(from.percent());
    }
    if (from.has_power()) {
      set_power(from.power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void attributeattribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void attributeattribute::CopyFrom(const attributeattribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool attributeattribute::IsInitialized() const {

  return true;
}

void attributeattribute::Swap(attributeattribute* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(percent_, other->percent_);
    std::swap(power_, other->power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata attributeattribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = attributeattribute_descriptor_;
  metadata.reflection = attributeattribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_attributeattribute::kAttributeattributeListFieldNumber;
#endif  // !_MSC_VER

Sheet_attributeattribute::Sheet_attributeattribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_attributeattribute::InitAsDefaultInstance() {
}

Sheet_attributeattribute::Sheet_attributeattribute(const Sheet_attributeattribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_attributeattribute::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_attributeattribute::~Sheet_attributeattribute() {
  SharedDtor();
}

void Sheet_attributeattribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_attributeattribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_attributeattribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_attributeattribute_descriptor_;
}

const Sheet_attributeattribute& Sheet_attributeattribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

Sheet_attributeattribute* Sheet_attributeattribute::default_instance_ = NULL;

Sheet_attributeattribute* Sheet_attributeattribute::New() const {
  return new Sheet_attributeattribute;
}

void Sheet_attributeattribute::Clear() {
  attributeattribute_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_attributeattribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.attributeattribute attributeattribute_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributeattribute_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributeattribute_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attributeattribute_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_attributeattribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.attributeattribute attributeattribute_List = 1;
  for (int i = 0; i < this->attributeattribute_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attributeattribute_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_attributeattribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.attributeattribute attributeattribute_List = 1;
  for (int i = 0; i < this->attributeattribute_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attributeattribute_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_attributeattribute::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.attributeattribute attributeattribute_List = 1;
  total_size += 1 * this->attributeattribute_list_size();
  for (int i = 0; i < this->attributeattribute_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributeattribute_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_attributeattribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_attributeattribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_attributeattribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_attributeattribute::MergeFrom(const Sheet_attributeattribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributeattribute_list_.MergeFrom(from.attributeattribute_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_attributeattribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_attributeattribute::CopyFrom(const Sheet_attributeattribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_attributeattribute::IsInitialized() const {

  return true;
}

void Sheet_attributeattribute::Swap(Sheet_attributeattribute* other) {
  if (other != this) {
    attributeattribute_list_.Swap(&other->attributeattribute_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_attributeattribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_attributeattribute_descriptor_;
  metadata.reflection = Sheet_attributeattribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int attributesuppress::kLvlDiffFieldNumber;
const int attributesuppress::kHitSupPveFieldNumber;
const int attributesuppress::kCritSupPveFieldNumber;
const int attributesuppress::kKillSupPveFieldNumber;
const int attributesuppress::kStateSupPveFieldNumber;
const int attributesuppress::kLvSupPveFieldNumber;
const int attributesuppress::kHitSupPvpFieldNumber;
const int attributesuppress::kCritSupPvpFieldNumber;
const int attributesuppress::kKillSupPvpFieldNumber;
const int attributesuppress::kStateSupPvpFieldNumber;
const int attributesuppress::kLvSupPvpFieldNumber;
#endif  // !_MSC_VER

attributesuppress::attributesuppress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void attributesuppress::InitAsDefaultInstance() {
}

attributesuppress::attributesuppress(const attributesuppress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void attributesuppress::SharedCtor() {
  _cached_size_ = 0;
  lvldiff_ = 0;
  hitsuppve_ = 0;
  critsuppve_ = 0;
  killsuppve_ = 0;
  statesuppve_ = 0;
  lvsuppve_ = 0;
  hitsuppvp_ = 0;
  critsuppvp_ = 0;
  killsuppvp_ = 0;
  statesuppvp_ = 0;
  lvsuppvp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

attributesuppress::~attributesuppress() {
  SharedDtor();
}

void attributesuppress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void attributesuppress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* attributesuppress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return attributesuppress_descriptor_;
}

const attributesuppress& attributesuppress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

attributesuppress* attributesuppress::default_instance_ = NULL;

attributesuppress* attributesuppress::New() const {
  return new attributesuppress;
}

void attributesuppress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lvldiff_ = 0;
    hitsuppve_ = 0;
    critsuppve_ = 0;
    killsuppve_ = 0;
    statesuppve_ = 0;
    lvsuppve_ = 0;
    hitsuppvp_ = 0;
    critsuppvp_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    killsuppvp_ = 0;
    statesuppvp_ = 0;
    lvsuppvp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool attributesuppress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lvlDiff = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lvldiff_)));
          set_has_lvldiff();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hitSupPve;
        break;
      }

      // optional int32 hitSupPve = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hitSupPve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hitsuppve_)));
          set_has_hitsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_critSupPve;
        break;
      }

      // optional int32 critSupPve = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critSupPve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &critsuppve_)));
          set_has_critsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_killSupPve;
        break;
      }

      // optional int32 killSupPve = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killSupPve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killsuppve_)));
          set_has_killsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_stateSupPve;
        break;
      }

      // optional int32 stateSupPve = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stateSupPve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statesuppve_)));
          set_has_statesuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_lvSupPve;
        break;
      }

      // optional int32 lvSupPve = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lvSupPve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lvsuppve_)));
          set_has_lvsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_hitSupPvp;
        break;
      }

      // optional int32 hitSupPvp = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hitSupPvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hitsuppvp_)));
          set_has_hitsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_critSupPvp;
        break;
      }

      // optional int32 critSupPvp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_critSupPvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &critsuppvp_)));
          set_has_critsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_killSupPvp;
        break;
      }

      // optional int32 killSupPvp = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killSupPvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killsuppvp_)));
          set_has_killsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_stateSupPvp;
        break;
      }

      // optional int32 stateSupPvp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stateSupPvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statesuppvp_)));
          set_has_statesuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_lvSupPvp;
        break;
      }

      // optional int32 lvSupPvp = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lvSupPvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lvsuppvp_)));
          set_has_lvsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void attributesuppress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lvlDiff = 1;
  if (has_lvldiff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lvldiff(), output);
  }

  // optional int32 hitSupPve = 2;
  if (has_hitsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hitsuppve(), output);
  }

  // optional int32 critSupPve = 3;
  if (has_critsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->critsuppve(), output);
  }

  // optional int32 killSupPve = 4;
  if (has_killsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->killsuppve(), output);
  }

  // optional int32 stateSupPve = 5;
  if (has_statesuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->statesuppve(), output);
  }

  // optional int32 lvSupPve = 6;
  if (has_lvsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lvsuppve(), output);
  }

  // optional int32 hitSupPvp = 7;
  if (has_hitsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hitsuppvp(), output);
  }

  // optional int32 critSupPvp = 8;
  if (has_critsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->critsuppvp(), output);
  }

  // optional int32 killSupPvp = 9;
  if (has_killsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->killsuppvp(), output);
  }

  // optional int32 stateSupPvp = 10;
  if (has_statesuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->statesuppvp(), output);
  }

  // optional int32 lvSupPvp = 11;
  if (has_lvsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->lvsuppvp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* attributesuppress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lvlDiff = 1;
  if (has_lvldiff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lvldiff(), target);
  }

  // optional int32 hitSupPve = 2;
  if (has_hitsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hitsuppve(), target);
  }

  // optional int32 critSupPve = 3;
  if (has_critsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->critsuppve(), target);
  }

  // optional int32 killSupPve = 4;
  if (has_killsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->killsuppve(), target);
  }

  // optional int32 stateSupPve = 5;
  if (has_statesuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->statesuppve(), target);
  }

  // optional int32 lvSupPve = 6;
  if (has_lvsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lvsuppve(), target);
  }

  // optional int32 hitSupPvp = 7;
  if (has_hitsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hitsuppvp(), target);
  }

  // optional int32 critSupPvp = 8;
  if (has_critsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->critsuppvp(), target);
  }

  // optional int32 killSupPvp = 9;
  if (has_killsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->killsuppvp(), target);
  }

  // optional int32 stateSupPvp = 10;
  if (has_statesuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->statesuppvp(), target);
  }

  // optional int32 lvSupPvp = 11;
  if (has_lvsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->lvsuppvp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int attributesuppress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lvlDiff = 1;
    if (has_lvldiff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvldiff());
    }

    // optional int32 hitSupPve = 2;
    if (has_hitsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hitsuppve());
    }

    // optional int32 critSupPve = 3;
    if (has_critsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->critsuppve());
    }

    // optional int32 killSupPve = 4;
    if (has_killsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killsuppve());
    }

    // optional int32 stateSupPve = 5;
    if (has_statesuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statesuppve());
    }

    // optional int32 lvSupPve = 6;
    if (has_lvsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvsuppve());
    }

    // optional int32 hitSupPvp = 7;
    if (has_hitsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hitsuppvp());
    }

    // optional int32 critSupPvp = 8;
    if (has_critsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->critsuppvp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 killSupPvp = 9;
    if (has_killsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killsuppvp());
    }

    // optional int32 stateSupPvp = 10;
    if (has_statesuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statesuppvp());
    }

    // optional int32 lvSupPvp = 11;
    if (has_lvsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvsuppvp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void attributesuppress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const attributesuppress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const attributesuppress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void attributesuppress::MergeFrom(const attributesuppress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lvldiff()) {
      set_lvldiff(from.lvldiff());
    }
    if (from.has_hitsuppve()) {
      set_hitsuppve(from.hitsuppve());
    }
    if (from.has_critsuppve()) {
      set_critsuppve(from.critsuppve());
    }
    if (from.has_killsuppve()) {
      set_killsuppve(from.killsuppve());
    }
    if (from.has_statesuppve()) {
      set_statesuppve(from.statesuppve());
    }
    if (from.has_lvsuppve()) {
      set_lvsuppve(from.lvsuppve());
    }
    if (from.has_hitsuppvp()) {
      set_hitsuppvp(from.hitsuppvp());
    }
    if (from.has_critsuppvp()) {
      set_critsuppvp(from.critsuppvp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_killsuppvp()) {
      set_killsuppvp(from.killsuppvp());
    }
    if (from.has_statesuppvp()) {
      set_statesuppvp(from.statesuppvp());
    }
    if (from.has_lvsuppvp()) {
      set_lvsuppvp(from.lvsuppvp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void attributesuppress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void attributesuppress::CopyFrom(const attributesuppress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool attributesuppress::IsInitialized() const {

  return true;
}

void attributesuppress::Swap(attributesuppress* other) {
  if (other != this) {
    std::swap(lvldiff_, other->lvldiff_);
    std::swap(hitsuppve_, other->hitsuppve_);
    std::swap(critsuppve_, other->critsuppve_);
    std::swap(killsuppve_, other->killsuppve_);
    std::swap(statesuppve_, other->statesuppve_);
    std::swap(lvsuppve_, other->lvsuppve_);
    std::swap(hitsuppvp_, other->hitsuppvp_);
    std::swap(critsuppvp_, other->critsuppvp_);
    std::swap(killsuppvp_, other->killsuppvp_);
    std::swap(statesuppvp_, other->statesuppvp_);
    std::swap(lvsuppvp_, other->lvsuppvp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata attributesuppress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = attributesuppress_descriptor_;
  metadata.reflection = attributesuppress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_attributesuppress::kAttributesuppressListFieldNumber;
#endif  // !_MSC_VER

Sheet_attributesuppress::Sheet_attributesuppress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_attributesuppress::InitAsDefaultInstance() {
}

Sheet_attributesuppress::Sheet_attributesuppress(const Sheet_attributesuppress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_attributesuppress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_attributesuppress::~Sheet_attributesuppress() {
  SharedDtor();
}

void Sheet_attributesuppress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_attributesuppress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_attributesuppress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_attributesuppress_descriptor_;
}

const Sheet_attributesuppress& Sheet_attributesuppress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

Sheet_attributesuppress* Sheet_attributesuppress::default_instance_ = NULL;

Sheet_attributesuppress* Sheet_attributesuppress::New() const {
  return new Sheet_attributesuppress;
}

void Sheet_attributesuppress::Clear() {
  attributesuppress_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_attributesuppress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.attributesuppress attributesuppress_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributesuppress_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributesuppress_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attributesuppress_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_attributesuppress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.attributesuppress attributesuppress_List = 1;
  for (int i = 0; i < this->attributesuppress_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attributesuppress_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_attributesuppress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.attributesuppress attributesuppress_List = 1;
  for (int i = 0; i < this->attributesuppress_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attributesuppress_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_attributesuppress::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.attributesuppress attributesuppress_List = 1;
  total_size += 1 * this->attributesuppress_list_size();
  for (int i = 0; i < this->attributesuppress_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributesuppress_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_attributesuppress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_attributesuppress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_attributesuppress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_attributesuppress::MergeFrom(const Sheet_attributesuppress& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributesuppress_list_.MergeFrom(from.attributesuppress_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_attributesuppress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_attributesuppress::CopyFrom(const Sheet_attributesuppress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_attributesuppress::IsInitialized() const {

  return true;
}

void Sheet_attributesuppress::Swap(Sheet_attributesuppress* other) {
  if (other != this) {
    attributesuppress_list_.Swap(&other->attributesuppress_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_attributesuppress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_attributesuppress_descriptor_;
  metadata.reflection = Sheet_attributesuppress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int attributepowersup::kPowerDiffFieldNumber;
const int attributepowersup::kPowerSupPveFieldNumber;
const int attributepowersup::kPowerSupPvpFieldNumber;
#endif  // !_MSC_VER

attributepowersup::attributepowersup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void attributepowersup::InitAsDefaultInstance() {
}

attributepowersup::attributepowersup(const attributepowersup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void attributepowersup::SharedCtor() {
  _cached_size_ = 0;
  powerdiff_ = 0;
  powersuppve_ = 0;
  powersuppvp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

attributepowersup::~attributepowersup() {
  SharedDtor();
}

void attributepowersup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void attributepowersup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* attributepowersup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return attributepowersup_descriptor_;
}

const attributepowersup& attributepowersup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

attributepowersup* attributepowersup::default_instance_ = NULL;

attributepowersup* attributepowersup::New() const {
  return new attributepowersup;
}

void attributepowersup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    powerdiff_ = 0;
    powersuppve_ = 0;
    powersuppvp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool attributepowersup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 powerDiff = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powerdiff_)));
          set_has_powerdiff();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_powerSupPve;
        break;
      }

      // optional int32 powerSupPve = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_powerSupPve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powersuppve_)));
          set_has_powersuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_powerSupPvp;
        break;
      }

      // optional int32 powerSupPvp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_powerSupPvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powersuppvp_)));
          set_has_powersuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void attributepowersup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 powerDiff = 1;
  if (has_powerdiff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->powerdiff(), output);
  }

  // optional int32 powerSupPve = 2;
  if (has_powersuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->powersuppve(), output);
  }

  // optional int32 powerSupPvp = 3;
  if (has_powersuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->powersuppvp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* attributepowersup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 powerDiff = 1;
  if (has_powerdiff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->powerdiff(), target);
  }

  // optional int32 powerSupPve = 2;
  if (has_powersuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->powersuppve(), target);
  }

  // optional int32 powerSupPvp = 3;
  if (has_powersuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->powersuppvp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int attributepowersup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 powerDiff = 1;
    if (has_powerdiff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->powerdiff());
    }

    // optional int32 powerSupPve = 2;
    if (has_powersuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->powersuppve());
    }

    // optional int32 powerSupPvp = 3;
    if (has_powersuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->powersuppvp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void attributepowersup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const attributepowersup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const attributepowersup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void attributepowersup::MergeFrom(const attributepowersup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_powerdiff()) {
      set_powerdiff(from.powerdiff());
    }
    if (from.has_powersuppve()) {
      set_powersuppve(from.powersuppve());
    }
    if (from.has_powersuppvp()) {
      set_powersuppvp(from.powersuppvp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void attributepowersup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void attributepowersup::CopyFrom(const attributepowersup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool attributepowersup::IsInitialized() const {

  return true;
}

void attributepowersup::Swap(attributepowersup* other) {
  if (other != this) {
    std::swap(powerdiff_, other->powerdiff_);
    std::swap(powersuppve_, other->powersuppve_);
    std::swap(powersuppvp_, other->powersuppvp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata attributepowersup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = attributepowersup_descriptor_;
  metadata.reflection = attributepowersup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_attributepowersup::kAttributepowersupListFieldNumber;
#endif  // !_MSC_VER

Sheet_attributepowersup::Sheet_attributepowersup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_attributepowersup::InitAsDefaultInstance() {
}

Sheet_attributepowersup::Sheet_attributepowersup(const Sheet_attributepowersup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_attributepowersup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_attributepowersup::~Sheet_attributepowersup() {
  SharedDtor();
}

void Sheet_attributepowersup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_attributepowersup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_attributepowersup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_attributepowersup_descriptor_;
}

const Sheet_attributepowersup& Sheet_attributepowersup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

Sheet_attributepowersup* Sheet_attributepowersup::default_instance_ = NULL;

Sheet_attributepowersup* Sheet_attributepowersup::New() const {
  return new Sheet_attributepowersup;
}

void Sheet_attributepowersup::Clear() {
  attributepowersup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_attributepowersup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.attributepowersup attributepowersup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributepowersup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributepowersup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attributepowersup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_attributepowersup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.attributepowersup attributepowersup_List = 1;
  for (int i = 0; i < this->attributepowersup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attributepowersup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_attributepowersup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.attributepowersup attributepowersup_List = 1;
  for (int i = 0; i < this->attributepowersup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attributepowersup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_attributepowersup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.attributepowersup attributepowersup_List = 1;
  total_size += 1 * this->attributepowersup_list_size();
  for (int i = 0; i < this->attributepowersup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributepowersup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_attributepowersup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_attributepowersup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_attributepowersup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_attributepowersup::MergeFrom(const Sheet_attributepowersup& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributepowersup_list_.MergeFrom(from.attributepowersup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_attributepowersup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_attributepowersup::CopyFrom(const Sheet_attributepowersup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_attributepowersup::IsInitialized() const {

  return true;
}

void Sheet_attributepowersup::Swap(Sheet_attributepowersup* other) {
  if (other != this) {
    attributepowersup_list_.Swap(&other->attributepowersup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_attributepowersup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_attributepowersup_descriptor_;
  metadata.reflection = Sheet_attributepowersup_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
