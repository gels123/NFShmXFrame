// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: attribute.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "attribute.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_AttributeAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AttributeAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AttributeAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AttributeAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AttributeSuppress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AttributeSuppress_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AttributeSuppress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AttributeSuppress_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AttributePowersup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AttributePowersup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AttributePowersup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AttributePowersup_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_attribute_2eproto() {
  protobuf_AddDesc_attribute_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "attribute.proto");
  GOOGLE_CHECK(file != NULL);
  E_AttributeAttribute_descriptor_ = file->message_type(0);
  static const int E_AttributeAttribute_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeAttribute, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeAttribute, m_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeAttribute, m_power_),
  };
  E_AttributeAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AttributeAttribute_descriptor_,
      E_AttributeAttribute::default_instance_,
      E_AttributeAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AttributeAttribute));
  Sheet_AttributeAttribute_descriptor_ = file->message_type(1);
  static const int Sheet_AttributeAttribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributeAttribute, e_attributeattribute_list_),
  };
  Sheet_AttributeAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AttributeAttribute_descriptor_,
      Sheet_AttributeAttribute::default_instance_,
      Sheet_AttributeAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributeAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributeAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AttributeAttribute));
  E_AttributeSuppress_descriptor_ = file->message_type(2);
  static const int E_AttributeSuppress_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_lvldiff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_hitsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_critsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_killsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_statesuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_lvsuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_hitsuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_critsuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_killsuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_statesuppvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, m_lvsuppvp_),
  };
  E_AttributeSuppress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AttributeSuppress_descriptor_,
      E_AttributeSuppress::default_instance_,
      E_AttributeSuppress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributeSuppress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AttributeSuppress));
  Sheet_AttributeSuppress_descriptor_ = file->message_type(3);
  static const int Sheet_AttributeSuppress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributeSuppress, e_attributesuppress_list_),
  };
  Sheet_AttributeSuppress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AttributeSuppress_descriptor_,
      Sheet_AttributeSuppress::default_instance_,
      Sheet_AttributeSuppress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributeSuppress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributeSuppress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AttributeSuppress));
  E_AttributePowersup_descriptor_ = file->message_type(4);
  static const int E_AttributePowersup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributePowersup, m_powerdiff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributePowersup, m_powersuppve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributePowersup, m_powersuppvp_),
  };
  E_AttributePowersup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AttributePowersup_descriptor_,
      E_AttributePowersup::default_instance_,
      E_AttributePowersup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributePowersup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AttributePowersup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AttributePowersup));
  Sheet_AttributePowersup_descriptor_ = file->message_type(5);
  static const int Sheet_AttributePowersup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributePowersup, e_attributepowersup_list_),
  };
  Sheet_AttributePowersup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AttributePowersup_descriptor_,
      Sheet_AttributePowersup::default_instance_,
      Sheet_AttributePowersup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributePowersup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AttributePowersup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AttributePowersup));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_attribute_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AttributeAttribute_descriptor_, &E_AttributeAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AttributeAttribute_descriptor_, &Sheet_AttributeAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AttributeSuppress_descriptor_, &E_AttributeSuppress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AttributeSuppress_descriptor_, &Sheet_AttributeSuppress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AttributePowersup_descriptor_, &E_AttributePowersup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AttributePowersup_descriptor_, &Sheet_AttributePowersup::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_attribute_2eproto() {
  delete E_AttributeAttribute::default_instance_;
  delete E_AttributeAttribute_reflection_;
  delete Sheet_AttributeAttribute::default_instance_;
  delete Sheet_AttributeAttribute_reflection_;
  delete E_AttributeSuppress::default_instance_;
  delete E_AttributeSuppress_reflection_;
  delete Sheet_AttributeSuppress::default_instance_;
  delete Sheet_AttributeSuppress_reflection_;
  delete E_AttributePowersup::default_instance_;
  delete E_AttributePowersup_reflection_;
  delete Sheet_AttributePowersup::default_instance_;
  delete Sheet_AttributePowersup_reflection_;
}

void protobuf_AddDesc_attribute_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017attribute.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"t\n\024E_AttributeAttribute\022\032\n\004m_"
    "id\030\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022 \n\tm_percent\030\002 \001("
    "\005B\r\302\377\024\t\347\231\276\345\210\206\346\257\224\022\036\n\007m_power\030\003 \001(\002B\r\302\377\024\t\346"
    "\210\230\346\226\227\345\212\233\"d\n\030Sheet_AttributeAttribute\022H\n\031"
    "E_AttributeAttribute_List\030\001 \003(\0132\036.proto_"
    "ff.E_AttributeAttributeB\005\210\301\024\310\001\"\303\003\n\023E_Att"
    "ributeSuppress\022 \n\tm_lvldiff\030\001 \001(\005B\r\302\377\024\t\347"
    "\255\211\347\272\247\345\267\256\022%\n\013m_hitsuppve\030\002 \001(\005B\020\302\377\024\014\345\221\275\344\270"
    "\255\345\216\213\345\210\266\022&\n\014m_critsuppve\030\003 \001(\005B\020\302\377\024\014\346\232\264\345\207"
    "\273\345\216\213\345\210\266\022&\n\014m_killsuppve\030\004 \001(\005B\020\302\377\024\014\345\277\205\346\235"
    "\200\345\216\213\345\210\266\022\'\n\rm_statesuppve\030\005 \001(\005B\020\302\377\024\014\347\212\266\346"
    "\200\201\345\216\213\345\210\266\022$\n\nm_lvsuppve\030\006 \001(\005B\020\302\377\024\014\347\255\211\347\272\247"
    "\345\216\213\345\210\266\022%\n\013m_hitsuppvp\030\007 \001(\005B\020\302\377\024\014\345\221\275\344\270\255\345"
    "\216\213\345\210\266\022&\n\014m_critsuppvp\030\010 \001(\005B\020\302\377\024\014\346\232\264\345\207\273\345"
    "\216\213\345\210\266\022&\n\014m_killsuppvp\030\t \001(\005B\020\302\377\024\014\345\277\205\346\235\200\345"
    "\216\213\345\210\266\022\'\n\rm_statesuppvp\030\n \001(\005B\020\302\377\024\014\347\212\266\346\200\201"
    "\345\216\213\345\210\266\022$\n\nm_lvsuppvp\030\013 \001(\005B\020\302\377\024\014\347\255\211\347\272\247\345\216"
    "\213\345\210\266\"a\n\027Sheet_AttributeSuppress\022F\n\030E_Att"
    "ributeSuppress_List\030\001 \003(\0132\035.proto_ff.E_A"
    "ttributeSuppressB\005\210\301\024\330\004\"\213\001\n\023E_AttributeP"
    "owersup\022\"\n\013m_powerdiff\030\001 \001(\005B\r\302\377\024\t\346\210\230\345\212\233"
    "\345\267\256\022\'\n\rm_powersuppve\030\002 \001(\005B\020\302\377\024\014\346\210\230\345\212\233\345\216"
    "\213\345\210\266\022\'\n\rm_powersuppvp\030\003 \001(\005B\020\302\377\024\014\346\210\230\345\212\233\345"
    "\216\213\345\210\266\"a\n\027Sheet_AttributePowersup\022F\n\030E_At"
    "tributePowersup_List\030\001 \003(\0132\035.proto_ff.E_"
    "AttributePowersupB\005\210\301\024\310\001", 1064);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "attribute.proto", &protobuf_RegisterTypes);
  E_AttributeAttribute::default_instance_ = new E_AttributeAttribute();
  Sheet_AttributeAttribute::default_instance_ = new Sheet_AttributeAttribute();
  E_AttributeSuppress::default_instance_ = new E_AttributeSuppress();
  Sheet_AttributeSuppress::default_instance_ = new Sheet_AttributeSuppress();
  E_AttributePowersup::default_instance_ = new E_AttributePowersup();
  Sheet_AttributePowersup::default_instance_ = new Sheet_AttributePowersup();
  E_AttributeAttribute::default_instance_->InitAsDefaultInstance();
  Sheet_AttributeAttribute::default_instance_->InitAsDefaultInstance();
  E_AttributeSuppress::default_instance_->InitAsDefaultInstance();
  Sheet_AttributeSuppress::default_instance_->InitAsDefaultInstance();
  E_AttributePowersup::default_instance_->InitAsDefaultInstance();
  Sheet_AttributePowersup::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_attribute_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_attribute_2eproto {
  StaticDescriptorInitializer_attribute_2eproto() {
    protobuf_AddDesc_attribute_2eproto();
  }
} static_descriptor_initializer_attribute_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_AttributeAttribute::kMIdFieldNumber;
const int E_AttributeAttribute::kMPercentFieldNumber;
const int E_AttributeAttribute::kMPowerFieldNumber;
#endif  // !_MSC_VER

E_AttributeAttribute::E_AttributeAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AttributeAttribute::InitAsDefaultInstance() {
}

E_AttributeAttribute::E_AttributeAttribute(const E_AttributeAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AttributeAttribute::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_percent_ = 0;
  m_power_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AttributeAttribute::~E_AttributeAttribute() {
  SharedDtor();
}

void E_AttributeAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AttributeAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AttributeAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AttributeAttribute_descriptor_;
}

const E_AttributeAttribute& E_AttributeAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

E_AttributeAttribute* E_AttributeAttribute::default_instance_ = NULL;

E_AttributeAttribute* E_AttributeAttribute::New() const {
  return new E_AttributeAttribute;
}

void E_AttributeAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_percent_ = 0;
    m_power_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AttributeAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_percent;
        break;
      }

      // optional int32 m_percent = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_percent_)));
          set_has_m_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_m_power;
        break;
      }

      // optional float m_power = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_power_)));
          set_has_m_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AttributeAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_percent = 2;
  if (has_m_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_percent(), output);
  }

  // optional float m_power = 3;
  if (has_m_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_power(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AttributeAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_percent = 2;
  if (has_m_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_percent(), target);
  }

  // optional float m_power = 3;
  if (has_m_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_power(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AttributeAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_percent = 2;
    if (has_m_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_percent());
    }

    // optional float m_power = 3;
    if (has_m_power()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AttributeAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AttributeAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AttributeAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AttributeAttribute::MergeFrom(const E_AttributeAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_percent()) {
      set_m_percent(from.m_percent());
    }
    if (from.has_m_power()) {
      set_m_power(from.m_power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AttributeAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AttributeAttribute::CopyFrom(const E_AttributeAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AttributeAttribute::IsInitialized() const {

  return true;
}

void E_AttributeAttribute::Swap(E_AttributeAttribute* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_percent_, other->m_percent_);
    std::swap(m_power_, other->m_power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AttributeAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AttributeAttribute_descriptor_;
  metadata.reflection = E_AttributeAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AttributeAttribute::kEAttributeAttributeListFieldNumber;
#endif  // !_MSC_VER

Sheet_AttributeAttribute::Sheet_AttributeAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AttributeAttribute::InitAsDefaultInstance() {
}

Sheet_AttributeAttribute::Sheet_AttributeAttribute(const Sheet_AttributeAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AttributeAttribute::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AttributeAttribute::~Sheet_AttributeAttribute() {
  SharedDtor();
}

void Sheet_AttributeAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AttributeAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AttributeAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AttributeAttribute_descriptor_;
}

const Sheet_AttributeAttribute& Sheet_AttributeAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

Sheet_AttributeAttribute* Sheet_AttributeAttribute::default_instance_ = NULL;

Sheet_AttributeAttribute* Sheet_AttributeAttribute::New() const {
  return new Sheet_AttributeAttribute;
}

void Sheet_AttributeAttribute::Clear() {
  e_attributeattribute_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AttributeAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AttributeAttribute E_AttributeAttribute_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AttributeAttribute_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_attributeattribute_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AttributeAttribute_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AttributeAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AttributeAttribute E_AttributeAttribute_List = 1;
  for (int i = 0; i < this->e_attributeattribute_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_attributeattribute_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AttributeAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AttributeAttribute E_AttributeAttribute_List = 1;
  for (int i = 0; i < this->e_attributeattribute_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_attributeattribute_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AttributeAttribute::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AttributeAttribute E_AttributeAttribute_List = 1;
  total_size += 1 * this->e_attributeattribute_list_size();
  for (int i = 0; i < this->e_attributeattribute_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_attributeattribute_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AttributeAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AttributeAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AttributeAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AttributeAttribute::MergeFrom(const Sheet_AttributeAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_attributeattribute_list_.MergeFrom(from.e_attributeattribute_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AttributeAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AttributeAttribute::CopyFrom(const Sheet_AttributeAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AttributeAttribute::IsInitialized() const {

  return true;
}

void Sheet_AttributeAttribute::Swap(Sheet_AttributeAttribute* other) {
  if (other != this) {
    e_attributeattribute_list_.Swap(&other->e_attributeattribute_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AttributeAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AttributeAttribute_descriptor_;
  metadata.reflection = Sheet_AttributeAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AttributeSuppress::kMLvldiffFieldNumber;
const int E_AttributeSuppress::kMHitsuppveFieldNumber;
const int E_AttributeSuppress::kMCritsuppveFieldNumber;
const int E_AttributeSuppress::kMKillsuppveFieldNumber;
const int E_AttributeSuppress::kMStatesuppveFieldNumber;
const int E_AttributeSuppress::kMLvsuppveFieldNumber;
const int E_AttributeSuppress::kMHitsuppvpFieldNumber;
const int E_AttributeSuppress::kMCritsuppvpFieldNumber;
const int E_AttributeSuppress::kMKillsuppvpFieldNumber;
const int E_AttributeSuppress::kMStatesuppvpFieldNumber;
const int E_AttributeSuppress::kMLvsuppvpFieldNumber;
#endif  // !_MSC_VER

E_AttributeSuppress::E_AttributeSuppress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AttributeSuppress::InitAsDefaultInstance() {
}

E_AttributeSuppress::E_AttributeSuppress(const E_AttributeSuppress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AttributeSuppress::SharedCtor() {
  _cached_size_ = 0;
  m_lvldiff_ = 0;
  m_hitsuppve_ = 0;
  m_critsuppve_ = 0;
  m_killsuppve_ = 0;
  m_statesuppve_ = 0;
  m_lvsuppve_ = 0;
  m_hitsuppvp_ = 0;
  m_critsuppvp_ = 0;
  m_killsuppvp_ = 0;
  m_statesuppvp_ = 0;
  m_lvsuppvp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AttributeSuppress::~E_AttributeSuppress() {
  SharedDtor();
}

void E_AttributeSuppress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AttributeSuppress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AttributeSuppress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AttributeSuppress_descriptor_;
}

const E_AttributeSuppress& E_AttributeSuppress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

E_AttributeSuppress* E_AttributeSuppress::default_instance_ = NULL;

E_AttributeSuppress* E_AttributeSuppress::New() const {
  return new E_AttributeSuppress;
}

void E_AttributeSuppress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lvldiff_ = 0;
    m_hitsuppve_ = 0;
    m_critsuppve_ = 0;
    m_killsuppve_ = 0;
    m_statesuppve_ = 0;
    m_lvsuppve_ = 0;
    m_hitsuppvp_ = 0;
    m_critsuppvp_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_killsuppvp_ = 0;
    m_statesuppvp_ = 0;
    m_lvsuppvp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AttributeSuppress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lvldiff = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvldiff_)));
          set_has_m_lvldiff();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_hitsuppve;
        break;
      }

      // optional int32 m_hitsuppve = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_hitsuppve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_hitsuppve_)));
          set_has_m_hitsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_critsuppve;
        break;
      }

      // optional int32 m_critsuppve = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_critsuppve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_critsuppve_)));
          set_has_m_critsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_killsuppve;
        break;
      }

      // optional int32 m_killsuppve = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_killsuppve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_killsuppve_)));
          set_has_m_killsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_statesuppve;
        break;
      }

      // optional int32 m_statesuppve = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_statesuppve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_statesuppve_)));
          set_has_m_statesuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_lvsuppve;
        break;
      }

      // optional int32 m_lvsuppve = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvsuppve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvsuppve_)));
          set_has_m_lvsuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_hitsuppvp;
        break;
      }

      // optional int32 m_hitsuppvp = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_hitsuppvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_hitsuppvp_)));
          set_has_m_hitsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_critsuppvp;
        break;
      }

      // optional int32 m_critsuppvp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_critsuppvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_critsuppvp_)));
          set_has_m_critsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_killsuppvp;
        break;
      }

      // optional int32 m_killsuppvp = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_killsuppvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_killsuppvp_)));
          set_has_m_killsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_statesuppvp;
        break;
      }

      // optional int32 m_statesuppvp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_statesuppvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_statesuppvp_)));
          set_has_m_statesuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_lvsuppvp;
        break;
      }

      // optional int32 m_lvsuppvp = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvsuppvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvsuppvp_)));
          set_has_m_lvsuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AttributeSuppress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lvldiff = 1;
  if (has_m_lvldiff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lvldiff(), output);
  }

  // optional int32 m_hitsuppve = 2;
  if (has_m_hitsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_hitsuppve(), output);
  }

  // optional int32 m_critsuppve = 3;
  if (has_m_critsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_critsuppve(), output);
  }

  // optional int32 m_killsuppve = 4;
  if (has_m_killsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_killsuppve(), output);
  }

  // optional int32 m_statesuppve = 5;
  if (has_m_statesuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_statesuppve(), output);
  }

  // optional int32 m_lvsuppve = 6;
  if (has_m_lvsuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_lvsuppve(), output);
  }

  // optional int32 m_hitsuppvp = 7;
  if (has_m_hitsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_hitsuppvp(), output);
  }

  // optional int32 m_critsuppvp = 8;
  if (has_m_critsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_critsuppvp(), output);
  }

  // optional int32 m_killsuppvp = 9;
  if (has_m_killsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_killsuppvp(), output);
  }

  // optional int32 m_statesuppvp = 10;
  if (has_m_statesuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_statesuppvp(), output);
  }

  // optional int32 m_lvsuppvp = 11;
  if (has_m_lvsuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_lvsuppvp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AttributeSuppress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lvldiff = 1;
  if (has_m_lvldiff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lvldiff(), target);
  }

  // optional int32 m_hitsuppve = 2;
  if (has_m_hitsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_hitsuppve(), target);
  }

  // optional int32 m_critsuppve = 3;
  if (has_m_critsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_critsuppve(), target);
  }

  // optional int32 m_killsuppve = 4;
  if (has_m_killsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_killsuppve(), target);
  }

  // optional int32 m_statesuppve = 5;
  if (has_m_statesuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_statesuppve(), target);
  }

  // optional int32 m_lvsuppve = 6;
  if (has_m_lvsuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_lvsuppve(), target);
  }

  // optional int32 m_hitsuppvp = 7;
  if (has_m_hitsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_hitsuppvp(), target);
  }

  // optional int32 m_critsuppvp = 8;
  if (has_m_critsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_critsuppvp(), target);
  }

  // optional int32 m_killsuppvp = 9;
  if (has_m_killsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_killsuppvp(), target);
  }

  // optional int32 m_statesuppvp = 10;
  if (has_m_statesuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_statesuppvp(), target);
  }

  // optional int32 m_lvsuppvp = 11;
  if (has_m_lvsuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_lvsuppvp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AttributeSuppress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lvldiff = 1;
    if (has_m_lvldiff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvldiff());
    }

    // optional int32 m_hitsuppve = 2;
    if (has_m_hitsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_hitsuppve());
    }

    // optional int32 m_critsuppve = 3;
    if (has_m_critsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_critsuppve());
    }

    // optional int32 m_killsuppve = 4;
    if (has_m_killsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_killsuppve());
    }

    // optional int32 m_statesuppve = 5;
    if (has_m_statesuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_statesuppve());
    }

    // optional int32 m_lvsuppve = 6;
    if (has_m_lvsuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvsuppve());
    }

    // optional int32 m_hitsuppvp = 7;
    if (has_m_hitsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_hitsuppvp());
    }

    // optional int32 m_critsuppvp = 8;
    if (has_m_critsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_critsuppvp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_killsuppvp = 9;
    if (has_m_killsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_killsuppvp());
    }

    // optional int32 m_statesuppvp = 10;
    if (has_m_statesuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_statesuppvp());
    }

    // optional int32 m_lvsuppvp = 11;
    if (has_m_lvsuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvsuppvp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AttributeSuppress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AttributeSuppress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AttributeSuppress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AttributeSuppress::MergeFrom(const E_AttributeSuppress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lvldiff()) {
      set_m_lvldiff(from.m_lvldiff());
    }
    if (from.has_m_hitsuppve()) {
      set_m_hitsuppve(from.m_hitsuppve());
    }
    if (from.has_m_critsuppve()) {
      set_m_critsuppve(from.m_critsuppve());
    }
    if (from.has_m_killsuppve()) {
      set_m_killsuppve(from.m_killsuppve());
    }
    if (from.has_m_statesuppve()) {
      set_m_statesuppve(from.m_statesuppve());
    }
    if (from.has_m_lvsuppve()) {
      set_m_lvsuppve(from.m_lvsuppve());
    }
    if (from.has_m_hitsuppvp()) {
      set_m_hitsuppvp(from.m_hitsuppvp());
    }
    if (from.has_m_critsuppvp()) {
      set_m_critsuppvp(from.m_critsuppvp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_killsuppvp()) {
      set_m_killsuppvp(from.m_killsuppvp());
    }
    if (from.has_m_statesuppvp()) {
      set_m_statesuppvp(from.m_statesuppvp());
    }
    if (from.has_m_lvsuppvp()) {
      set_m_lvsuppvp(from.m_lvsuppvp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AttributeSuppress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AttributeSuppress::CopyFrom(const E_AttributeSuppress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AttributeSuppress::IsInitialized() const {

  return true;
}

void E_AttributeSuppress::Swap(E_AttributeSuppress* other) {
  if (other != this) {
    std::swap(m_lvldiff_, other->m_lvldiff_);
    std::swap(m_hitsuppve_, other->m_hitsuppve_);
    std::swap(m_critsuppve_, other->m_critsuppve_);
    std::swap(m_killsuppve_, other->m_killsuppve_);
    std::swap(m_statesuppve_, other->m_statesuppve_);
    std::swap(m_lvsuppve_, other->m_lvsuppve_);
    std::swap(m_hitsuppvp_, other->m_hitsuppvp_);
    std::swap(m_critsuppvp_, other->m_critsuppvp_);
    std::swap(m_killsuppvp_, other->m_killsuppvp_);
    std::swap(m_statesuppvp_, other->m_statesuppvp_);
    std::swap(m_lvsuppvp_, other->m_lvsuppvp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AttributeSuppress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AttributeSuppress_descriptor_;
  metadata.reflection = E_AttributeSuppress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AttributeSuppress::kEAttributeSuppressListFieldNumber;
#endif  // !_MSC_VER

Sheet_AttributeSuppress::Sheet_AttributeSuppress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AttributeSuppress::InitAsDefaultInstance() {
}

Sheet_AttributeSuppress::Sheet_AttributeSuppress(const Sheet_AttributeSuppress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AttributeSuppress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AttributeSuppress::~Sheet_AttributeSuppress() {
  SharedDtor();
}

void Sheet_AttributeSuppress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AttributeSuppress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AttributeSuppress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AttributeSuppress_descriptor_;
}

const Sheet_AttributeSuppress& Sheet_AttributeSuppress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

Sheet_AttributeSuppress* Sheet_AttributeSuppress::default_instance_ = NULL;

Sheet_AttributeSuppress* Sheet_AttributeSuppress::New() const {
  return new Sheet_AttributeSuppress;
}

void Sheet_AttributeSuppress::Clear() {
  e_attributesuppress_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AttributeSuppress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AttributeSuppress E_AttributeSuppress_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AttributeSuppress_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_attributesuppress_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AttributeSuppress_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AttributeSuppress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AttributeSuppress E_AttributeSuppress_List = 1;
  for (int i = 0; i < this->e_attributesuppress_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_attributesuppress_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AttributeSuppress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AttributeSuppress E_AttributeSuppress_List = 1;
  for (int i = 0; i < this->e_attributesuppress_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_attributesuppress_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AttributeSuppress::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AttributeSuppress E_AttributeSuppress_List = 1;
  total_size += 1 * this->e_attributesuppress_list_size();
  for (int i = 0; i < this->e_attributesuppress_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_attributesuppress_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AttributeSuppress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AttributeSuppress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AttributeSuppress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AttributeSuppress::MergeFrom(const Sheet_AttributeSuppress& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_attributesuppress_list_.MergeFrom(from.e_attributesuppress_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AttributeSuppress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AttributeSuppress::CopyFrom(const Sheet_AttributeSuppress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AttributeSuppress::IsInitialized() const {

  return true;
}

void Sheet_AttributeSuppress::Swap(Sheet_AttributeSuppress* other) {
  if (other != this) {
    e_attributesuppress_list_.Swap(&other->e_attributesuppress_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AttributeSuppress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AttributeSuppress_descriptor_;
  metadata.reflection = Sheet_AttributeSuppress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AttributePowersup::kMPowerdiffFieldNumber;
const int E_AttributePowersup::kMPowersuppveFieldNumber;
const int E_AttributePowersup::kMPowersuppvpFieldNumber;
#endif  // !_MSC_VER

E_AttributePowersup::E_AttributePowersup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AttributePowersup::InitAsDefaultInstance() {
}

E_AttributePowersup::E_AttributePowersup(const E_AttributePowersup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AttributePowersup::SharedCtor() {
  _cached_size_ = 0;
  m_powerdiff_ = 0;
  m_powersuppve_ = 0;
  m_powersuppvp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AttributePowersup::~E_AttributePowersup() {
  SharedDtor();
}

void E_AttributePowersup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AttributePowersup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AttributePowersup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AttributePowersup_descriptor_;
}

const E_AttributePowersup& E_AttributePowersup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

E_AttributePowersup* E_AttributePowersup::default_instance_ = NULL;

E_AttributePowersup* E_AttributePowersup::New() const {
  return new E_AttributePowersup;
}

void E_AttributePowersup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_powerdiff_ = 0;
    m_powersuppve_ = 0;
    m_powersuppvp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AttributePowersup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_powerdiff = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_powerdiff_)));
          set_has_m_powerdiff();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_powersuppve;
        break;
      }

      // optional int32 m_powersuppve = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_powersuppve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_powersuppve_)));
          set_has_m_powersuppve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_powersuppvp;
        break;
      }

      // optional int32 m_powersuppvp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_powersuppvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_powersuppvp_)));
          set_has_m_powersuppvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AttributePowersup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_powerdiff = 1;
  if (has_m_powerdiff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_powerdiff(), output);
  }

  // optional int32 m_powersuppve = 2;
  if (has_m_powersuppve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_powersuppve(), output);
  }

  // optional int32 m_powersuppvp = 3;
  if (has_m_powersuppvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_powersuppvp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AttributePowersup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_powerdiff = 1;
  if (has_m_powerdiff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_powerdiff(), target);
  }

  // optional int32 m_powersuppve = 2;
  if (has_m_powersuppve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_powersuppve(), target);
  }

  // optional int32 m_powersuppvp = 3;
  if (has_m_powersuppvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_powersuppvp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AttributePowersup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_powerdiff = 1;
    if (has_m_powerdiff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_powerdiff());
    }

    // optional int32 m_powersuppve = 2;
    if (has_m_powersuppve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_powersuppve());
    }

    // optional int32 m_powersuppvp = 3;
    if (has_m_powersuppvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_powersuppvp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AttributePowersup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AttributePowersup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AttributePowersup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AttributePowersup::MergeFrom(const E_AttributePowersup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_powerdiff()) {
      set_m_powerdiff(from.m_powerdiff());
    }
    if (from.has_m_powersuppve()) {
      set_m_powersuppve(from.m_powersuppve());
    }
    if (from.has_m_powersuppvp()) {
      set_m_powersuppvp(from.m_powersuppvp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AttributePowersup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AttributePowersup::CopyFrom(const E_AttributePowersup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AttributePowersup::IsInitialized() const {

  return true;
}

void E_AttributePowersup::Swap(E_AttributePowersup* other) {
  if (other != this) {
    std::swap(m_powerdiff_, other->m_powerdiff_);
    std::swap(m_powersuppve_, other->m_powersuppve_);
    std::swap(m_powersuppvp_, other->m_powersuppvp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AttributePowersup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AttributePowersup_descriptor_;
  metadata.reflection = E_AttributePowersup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AttributePowersup::kEAttributePowersupListFieldNumber;
#endif  // !_MSC_VER

Sheet_AttributePowersup::Sheet_AttributePowersup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AttributePowersup::InitAsDefaultInstance() {
}

Sheet_AttributePowersup::Sheet_AttributePowersup(const Sheet_AttributePowersup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AttributePowersup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AttributePowersup::~Sheet_AttributePowersup() {
  SharedDtor();
}

void Sheet_AttributePowersup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AttributePowersup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AttributePowersup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AttributePowersup_descriptor_;
}

const Sheet_AttributePowersup& Sheet_AttributePowersup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_attribute_2eproto();
  return *default_instance_;
}

Sheet_AttributePowersup* Sheet_AttributePowersup::default_instance_ = NULL;

Sheet_AttributePowersup* Sheet_AttributePowersup::New() const {
  return new Sheet_AttributePowersup;
}

void Sheet_AttributePowersup::Clear() {
  e_attributepowersup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AttributePowersup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AttributePowersup E_AttributePowersup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AttributePowersup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_attributepowersup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AttributePowersup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AttributePowersup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AttributePowersup E_AttributePowersup_List = 1;
  for (int i = 0; i < this->e_attributepowersup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_attributepowersup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AttributePowersup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AttributePowersup E_AttributePowersup_List = 1;
  for (int i = 0; i < this->e_attributepowersup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_attributepowersup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AttributePowersup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AttributePowersup E_AttributePowersup_List = 1;
  total_size += 1 * this->e_attributepowersup_list_size();
  for (int i = 0; i < this->e_attributepowersup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_attributepowersup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AttributePowersup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AttributePowersup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AttributePowersup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AttributePowersup::MergeFrom(const Sheet_AttributePowersup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_attributepowersup_list_.MergeFrom(from.e_attributepowersup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AttributePowersup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AttributePowersup::CopyFrom(const Sheet_AttributePowersup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AttributePowersup::IsInitialized() const {

  return true;
}

void Sheet_AttributePowersup::Swap(Sheet_AttributePowersup* other) {
  if (other != this) {
    e_attributepowersup_list_.Swap(&other->e_attributepowersup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AttributePowersup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AttributePowersup_descriptor_;
  metadata.reflection = Sheet_AttributePowersup_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
