// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Query.proto

#ifndef PROTOBUF_Query_2eproto__INCLUDED
#define PROTOBUF_Query_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Query_2eproto();
void protobuf_AssignDesc_Query_2eproto();
void protobuf_ShutdownFile_Query_2eproto();

class QueryCharacterDetailInfo;
class FuncFightProto;
class CWCharacterDetailReq;
class WCCharacterDetailRsp;
class CWCharacterMiniReq;
class WCCharacterMiniRsp;
class QueryCharFuncFightReq;
class QueryCharFuncFightRsp;
class QueryLoadMirrorDataCallBack;
class WGCharacterDetailReq;
class GWCharacterDetailRsp;
class QueryCharacterDetailCrossServerReq;
class QueryCharacterDetailCrossServerRsp;
class QueryCharacterMiniCrossServerReq;
class QueryCharacterMiniCrossServerRsp;
class QueryCharFuncFightCrossReq;
class QueryCharFuncFightCrossRsp;

// ===================================================================

class QueryCharacterDetailInfo : public ::google::protobuf::Message {
 public:
  QueryCharacterDetailInfo();
  virtual ~QueryCharacterDetailInfo();

  QueryCharacterDetailInfo(const QueryCharacterDetailInfo& from);

  inline QueryCharacterDetailInfo& operator=(const QueryCharacterDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharacterDetailInfo& default_instance();

  void Swap(QueryCharacterDetailInfo* other);

  // implements Message ----------------------------------------------

  QueryCharacterDetailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharacterDetailInfo& from);
  void MergeFrom(const QueryCharacterDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint64 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional bytes unionName = 6;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 6;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const void* value, size_t size);
  inline ::std::string* mutable_unionname();
  inline ::std::string* release_unionname();
  inline void set_allocated_unionname(::std::string* unionname);

  // optional uint32 unionDuty = 7;
  inline bool has_unionduty() const;
  inline void clear_unionduty();
  static const int kUnionDutyFieldNumber = 7;
  inline ::google::protobuf::uint32 unionduty() const;
  inline void set_unionduty(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleFacadeProto facade = 8;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 8;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // repeated .proto_ff.ItemProtoInfo equips = 9;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 9;
  inline const ::proto_ff::ItemProtoInfo& equips(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_equips(int index);
  inline ::proto_ff::ItemProtoInfo* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_equips();

  // repeated .proto_ff.EquipSlotInfo slots = 10;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 10;
  inline const ::proto_ff::EquipSlotInfo& slots(int index) const;
  inline ::proto_ff::EquipSlotInfo* mutable_slots(int index);
  inline ::proto_ff::EquipSlotInfo* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotInfo >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotInfo >*
      mutable_slots();

  // optional uint32 vipLevel = 11;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 11;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional uint64 partnerId = 12;
  inline bool has_partnerid() const;
  inline void clear_partnerid();
  static const int kPartnerIdFieldNumber = 12;
  inline ::google::protobuf::uint64 partnerid() const;
  inline void set_partnerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharacterDetailInfo)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_unionname();
  inline void clear_has_unionname();
  inline void set_has_unionduty();
  inline void clear_has_unionduty();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_partnerid();
  inline void clear_has_partnerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint64 fight_;
  ::std::string* unionname_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > equips_;
  ::google::protobuf::uint32 unionduty_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotInfo > slots_;
  ::google::protobuf::uint64 partnerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharacterDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

class FuncFightProto : public ::google::protobuf::Message {
 public:
  FuncFightProto();
  virtual ~FuncFightProto();

  FuncFightProto(const FuncFightProto& from);

  inline FuncFightProto& operator=(const FuncFightProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuncFightProto& default_instance();

  void Swap(FuncFightProto* other);

  // implements Message ----------------------------------------------

  FuncFightProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuncFightProto& from);
  void MergeFrom(const FuncFightProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.Attr64 func_fight = 1;
  inline int func_fight_size() const;
  inline void clear_func_fight();
  static const int kFuncFightFieldNumber = 1;
  inline const ::proto_ff::Attr64& func_fight(int index) const;
  inline ::proto_ff::Attr64* mutable_func_fight(int index);
  inline ::proto_ff::Attr64* add_func_fight();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
      func_fight() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
      mutable_func_fight();

  // optional int64 fight = 2;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 2;
  inline ::google::protobuf::int64 fight() const;
  inline void set_fight(::google::protobuf::int64 value);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FuncFightProto)
 private:
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 > func_fight_;
  ::google::protobuf::int64 fight_;
  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static FuncFightProto* default_instance_;
};
// -------------------------------------------------------------------

class CWCharacterDetailReq : public ::google::protobuf::Message {
 public:
  CWCharacterDetailReq();
  virtual ~CWCharacterDetailReq();

  CWCharacterDetailReq(const CWCharacterDetailReq& from);

  inline CWCharacterDetailReq& operator=(const CWCharacterDetailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CWCharacterDetailReq& default_instance();

  void Swap(CWCharacterDetailReq* other);

  // implements Message ----------------------------------------------

  CWCharacterDetailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWCharacterDetailReq& from);
  void MergeFrom(const CWCharacterDetailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CWCharacterDetailReq)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static CWCharacterDetailReq* default_instance_;
};
// -------------------------------------------------------------------

class WCCharacterDetailRsp : public ::google::protobuf::Message {
 public:
  WCCharacterDetailRsp();
  virtual ~WCCharacterDetailRsp();

  WCCharacterDetailRsp(const WCCharacterDetailRsp& from);

  inline WCCharacterDetailRsp& operator=(const WCCharacterDetailRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCCharacterDetailRsp& default_instance();

  void Swap(WCCharacterDetailRsp* other);

  // implements Message ----------------------------------------------

  WCCharacterDetailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCCharacterDetailRsp& from);
  void MergeFrom(const WCCharacterDetailRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional .proto_ff.QueryCharacterDetailInfo detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::proto_ff::QueryCharacterDetailInfo& detail() const;
  inline ::proto_ff::QueryCharacterDetailInfo* mutable_detail();
  inline ::proto_ff::QueryCharacterDetailInfo* release_detail();
  inline void set_allocated_detail(::proto_ff::QueryCharacterDetailInfo* detail);

  // @@protoc_insertion_point(class_scope:proto_ff.WCCharacterDetailRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::QueryCharacterDetailInfo* detail_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static WCCharacterDetailRsp* default_instance_;
};
// -------------------------------------------------------------------

class CWCharacterMiniReq : public ::google::protobuf::Message {
 public:
  CWCharacterMiniReq();
  virtual ~CWCharacterMiniReq();

  CWCharacterMiniReq(const CWCharacterMiniReq& from);

  inline CWCharacterMiniReq& operator=(const CWCharacterMiniReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CWCharacterMiniReq& default_instance();

  void Swap(CWCharacterMiniReq* other);

  // implements Message ----------------------------------------------

  CWCharacterMiniReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWCharacterMiniReq& from);
  void MergeFrom(const CWCharacterMiniReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.CWCharacterMiniReq)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static CWCharacterMiniReq* default_instance_;
};
// -------------------------------------------------------------------

class WCCharacterMiniRsp : public ::google::protobuf::Message {
 public:
  WCCharacterMiniRsp();
  virtual ~WCCharacterMiniRsp();

  WCCharacterMiniRsp(const WCCharacterMiniRsp& from);

  inline WCCharacterMiniRsp& operator=(const WCCharacterMiniRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCCharacterMiniRsp& default_instance();

  void Swap(WCCharacterMiniRsp* other);

  // implements Message ----------------------------------------------

  WCCharacterMiniRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCCharacterMiniRsp& from);
  void MergeFrom(const WCCharacterMiniRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional .proto_ff.RolePlayerMiniInfo characterInfo = 2;
  inline bool has_characterinfo() const;
  inline void clear_characterinfo();
  static const int kCharacterInfoFieldNumber = 2;
  inline const ::proto_ff::RolePlayerMiniInfo& characterinfo() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_characterinfo();
  inline ::proto_ff::RolePlayerMiniInfo* release_characterinfo();
  inline void set_allocated_characterinfo(::proto_ff::RolePlayerMiniInfo* characterinfo);

  // @@protoc_insertion_point(class_scope:proto_ff.WCCharacterMiniRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_characterinfo();
  inline void clear_has_characterinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RolePlayerMiniInfo* characterinfo_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static WCCharacterMiniRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharFuncFightReq : public ::google::protobuf::Message {
 public:
  QueryCharFuncFightReq();
  virtual ~QueryCharFuncFightReq();

  QueryCharFuncFightReq(const QueryCharFuncFightReq& from);

  inline QueryCharFuncFightReq& operator=(const QueryCharFuncFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharFuncFightReq& default_instance();

  void Swap(QueryCharFuncFightReq* other);

  // implements Message ----------------------------------------------

  QueryCharFuncFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharFuncFightReq& from);
  void MergeFrom(const QueryCharFuncFightReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 query_cid = 1;
  inline bool has_query_cid() const;
  inline void clear_query_cid();
  static const int kQueryCidFieldNumber = 1;
  inline ::google::protobuf::uint64 query_cid() const;
  inline void set_query_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharFuncFightReq)
 private:
  inline void set_has_query_cid();
  inline void clear_has_query_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 query_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharFuncFightReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharFuncFightRsp : public ::google::protobuf::Message {
 public:
  QueryCharFuncFightRsp();
  virtual ~QueryCharFuncFightRsp();

  QueryCharFuncFightRsp(const QueryCharFuncFightRsp& from);

  inline QueryCharFuncFightRsp& operator=(const QueryCharFuncFightRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharFuncFightRsp& default_instance();

  void Swap(QueryCharFuncFightRsp* other);

  // implements Message ----------------------------------------------

  QueryCharFuncFightRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharFuncFightRsp& from);
  void MergeFrom(const QueryCharFuncFightRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional .proto_ff.FuncFightProto info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::FuncFightProto& info() const;
  inline ::proto_ff::FuncFightProto* mutable_info();
  inline ::proto_ff::FuncFightProto* release_info();
  inline void set_allocated_info(::proto_ff::FuncFightProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharFuncFightRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::FuncFightProto* info_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharFuncFightRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryLoadMirrorDataCallBack : public ::google::protobuf::Message {
 public:
  QueryLoadMirrorDataCallBack();
  virtual ~QueryLoadMirrorDataCallBack();

  QueryLoadMirrorDataCallBack(const QueryLoadMirrorDataCallBack& from);

  inline QueryLoadMirrorDataCallBack& operator=(const QueryLoadMirrorDataCallBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLoadMirrorDataCallBack& default_instance();

  void Swap(QueryLoadMirrorDataCallBack* other);

  // implements Message ----------------------------------------------

  QueryLoadMirrorDataCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryLoadMirrorDataCallBack& from);
  void MergeFrom(const QueryLoadMirrorDataCallBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // required uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryLoadMirrorDataCallBack)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryLoadMirrorDataCallBack* default_instance_;
};
// -------------------------------------------------------------------

class WGCharacterDetailReq : public ::google::protobuf::Message {
 public:
  WGCharacterDetailReq();
  virtual ~WGCharacterDetailReq();

  WGCharacterDetailReq(const WGCharacterDetailReq& from);

  inline WGCharacterDetailReq& operator=(const WGCharacterDetailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WGCharacterDetailReq& default_instance();

  void Swap(WGCharacterDetailReq* other);

  // implements Message ----------------------------------------------

  WGCharacterDetailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WGCharacterDetailReq& from);
  void MergeFrom(const WGCharacterDetailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // optional uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WGCharacterDetailReq)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static WGCharacterDetailReq* default_instance_;
};
// -------------------------------------------------------------------

class GWCharacterDetailRsp : public ::google::protobuf::Message {
 public:
  GWCharacterDetailRsp();
  virtual ~GWCharacterDetailRsp();

  GWCharacterDetailRsp(const GWCharacterDetailRsp& from);

  inline GWCharacterDetailRsp& operator=(const GWCharacterDetailRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWCharacterDetailRsp& default_instance();

  void Swap(GWCharacterDetailRsp* other);

  // implements Message ----------------------------------------------

  GWCharacterDetailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWCharacterDetailRsp& from);
  void MergeFrom(const GWCharacterDetailRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // optional uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional .proto_ff.QueryCharacterDetailInfo detail = 3;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 3;
  inline const ::proto_ff::QueryCharacterDetailInfo& detail() const;
  inline ::proto_ff::QueryCharacterDetailInfo* mutable_detail();
  inline ::proto_ff::QueryCharacterDetailInfo* release_detail();
  inline void set_allocated_detail(::proto_ff::QueryCharacterDetailInfo* detail);

  // @@protoc_insertion_point(class_scope:proto_ff.GWCharacterDetailRsp)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;
  ::proto_ff::QueryCharacterDetailInfo* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static GWCharacterDetailRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharacterDetailCrossServerReq : public ::google::protobuf::Message {
 public:
  QueryCharacterDetailCrossServerReq();
  virtual ~QueryCharacterDetailCrossServerReq();

  QueryCharacterDetailCrossServerReq(const QueryCharacterDetailCrossServerReq& from);

  inline QueryCharacterDetailCrossServerReq& operator=(const QueryCharacterDetailCrossServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharacterDetailCrossServerReq& default_instance();

  void Swap(QueryCharacterDetailCrossServerReq* other);

  // implements Message ----------------------------------------------

  QueryCharacterDetailCrossServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharacterDetailCrossServerReq& from);
  void MergeFrom(const QueryCharacterDetailCrossServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // required uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharacterDetailCrossServerReq)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharacterDetailCrossServerReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharacterDetailCrossServerRsp : public ::google::protobuf::Message {
 public:
  QueryCharacterDetailCrossServerRsp();
  virtual ~QueryCharacterDetailCrossServerRsp();

  QueryCharacterDetailCrossServerRsp(const QueryCharacterDetailCrossServerRsp& from);

  inline QueryCharacterDetailCrossServerRsp& operator=(const QueryCharacterDetailCrossServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharacterDetailCrossServerRsp& default_instance();

  void Swap(QueryCharacterDetailCrossServerRsp* other);

  // implements Message ----------------------------------------------

  QueryCharacterDetailCrossServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharacterDetailCrossServerRsp& from);
  void MergeFrom(const QueryCharacterDetailCrossServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // optional uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional .proto_ff.QueryCharacterDetailInfo detail = 3;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 3;
  inline const ::proto_ff::QueryCharacterDetailInfo& detail() const;
  inline ::proto_ff::QueryCharacterDetailInfo* mutable_detail();
  inline ::proto_ff::QueryCharacterDetailInfo* release_detail();
  inline void set_allocated_detail(::proto_ff::QueryCharacterDetailInfo* detail);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharacterDetailCrossServerRsp)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;
  ::proto_ff::QueryCharacterDetailInfo* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharacterDetailCrossServerRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharacterMiniCrossServerReq : public ::google::protobuf::Message {
 public:
  QueryCharacterMiniCrossServerReq();
  virtual ~QueryCharacterMiniCrossServerReq();

  QueryCharacterMiniCrossServerReq(const QueryCharacterMiniCrossServerReq& from);

  inline QueryCharacterMiniCrossServerReq& operator=(const QueryCharacterMiniCrossServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharacterMiniCrossServerReq& default_instance();

  void Swap(QueryCharacterMiniCrossServerReq* other);

  // implements Message ----------------------------------------------

  QueryCharacterMiniCrossServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharacterMiniCrossServerReq& from);
  void MergeFrom(const QueryCharacterMiniCrossServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // required uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharacterMiniCrossServerReq)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharacterMiniCrossServerReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharacterMiniCrossServerRsp : public ::google::protobuf::Message {
 public:
  QueryCharacterMiniCrossServerRsp();
  virtual ~QueryCharacterMiniCrossServerRsp();

  QueryCharacterMiniCrossServerRsp(const QueryCharacterMiniCrossServerRsp& from);

  inline QueryCharacterMiniCrossServerRsp& operator=(const QueryCharacterMiniCrossServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharacterMiniCrossServerRsp& default_instance();

  void Swap(QueryCharacterMiniCrossServerRsp* other);

  // implements Message ----------------------------------------------

  QueryCharacterMiniCrossServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharacterMiniCrossServerRsp& from);
  void MergeFrom(const QueryCharacterMiniCrossServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // optional uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional .proto_ff.RolePlayerMiniInfo miniInfo = 3;
  inline bool has_miniinfo() const;
  inline void clear_miniinfo();
  static const int kMiniInfoFieldNumber = 3;
  inline const ::proto_ff::RolePlayerMiniInfo& miniinfo() const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_miniinfo();
  inline ::proto_ff::RolePlayerMiniInfo* release_miniinfo();
  inline void set_allocated_miniinfo(::proto_ff::RolePlayerMiniInfo* miniinfo);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharacterMiniCrossServerRsp)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_miniinfo();
  inline void clear_has_miniinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;
  ::proto_ff::RolePlayerMiniInfo* miniinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharacterMiniCrossServerRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharFuncFightCrossReq : public ::google::protobuf::Message {
 public:
  QueryCharFuncFightCrossReq();
  virtual ~QueryCharFuncFightCrossReq();

  QueryCharFuncFightCrossReq(const QueryCharFuncFightCrossReq& from);

  inline QueryCharFuncFightCrossReq& operator=(const QueryCharFuncFightCrossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharFuncFightCrossReq& default_instance();

  void Swap(QueryCharFuncFightCrossReq* other);

  // implements Message ----------------------------------------------

  QueryCharFuncFightCrossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharFuncFightCrossReq& from);
  void MergeFrom(const QueryCharFuncFightCrossReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 srcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // required uint64 dstID = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharFuncFightCrossReq)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharFuncFightCrossReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryCharFuncFightCrossRsp : public ::google::protobuf::Message {
 public:
  QueryCharFuncFightCrossRsp();
  virtual ~QueryCharFuncFightCrossRsp();

  QueryCharFuncFightCrossRsp(const QueryCharFuncFightCrossRsp& from);

  inline QueryCharFuncFightCrossRsp& operator=(const QueryCharFuncFightCrossRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCharFuncFightCrossRsp& default_instance();

  void Swap(QueryCharFuncFightCrossRsp* other);

  // implements Message ----------------------------------------------

  QueryCharFuncFightCrossRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryCharFuncFightCrossRsp& from);
  void MergeFrom(const QueryCharFuncFightCrossRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional uint64 srcID = 2;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 2;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // optional uint64 dstID = 3;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 3;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional .proto_ff.FuncFightProto info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::proto_ff::FuncFightProto& info() const;
  inline ::proto_ff::FuncFightProto* mutable_info();
  inline ::proto_ff::FuncFightProto* release_info();
  inline void set_allocated_info(::proto_ff::FuncFightProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.QueryCharFuncFightCrossRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;
  ::proto_ff::FuncFightProto* info_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Query_2eproto();
  friend void protobuf_AssignDesc_Query_2eproto();
  friend void protobuf_ShutdownFile_Query_2eproto();

  void InitAsDefaultInstance();
  static QueryCharFuncFightCrossRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// QueryCharacterDetailInfo

// optional uint64 cid = 1;
inline bool QueryCharacterDetailInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharacterDetailInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharacterDetailInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 QueryCharacterDetailInfo::cid() const {
  return cid_;
}
inline void QueryCharacterDetailInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bytes name = 2;
inline bool QueryCharacterDetailInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharacterDetailInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharacterDetailInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& QueryCharacterDetailInfo::name() const {
  return *name_;
}
inline void QueryCharacterDetailInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QueryCharacterDetailInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QueryCharacterDetailInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryCharacterDetailInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* QueryCharacterDetailInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QueryCharacterDetailInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 3;
inline bool QueryCharacterDetailInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryCharacterDetailInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryCharacterDetailInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 QueryCharacterDetailInfo::level() const {
  return level_;
}
inline void QueryCharacterDetailInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 prof = 4;
inline bool QueryCharacterDetailInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryCharacterDetailInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryCharacterDetailInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 QueryCharacterDetailInfo::prof() const {
  return prof_;
}
inline void QueryCharacterDetailInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint64 fight = 5;
inline bool QueryCharacterDetailInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryCharacterDetailInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryCharacterDetailInfo::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 QueryCharacterDetailInfo::fight() const {
  return fight_;
}
inline void QueryCharacterDetailInfo::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional bytes unionName = 6;
inline bool QueryCharacterDetailInfo::has_unionname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_unionname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryCharacterDetailInfo::clear_has_unionname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryCharacterDetailInfo::clear_unionname() {
  if (unionname_ != &::google::protobuf::internal::kEmptyString) {
    unionname_->clear();
  }
  clear_has_unionname();
}
inline const ::std::string& QueryCharacterDetailInfo::unionname() const {
  return *unionname_;
}
inline void QueryCharacterDetailInfo::set_unionname(const ::std::string& value) {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void QueryCharacterDetailInfo::set_unionname(const char* value) {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void QueryCharacterDetailInfo::set_unionname(const void* value, size_t size) {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryCharacterDetailInfo::mutable_unionname() {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}
inline ::std::string* QueryCharacterDetailInfo::release_unionname() {
  clear_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unionname_;
    unionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QueryCharacterDetailInfo::set_allocated_unionname(::std::string* unionname) {
  if (unionname_ != &::google::protobuf::internal::kEmptyString) {
    delete unionname_;
  }
  if (unionname) {
    set_has_unionname();
    unionname_ = unionname;
  } else {
    clear_has_unionname();
    unionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 unionDuty = 7;
inline bool QueryCharacterDetailInfo::has_unionduty() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_unionduty() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryCharacterDetailInfo::clear_has_unionduty() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryCharacterDetailInfo::clear_unionduty() {
  unionduty_ = 0u;
  clear_has_unionduty();
}
inline ::google::protobuf::uint32 QueryCharacterDetailInfo::unionduty() const {
  return unionduty_;
}
inline void QueryCharacterDetailInfo::set_unionduty(::google::protobuf::uint32 value) {
  set_has_unionduty();
  unionduty_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 8;
inline bool QueryCharacterDetailInfo::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QueryCharacterDetailInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QueryCharacterDetailInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& QueryCharacterDetailInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* QueryCharacterDetailInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* QueryCharacterDetailInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void QueryCharacterDetailInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// repeated .proto_ff.ItemProtoInfo equips = 9;
inline int QueryCharacterDetailInfo::equips_size() const {
  return equips_.size();
}
inline void QueryCharacterDetailInfo::clear_equips() {
  equips_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& QueryCharacterDetailInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* QueryCharacterDetailInfo::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* QueryCharacterDetailInfo::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
QueryCharacterDetailInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
QueryCharacterDetailInfo::mutable_equips() {
  return &equips_;
}

// repeated .proto_ff.EquipSlotInfo slots = 10;
inline int QueryCharacterDetailInfo::slots_size() const {
  return slots_.size();
}
inline void QueryCharacterDetailInfo::clear_slots() {
  slots_.Clear();
}
inline const ::proto_ff::EquipSlotInfo& QueryCharacterDetailInfo::slots(int index) const {
  return slots_.Get(index);
}
inline ::proto_ff::EquipSlotInfo* QueryCharacterDetailInfo::mutable_slots(int index) {
  return slots_.Mutable(index);
}
inline ::proto_ff::EquipSlotInfo* QueryCharacterDetailInfo::add_slots() {
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotInfo >&
QueryCharacterDetailInfo::slots() const {
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotInfo >*
QueryCharacterDetailInfo::mutable_slots() {
  return &slots_;
}

// optional uint32 vipLevel = 11;
inline bool QueryCharacterDetailInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QueryCharacterDetailInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QueryCharacterDetailInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 QueryCharacterDetailInfo::viplevel() const {
  return viplevel_;
}
inline void QueryCharacterDetailInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional uint64 partnerId = 12;
inline bool QueryCharacterDetailInfo::has_partnerid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QueryCharacterDetailInfo::set_has_partnerid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QueryCharacterDetailInfo::clear_has_partnerid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QueryCharacterDetailInfo::clear_partnerid() {
  partnerid_ = GOOGLE_ULONGLONG(0);
  clear_has_partnerid();
}
inline ::google::protobuf::uint64 QueryCharacterDetailInfo::partnerid() const {
  return partnerid_;
}
inline void QueryCharacterDetailInfo::set_partnerid(::google::protobuf::uint64 value) {
  set_has_partnerid();
  partnerid_ = value;
}

// -------------------------------------------------------------------

// FuncFightProto

// repeated .proto_ff.Attr64 func_fight = 1;
inline int FuncFightProto::func_fight_size() const {
  return func_fight_.size();
}
inline void FuncFightProto::clear_func_fight() {
  func_fight_.Clear();
}
inline const ::proto_ff::Attr64& FuncFightProto::func_fight(int index) const {
  return func_fight_.Get(index);
}
inline ::proto_ff::Attr64* FuncFightProto::mutable_func_fight(int index) {
  return func_fight_.Mutable(index);
}
inline ::proto_ff::Attr64* FuncFightProto::add_func_fight() {
  return func_fight_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
FuncFightProto::func_fight() const {
  return func_fight_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
FuncFightProto::mutable_func_fight() {
  return &func_fight_;
}

// optional int64 fight = 2;
inline bool FuncFightProto::has_fight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuncFightProto::set_has_fight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuncFightProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuncFightProto::clear_fight() {
  fight_ = GOOGLE_LONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::int64 FuncFightProto::fight() const {
  return fight_;
}
inline void FuncFightProto::set_fight(::google::protobuf::int64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 cid = 3;
inline bool FuncFightProto::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FuncFightProto::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FuncFightProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FuncFightProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 FuncFightProto::cid() const {
  return cid_;
}
inline void FuncFightProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// CWCharacterDetailReq

// optional uint64 charID = 1;
inline bool CWCharacterDetailReq::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWCharacterDetailReq::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWCharacterDetailReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWCharacterDetailReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CWCharacterDetailReq::charid() const {
  return charid_;
}
inline void CWCharacterDetailReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// WCCharacterDetailRsp

// optional uint32 ret = 1;
inline bool WCCharacterDetailRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCCharacterDetailRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCCharacterDetailRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCCharacterDetailRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCCharacterDetailRsp::ret() const {
  return ret_;
}
inline void WCCharacterDetailRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .proto_ff.QueryCharacterDetailInfo detail = 2;
inline bool WCCharacterDetailRsp::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WCCharacterDetailRsp::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WCCharacterDetailRsp::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WCCharacterDetailRsp::clear_detail() {
  if (detail_ != NULL) detail_->::proto_ff::QueryCharacterDetailInfo::Clear();
  clear_has_detail();
}
inline const ::proto_ff::QueryCharacterDetailInfo& WCCharacterDetailRsp::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::proto_ff::QueryCharacterDetailInfo* WCCharacterDetailRsp::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::proto_ff::QueryCharacterDetailInfo;
  return detail_;
}
inline ::proto_ff::QueryCharacterDetailInfo* WCCharacterDetailRsp::release_detail() {
  clear_has_detail();
  ::proto_ff::QueryCharacterDetailInfo* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void WCCharacterDetailRsp::set_allocated_detail(::proto_ff::QueryCharacterDetailInfo* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// CWCharacterMiniReq

// optional uint64 charID = 1;
inline bool CWCharacterMiniReq::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWCharacterMiniReq::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWCharacterMiniReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWCharacterMiniReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CWCharacterMiniReq::charid() const {
  return charid_;
}
inline void CWCharacterMiniReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 2;
inline bool CWCharacterMiniReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CWCharacterMiniReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CWCharacterMiniReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CWCharacterMiniReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CWCharacterMiniReq::name() const {
  return *name_;
}
inline void CWCharacterMiniReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CWCharacterMiniReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CWCharacterMiniReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CWCharacterMiniReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CWCharacterMiniReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CWCharacterMiniReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WCCharacterMiniRsp

// optional uint32 ret = 1;
inline bool WCCharacterMiniRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCCharacterMiniRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCCharacterMiniRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCCharacterMiniRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCCharacterMiniRsp::ret() const {
  return ret_;
}
inline void WCCharacterMiniRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .proto_ff.RolePlayerMiniInfo characterInfo = 2;
inline bool WCCharacterMiniRsp::has_characterinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WCCharacterMiniRsp::set_has_characterinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WCCharacterMiniRsp::clear_has_characterinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WCCharacterMiniRsp::clear_characterinfo() {
  if (characterinfo_ != NULL) characterinfo_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_characterinfo();
}
inline const ::proto_ff::RolePlayerMiniInfo& WCCharacterMiniRsp::characterinfo() const {
  return characterinfo_ != NULL ? *characterinfo_ : *default_instance_->characterinfo_;
}
inline ::proto_ff::RolePlayerMiniInfo* WCCharacterMiniRsp::mutable_characterinfo() {
  set_has_characterinfo();
  if (characterinfo_ == NULL) characterinfo_ = new ::proto_ff::RolePlayerMiniInfo;
  return characterinfo_;
}
inline ::proto_ff::RolePlayerMiniInfo* WCCharacterMiniRsp::release_characterinfo() {
  clear_has_characterinfo();
  ::proto_ff::RolePlayerMiniInfo* temp = characterinfo_;
  characterinfo_ = NULL;
  return temp;
}
inline void WCCharacterMiniRsp::set_allocated_characterinfo(::proto_ff::RolePlayerMiniInfo* characterinfo) {
  delete characterinfo_;
  characterinfo_ = characterinfo;
  if (characterinfo) {
    set_has_characterinfo();
  } else {
    clear_has_characterinfo();
  }
}

// -------------------------------------------------------------------

// QueryCharFuncFightReq

// optional uint64 query_cid = 1;
inline bool QueryCharFuncFightReq::has_query_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharFuncFightReq::set_has_query_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharFuncFightReq::clear_has_query_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharFuncFightReq::clear_query_cid() {
  query_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_query_cid();
}
inline ::google::protobuf::uint64 QueryCharFuncFightReq::query_cid() const {
  return query_cid_;
}
inline void QueryCharFuncFightReq::set_query_cid(::google::protobuf::uint64 value) {
  set_has_query_cid();
  query_cid_ = value;
}

// -------------------------------------------------------------------

// QueryCharFuncFightRsp

// optional int32 retcode = 1;
inline bool QueryCharFuncFightRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharFuncFightRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharFuncFightRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharFuncFightRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 QueryCharFuncFightRsp::retcode() const {
  return retcode_;
}
inline void QueryCharFuncFightRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional .proto_ff.FuncFightProto info = 2;
inline bool QueryCharFuncFightRsp::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharFuncFightRsp::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharFuncFightRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharFuncFightRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::FuncFightProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::FuncFightProto& QueryCharFuncFightRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::FuncFightProto* QueryCharFuncFightRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::FuncFightProto;
  return info_;
}
inline ::proto_ff::FuncFightProto* QueryCharFuncFightRsp::release_info() {
  clear_has_info();
  ::proto_ff::FuncFightProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void QueryCharFuncFightRsp::set_allocated_info(::proto_ff::FuncFightProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// QueryLoadMirrorDataCallBack

// required uint64 srcID = 1;
inline bool QueryLoadMirrorDataCallBack::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLoadMirrorDataCallBack::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLoadMirrorDataCallBack::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLoadMirrorDataCallBack::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryLoadMirrorDataCallBack::srcid() const {
  return srcid_;
}
inline void QueryLoadMirrorDataCallBack::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// required uint64 dstID = 2;
inline bool QueryLoadMirrorDataCallBack::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryLoadMirrorDataCallBack::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryLoadMirrorDataCallBack::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryLoadMirrorDataCallBack::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryLoadMirrorDataCallBack::dstid() const {
  return dstid_;
}
inline void QueryLoadMirrorDataCallBack::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// -------------------------------------------------------------------

// WGCharacterDetailReq

// optional uint64 srcID = 1;
inline bool WGCharacterDetailReq::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WGCharacterDetailReq::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WGCharacterDetailReq::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WGCharacterDetailReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 WGCharacterDetailReq::srcid() const {
  return srcid_;
}
inline void WGCharacterDetailReq::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional uint64 dstID = 2;
inline bool WGCharacterDetailReq::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WGCharacterDetailReq::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WGCharacterDetailReq::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WGCharacterDetailReq::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 WGCharacterDetailReq::dstid() const {
  return dstid_;
}
inline void WGCharacterDetailReq::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// -------------------------------------------------------------------

// GWCharacterDetailRsp

// optional uint64 srcID = 1;
inline bool GWCharacterDetailRsp::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWCharacterDetailRsp::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWCharacterDetailRsp::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWCharacterDetailRsp::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 GWCharacterDetailRsp::srcid() const {
  return srcid_;
}
inline void GWCharacterDetailRsp::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional uint64 dstID = 2;
inline bool GWCharacterDetailRsp::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWCharacterDetailRsp::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWCharacterDetailRsp::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWCharacterDetailRsp::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 GWCharacterDetailRsp::dstid() const {
  return dstid_;
}
inline void GWCharacterDetailRsp::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional .proto_ff.QueryCharacterDetailInfo detail = 3;
inline bool GWCharacterDetailRsp::has_detail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWCharacterDetailRsp::set_has_detail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWCharacterDetailRsp::clear_has_detail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWCharacterDetailRsp::clear_detail() {
  if (detail_ != NULL) detail_->::proto_ff::QueryCharacterDetailInfo::Clear();
  clear_has_detail();
}
inline const ::proto_ff::QueryCharacterDetailInfo& GWCharacterDetailRsp::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::proto_ff::QueryCharacterDetailInfo* GWCharacterDetailRsp::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::proto_ff::QueryCharacterDetailInfo;
  return detail_;
}
inline ::proto_ff::QueryCharacterDetailInfo* GWCharacterDetailRsp::release_detail() {
  clear_has_detail();
  ::proto_ff::QueryCharacterDetailInfo* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void GWCharacterDetailRsp::set_allocated_detail(::proto_ff::QueryCharacterDetailInfo* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// QueryCharacterDetailCrossServerReq

// required uint64 srcID = 1;
inline bool QueryCharacterDetailCrossServerReq::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharacterDetailCrossServerReq::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharacterDetailCrossServerReq::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharacterDetailCrossServerReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryCharacterDetailCrossServerReq::srcid() const {
  return srcid_;
}
inline void QueryCharacterDetailCrossServerReq::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// required uint64 dstID = 2;
inline bool QueryCharacterDetailCrossServerReq::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharacterDetailCrossServerReq::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharacterDetailCrossServerReq::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharacterDetailCrossServerReq::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryCharacterDetailCrossServerReq::dstid() const {
  return dstid_;
}
inline void QueryCharacterDetailCrossServerReq::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// -------------------------------------------------------------------

// QueryCharacterDetailCrossServerRsp

// optional uint64 srcID = 1;
inline bool QueryCharacterDetailCrossServerRsp::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharacterDetailCrossServerRsp::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharacterDetailCrossServerRsp::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharacterDetailCrossServerRsp::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryCharacterDetailCrossServerRsp::srcid() const {
  return srcid_;
}
inline void QueryCharacterDetailCrossServerRsp::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional uint64 dstID = 2;
inline bool QueryCharacterDetailCrossServerRsp::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharacterDetailCrossServerRsp::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharacterDetailCrossServerRsp::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharacterDetailCrossServerRsp::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryCharacterDetailCrossServerRsp::dstid() const {
  return dstid_;
}
inline void QueryCharacterDetailCrossServerRsp::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional .proto_ff.QueryCharacterDetailInfo detail = 3;
inline bool QueryCharacterDetailCrossServerRsp::has_detail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryCharacterDetailCrossServerRsp::set_has_detail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryCharacterDetailCrossServerRsp::clear_has_detail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryCharacterDetailCrossServerRsp::clear_detail() {
  if (detail_ != NULL) detail_->::proto_ff::QueryCharacterDetailInfo::Clear();
  clear_has_detail();
}
inline const ::proto_ff::QueryCharacterDetailInfo& QueryCharacterDetailCrossServerRsp::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::proto_ff::QueryCharacterDetailInfo* QueryCharacterDetailCrossServerRsp::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::proto_ff::QueryCharacterDetailInfo;
  return detail_;
}
inline ::proto_ff::QueryCharacterDetailInfo* QueryCharacterDetailCrossServerRsp::release_detail() {
  clear_has_detail();
  ::proto_ff::QueryCharacterDetailInfo* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void QueryCharacterDetailCrossServerRsp::set_allocated_detail(::proto_ff::QueryCharacterDetailInfo* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// QueryCharacterMiniCrossServerReq

// required uint64 srcID = 1;
inline bool QueryCharacterMiniCrossServerReq::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharacterMiniCrossServerReq::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharacterMiniCrossServerReq::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharacterMiniCrossServerReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryCharacterMiniCrossServerReq::srcid() const {
  return srcid_;
}
inline void QueryCharacterMiniCrossServerReq::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// required uint64 dstID = 2;
inline bool QueryCharacterMiniCrossServerReq::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharacterMiniCrossServerReq::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharacterMiniCrossServerReq::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharacterMiniCrossServerReq::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryCharacterMiniCrossServerReq::dstid() const {
  return dstid_;
}
inline void QueryCharacterMiniCrossServerReq::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// -------------------------------------------------------------------

// QueryCharacterMiniCrossServerRsp

// optional uint64 srcID = 1;
inline bool QueryCharacterMiniCrossServerRsp::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharacterMiniCrossServerRsp::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharacterMiniCrossServerRsp::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharacterMiniCrossServerRsp::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryCharacterMiniCrossServerRsp::srcid() const {
  return srcid_;
}
inline void QueryCharacterMiniCrossServerRsp::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional uint64 dstID = 2;
inline bool QueryCharacterMiniCrossServerRsp::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharacterMiniCrossServerRsp::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharacterMiniCrossServerRsp::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharacterMiniCrossServerRsp::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryCharacterMiniCrossServerRsp::dstid() const {
  return dstid_;
}
inline void QueryCharacterMiniCrossServerRsp::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional .proto_ff.RolePlayerMiniInfo miniInfo = 3;
inline bool QueryCharacterMiniCrossServerRsp::has_miniinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryCharacterMiniCrossServerRsp::set_has_miniinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryCharacterMiniCrossServerRsp::clear_has_miniinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryCharacterMiniCrossServerRsp::clear_miniinfo() {
  if (miniinfo_ != NULL) miniinfo_->::proto_ff::RolePlayerMiniInfo::Clear();
  clear_has_miniinfo();
}
inline const ::proto_ff::RolePlayerMiniInfo& QueryCharacterMiniCrossServerRsp::miniinfo() const {
  return miniinfo_ != NULL ? *miniinfo_ : *default_instance_->miniinfo_;
}
inline ::proto_ff::RolePlayerMiniInfo* QueryCharacterMiniCrossServerRsp::mutable_miniinfo() {
  set_has_miniinfo();
  if (miniinfo_ == NULL) miniinfo_ = new ::proto_ff::RolePlayerMiniInfo;
  return miniinfo_;
}
inline ::proto_ff::RolePlayerMiniInfo* QueryCharacterMiniCrossServerRsp::release_miniinfo() {
  clear_has_miniinfo();
  ::proto_ff::RolePlayerMiniInfo* temp = miniinfo_;
  miniinfo_ = NULL;
  return temp;
}
inline void QueryCharacterMiniCrossServerRsp::set_allocated_miniinfo(::proto_ff::RolePlayerMiniInfo* miniinfo) {
  delete miniinfo_;
  miniinfo_ = miniinfo;
  if (miniinfo) {
    set_has_miniinfo();
  } else {
    clear_has_miniinfo();
  }
}

// -------------------------------------------------------------------

// QueryCharFuncFightCrossReq

// required uint64 srcID = 1;
inline bool QueryCharFuncFightCrossReq::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharFuncFightCrossReq::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharFuncFightCrossReq::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharFuncFightCrossReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryCharFuncFightCrossReq::srcid() const {
  return srcid_;
}
inline void QueryCharFuncFightCrossReq::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// required uint64 dstID = 2;
inline bool QueryCharFuncFightCrossReq::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharFuncFightCrossReq::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharFuncFightCrossReq::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharFuncFightCrossReq::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryCharFuncFightCrossReq::dstid() const {
  return dstid_;
}
inline void QueryCharFuncFightCrossReq::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// -------------------------------------------------------------------

// QueryCharFuncFightCrossRsp

// optional int32 retcode = 1;
inline bool QueryCharFuncFightCrossRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryCharFuncFightCrossRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryCharFuncFightCrossRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryCharFuncFightCrossRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 QueryCharFuncFightCrossRsp::retcode() const {
  return retcode_;
}
inline void QueryCharFuncFightCrossRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional uint64 srcID = 2;
inline bool QueryCharFuncFightCrossRsp::has_srcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryCharFuncFightCrossRsp::set_has_srcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryCharFuncFightCrossRsp::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryCharFuncFightCrossRsp::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 QueryCharFuncFightCrossRsp::srcid() const {
  return srcid_;
}
inline void QueryCharFuncFightCrossRsp::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional uint64 dstID = 3;
inline bool QueryCharFuncFightCrossRsp::has_dstid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryCharFuncFightCrossRsp::set_has_dstid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryCharFuncFightCrossRsp::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryCharFuncFightCrossRsp::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 QueryCharFuncFightCrossRsp::dstid() const {
  return dstid_;
}
inline void QueryCharFuncFightCrossRsp::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional .proto_ff.FuncFightProto info = 4;
inline bool QueryCharFuncFightCrossRsp::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryCharFuncFightCrossRsp::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryCharFuncFightCrossRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryCharFuncFightCrossRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::FuncFightProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::FuncFightProto& QueryCharFuncFightCrossRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::FuncFightProto* QueryCharFuncFightCrossRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::FuncFightProto;
  return info_;
}
inline ::proto_ff::FuncFightProto* QueryCharFuncFightCrossRsp::release_info() {
  clear_has_info();
  ::proto_ff::FuncFightProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void QueryCharFuncFightCrossRsp::set_allocated_info(::proto_ff::FuncFightProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Query_2eproto__INCLUDED
