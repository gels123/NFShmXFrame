// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: effect.proto

#ifndef PROTOBUF_effect_2eproto__INCLUDED
#define PROTOBUF_effect_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_effect_2eproto();
void protobuf_AssignDesc_effect_2eproto();
void protobuf_ShutdownFile_effect_2eproto();

class effecteffect;
class Sheet_effecteffect;

// ===================================================================

class effecteffect : public ::google::protobuf::Message {
 public:
  effecteffect();
  virtual ~effecteffect();

  effecteffect(const effecteffect& from);

  inline effecteffect& operator=(const effecteffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const effecteffect& default_instance();

  void Swap(effecteffect* other);

  // implements Message ----------------------------------------------

  effecteffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const effecteffect& from);
  void MergeFrom(const effecteffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 effectId = 1;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectIdFieldNumber = 1;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // optional int32 effectType = 2;
  inline bool has_effecttype() const;
  inline void clear_effecttype();
  static const int kEffectTypeFieldNumber = 2;
  inline ::google::protobuf::int32 effecttype() const;
  inline void set_effecttype(::google::protobuf::int32 value);

  // optional string eContent = 3;
  inline bool has_econtent() const;
  inline void clear_econtent();
  static const int kEContentFieldNumber = 3;
  inline const ::std::string& econtent() const;
  inline void set_econtent(const ::std::string& value);
  inline void set_econtent(const char* value);
  inline void set_econtent(const char* value, size_t size);
  inline ::std::string* mutable_econtent();
  inline ::std::string* release_econtent();
  inline void set_allocated_econtent(::std::string* econtent);

  // optional int32 effectAudio = 4;
  inline bool has_effectaudio() const;
  inline void clear_effectaudio();
  static const int kEffectAudioFieldNumber = 4;
  inline ::google::protobuf::int32 effectaudio() const;
  inline void set_effectaudio(::google::protobuf::int32 value);

  // repeated int32 eparam = 5;
  inline int eparam_size() const;
  inline void clear_eparam();
  static const int kEparamFieldNumber = 5;
  inline ::google::protobuf::int32 eparam(int index) const;
  inline void set_eparam(int index, ::google::protobuf::int32 value);
  inline void add_eparam(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      eparam() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_eparam();

  // @@protoc_insertion_point(class_scope:proto_ff.effecteffect)
 private:
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_effecttype();
  inline void clear_has_effecttype();
  inline void set_has_econtent();
  inline void clear_has_econtent();
  inline void set_has_effectaudio();
  inline void clear_has_effectaudio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 effectid_;
  ::google::protobuf::int32 effecttype_;
  ::std::string* econtent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > eparam_;
  ::google::protobuf::int32 effectaudio_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_effect_2eproto();
  friend void protobuf_AssignDesc_effect_2eproto();
  friend void protobuf_ShutdownFile_effect_2eproto();

  void InitAsDefaultInstance();
  static effecteffect* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_effecteffect : public ::google::protobuf::Message {
 public:
  Sheet_effecteffect();
  virtual ~Sheet_effecteffect();

  Sheet_effecteffect(const Sheet_effecteffect& from);

  inline Sheet_effecteffect& operator=(const Sheet_effecteffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_effecteffect& default_instance();

  void Swap(Sheet_effecteffect* other);

  // implements Message ----------------------------------------------

  Sheet_effecteffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_effecteffect& from);
  void MergeFrom(const Sheet_effecteffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.effecteffect effecteffect_List = 1;
  inline int effecteffect_list_size() const;
  inline void clear_effecteffect_list();
  static const int kEffecteffectListFieldNumber = 1;
  inline const ::proto_ff::effecteffect& effecteffect_list(int index) const;
  inline ::proto_ff::effecteffect* mutable_effecteffect_list(int index);
  inline ::proto_ff::effecteffect* add_effecteffect_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::effecteffect >&
      effecteffect_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::effecteffect >*
      mutable_effecteffect_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_effecteffect)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::effecteffect > effecteffect_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_effect_2eproto();
  friend void protobuf_AssignDesc_effect_2eproto();
  friend void protobuf_ShutdownFile_effect_2eproto();

  void InitAsDefaultInstance();
  static Sheet_effecteffect* default_instance_;
};
// ===================================================================


// ===================================================================

// effecteffect

// optional int32 effectId = 1;
inline bool effecteffect::has_effectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void effecteffect::set_has_effectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void effecteffect::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void effecteffect::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 effecteffect::effectid() const {
  return effectid_;
}
inline void effecteffect::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
}

// optional int32 effectType = 2;
inline bool effecteffect::has_effecttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void effecteffect::set_has_effecttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void effecteffect::clear_has_effecttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void effecteffect::clear_effecttype() {
  effecttype_ = 0;
  clear_has_effecttype();
}
inline ::google::protobuf::int32 effecteffect::effecttype() const {
  return effecttype_;
}
inline void effecteffect::set_effecttype(::google::protobuf::int32 value) {
  set_has_effecttype();
  effecttype_ = value;
}

// optional string eContent = 3;
inline bool effecteffect::has_econtent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void effecteffect::set_has_econtent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void effecteffect::clear_has_econtent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void effecteffect::clear_econtent() {
  if (econtent_ != &::google::protobuf::internal::kEmptyString) {
    econtent_->clear();
  }
  clear_has_econtent();
}
inline const ::std::string& effecteffect::econtent() const {
  return *econtent_;
}
inline void effecteffect::set_econtent(const ::std::string& value) {
  set_has_econtent();
  if (econtent_ == &::google::protobuf::internal::kEmptyString) {
    econtent_ = new ::std::string;
  }
  econtent_->assign(value);
}
inline void effecteffect::set_econtent(const char* value) {
  set_has_econtent();
  if (econtent_ == &::google::protobuf::internal::kEmptyString) {
    econtent_ = new ::std::string;
  }
  econtent_->assign(value);
}
inline void effecteffect::set_econtent(const char* value, size_t size) {
  set_has_econtent();
  if (econtent_ == &::google::protobuf::internal::kEmptyString) {
    econtent_ = new ::std::string;
  }
  econtent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* effecteffect::mutable_econtent() {
  set_has_econtent();
  if (econtent_ == &::google::protobuf::internal::kEmptyString) {
    econtent_ = new ::std::string;
  }
  return econtent_;
}
inline ::std::string* effecteffect::release_econtent() {
  clear_has_econtent();
  if (econtent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = econtent_;
    econtent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void effecteffect::set_allocated_econtent(::std::string* econtent) {
  if (econtent_ != &::google::protobuf::internal::kEmptyString) {
    delete econtent_;
  }
  if (econtent) {
    set_has_econtent();
    econtent_ = econtent;
  } else {
    clear_has_econtent();
    econtent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 effectAudio = 4;
inline bool effecteffect::has_effectaudio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void effecteffect::set_has_effectaudio() {
  _has_bits_[0] |= 0x00000008u;
}
inline void effecteffect::clear_has_effectaudio() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void effecteffect::clear_effectaudio() {
  effectaudio_ = 0;
  clear_has_effectaudio();
}
inline ::google::protobuf::int32 effecteffect::effectaudio() const {
  return effectaudio_;
}
inline void effecteffect::set_effectaudio(::google::protobuf::int32 value) {
  set_has_effectaudio();
  effectaudio_ = value;
}

// repeated int32 eparam = 5;
inline int effecteffect::eparam_size() const {
  return eparam_.size();
}
inline void effecteffect::clear_eparam() {
  eparam_.Clear();
}
inline ::google::protobuf::int32 effecteffect::eparam(int index) const {
  return eparam_.Get(index);
}
inline void effecteffect::set_eparam(int index, ::google::protobuf::int32 value) {
  eparam_.Set(index, value);
}
inline void effecteffect::add_eparam(::google::protobuf::int32 value) {
  eparam_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
effecteffect::eparam() const {
  return eparam_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
effecteffect::mutable_eparam() {
  return &eparam_;
}

// -------------------------------------------------------------------

// Sheet_effecteffect

// repeated .proto_ff.effecteffect effecteffect_List = 1;
inline int Sheet_effecteffect::effecteffect_list_size() const {
  return effecteffect_list_.size();
}
inline void Sheet_effecteffect::clear_effecteffect_list() {
  effecteffect_list_.Clear();
}
inline const ::proto_ff::effecteffect& Sheet_effecteffect::effecteffect_list(int index) const {
  return effecteffect_list_.Get(index);
}
inline ::proto_ff::effecteffect* Sheet_effecteffect::mutable_effecteffect_list(int index) {
  return effecteffect_list_.Mutable(index);
}
inline ::proto_ff::effecteffect* Sheet_effecteffect::add_effecteffect_list() {
  return effecteffect_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::effecteffect >&
Sheet_effecteffect::effecteffect_list() const {
  return effecteffect_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::effecteffect >*
Sheet_effecteffect::mutable_effecteffect_list() {
  return &effecteffect_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_effect_2eproto__INCLUDED
