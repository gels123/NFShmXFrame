// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasureBowl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "treasureBowl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* treasureBowltreasureBowl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  treasureBowltreasureBowl_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_treasureBowltreasureBowl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_treasureBowltreasureBowl_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_treasureBowl_2eproto() {
  protobuf_AddDesc_treasureBowl_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "treasureBowl.proto");
  GOOGLE_CHECK(file != NULL);
  treasureBowltreasureBowl_descriptor_ = file->message_type(0);
  static const int treasureBowltreasureBowl_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, returnd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, returnvip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, returnitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, returnitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, skilldes_),
  };
  treasureBowltreasureBowl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      treasureBowltreasureBowl_descriptor_,
      treasureBowltreasureBowl::default_instance_,
      treasureBowltreasureBowl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(treasureBowltreasureBowl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(treasureBowltreasureBowl));
  Sheet_treasureBowltreasureBowl_descriptor_ = file->message_type(1);
  static const int Sheet_treasureBowltreasureBowl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_treasureBowltreasureBowl, treasurebowltreasurebowl_list_),
  };
  Sheet_treasureBowltreasureBowl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_treasureBowltreasureBowl_descriptor_,
      Sheet_treasureBowltreasureBowl::default_instance_,
      Sheet_treasureBowltreasureBowl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_treasureBowltreasureBowl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_treasureBowltreasureBowl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_treasureBowltreasureBowl));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_treasureBowl_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    treasureBowltreasureBowl_descriptor_, &treasureBowltreasureBowl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_treasureBowltreasureBowl_descriptor_, &Sheet_treasureBowltreasureBowl::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_treasureBowl_2eproto() {
  delete treasureBowltreasureBowl::default_instance_;
  delete treasureBowltreasureBowl_reflection_;
  delete Sheet_treasureBowltreasureBowl::default_instance_;
  delete Sheet_treasureBowltreasureBowl_reflection_;
}

void protobuf_AddDesc_treasureBowl_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022treasureBowl.proto\022\010proto_ff\032\025yd_field"
    "options.proto\"\301\003\n\030treasureBowltreasureBo"
    "wl\022\022\n\002Id\030\001 \001(\005B\006\302\377\024\002ID\022\031\n\005level\030\002 \001(\005B\n\302"
    "\377\024\006\347\255\211\347\272\247\022$\n\004Type\030\003 \001(\005B\026\302\377\024\022\350\247\243\351\224\201\344\273\267\346\240"
    "\274\347\261\273\345\236\213\022\037\n\005price\030\004 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\344\273\267\346\240\274"
    "\022\'\n\007returnD\030\005 \001(\005B\026\302\377\024\022\351\222\273\347\237\263\350\277\224\350\277\230\346\257\224\344\276"
    "\213\022,\n\treturnVip\030\006 \001(\005B\031\302\377\024\025vip\347\273\217\351\252\214\350\277\224\350\277"
    "\230\346\257\224\344\276\213\022.\n\014returnItemID\030\007 \001(\003B\030\302\377\024\024\347\211\271\346\256"
    "\212\347\211\251\345\223\201\350\277\224\350\277\230ID\0220\n\nreturnItem\030\010 \001(\005B\034\302\377\024"
    "\030\347\211\271\346\256\212\347\211\251\345\223\201\350\277\224\350\277\230\346\257\224\344\276\213\022\037\n\005boxid\030\t \001(\003"
    "B\020\302\377\024\014\350\247\243\351\224\201\345\245\226\345\212\261\022\'\n\007skillid\030\n \001(\003B\026\302\377\024"
    "\022\350\247\243\351\224\201\347\211\271\346\235\203\346\212\200\350\203\275\022,\n\010skilldes\030\013 \001(\tB\032\302"
    "\377\024\022\350\247\243\351\224\201\347\211\271\346\235\203\346\212\200\350\203\275\220\301\024<\"q\n\036Sheet_treas"
    "ureBowltreasureBowl\022O\n\035treasureBowltreas"
    "ureBowl_List\030\001 \003(\0132\".proto_ff.treasureBo"
    "wltreasureBowlB\004\210\301\024\024", 620);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "treasureBowl.proto", &protobuf_RegisterTypes);
  treasureBowltreasureBowl::default_instance_ = new treasureBowltreasureBowl();
  Sheet_treasureBowltreasureBowl::default_instance_ = new Sheet_treasureBowltreasureBowl();
  treasureBowltreasureBowl::default_instance_->InitAsDefaultInstance();
  Sheet_treasureBowltreasureBowl::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_treasureBowl_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_treasureBowl_2eproto {
  StaticDescriptorInitializer_treasureBowl_2eproto() {
    protobuf_AddDesc_treasureBowl_2eproto();
  }
} static_descriptor_initializer_treasureBowl_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int treasureBowltreasureBowl::kIdFieldNumber;
const int treasureBowltreasureBowl::kLevelFieldNumber;
const int treasureBowltreasureBowl::kTypeFieldNumber;
const int treasureBowltreasureBowl::kPriceFieldNumber;
const int treasureBowltreasureBowl::kReturnDFieldNumber;
const int treasureBowltreasureBowl::kReturnVipFieldNumber;
const int treasureBowltreasureBowl::kReturnItemIDFieldNumber;
const int treasureBowltreasureBowl::kReturnItemFieldNumber;
const int treasureBowltreasureBowl::kBoxidFieldNumber;
const int treasureBowltreasureBowl::kSkillidFieldNumber;
const int treasureBowltreasureBowl::kSkilldesFieldNumber;
#endif  // !_MSC_VER

treasureBowltreasureBowl::treasureBowltreasureBowl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void treasureBowltreasureBowl::InitAsDefaultInstance() {
}

treasureBowltreasureBowl::treasureBowltreasureBowl(const treasureBowltreasureBowl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void treasureBowltreasureBowl::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  level_ = 0;
  type_ = 0;
  price_ = 0;
  returnd_ = 0;
  returnvip_ = 0;
  returnitemid_ = GOOGLE_LONGLONG(0);
  returnitem_ = 0;
  boxid_ = GOOGLE_LONGLONG(0);
  skillid_ = GOOGLE_LONGLONG(0);
  skilldes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

treasureBowltreasureBowl::~treasureBowltreasureBowl() {
  SharedDtor();
}

void treasureBowltreasureBowl::SharedDtor() {
  if (skilldes_ != &::google::protobuf::internal::kEmptyString) {
    delete skilldes_;
  }
  if (this != default_instance_) {
  }
}

void treasureBowltreasureBowl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* treasureBowltreasureBowl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return treasureBowltreasureBowl_descriptor_;
}

const treasureBowltreasureBowl& treasureBowltreasureBowl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_treasureBowl_2eproto();
  return *default_instance_;
}

treasureBowltreasureBowl* treasureBowltreasureBowl::default_instance_ = NULL;

treasureBowltreasureBowl* treasureBowltreasureBowl::New() const {
  return new treasureBowltreasureBowl;
}

void treasureBowltreasureBowl::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    level_ = 0;
    type_ = 0;
    price_ = 0;
    returnd_ = 0;
    returnvip_ = 0;
    returnitemid_ = GOOGLE_LONGLONG(0);
    returnitem_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    boxid_ = GOOGLE_LONGLONG(0);
    skillid_ = GOOGLE_LONGLONG(0);
    if (has_skilldes()) {
      if (skilldes_ != &::google::protobuf::internal::kEmptyString) {
        skilldes_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool treasureBowltreasureBowl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Type;
        break;
      }

      // optional int32 Type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_price;
        break;
      }

      // optional int32 price = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_returnD;
        break;
      }

      // optional int32 returnD = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_returnD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &returnd_)));
          set_has_returnd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_returnVip;
        break;
      }

      // optional int32 returnVip = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_returnVip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &returnvip_)));
          set_has_returnvip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_returnItemID;
        break;
      }

      // optional int64 returnItemID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_returnItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &returnitemid_)));
          set_has_returnitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_returnItem;
        break;
      }

      // optional int32 returnItem = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_returnItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &returnitem_)));
          set_has_returnitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_boxid;
        break;
      }

      // optional int64 boxid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boxid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_skillid;
        break;
      }

      // optional int64 skillid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_skilldes;
        break;
      }

      // optional string skilldes = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skilldes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skilldes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skilldes().data(), this->skilldes().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void treasureBowltreasureBowl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional int32 Type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 price = 4;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->price(), output);
  }

  // optional int32 returnD = 5;
  if (has_returnd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->returnd(), output);
  }

  // optional int32 returnVip = 6;
  if (has_returnvip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->returnvip(), output);
  }

  // optional int64 returnItemID = 7;
  if (has_returnitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->returnitemid(), output);
  }

  // optional int32 returnItem = 8;
  if (has_returnitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->returnitem(), output);
  }

  // optional int64 boxid = 9;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->boxid(), output);
  }

  // optional int64 skillid = 10;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->skillid(), output);
  }

  // optional string skilldes = 11;
  if (has_skilldes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skilldes().data(), this->skilldes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->skilldes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* treasureBowltreasureBowl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional int32 Type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 price = 4;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->price(), target);
  }

  // optional int32 returnD = 5;
  if (has_returnd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->returnd(), target);
  }

  // optional int32 returnVip = 6;
  if (has_returnvip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->returnvip(), target);
  }

  // optional int64 returnItemID = 7;
  if (has_returnitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->returnitemid(), target);
  }

  // optional int32 returnItem = 8;
  if (has_returnitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->returnitem(), target);
  }

  // optional int64 boxid = 9;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->boxid(), target);
  }

  // optional int64 skillid = 10;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->skillid(), target);
  }

  // optional string skilldes = 11;
  if (has_skilldes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skilldes().data(), this->skilldes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->skilldes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int treasureBowltreasureBowl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 Type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 price = 4;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 returnD = 5;
    if (has_returnd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->returnd());
    }

    // optional int32 returnVip = 6;
    if (has_returnvip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->returnvip());
    }

    // optional int64 returnItemID = 7;
    if (has_returnitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->returnitemid());
    }

    // optional int32 returnItem = 8;
    if (has_returnitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->returnitem());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 boxid = 9;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boxid());
    }

    // optional int64 skillid = 10;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->skillid());
    }

    // optional string skilldes = 11;
    if (has_skilldes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skilldes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void treasureBowltreasureBowl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const treasureBowltreasureBowl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const treasureBowltreasureBowl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void treasureBowltreasureBowl::MergeFrom(const treasureBowltreasureBowl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_returnd()) {
      set_returnd(from.returnd());
    }
    if (from.has_returnvip()) {
      set_returnvip(from.returnvip());
    }
    if (from.has_returnitemid()) {
      set_returnitemid(from.returnitemid());
    }
    if (from.has_returnitem()) {
      set_returnitem(from.returnitem());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_skilldes()) {
      set_skilldes(from.skilldes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void treasureBowltreasureBowl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void treasureBowltreasureBowl::CopyFrom(const treasureBowltreasureBowl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool treasureBowltreasureBowl::IsInitialized() const {

  return true;
}

void treasureBowltreasureBowl::Swap(treasureBowltreasureBowl* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(type_, other->type_);
    std::swap(price_, other->price_);
    std::swap(returnd_, other->returnd_);
    std::swap(returnvip_, other->returnvip_);
    std::swap(returnitemid_, other->returnitemid_);
    std::swap(returnitem_, other->returnitem_);
    std::swap(boxid_, other->boxid_);
    std::swap(skillid_, other->skillid_);
    std::swap(skilldes_, other->skilldes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata treasureBowltreasureBowl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = treasureBowltreasureBowl_descriptor_;
  metadata.reflection = treasureBowltreasureBowl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_treasureBowltreasureBowl::kTreasureBowltreasureBowlListFieldNumber;
#endif  // !_MSC_VER

Sheet_treasureBowltreasureBowl::Sheet_treasureBowltreasureBowl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_treasureBowltreasureBowl::InitAsDefaultInstance() {
}

Sheet_treasureBowltreasureBowl::Sheet_treasureBowltreasureBowl(const Sheet_treasureBowltreasureBowl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_treasureBowltreasureBowl::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_treasureBowltreasureBowl::~Sheet_treasureBowltreasureBowl() {
  SharedDtor();
}

void Sheet_treasureBowltreasureBowl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_treasureBowltreasureBowl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_treasureBowltreasureBowl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_treasureBowltreasureBowl_descriptor_;
}

const Sheet_treasureBowltreasureBowl& Sheet_treasureBowltreasureBowl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_treasureBowl_2eproto();
  return *default_instance_;
}

Sheet_treasureBowltreasureBowl* Sheet_treasureBowltreasureBowl::default_instance_ = NULL;

Sheet_treasureBowltreasureBowl* Sheet_treasureBowltreasureBowl::New() const {
  return new Sheet_treasureBowltreasureBowl;
}

void Sheet_treasureBowltreasureBowl::Clear() {
  treasurebowltreasurebowl_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_treasureBowltreasureBowl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.treasureBowltreasureBowl treasureBowltreasureBowl_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_treasureBowltreasureBowl_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_treasurebowltreasurebowl_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_treasureBowltreasureBowl_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_treasureBowltreasureBowl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.treasureBowltreasureBowl treasureBowltreasureBowl_List = 1;
  for (int i = 0; i < this->treasurebowltreasurebowl_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->treasurebowltreasurebowl_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_treasureBowltreasureBowl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.treasureBowltreasureBowl treasureBowltreasureBowl_List = 1;
  for (int i = 0; i < this->treasurebowltreasurebowl_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->treasurebowltreasurebowl_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_treasureBowltreasureBowl::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.treasureBowltreasureBowl treasureBowltreasureBowl_List = 1;
  total_size += 1 * this->treasurebowltreasurebowl_list_size();
  for (int i = 0; i < this->treasurebowltreasurebowl_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->treasurebowltreasurebowl_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_treasureBowltreasureBowl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_treasureBowltreasureBowl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_treasureBowltreasureBowl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_treasureBowltreasureBowl::MergeFrom(const Sheet_treasureBowltreasureBowl& from) {
  GOOGLE_CHECK_NE(&from, this);
  treasurebowltreasurebowl_list_.MergeFrom(from.treasurebowltreasurebowl_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_treasureBowltreasureBowl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_treasureBowltreasureBowl::CopyFrom(const Sheet_treasureBowltreasureBowl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_treasureBowltreasureBowl::IsInitialized() const {

  return true;
}

void Sheet_treasureBowltreasureBowl::Swap(Sheet_treasureBowltreasureBowl* other) {
  if (other != this) {
    treasurebowltreasurebowl_list_.Swap(&other->treasurebowltreasurebowl_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_treasureBowltreasureBowl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_treasureBowltreasureBowl_descriptor_;
  metadata.reflection = Sheet_treasureBowltreasureBowl_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
