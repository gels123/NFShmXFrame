// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CArena.proto

#ifndef PROTOBUF_CArena_2eproto__INCLUDED
#define PROTOBUF_CArena_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CArena_2eproto();
void protobuf_AssignDesc_CArena_2eproto();
void protobuf_ShutdownFile_CArena_2eproto();

class CWArenaRankInfoReq;
class ArenaRankInfo;
class WCArenaRankInfoRsp;
class WCArenaBuyChallengeTimesReq;
class WCArenaBuyChallengeTimesRsp;
class CWArenaUpdateOpponentInfoReq;
class WCArenaUpdateOpponentInfoRsp;
class CWArenaTopListReq;
class WCArenaTopListRsp;
class CWArenaChallReq;
class WCArenaChallRsp;
class ArenaAbandonReq;
class ArenaSweepReq;
class ArenaSweepRsp;
class WCArenaChallResult;
class WCArenaCampChallResult;
class WGArenaConfirmChall;
class GWArenaConfirmChall;
class AreanLoadMirrorDataCallBack;
class GWArenaChallResult;
class GWArenaCampChallResult;
class GWArenaRankChangeNotify;
class GWArenaChallReq;
class C2LSendArenaReward;
class C2LArenaGetChallResultReq;
class L2CArenaGetChallResultRsp;
class C2LArenaGetChallRewardReq;
class L2CArenaGetChallRewardRsp;
class L2CArenaChallRewardNotify;
class C2LArenaReceiveChallRewardReq;
class L2CArenaReceiveChallRewardRsp;
class C2LArenaDupBattleResult;
class C2LArenaSkipBattleReq;
class L2CArenaSkipBattleRsp;

enum ARENA_CHALL_RESULT_E {
  ACRE_WIN = 0,
  ACRE_LOSE = 1
};
bool ARENA_CHALL_RESULT_E_IsValid(int value);
const ARENA_CHALL_RESULT_E ARENA_CHALL_RESULT_E_MIN = ACRE_WIN;
const ARENA_CHALL_RESULT_E ARENA_CHALL_RESULT_E_MAX = ACRE_LOSE;
const int ARENA_CHALL_RESULT_E_ARRAYSIZE = ARENA_CHALL_RESULT_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* ARENA_CHALL_RESULT_E_descriptor();
inline const ::std::string& ARENA_CHALL_RESULT_E_Name(ARENA_CHALL_RESULT_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    ARENA_CHALL_RESULT_E_descriptor(), value);
}
inline bool ARENA_CHALL_RESULT_E_Parse(
    const ::std::string& name, ARENA_CHALL_RESULT_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ARENA_CHALL_RESULT_E>(
    ARENA_CHALL_RESULT_E_descriptor(), name, value);
}
// ===================================================================

class CWArenaRankInfoReq : public ::google::protobuf::Message {
 public:
  CWArenaRankInfoReq();
  virtual ~CWArenaRankInfoReq();

  CWArenaRankInfoReq(const CWArenaRankInfoReq& from);

  inline CWArenaRankInfoReq& operator=(const CWArenaRankInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CWArenaRankInfoReq& default_instance();

  void Swap(CWArenaRankInfoReq* other);

  // implements Message ----------------------------------------------

  CWArenaRankInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWArenaRankInfoReq& from);
  void MergeFrom(const CWArenaRankInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 char_id() const;
  inline void set_char_id(::google::protobuf::uint64 value);

  // optional bool can_miao_sha = 2;
  inline bool has_can_miao_sha() const;
  inline void clear_can_miao_sha();
  static const int kCanMiaoShaFieldNumber = 2;
  inline bool can_miao_sha() const;
  inline void set_can_miao_sha(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.CWArenaRankInfoReq)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_can_miao_sha();
  inline void clear_has_can_miao_sha();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 char_id_;
  bool can_miao_sha_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static CWArenaRankInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class ArenaRankInfo : public ::google::protobuf::Message {
 public:
  ArenaRankInfo();
  virtual ~ArenaRankInfo();

  ArenaRankInfo(const ArenaRankInfo& from);

  inline ArenaRankInfo& operator=(const ArenaRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaRankInfo& default_instance();

  void Swap(ArenaRankInfo* other);

  // implements Message ----------------------------------------------

  ArenaRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaRankInfo& from);
  void MergeFrom(const ArenaRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dstId = 1;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string dstName = 3;
  inline bool has_dstname() const;
  inline void clear_dstname();
  static const int kDstNameFieldNumber = 3;
  inline const ::std::string& dstname() const;
  inline void set_dstname(const ::std::string& value);
  inline void set_dstname(const char* value);
  inline void set_dstname(const char* value, size_t size);
  inline ::std::string* mutable_dstname();
  inline ::std::string* release_dstname();
  inline void set_allocated_dstname(::std::string* dstname);

  // optional uint32 rankId = 4;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 4;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // optional uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::uint32 fight() const;
  inline void set_fight(::google::protobuf::uint32 value);

  // optional uint32 prof = 8;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 8;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleFacadeProto facade = 9;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 9;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional int32 vipLv = 10;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kVipLvFieldNumber = 10;
  inline ::google::protobuf::int32 viplv() const;
  inline void set_viplv(::google::protobuf::int32 value);

  // optional int32 chall_type = 11;
  inline bool has_chall_type() const;
  inline void clear_chall_type();
  static const int kChallTypeFieldNumber = 11;
  inline ::google::protobuf::int32 chall_type() const;
  inline void set_chall_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ArenaRankInfo)
 private:
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_dstname();
  inline void clear_has_dstname();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_viplv();
  inline void clear_has_viplv();
  inline void set_has_chall_type();
  inline void clear_has_chall_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dstid_;
  ::std::string* dstname_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 fight_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::int32 viplv_;
  ::google::protobuf::int32 chall_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static ArenaRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaRankInfoRsp : public ::google::protobuf::Message {
 public:
  WCArenaRankInfoRsp();
  virtual ~WCArenaRankInfoRsp();

  WCArenaRankInfoRsp(const WCArenaRankInfoRsp& from);

  inline WCArenaRankInfoRsp& operator=(const WCArenaRankInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaRankInfoRsp& default_instance();

  void Swap(WCArenaRankInfoRsp* other);

  // implements Message ----------------------------------------------

  WCArenaRankInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaRankInfoRsp& from);
  void MergeFrom(const WCArenaRankInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 rankId = 3;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 3;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // repeated .proto_ff.ArenaRankInfo arenaRankInfo = 4;
  inline int arenarankinfo_size() const;
  inline void clear_arenarankinfo();
  static const int kArenaRankInfoFieldNumber = 4;
  inline const ::proto_ff::ArenaRankInfo& arenarankinfo(int index) const;
  inline ::proto_ff::ArenaRankInfo* mutable_arenarankinfo(int index);
  inline ::proto_ff::ArenaRankInfo* add_arenarankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >&
      arenarankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >*
      mutable_arenarankinfo();

  // optional uint32 times = 5;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional uint32 all_times = 6;
  inline bool has_all_times() const;
  inline void clear_all_times();
  static const int kAllTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 all_times() const;
  inline void set_all_times(::google::protobuf::uint32 value);

  // optional int32 buyChallengeTimes = 7;
  inline bool has_buychallengetimes() const;
  inline void clear_buychallengetimes();
  static const int kBuyChallengeTimesFieldNumber = 7;
  inline ::google::protobuf::int32 buychallengetimes() const;
  inline void set_buychallengetimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaRankInfoRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_all_times();
  inline void clear_has_all_times();
  inline void set_has_buychallengetimes();
  inline void clear_has_buychallengetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo > arenarankinfo_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 all_times_;
  ::google::protobuf::int32 buychallengetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaRankInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaBuyChallengeTimesReq : public ::google::protobuf::Message {
 public:
  WCArenaBuyChallengeTimesReq();
  virtual ~WCArenaBuyChallengeTimesReq();

  WCArenaBuyChallengeTimesReq(const WCArenaBuyChallengeTimesReq& from);

  inline WCArenaBuyChallengeTimesReq& operator=(const WCArenaBuyChallengeTimesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaBuyChallengeTimesReq& default_instance();

  void Swap(WCArenaBuyChallengeTimesReq* other);

  // implements Message ----------------------------------------------

  WCArenaBuyChallengeTimesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaBuyChallengeTimesReq& from);
  void MergeFrom(const WCArenaBuyChallengeTimesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaBuyChallengeTimesReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaBuyChallengeTimesReq* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaBuyChallengeTimesRsp : public ::google::protobuf::Message {
 public:
  WCArenaBuyChallengeTimesRsp();
  virtual ~WCArenaBuyChallengeTimesRsp();

  WCArenaBuyChallengeTimesRsp(const WCArenaBuyChallengeTimesRsp& from);

  inline WCArenaBuyChallengeTimesRsp& operator=(const WCArenaBuyChallengeTimesRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaBuyChallengeTimesRsp& default_instance();

  void Swap(WCArenaBuyChallengeTimesRsp* other);

  // implements Message ----------------------------------------------

  WCArenaBuyChallengeTimesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaBuyChallengeTimesRsp& from);
  void MergeFrom(const WCArenaBuyChallengeTimesRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional uint32 all_times = 3;
  inline bool has_all_times() const;
  inline void clear_all_times();
  static const int kAllTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 all_times() const;
  inline void set_all_times(::google::protobuf::uint32 value);

  // optional int32 buyChallengeTimes = 4;
  inline bool has_buychallengetimes() const;
  inline void clear_buychallengetimes();
  static const int kBuyChallengeTimesFieldNumber = 4;
  inline ::google::protobuf::int32 buychallengetimes() const;
  inline void set_buychallengetimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaBuyChallengeTimesRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_all_times();
  inline void clear_has_all_times();
  inline void set_has_buychallengetimes();
  inline void clear_has_buychallengetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 all_times_;
  ::google::protobuf::int32 buychallengetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaBuyChallengeTimesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CWArenaUpdateOpponentInfoReq : public ::google::protobuf::Message {
 public:
  CWArenaUpdateOpponentInfoReq();
  virtual ~CWArenaUpdateOpponentInfoReq();

  CWArenaUpdateOpponentInfoReq(const CWArenaUpdateOpponentInfoReq& from);

  inline CWArenaUpdateOpponentInfoReq& operator=(const CWArenaUpdateOpponentInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CWArenaUpdateOpponentInfoReq& default_instance();

  void Swap(CWArenaUpdateOpponentInfoReq* other);

  // implements Message ----------------------------------------------

  CWArenaUpdateOpponentInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWArenaUpdateOpponentInfoReq& from);
  void MergeFrom(const CWArenaUpdateOpponentInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 char_id() const;
  inline void set_char_id(::google::protobuf::uint64 value);

  // optional bool can_miao_sha = 2;
  inline bool has_can_miao_sha() const;
  inline void clear_can_miao_sha();
  static const int kCanMiaoShaFieldNumber = 2;
  inline bool can_miao_sha() const;
  inline void set_can_miao_sha(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.CWArenaUpdateOpponentInfoReq)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_can_miao_sha();
  inline void clear_has_can_miao_sha();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 char_id_;
  bool can_miao_sha_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static CWArenaUpdateOpponentInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaUpdateOpponentInfoRsp : public ::google::protobuf::Message {
 public:
  WCArenaUpdateOpponentInfoRsp();
  virtual ~WCArenaUpdateOpponentInfoRsp();

  WCArenaUpdateOpponentInfoRsp(const WCArenaUpdateOpponentInfoRsp& from);

  inline WCArenaUpdateOpponentInfoRsp& operator=(const WCArenaUpdateOpponentInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaUpdateOpponentInfoRsp& default_instance();

  void Swap(WCArenaUpdateOpponentInfoRsp* other);

  // implements Message ----------------------------------------------

  WCArenaUpdateOpponentInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaUpdateOpponentInfoRsp& from);
  void MergeFrom(const WCArenaUpdateOpponentInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // repeated .proto_ff.ArenaRankInfo arenaRankInfo = 2;
  inline int arenarankinfo_size() const;
  inline void clear_arenarankinfo();
  static const int kArenaRankInfoFieldNumber = 2;
  inline const ::proto_ff::ArenaRankInfo& arenarankinfo(int index) const;
  inline ::proto_ff::ArenaRankInfo* mutable_arenarankinfo(int index);
  inline ::proto_ff::ArenaRankInfo* add_arenarankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >&
      arenarankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >*
      mutable_arenarankinfo();

  // optional uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaUpdateOpponentInfoRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo > arenarankinfo_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaUpdateOpponentInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CWArenaTopListReq : public ::google::protobuf::Message {
 public:
  CWArenaTopListReq();
  virtual ~CWArenaTopListReq();

  CWArenaTopListReq(const CWArenaTopListReq& from);

  inline CWArenaTopListReq& operator=(const CWArenaTopListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CWArenaTopListReq& default_instance();

  void Swap(CWArenaTopListReq* other);

  // implements Message ----------------------------------------------

  CWArenaTopListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWArenaTopListReq& from);
  void MergeFrom(const CWArenaTopListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.CWArenaTopListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static CWArenaTopListReq* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaTopListRsp : public ::google::protobuf::Message {
 public:
  WCArenaTopListRsp();
  virtual ~WCArenaTopListRsp();

  WCArenaTopListRsp(const WCArenaTopListRsp& from);

  inline WCArenaTopListRsp& operator=(const WCArenaTopListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaTopListRsp& default_instance();

  void Swap(WCArenaTopListRsp* other);

  // implements Message ----------------------------------------------

  WCArenaTopListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaTopListRsp& from);
  void MergeFrom(const WCArenaTopListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // repeated .proto_ff.ArenaRankInfo arenaRankInfo = 2;
  inline int arenarankinfo_size() const;
  inline void clear_arenarankinfo();
  static const int kArenaRankInfoFieldNumber = 2;
  inline const ::proto_ff::ArenaRankInfo& arenarankinfo(int index) const;
  inline ::proto_ff::ArenaRankInfo* mutable_arenarankinfo(int index);
  inline ::proto_ff::ArenaRankInfo* add_arenarankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >&
      arenarankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >*
      mutable_arenarankinfo();

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaTopListRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo > arenarankinfo_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaTopListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CWArenaChallReq : public ::google::protobuf::Message {
 public:
  CWArenaChallReq();
  virtual ~CWArenaChallReq();

  CWArenaChallReq(const CWArenaChallReq& from);

  inline CWArenaChallReq& operator=(const CWArenaChallReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CWArenaChallReq& default_instance();

  void Swap(CWArenaChallReq* other);

  // implements Message ----------------------------------------------

  CWArenaChallReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWArenaChallReq& from);
  void MergeFrom(const CWArenaChallReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dstId = 1;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional uint32 rankId = 2;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 2;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 chall_type = 4;
  inline bool has_chall_type() const;
  inline void clear_chall_type();
  static const int kChallTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 chall_type() const;
  inline void set_chall_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CWArenaChallReq)
 private:
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_chall_type();
  inline void clear_has_chall_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dstid_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 chall_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static CWArenaChallReq* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaChallRsp : public ::google::protobuf::Message {
 public:
  WCArenaChallRsp();
  virtual ~WCArenaChallRsp();

  WCArenaChallRsp(const WCArenaChallRsp& from);

  inline WCArenaChallRsp& operator=(const WCArenaChallRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaChallRsp& default_instance();

  void Swap(WCArenaChallRsp* other);

  // implements Message ----------------------------------------------

  WCArenaChallRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaChallRsp& from);
  void MergeFrom(const WCArenaChallRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaChallRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaChallRsp* default_instance_;
};
// -------------------------------------------------------------------

class ArenaAbandonReq : public ::google::protobuf::Message {
 public:
  ArenaAbandonReq();
  virtual ~ArenaAbandonReq();

  ArenaAbandonReq(const ArenaAbandonReq& from);

  inline ArenaAbandonReq& operator=(const ArenaAbandonReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaAbandonReq& default_instance();

  void Swap(ArenaAbandonReq* other);

  // implements Message ----------------------------------------------

  ArenaAbandonReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaAbandonReq& from);
  void MergeFrom(const ArenaAbandonReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.ArenaAbandonReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static ArenaAbandonReq* default_instance_;
};
// -------------------------------------------------------------------

class ArenaSweepReq : public ::google::protobuf::Message {
 public:
  ArenaSweepReq();
  virtual ~ArenaSweepReq();

  ArenaSweepReq(const ArenaSweepReq& from);

  inline ArenaSweepReq& operator=(const ArenaSweepReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaSweepReq& default_instance();

  void Swap(ArenaSweepReq* other);

  // implements Message ----------------------------------------------

  ArenaSweepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaSweepReq& from);
  void MergeFrom(const ArenaSweepReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.ArenaSweepReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static ArenaSweepReq* default_instance_;
};
// -------------------------------------------------------------------

class ArenaSweepRsp : public ::google::protobuf::Message {
 public:
  ArenaSweepRsp();
  virtual ~ArenaSweepRsp();

  ArenaSweepRsp(const ArenaSweepRsp& from);

  inline ArenaSweepRsp& operator=(const ArenaSweepRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaSweepRsp& default_instance();

  void Swap(ArenaSweepRsp* other);

  // implements Message ----------------------------------------------

  ArenaSweepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaSweepRsp& from);
  void MergeFrom(const ArenaSweepRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional int32 challengeTimes = 2;
  inline bool has_challengetimes() const;
  inline void clear_challengetimes();
  static const int kChallengeTimesFieldNumber = 2;
  inline ::google::protobuf::int32 challengetimes() const;
  inline void set_challengetimes(::google::protobuf::int32 value);

  // optional int32 sweep_num = 3;
  inline bool has_sweep_num() const;
  inline void clear_sweep_num();
  static const int kSweepNumFieldNumber = 3;
  inline ::google::protobuf::int32 sweep_num() const;
  inline void set_sweep_num(::google::protobuf::int32 value);

  // repeated .proto_ff.ComItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::proto_ff::ComItem& items(int index) const;
  inline ::proto_ff::ComItem* mutable_items(int index);
  inline ::proto_ff::ComItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.ArenaSweepRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_challengetimes();
  inline void clear_has_challengetimes();
  inline void set_has_sweep_num();
  inline void clear_has_sweep_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::int32 challengetimes_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem > items_;
  ::google::protobuf::int32 sweep_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static ArenaSweepRsp* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaChallResult : public ::google::protobuf::Message {
 public:
  WCArenaChallResult();
  virtual ~WCArenaChallResult();

  WCArenaChallResult(const WCArenaChallResult& from);

  inline WCArenaChallResult& operator=(const WCArenaChallResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaChallResult& default_instance();

  void Swap(WCArenaChallResult* other);

  // implements Message ----------------------------------------------

  WCArenaChallResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaChallResult& from);
  void MergeFrom(const WCArenaChallResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 rankId = 2;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 2;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // optional uint32 old_rankId = 3;
  inline bool has_old_rankid() const;
  inline void clear_old_rankid();
  static const int kOldRankIdFieldNumber = 3;
  inline ::google::protobuf::uint32 old_rankid() const;
  inline void set_old_rankid(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::proto_ff::ComItem& items(int index) const;
  inline ::proto_ff::ComItem* mutable_items(int index);
  inline ::proto_ff::ComItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaChallResult)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_old_rankid();
  inline void clear_has_old_rankid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem > items_;
  ::google::protobuf::uint32 old_rankid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaChallResult* default_instance_;
};
// -------------------------------------------------------------------

class WCArenaCampChallResult : public ::google::protobuf::Message {
 public:
  WCArenaCampChallResult();
  virtual ~WCArenaCampChallResult();

  WCArenaCampChallResult(const WCArenaCampChallResult& from);

  inline WCArenaCampChallResult& operator=(const WCArenaCampChallResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WCArenaCampChallResult& default_instance();

  void Swap(WCArenaCampChallResult* other);

  // implements Message ----------------------------------------------

  WCArenaCampChallResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WCArenaCampChallResult& from);
  void MergeFrom(const WCArenaCampChallResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WCArenaCampChallResult)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WCArenaCampChallResult* default_instance_;
};
// -------------------------------------------------------------------

class WGArenaConfirmChall : public ::google::protobuf::Message {
 public:
  WGArenaConfirmChall();
  virtual ~WGArenaConfirmChall();

  WGArenaConfirmChall(const WGArenaConfirmChall& from);

  inline WGArenaConfirmChall& operator=(const WGArenaConfirmChall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WGArenaConfirmChall& default_instance();

  void Swap(WGArenaConfirmChall* other);

  // implements Message ----------------------------------------------

  WGArenaConfirmChall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WGArenaConfirmChall& from);
  void MergeFrom(const WGArenaConfirmChall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 dstId = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WGArenaConfirmChall)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 dstid_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static WGArenaConfirmChall* default_instance_;
};
// -------------------------------------------------------------------

class GWArenaConfirmChall : public ::google::protobuf::Message {
 public:
  GWArenaConfirmChall();
  virtual ~GWArenaConfirmChall();

  GWArenaConfirmChall(const GWArenaConfirmChall& from);

  inline GWArenaConfirmChall& operator=(const GWArenaConfirmChall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWArenaConfirmChall& default_instance();

  void Swap(GWArenaConfirmChall* other);

  // implements Message ----------------------------------------------

  GWArenaConfirmChall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWArenaConfirmChall& from);
  void MergeFrom(const GWArenaConfirmChall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 dstId = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 ret = 5;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 5;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWArenaConfirmChall)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 dstid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static GWArenaConfirmChall* default_instance_;
};
// -------------------------------------------------------------------

class AreanLoadMirrorDataCallBack : public ::google::protobuf::Message {
 public:
  AreanLoadMirrorDataCallBack();
  virtual ~AreanLoadMirrorDataCallBack();

  AreanLoadMirrorDataCallBack(const AreanLoadMirrorDataCallBack& from);

  inline AreanLoadMirrorDataCallBack& operator=(const AreanLoadMirrorDataCallBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AreanLoadMirrorDataCallBack& default_instance();

  void Swap(AreanLoadMirrorDataCallBack* other);

  // implements Message ----------------------------------------------

  AreanLoadMirrorDataCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AreanLoadMirrorDataCallBack& from);
  void MergeFrom(const AreanLoadMirrorDataCallBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 dstId = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.AreanLoadMirrorDataCallBack)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dstid();
  inline void clear_has_dstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static AreanLoadMirrorDataCallBack* default_instance_;
};
// -------------------------------------------------------------------

class GWArenaChallResult : public ::google::protobuf::Message {
 public:
  GWArenaChallResult();
  virtual ~GWArenaChallResult();

  GWArenaChallResult(const GWArenaChallResult& from);

  inline GWArenaChallResult& operator=(const GWArenaChallResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWArenaChallResult& default_instance();

  void Swap(GWArenaChallResult* other);

  // implements Message ----------------------------------------------

  GWArenaChallResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWArenaChallResult& from);
  void MergeFrom(const GWArenaChallResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcCharId = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint64 value);

  // optional uint32 srcScore = 2;
  inline bool has_srcscore() const;
  inline void clear_srcscore();
  static const int kSrcScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 srcscore() const;
  inline void set_srcscore(::google::protobuf::uint32 value);

  // optional uint64 dstCharId = 3;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 ret = 5;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 5;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 historyRankId = 6;
  inline bool has_historyrankid() const;
  inline void clear_historyrankid();
  static const int kHistoryRankIdFieldNumber = 6;
  inline ::google::protobuf::uint32 historyrankid() const;
  inline void set_historyrankid(::google::protobuf::uint32 value);

  // optional uint32 continue_win = 7;
  inline bool has_continue_win() const;
  inline void clear_continue_win();
  static const int kContinueWinFieldNumber = 7;
  inline ::google::protobuf::uint32 continue_win() const;
  inline void set_continue_win(::google::protobuf::uint32 value);

  // optional uint64 begin_time = 8;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint64 value);

  // optional int32 challenge_num = 9;
  inline bool has_challenge_num() const;
  inline void clear_challenge_num();
  static const int kChallengeNumFieldNumber = 9;
  inline ::google::protobuf::int32 challenge_num() const;
  inline void set_challenge_num(::google::protobuf::int32 value);

  // optional int32 playerLv = 10;
  inline bool has_playerlv() const;
  inline void clear_playerlv();
  static const int kPlayerLvFieldNumber = 10;
  inline ::google::protobuf::int32 playerlv() const;
  inline void set_playerlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWArenaChallResult)
 private:
  inline void set_has_srccharid();
  inline void clear_has_srccharid();
  inline void set_has_srcscore();
  inline void clear_has_srcscore();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_historyrankid();
  inline void clear_has_historyrankid();
  inline void set_has_continue_win();
  inline void clear_has_continue_win();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_challenge_num();
  inline void clear_has_challenge_num();
  inline void set_has_playerlv();
  inline void clear_has_playerlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srccharid_;
  ::google::protobuf::uint64 dstcharid_;
  ::google::protobuf::uint32 srcscore_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 historyrankid_;
  ::google::protobuf::uint64 begin_time_;
  ::google::protobuf::uint32 continue_win_;
  ::google::protobuf::int32 challenge_num_;
  ::google::protobuf::int32 playerlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static GWArenaChallResult* default_instance_;
};
// -------------------------------------------------------------------

class GWArenaCampChallResult : public ::google::protobuf::Message {
 public:
  GWArenaCampChallResult();
  virtual ~GWArenaCampChallResult();

  GWArenaCampChallResult(const GWArenaCampChallResult& from);

  inline GWArenaCampChallResult& operator=(const GWArenaCampChallResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWArenaCampChallResult& default_instance();

  void Swap(GWArenaCampChallResult* other);

  // implements Message ----------------------------------------------

  GWArenaCampChallResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWArenaCampChallResult& from);
  void MergeFrom(const GWArenaCampChallResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcCharId = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint64 value);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWArenaCampChallResult)
 private:
  inline void set_has_srccharid();
  inline void clear_has_srccharid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srccharid_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static GWArenaCampChallResult* default_instance_;
};
// -------------------------------------------------------------------

class GWArenaRankChangeNotify : public ::google::protobuf::Message {
 public:
  GWArenaRankChangeNotify();
  virtual ~GWArenaRankChangeNotify();

  GWArenaRankChangeNotify(const GWArenaRankChangeNotify& from);

  inline GWArenaRankChangeNotify& operator=(const GWArenaRankChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWArenaRankChangeNotify& default_instance();

  void Swap(GWArenaRankChangeNotify* other);

  // implements Message ----------------------------------------------

  GWArenaRankChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWArenaRankChangeNotify& from);
  void MergeFrom(const GWArenaRankChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWArenaRankChangeNotify)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static GWArenaRankChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class GWArenaChallReq : public ::google::protobuf::Message {
 public:
  GWArenaChallReq();
  virtual ~GWArenaChallReq();

  GWArenaChallReq(const GWArenaChallReq& from);

  inline GWArenaChallReq& operator=(const GWArenaChallReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWArenaChallReq& default_instance();

  void Swap(GWArenaChallReq* other);

  // implements Message ----------------------------------------------

  GWArenaChallReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWArenaChallReq& from);
  void MergeFrom(const GWArenaChallReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 srcId = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // optional uint64 dstId = 2;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid() const;
  inline void set_dstid(::google::protobuf::uint64 value);

  // optional uint32 rankId = 3;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 3;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 chall_type = 5;
  inline bool has_chall_type() const;
  inline void clear_chall_type();
  static const int kChallTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 chall_type() const;
  inline void set_chall_type(::google::protobuf::uint32 value);

  // optional uint32 can_miaosha = 6;
  inline bool has_can_miaosha() const;
  inline void clear_can_miaosha();
  static const int kCanMiaoshaFieldNumber = 6;
  inline ::google::protobuf::uint32 can_miaosha() const;
  inline void set_can_miaosha(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWArenaChallReq)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_chall_type();
  inline void clear_has_chall_type();
  inline void set_has_can_miaosha();
  inline void clear_has_can_miaosha();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 dstid_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 chall_type_;
  ::google::protobuf::uint32 can_miaosha_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static GWArenaChallReq* default_instance_;
};
// -------------------------------------------------------------------

class C2LSendArenaReward : public ::google::protobuf::Message {
 public:
  C2LSendArenaReward();
  virtual ~C2LSendArenaReward();

  C2LSendArenaReward(const C2LSendArenaReward& from);

  inline C2LSendArenaReward& operator=(const C2LSendArenaReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LSendArenaReward& default_instance();

  void Swap(C2LSendArenaReward* other);

  // implements Message ----------------------------------------------

  C2LSendArenaReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LSendArenaReward& from);
  void MergeFrom(const C2LSendArenaReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComItem items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::proto_ff::ComItem& items(int index) const;
  inline ::proto_ff::ComItem* mutable_items(int index);
  inline ::proto_ff::ComItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.C2LSendArenaReward)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static C2LSendArenaReward* default_instance_;
};
// -------------------------------------------------------------------

class C2LArenaGetChallResultReq : public ::google::protobuf::Message {
 public:
  C2LArenaGetChallResultReq();
  virtual ~C2LArenaGetChallResultReq();

  C2LArenaGetChallResultReq(const C2LArenaGetChallResultReq& from);

  inline C2LArenaGetChallResultReq& operator=(const C2LArenaGetChallResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LArenaGetChallResultReq& default_instance();

  void Swap(C2LArenaGetChallResultReq* other);

  // implements Message ----------------------------------------------

  C2LArenaGetChallResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LArenaGetChallResultReq& from);
  void MergeFrom(const C2LArenaGetChallResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.C2LArenaGetChallResultReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static C2LArenaGetChallResultReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CArenaGetChallResultRsp : public ::google::protobuf::Message {
 public:
  L2CArenaGetChallResultRsp();
  virtual ~L2CArenaGetChallResultRsp();

  L2CArenaGetChallResultRsp(const L2CArenaGetChallResultRsp& from);

  inline L2CArenaGetChallResultRsp& operator=(const L2CArenaGetChallResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CArenaGetChallResultRsp& default_instance();

  void Swap(L2CArenaGetChallResultRsp* other);

  // implements Message ----------------------------------------------

  L2CArenaGetChallResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CArenaGetChallResultRsp& from);
  void MergeFrom(const L2CArenaGetChallResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .proto_ff.ArenaChallResult chall_result = 2;
  inline int chall_result_size() const;
  inline void clear_chall_result();
  static const int kChallResultFieldNumber = 2;
  inline const ::proto_ff::ArenaChallResult& chall_result(int index) const;
  inline ::proto_ff::ArenaChallResult* mutable_chall_result(int index);
  inline ::proto_ff::ArenaChallResult* add_chall_result();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >&
      chall_result() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >*
      mutable_chall_result();

  // @@protoc_insertion_point(class_scope:proto_ff.L2CArenaGetChallResultRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult > chall_result_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static L2CArenaGetChallResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LArenaGetChallRewardReq : public ::google::protobuf::Message {
 public:
  C2LArenaGetChallRewardReq();
  virtual ~C2LArenaGetChallRewardReq();

  C2LArenaGetChallRewardReq(const C2LArenaGetChallRewardReq& from);

  inline C2LArenaGetChallRewardReq& operator=(const C2LArenaGetChallRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LArenaGetChallRewardReq& default_instance();

  void Swap(C2LArenaGetChallRewardReq* other);

  // implements Message ----------------------------------------------

  C2LArenaGetChallRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LArenaGetChallRewardReq& from);
  void MergeFrom(const C2LArenaGetChallRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.C2LArenaGetChallRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static C2LArenaGetChallRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CArenaGetChallRewardRsp : public ::google::protobuf::Message {
 public:
  L2CArenaGetChallRewardRsp();
  virtual ~L2CArenaGetChallRewardRsp();

  L2CArenaGetChallRewardRsp(const L2CArenaGetChallRewardRsp& from);

  inline L2CArenaGetChallRewardRsp& operator=(const L2CArenaGetChallRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CArenaGetChallRewardRsp& default_instance();

  void Swap(L2CArenaGetChallRewardRsp* other);

  // implements Message ----------------------------------------------

  L2CArenaGetChallRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CArenaGetChallRewardRsp& from);
  void MergeFrom(const L2CArenaGetChallRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .proto_ff.ChallArenaReward reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::proto_ff::ChallArenaReward& reward(int index) const;
  inline ::proto_ff::ChallArenaReward* mutable_reward(int index);
  inline ::proto_ff::ChallArenaReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.L2CArenaGetChallRewardRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward > reward_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static L2CArenaGetChallRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CArenaChallRewardNotify : public ::google::protobuf::Message {
 public:
  L2CArenaChallRewardNotify();
  virtual ~L2CArenaChallRewardNotify();

  L2CArenaChallRewardNotify(const L2CArenaChallRewardNotify& from);

  inline L2CArenaChallRewardNotify& operator=(const L2CArenaChallRewardNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CArenaChallRewardNotify& default_instance();

  void Swap(L2CArenaChallRewardNotify* other);

  // implements Message ----------------------------------------------

  L2CArenaChallRewardNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CArenaChallRewardNotify& from);
  void MergeFrom(const L2CArenaChallRewardNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .proto_ff.ChallArenaReward reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::proto_ff::ChallArenaReward& reward(int index) const;
  inline ::proto_ff::ChallArenaReward* mutable_reward(int index);
  inline ::proto_ff::ChallArenaReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >*
      mutable_reward();

  // optional int32 rank_id = 3;
  inline bool has_rank_id() const;
  inline void clear_rank_id();
  static const int kRankIdFieldNumber = 3;
  inline ::google::protobuf::int32 rank_id() const;
  inline void set_rank_id(::google::protobuf::int32 value);

  // optional int32 history_rank_id = 4;
  inline bool has_history_rank_id() const;
  inline void clear_history_rank_id();
  static const int kHistoryRankIdFieldNumber = 4;
  inline ::google::protobuf::int32 history_rank_id() const;
  inline void set_history_rank_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CArenaChallRewardNotify)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_rank_id();
  inline void clear_has_rank_id();
  inline void set_has_history_rank_id();
  inline void clear_has_history_rank_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward > reward_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 rank_id_;
  ::google::protobuf::int32 history_rank_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static L2CArenaChallRewardNotify* default_instance_;
};
// -------------------------------------------------------------------

class C2LArenaReceiveChallRewardReq : public ::google::protobuf::Message {
 public:
  C2LArenaReceiveChallRewardReq();
  virtual ~C2LArenaReceiveChallRewardReq();

  C2LArenaReceiveChallRewardReq(const C2LArenaReceiveChallRewardReq& from);

  inline C2LArenaReceiveChallRewardReq& operator=(const C2LArenaReceiveChallRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LArenaReceiveChallRewardReq& default_instance();

  void Swap(C2LArenaReceiveChallRewardReq* other);

  // implements Message ----------------------------------------------

  C2LArenaReceiveChallRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LArenaReceiveChallRewardReq& from);
  void MergeFrom(const C2LArenaReceiveChallRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LArenaReceiveChallRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static C2LArenaReceiveChallRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CArenaReceiveChallRewardRsp : public ::google::protobuf::Message {
 public:
  L2CArenaReceiveChallRewardRsp();
  virtual ~L2CArenaReceiveChallRewardRsp();

  L2CArenaReceiveChallRewardRsp(const L2CArenaReceiveChallRewardRsp& from);

  inline L2CArenaReceiveChallRewardRsp& operator=(const L2CArenaReceiveChallRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CArenaReceiveChallRewardRsp& default_instance();

  void Swap(L2CArenaReceiveChallRewardRsp* other);

  // implements Message ----------------------------------------------

  L2CArenaReceiveChallRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CArenaReceiveChallRewardRsp& from);
  void MergeFrom(const L2CArenaReceiveChallRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .proto_ff.ChallArenaReward reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::proto_ff::ChallArenaReward& reward(int index) const;
  inline ::proto_ff::ChallArenaReward* mutable_reward(int index);
  inline ::proto_ff::ChallArenaReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.L2CArenaReceiveChallRewardRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward > reward_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static L2CArenaReceiveChallRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LArenaDupBattleResult : public ::google::protobuf::Message {
 public:
  C2LArenaDupBattleResult();
  virtual ~C2LArenaDupBattleResult();

  C2LArenaDupBattleResult(const C2LArenaDupBattleResult& from);

  inline C2LArenaDupBattleResult& operator=(const C2LArenaDupBattleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LArenaDupBattleResult& default_instance();

  void Swap(C2LArenaDupBattleResult* other);

  // implements Message ----------------------------------------------

  C2LArenaDupBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LArenaDupBattleResult& from);
  void MergeFrom(const C2LArenaDupBattleResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 char_id() const;
  inline void set_char_id(::google::protobuf::uint64 value);

  // optional uint64 char_rank = 2;
  inline bool has_char_rank() const;
  inline void clear_char_rank();
  static const int kCharRankFieldNumber = 2;
  inline ::google::protobuf::uint64 char_rank() const;
  inline void set_char_rank(::google::protobuf::uint64 value);

  // optional uint64 dst_id = 3;
  inline bool has_dst_id() const;
  inline void clear_dst_id();
  static const int kDstIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dst_id() const;
  inline void set_dst_id(::google::protobuf::uint64 value);

  // optional uint64 dst_rank = 4;
  inline bool has_dst_rank() const;
  inline void clear_dst_rank();
  static const int kDstRankFieldNumber = 4;
  inline ::google::protobuf::uint64 dst_rank() const;
  inline void set_dst_rank(::google::protobuf::uint64 value);

  // optional uint32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LArenaDupBattleResult)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_char_rank();
  inline void clear_has_char_rank();
  inline void set_has_dst_id();
  inline void clear_has_dst_id();
  inline void set_has_dst_rank();
  inline void clear_has_dst_rank();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 char_id_;
  ::google::protobuf::uint64 char_rank_;
  ::google::protobuf::uint64 dst_id_;
  ::google::protobuf::uint64 dst_rank_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static C2LArenaDupBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class C2LArenaSkipBattleReq : public ::google::protobuf::Message {
 public:
  C2LArenaSkipBattleReq();
  virtual ~C2LArenaSkipBattleReq();

  C2LArenaSkipBattleReq(const C2LArenaSkipBattleReq& from);

  inline C2LArenaSkipBattleReq& operator=(const C2LArenaSkipBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LArenaSkipBattleReq& default_instance();

  void Swap(C2LArenaSkipBattleReq* other);

  // implements Message ----------------------------------------------

  C2LArenaSkipBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LArenaSkipBattleReq& from);
  void MergeFrom(const C2LArenaSkipBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.C2LArenaSkipBattleReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static C2LArenaSkipBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CArenaSkipBattleRsp : public ::google::protobuf::Message {
 public:
  L2CArenaSkipBattleRsp();
  virtual ~L2CArenaSkipBattleRsp();

  L2CArenaSkipBattleRsp(const L2CArenaSkipBattleRsp& from);

  inline L2CArenaSkipBattleRsp& operator=(const L2CArenaSkipBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CArenaSkipBattleRsp& default_instance();

  void Swap(L2CArenaSkipBattleRsp* other);

  // implements Message ----------------------------------------------

  L2CArenaSkipBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CArenaSkipBattleRsp& from);
  void MergeFrom(const L2CArenaSkipBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CArenaSkipBattleRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CArena_2eproto();
  friend void protobuf_AssignDesc_CArena_2eproto();
  friend void protobuf_ShutdownFile_CArena_2eproto();

  void InitAsDefaultInstance();
  static L2CArenaSkipBattleRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// CWArenaRankInfoReq

// optional uint64 char_id = 1;
inline bool CWArenaRankInfoReq::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWArenaRankInfoReq::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWArenaRankInfoReq::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWArenaRankInfoReq::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::uint64 CWArenaRankInfoReq::char_id() const {
  return char_id_;
}
inline void CWArenaRankInfoReq::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
}

// optional bool can_miao_sha = 2;
inline bool CWArenaRankInfoReq::has_can_miao_sha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CWArenaRankInfoReq::set_has_can_miao_sha() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CWArenaRankInfoReq::clear_has_can_miao_sha() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CWArenaRankInfoReq::clear_can_miao_sha() {
  can_miao_sha_ = false;
  clear_has_can_miao_sha();
}
inline bool CWArenaRankInfoReq::can_miao_sha() const {
  return can_miao_sha_;
}
inline void CWArenaRankInfoReq::set_can_miao_sha(bool value) {
  set_has_can_miao_sha();
  can_miao_sha_ = value;
}

// -------------------------------------------------------------------

// ArenaRankInfo

// optional uint64 dstId = 1;
inline bool ArenaRankInfo::has_dstid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaRankInfo::set_has_dstid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaRankInfo::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaRankInfo::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 ArenaRankInfo::dstid() const {
  return dstid_;
}
inline void ArenaRankInfo::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional uint32 type = 2;
inline bool ArenaRankInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaRankInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaRankInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaRankInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ArenaRankInfo::type() const {
  return type_;
}
inline void ArenaRankInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional string dstName = 3;
inline bool ArenaRankInfo::has_dstname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaRankInfo::set_has_dstname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaRankInfo::clear_has_dstname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaRankInfo::clear_dstname() {
  if (dstname_ != &::google::protobuf::internal::kEmptyString) {
    dstname_->clear();
  }
  clear_has_dstname();
}
inline const ::std::string& ArenaRankInfo::dstname() const {
  return *dstname_;
}
inline void ArenaRankInfo::set_dstname(const ::std::string& value) {
  set_has_dstname();
  if (dstname_ == &::google::protobuf::internal::kEmptyString) {
    dstname_ = new ::std::string;
  }
  dstname_->assign(value);
}
inline void ArenaRankInfo::set_dstname(const char* value) {
  set_has_dstname();
  if (dstname_ == &::google::protobuf::internal::kEmptyString) {
    dstname_ = new ::std::string;
  }
  dstname_->assign(value);
}
inline void ArenaRankInfo::set_dstname(const char* value, size_t size) {
  set_has_dstname();
  if (dstname_ == &::google::protobuf::internal::kEmptyString) {
    dstname_ = new ::std::string;
  }
  dstname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaRankInfo::mutable_dstname() {
  set_has_dstname();
  if (dstname_ == &::google::protobuf::internal::kEmptyString) {
    dstname_ = new ::std::string;
  }
  return dstname_;
}
inline ::std::string* ArenaRankInfo::release_dstname() {
  clear_has_dstname();
  if (dstname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dstname_;
    dstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaRankInfo::set_allocated_dstname(::std::string* dstname) {
  if (dstname_ != &::google::protobuf::internal::kEmptyString) {
    delete dstname_;
  }
  if (dstname) {
    set_has_dstname();
    dstname_ = dstname;
  } else {
    clear_has_dstname();
    dstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 rankId = 4;
inline bool ArenaRankInfo::has_rankid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaRankInfo::set_has_rankid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaRankInfo::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaRankInfo::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 ArenaRankInfo::rankid() const {
  return rankid_;
}
inline void ArenaRankInfo::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// optional uint32 lv = 5;
inline bool ArenaRankInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaRankInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaRankInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaRankInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 ArenaRankInfo::lv() const {
  return lv_;
}
inline void ArenaRankInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional uint32 fight = 6;
inline bool ArenaRankInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaRankInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaRankInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaRankInfo::clear_fight() {
  fight_ = 0u;
  clear_has_fight();
}
inline ::google::protobuf::uint32 ArenaRankInfo::fight() const {
  return fight_;
}
inline void ArenaRankInfo::set_fight(::google::protobuf::uint32 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint32 prof = 8;
inline bool ArenaRankInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ArenaRankInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ArenaRankInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ArenaRankInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 ArenaRankInfo::prof() const {
  return prof_;
}
inline void ArenaRankInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 9;
inline bool ArenaRankInfo::has_facade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ArenaRankInfo::set_has_facade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ArenaRankInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ArenaRankInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& ArenaRankInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* ArenaRankInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* ArenaRankInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void ArenaRankInfo::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional int32 vipLv = 10;
inline bool ArenaRankInfo::has_viplv() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ArenaRankInfo::set_has_viplv() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ArenaRankInfo::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ArenaRankInfo::clear_viplv() {
  viplv_ = 0;
  clear_has_viplv();
}
inline ::google::protobuf::int32 ArenaRankInfo::viplv() const {
  return viplv_;
}
inline void ArenaRankInfo::set_viplv(::google::protobuf::int32 value) {
  set_has_viplv();
  viplv_ = value;
}

// optional int32 chall_type = 11;
inline bool ArenaRankInfo::has_chall_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ArenaRankInfo::set_has_chall_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ArenaRankInfo::clear_has_chall_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ArenaRankInfo::clear_chall_type() {
  chall_type_ = 0;
  clear_has_chall_type();
}
inline ::google::protobuf::int32 ArenaRankInfo::chall_type() const {
  return chall_type_;
}
inline void ArenaRankInfo::set_chall_type(::google::protobuf::int32 value) {
  set_has_chall_type();
  chall_type_ = value;
}

// -------------------------------------------------------------------

// WCArenaRankInfoRsp

// optional uint32 ret = 1;
inline bool WCArenaRankInfoRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaRankInfoRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaRankInfoRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaRankInfoRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCArenaRankInfoRsp::ret() const {
  return ret_;
}
inline void WCArenaRankInfoRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 charId = 2;
inline bool WCArenaRankInfoRsp::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WCArenaRankInfoRsp::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WCArenaRankInfoRsp::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WCArenaRankInfoRsp::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 WCArenaRankInfoRsp::charid() const {
  return charid_;
}
inline void WCArenaRankInfoRsp::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint32 rankId = 3;
inline bool WCArenaRankInfoRsp::has_rankid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WCArenaRankInfoRsp::set_has_rankid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WCArenaRankInfoRsp::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WCArenaRankInfoRsp::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 WCArenaRankInfoRsp::rankid() const {
  return rankid_;
}
inline void WCArenaRankInfoRsp::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// repeated .proto_ff.ArenaRankInfo arenaRankInfo = 4;
inline int WCArenaRankInfoRsp::arenarankinfo_size() const {
  return arenarankinfo_.size();
}
inline void WCArenaRankInfoRsp::clear_arenarankinfo() {
  arenarankinfo_.Clear();
}
inline const ::proto_ff::ArenaRankInfo& WCArenaRankInfoRsp::arenarankinfo(int index) const {
  return arenarankinfo_.Get(index);
}
inline ::proto_ff::ArenaRankInfo* WCArenaRankInfoRsp::mutable_arenarankinfo(int index) {
  return arenarankinfo_.Mutable(index);
}
inline ::proto_ff::ArenaRankInfo* WCArenaRankInfoRsp::add_arenarankinfo() {
  return arenarankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >&
WCArenaRankInfoRsp::arenarankinfo() const {
  return arenarankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >*
WCArenaRankInfoRsp::mutable_arenarankinfo() {
  return &arenarankinfo_;
}

// optional uint32 times = 5;
inline bool WCArenaRankInfoRsp::has_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WCArenaRankInfoRsp::set_has_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WCArenaRankInfoRsp::clear_has_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WCArenaRankInfoRsp::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 WCArenaRankInfoRsp::times() const {
  return times_;
}
inline void WCArenaRankInfoRsp::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// optional uint32 all_times = 6;
inline bool WCArenaRankInfoRsp::has_all_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WCArenaRankInfoRsp::set_has_all_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WCArenaRankInfoRsp::clear_has_all_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WCArenaRankInfoRsp::clear_all_times() {
  all_times_ = 0u;
  clear_has_all_times();
}
inline ::google::protobuf::uint32 WCArenaRankInfoRsp::all_times() const {
  return all_times_;
}
inline void WCArenaRankInfoRsp::set_all_times(::google::protobuf::uint32 value) {
  set_has_all_times();
  all_times_ = value;
}

// optional int32 buyChallengeTimes = 7;
inline bool WCArenaRankInfoRsp::has_buychallengetimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WCArenaRankInfoRsp::set_has_buychallengetimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WCArenaRankInfoRsp::clear_has_buychallengetimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WCArenaRankInfoRsp::clear_buychallengetimes() {
  buychallengetimes_ = 0;
  clear_has_buychallengetimes();
}
inline ::google::protobuf::int32 WCArenaRankInfoRsp::buychallengetimes() const {
  return buychallengetimes_;
}
inline void WCArenaRankInfoRsp::set_buychallengetimes(::google::protobuf::int32 value) {
  set_has_buychallengetimes();
  buychallengetimes_ = value;
}

// -------------------------------------------------------------------

// WCArenaBuyChallengeTimesReq

// -------------------------------------------------------------------

// WCArenaBuyChallengeTimesRsp

// optional int32 retCode = 1;
inline bool WCArenaBuyChallengeTimesRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaBuyChallengeTimesRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 WCArenaBuyChallengeTimesRsp::retcode() const {
  return retcode_;
}
inline void WCArenaBuyChallengeTimesRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional uint32 times = 2;
inline bool WCArenaBuyChallengeTimesRsp::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WCArenaBuyChallengeTimesRsp::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 WCArenaBuyChallengeTimesRsp::times() const {
  return times_;
}
inline void WCArenaBuyChallengeTimesRsp::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// optional uint32 all_times = 3;
inline bool WCArenaBuyChallengeTimesRsp::has_all_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WCArenaBuyChallengeTimesRsp::set_has_all_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_has_all_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_all_times() {
  all_times_ = 0u;
  clear_has_all_times();
}
inline ::google::protobuf::uint32 WCArenaBuyChallengeTimesRsp::all_times() const {
  return all_times_;
}
inline void WCArenaBuyChallengeTimesRsp::set_all_times(::google::protobuf::uint32 value) {
  set_has_all_times();
  all_times_ = value;
}

// optional int32 buyChallengeTimes = 4;
inline bool WCArenaBuyChallengeTimesRsp::has_buychallengetimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WCArenaBuyChallengeTimesRsp::set_has_buychallengetimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_has_buychallengetimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WCArenaBuyChallengeTimesRsp::clear_buychallengetimes() {
  buychallengetimes_ = 0;
  clear_has_buychallengetimes();
}
inline ::google::protobuf::int32 WCArenaBuyChallengeTimesRsp::buychallengetimes() const {
  return buychallengetimes_;
}
inline void WCArenaBuyChallengeTimesRsp::set_buychallengetimes(::google::protobuf::int32 value) {
  set_has_buychallengetimes();
  buychallengetimes_ = value;
}

// -------------------------------------------------------------------

// CWArenaUpdateOpponentInfoReq

// optional uint64 char_id = 1;
inline bool CWArenaUpdateOpponentInfoReq::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWArenaUpdateOpponentInfoReq::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWArenaUpdateOpponentInfoReq::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWArenaUpdateOpponentInfoReq::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::uint64 CWArenaUpdateOpponentInfoReq::char_id() const {
  return char_id_;
}
inline void CWArenaUpdateOpponentInfoReq::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
}

// optional bool can_miao_sha = 2;
inline bool CWArenaUpdateOpponentInfoReq::has_can_miao_sha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CWArenaUpdateOpponentInfoReq::set_has_can_miao_sha() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CWArenaUpdateOpponentInfoReq::clear_has_can_miao_sha() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CWArenaUpdateOpponentInfoReq::clear_can_miao_sha() {
  can_miao_sha_ = false;
  clear_has_can_miao_sha();
}
inline bool CWArenaUpdateOpponentInfoReq::can_miao_sha() const {
  return can_miao_sha_;
}
inline void CWArenaUpdateOpponentInfoReq::set_can_miao_sha(bool value) {
  set_has_can_miao_sha();
  can_miao_sha_ = value;
}

// -------------------------------------------------------------------

// WCArenaUpdateOpponentInfoRsp

// optional uint32 ret = 1;
inline bool WCArenaUpdateOpponentInfoRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaUpdateOpponentInfoRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaUpdateOpponentInfoRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaUpdateOpponentInfoRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCArenaUpdateOpponentInfoRsp::ret() const {
  return ret_;
}
inline void WCArenaUpdateOpponentInfoRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.ArenaRankInfo arenaRankInfo = 2;
inline int WCArenaUpdateOpponentInfoRsp::arenarankinfo_size() const {
  return arenarankinfo_.size();
}
inline void WCArenaUpdateOpponentInfoRsp::clear_arenarankinfo() {
  arenarankinfo_.Clear();
}
inline const ::proto_ff::ArenaRankInfo& WCArenaUpdateOpponentInfoRsp::arenarankinfo(int index) const {
  return arenarankinfo_.Get(index);
}
inline ::proto_ff::ArenaRankInfo* WCArenaUpdateOpponentInfoRsp::mutable_arenarankinfo(int index) {
  return arenarankinfo_.Mutable(index);
}
inline ::proto_ff::ArenaRankInfo* WCArenaUpdateOpponentInfoRsp::add_arenarankinfo() {
  return arenarankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >&
WCArenaUpdateOpponentInfoRsp::arenarankinfo() const {
  return arenarankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >*
WCArenaUpdateOpponentInfoRsp::mutable_arenarankinfo() {
  return &arenarankinfo_;
}

// optional uint32 rank = 3;
inline bool WCArenaUpdateOpponentInfoRsp::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WCArenaUpdateOpponentInfoRsp::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WCArenaUpdateOpponentInfoRsp::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WCArenaUpdateOpponentInfoRsp::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 WCArenaUpdateOpponentInfoRsp::rank() const {
  return rank_;
}
inline void WCArenaUpdateOpponentInfoRsp::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// -------------------------------------------------------------------

// CWArenaTopListReq

// -------------------------------------------------------------------

// WCArenaTopListRsp

// optional uint32 ret = 1;
inline bool WCArenaTopListRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaTopListRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaTopListRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaTopListRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCArenaTopListRsp::ret() const {
  return ret_;
}
inline void WCArenaTopListRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.ArenaRankInfo arenaRankInfo = 2;
inline int WCArenaTopListRsp::arenarankinfo_size() const {
  return arenarankinfo_.size();
}
inline void WCArenaTopListRsp::clear_arenarankinfo() {
  arenarankinfo_.Clear();
}
inline const ::proto_ff::ArenaRankInfo& WCArenaTopListRsp::arenarankinfo(int index) const {
  return arenarankinfo_.Get(index);
}
inline ::proto_ff::ArenaRankInfo* WCArenaTopListRsp::mutable_arenarankinfo(int index) {
  return arenarankinfo_.Mutable(index);
}
inline ::proto_ff::ArenaRankInfo* WCArenaTopListRsp::add_arenarankinfo() {
  return arenarankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >&
WCArenaTopListRsp::arenarankinfo() const {
  return arenarankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaRankInfo >*
WCArenaTopListRsp::mutable_arenarankinfo() {
  return &arenarankinfo_;
}

// -------------------------------------------------------------------

// CWArenaChallReq

// optional uint64 dstId = 1;
inline bool CWArenaChallReq::has_dstid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWArenaChallReq::set_has_dstid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWArenaChallReq::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWArenaChallReq::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 CWArenaChallReq::dstid() const {
  return dstid_;
}
inline void CWArenaChallReq::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional uint32 rankId = 2;
inline bool CWArenaChallReq::has_rankid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CWArenaChallReq::set_has_rankid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CWArenaChallReq::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CWArenaChallReq::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 CWArenaChallReq::rankid() const {
  return rankid_;
}
inline void CWArenaChallReq::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// optional uint32 type = 3;
inline bool CWArenaChallReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CWArenaChallReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CWArenaChallReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CWArenaChallReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CWArenaChallReq::type() const {
  return type_;
}
inline void CWArenaChallReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 chall_type = 4;
inline bool CWArenaChallReq::has_chall_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CWArenaChallReq::set_has_chall_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CWArenaChallReq::clear_has_chall_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CWArenaChallReq::clear_chall_type() {
  chall_type_ = 0u;
  clear_has_chall_type();
}
inline ::google::protobuf::uint32 CWArenaChallReq::chall_type() const {
  return chall_type_;
}
inline void CWArenaChallReq::set_chall_type(::google::protobuf::uint32 value) {
  set_has_chall_type();
  chall_type_ = value;
}

// -------------------------------------------------------------------

// WCArenaChallRsp

// optional uint32 ret = 1;
inline bool WCArenaChallRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaChallRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaChallRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaChallRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCArenaChallRsp::ret() const {
  return ret_;
}
inline void WCArenaChallRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ArenaAbandonReq

// -------------------------------------------------------------------

// ArenaSweepReq

// -------------------------------------------------------------------

// ArenaSweepRsp

// optional uint32 ret = 1;
inline bool ArenaSweepRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaSweepRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaSweepRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaSweepRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ArenaSweepRsp::ret() const {
  return ret_;
}
inline void ArenaSweepRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 challengeTimes = 2;
inline bool ArenaSweepRsp::has_challengetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaSweepRsp::set_has_challengetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaSweepRsp::clear_has_challengetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaSweepRsp::clear_challengetimes() {
  challengetimes_ = 0;
  clear_has_challengetimes();
}
inline ::google::protobuf::int32 ArenaSweepRsp::challengetimes() const {
  return challengetimes_;
}
inline void ArenaSweepRsp::set_challengetimes(::google::protobuf::int32 value) {
  set_has_challengetimes();
  challengetimes_ = value;
}

// optional int32 sweep_num = 3;
inline bool ArenaSweepRsp::has_sweep_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaSweepRsp::set_has_sweep_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaSweepRsp::clear_has_sweep_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaSweepRsp::clear_sweep_num() {
  sweep_num_ = 0;
  clear_has_sweep_num();
}
inline ::google::protobuf::int32 ArenaSweepRsp::sweep_num() const {
  return sweep_num_;
}
inline void ArenaSweepRsp::set_sweep_num(::google::protobuf::int32 value) {
  set_has_sweep_num();
  sweep_num_ = value;
}

// repeated .proto_ff.ComItem items = 4;
inline int ArenaSweepRsp::items_size() const {
  return items_.size();
}
inline void ArenaSweepRsp::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComItem& ArenaSweepRsp::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComItem* ArenaSweepRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComItem* ArenaSweepRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
ArenaSweepRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
ArenaSweepRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// WCArenaChallResult

// required uint32 ret = 1;
inline bool WCArenaChallResult::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaChallResult::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaChallResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaChallResult::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCArenaChallResult::ret() const {
  return ret_;
}
inline void WCArenaChallResult::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 rankId = 2;
inline bool WCArenaChallResult::has_rankid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WCArenaChallResult::set_has_rankid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WCArenaChallResult::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WCArenaChallResult::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 WCArenaChallResult::rankid() const {
  return rankid_;
}
inline void WCArenaChallResult::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// optional uint32 old_rankId = 3;
inline bool WCArenaChallResult::has_old_rankid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WCArenaChallResult::set_has_old_rankid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WCArenaChallResult::clear_has_old_rankid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WCArenaChallResult::clear_old_rankid() {
  old_rankid_ = 0u;
  clear_has_old_rankid();
}
inline ::google::protobuf::uint32 WCArenaChallResult::old_rankid() const {
  return old_rankid_;
}
inline void WCArenaChallResult::set_old_rankid(::google::protobuf::uint32 value) {
  set_has_old_rankid();
  old_rankid_ = value;
}

// repeated .proto_ff.ComItem items = 4;
inline int WCArenaChallResult::items_size() const {
  return items_.size();
}
inline void WCArenaChallResult::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComItem& WCArenaChallResult::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComItem* WCArenaChallResult::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComItem* WCArenaChallResult::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
WCArenaChallResult::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
WCArenaChallResult::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// WCArenaCampChallResult

// optional uint32 ret = 1;
inline bool WCArenaCampChallResult::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WCArenaCampChallResult::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WCArenaCampChallResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WCArenaCampChallResult::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 WCArenaCampChallResult::ret() const {
  return ret_;
}
inline void WCArenaCampChallResult::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WGArenaConfirmChall

// optional uint64 charId = 1;
inline bool WGArenaConfirmChall::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WGArenaConfirmChall::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WGArenaConfirmChall::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WGArenaConfirmChall::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 WGArenaConfirmChall::charid() const {
  return charid_;
}
inline void WGArenaConfirmChall::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint64 dstId = 2;
inline bool WGArenaConfirmChall::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WGArenaConfirmChall::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WGArenaConfirmChall::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WGArenaConfirmChall::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 WGArenaConfirmChall::dstid() const {
  return dstid_;
}
inline void WGArenaConfirmChall::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional uint32 type = 3;
inline bool WGArenaConfirmChall::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WGArenaConfirmChall::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WGArenaConfirmChall::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WGArenaConfirmChall::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 WGArenaConfirmChall::type() const {
  return type_;
}
inline void WGArenaConfirmChall::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GWArenaConfirmChall

// optional uint64 charId = 1;
inline bool GWArenaConfirmChall::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWArenaConfirmChall::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWArenaConfirmChall::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWArenaConfirmChall::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GWArenaConfirmChall::charid() const {
  return charid_;
}
inline void GWArenaConfirmChall::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint64 dstId = 2;
inline bool GWArenaConfirmChall::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWArenaConfirmChall::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWArenaConfirmChall::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWArenaConfirmChall::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 GWArenaConfirmChall::dstid() const {
  return dstid_;
}
inline void GWArenaConfirmChall::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional uint32 type = 4;
inline bool GWArenaConfirmChall::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWArenaConfirmChall::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWArenaConfirmChall::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWArenaConfirmChall::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GWArenaConfirmChall::type() const {
  return type_;
}
inline void GWArenaConfirmChall::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 ret = 5;
inline bool GWArenaConfirmChall::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GWArenaConfirmChall::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GWArenaConfirmChall::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GWArenaConfirmChall::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GWArenaConfirmChall::ret() const {
  return ret_;
}
inline void GWArenaConfirmChall::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// AreanLoadMirrorDataCallBack

// optional uint64 charId = 1;
inline bool AreanLoadMirrorDataCallBack::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AreanLoadMirrorDataCallBack::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AreanLoadMirrorDataCallBack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AreanLoadMirrorDataCallBack::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AreanLoadMirrorDataCallBack::charid() const {
  return charid_;
}
inline void AreanLoadMirrorDataCallBack::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint64 dstId = 2;
inline bool AreanLoadMirrorDataCallBack::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AreanLoadMirrorDataCallBack::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AreanLoadMirrorDataCallBack::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AreanLoadMirrorDataCallBack::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 AreanLoadMirrorDataCallBack::dstid() const {
  return dstid_;
}
inline void AreanLoadMirrorDataCallBack::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// -------------------------------------------------------------------

// GWArenaChallResult

// optional uint64 srcCharId = 1;
inline bool GWArenaChallResult::has_srccharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWArenaChallResult::set_has_srccharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWArenaChallResult::clear_has_srccharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWArenaChallResult::clear_srccharid() {
  srccharid_ = GOOGLE_ULONGLONG(0);
  clear_has_srccharid();
}
inline ::google::protobuf::uint64 GWArenaChallResult::srccharid() const {
  return srccharid_;
}
inline void GWArenaChallResult::set_srccharid(::google::protobuf::uint64 value) {
  set_has_srccharid();
  srccharid_ = value;
}

// optional uint32 srcScore = 2;
inline bool GWArenaChallResult::has_srcscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWArenaChallResult::set_has_srcscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWArenaChallResult::clear_has_srcscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWArenaChallResult::clear_srcscore() {
  srcscore_ = 0u;
  clear_has_srcscore();
}
inline ::google::protobuf::uint32 GWArenaChallResult::srcscore() const {
  return srcscore_;
}
inline void GWArenaChallResult::set_srcscore(::google::protobuf::uint32 value) {
  set_has_srcscore();
  srcscore_ = value;
}

// optional uint64 dstCharId = 3;
inline bool GWArenaChallResult::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWArenaChallResult::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWArenaChallResult::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWArenaChallResult::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 GWArenaChallResult::dstcharid() const {
  return dstcharid_;
}
inline void GWArenaChallResult::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
}

// optional uint32 type = 4;
inline bool GWArenaChallResult::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GWArenaChallResult::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GWArenaChallResult::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GWArenaChallResult::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GWArenaChallResult::type() const {
  return type_;
}
inline void GWArenaChallResult::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 ret = 5;
inline bool GWArenaChallResult::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GWArenaChallResult::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GWArenaChallResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GWArenaChallResult::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GWArenaChallResult::ret() const {
  return ret_;
}
inline void GWArenaChallResult::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 historyRankId = 6;
inline bool GWArenaChallResult::has_historyrankid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GWArenaChallResult::set_has_historyrankid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GWArenaChallResult::clear_has_historyrankid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GWArenaChallResult::clear_historyrankid() {
  historyrankid_ = 0u;
  clear_has_historyrankid();
}
inline ::google::protobuf::uint32 GWArenaChallResult::historyrankid() const {
  return historyrankid_;
}
inline void GWArenaChallResult::set_historyrankid(::google::protobuf::uint32 value) {
  set_has_historyrankid();
  historyrankid_ = value;
}

// optional uint32 continue_win = 7;
inline bool GWArenaChallResult::has_continue_win() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GWArenaChallResult::set_has_continue_win() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GWArenaChallResult::clear_has_continue_win() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GWArenaChallResult::clear_continue_win() {
  continue_win_ = 0u;
  clear_has_continue_win();
}
inline ::google::protobuf::uint32 GWArenaChallResult::continue_win() const {
  return continue_win_;
}
inline void GWArenaChallResult::set_continue_win(::google::protobuf::uint32 value) {
  set_has_continue_win();
  continue_win_ = value;
}

// optional uint64 begin_time = 8;
inline bool GWArenaChallResult::has_begin_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GWArenaChallResult::set_has_begin_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GWArenaChallResult::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GWArenaChallResult::clear_begin_time() {
  begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::uint64 GWArenaChallResult::begin_time() const {
  return begin_time_;
}
inline void GWArenaChallResult::set_begin_time(::google::protobuf::uint64 value) {
  set_has_begin_time();
  begin_time_ = value;
}

// optional int32 challenge_num = 9;
inline bool GWArenaChallResult::has_challenge_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GWArenaChallResult::set_has_challenge_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GWArenaChallResult::clear_has_challenge_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GWArenaChallResult::clear_challenge_num() {
  challenge_num_ = 0;
  clear_has_challenge_num();
}
inline ::google::protobuf::int32 GWArenaChallResult::challenge_num() const {
  return challenge_num_;
}
inline void GWArenaChallResult::set_challenge_num(::google::protobuf::int32 value) {
  set_has_challenge_num();
  challenge_num_ = value;
}

// optional int32 playerLv = 10;
inline bool GWArenaChallResult::has_playerlv() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GWArenaChallResult::set_has_playerlv() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GWArenaChallResult::clear_has_playerlv() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GWArenaChallResult::clear_playerlv() {
  playerlv_ = 0;
  clear_has_playerlv();
}
inline ::google::protobuf::int32 GWArenaChallResult::playerlv() const {
  return playerlv_;
}
inline void GWArenaChallResult::set_playerlv(::google::protobuf::int32 value) {
  set_has_playerlv();
  playerlv_ = value;
}

// -------------------------------------------------------------------

// GWArenaCampChallResult

// optional uint64 srcCharId = 1;
inline bool GWArenaCampChallResult::has_srccharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWArenaCampChallResult::set_has_srccharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWArenaCampChallResult::clear_has_srccharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWArenaCampChallResult::clear_srccharid() {
  srccharid_ = GOOGLE_ULONGLONG(0);
  clear_has_srccharid();
}
inline ::google::protobuf::uint64 GWArenaCampChallResult::srccharid() const {
  return srccharid_;
}
inline void GWArenaCampChallResult::set_srccharid(::google::protobuf::uint64 value) {
  set_has_srccharid();
  srccharid_ = value;
}

// optional uint32 ret = 2;
inline bool GWArenaCampChallResult::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWArenaCampChallResult::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWArenaCampChallResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWArenaCampChallResult::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GWArenaCampChallResult::ret() const {
  return ret_;
}
inline void GWArenaCampChallResult::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GWArenaRankChangeNotify

// optional uint64 charid = 1;
inline bool GWArenaRankChangeNotify::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWArenaRankChangeNotify::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWArenaRankChangeNotify::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWArenaRankChangeNotify::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GWArenaRankChangeNotify::charid() const {
  return charid_;
}
inline void GWArenaRankChangeNotify::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 rank = 2;
inline bool GWArenaRankChangeNotify::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWArenaRankChangeNotify::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWArenaRankChangeNotify::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWArenaRankChangeNotify::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GWArenaRankChangeNotify::rank() const {
  return rank_;
}
inline void GWArenaRankChangeNotify::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// -------------------------------------------------------------------

// GWArenaChallReq

// optional uint64 srcId = 1;
inline bool GWArenaChallReq::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWArenaChallReq::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWArenaChallReq::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWArenaChallReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 GWArenaChallReq::srcid() const {
  return srcid_;
}
inline void GWArenaChallReq::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional uint64 dstId = 2;
inline bool GWArenaChallReq::has_dstid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWArenaChallReq::set_has_dstid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWArenaChallReq::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWArenaChallReq::clear_dstid() {
  dstid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstid();
}
inline ::google::protobuf::uint64 GWArenaChallReq::dstid() const {
  return dstid_;
}
inline void GWArenaChallReq::set_dstid(::google::protobuf::uint64 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional uint32 rankId = 3;
inline bool GWArenaChallReq::has_rankid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWArenaChallReq::set_has_rankid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWArenaChallReq::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWArenaChallReq::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 GWArenaChallReq::rankid() const {
  return rankid_;
}
inline void GWArenaChallReq::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// optional uint32 type = 4;
inline bool GWArenaChallReq::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GWArenaChallReq::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GWArenaChallReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GWArenaChallReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GWArenaChallReq::type() const {
  return type_;
}
inline void GWArenaChallReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 chall_type = 5;
inline bool GWArenaChallReq::has_chall_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GWArenaChallReq::set_has_chall_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GWArenaChallReq::clear_has_chall_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GWArenaChallReq::clear_chall_type() {
  chall_type_ = 0u;
  clear_has_chall_type();
}
inline ::google::protobuf::uint32 GWArenaChallReq::chall_type() const {
  return chall_type_;
}
inline void GWArenaChallReq::set_chall_type(::google::protobuf::uint32 value) {
  set_has_chall_type();
  chall_type_ = value;
}

// optional uint32 can_miaosha = 6;
inline bool GWArenaChallReq::has_can_miaosha() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GWArenaChallReq::set_has_can_miaosha() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GWArenaChallReq::clear_has_can_miaosha() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GWArenaChallReq::clear_can_miaosha() {
  can_miaosha_ = 0u;
  clear_has_can_miaosha();
}
inline ::google::protobuf::uint32 GWArenaChallReq::can_miaosha() const {
  return can_miaosha_;
}
inline void GWArenaChallReq::set_can_miaosha(::google::protobuf::uint32 value) {
  set_has_can_miaosha();
  can_miaosha_ = value;
}

// -------------------------------------------------------------------

// C2LSendArenaReward

// optional uint64 charId = 1;
inline bool C2LSendArenaReward::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LSendArenaReward::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LSendArenaReward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LSendArenaReward::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 C2LSendArenaReward::charid() const {
  return charid_;
}
inline void C2LSendArenaReward::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// repeated .proto_ff.ComItem items = 2;
inline int C2LSendArenaReward::items_size() const {
  return items_.size();
}
inline void C2LSendArenaReward::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComItem& C2LSendArenaReward::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComItem* C2LSendArenaReward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComItem* C2LSendArenaReward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >&
C2LSendArenaReward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComItem >*
C2LSendArenaReward::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// C2LArenaGetChallResultReq

// -------------------------------------------------------------------

// L2CArenaGetChallResultRsp

// optional int32 ret = 1;
inline bool L2CArenaGetChallResultRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CArenaGetChallResultRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CArenaGetChallResultRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CArenaGetChallResultRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CArenaGetChallResultRsp::ret() const {
  return ret_;
}
inline void L2CArenaGetChallResultRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.ArenaChallResult chall_result = 2;
inline int L2CArenaGetChallResultRsp::chall_result_size() const {
  return chall_result_.size();
}
inline void L2CArenaGetChallResultRsp::clear_chall_result() {
  chall_result_.Clear();
}
inline const ::proto_ff::ArenaChallResult& L2CArenaGetChallResultRsp::chall_result(int index) const {
  return chall_result_.Get(index);
}
inline ::proto_ff::ArenaChallResult* L2CArenaGetChallResultRsp::mutable_chall_result(int index) {
  return chall_result_.Mutable(index);
}
inline ::proto_ff::ArenaChallResult* L2CArenaGetChallResultRsp::add_chall_result() {
  return chall_result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >&
L2CArenaGetChallResultRsp::chall_result() const {
  return chall_result_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArenaChallResult >*
L2CArenaGetChallResultRsp::mutable_chall_result() {
  return &chall_result_;
}

// -------------------------------------------------------------------

// C2LArenaGetChallRewardReq

// -------------------------------------------------------------------

// L2CArenaGetChallRewardRsp

// optional int32 ret = 1;
inline bool L2CArenaGetChallRewardRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CArenaGetChallRewardRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CArenaGetChallRewardRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CArenaGetChallRewardRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CArenaGetChallRewardRsp::ret() const {
  return ret_;
}
inline void L2CArenaGetChallRewardRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.ChallArenaReward reward = 2;
inline int L2CArenaGetChallRewardRsp::reward_size() const {
  return reward_.size();
}
inline void L2CArenaGetChallRewardRsp::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::ChallArenaReward& L2CArenaGetChallRewardRsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::ChallArenaReward* L2CArenaGetChallRewardRsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::ChallArenaReward* L2CArenaGetChallRewardRsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >&
L2CArenaGetChallRewardRsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >*
L2CArenaGetChallRewardRsp::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// L2CArenaChallRewardNotify

// optional int32 ret = 1;
inline bool L2CArenaChallRewardNotify::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CArenaChallRewardNotify::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CArenaChallRewardNotify::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CArenaChallRewardNotify::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CArenaChallRewardNotify::ret() const {
  return ret_;
}
inline void L2CArenaChallRewardNotify::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.ChallArenaReward reward = 2;
inline int L2CArenaChallRewardNotify::reward_size() const {
  return reward_.size();
}
inline void L2CArenaChallRewardNotify::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::ChallArenaReward& L2CArenaChallRewardNotify::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::ChallArenaReward* L2CArenaChallRewardNotify::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::ChallArenaReward* L2CArenaChallRewardNotify::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >&
L2CArenaChallRewardNotify::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >*
L2CArenaChallRewardNotify::mutable_reward() {
  return &reward_;
}

// optional int32 rank_id = 3;
inline bool L2CArenaChallRewardNotify::has_rank_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CArenaChallRewardNotify::set_has_rank_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CArenaChallRewardNotify::clear_has_rank_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CArenaChallRewardNotify::clear_rank_id() {
  rank_id_ = 0;
  clear_has_rank_id();
}
inline ::google::protobuf::int32 L2CArenaChallRewardNotify::rank_id() const {
  return rank_id_;
}
inline void L2CArenaChallRewardNotify::set_rank_id(::google::protobuf::int32 value) {
  set_has_rank_id();
  rank_id_ = value;
}

// optional int32 history_rank_id = 4;
inline bool L2CArenaChallRewardNotify::has_history_rank_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CArenaChallRewardNotify::set_has_history_rank_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CArenaChallRewardNotify::clear_has_history_rank_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CArenaChallRewardNotify::clear_history_rank_id() {
  history_rank_id_ = 0;
  clear_has_history_rank_id();
}
inline ::google::protobuf::int32 L2CArenaChallRewardNotify::history_rank_id() const {
  return history_rank_id_;
}
inline void L2CArenaChallRewardNotify::set_history_rank_id(::google::protobuf::int32 value) {
  set_has_history_rank_id();
  history_rank_id_ = value;
}

// -------------------------------------------------------------------

// C2LArenaReceiveChallRewardReq

// optional uint64 id = 1;
inline bool C2LArenaReceiveChallRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LArenaReceiveChallRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LArenaReceiveChallRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LArenaReceiveChallRewardReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 C2LArenaReceiveChallRewardReq::id() const {
  return id_;
}
inline void C2LArenaReceiveChallRewardReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// L2CArenaReceiveChallRewardRsp

// optional int32 ret = 1;
inline bool L2CArenaReceiveChallRewardRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CArenaReceiveChallRewardRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CArenaReceiveChallRewardRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CArenaReceiveChallRewardRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CArenaReceiveChallRewardRsp::ret() const {
  return ret_;
}
inline void L2CArenaReceiveChallRewardRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.ChallArenaReward reward = 2;
inline int L2CArenaReceiveChallRewardRsp::reward_size() const {
  return reward_.size();
}
inline void L2CArenaReceiveChallRewardRsp::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::ChallArenaReward& L2CArenaReceiveChallRewardRsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::ChallArenaReward* L2CArenaReceiveChallRewardRsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::ChallArenaReward* L2CArenaReceiveChallRewardRsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >&
L2CArenaReceiveChallRewardRsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ChallArenaReward >*
L2CArenaReceiveChallRewardRsp::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// C2LArenaDupBattleResult

// optional uint64 char_id = 1;
inline bool C2LArenaDupBattleResult::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LArenaDupBattleResult::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LArenaDupBattleResult::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LArenaDupBattleResult::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::uint64 C2LArenaDupBattleResult::char_id() const {
  return char_id_;
}
inline void C2LArenaDupBattleResult::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
}

// optional uint64 char_rank = 2;
inline bool C2LArenaDupBattleResult::has_char_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LArenaDupBattleResult::set_has_char_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LArenaDupBattleResult::clear_has_char_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LArenaDupBattleResult::clear_char_rank() {
  char_rank_ = GOOGLE_ULONGLONG(0);
  clear_has_char_rank();
}
inline ::google::protobuf::uint64 C2LArenaDupBattleResult::char_rank() const {
  return char_rank_;
}
inline void C2LArenaDupBattleResult::set_char_rank(::google::protobuf::uint64 value) {
  set_has_char_rank();
  char_rank_ = value;
}

// optional uint64 dst_id = 3;
inline bool C2LArenaDupBattleResult::has_dst_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LArenaDupBattleResult::set_has_dst_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LArenaDupBattleResult::clear_has_dst_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LArenaDupBattleResult::clear_dst_id() {
  dst_id_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_id();
}
inline ::google::protobuf::uint64 C2LArenaDupBattleResult::dst_id() const {
  return dst_id_;
}
inline void C2LArenaDupBattleResult::set_dst_id(::google::protobuf::uint64 value) {
  set_has_dst_id();
  dst_id_ = value;
}

// optional uint64 dst_rank = 4;
inline bool C2LArenaDupBattleResult::has_dst_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LArenaDupBattleResult::set_has_dst_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LArenaDupBattleResult::clear_has_dst_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LArenaDupBattleResult::clear_dst_rank() {
  dst_rank_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_rank();
}
inline ::google::protobuf::uint64 C2LArenaDupBattleResult::dst_rank() const {
  return dst_rank_;
}
inline void C2LArenaDupBattleResult::set_dst_rank(::google::protobuf::uint64 value) {
  set_has_dst_rank();
  dst_rank_ = value;
}

// optional uint32 result = 8;
inline bool C2LArenaDupBattleResult::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LArenaDupBattleResult::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LArenaDupBattleResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LArenaDupBattleResult::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 C2LArenaDupBattleResult::result() const {
  return result_;
}
inline void C2LArenaDupBattleResult::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// C2LArenaSkipBattleReq

// -------------------------------------------------------------------

// L2CArenaSkipBattleRsp

// optional int32 ret = 1;
inline bool L2CArenaSkipBattleRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CArenaSkipBattleRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CArenaSkipBattleRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CArenaSkipBattleRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CArenaSkipBattleRsp::ret() const {
  return ret_;
}
inline void L2CArenaSkipBattleRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::ARENA_CHALL_RESULT_E>() {
  return ::proto_ff::ARENA_CHALL_RESULT_E_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CArena_2eproto__INCLUDED
