// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gm5Help.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gm5Help.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* gm5Helpcons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gm5Helpcons_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_gm5Helpcons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_gm5Helpcons_reflection_ = NULL;
const ::google::protobuf::Descriptor* gm5HelprewardrewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gm5HelprewardrewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* gm5Helpreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gm5Helpreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_gm5Helpreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_gm5Helpreward_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gm5Help_2eproto() {
  protobuf_AddDesc_gm5Help_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gm5Help.proto");
  GOOGLE_CHECK(file != NULL);
  gm5Helpcons_descriptor_ = file->message_type(0);
  static const int gm5Helpcons_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpcons, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpcons, constantdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpcons, stringdata_),
  };
  gm5Helpcons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      gm5Helpcons_descriptor_,
      gm5Helpcons::default_instance_,
      gm5Helpcons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpcons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpcons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(gm5Helpcons));
  Sheet_gm5Helpcons_descriptor_ = file->message_type(1);
  static const int Sheet_gm5Helpcons_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_gm5Helpcons, gm5helpcons_list_),
  };
  Sheet_gm5Helpcons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_gm5Helpcons_descriptor_,
      Sheet_gm5Helpcons::default_instance_,
      Sheet_gm5Helpcons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_gm5Helpcons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_gm5Helpcons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_gm5Helpcons));
  gm5HelprewardrewardDesc_descriptor_ = file->message_type(2);
  static const int gm5HelprewardrewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5HelprewardrewardDesc, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5HelprewardrewardDesc, num_),
  };
  gm5HelprewardrewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      gm5HelprewardrewardDesc_descriptor_,
      gm5HelprewardrewardDesc::default_instance_,
      gm5HelprewardrewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5HelprewardrewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5HelprewardrewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(gm5HelprewardrewardDesc));
  gm5Helpreward_descriptor_ = file->message_type(3);
  static const int gm5Helpreward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpreward, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpreward, rewardtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpreward, getneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpreward, reward_),
  };
  gm5Helpreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      gm5Helpreward_descriptor_,
      gm5Helpreward::default_instance_,
      gm5Helpreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gm5Helpreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(gm5Helpreward));
  Sheet_gm5Helpreward_descriptor_ = file->message_type(4);
  static const int Sheet_gm5Helpreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_gm5Helpreward, gm5helpreward_list_),
  };
  Sheet_gm5Helpreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_gm5Helpreward_descriptor_,
      Sheet_gm5Helpreward::default_instance_,
      Sheet_gm5Helpreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_gm5Helpreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_gm5Helpreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_gm5Helpreward));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gm5Help_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    gm5Helpcons_descriptor_, &gm5Helpcons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_gm5Helpcons_descriptor_, &Sheet_gm5Helpcons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    gm5HelprewardrewardDesc_descriptor_, &gm5HelprewardrewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    gm5Helpreward_descriptor_, &gm5Helpreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_gm5Helpreward_descriptor_, &Sheet_gm5Helpreward::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gm5Help_2eproto() {
  delete gm5Helpcons::default_instance_;
  delete gm5Helpcons_reflection_;
  delete Sheet_gm5Helpcons::default_instance_;
  delete Sheet_gm5Helpcons_reflection_;
  delete gm5HelprewardrewardDesc::default_instance_;
  delete gm5HelprewardrewardDesc_reflection_;
  delete gm5Helpreward::default_instance_;
  delete gm5Helpreward_reflection_;
  delete Sheet_gm5Helpreward::default_instance_;
  delete Sheet_gm5Helpreward_reflection_;
}

void protobuf_AddDesc_gm5Help_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rgm5Help.proto\022\010proto_ff\032\025yd_fieldoptio"
    "ns.proto\"p\n\013gm5Helpcons\022\022\n\002id\030\001 \001(\005B\006\302\377\024"
    "\002ID\022 \n\014constantdata\030\002 \001(\003B\n\302\377\024\006\346\225\260\346\215\256\022+\n"
    "\nstringdata\030\003 \001(\tB\027\302\377\024\017\345\255\227\347\254\246\344\270\262\346\225\260\346\215\256\220\301"
    "\024<\"J\n\021Sheet_gm5Helpcons\0225\n\020gm5Helpcons_L"
    "ist\030\001 \003(\0132\025.proto_ff.gm5HelpconsB\004\210\301\024\024\"V"
    "\n\027gm5HelprewardrewardDesc\022\034\n\006ItemId\030\001 \001("
    "\003B\014\302\377\024\010\351\201\223\345\205\267ID\022\035\n\003num\030\002 \001(\005B\020\302\377\024\014\351\201\223\345\205\267"
    "\346\225\260\351\207\217\"\257\001\n\rgm5Helpreward\022\022\n\002id\030\001 \001(\005B\006\302\377"
    "\024\002ID\022$\n\nrewardType\030\002 \001(\005B\020\302\377\024\014\345\245\226\345\212\261\347\261\273\345"
    "\236\213\022!\n\007getNeed\030\003 \001(\005B\020\302\377\024\014\351\242\206\345\217\226\345\217\202\346\225\260\022A\n"
    "\006reward\030\004 \003(\0132!.proto_ff.gm5Helprewardre"
    "wardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\004\"P\n\023Sheet_gm5Hel"
    "preward\0229\n\022gm5Helpreward_List\030\001 \003(\0132\027.pr"
    "oto_ff.gm5HelprewardB\004\210\301\024\024", 586);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gm5Help.proto", &protobuf_RegisterTypes);
  gm5Helpcons::default_instance_ = new gm5Helpcons();
  Sheet_gm5Helpcons::default_instance_ = new Sheet_gm5Helpcons();
  gm5HelprewardrewardDesc::default_instance_ = new gm5HelprewardrewardDesc();
  gm5Helpreward::default_instance_ = new gm5Helpreward();
  Sheet_gm5Helpreward::default_instance_ = new Sheet_gm5Helpreward();
  gm5Helpcons::default_instance_->InitAsDefaultInstance();
  Sheet_gm5Helpcons::default_instance_->InitAsDefaultInstance();
  gm5HelprewardrewardDesc::default_instance_->InitAsDefaultInstance();
  gm5Helpreward::default_instance_->InitAsDefaultInstance();
  Sheet_gm5Helpreward::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gm5Help_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gm5Help_2eproto {
  StaticDescriptorInitializer_gm5Help_2eproto() {
    protobuf_AddDesc_gm5Help_2eproto();
  }
} static_descriptor_initializer_gm5Help_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int gm5Helpcons::kIdFieldNumber;
const int gm5Helpcons::kConstantdataFieldNumber;
const int gm5Helpcons::kStringdataFieldNumber;
#endif  // !_MSC_VER

gm5Helpcons::gm5Helpcons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void gm5Helpcons::InitAsDefaultInstance() {
}

gm5Helpcons::gm5Helpcons(const gm5Helpcons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void gm5Helpcons::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  constantdata_ = GOOGLE_LONGLONG(0);
  stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gm5Helpcons::~gm5Helpcons() {
  SharedDtor();
}

void gm5Helpcons::SharedDtor() {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    delete stringdata_;
  }
  if (this != default_instance_) {
  }
}

void gm5Helpcons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gm5Helpcons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gm5Helpcons_descriptor_;
}

const gm5Helpcons& gm5Helpcons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gm5Help_2eproto();
  return *default_instance_;
}

gm5Helpcons* gm5Helpcons::default_instance_ = NULL;

gm5Helpcons* gm5Helpcons::New() const {
  return new gm5Helpcons;
}

void gm5Helpcons::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    constantdata_ = GOOGLE_LONGLONG(0);
    if (has_stringdata()) {
      if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
        stringdata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool gm5Helpcons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_constantdata;
        break;
      }

      // optional int64 constantdata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_constantdata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &constantdata_)));
          set_has_constantdata();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_stringdata;
        break;
      }

      // optional string stringdata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stringdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stringdata().data(), this->stringdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void gm5Helpcons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 constantdata = 2;
  if (has_constantdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->constantdata(), output);
  }

  // optional string stringdata = 3;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stringdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* gm5Helpcons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int64 constantdata = 2;
  if (has_constantdata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->constantdata(), target);
  }

  // optional string stringdata = 3;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stringdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int gm5Helpcons::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int64 constantdata = 2;
    if (has_constantdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->constantdata());
    }

    // optional string stringdata = 3;
    if (has_stringdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gm5Helpcons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const gm5Helpcons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gm5Helpcons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gm5Helpcons::MergeFrom(const gm5Helpcons& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_constantdata()) {
      set_constantdata(from.constantdata());
    }
    if (from.has_stringdata()) {
      set_stringdata(from.stringdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void gm5Helpcons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gm5Helpcons::CopyFrom(const gm5Helpcons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gm5Helpcons::IsInitialized() const {

  return true;
}

void gm5Helpcons::Swap(gm5Helpcons* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(constantdata_, other->constantdata_);
    std::swap(stringdata_, other->stringdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata gm5Helpcons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gm5Helpcons_descriptor_;
  metadata.reflection = gm5Helpcons_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_gm5Helpcons::kGm5HelpconsListFieldNumber;
#endif  // !_MSC_VER

Sheet_gm5Helpcons::Sheet_gm5Helpcons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_gm5Helpcons::InitAsDefaultInstance() {
}

Sheet_gm5Helpcons::Sheet_gm5Helpcons(const Sheet_gm5Helpcons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_gm5Helpcons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_gm5Helpcons::~Sheet_gm5Helpcons() {
  SharedDtor();
}

void Sheet_gm5Helpcons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_gm5Helpcons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_gm5Helpcons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_gm5Helpcons_descriptor_;
}

const Sheet_gm5Helpcons& Sheet_gm5Helpcons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gm5Help_2eproto();
  return *default_instance_;
}

Sheet_gm5Helpcons* Sheet_gm5Helpcons::default_instance_ = NULL;

Sheet_gm5Helpcons* Sheet_gm5Helpcons::New() const {
  return new Sheet_gm5Helpcons;
}

void Sheet_gm5Helpcons::Clear() {
  gm5helpcons_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_gm5Helpcons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.gm5Helpcons gm5Helpcons_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gm5Helpcons_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gm5helpcons_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_gm5Helpcons_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_gm5Helpcons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.gm5Helpcons gm5Helpcons_List = 1;
  for (int i = 0; i < this->gm5helpcons_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gm5helpcons_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_gm5Helpcons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.gm5Helpcons gm5Helpcons_List = 1;
  for (int i = 0; i < this->gm5helpcons_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gm5helpcons_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_gm5Helpcons::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.gm5Helpcons gm5Helpcons_List = 1;
  total_size += 1 * this->gm5helpcons_list_size();
  for (int i = 0; i < this->gm5helpcons_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gm5helpcons_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_gm5Helpcons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_gm5Helpcons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_gm5Helpcons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_gm5Helpcons::MergeFrom(const Sheet_gm5Helpcons& from) {
  GOOGLE_CHECK_NE(&from, this);
  gm5helpcons_list_.MergeFrom(from.gm5helpcons_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_gm5Helpcons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_gm5Helpcons::CopyFrom(const Sheet_gm5Helpcons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_gm5Helpcons::IsInitialized() const {

  return true;
}

void Sheet_gm5Helpcons::Swap(Sheet_gm5Helpcons* other) {
  if (other != this) {
    gm5helpcons_list_.Swap(&other->gm5helpcons_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_gm5Helpcons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_gm5Helpcons_descriptor_;
  metadata.reflection = Sheet_gm5Helpcons_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int gm5HelprewardrewardDesc::kItemIdFieldNumber;
const int gm5HelprewardrewardDesc::kNumFieldNumber;
#endif  // !_MSC_VER

gm5HelprewardrewardDesc::gm5HelprewardrewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void gm5HelprewardrewardDesc::InitAsDefaultInstance() {
}

gm5HelprewardrewardDesc::gm5HelprewardrewardDesc(const gm5HelprewardrewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void gm5HelprewardrewardDesc::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gm5HelprewardrewardDesc::~gm5HelprewardrewardDesc() {
  SharedDtor();
}

void gm5HelprewardrewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void gm5HelprewardrewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gm5HelprewardrewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gm5HelprewardrewardDesc_descriptor_;
}

const gm5HelprewardrewardDesc& gm5HelprewardrewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gm5Help_2eproto();
  return *default_instance_;
}

gm5HelprewardrewardDesc* gm5HelprewardrewardDesc::default_instance_ = NULL;

gm5HelprewardrewardDesc* gm5HelprewardrewardDesc::New() const {
  return new gm5HelprewardrewardDesc;
}

void gm5HelprewardrewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool gm5HelprewardrewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ItemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void gm5HelprewardrewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* gm5HelprewardrewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int gm5HelprewardrewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gm5HelprewardrewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const gm5HelprewardrewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gm5HelprewardrewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gm5HelprewardrewardDesc::MergeFrom(const gm5HelprewardrewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void gm5HelprewardrewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gm5HelprewardrewardDesc::CopyFrom(const gm5HelprewardrewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gm5HelprewardrewardDesc::IsInitialized() const {

  return true;
}

void gm5HelprewardrewardDesc::Swap(gm5HelprewardrewardDesc* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata gm5HelprewardrewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gm5HelprewardrewardDesc_descriptor_;
  metadata.reflection = gm5HelprewardrewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int gm5Helpreward::kIdFieldNumber;
const int gm5Helpreward::kRewardTypeFieldNumber;
const int gm5Helpreward::kGetNeedFieldNumber;
const int gm5Helpreward::kRewardFieldNumber;
#endif  // !_MSC_VER

gm5Helpreward::gm5Helpreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void gm5Helpreward::InitAsDefaultInstance() {
}

gm5Helpreward::gm5Helpreward(const gm5Helpreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void gm5Helpreward::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  rewardtype_ = 0;
  getneed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gm5Helpreward::~gm5Helpreward() {
  SharedDtor();
}

void gm5Helpreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void gm5Helpreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gm5Helpreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gm5Helpreward_descriptor_;
}

const gm5Helpreward& gm5Helpreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gm5Help_2eproto();
  return *default_instance_;
}

gm5Helpreward* gm5Helpreward::default_instance_ = NULL;

gm5Helpreward* gm5Helpreward::New() const {
  return new gm5Helpreward;
}

void gm5Helpreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    rewardtype_ = 0;
    getneed_ = 0;
  }
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool gm5Helpreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rewardType;
        break;
      }

      // optional int32 rewardType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardtype_)));
          set_has_rewardtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_getNeed;
        break;
      }

      // optional int32 getNeed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_getNeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getneed_)));
          set_has_getneed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_reward;
        break;
      }

      // repeated .proto_ff.gm5HelprewardrewardDesc reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void gm5Helpreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 rewardType = 2;
  if (has_rewardtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rewardtype(), output);
  }

  // optional int32 getNeed = 3;
  if (has_getneed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->getneed(), output);
  }

  // repeated .proto_ff.gm5HelprewardrewardDesc reward = 4;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* gm5Helpreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 rewardType = 2;
  if (has_rewardtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rewardtype(), target);
  }

  // optional int32 getNeed = 3;
  if (has_getneed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->getneed(), target);
  }

  // repeated .proto_ff.gm5HelprewardrewardDesc reward = 4;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int gm5Helpreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 rewardType = 2;
    if (has_rewardtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardtype());
    }

    // optional int32 getNeed = 3;
    if (has_getneed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getneed());
    }

  }
  // repeated .proto_ff.gm5HelprewardrewardDesc reward = 4;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gm5Helpreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const gm5Helpreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gm5Helpreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gm5Helpreward::MergeFrom(const gm5Helpreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_rewardtype()) {
      set_rewardtype(from.rewardtype());
    }
    if (from.has_getneed()) {
      set_getneed(from.getneed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void gm5Helpreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gm5Helpreward::CopyFrom(const gm5Helpreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gm5Helpreward::IsInitialized() const {

  return true;
}

void gm5Helpreward::Swap(gm5Helpreward* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(rewardtype_, other->rewardtype_);
    std::swap(getneed_, other->getneed_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata gm5Helpreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gm5Helpreward_descriptor_;
  metadata.reflection = gm5Helpreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_gm5Helpreward::kGm5HelprewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_gm5Helpreward::Sheet_gm5Helpreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_gm5Helpreward::InitAsDefaultInstance() {
}

Sheet_gm5Helpreward::Sheet_gm5Helpreward(const Sheet_gm5Helpreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_gm5Helpreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_gm5Helpreward::~Sheet_gm5Helpreward() {
  SharedDtor();
}

void Sheet_gm5Helpreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_gm5Helpreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_gm5Helpreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_gm5Helpreward_descriptor_;
}

const Sheet_gm5Helpreward& Sheet_gm5Helpreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gm5Help_2eproto();
  return *default_instance_;
}

Sheet_gm5Helpreward* Sheet_gm5Helpreward::default_instance_ = NULL;

Sheet_gm5Helpreward* Sheet_gm5Helpreward::New() const {
  return new Sheet_gm5Helpreward;
}

void Sheet_gm5Helpreward::Clear() {
  gm5helpreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_gm5Helpreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.gm5Helpreward gm5Helpreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gm5Helpreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gm5helpreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_gm5Helpreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_gm5Helpreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.gm5Helpreward gm5Helpreward_List = 1;
  for (int i = 0; i < this->gm5helpreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gm5helpreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_gm5Helpreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.gm5Helpreward gm5Helpreward_List = 1;
  for (int i = 0; i < this->gm5helpreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gm5helpreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_gm5Helpreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.gm5Helpreward gm5Helpreward_List = 1;
  total_size += 1 * this->gm5helpreward_list_size();
  for (int i = 0; i < this->gm5helpreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gm5helpreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_gm5Helpreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_gm5Helpreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_gm5Helpreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_gm5Helpreward::MergeFrom(const Sheet_gm5Helpreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  gm5helpreward_list_.MergeFrom(from.gm5helpreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_gm5Helpreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_gm5Helpreward::CopyFrom(const Sheet_gm5Helpreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_gm5Helpreward::IsInitialized() const {

  return true;
}

void Sheet_gm5Helpreward::Swap(Sheet_gm5Helpreward* other) {
  if (other != this) {
    gm5helpreward_list_.Swap(&other->gm5helpreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_gm5Helpreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_gm5Helpreward_descriptor_;
  metadata.reflection = Sheet_gm5Helpreward_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
