// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: field.proto

#ifndef PROTOBUF_field_2eproto__INCLUDED
#define PROTOBUF_field_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_field_2eproto();
void protobuf_AssignDesc_field_2eproto();
void protobuf_ShutdownFile_field_2eproto();

class fieldfieldfieldDesc;
class fieldfield;
class Sheet_fieldfield;
class fieldreikirefineDesc;
class fieldreiki;
class Sheet_fieldreiki;
class fieldexp;
class Sheet_fieldexp;
class fieldvalue;
class Sheet_fieldvalue;
class fieldexpand;
class Sheet_fieldexpand;
class fieldstong;
class Sheet_fieldstong;

// ===================================================================

class fieldfieldfieldDesc : public ::google::protobuf::Message {
 public:
  fieldfieldfieldDesc();
  virtual ~fieldfieldfieldDesc();

  fieldfieldfieldDesc(const fieldfieldfieldDesc& from);

  inline fieldfieldfieldDesc& operator=(const fieldfieldfieldDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldfieldfieldDesc& default_instance();

  void Swap(fieldfieldfieldDesc* other);

  // implements Message ----------------------------------------------

  fieldfieldfieldDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldfieldfieldDesc& from);
  void MergeFrom(const fieldfieldfieldDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 att = 1;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 1;
  inline ::google::protobuf::int32 att() const;
  inline void set_att(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fieldfieldfieldDesc)
 private:
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldfieldfieldDesc* default_instance_;
};
// -------------------------------------------------------------------

class fieldfield : public ::google::protobuf::Message {
 public:
  fieldfield();
  virtual ~fieldfield();

  fieldfield(const fieldfield& from);

  inline fieldfield& operator=(const fieldfield& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldfield& default_instance();

  void Swap(fieldfield* other);

  // implements Message ----------------------------------------------

  fieldfield* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldfield& from);
  void MergeFrom(const fieldfield& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // repeated .proto_ff.fieldfieldfieldDesc field = 4;
  inline int field_size() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 4;
  inline const ::proto_ff::fieldfieldfieldDesc& field(int index) const;
  inline ::proto_ff::fieldfieldfieldDesc* mutable_field(int index);
  inline ::proto_ff::fieldfieldfieldDesc* add_field();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfieldfieldDesc >&
      field() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfieldfieldDesc >*
      mutable_field();

  // repeated int64 skill = 5;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 5;
  inline ::google::protobuf::int64 skill(int index) const;
  inline void set_skill(int index, ::google::protobuf::int64 value);
  inline void add_skill(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_skill();

  // repeated int32 num = 6;
  inline int num_size() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::int32 num(int index) const;
  inline void set_num(int index, ::google::protobuf::int32 value);
  inline void add_num(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_num();

  // repeated int32 pos = 7;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 7;
  inline ::google::protobuf::int32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::int32 value);
  inline void add_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.fieldfield)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfieldfieldDesc > field_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;
  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldfield* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fieldfield : public ::google::protobuf::Message {
 public:
  Sheet_fieldfield();
  virtual ~Sheet_fieldfield();

  Sheet_fieldfield(const Sheet_fieldfield& from);

  inline Sheet_fieldfield& operator=(const Sheet_fieldfield& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fieldfield& default_instance();

  void Swap(Sheet_fieldfield* other);

  // implements Message ----------------------------------------------

  Sheet_fieldfield* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fieldfield& from);
  void MergeFrom(const Sheet_fieldfield& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fieldfield fieldfield_List = 1;
  inline int fieldfield_list_size() const;
  inline void clear_fieldfield_list();
  static const int kFieldfieldListFieldNumber = 1;
  inline const ::proto_ff::fieldfield& fieldfield_list(int index) const;
  inline ::proto_ff::fieldfield* mutable_fieldfield_list(int index);
  inline ::proto_ff::fieldfield* add_fieldfield_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfield >&
      fieldfield_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfield >*
      mutable_fieldfield_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fieldfield)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfield > fieldfield_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fieldfield* default_instance_;
};
// -------------------------------------------------------------------

class fieldreikirefineDesc : public ::google::protobuf::Message {
 public:
  fieldreikirefineDesc();
  virtual ~fieldreikirefineDesc();

  fieldreikirefineDesc(const fieldreikirefineDesc& from);

  inline fieldreikirefineDesc& operator=(const fieldreikirefineDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldreikirefineDesc& default_instance();

  void Swap(fieldreikirefineDesc* other);

  // implements Message ----------------------------------------------

  fieldreikirefineDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldreikirefineDesc& from);
  void MergeFrom(const fieldreikirefineDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fieldreikirefineDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldreikirefineDesc* default_instance_;
};
// -------------------------------------------------------------------

class fieldreiki : public ::google::protobuf::Message {
 public:
  fieldreiki();
  virtual ~fieldreiki();

  fieldreiki(const fieldreiki& from);

  inline fieldreiki& operator=(const fieldreiki& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldreiki& default_instance();

  void Swap(fieldreiki* other);

  // implements Message ----------------------------------------------

  fieldreiki* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldreiki& from);
  void MergeFrom(const fieldreiki& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 field = 4;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 4;
  inline ::google::protobuf::int32 field() const;
  inline void set_field(::google::protobuf::int32 value);

  // optional int32 Lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 star = 6;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 6;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional string refineAttribute = 7;
  inline bool has_refineattribute() const;
  inline void clear_refineattribute();
  static const int kRefineAttributeFieldNumber = 7;
  inline const ::std::string& refineattribute() const;
  inline void set_refineattribute(const ::std::string& value);
  inline void set_refineattribute(const char* value);
  inline void set_refineattribute(const char* value, size_t size);
  inline ::std::string* mutable_refineattribute();
  inline ::std::string* release_refineattribute();
  inline void set_allocated_refineattribute(::std::string* refineattribute);

  // optional string refineAttributeValue = 8;
  inline bool has_refineattributevalue() const;
  inline void clear_refineattributevalue();
  static const int kRefineAttributeValueFieldNumber = 8;
  inline const ::std::string& refineattributevalue() const;
  inline void set_refineattributevalue(const ::std::string& value);
  inline void set_refineattributevalue(const char* value);
  inline void set_refineattributevalue(const char* value, size_t size);
  inline ::std::string* mutable_refineattributevalue();
  inline ::std::string* release_refineattributevalue();
  inline void set_allocated_refineattributevalue(::std::string* refineattributevalue);

  // optional int32 blueStarNum = 9;
  inline bool has_bluestarnum() const;
  inline void clear_bluestarnum();
  static const int kBlueStarNumFieldNumber = 9;
  inline ::google::protobuf::int32 bluestarnum() const;
  inline void set_bluestarnum(::google::protobuf::int32 value);

  // optional string blueStar_type = 10;
  inline bool has_bluestar_type() const;
  inline void clear_bluestar_type();
  static const int kBlueStarTypeFieldNumber = 10;
  inline const ::std::string& bluestar_type() const;
  inline void set_bluestar_type(const ::std::string& value);
  inline void set_bluestar_type(const char* value);
  inline void set_bluestar_type(const char* value, size_t size);
  inline ::std::string* mutable_bluestar_type();
  inline ::std::string* release_bluestar_type();
  inline void set_allocated_bluestar_type(::std::string* bluestar_type);

  // optional string blueStar_value = 11;
  inline bool has_bluestar_value() const;
  inline void clear_bluestar_value();
  static const int kBlueStarValueFieldNumber = 11;
  inline const ::std::string& bluestar_value() const;
  inline void set_bluestar_value(const ::std::string& value);
  inline void set_bluestar_value(const char* value);
  inline void set_bluestar_value(const char* value, size_t size);
  inline ::std::string* mutable_bluestar_value();
  inline ::std::string* release_bluestar_value();
  inline void set_allocated_bluestar_value(::std::string* bluestar_value);

  // optional int32 exp = 12;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 12;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int64 link = 13;
  inline bool has_link() const;
  inline void clear_link();
  static const int kLinkFieldNumber = 13;
  inline ::google::protobuf::int64 link() const;
  inline void set_link(::google::protobuf::int64 value);

  // repeated .proto_ff.fieldreikirefineDesc refine = 14;
  inline int refine_size() const;
  inline void clear_refine();
  static const int kRefineFieldNumber = 14;
  inline const ::proto_ff::fieldreikirefineDesc& refine(int index) const;
  inline ::proto_ff::fieldreikirefineDesc* mutable_refine(int index);
  inline ::proto_ff::fieldreikirefineDesc* add_refine();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreikirefineDesc >&
      refine() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreikirefineDesc >*
      mutable_refine();

  // @@protoc_insertion_point(class_scope:proto_ff.fieldreiki)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_refineattribute();
  inline void clear_has_refineattribute();
  inline void set_has_refineattributevalue();
  inline void clear_has_refineattributevalue();
  inline void set_has_bluestarnum();
  inline void clear_has_bluestarnum();
  inline void set_has_bluestar_type();
  inline void clear_has_bluestar_type();
  inline void set_has_bluestar_value();
  inline void clear_has_bluestar_value();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_link();
  inline void clear_has_link();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 field_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 star_;
  ::std::string* refineattribute_;
  ::std::string* refineattributevalue_;
  ::std::string* bluestar_type_;
  ::google::protobuf::int32 bluestarnum_;
  ::google::protobuf::int32 exp_;
  ::std::string* bluestar_value_;
  ::google::protobuf::int64 link_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreikirefineDesc > refine_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldreiki* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fieldreiki : public ::google::protobuf::Message {
 public:
  Sheet_fieldreiki();
  virtual ~Sheet_fieldreiki();

  Sheet_fieldreiki(const Sheet_fieldreiki& from);

  inline Sheet_fieldreiki& operator=(const Sheet_fieldreiki& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fieldreiki& default_instance();

  void Swap(Sheet_fieldreiki* other);

  // implements Message ----------------------------------------------

  Sheet_fieldreiki* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fieldreiki& from);
  void MergeFrom(const Sheet_fieldreiki& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fieldreiki fieldreiki_List = 1;
  inline int fieldreiki_list_size() const;
  inline void clear_fieldreiki_list();
  static const int kFieldreikiListFieldNumber = 1;
  inline const ::proto_ff::fieldreiki& fieldreiki_list(int index) const;
  inline ::proto_ff::fieldreiki* mutable_fieldreiki_list(int index);
  inline ::proto_ff::fieldreiki* add_fieldreiki_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreiki >&
      fieldreiki_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreiki >*
      mutable_fieldreiki_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fieldreiki)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreiki > fieldreiki_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fieldreiki* default_instance_;
};
// -------------------------------------------------------------------

class fieldexp : public ::google::protobuf::Message {
 public:
  fieldexp();
  virtual ~fieldexp();

  fieldexp(const fieldexp& from);

  inline fieldexp& operator=(const fieldexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldexp& default_instance();

  void Swap(fieldexp* other);

  // implements Message ----------------------------------------------

  fieldexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldexp& from);
  void MergeFrom(const fieldexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fieldexp)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fieldexp : public ::google::protobuf::Message {
 public:
  Sheet_fieldexp();
  virtual ~Sheet_fieldexp();

  Sheet_fieldexp(const Sheet_fieldexp& from);

  inline Sheet_fieldexp& operator=(const Sheet_fieldexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fieldexp& default_instance();

  void Swap(Sheet_fieldexp* other);

  // implements Message ----------------------------------------------

  Sheet_fieldexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fieldexp& from);
  void MergeFrom(const Sheet_fieldexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fieldexp fieldexp_List = 1;
  inline int fieldexp_list_size() const;
  inline void clear_fieldexp_list();
  static const int kFieldexpListFieldNumber = 1;
  inline const ::proto_ff::fieldexp& fieldexp_list(int index) const;
  inline ::proto_ff::fieldexp* mutable_fieldexp_list(int index);
  inline ::proto_ff::fieldexp* add_fieldexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexp >&
      fieldexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexp >*
      mutable_fieldexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fieldexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexp > fieldexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fieldexp* default_instance_;
};
// -------------------------------------------------------------------

class fieldvalue : public ::google::protobuf::Message {
 public:
  fieldvalue();
  virtual ~fieldvalue();

  fieldvalue(const fieldvalue& from);

  inline fieldvalue& operator=(const fieldvalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldvalue& default_instance();

  void Swap(fieldvalue* other);

  // implements Message ----------------------------------------------

  fieldvalue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldvalue& from);
  void MergeFrom(const fieldvalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated int32 lvValue = 2;
  inline int lvvalue_size() const;
  inline void clear_lvvalue();
  static const int kLvValueFieldNumber = 2;
  inline ::google::protobuf::int32 lvvalue(int index) const;
  inline void set_lvvalue(int index, ::google::protobuf::int32 value);
  inline void add_lvvalue(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lvvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lvvalue();

  // @@protoc_insertion_point(class_scope:proto_ff.fieldvalue)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lvvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldvalue* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fieldvalue : public ::google::protobuf::Message {
 public:
  Sheet_fieldvalue();
  virtual ~Sheet_fieldvalue();

  Sheet_fieldvalue(const Sheet_fieldvalue& from);

  inline Sheet_fieldvalue& operator=(const Sheet_fieldvalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fieldvalue& default_instance();

  void Swap(Sheet_fieldvalue* other);

  // implements Message ----------------------------------------------

  Sheet_fieldvalue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fieldvalue& from);
  void MergeFrom(const Sheet_fieldvalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fieldvalue fieldvalue_List = 1;
  inline int fieldvalue_list_size() const;
  inline void clear_fieldvalue_list();
  static const int kFieldvalueListFieldNumber = 1;
  inline const ::proto_ff::fieldvalue& fieldvalue_list(int index) const;
  inline ::proto_ff::fieldvalue* mutable_fieldvalue_list(int index);
  inline ::proto_ff::fieldvalue* add_fieldvalue_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldvalue >&
      fieldvalue_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldvalue >*
      mutable_fieldvalue_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fieldvalue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldvalue > fieldvalue_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fieldvalue* default_instance_;
};
// -------------------------------------------------------------------

class fieldexpand : public ::google::protobuf::Message {
 public:
  fieldexpand();
  virtual ~fieldexpand();

  fieldexpand(const fieldexpand& from);

  inline fieldexpand& operator=(const fieldexpand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldexpand& default_instance();

  void Swap(fieldexpand* other);

  // implements Message ----------------------------------------------

  fieldexpand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldexpand& from);
  void MergeFrom(const fieldexpand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fieldexpand)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldexpand* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fieldexpand : public ::google::protobuf::Message {
 public:
  Sheet_fieldexpand();
  virtual ~Sheet_fieldexpand();

  Sheet_fieldexpand(const Sheet_fieldexpand& from);

  inline Sheet_fieldexpand& operator=(const Sheet_fieldexpand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fieldexpand& default_instance();

  void Swap(Sheet_fieldexpand* other);

  // implements Message ----------------------------------------------

  Sheet_fieldexpand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fieldexpand& from);
  void MergeFrom(const Sheet_fieldexpand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fieldexpand fieldexpand_List = 1;
  inline int fieldexpand_list_size() const;
  inline void clear_fieldexpand_list();
  static const int kFieldexpandListFieldNumber = 1;
  inline const ::proto_ff::fieldexpand& fieldexpand_list(int index) const;
  inline ::proto_ff::fieldexpand* mutable_fieldexpand_list(int index);
  inline ::proto_ff::fieldexpand* add_fieldexpand_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexpand >&
      fieldexpand_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexpand >*
      mutable_fieldexpand_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fieldexpand)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexpand > fieldexpand_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fieldexpand* default_instance_;
};
// -------------------------------------------------------------------

class fieldstong : public ::google::protobuf::Message {
 public:
  fieldstong();
  virtual ~fieldstong();

  fieldstong(const fieldstong& from);

  inline fieldstong& operator=(const fieldstong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fieldstong& default_instance();

  void Swap(fieldstong* other);

  // implements Message ----------------------------------------------

  fieldstong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fieldstong& from);
  void MergeFrom(const fieldstong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 stongId = 2;
  inline bool has_stongid() const;
  inline void clear_stongid();
  static const int kStongIdFieldNumber = 2;
  inline ::google::protobuf::int64 stongid() const;
  inline void set_stongid(::google::protobuf::int64 value);

  // optional int64 fenJieId = 3;
  inline bool has_fenjieid() const;
  inline void clear_fenjieid();
  static const int kFenJieIdFieldNumber = 3;
  inline ::google::protobuf::int64 fenjieid() const;
  inline void set_fenjieid(::google::protobuf::int64 value);

  // optional int32 fenJieNum = 4;
  inline bool has_fenjienum() const;
  inline void clear_fenjienum();
  static const int kFenJieNumFieldNumber = 4;
  inline ::google::protobuf::int32 fenjienum() const;
  inline void set_fenjienum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.fieldstong)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_stongid();
  inline void clear_has_stongid();
  inline void set_has_fenjieid();
  inline void clear_has_fenjieid();
  inline void set_has_fenjienum();
  inline void clear_has_fenjienum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 stongid_;
  ::google::protobuf::int64 fenjieid_;
  ::google::protobuf::int32 fenjienum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static fieldstong* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_fieldstong : public ::google::protobuf::Message {
 public:
  Sheet_fieldstong();
  virtual ~Sheet_fieldstong();

  Sheet_fieldstong(const Sheet_fieldstong& from);

  inline Sheet_fieldstong& operator=(const Sheet_fieldstong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_fieldstong& default_instance();

  void Swap(Sheet_fieldstong* other);

  // implements Message ----------------------------------------------

  Sheet_fieldstong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_fieldstong& from);
  void MergeFrom(const Sheet_fieldstong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.fieldstong fieldstong_List = 1;
  inline int fieldstong_list_size() const;
  inline void clear_fieldstong_list();
  static const int kFieldstongListFieldNumber = 1;
  inline const ::proto_ff::fieldstong& fieldstong_list(int index) const;
  inline ::proto_ff::fieldstong* mutable_fieldstong_list(int index);
  inline ::proto_ff::fieldstong* add_fieldstong_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldstong >&
      fieldstong_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldstong >*
      mutable_fieldstong_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_fieldstong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldstong > fieldstong_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_field_2eproto();
  friend void protobuf_AssignDesc_field_2eproto();
  friend void protobuf_ShutdownFile_field_2eproto();

  void InitAsDefaultInstance();
  static Sheet_fieldstong* default_instance_;
};
// ===================================================================


// ===================================================================

// fieldfieldfieldDesc

// optional int32 att = 1;
inline bool fieldfieldfieldDesc::has_att() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldfieldfieldDesc::set_has_att() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldfieldfieldDesc::clear_has_att() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldfieldfieldDesc::clear_att() {
  att_ = 0;
  clear_has_att();
}
inline ::google::protobuf::int32 fieldfieldfieldDesc::att() const {
  return att_;
}
inline void fieldfieldfieldDesc::set_att(::google::protobuf::int32 value) {
  set_has_att();
  att_ = value;
}

// optional int32 num = 2;
inline bool fieldfieldfieldDesc::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldfieldfieldDesc::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldfieldfieldDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldfieldfieldDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 fieldfieldfieldDesc::num() const {
  return num_;
}
inline void fieldfieldfieldDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// fieldfield

// optional int64 id = 1;
inline bool fieldfield::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldfield::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldfield::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldfield::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 fieldfield::id() const {
  return id_;
}
inline void fieldfield::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool fieldfield::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldfield::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldfield::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldfield::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& fieldfield::name() const {
  return *name_;
}
inline void fieldfield::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void fieldfield::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void fieldfield::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fieldfield::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* fieldfield::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fieldfield::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 quality = 3;
inline bool fieldfield::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fieldfield::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fieldfield::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fieldfield::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 fieldfield::quality() const {
  return quality_;
}
inline void fieldfield::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// repeated .proto_ff.fieldfieldfieldDesc field = 4;
inline int fieldfield::field_size() const {
  return field_.size();
}
inline void fieldfield::clear_field() {
  field_.Clear();
}
inline const ::proto_ff::fieldfieldfieldDesc& fieldfield::field(int index) const {
  return field_.Get(index);
}
inline ::proto_ff::fieldfieldfieldDesc* fieldfield::mutable_field(int index) {
  return field_.Mutable(index);
}
inline ::proto_ff::fieldfieldfieldDesc* fieldfield::add_field() {
  return field_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfieldfieldDesc >&
fieldfield::field() const {
  return field_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfieldfieldDesc >*
fieldfield::mutable_field() {
  return &field_;
}

// repeated int64 skill = 5;
inline int fieldfield::skill_size() const {
  return skill_.size();
}
inline void fieldfield::clear_skill() {
  skill_.Clear();
}
inline ::google::protobuf::int64 fieldfield::skill(int index) const {
  return skill_.Get(index);
}
inline void fieldfield::set_skill(int index, ::google::protobuf::int64 value) {
  skill_.Set(index, value);
}
inline void fieldfield::add_skill(::google::protobuf::int64 value) {
  skill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
fieldfield::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
fieldfield::mutable_skill() {
  return &skill_;
}

// repeated int32 num = 6;
inline int fieldfield::num_size() const {
  return num_.size();
}
inline void fieldfield::clear_num() {
  num_.Clear();
}
inline ::google::protobuf::int32 fieldfield::num(int index) const {
  return num_.Get(index);
}
inline void fieldfield::set_num(int index, ::google::protobuf::int32 value) {
  num_.Set(index, value);
}
inline void fieldfield::add_num(::google::protobuf::int32 value) {
  num_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
fieldfield::num() const {
  return num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
fieldfield::mutable_num() {
  return &num_;
}

// repeated int32 pos = 7;
inline int fieldfield::pos_size() const {
  return pos_.size();
}
inline void fieldfield::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 fieldfield::pos(int index) const {
  return pos_.Get(index);
}
inline void fieldfield::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
}
inline void fieldfield::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
fieldfield::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
fieldfield::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// Sheet_fieldfield

// repeated .proto_ff.fieldfield fieldfield_List = 1;
inline int Sheet_fieldfield::fieldfield_list_size() const {
  return fieldfield_list_.size();
}
inline void Sheet_fieldfield::clear_fieldfield_list() {
  fieldfield_list_.Clear();
}
inline const ::proto_ff::fieldfield& Sheet_fieldfield::fieldfield_list(int index) const {
  return fieldfield_list_.Get(index);
}
inline ::proto_ff::fieldfield* Sheet_fieldfield::mutable_fieldfield_list(int index) {
  return fieldfield_list_.Mutable(index);
}
inline ::proto_ff::fieldfield* Sheet_fieldfield::add_fieldfield_list() {
  return fieldfield_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfield >&
Sheet_fieldfield::fieldfield_list() const {
  return fieldfield_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldfield >*
Sheet_fieldfield::mutable_fieldfield_list() {
  return &fieldfield_list_;
}

// -------------------------------------------------------------------

// fieldreikirefineDesc

// optional int32 type = 1;
inline bool fieldreikirefineDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldreikirefineDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldreikirefineDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldreikirefineDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 fieldreikirefineDesc::type() const {
  return type_;
}
inline void fieldreikirefineDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 value = 2;
inline bool fieldreikirefineDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldreikirefineDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldreikirefineDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldreikirefineDesc::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 fieldreikirefineDesc::value() const {
  return value_;
}
inline void fieldreikirefineDesc::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// fieldreiki

// optional int64 id = 1;
inline bool fieldreiki::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldreiki::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldreiki::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldreiki::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 fieldreiki::id() const {
  return id_;
}
inline void fieldreiki::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool fieldreiki::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldreiki::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldreiki::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldreiki::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& fieldreiki::name() const {
  return *name_;
}
inline void fieldreiki::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void fieldreiki::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void fieldreiki::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fieldreiki::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* fieldreiki::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fieldreiki::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 quality = 3;
inline bool fieldreiki::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fieldreiki::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fieldreiki::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fieldreiki::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 fieldreiki::quality() const {
  return quality_;
}
inline void fieldreiki::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 field = 4;
inline bool fieldreiki::has_field() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void fieldreiki::set_has_field() {
  _has_bits_[0] |= 0x00000008u;
}
inline void fieldreiki::clear_has_field() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void fieldreiki::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 fieldreiki::field() const {
  return field_;
}
inline void fieldreiki::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
}

// optional int32 Lv = 5;
inline bool fieldreiki::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void fieldreiki::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void fieldreiki::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void fieldreiki::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 fieldreiki::lv() const {
  return lv_;
}
inline void fieldreiki::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 star = 6;
inline bool fieldreiki::has_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void fieldreiki::set_has_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void fieldreiki::clear_has_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void fieldreiki::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 fieldreiki::star() const {
  return star_;
}
inline void fieldreiki::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional string refineAttribute = 7;
inline bool fieldreiki::has_refineattribute() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void fieldreiki::set_has_refineattribute() {
  _has_bits_[0] |= 0x00000040u;
}
inline void fieldreiki::clear_has_refineattribute() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void fieldreiki::clear_refineattribute() {
  if (refineattribute_ != &::google::protobuf::internal::kEmptyString) {
    refineattribute_->clear();
  }
  clear_has_refineattribute();
}
inline const ::std::string& fieldreiki::refineattribute() const {
  return *refineattribute_;
}
inline void fieldreiki::set_refineattribute(const ::std::string& value) {
  set_has_refineattribute();
  if (refineattribute_ == &::google::protobuf::internal::kEmptyString) {
    refineattribute_ = new ::std::string;
  }
  refineattribute_->assign(value);
}
inline void fieldreiki::set_refineattribute(const char* value) {
  set_has_refineattribute();
  if (refineattribute_ == &::google::protobuf::internal::kEmptyString) {
    refineattribute_ = new ::std::string;
  }
  refineattribute_->assign(value);
}
inline void fieldreiki::set_refineattribute(const char* value, size_t size) {
  set_has_refineattribute();
  if (refineattribute_ == &::google::protobuf::internal::kEmptyString) {
    refineattribute_ = new ::std::string;
  }
  refineattribute_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fieldreiki::mutable_refineattribute() {
  set_has_refineattribute();
  if (refineattribute_ == &::google::protobuf::internal::kEmptyString) {
    refineattribute_ = new ::std::string;
  }
  return refineattribute_;
}
inline ::std::string* fieldreiki::release_refineattribute() {
  clear_has_refineattribute();
  if (refineattribute_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = refineattribute_;
    refineattribute_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fieldreiki::set_allocated_refineattribute(::std::string* refineattribute) {
  if (refineattribute_ != &::google::protobuf::internal::kEmptyString) {
    delete refineattribute_;
  }
  if (refineattribute) {
    set_has_refineattribute();
    refineattribute_ = refineattribute;
  } else {
    clear_has_refineattribute();
    refineattribute_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string refineAttributeValue = 8;
inline bool fieldreiki::has_refineattributevalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void fieldreiki::set_has_refineattributevalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void fieldreiki::clear_has_refineattributevalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void fieldreiki::clear_refineattributevalue() {
  if (refineattributevalue_ != &::google::protobuf::internal::kEmptyString) {
    refineattributevalue_->clear();
  }
  clear_has_refineattributevalue();
}
inline const ::std::string& fieldreiki::refineattributevalue() const {
  return *refineattributevalue_;
}
inline void fieldreiki::set_refineattributevalue(const ::std::string& value) {
  set_has_refineattributevalue();
  if (refineattributevalue_ == &::google::protobuf::internal::kEmptyString) {
    refineattributevalue_ = new ::std::string;
  }
  refineattributevalue_->assign(value);
}
inline void fieldreiki::set_refineattributevalue(const char* value) {
  set_has_refineattributevalue();
  if (refineattributevalue_ == &::google::protobuf::internal::kEmptyString) {
    refineattributevalue_ = new ::std::string;
  }
  refineattributevalue_->assign(value);
}
inline void fieldreiki::set_refineattributevalue(const char* value, size_t size) {
  set_has_refineattributevalue();
  if (refineattributevalue_ == &::google::protobuf::internal::kEmptyString) {
    refineattributevalue_ = new ::std::string;
  }
  refineattributevalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fieldreiki::mutable_refineattributevalue() {
  set_has_refineattributevalue();
  if (refineattributevalue_ == &::google::protobuf::internal::kEmptyString) {
    refineattributevalue_ = new ::std::string;
  }
  return refineattributevalue_;
}
inline ::std::string* fieldreiki::release_refineattributevalue() {
  clear_has_refineattributevalue();
  if (refineattributevalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = refineattributevalue_;
    refineattributevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fieldreiki::set_allocated_refineattributevalue(::std::string* refineattributevalue) {
  if (refineattributevalue_ != &::google::protobuf::internal::kEmptyString) {
    delete refineattributevalue_;
  }
  if (refineattributevalue) {
    set_has_refineattributevalue();
    refineattributevalue_ = refineattributevalue;
  } else {
    clear_has_refineattributevalue();
    refineattributevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 blueStarNum = 9;
inline bool fieldreiki::has_bluestarnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void fieldreiki::set_has_bluestarnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void fieldreiki::clear_has_bluestarnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void fieldreiki::clear_bluestarnum() {
  bluestarnum_ = 0;
  clear_has_bluestarnum();
}
inline ::google::protobuf::int32 fieldreiki::bluestarnum() const {
  return bluestarnum_;
}
inline void fieldreiki::set_bluestarnum(::google::protobuf::int32 value) {
  set_has_bluestarnum();
  bluestarnum_ = value;
}

// optional string blueStar_type = 10;
inline bool fieldreiki::has_bluestar_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void fieldreiki::set_has_bluestar_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void fieldreiki::clear_has_bluestar_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void fieldreiki::clear_bluestar_type() {
  if (bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    bluestar_type_->clear();
  }
  clear_has_bluestar_type();
}
inline const ::std::string& fieldreiki::bluestar_type() const {
  return *bluestar_type_;
}
inline void fieldreiki::set_bluestar_type(const ::std::string& value) {
  set_has_bluestar_type();
  if (bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_type_ = new ::std::string;
  }
  bluestar_type_->assign(value);
}
inline void fieldreiki::set_bluestar_type(const char* value) {
  set_has_bluestar_type();
  if (bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_type_ = new ::std::string;
  }
  bluestar_type_->assign(value);
}
inline void fieldreiki::set_bluestar_type(const char* value, size_t size) {
  set_has_bluestar_type();
  if (bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_type_ = new ::std::string;
  }
  bluestar_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fieldreiki::mutable_bluestar_type() {
  set_has_bluestar_type();
  if (bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_type_ = new ::std::string;
  }
  return bluestar_type_;
}
inline ::std::string* fieldreiki::release_bluestar_type() {
  clear_has_bluestar_type();
  if (bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bluestar_type_;
    bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fieldreiki::set_allocated_bluestar_type(::std::string* bluestar_type) {
  if (bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    delete bluestar_type_;
  }
  if (bluestar_type) {
    set_has_bluestar_type();
    bluestar_type_ = bluestar_type;
  } else {
    clear_has_bluestar_type();
    bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string blueStar_value = 11;
inline bool fieldreiki::has_bluestar_value() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void fieldreiki::set_has_bluestar_value() {
  _has_bits_[0] |= 0x00000400u;
}
inline void fieldreiki::clear_has_bluestar_value() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void fieldreiki::clear_bluestar_value() {
  if (bluestar_value_ != &::google::protobuf::internal::kEmptyString) {
    bluestar_value_->clear();
  }
  clear_has_bluestar_value();
}
inline const ::std::string& fieldreiki::bluestar_value() const {
  return *bluestar_value_;
}
inline void fieldreiki::set_bluestar_value(const ::std::string& value) {
  set_has_bluestar_value();
  if (bluestar_value_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_value_ = new ::std::string;
  }
  bluestar_value_->assign(value);
}
inline void fieldreiki::set_bluestar_value(const char* value) {
  set_has_bluestar_value();
  if (bluestar_value_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_value_ = new ::std::string;
  }
  bluestar_value_->assign(value);
}
inline void fieldreiki::set_bluestar_value(const char* value, size_t size) {
  set_has_bluestar_value();
  if (bluestar_value_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_value_ = new ::std::string;
  }
  bluestar_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* fieldreiki::mutable_bluestar_value() {
  set_has_bluestar_value();
  if (bluestar_value_ == &::google::protobuf::internal::kEmptyString) {
    bluestar_value_ = new ::std::string;
  }
  return bluestar_value_;
}
inline ::std::string* fieldreiki::release_bluestar_value() {
  clear_has_bluestar_value();
  if (bluestar_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bluestar_value_;
    bluestar_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void fieldreiki::set_allocated_bluestar_value(::std::string* bluestar_value) {
  if (bluestar_value_ != &::google::protobuf::internal::kEmptyString) {
    delete bluestar_value_;
  }
  if (bluestar_value) {
    set_has_bluestar_value();
    bluestar_value_ = bluestar_value;
  } else {
    clear_has_bluestar_value();
    bluestar_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 exp = 12;
inline bool fieldreiki::has_exp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void fieldreiki::set_has_exp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void fieldreiki::clear_has_exp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void fieldreiki::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 fieldreiki::exp() const {
  return exp_;
}
inline void fieldreiki::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int64 link = 13;
inline bool fieldreiki::has_link() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void fieldreiki::set_has_link() {
  _has_bits_[0] |= 0x00001000u;
}
inline void fieldreiki::clear_has_link() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void fieldreiki::clear_link() {
  link_ = GOOGLE_LONGLONG(0);
  clear_has_link();
}
inline ::google::protobuf::int64 fieldreiki::link() const {
  return link_;
}
inline void fieldreiki::set_link(::google::protobuf::int64 value) {
  set_has_link();
  link_ = value;
}

// repeated .proto_ff.fieldreikirefineDesc refine = 14;
inline int fieldreiki::refine_size() const {
  return refine_.size();
}
inline void fieldreiki::clear_refine() {
  refine_.Clear();
}
inline const ::proto_ff::fieldreikirefineDesc& fieldreiki::refine(int index) const {
  return refine_.Get(index);
}
inline ::proto_ff::fieldreikirefineDesc* fieldreiki::mutable_refine(int index) {
  return refine_.Mutable(index);
}
inline ::proto_ff::fieldreikirefineDesc* fieldreiki::add_refine() {
  return refine_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreikirefineDesc >&
fieldreiki::refine() const {
  return refine_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreikirefineDesc >*
fieldreiki::mutable_refine() {
  return &refine_;
}

// -------------------------------------------------------------------

// Sheet_fieldreiki

// repeated .proto_ff.fieldreiki fieldreiki_List = 1;
inline int Sheet_fieldreiki::fieldreiki_list_size() const {
  return fieldreiki_list_.size();
}
inline void Sheet_fieldreiki::clear_fieldreiki_list() {
  fieldreiki_list_.Clear();
}
inline const ::proto_ff::fieldreiki& Sheet_fieldreiki::fieldreiki_list(int index) const {
  return fieldreiki_list_.Get(index);
}
inline ::proto_ff::fieldreiki* Sheet_fieldreiki::mutable_fieldreiki_list(int index) {
  return fieldreiki_list_.Mutable(index);
}
inline ::proto_ff::fieldreiki* Sheet_fieldreiki::add_fieldreiki_list() {
  return fieldreiki_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreiki >&
Sheet_fieldreiki::fieldreiki_list() const {
  return fieldreiki_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldreiki >*
Sheet_fieldreiki::mutable_fieldreiki_list() {
  return &fieldreiki_list_;
}

// -------------------------------------------------------------------

// fieldexp

// optional int32 lv = 1;
inline bool fieldexp::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldexp::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldexp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldexp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 fieldexp::lv() const {
  return lv_;
}
inline void fieldexp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 exp = 2;
inline bool fieldexp::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldexp::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldexp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldexp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 fieldexp::exp() const {
  return exp_;
}
inline void fieldexp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_fieldexp

// repeated .proto_ff.fieldexp fieldexp_List = 1;
inline int Sheet_fieldexp::fieldexp_list_size() const {
  return fieldexp_list_.size();
}
inline void Sheet_fieldexp::clear_fieldexp_list() {
  fieldexp_list_.Clear();
}
inline const ::proto_ff::fieldexp& Sheet_fieldexp::fieldexp_list(int index) const {
  return fieldexp_list_.Get(index);
}
inline ::proto_ff::fieldexp* Sheet_fieldexp::mutable_fieldexp_list(int index) {
  return fieldexp_list_.Mutable(index);
}
inline ::proto_ff::fieldexp* Sheet_fieldexp::add_fieldexp_list() {
  return fieldexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexp >&
Sheet_fieldexp::fieldexp_list() const {
  return fieldexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexp >*
Sheet_fieldexp::mutable_fieldexp_list() {
  return &fieldexp_list_;
}

// -------------------------------------------------------------------

// fieldvalue

// optional int64 id = 1;
inline bool fieldvalue::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldvalue::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldvalue::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldvalue::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 fieldvalue::id() const {
  return id_;
}
inline void fieldvalue::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 lvValue = 2;
inline int fieldvalue::lvvalue_size() const {
  return lvvalue_.size();
}
inline void fieldvalue::clear_lvvalue() {
  lvvalue_.Clear();
}
inline ::google::protobuf::int32 fieldvalue::lvvalue(int index) const {
  return lvvalue_.Get(index);
}
inline void fieldvalue::set_lvvalue(int index, ::google::protobuf::int32 value) {
  lvvalue_.Set(index, value);
}
inline void fieldvalue::add_lvvalue(::google::protobuf::int32 value) {
  lvvalue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
fieldvalue::lvvalue() const {
  return lvvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
fieldvalue::mutable_lvvalue() {
  return &lvvalue_;
}

// -------------------------------------------------------------------

// Sheet_fieldvalue

// repeated .proto_ff.fieldvalue fieldvalue_List = 1;
inline int Sheet_fieldvalue::fieldvalue_list_size() const {
  return fieldvalue_list_.size();
}
inline void Sheet_fieldvalue::clear_fieldvalue_list() {
  fieldvalue_list_.Clear();
}
inline const ::proto_ff::fieldvalue& Sheet_fieldvalue::fieldvalue_list(int index) const {
  return fieldvalue_list_.Get(index);
}
inline ::proto_ff::fieldvalue* Sheet_fieldvalue::mutable_fieldvalue_list(int index) {
  return fieldvalue_list_.Mutable(index);
}
inline ::proto_ff::fieldvalue* Sheet_fieldvalue::add_fieldvalue_list() {
  return fieldvalue_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldvalue >&
Sheet_fieldvalue::fieldvalue_list() const {
  return fieldvalue_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldvalue >*
Sheet_fieldvalue::mutable_fieldvalue_list() {
  return &fieldvalue_list_;
}

// -------------------------------------------------------------------

// fieldexpand

// optional int32 number = 1;
inline bool fieldexpand::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldexpand::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldexpand::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldexpand::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 fieldexpand::number() const {
  return number_;
}
inline void fieldexpand::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// optional int32 lv = 2;
inline bool fieldexpand::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldexpand::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldexpand::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldexpand::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 fieldexpand::lv() const {
  return lv_;
}
inline void fieldexpand::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int64 id = 3;
inline bool fieldexpand::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fieldexpand::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fieldexpand::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fieldexpand::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 fieldexpand::id() const {
  return id_;
}
inline void fieldexpand::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 4;
inline bool fieldexpand::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void fieldexpand::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void fieldexpand::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void fieldexpand::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 fieldexpand::num() const {
  return num_;
}
inline void fieldexpand::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// Sheet_fieldexpand

// repeated .proto_ff.fieldexpand fieldexpand_List = 1;
inline int Sheet_fieldexpand::fieldexpand_list_size() const {
  return fieldexpand_list_.size();
}
inline void Sheet_fieldexpand::clear_fieldexpand_list() {
  fieldexpand_list_.Clear();
}
inline const ::proto_ff::fieldexpand& Sheet_fieldexpand::fieldexpand_list(int index) const {
  return fieldexpand_list_.Get(index);
}
inline ::proto_ff::fieldexpand* Sheet_fieldexpand::mutable_fieldexpand_list(int index) {
  return fieldexpand_list_.Mutable(index);
}
inline ::proto_ff::fieldexpand* Sheet_fieldexpand::add_fieldexpand_list() {
  return fieldexpand_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexpand >&
Sheet_fieldexpand::fieldexpand_list() const {
  return fieldexpand_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldexpand >*
Sheet_fieldexpand::mutable_fieldexpand_list() {
  return &fieldexpand_list_;
}

// -------------------------------------------------------------------

// fieldstong

// optional int64 id = 1;
inline bool fieldstong::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fieldstong::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fieldstong::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fieldstong::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 fieldstong::id() const {
  return id_;
}
inline void fieldstong::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 stongId = 2;
inline bool fieldstong::has_stongid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fieldstong::set_has_stongid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fieldstong::clear_has_stongid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fieldstong::clear_stongid() {
  stongid_ = GOOGLE_LONGLONG(0);
  clear_has_stongid();
}
inline ::google::protobuf::int64 fieldstong::stongid() const {
  return stongid_;
}
inline void fieldstong::set_stongid(::google::protobuf::int64 value) {
  set_has_stongid();
  stongid_ = value;
}

// optional int64 fenJieId = 3;
inline bool fieldstong::has_fenjieid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fieldstong::set_has_fenjieid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void fieldstong::clear_has_fenjieid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void fieldstong::clear_fenjieid() {
  fenjieid_ = GOOGLE_LONGLONG(0);
  clear_has_fenjieid();
}
inline ::google::protobuf::int64 fieldstong::fenjieid() const {
  return fenjieid_;
}
inline void fieldstong::set_fenjieid(::google::protobuf::int64 value) {
  set_has_fenjieid();
  fenjieid_ = value;
}

// optional int32 fenJieNum = 4;
inline bool fieldstong::has_fenjienum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void fieldstong::set_has_fenjienum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void fieldstong::clear_has_fenjienum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void fieldstong::clear_fenjienum() {
  fenjienum_ = 0;
  clear_has_fenjienum();
}
inline ::google::protobuf::int32 fieldstong::fenjienum() const {
  return fenjienum_;
}
inline void fieldstong::set_fenjienum(::google::protobuf::int32 value) {
  set_has_fenjienum();
  fenjienum_ = value;
}

// -------------------------------------------------------------------

// Sheet_fieldstong

// repeated .proto_ff.fieldstong fieldstong_List = 1;
inline int Sheet_fieldstong::fieldstong_list_size() const {
  return fieldstong_list_.size();
}
inline void Sheet_fieldstong::clear_fieldstong_list() {
  fieldstong_list_.Clear();
}
inline const ::proto_ff::fieldstong& Sheet_fieldstong::fieldstong_list(int index) const {
  return fieldstong_list_.Get(index);
}
inline ::proto_ff::fieldstong* Sheet_fieldstong::mutable_fieldstong_list(int index) {
  return fieldstong_list_.Mutable(index);
}
inline ::proto_ff::fieldstong* Sheet_fieldstong::add_fieldstong_list() {
  return fieldstong_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldstong >&
Sheet_fieldstong::fieldstong_list() const {
  return fieldstong_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::fieldstong >*
Sheet_fieldstong::mutable_fieldstong_list() {
  return &fieldstong_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_field_2eproto__INCLUDED
