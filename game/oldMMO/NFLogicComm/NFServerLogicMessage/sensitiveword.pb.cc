// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensitiveword.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sensitiveword.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* sensitivewordsensitive_word_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sensitivewordsensitive_word_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_sensitivewordsensitive_word_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_sensitivewordsensitive_word_reflection_ = NULL;
const ::google::protobuf::Descriptor* sensitivewordrolesensitive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sensitivewordrolesensitive_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_sensitivewordrolesensitive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_sensitivewordrolesensitive_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sensitiveword_2eproto() {
  protobuf_AddDesc_sensitiveword_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sensitiveword.proto");
  GOOGLE_CHECK(file != NULL);
  sensitivewordsensitive_word_descriptor_ = file->message_type(0);
  static const int sensitivewordsensitive_word_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordsensitive_word, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordsensitive_word, sensitiveword_),
  };
  sensitivewordsensitive_word_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sensitivewordsensitive_word_descriptor_,
      sensitivewordsensitive_word::default_instance_,
      sensitivewordsensitive_word_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordsensitive_word, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordsensitive_word, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sensitivewordsensitive_word));
  Sheet_sensitivewordsensitive_word_descriptor_ = file->message_type(1);
  static const int Sheet_sensitivewordsensitive_word_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_sensitivewordsensitive_word, sensitivewordsensitive_word_list_),
  };
  Sheet_sensitivewordsensitive_word_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_sensitivewordsensitive_word_descriptor_,
      Sheet_sensitivewordsensitive_word::default_instance_,
      Sheet_sensitivewordsensitive_word_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_sensitivewordsensitive_word, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_sensitivewordsensitive_word, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_sensitivewordsensitive_word));
  sensitivewordrolesensitive_descriptor_ = file->message_type(2);
  static const int sensitivewordrolesensitive_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordrolesensitive, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordrolesensitive, sensitiveword_),
  };
  sensitivewordrolesensitive_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sensitivewordrolesensitive_descriptor_,
      sensitivewordrolesensitive::default_instance_,
      sensitivewordrolesensitive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordrolesensitive, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sensitivewordrolesensitive, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sensitivewordrolesensitive));
  Sheet_sensitivewordrolesensitive_descriptor_ = file->message_type(3);
  static const int Sheet_sensitivewordrolesensitive_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_sensitivewordrolesensitive, sensitivewordrolesensitive_list_),
  };
  Sheet_sensitivewordrolesensitive_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_sensitivewordrolesensitive_descriptor_,
      Sheet_sensitivewordrolesensitive::default_instance_,
      Sheet_sensitivewordrolesensitive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_sensitivewordrolesensitive, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_sensitivewordrolesensitive, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_sensitivewordrolesensitive));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sensitiveword_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sensitivewordsensitive_word_descriptor_, &sensitivewordsensitive_word::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_sensitivewordsensitive_word_descriptor_, &Sheet_sensitivewordsensitive_word::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sensitivewordrolesensitive_descriptor_, &sensitivewordrolesensitive::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_sensitivewordrolesensitive_descriptor_, &Sheet_sensitivewordrolesensitive::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sensitiveword_2eproto() {
  delete sensitivewordsensitive_word::default_instance_;
  delete sensitivewordsensitive_word_reflection_;
  delete Sheet_sensitivewordsensitive_word::default_instance_;
  delete Sheet_sensitivewordsensitive_word_reflection_;
  delete sensitivewordrolesensitive::default_instance_;
  delete sensitivewordrolesensitive_reflection_;
  delete Sheet_sensitivewordrolesensitive::default_instance_;
  delete Sheet_sensitivewordrolesensitive_reflection_;
}

void protobuf_AddDesc_sensitiveword_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023sensitiveword.proto\022\010proto_ff\032\025yd_fiel"
    "doptions.proto\"`\n\033sensitivewordsensitive"
    "_word\022\026\n\002id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022)\n\rsensiti"
    "veWord\030\002 \001(\tB\022\302\377\024\t\346\225\217\346\204\237\345\255\227\220\301\024\310\001\"|\n!Shee"
    "t_sensitivewordsensitive_word\022W\n sensiti"
    "vewordsensitive_word_List\030\001 \003(\0132%.proto_"
    "ff.sensitivewordsensitive_wordB\006\210\301\024\340\324\003\"^"
    "\n\032sensitivewordrolesensitive\022\026\n\002id\030\001 \001(\005"
    "B\n\302\377\024\006\345\272\217\345\217\267\022(\n\rsensitiveWord\030\002 \001(\tB\021\302\377\024"
    "\t\346\225\217\346\204\237\345\255\227\220\301\024<\"x\n Sheet_sensitivewordrol"
    "esensitive\022T\n\037sensitivewordrolesensitive"
    "_List\030\001 \003(\0132$.proto_ff.sensitivewordrole"
    "sensitiveB\005\210\301\024\254\002", 496);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sensitiveword.proto", &protobuf_RegisterTypes);
  sensitivewordsensitive_word::default_instance_ = new sensitivewordsensitive_word();
  Sheet_sensitivewordsensitive_word::default_instance_ = new Sheet_sensitivewordsensitive_word();
  sensitivewordrolesensitive::default_instance_ = new sensitivewordrolesensitive();
  Sheet_sensitivewordrolesensitive::default_instance_ = new Sheet_sensitivewordrolesensitive();
  sensitivewordsensitive_word::default_instance_->InitAsDefaultInstance();
  Sheet_sensitivewordsensitive_word::default_instance_->InitAsDefaultInstance();
  sensitivewordrolesensitive::default_instance_->InitAsDefaultInstance();
  Sheet_sensitivewordrolesensitive::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sensitiveword_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sensitiveword_2eproto {
  StaticDescriptorInitializer_sensitiveword_2eproto() {
    protobuf_AddDesc_sensitiveword_2eproto();
  }
} static_descriptor_initializer_sensitiveword_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int sensitivewordsensitive_word::kIdFieldNumber;
const int sensitivewordsensitive_word::kSensitiveWordFieldNumber;
#endif  // !_MSC_VER

sensitivewordsensitive_word::sensitivewordsensitive_word()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sensitivewordsensitive_word::InitAsDefaultInstance() {
}

sensitivewordsensitive_word::sensitivewordsensitive_word(const sensitivewordsensitive_word& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sensitivewordsensitive_word::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sensitivewordsensitive_word::~sensitivewordsensitive_word() {
  SharedDtor();
}

void sensitivewordsensitive_word::SharedDtor() {
  if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete sensitiveword_;
  }
  if (this != default_instance_) {
  }
}

void sensitivewordsensitive_word::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sensitivewordsensitive_word::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sensitivewordsensitive_word_descriptor_;
}

const sensitivewordsensitive_word& sensitivewordsensitive_word::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sensitiveword_2eproto();
  return *default_instance_;
}

sensitivewordsensitive_word* sensitivewordsensitive_word::default_instance_ = NULL;

sensitivewordsensitive_word* sensitivewordsensitive_word::New() const {
  return new sensitivewordsensitive_word;
}

void sensitivewordsensitive_word::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_sensitiveword()) {
      if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
        sensitiveword_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sensitivewordsensitive_word::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sensitiveWord;
        break;
      }

      // optional string sensitiveWord = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensitiveWord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sensitiveword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sensitiveword().data(), this->sensitiveword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sensitivewordsensitive_word::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string sensitiveWord = 2;
  if (has_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sensitiveword().data(), this->sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sensitiveword(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sensitivewordsensitive_word::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string sensitiveWord = 2;
  if (has_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sensitiveword().data(), this->sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sensitiveword(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sensitivewordsensitive_word::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string sensitiveWord = 2;
    if (has_sensitiveword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sensitiveword());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sensitivewordsensitive_word::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sensitivewordsensitive_word* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sensitivewordsensitive_word*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sensitivewordsensitive_word::MergeFrom(const sensitivewordsensitive_word& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sensitiveword()) {
      set_sensitiveword(from.sensitiveword());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sensitivewordsensitive_word::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sensitivewordsensitive_word::CopyFrom(const sensitivewordsensitive_word& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sensitivewordsensitive_word::IsInitialized() const {

  return true;
}

void sensitivewordsensitive_word::Swap(sensitivewordsensitive_word* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sensitiveword_, other->sensitiveword_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sensitivewordsensitive_word::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sensitivewordsensitive_word_descriptor_;
  metadata.reflection = sensitivewordsensitive_word_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_sensitivewordsensitive_word::kSensitivewordsensitiveWordListFieldNumber;
#endif  // !_MSC_VER

Sheet_sensitivewordsensitive_word::Sheet_sensitivewordsensitive_word()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_sensitivewordsensitive_word::InitAsDefaultInstance() {
}

Sheet_sensitivewordsensitive_word::Sheet_sensitivewordsensitive_word(const Sheet_sensitivewordsensitive_word& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_sensitivewordsensitive_word::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_sensitivewordsensitive_word::~Sheet_sensitivewordsensitive_word() {
  SharedDtor();
}

void Sheet_sensitivewordsensitive_word::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_sensitivewordsensitive_word::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_sensitivewordsensitive_word::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_sensitivewordsensitive_word_descriptor_;
}

const Sheet_sensitivewordsensitive_word& Sheet_sensitivewordsensitive_word::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sensitiveword_2eproto();
  return *default_instance_;
}

Sheet_sensitivewordsensitive_word* Sheet_sensitivewordsensitive_word::default_instance_ = NULL;

Sheet_sensitivewordsensitive_word* Sheet_sensitivewordsensitive_word::New() const {
  return new Sheet_sensitivewordsensitive_word;
}

void Sheet_sensitivewordsensitive_word::Clear() {
  sensitivewordsensitive_word_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_sensitivewordsensitive_word::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.sensitivewordsensitive_word sensitivewordsensitive_word_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensitivewordsensitive_word_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensitivewordsensitive_word_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sensitivewordsensitive_word_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_sensitivewordsensitive_word::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.sensitivewordsensitive_word sensitivewordsensitive_word_List = 1;
  for (int i = 0; i < this->sensitivewordsensitive_word_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensitivewordsensitive_word_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_sensitivewordsensitive_word::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.sensitivewordsensitive_word sensitivewordsensitive_word_List = 1;
  for (int i = 0; i < this->sensitivewordsensitive_word_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sensitivewordsensitive_word_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_sensitivewordsensitive_word::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.sensitivewordsensitive_word sensitivewordsensitive_word_List = 1;
  total_size += 1 * this->sensitivewordsensitive_word_list_size();
  for (int i = 0; i < this->sensitivewordsensitive_word_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensitivewordsensitive_word_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_sensitivewordsensitive_word::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_sensitivewordsensitive_word* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_sensitivewordsensitive_word*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_sensitivewordsensitive_word::MergeFrom(const Sheet_sensitivewordsensitive_word& from) {
  GOOGLE_CHECK_NE(&from, this);
  sensitivewordsensitive_word_list_.MergeFrom(from.sensitivewordsensitive_word_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_sensitivewordsensitive_word::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_sensitivewordsensitive_word::CopyFrom(const Sheet_sensitivewordsensitive_word& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_sensitivewordsensitive_word::IsInitialized() const {

  return true;
}

void Sheet_sensitivewordsensitive_word::Swap(Sheet_sensitivewordsensitive_word* other) {
  if (other != this) {
    sensitivewordsensitive_word_list_.Swap(&other->sensitivewordsensitive_word_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_sensitivewordsensitive_word::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_sensitivewordsensitive_word_descriptor_;
  metadata.reflection = Sheet_sensitivewordsensitive_word_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sensitivewordrolesensitive::kIdFieldNumber;
const int sensitivewordrolesensitive::kSensitiveWordFieldNumber;
#endif  // !_MSC_VER

sensitivewordrolesensitive::sensitivewordrolesensitive()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sensitivewordrolesensitive::InitAsDefaultInstance() {
}

sensitivewordrolesensitive::sensitivewordrolesensitive(const sensitivewordrolesensitive& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sensitivewordrolesensitive::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sensitivewordrolesensitive::~sensitivewordrolesensitive() {
  SharedDtor();
}

void sensitivewordrolesensitive::SharedDtor() {
  if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete sensitiveword_;
  }
  if (this != default_instance_) {
  }
}

void sensitivewordrolesensitive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sensitivewordrolesensitive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sensitivewordrolesensitive_descriptor_;
}

const sensitivewordrolesensitive& sensitivewordrolesensitive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sensitiveword_2eproto();
  return *default_instance_;
}

sensitivewordrolesensitive* sensitivewordrolesensitive::default_instance_ = NULL;

sensitivewordrolesensitive* sensitivewordrolesensitive::New() const {
  return new sensitivewordrolesensitive;
}

void sensitivewordrolesensitive::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_sensitiveword()) {
      if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
        sensitiveword_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sensitivewordrolesensitive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sensitiveWord;
        break;
      }

      // optional string sensitiveWord = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensitiveWord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sensitiveword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sensitiveword().data(), this->sensitiveword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sensitivewordrolesensitive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string sensitiveWord = 2;
  if (has_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sensitiveword().data(), this->sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sensitiveword(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sensitivewordrolesensitive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string sensitiveWord = 2;
  if (has_sensitiveword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sensitiveword().data(), this->sensitiveword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sensitiveword(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sensitivewordrolesensitive::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string sensitiveWord = 2;
    if (has_sensitiveword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sensitiveword());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sensitivewordrolesensitive::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sensitivewordrolesensitive* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sensitivewordrolesensitive*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sensitivewordrolesensitive::MergeFrom(const sensitivewordrolesensitive& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sensitiveword()) {
      set_sensitiveword(from.sensitiveword());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sensitivewordrolesensitive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sensitivewordrolesensitive::CopyFrom(const sensitivewordrolesensitive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sensitivewordrolesensitive::IsInitialized() const {

  return true;
}

void sensitivewordrolesensitive::Swap(sensitivewordrolesensitive* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sensitiveword_, other->sensitiveword_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sensitivewordrolesensitive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sensitivewordrolesensitive_descriptor_;
  metadata.reflection = sensitivewordrolesensitive_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_sensitivewordrolesensitive::kSensitivewordrolesensitiveListFieldNumber;
#endif  // !_MSC_VER

Sheet_sensitivewordrolesensitive::Sheet_sensitivewordrolesensitive()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_sensitivewordrolesensitive::InitAsDefaultInstance() {
}

Sheet_sensitivewordrolesensitive::Sheet_sensitivewordrolesensitive(const Sheet_sensitivewordrolesensitive& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_sensitivewordrolesensitive::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_sensitivewordrolesensitive::~Sheet_sensitivewordrolesensitive() {
  SharedDtor();
}

void Sheet_sensitivewordrolesensitive::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_sensitivewordrolesensitive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_sensitivewordrolesensitive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_sensitivewordrolesensitive_descriptor_;
}

const Sheet_sensitivewordrolesensitive& Sheet_sensitivewordrolesensitive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sensitiveword_2eproto();
  return *default_instance_;
}

Sheet_sensitivewordrolesensitive* Sheet_sensitivewordrolesensitive::default_instance_ = NULL;

Sheet_sensitivewordrolesensitive* Sheet_sensitivewordrolesensitive::New() const {
  return new Sheet_sensitivewordrolesensitive;
}

void Sheet_sensitivewordrolesensitive::Clear() {
  sensitivewordrolesensitive_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_sensitivewordrolesensitive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.sensitivewordrolesensitive sensitivewordrolesensitive_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensitivewordrolesensitive_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensitivewordrolesensitive_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sensitivewordrolesensitive_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_sensitivewordrolesensitive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.sensitivewordrolesensitive sensitivewordrolesensitive_List = 1;
  for (int i = 0; i < this->sensitivewordrolesensitive_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensitivewordrolesensitive_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_sensitivewordrolesensitive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.sensitivewordrolesensitive sensitivewordrolesensitive_List = 1;
  for (int i = 0; i < this->sensitivewordrolesensitive_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sensitivewordrolesensitive_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_sensitivewordrolesensitive::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.sensitivewordrolesensitive sensitivewordrolesensitive_List = 1;
  total_size += 1 * this->sensitivewordrolesensitive_list_size();
  for (int i = 0; i < this->sensitivewordrolesensitive_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensitivewordrolesensitive_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_sensitivewordrolesensitive::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_sensitivewordrolesensitive* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_sensitivewordrolesensitive*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_sensitivewordrolesensitive::MergeFrom(const Sheet_sensitivewordrolesensitive& from) {
  GOOGLE_CHECK_NE(&from, this);
  sensitivewordrolesensitive_list_.MergeFrom(from.sensitivewordrolesensitive_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_sensitivewordrolesensitive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_sensitivewordrolesensitive::CopyFrom(const Sheet_sensitivewordrolesensitive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_sensitivewordrolesensitive::IsInitialized() const {

  return true;
}

void Sheet_sensitivewordrolesensitive::Swap(Sheet_sensitivewordrolesensitive* other) {
  if (other != this) {
    sensitivewordrolesensitive_list_.Swap(&other->sensitivewordrolesensitive_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_sensitivewordrolesensitive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_sensitivewordrolesensitive_descriptor_;
  metadata.reflection = Sheet_sensitivewordrolesensitive_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
