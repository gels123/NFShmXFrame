// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: closetest.proto

#ifndef PROTOBUF_closetest_2eproto__INCLUDED
#define PROTOBUF_closetest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_closetest_2eproto();
void protobuf_AssignDesc_closetest_2eproto();
void protobuf_ShutdownFile_closetest_2eproto();

class closetestActivity;
class Sheet_closetestActivity;
class closetestRebate;
class Sheet_closetestRebate;

// ===================================================================

class closetestActivity : public ::google::protobuf::Message {
 public:
  closetestActivity();
  virtual ~closetestActivity();

  closetestActivity(const closetestActivity& from);

  inline closetestActivity& operator=(const closetestActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const closetestActivity& default_instance();

  void Swap(closetestActivity* other);

  // implements Message ----------------------------------------------

  closetestActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const closetestActivity& from);
  void MergeFrom(const closetestActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 TypeParam = 3;
  inline bool has_typeparam() const;
  inline void clear_typeparam();
  static const int kTypeParamFieldNumber = 3;
  inline ::google::protobuf::int32 typeparam() const;
  inline void set_typeparam(::google::protobuf::int32 value);

  // optional int64 BoxId = 4;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxIdFieldNumber = 4;
  inline ::google::protobuf::int64 boxid() const;
  inline void set_boxid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.closetestActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_typeparam();
  inline void clear_has_typeparam();
  inline void set_has_boxid();
  inline void clear_has_boxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 boxid_;
  ::google::protobuf::int32 typeparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_closetest_2eproto();
  friend void protobuf_AssignDesc_closetest_2eproto();
  friend void protobuf_ShutdownFile_closetest_2eproto();

  void InitAsDefaultInstance();
  static closetestActivity* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_closetestActivity : public ::google::protobuf::Message {
 public:
  Sheet_closetestActivity();
  virtual ~Sheet_closetestActivity();

  Sheet_closetestActivity(const Sheet_closetestActivity& from);

  inline Sheet_closetestActivity& operator=(const Sheet_closetestActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_closetestActivity& default_instance();

  void Swap(Sheet_closetestActivity* other);

  // implements Message ----------------------------------------------

  Sheet_closetestActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_closetestActivity& from);
  void MergeFrom(const Sheet_closetestActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.closetestActivity closetestActivity_List = 1;
  inline int closetestactivity_list_size() const;
  inline void clear_closetestactivity_list();
  static const int kClosetestActivityListFieldNumber = 1;
  inline const ::proto_ff::closetestActivity& closetestactivity_list(int index) const;
  inline ::proto_ff::closetestActivity* mutable_closetestactivity_list(int index);
  inline ::proto_ff::closetestActivity* add_closetestactivity_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestActivity >&
      closetestactivity_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestActivity >*
      mutable_closetestactivity_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_closetestActivity)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestActivity > closetestactivity_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_closetest_2eproto();
  friend void protobuf_AssignDesc_closetest_2eproto();
  friend void protobuf_ShutdownFile_closetest_2eproto();

  void InitAsDefaultInstance();
  static Sheet_closetestActivity* default_instance_;
};
// -------------------------------------------------------------------

class closetestRebate : public ::google::protobuf::Message {
 public:
  closetestRebate();
  virtual ~closetestRebate();

  closetestRebate(const closetestRebate& from);

  inline closetestRebate& operator=(const closetestRebate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const closetestRebate& default_instance();

  void Swap(closetestRebate* other);

  // implements Message ----------------------------------------------

  closetestRebate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const closetestRebate& from);
  void MergeFrom(const closetestRebate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // optional int32 ReturnParamA = 2;
  inline bool has_returnparama() const;
  inline void clear_returnparama();
  static const int kReturnParamAFieldNumber = 2;
  inline ::google::protobuf::int32 returnparama() const;
  inline void set_returnparama(::google::protobuf::int32 value);

  // optional int32 ReturnParamB = 3;
  inline bool has_returnparamb() const;
  inline void clear_returnparamb();
  static const int kReturnParamBFieldNumber = 3;
  inline ::google::protobuf::int32 returnparamb() const;
  inline void set_returnparamb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.closetestRebate)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_returnparama();
  inline void clear_has_returnparama();
  inline void set_has_returnparamb();
  inline void clear_has_returnparamb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 returnparama_;
  ::google::protobuf::int32 returnparamb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_closetest_2eproto();
  friend void protobuf_AssignDesc_closetest_2eproto();
  friend void protobuf_ShutdownFile_closetest_2eproto();

  void InitAsDefaultInstance();
  static closetestRebate* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_closetestRebate : public ::google::protobuf::Message {
 public:
  Sheet_closetestRebate();
  virtual ~Sheet_closetestRebate();

  Sheet_closetestRebate(const Sheet_closetestRebate& from);

  inline Sheet_closetestRebate& operator=(const Sheet_closetestRebate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_closetestRebate& default_instance();

  void Swap(Sheet_closetestRebate* other);

  // implements Message ----------------------------------------------

  Sheet_closetestRebate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_closetestRebate& from);
  void MergeFrom(const Sheet_closetestRebate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.closetestRebate closetestRebate_List = 1;
  inline int closetestrebate_list_size() const;
  inline void clear_closetestrebate_list();
  static const int kClosetestRebateListFieldNumber = 1;
  inline const ::proto_ff::closetestRebate& closetestrebate_list(int index) const;
  inline ::proto_ff::closetestRebate* mutable_closetestrebate_list(int index);
  inline ::proto_ff::closetestRebate* add_closetestrebate_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestRebate >&
      closetestrebate_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestRebate >*
      mutable_closetestrebate_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_closetestRebate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestRebate > closetestrebate_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_closetest_2eproto();
  friend void protobuf_AssignDesc_closetest_2eproto();
  friend void protobuf_ShutdownFile_closetest_2eproto();

  void InitAsDefaultInstance();
  static Sheet_closetestRebate* default_instance_;
};
// ===================================================================


// ===================================================================

// closetestActivity

// optional int32 ID = 1;
inline bool closetestActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void closetestActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void closetestActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void closetestActivity::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 closetestActivity::id() const {
  return id_;
}
inline void closetestActivity::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Type = 2;
inline bool closetestActivity::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void closetestActivity::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void closetestActivity::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void closetestActivity::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 closetestActivity::type() const {
  return type_;
}
inline void closetestActivity::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 TypeParam = 3;
inline bool closetestActivity::has_typeparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void closetestActivity::set_has_typeparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void closetestActivity::clear_has_typeparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void closetestActivity::clear_typeparam() {
  typeparam_ = 0;
  clear_has_typeparam();
}
inline ::google::protobuf::int32 closetestActivity::typeparam() const {
  return typeparam_;
}
inline void closetestActivity::set_typeparam(::google::protobuf::int32 value) {
  set_has_typeparam();
  typeparam_ = value;
}

// optional int64 BoxId = 4;
inline bool closetestActivity::has_boxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void closetestActivity::set_has_boxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void closetestActivity::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void closetestActivity::clear_boxid() {
  boxid_ = GOOGLE_LONGLONG(0);
  clear_has_boxid();
}
inline ::google::protobuf::int64 closetestActivity::boxid() const {
  return boxid_;
}
inline void closetestActivity::set_boxid(::google::protobuf::int64 value) {
  set_has_boxid();
  boxid_ = value;
}

// -------------------------------------------------------------------

// Sheet_closetestActivity

// repeated .proto_ff.closetestActivity closetestActivity_List = 1;
inline int Sheet_closetestActivity::closetestactivity_list_size() const {
  return closetestactivity_list_.size();
}
inline void Sheet_closetestActivity::clear_closetestactivity_list() {
  closetestactivity_list_.Clear();
}
inline const ::proto_ff::closetestActivity& Sheet_closetestActivity::closetestactivity_list(int index) const {
  return closetestactivity_list_.Get(index);
}
inline ::proto_ff::closetestActivity* Sheet_closetestActivity::mutable_closetestactivity_list(int index) {
  return closetestactivity_list_.Mutable(index);
}
inline ::proto_ff::closetestActivity* Sheet_closetestActivity::add_closetestactivity_list() {
  return closetestactivity_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestActivity >&
Sheet_closetestActivity::closetestactivity_list() const {
  return closetestactivity_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestActivity >*
Sheet_closetestActivity::mutable_closetestactivity_list() {
  return &closetestactivity_list_;
}

// -------------------------------------------------------------------

// closetestRebate

// optional int32 Day = 1;
inline bool closetestRebate::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void closetestRebate::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void closetestRebate::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void closetestRebate::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 closetestRebate::day() const {
  return day_;
}
inline void closetestRebate::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
}

// optional int32 ReturnParamA = 2;
inline bool closetestRebate::has_returnparama() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void closetestRebate::set_has_returnparama() {
  _has_bits_[0] |= 0x00000002u;
}
inline void closetestRebate::clear_has_returnparama() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void closetestRebate::clear_returnparama() {
  returnparama_ = 0;
  clear_has_returnparama();
}
inline ::google::protobuf::int32 closetestRebate::returnparama() const {
  return returnparama_;
}
inline void closetestRebate::set_returnparama(::google::protobuf::int32 value) {
  set_has_returnparama();
  returnparama_ = value;
}

// optional int32 ReturnParamB = 3;
inline bool closetestRebate::has_returnparamb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void closetestRebate::set_has_returnparamb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void closetestRebate::clear_has_returnparamb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void closetestRebate::clear_returnparamb() {
  returnparamb_ = 0;
  clear_has_returnparamb();
}
inline ::google::protobuf::int32 closetestRebate::returnparamb() const {
  return returnparamb_;
}
inline void closetestRebate::set_returnparamb(::google::protobuf::int32 value) {
  set_has_returnparamb();
  returnparamb_ = value;
}

// -------------------------------------------------------------------

// Sheet_closetestRebate

// repeated .proto_ff.closetestRebate closetestRebate_List = 1;
inline int Sheet_closetestRebate::closetestrebate_list_size() const {
  return closetestrebate_list_.size();
}
inline void Sheet_closetestRebate::clear_closetestrebate_list() {
  closetestrebate_list_.Clear();
}
inline const ::proto_ff::closetestRebate& Sheet_closetestRebate::closetestrebate_list(int index) const {
  return closetestrebate_list_.Get(index);
}
inline ::proto_ff::closetestRebate* Sheet_closetestRebate::mutable_closetestrebate_list(int index) {
  return closetestrebate_list_.Mutable(index);
}
inline ::proto_ff::closetestRebate* Sheet_closetestRebate::add_closetestrebate_list() {
  return closetestrebate_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestRebate >&
Sheet_closetestRebate::closetestrebate_list() const {
  return closetestrebate_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::closetestRebate >*
Sheet_closetestRebate::mutable_closetestrebate_list() {
  return &closetestrebate_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_closetest_2eproto__INCLUDED
