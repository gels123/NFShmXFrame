// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: godGM.proto

#ifndef PROTOBUF_godGM_2eproto__INCLUDED
#define PROTOBUF_godGM_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_godGM_2eproto();
void protobuf_AssignDesc_godGM_2eproto();
void protobuf_ShutdownFile_godGM_2eproto();

class godGMgodGM;
class Sheet_godGMgodGM;

// ===================================================================

class godGMgodGM : public ::google::protobuf::Message {
 public:
  godGMgodGM();
  virtual ~godGMgodGM();

  godGMgodGM(const godGMgodGM& from);

  inline godGMgodGM& operator=(const godGMgodGM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const godGMgodGM& default_instance();

  void Swap(godGMgodGM* other);

  // implements Message ----------------------------------------------

  godGMgodGM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const godGMgodGM& from);
  void MergeFrom(const godGMgodGM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 freeRechargeId = 3;
  inline bool has_freerechargeid() const;
  inline void clear_freerechargeid();
  static const int kFreeRechargeIdFieldNumber = 3;
  inline ::google::protobuf::int32 freerechargeid() const;
  inline void set_freerechargeid(::google::protobuf::int32 value);

  // optional int32 rechargeId = 4;
  inline bool has_rechargeid() const;
  inline void clear_rechargeid();
  static const int kRechargeIdFieldNumber = 4;
  inline ::google::protobuf::int32 rechargeid() const;
  inline void set_rechargeid(::google::protobuf::int32 value);

  // optional int64 freeBox = 5;
  inline bool has_freebox() const;
  inline void clear_freebox();
  static const int kFreeBoxFieldNumber = 5;
  inline ::google::protobuf::int64 freebox() const;
  inline void set_freebox(::google::protobuf::int64 value);

  // optional int64 rechargeBox = 6;
  inline bool has_rechargebox() const;
  inline void clear_rechargebox();
  static const int kRechargeBoxFieldNumber = 6;
  inline ::google::protobuf::int64 rechargebox() const;
  inline void set_rechargebox(::google::protobuf::int64 value);

  // optional string freePrivilege = 7;
  inline bool has_freeprivilege() const;
  inline void clear_freeprivilege();
  static const int kFreePrivilegeFieldNumber = 7;
  inline const ::std::string& freeprivilege() const;
  inline void set_freeprivilege(const ::std::string& value);
  inline void set_freeprivilege(const char* value);
  inline void set_freeprivilege(const char* value, size_t size);
  inline ::std::string* mutable_freeprivilege();
  inline ::std::string* release_freeprivilege();
  inline void set_allocated_freeprivilege(::std::string* freeprivilege);

  // optional string payPrivilege = 8;
  inline bool has_payprivilege() const;
  inline void clear_payprivilege();
  static const int kPayPrivilegeFieldNumber = 8;
  inline const ::std::string& payprivilege() const;
  inline void set_payprivilege(const ::std::string& value);
  inline void set_payprivilege(const char* value);
  inline void set_payprivilege(const char* value, size_t size);
  inline ::std::string* mutable_payprivilege();
  inline ::std::string* release_payprivilege();
  inline void set_allocated_payprivilege(::std::string* payprivilege);

  // optional int64 costId = 9;
  inline bool has_costid() const;
  inline void clear_costid();
  static const int kCostIdFieldNumber = 9;
  inline ::google::protobuf::int64 costid() const;
  inline void set_costid(::google::protobuf::int64 value);

  // optional int32 costNum = 10;
  inline bool has_costnum() const;
  inline void clear_costnum();
  static const int kCostNumFieldNumber = 10;
  inline ::google::protobuf::int32 costnum() const;
  inline void set_costnum(::google::protobuf::int32 value);

  // optional int64 getId = 11;
  inline bool has_getid() const;
  inline void clear_getid();
  static const int kGetIdFieldNumber = 11;
  inline ::google::protobuf::int64 getid() const;
  inline void set_getid(::google::protobuf::int64 value);

  // optional int32 getNum = 12;
  inline bool has_getnum() const;
  inline void clear_getnum();
  static const int kGetNumFieldNumber = 12;
  inline ::google::protobuf::int32 getnum() const;
  inline void set_getnum(::google::protobuf::int32 value);

  // optional int32 exchargeTimes = 13;
  inline bool has_exchargetimes() const;
  inline void clear_exchargetimes();
  static const int kExchargeTimesFieldNumber = 13;
  inline ::google::protobuf::int32 exchargetimes() const;
  inline void set_exchargetimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.godGMgodGM)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_freerechargeid();
  inline void clear_has_freerechargeid();
  inline void set_has_rechargeid();
  inline void clear_has_rechargeid();
  inline void set_has_freebox();
  inline void clear_has_freebox();
  inline void set_has_rechargebox();
  inline void clear_has_rechargebox();
  inline void set_has_freeprivilege();
  inline void clear_has_freeprivilege();
  inline void set_has_payprivilege();
  inline void clear_has_payprivilege();
  inline void set_has_costid();
  inline void clear_has_costid();
  inline void set_has_costnum();
  inline void clear_has_costnum();
  inline void set_has_getid();
  inline void clear_has_getid();
  inline void set_has_getnum();
  inline void clear_has_getnum();
  inline void set_has_exchargetimes();
  inline void clear_has_exchargetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 freerechargeid_;
  ::google::protobuf::int32 rechargeid_;
  ::google::protobuf::int64 freebox_;
  ::google::protobuf::int64 rechargebox_;
  ::std::string* freeprivilege_;
  ::std::string* payprivilege_;
  ::google::protobuf::int64 costid_;
  ::google::protobuf::int64 getid_;
  ::google::protobuf::int32 costnum_;
  ::google::protobuf::int32 getnum_;
  ::google::protobuf::int32 exchargetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_godGM_2eproto();
  friend void protobuf_AssignDesc_godGM_2eproto();
  friend void protobuf_ShutdownFile_godGM_2eproto();

  void InitAsDefaultInstance();
  static godGMgodGM* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_godGMgodGM : public ::google::protobuf::Message {
 public:
  Sheet_godGMgodGM();
  virtual ~Sheet_godGMgodGM();

  Sheet_godGMgodGM(const Sheet_godGMgodGM& from);

  inline Sheet_godGMgodGM& operator=(const Sheet_godGMgodGM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_godGMgodGM& default_instance();

  void Swap(Sheet_godGMgodGM* other);

  // implements Message ----------------------------------------------

  Sheet_godGMgodGM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_godGMgodGM& from);
  void MergeFrom(const Sheet_godGMgodGM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.godGMgodGM godGMgodGM_List = 1;
  inline int godgmgodgm_list_size() const;
  inline void clear_godgmgodgm_list();
  static const int kGodGMgodGMListFieldNumber = 1;
  inline const ::proto_ff::godGMgodGM& godgmgodgm_list(int index) const;
  inline ::proto_ff::godGMgodGM* mutable_godgmgodgm_list(int index);
  inline ::proto_ff::godGMgodGM* add_godgmgodgm_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::godGMgodGM >&
      godgmgodgm_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::godGMgodGM >*
      mutable_godgmgodgm_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_godGMgodGM)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::godGMgodGM > godgmgodgm_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godGM_2eproto();
  friend void protobuf_AssignDesc_godGM_2eproto();
  friend void protobuf_ShutdownFile_godGM_2eproto();

  void InitAsDefaultInstance();
  static Sheet_godGMgodGM* default_instance_;
};
// ===================================================================


// ===================================================================

// godGMgodGM

// optional int32 id = 1;
inline bool godGMgodGM::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void godGMgodGM::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void godGMgodGM::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void godGMgodGM::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 godGMgodGM::id() const {
  return id_;
}
inline void godGMgodGM::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Time = 2;
inline bool godGMgodGM::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void godGMgodGM::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void godGMgodGM::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void godGMgodGM::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 godGMgodGM::time() const {
  return time_;
}
inline void godGMgodGM::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 freeRechargeId = 3;
inline bool godGMgodGM::has_freerechargeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void godGMgodGM::set_has_freerechargeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void godGMgodGM::clear_has_freerechargeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void godGMgodGM::clear_freerechargeid() {
  freerechargeid_ = 0;
  clear_has_freerechargeid();
}
inline ::google::protobuf::int32 godGMgodGM::freerechargeid() const {
  return freerechargeid_;
}
inline void godGMgodGM::set_freerechargeid(::google::protobuf::int32 value) {
  set_has_freerechargeid();
  freerechargeid_ = value;
}

// optional int32 rechargeId = 4;
inline bool godGMgodGM::has_rechargeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void godGMgodGM::set_has_rechargeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void godGMgodGM::clear_has_rechargeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void godGMgodGM::clear_rechargeid() {
  rechargeid_ = 0;
  clear_has_rechargeid();
}
inline ::google::protobuf::int32 godGMgodGM::rechargeid() const {
  return rechargeid_;
}
inline void godGMgodGM::set_rechargeid(::google::protobuf::int32 value) {
  set_has_rechargeid();
  rechargeid_ = value;
}

// optional int64 freeBox = 5;
inline bool godGMgodGM::has_freebox() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void godGMgodGM::set_has_freebox() {
  _has_bits_[0] |= 0x00000010u;
}
inline void godGMgodGM::clear_has_freebox() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void godGMgodGM::clear_freebox() {
  freebox_ = GOOGLE_LONGLONG(0);
  clear_has_freebox();
}
inline ::google::protobuf::int64 godGMgodGM::freebox() const {
  return freebox_;
}
inline void godGMgodGM::set_freebox(::google::protobuf::int64 value) {
  set_has_freebox();
  freebox_ = value;
}

// optional int64 rechargeBox = 6;
inline bool godGMgodGM::has_rechargebox() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void godGMgodGM::set_has_rechargebox() {
  _has_bits_[0] |= 0x00000020u;
}
inline void godGMgodGM::clear_has_rechargebox() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void godGMgodGM::clear_rechargebox() {
  rechargebox_ = GOOGLE_LONGLONG(0);
  clear_has_rechargebox();
}
inline ::google::protobuf::int64 godGMgodGM::rechargebox() const {
  return rechargebox_;
}
inline void godGMgodGM::set_rechargebox(::google::protobuf::int64 value) {
  set_has_rechargebox();
  rechargebox_ = value;
}

// optional string freePrivilege = 7;
inline bool godGMgodGM::has_freeprivilege() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void godGMgodGM::set_has_freeprivilege() {
  _has_bits_[0] |= 0x00000040u;
}
inline void godGMgodGM::clear_has_freeprivilege() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void godGMgodGM::clear_freeprivilege() {
  if (freeprivilege_ != &::google::protobuf::internal::kEmptyString) {
    freeprivilege_->clear();
  }
  clear_has_freeprivilege();
}
inline const ::std::string& godGMgodGM::freeprivilege() const {
  return *freeprivilege_;
}
inline void godGMgodGM::set_freeprivilege(const ::std::string& value) {
  set_has_freeprivilege();
  if (freeprivilege_ == &::google::protobuf::internal::kEmptyString) {
    freeprivilege_ = new ::std::string;
  }
  freeprivilege_->assign(value);
}
inline void godGMgodGM::set_freeprivilege(const char* value) {
  set_has_freeprivilege();
  if (freeprivilege_ == &::google::protobuf::internal::kEmptyString) {
    freeprivilege_ = new ::std::string;
  }
  freeprivilege_->assign(value);
}
inline void godGMgodGM::set_freeprivilege(const char* value, size_t size) {
  set_has_freeprivilege();
  if (freeprivilege_ == &::google::protobuf::internal::kEmptyString) {
    freeprivilege_ = new ::std::string;
  }
  freeprivilege_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* godGMgodGM::mutable_freeprivilege() {
  set_has_freeprivilege();
  if (freeprivilege_ == &::google::protobuf::internal::kEmptyString) {
    freeprivilege_ = new ::std::string;
  }
  return freeprivilege_;
}
inline ::std::string* godGMgodGM::release_freeprivilege() {
  clear_has_freeprivilege();
  if (freeprivilege_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = freeprivilege_;
    freeprivilege_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void godGMgodGM::set_allocated_freeprivilege(::std::string* freeprivilege) {
  if (freeprivilege_ != &::google::protobuf::internal::kEmptyString) {
    delete freeprivilege_;
  }
  if (freeprivilege) {
    set_has_freeprivilege();
    freeprivilege_ = freeprivilege;
  } else {
    clear_has_freeprivilege();
    freeprivilege_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string payPrivilege = 8;
inline bool godGMgodGM::has_payprivilege() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void godGMgodGM::set_has_payprivilege() {
  _has_bits_[0] |= 0x00000080u;
}
inline void godGMgodGM::clear_has_payprivilege() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void godGMgodGM::clear_payprivilege() {
  if (payprivilege_ != &::google::protobuf::internal::kEmptyString) {
    payprivilege_->clear();
  }
  clear_has_payprivilege();
}
inline const ::std::string& godGMgodGM::payprivilege() const {
  return *payprivilege_;
}
inline void godGMgodGM::set_payprivilege(const ::std::string& value) {
  set_has_payprivilege();
  if (payprivilege_ == &::google::protobuf::internal::kEmptyString) {
    payprivilege_ = new ::std::string;
  }
  payprivilege_->assign(value);
}
inline void godGMgodGM::set_payprivilege(const char* value) {
  set_has_payprivilege();
  if (payprivilege_ == &::google::protobuf::internal::kEmptyString) {
    payprivilege_ = new ::std::string;
  }
  payprivilege_->assign(value);
}
inline void godGMgodGM::set_payprivilege(const char* value, size_t size) {
  set_has_payprivilege();
  if (payprivilege_ == &::google::protobuf::internal::kEmptyString) {
    payprivilege_ = new ::std::string;
  }
  payprivilege_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* godGMgodGM::mutable_payprivilege() {
  set_has_payprivilege();
  if (payprivilege_ == &::google::protobuf::internal::kEmptyString) {
    payprivilege_ = new ::std::string;
  }
  return payprivilege_;
}
inline ::std::string* godGMgodGM::release_payprivilege() {
  clear_has_payprivilege();
  if (payprivilege_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payprivilege_;
    payprivilege_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void godGMgodGM::set_allocated_payprivilege(::std::string* payprivilege) {
  if (payprivilege_ != &::google::protobuf::internal::kEmptyString) {
    delete payprivilege_;
  }
  if (payprivilege) {
    set_has_payprivilege();
    payprivilege_ = payprivilege;
  } else {
    clear_has_payprivilege();
    payprivilege_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 costId = 9;
inline bool godGMgodGM::has_costid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void godGMgodGM::set_has_costid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void godGMgodGM::clear_has_costid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void godGMgodGM::clear_costid() {
  costid_ = GOOGLE_LONGLONG(0);
  clear_has_costid();
}
inline ::google::protobuf::int64 godGMgodGM::costid() const {
  return costid_;
}
inline void godGMgodGM::set_costid(::google::protobuf::int64 value) {
  set_has_costid();
  costid_ = value;
}

// optional int32 costNum = 10;
inline bool godGMgodGM::has_costnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void godGMgodGM::set_has_costnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void godGMgodGM::clear_has_costnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void godGMgodGM::clear_costnum() {
  costnum_ = 0;
  clear_has_costnum();
}
inline ::google::protobuf::int32 godGMgodGM::costnum() const {
  return costnum_;
}
inline void godGMgodGM::set_costnum(::google::protobuf::int32 value) {
  set_has_costnum();
  costnum_ = value;
}

// optional int64 getId = 11;
inline bool godGMgodGM::has_getid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void godGMgodGM::set_has_getid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void godGMgodGM::clear_has_getid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void godGMgodGM::clear_getid() {
  getid_ = GOOGLE_LONGLONG(0);
  clear_has_getid();
}
inline ::google::protobuf::int64 godGMgodGM::getid() const {
  return getid_;
}
inline void godGMgodGM::set_getid(::google::protobuf::int64 value) {
  set_has_getid();
  getid_ = value;
}

// optional int32 getNum = 12;
inline bool godGMgodGM::has_getnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void godGMgodGM::set_has_getnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void godGMgodGM::clear_has_getnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void godGMgodGM::clear_getnum() {
  getnum_ = 0;
  clear_has_getnum();
}
inline ::google::protobuf::int32 godGMgodGM::getnum() const {
  return getnum_;
}
inline void godGMgodGM::set_getnum(::google::protobuf::int32 value) {
  set_has_getnum();
  getnum_ = value;
}

// optional int32 exchargeTimes = 13;
inline bool godGMgodGM::has_exchargetimes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void godGMgodGM::set_has_exchargetimes() {
  _has_bits_[0] |= 0x00001000u;
}
inline void godGMgodGM::clear_has_exchargetimes() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void godGMgodGM::clear_exchargetimes() {
  exchargetimes_ = 0;
  clear_has_exchargetimes();
}
inline ::google::protobuf::int32 godGMgodGM::exchargetimes() const {
  return exchargetimes_;
}
inline void godGMgodGM::set_exchargetimes(::google::protobuf::int32 value) {
  set_has_exchargetimes();
  exchargetimes_ = value;
}

// -------------------------------------------------------------------

// Sheet_godGMgodGM

// repeated .proto_ff.godGMgodGM godGMgodGM_List = 1;
inline int Sheet_godGMgodGM::godgmgodgm_list_size() const {
  return godgmgodgm_list_.size();
}
inline void Sheet_godGMgodGM::clear_godgmgodgm_list() {
  godgmgodgm_list_.Clear();
}
inline const ::proto_ff::godGMgodGM& Sheet_godGMgodGM::godgmgodgm_list(int index) const {
  return godgmgodgm_list_.Get(index);
}
inline ::proto_ff::godGMgodGM* Sheet_godGMgodGM::mutable_godgmgodgm_list(int index) {
  return godgmgodgm_list_.Mutable(index);
}
inline ::proto_ff::godGMgodGM* Sheet_godGMgodGM::add_godgmgodgm_list() {
  return godgmgodgm_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::godGMgodGM >&
Sheet_godGMgodGM::godgmgodgm_list() const {
  return godgmgodgm_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::godGMgodGM >*
Sheet_godGMgodGM::mutable_godgmgodgm_list() {
  return &godgmgodgm_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_godGM_2eproto__INCLUDED
