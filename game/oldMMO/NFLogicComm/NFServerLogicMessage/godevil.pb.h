// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: godevil.proto

#ifndef PROTOBUF_godevil_2eproto__INCLUDED
#define PROTOBUF_godevil_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_godevil_2eproto();
void protobuf_AssignDesc_godevil_2eproto();
void protobuf_ShutdownFile_godevil_2eproto();

class E_GodevilPreposetask;
class Sheet_GodevilPreposetask;
class E_GodevilGodevillvAttributeDesc;
class E_GodevilGodevillv;
class Sheet_GodevilGodevillv;
class E_GodevilGodevilprivilege;
class Sheet_GodevilGodevilprivilege;

// ===================================================================

class E_GodevilPreposetask : public ::google::protobuf::Message {
 public:
  E_GodevilPreposetask();
  virtual ~E_GodevilPreposetask();

  E_GodevilPreposetask(const E_GodevilPreposetask& from);

  inline E_GodevilPreposetask& operator=(const E_GodevilPreposetask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilPreposetask& default_instance();

  void Swap(E_GodevilPreposetask* other);

  // implements Message ----------------------------------------------

  E_GodevilPreposetask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilPreposetask& from);
  void MergeFrom(const E_GodevilPreposetask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_modeltype = 3;
  inline bool has_m_modeltype() const;
  inline void clear_m_modeltype();
  static const int kMModeltypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_modeltype() const;
  inline void set_m_modeltype(::google::protobuf::int32 value);

  // optional int32 m_starttask = 4;
  inline bool has_m_starttask() const;
  inline void clear_m_starttask();
  static const int kMStarttaskFieldNumber = 4;
  inline ::google::protobuf::int32 m_starttask() const;
  inline void set_m_starttask(::google::protobuf::int32 value);

  // optional int32 m_endtask = 5;
  inline bool has_m_endtask() const;
  inline void clear_m_endtask();
  static const int kMEndtaskFieldNumber = 5;
  inline ::google::protobuf::int32 m_endtask() const;
  inline void set_m_endtask(::google::protobuf::int32 value);

  // optional int32 m_condition = 6;
  inline bool has_m_condition() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 6;
  inline ::google::protobuf::int32 m_condition() const;
  inline void set_m_condition(::google::protobuf::int32 value);

  // optional int32 m_value = 7;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 7;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_rewardid = 8;
  inline bool has_m_rewardid() const;
  inline void clear_m_rewardid();
  static const int kMRewardidFieldNumber = 8;
  inline ::google::protobuf::int32 m_rewardid() const;
  inline void set_m_rewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilPreposetask)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_modeltype();
  inline void clear_has_m_modeltype();
  inline void set_has_m_starttask();
  inline void clear_has_m_starttask();
  inline void set_has_m_endtask();
  inline void clear_has_m_endtask();
  inline void set_has_m_condition();
  inline void clear_has_m_condition();
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_rewardid();
  inline void clear_has_m_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_modeltype_;
  ::google::protobuf::int32 m_starttask_;
  ::google::protobuf::int32 m_endtask_;
  ::google::protobuf::int32 m_condition_;
  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_rewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilPreposetask* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilPreposetask : public ::google::protobuf::Message {
 public:
  Sheet_GodevilPreposetask();
  virtual ~Sheet_GodevilPreposetask();

  Sheet_GodevilPreposetask(const Sheet_GodevilPreposetask& from);

  inline Sheet_GodevilPreposetask& operator=(const Sheet_GodevilPreposetask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilPreposetask& default_instance();

  void Swap(Sheet_GodevilPreposetask* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilPreposetask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilPreposetask& from);
  void MergeFrom(const Sheet_GodevilPreposetask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilPreposetask E_GodevilPreposetask_List = 1;
  inline int e_godevilpreposetask_list_size() const;
  inline void clear_e_godevilpreposetask_list();
  static const int kEGodevilPreposetaskListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilPreposetask& e_godevilpreposetask_list(int index) const;
  inline ::proto_ff::E_GodevilPreposetask* mutable_e_godevilpreposetask_list(int index);
  inline ::proto_ff::E_GodevilPreposetask* add_e_godevilpreposetask_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >&
      e_godevilpreposetask_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >*
      mutable_e_godevilpreposetask_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilPreposetask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask > e_godevilpreposetask_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilPreposetask* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevillvAttributeDesc : public ::google::protobuf::Message {
 public:
  E_GodevilGodevillvAttributeDesc();
  virtual ~E_GodevilGodevillvAttributeDesc();

  E_GodevilGodevillvAttributeDesc(const E_GodevilGodevillvAttributeDesc& from);

  inline E_GodevilGodevillvAttributeDesc& operator=(const E_GodevilGodevillvAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevillvAttributeDesc& default_instance();

  void Swap(E_GodevilGodevillvAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevillvAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevillvAttributeDesc& from);
  void MergeFrom(const E_GodevilGodevillvAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevillvAttributeDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevillvAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevillv : public ::google::protobuf::Message {
 public:
  E_GodevilGodevillv();
  virtual ~E_GodevilGodevillv();

  E_GodevilGodevillv(const E_GodevilGodevillv& from);

  inline E_GodevilGodevillv& operator=(const E_GodevilGodevillv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevillv& default_instance();

  void Swap(E_GodevilGodevillv* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevillv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevillv& from);
  void MergeFrom(const E_GodevilGodevillv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int64 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int64 m_exp() const;
  inline void set_m_exp(::google::protobuf::int64 value);

  // optional int64 m_explimit = 3;
  inline bool has_m_explimit() const;
  inline void clear_m_explimit();
  static const int kMExplimitFieldNumber = 3;
  inline ::google::protobuf::int64 m_explimit() const;
  inline void set_m_explimit(::google::protobuf::int64 value);

  // optional int32 m_itemid = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 5;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // repeated .proto_ff.E_GodevilGodevillvAttributeDesc m_attribute = 6;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 6;
  inline const ::proto_ff::E_GodevilGodevillvAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_GodevilGodevillvAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_GodevilGodevillvAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevillv)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_explimit();
  inline void clear_has_m_explimit();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int64 m_exp_;
  ::google::protobuf::int64 m_explimit_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevillv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilGodevillv : public ::google::protobuf::Message {
 public:
  Sheet_GodevilGodevillv();
  virtual ~Sheet_GodevilGodevillv();

  Sheet_GodevilGodevillv(const Sheet_GodevilGodevillv& from);

  inline Sheet_GodevilGodevillv& operator=(const Sheet_GodevilGodevillv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilGodevillv& default_instance();

  void Swap(Sheet_GodevilGodevillv* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilGodevillv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilGodevillv& from);
  void MergeFrom(const Sheet_GodevilGodevillv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilGodevillv E_GodevilGodevillv_List = 1;
  inline int e_godevilgodevillv_list_size() const;
  inline void clear_e_godevilgodevillv_list();
  static const int kEGodevilGodevillvListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilGodevillv& e_godevilgodevillv_list(int index) const;
  inline ::proto_ff::E_GodevilGodevillv* mutable_e_godevilgodevillv_list(int index);
  inline ::proto_ff::E_GodevilGodevillv* add_e_godevilgodevillv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >&
      e_godevilgodevillv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >*
      mutable_e_godevilgodevillv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilGodevillv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv > e_godevilgodevillv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilGodevillv* default_instance_;
};
// -------------------------------------------------------------------

class E_GodevilGodevilprivilege : public ::google::protobuf::Message {
 public:
  E_GodevilGodevilprivilege();
  virtual ~E_GodevilGodevilprivilege();

  E_GodevilGodevilprivilege(const E_GodevilGodevilprivilege& from);

  inline E_GodevilGodevilprivilege& operator=(const E_GodevilGodevilprivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GodevilGodevilprivilege& default_instance();

  void Swap(E_GodevilGodevilprivilege* other);

  // implements Message ----------------------------------------------

  E_GodevilGodevilprivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GodevilGodevilprivilege& from);
  void MergeFrom(const E_GodevilGodevilprivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_oldprice = 2;
  inline bool has_m_oldprice() const;
  inline void clear_m_oldprice();
  static const int kMOldpriceFieldNumber = 2;
  inline ::google::protobuf::int32 m_oldprice() const;
  inline void set_m_oldprice(::google::protobuf::int32 value);

  // optional int32 m_newprice = 3;
  inline bool has_m_newprice() const;
  inline void clear_m_newprice();
  static const int kMNewpriceFieldNumber = 3;
  inline ::google::protobuf::int32 m_newprice() const;
  inline void set_m_newprice(::google::protobuf::int32 value);

  // optional int32 m_rechargid = 4;
  inline bool has_m_rechargid() const;
  inline void clear_m_rechargid();
  static const int kMRechargidFieldNumber = 4;
  inline ::google::protobuf::int32 m_rechargid() const;
  inline void set_m_rechargid(::google::protobuf::int32 value);

  // optional int32 m_type = 5;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_lv = 6;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 6;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_functiontype = 7;
  inline bool has_m_functiontype() const;
  inline void clear_m_functiontype();
  static const int kMFunctiontypeFieldNumber = 7;
  inline ::google::protobuf::int32 m_functiontype() const;
  inline void set_m_functiontype(::google::protobuf::int32 value);

  // optional int32 m_parama = 8;
  inline bool has_m_parama() const;
  inline void clear_m_parama();
  static const int kMParamaFieldNumber = 8;
  inline ::google::protobuf::int32 m_parama() const;
  inline void set_m_parama(::google::protobuf::int32 value);

  // optional int32 m_equipmentid = 9;
  inline bool has_m_equipmentid() const;
  inline void clear_m_equipmentid();
  static const int kMEquipmentidFieldNumber = 9;
  inline ::google::protobuf::int32 m_equipmentid() const;
  inline void set_m_equipmentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GodevilGodevilprivilege)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_oldprice();
  inline void clear_has_m_oldprice();
  inline void set_has_m_newprice();
  inline void clear_has_m_newprice();
  inline void set_has_m_rechargid();
  inline void clear_has_m_rechargid();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_functiontype();
  inline void clear_has_m_functiontype();
  inline void set_has_m_parama();
  inline void clear_has_m_parama();
  inline void set_has_m_equipmentid();
  inline void clear_has_m_equipmentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_oldprice_;
  ::google::protobuf::int32 m_newprice_;
  ::google::protobuf::int32 m_rechargid_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_functiontype_;
  ::google::protobuf::int32 m_parama_;
  ::google::protobuf::int32 m_equipmentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static E_GodevilGodevilprivilege* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GodevilGodevilprivilege : public ::google::protobuf::Message {
 public:
  Sheet_GodevilGodevilprivilege();
  virtual ~Sheet_GodevilGodevilprivilege();

  Sheet_GodevilGodevilprivilege(const Sheet_GodevilGodevilprivilege& from);

  inline Sheet_GodevilGodevilprivilege& operator=(const Sheet_GodevilGodevilprivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GodevilGodevilprivilege& default_instance();

  void Swap(Sheet_GodevilGodevilprivilege* other);

  // implements Message ----------------------------------------------

  Sheet_GodevilGodevilprivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GodevilGodevilprivilege& from);
  void MergeFrom(const Sheet_GodevilGodevilprivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GodevilGodevilprivilege E_GodevilGodevilprivilege_List = 1;
  inline int e_godevilgodevilprivilege_list_size() const;
  inline void clear_e_godevilgodevilprivilege_list();
  static const int kEGodevilGodevilprivilegeListFieldNumber = 1;
  inline const ::proto_ff::E_GodevilGodevilprivilege& e_godevilgodevilprivilege_list(int index) const;
  inline ::proto_ff::E_GodevilGodevilprivilege* mutable_e_godevilgodevilprivilege_list(int index);
  inline ::proto_ff::E_GodevilGodevilprivilege* add_e_godevilgodevilprivilege_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >&
      e_godevilgodevilprivilege_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >*
      mutable_e_godevilgodevilprivilege_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GodevilGodevilprivilege)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege > e_godevilgodevilprivilege_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_godevil_2eproto();
  friend void protobuf_AssignDesc_godevil_2eproto();
  friend void protobuf_ShutdownFile_godevil_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GodevilGodevilprivilege* default_instance_;
};
// ===================================================================


// ===================================================================

// E_GodevilPreposetask

// optional int32 m_id = 1;
inline bool E_GodevilPreposetask::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilPreposetask::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilPreposetask::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_id() const {
  return m_id_;
}
inline void E_GodevilPreposetask::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_GodevilPreposetask::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilPreposetask::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilPreposetask::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_type() const {
  return m_type_;
}
inline void E_GodevilPreposetask::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_modeltype = 3;
inline bool E_GodevilPreposetask::has_m_modeltype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_modeltype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilPreposetask::clear_has_m_modeltype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilPreposetask::clear_m_modeltype() {
  m_modeltype_ = 0;
  clear_has_m_modeltype();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_modeltype() const {
  return m_modeltype_;
}
inline void E_GodevilPreposetask::set_m_modeltype(::google::protobuf::int32 value) {
  set_has_m_modeltype();
  m_modeltype_ = value;
}

// optional int32 m_starttask = 4;
inline bool E_GodevilPreposetask::has_m_starttask() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_starttask() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilPreposetask::clear_has_m_starttask() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilPreposetask::clear_m_starttask() {
  m_starttask_ = 0;
  clear_has_m_starttask();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_starttask() const {
  return m_starttask_;
}
inline void E_GodevilPreposetask::set_m_starttask(::google::protobuf::int32 value) {
  set_has_m_starttask();
  m_starttask_ = value;
}

// optional int32 m_endtask = 5;
inline bool E_GodevilPreposetask::has_m_endtask() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_endtask() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilPreposetask::clear_has_m_endtask() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilPreposetask::clear_m_endtask() {
  m_endtask_ = 0;
  clear_has_m_endtask();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_endtask() const {
  return m_endtask_;
}
inline void E_GodevilPreposetask::set_m_endtask(::google::protobuf::int32 value) {
  set_has_m_endtask();
  m_endtask_ = value;
}

// optional int32 m_condition = 6;
inline bool E_GodevilPreposetask::has_m_condition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_condition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilPreposetask::clear_has_m_condition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilPreposetask::clear_m_condition() {
  m_condition_ = 0;
  clear_has_m_condition();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_condition() const {
  return m_condition_;
}
inline void E_GodevilPreposetask::set_m_condition(::google::protobuf::int32 value) {
  set_has_m_condition();
  m_condition_ = value;
}

// optional int32 m_value = 7;
inline bool E_GodevilPreposetask::has_m_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilPreposetask::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilPreposetask::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_value() const {
  return m_value_;
}
inline void E_GodevilPreposetask::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_rewardid = 8;
inline bool E_GodevilPreposetask::has_m_rewardid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_GodevilPreposetask::set_has_m_rewardid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_GodevilPreposetask::clear_has_m_rewardid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_GodevilPreposetask::clear_m_rewardid() {
  m_rewardid_ = 0;
  clear_has_m_rewardid();
}
inline ::google::protobuf::int32 E_GodevilPreposetask::m_rewardid() const {
  return m_rewardid_;
}
inline void E_GodevilPreposetask::set_m_rewardid(::google::protobuf::int32 value) {
  set_has_m_rewardid();
  m_rewardid_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilPreposetask

// repeated .proto_ff.E_GodevilPreposetask E_GodevilPreposetask_List = 1;
inline int Sheet_GodevilPreposetask::e_godevilpreposetask_list_size() const {
  return e_godevilpreposetask_list_.size();
}
inline void Sheet_GodevilPreposetask::clear_e_godevilpreposetask_list() {
  e_godevilpreposetask_list_.Clear();
}
inline const ::proto_ff::E_GodevilPreposetask& Sheet_GodevilPreposetask::e_godevilpreposetask_list(int index) const {
  return e_godevilpreposetask_list_.Get(index);
}
inline ::proto_ff::E_GodevilPreposetask* Sheet_GodevilPreposetask::mutable_e_godevilpreposetask_list(int index) {
  return e_godevilpreposetask_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilPreposetask* Sheet_GodevilPreposetask::add_e_godevilpreposetask_list() {
  return e_godevilpreposetask_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >&
Sheet_GodevilPreposetask::e_godevilpreposetask_list() const {
  return e_godevilpreposetask_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilPreposetask >*
Sheet_GodevilPreposetask::mutable_e_godevilpreposetask_list() {
  return &e_godevilpreposetask_list_;
}

// -------------------------------------------------------------------

// E_GodevilGodevillvAttributeDesc

// optional int32 m_type = 1;
inline bool E_GodevilGodevillvAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevillvAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilGodevillvAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_GodevilGodevillvAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_value = 2;
inline bool E_GodevilGodevillvAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevillvAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevillvAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_GodevilGodevillvAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_GodevilGodevillvAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_GodevilGodevillv

// optional int64 m_id = 1;
inline bool E_GodevilGodevillv::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevillv::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevillv::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_GodevilGodevillv::m_id() const {
  return m_id_;
}
inline void E_GodevilGodevillv::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_exp = 2;
inline bool E_GodevilGodevillv::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevillv::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevillv::clear_m_exp() {
  m_exp_ = GOOGLE_LONGLONG(0);
  clear_has_m_exp();
}
inline ::google::protobuf::int64 E_GodevilGodevillv::m_exp() const {
  return m_exp_;
}
inline void E_GodevilGodevillv::set_m_exp(::google::protobuf::int64 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int64 m_explimit = 3;
inline bool E_GodevilGodevillv::has_m_explimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_explimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilGodevillv::clear_has_m_explimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilGodevillv::clear_m_explimit() {
  m_explimit_ = GOOGLE_LONGLONG(0);
  clear_has_m_explimit();
}
inline ::google::protobuf::int64 E_GodevilGodevillv::m_explimit() const {
  return m_explimit_;
}
inline void E_GodevilGodevillv::set_m_explimit(::google::protobuf::int64 value) {
  set_has_m_explimit();
  m_explimit_ = value;
}

// optional int32 m_itemid = 4;
inline bool E_GodevilGodevillv::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilGodevillv::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilGodevillv::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_GodevilGodevillv::m_itemid() const {
  return m_itemid_;
}
inline void E_GodevilGodevillv::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 5;
inline bool E_GodevilGodevillv::has_m_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilGodevillv::set_has_m_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilGodevillv::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilGodevillv::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_GodevilGodevillv::m_num() const {
  return m_num_;
}
inline void E_GodevilGodevillv::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// repeated .proto_ff.E_GodevilGodevillvAttributeDesc m_attribute = 6;
inline int E_GodevilGodevillv::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_GodevilGodevillv::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_GodevilGodevillvAttributeDesc& E_GodevilGodevillv::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_GodevilGodevillvAttributeDesc* E_GodevilGodevillv::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevillvAttributeDesc* E_GodevilGodevillv::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >&
E_GodevilGodevillv::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillvAttributeDesc >*
E_GodevilGodevillv::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_GodevilGodevillv

// repeated .proto_ff.E_GodevilGodevillv E_GodevilGodevillv_List = 1;
inline int Sheet_GodevilGodevillv::e_godevilgodevillv_list_size() const {
  return e_godevilgodevillv_list_.size();
}
inline void Sheet_GodevilGodevillv::clear_e_godevilgodevillv_list() {
  e_godevilgodevillv_list_.Clear();
}
inline const ::proto_ff::E_GodevilGodevillv& Sheet_GodevilGodevillv::e_godevilgodevillv_list(int index) const {
  return e_godevilgodevillv_list_.Get(index);
}
inline ::proto_ff::E_GodevilGodevillv* Sheet_GodevilGodevillv::mutable_e_godevilgodevillv_list(int index) {
  return e_godevilgodevillv_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevillv* Sheet_GodevilGodevillv::add_e_godevilgodevillv_list() {
  return e_godevilgodevillv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >&
Sheet_GodevilGodevillv::e_godevilgodevillv_list() const {
  return e_godevilgodevillv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevillv >*
Sheet_GodevilGodevillv::mutable_e_godevilgodevillv_list() {
  return &e_godevilgodevillv_list_;
}

// -------------------------------------------------------------------

// E_GodevilGodevilprivilege

// optional int64 m_id = 1;
inline bool E_GodevilGodevilprivilege::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GodevilGodevilprivilege::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_GodevilGodevilprivilege::m_id() const {
  return m_id_;
}
inline void E_GodevilGodevilprivilege::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_oldprice = 2;
inline bool E_GodevilGodevilprivilege::has_m_oldprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_oldprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_oldprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GodevilGodevilprivilege::clear_m_oldprice() {
  m_oldprice_ = 0;
  clear_has_m_oldprice();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_oldprice() const {
  return m_oldprice_;
}
inline void E_GodevilGodevilprivilege::set_m_oldprice(::google::protobuf::int32 value) {
  set_has_m_oldprice();
  m_oldprice_ = value;
}

// optional int32 m_newprice = 3;
inline bool E_GodevilGodevilprivilege::has_m_newprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_newprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_newprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GodevilGodevilprivilege::clear_m_newprice() {
  m_newprice_ = 0;
  clear_has_m_newprice();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_newprice() const {
  return m_newprice_;
}
inline void E_GodevilGodevilprivilege::set_m_newprice(::google::protobuf::int32 value) {
  set_has_m_newprice();
  m_newprice_ = value;
}

// optional int32 m_rechargid = 4;
inline bool E_GodevilGodevilprivilege::has_m_rechargid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_rechargid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_rechargid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GodevilGodevilprivilege::clear_m_rechargid() {
  m_rechargid_ = 0;
  clear_has_m_rechargid();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_rechargid() const {
  return m_rechargid_;
}
inline void E_GodevilGodevilprivilege::set_m_rechargid(::google::protobuf::int32 value) {
  set_has_m_rechargid();
  m_rechargid_ = value;
}

// optional int32 m_type = 5;
inline bool E_GodevilGodevilprivilege::has_m_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_GodevilGodevilprivilege::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_type() const {
  return m_type_;
}
inline void E_GodevilGodevilprivilege::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_lv = 6;
inline bool E_GodevilGodevilprivilege::has_m_lv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_lv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_GodevilGodevilprivilege::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_lv() const {
  return m_lv_;
}
inline void E_GodevilGodevilprivilege::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_functiontype = 7;
inline bool E_GodevilGodevilprivilege::has_m_functiontype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_functiontype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_functiontype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_GodevilGodevilprivilege::clear_m_functiontype() {
  m_functiontype_ = 0;
  clear_has_m_functiontype();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_functiontype() const {
  return m_functiontype_;
}
inline void E_GodevilGodevilprivilege::set_m_functiontype(::google::protobuf::int32 value) {
  set_has_m_functiontype();
  m_functiontype_ = value;
}

// optional int32 m_parama = 8;
inline bool E_GodevilGodevilprivilege::has_m_parama() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_parama() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_parama() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_GodevilGodevilprivilege::clear_m_parama() {
  m_parama_ = 0;
  clear_has_m_parama();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_parama() const {
  return m_parama_;
}
inline void E_GodevilGodevilprivilege::set_m_parama(::google::protobuf::int32 value) {
  set_has_m_parama();
  m_parama_ = value;
}

// optional int32 m_equipmentid = 9;
inline bool E_GodevilGodevilprivilege::has_m_equipmentid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_GodevilGodevilprivilege::set_has_m_equipmentid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_GodevilGodevilprivilege::clear_has_m_equipmentid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_GodevilGodevilprivilege::clear_m_equipmentid() {
  m_equipmentid_ = 0;
  clear_has_m_equipmentid();
}
inline ::google::protobuf::int32 E_GodevilGodevilprivilege::m_equipmentid() const {
  return m_equipmentid_;
}
inline void E_GodevilGodevilprivilege::set_m_equipmentid(::google::protobuf::int32 value) {
  set_has_m_equipmentid();
  m_equipmentid_ = value;
}

// -------------------------------------------------------------------

// Sheet_GodevilGodevilprivilege

// repeated .proto_ff.E_GodevilGodevilprivilege E_GodevilGodevilprivilege_List = 1;
inline int Sheet_GodevilGodevilprivilege::e_godevilgodevilprivilege_list_size() const {
  return e_godevilgodevilprivilege_list_.size();
}
inline void Sheet_GodevilGodevilprivilege::clear_e_godevilgodevilprivilege_list() {
  e_godevilgodevilprivilege_list_.Clear();
}
inline const ::proto_ff::E_GodevilGodevilprivilege& Sheet_GodevilGodevilprivilege::e_godevilgodevilprivilege_list(int index) const {
  return e_godevilgodevilprivilege_list_.Get(index);
}
inline ::proto_ff::E_GodevilGodevilprivilege* Sheet_GodevilGodevilprivilege::mutable_e_godevilgodevilprivilege_list(int index) {
  return e_godevilgodevilprivilege_list_.Mutable(index);
}
inline ::proto_ff::E_GodevilGodevilprivilege* Sheet_GodevilGodevilprivilege::add_e_godevilgodevilprivilege_list() {
  return e_godevilgodevilprivilege_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >&
Sheet_GodevilGodevilprivilege::e_godevilgodevilprivilege_list() const {
  return e_godevilgodevilprivilege_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GodevilGodevilprivilege >*
Sheet_GodevilGodevilprivilege::mutable_e_godevilgodevilprivilege_list() {
  return &e_godevilgodevilprivilege_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_godevil_2eproto__INCLUDED
