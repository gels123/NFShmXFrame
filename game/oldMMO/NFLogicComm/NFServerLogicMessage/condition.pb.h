// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: condition.proto

#ifndef PROTOBUF_condition_2eproto__INCLUDED
#define PROTOBUF_condition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_condition_2eproto();
void protobuf_AssignDesc_condition_2eproto();
void protobuf_ShutdownFile_condition_2eproto();

class E_ConditionConditionConditionDesc;
class E_ConditionCondition;
class Sheet_ConditionCondition;

// ===================================================================

class E_ConditionConditionConditionDesc : public ::google::protobuf::Message {
 public:
  E_ConditionConditionConditionDesc();
  virtual ~E_ConditionConditionConditionDesc();

  E_ConditionConditionConditionDesc(const E_ConditionConditionConditionDesc& from);

  inline E_ConditionConditionConditionDesc& operator=(const E_ConditionConditionConditionDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConditionConditionConditionDesc& default_instance();

  void Swap(E_ConditionConditionConditionDesc* other);

  // implements Message ----------------------------------------------

  E_ConditionConditionConditionDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConditionConditionConditionDesc& from);
  void MergeFrom(const E_ConditionConditionConditionDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_param = 2;
  inline bool has_m_param() const;
  inline void clear_m_param();
  static const int kMParamFieldNumber = 2;
  inline ::google::protobuf::int32 m_param() const;
  inline void set_m_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConditionConditionConditionDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_param();
  inline void clear_has_m_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_condition_2eproto();
  friend void protobuf_AssignDesc_condition_2eproto();
  friend void protobuf_ShutdownFile_condition_2eproto();

  void InitAsDefaultInstance();
  static E_ConditionConditionConditionDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConditionCondition : public ::google::protobuf::Message {
 public:
  E_ConditionCondition();
  virtual ~E_ConditionCondition();

  E_ConditionCondition(const E_ConditionCondition& from);

  inline E_ConditionCondition& operator=(const E_ConditionCondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConditionCondition& default_instance();

  void Swap(E_ConditionCondition* other);

  // implements Message ----------------------------------------------

  E_ConditionCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConditionCondition& from);
  void MergeFrom(const E_ConditionCondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ConditionConditionConditionDesc m_condition = 2;
  inline int m_condition_size() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 2;
  inline const ::proto_ff::E_ConditionConditionConditionDesc& m_condition(int index) const;
  inline ::proto_ff::E_ConditionConditionConditionDesc* mutable_m_condition(int index);
  inline ::proto_ff::E_ConditionConditionConditionDesc* add_m_condition();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionConditionConditionDesc >&
      m_condition() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionConditionConditionDesc >*
      mutable_m_condition();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConditionCondition)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionConditionConditionDesc > m_condition_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_condition_2eproto();
  friend void protobuf_AssignDesc_condition_2eproto();
  friend void protobuf_ShutdownFile_condition_2eproto();

  void InitAsDefaultInstance();
  static E_ConditionCondition* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConditionCondition : public ::google::protobuf::Message {
 public:
  Sheet_ConditionCondition();
  virtual ~Sheet_ConditionCondition();

  Sheet_ConditionCondition(const Sheet_ConditionCondition& from);

  inline Sheet_ConditionCondition& operator=(const Sheet_ConditionCondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConditionCondition& default_instance();

  void Swap(Sheet_ConditionCondition* other);

  // implements Message ----------------------------------------------

  Sheet_ConditionCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConditionCondition& from);
  void MergeFrom(const Sheet_ConditionCondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConditionCondition E_ConditionCondition_List = 1;
  inline int e_conditioncondition_list_size() const;
  inline void clear_e_conditioncondition_list();
  static const int kEConditionConditionListFieldNumber = 1;
  inline const ::proto_ff::E_ConditionCondition& e_conditioncondition_list(int index) const;
  inline ::proto_ff::E_ConditionCondition* mutable_e_conditioncondition_list(int index);
  inline ::proto_ff::E_ConditionCondition* add_e_conditioncondition_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionCondition >&
      e_conditioncondition_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionCondition >*
      mutable_e_conditioncondition_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConditionCondition)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionCondition > e_conditioncondition_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_condition_2eproto();
  friend void protobuf_AssignDesc_condition_2eproto();
  friend void protobuf_ShutdownFile_condition_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConditionCondition* default_instance_;
};
// ===================================================================


// ===================================================================

// E_ConditionConditionConditionDesc

// optional int32 m_type = 1;
inline bool E_ConditionConditionConditionDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConditionConditionConditionDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConditionConditionConditionDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConditionConditionConditionDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ConditionConditionConditionDesc::m_type() const {
  return m_type_;
}
inline void E_ConditionConditionConditionDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_param = 2;
inline bool E_ConditionConditionConditionDesc::has_m_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConditionConditionConditionDesc::set_has_m_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConditionConditionConditionDesc::clear_has_m_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConditionConditionConditionDesc::clear_m_param() {
  m_param_ = 0;
  clear_has_m_param();
}
inline ::google::protobuf::int32 E_ConditionConditionConditionDesc::m_param() const {
  return m_param_;
}
inline void E_ConditionConditionConditionDesc::set_m_param(::google::protobuf::int32 value) {
  set_has_m_param();
  m_param_ = value;
}

// -------------------------------------------------------------------

// E_ConditionCondition

// optional int32 m_id = 1;
inline bool E_ConditionCondition::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConditionCondition::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConditionCondition::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConditionCondition::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConditionCondition::m_id() const {
  return m_id_;
}
inline void E_ConditionCondition::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// repeated .proto_ff.E_ConditionConditionConditionDesc m_condition = 2;
inline int E_ConditionCondition::m_condition_size() const {
  return m_condition_.size();
}
inline void E_ConditionCondition::clear_m_condition() {
  m_condition_.Clear();
}
inline const ::proto_ff::E_ConditionConditionConditionDesc& E_ConditionCondition::m_condition(int index) const {
  return m_condition_.Get(index);
}
inline ::proto_ff::E_ConditionConditionConditionDesc* E_ConditionCondition::mutable_m_condition(int index) {
  return m_condition_.Mutable(index);
}
inline ::proto_ff::E_ConditionConditionConditionDesc* E_ConditionCondition::add_m_condition() {
  return m_condition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionConditionConditionDesc >&
E_ConditionCondition::m_condition() const {
  return m_condition_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionConditionConditionDesc >*
E_ConditionCondition::mutable_m_condition() {
  return &m_condition_;
}

// -------------------------------------------------------------------

// Sheet_ConditionCondition

// repeated .proto_ff.E_ConditionCondition E_ConditionCondition_List = 1;
inline int Sheet_ConditionCondition::e_conditioncondition_list_size() const {
  return e_conditioncondition_list_.size();
}
inline void Sheet_ConditionCondition::clear_e_conditioncondition_list() {
  e_conditioncondition_list_.Clear();
}
inline const ::proto_ff::E_ConditionCondition& Sheet_ConditionCondition::e_conditioncondition_list(int index) const {
  return e_conditioncondition_list_.Get(index);
}
inline ::proto_ff::E_ConditionCondition* Sheet_ConditionCondition::mutable_e_conditioncondition_list(int index) {
  return e_conditioncondition_list_.Mutable(index);
}
inline ::proto_ff::E_ConditionCondition* Sheet_ConditionCondition::add_e_conditioncondition_list() {
  return e_conditioncondition_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionCondition >&
Sheet_ConditionCondition::e_conditioncondition_list() const {
  return e_conditioncondition_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConditionCondition >*
Sheet_ConditionCondition::mutable_e_conditioncondition_list() {
  return &e_conditioncondition_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_condition_2eproto__INCLUDED
