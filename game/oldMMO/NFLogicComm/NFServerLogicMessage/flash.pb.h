// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flash.proto

#ifndef PROTOBUF_flash_2eproto__INCLUDED
#define PROTOBUF_flash_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_flash_2eproto();
void protobuf_AssignDesc_flash_2eproto();
void protobuf_ShutdownFile_flash_2eproto();

class flashflashmonsterDesc;
class flashflash;
class Sheet_flashflash;
class flashitemFlashmonsterDesc;
class flashitemFlash;
class Sheet_flashitemFlash;

// ===================================================================

class flashflashmonsterDesc : public ::google::protobuf::Message {
 public:
  flashflashmonsterDesc();
  virtual ~flashflashmonsterDesc();

  flashflashmonsterDesc(const flashflashmonsterDesc& from);

  inline flashflashmonsterDesc& operator=(const flashflashmonsterDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flashflashmonsterDesc& default_instance();

  void Swap(flashflashmonsterDesc* other);

  // implements Message ----------------------------------------------

  flashflashmonsterDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flashflashmonsterDesc& from);
  void MergeFrom(const flashflashmonsterDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.flashflashmonsterDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_flash_2eproto();
  friend void protobuf_AssignDesc_flash_2eproto();
  friend void protobuf_ShutdownFile_flash_2eproto();

  void InitAsDefaultInstance();
  static flashflashmonsterDesc* default_instance_;
};
// -------------------------------------------------------------------

class flashflash : public ::google::protobuf::Message {
 public:
  flashflash();
  virtual ~flashflash();

  flashflash(const flashflash& from);

  inline flashflash& operator=(const flashflash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flashflash& default_instance();

  void Swap(flashflash* other);

  // implements Message ----------------------------------------------

  flashflash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flashflash& from);
  void MergeFrom(const flashflash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 typeID = 2;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIDFieldNumber = 2;
  inline ::google::protobuf::int64 typeid_() const;
  inline void set_typeid_(::google::protobuf::int64 value);

  // optional int32 monster_Type = 3;
  inline bool has_monster_type() const;
  inline void clear_monster_type();
  static const int kMonsterTypeFieldNumber = 3;
  inline ::google::protobuf::int32 monster_type() const;
  inline void set_monster_type(::google::protobuf::int32 value);

  // optional int32 isLevelDynamic = 4;
  inline bool has_isleveldynamic() const;
  inline void clear_isleveldynamic();
  static const int kIsLevelDynamicFieldNumber = 4;
  inline ::google::protobuf::int32 isleveldynamic() const;
  inline void set_isleveldynamic(::google::protobuf::int32 value);

  // optional int32 miniLevel = 5;
  inline bool has_minilevel() const;
  inline void clear_minilevel();
  static const int kMiniLevelFieldNumber = 5;
  inline ::google::protobuf::int32 minilevel() const;
  inline void set_minilevel(::google::protobuf::int32 value);

  // optional int32 levelCheck = 6;
  inline bool has_levelcheck() const;
  inline void clear_levelcheck();
  static const int kLevelCheckFieldNumber = 6;
  inline ::google::protobuf::int32 levelcheck() const;
  inline void set_levelcheck(::google::protobuf::int32 value);

  // optional int32 monsterRefreshTime = 7;
  inline bool has_monsterrefreshtime() const;
  inline void clear_monsterrefreshtime();
  static const int kMonsterRefreshTimeFieldNumber = 7;
  inline ::google::protobuf::int32 monsterrefreshtime() const;
  inline void set_monsterrefreshtime(::google::protobuf::int32 value);

  // optional int64 facePath = 8;
  inline bool has_facepath() const;
  inline void clear_facepath();
  static const int kFacePathFieldNumber = 8;
  inline ::google::protobuf::int64 facepath() const;
  inline void set_facepath(::google::protobuf::int64 value);

  // repeated .proto_ff.flashflashmonsterDesc monster = 9;
  inline int monster_size() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 9;
  inline const ::proto_ff::flashflashmonsterDesc& monster(int index) const;
  inline ::proto_ff::flashflashmonsterDesc* mutable_monster(int index);
  inline ::proto_ff::flashflashmonsterDesc* add_monster();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflashmonsterDesc >&
      monster() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflashmonsterDesc >*
      mutable_monster();

  // @@protoc_insertion_point(class_scope:proto_ff.flashflash)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_typeid_();
  inline void clear_has_typeid_();
  inline void set_has_monster_type();
  inline void clear_has_monster_type();
  inline void set_has_isleveldynamic();
  inline void clear_has_isleveldynamic();
  inline void set_has_minilevel();
  inline void clear_has_minilevel();
  inline void set_has_levelcheck();
  inline void clear_has_levelcheck();
  inline void set_has_monsterrefreshtime();
  inline void clear_has_monsterrefreshtime();
  inline void set_has_facepath();
  inline void clear_has_facepath();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 typeid__;
  ::google::protobuf::int32 monster_type_;
  ::google::protobuf::int32 isleveldynamic_;
  ::google::protobuf::int32 minilevel_;
  ::google::protobuf::int32 levelcheck_;
  ::google::protobuf::int64 facepath_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflashmonsterDesc > monster_;
  ::google::protobuf::int32 monsterrefreshtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_flash_2eproto();
  friend void protobuf_AssignDesc_flash_2eproto();
  friend void protobuf_ShutdownFile_flash_2eproto();

  void InitAsDefaultInstance();
  static flashflash* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_flashflash : public ::google::protobuf::Message {
 public:
  Sheet_flashflash();
  virtual ~Sheet_flashflash();

  Sheet_flashflash(const Sheet_flashflash& from);

  inline Sheet_flashflash& operator=(const Sheet_flashflash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_flashflash& default_instance();

  void Swap(Sheet_flashflash* other);

  // implements Message ----------------------------------------------

  Sheet_flashflash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_flashflash& from);
  void MergeFrom(const Sheet_flashflash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.flashflash flashflash_List = 1;
  inline int flashflash_list_size() const;
  inline void clear_flashflash_list();
  static const int kFlashflashListFieldNumber = 1;
  inline const ::proto_ff::flashflash& flashflash_list(int index) const;
  inline ::proto_ff::flashflash* mutable_flashflash_list(int index);
  inline ::proto_ff::flashflash* add_flashflash_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflash >&
      flashflash_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflash >*
      mutable_flashflash_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_flashflash)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflash > flashflash_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_flash_2eproto();
  friend void protobuf_AssignDesc_flash_2eproto();
  friend void protobuf_ShutdownFile_flash_2eproto();

  void InitAsDefaultInstance();
  static Sheet_flashflash* default_instance_;
};
// -------------------------------------------------------------------

class flashitemFlashmonsterDesc : public ::google::protobuf::Message {
 public:
  flashitemFlashmonsterDesc();
  virtual ~flashitemFlashmonsterDesc();

  flashitemFlashmonsterDesc(const flashitemFlashmonsterDesc& from);

  inline flashitemFlashmonsterDesc& operator=(const flashitemFlashmonsterDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flashitemFlashmonsterDesc& default_instance();

  void Swap(flashitemFlashmonsterDesc* other);

  // implements Message ----------------------------------------------

  flashitemFlashmonsterDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flashitemFlashmonsterDesc& from);
  void MergeFrom(const flashitemFlashmonsterDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 weight = 2;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 2;
  inline ::google::protobuf::int32 weight() const;
  inline void set_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.flashitemFlashmonsterDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_flash_2eproto();
  friend void protobuf_AssignDesc_flash_2eproto();
  friend void protobuf_ShutdownFile_flash_2eproto();

  void InitAsDefaultInstance();
  static flashitemFlashmonsterDesc* default_instance_;
};
// -------------------------------------------------------------------

class flashitemFlash : public ::google::protobuf::Message {
 public:
  flashitemFlash();
  virtual ~flashitemFlash();

  flashitemFlash(const flashitemFlash& from);

  inline flashitemFlash& operator=(const flashitemFlash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flashitemFlash& default_instance();

  void Swap(flashitemFlash* other);

  // implements Message ----------------------------------------------

  flashitemFlash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flashitemFlash& from);
  void MergeFrom(const flashitemFlash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string useMap = 2;
  inline bool has_usemap() const;
  inline void clear_usemap();
  static const int kUseMapFieldNumber = 2;
  inline const ::std::string& usemap() const;
  inline void set_usemap(const ::std::string& value);
  inline void set_usemap(const char* value);
  inline void set_usemap(const char* value, size_t size);
  inline ::std::string* mutable_usemap();
  inline ::std::string* release_usemap();
  inline void set_allocated_usemap(::std::string* usemap);

  // optional int32 live = 3;
  inline bool has_live() const;
  inline void clear_live();
  static const int kLiveFieldNumber = 3;
  inline ::google::protobuf::int32 live() const;
  inline void set_live(::google::protobuf::int32 value);

  // optional int32 levelwave = 4;
  inline bool has_levelwave() const;
  inline void clear_levelwave();
  static const int kLevelwaveFieldNumber = 4;
  inline ::google::protobuf::int32 levelwave() const;
  inline void set_levelwave(::google::protobuf::int32 value);

  // optional int32 flashNum = 5;
  inline bool has_flashnum() const;
  inline void clear_flashnum();
  static const int kFlashNumFieldNumber = 5;
  inline ::google::protobuf::int32 flashnum() const;
  inline void set_flashnum(::google::protobuf::int32 value);

  // repeated .proto_ff.flashitemFlashmonsterDesc monster = 6;
  inline int monster_size() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 6;
  inline const ::proto_ff::flashitemFlashmonsterDesc& monster(int index) const;
  inline ::proto_ff::flashitemFlashmonsterDesc* mutable_monster(int index);
  inline ::proto_ff::flashitemFlashmonsterDesc* add_monster();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlashmonsterDesc >&
      monster() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlashmonsterDesc >*
      mutable_monster();

  // @@protoc_insertion_point(class_scope:proto_ff.flashitemFlash)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_usemap();
  inline void clear_has_usemap();
  inline void set_has_live();
  inline void clear_has_live();
  inline void set_has_levelwave();
  inline void clear_has_levelwave();
  inline void set_has_flashnum();
  inline void clear_has_flashnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* usemap_;
  ::google::protobuf::int32 live_;
  ::google::protobuf::int32 levelwave_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlashmonsterDesc > monster_;
  ::google::protobuf::int32 flashnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_flash_2eproto();
  friend void protobuf_AssignDesc_flash_2eproto();
  friend void protobuf_ShutdownFile_flash_2eproto();

  void InitAsDefaultInstance();
  static flashitemFlash* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_flashitemFlash : public ::google::protobuf::Message {
 public:
  Sheet_flashitemFlash();
  virtual ~Sheet_flashitemFlash();

  Sheet_flashitemFlash(const Sheet_flashitemFlash& from);

  inline Sheet_flashitemFlash& operator=(const Sheet_flashitemFlash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_flashitemFlash& default_instance();

  void Swap(Sheet_flashitemFlash* other);

  // implements Message ----------------------------------------------

  Sheet_flashitemFlash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_flashitemFlash& from);
  void MergeFrom(const Sheet_flashitemFlash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.flashitemFlash flashitemFlash_List = 1;
  inline int flashitemflash_list_size() const;
  inline void clear_flashitemflash_list();
  static const int kFlashitemFlashListFieldNumber = 1;
  inline const ::proto_ff::flashitemFlash& flashitemflash_list(int index) const;
  inline ::proto_ff::flashitemFlash* mutable_flashitemflash_list(int index);
  inline ::proto_ff::flashitemFlash* add_flashitemflash_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlash >&
      flashitemflash_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlash >*
      mutable_flashitemflash_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_flashitemFlash)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlash > flashitemflash_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_flash_2eproto();
  friend void protobuf_AssignDesc_flash_2eproto();
  friend void protobuf_ShutdownFile_flash_2eproto();

  void InitAsDefaultInstance();
  static Sheet_flashitemFlash* default_instance_;
};
// ===================================================================


// ===================================================================

// flashflashmonsterDesc

// optional int32 Num = 1;
inline bool flashflashmonsterDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flashflashmonsterDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flashflashmonsterDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flashflashmonsterDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 flashflashmonsterDesc::num() const {
  return num_;
}
inline void flashflashmonsterDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 ID = 2;
inline bool flashflashmonsterDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flashflashmonsterDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flashflashmonsterDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flashflashmonsterDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 flashflashmonsterDesc::id() const {
  return id_;
}
inline void flashflashmonsterDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// flashflash

// optional int64 id = 1;
inline bool flashflash::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flashflash::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flashflash::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flashflash::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 flashflash::id() const {
  return id_;
}
inline void flashflash::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 typeID = 2;
inline bool flashflash::has_typeid_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flashflash::set_has_typeid_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flashflash::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flashflash::clear_typeid_() {
  typeid__ = GOOGLE_LONGLONG(0);
  clear_has_typeid_();
}
inline ::google::protobuf::int64 flashflash::typeid_() const {
  return typeid__;
}
inline void flashflash::set_typeid_(::google::protobuf::int64 value) {
  set_has_typeid_();
  typeid__ = value;
}

// optional int32 monster_Type = 3;
inline bool flashflash::has_monster_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flashflash::set_has_monster_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flashflash::clear_has_monster_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flashflash::clear_monster_type() {
  monster_type_ = 0;
  clear_has_monster_type();
}
inline ::google::protobuf::int32 flashflash::monster_type() const {
  return monster_type_;
}
inline void flashflash::set_monster_type(::google::protobuf::int32 value) {
  set_has_monster_type();
  monster_type_ = value;
}

// optional int32 isLevelDynamic = 4;
inline bool flashflash::has_isleveldynamic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flashflash::set_has_isleveldynamic() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flashflash::clear_has_isleveldynamic() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flashflash::clear_isleveldynamic() {
  isleveldynamic_ = 0;
  clear_has_isleveldynamic();
}
inline ::google::protobuf::int32 flashflash::isleveldynamic() const {
  return isleveldynamic_;
}
inline void flashflash::set_isleveldynamic(::google::protobuf::int32 value) {
  set_has_isleveldynamic();
  isleveldynamic_ = value;
}

// optional int32 miniLevel = 5;
inline bool flashflash::has_minilevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flashflash::set_has_minilevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flashflash::clear_has_minilevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flashflash::clear_minilevel() {
  minilevel_ = 0;
  clear_has_minilevel();
}
inline ::google::protobuf::int32 flashflash::minilevel() const {
  return minilevel_;
}
inline void flashflash::set_minilevel(::google::protobuf::int32 value) {
  set_has_minilevel();
  minilevel_ = value;
}

// optional int32 levelCheck = 6;
inline bool flashflash::has_levelcheck() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void flashflash::set_has_levelcheck() {
  _has_bits_[0] |= 0x00000020u;
}
inline void flashflash::clear_has_levelcheck() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void flashflash::clear_levelcheck() {
  levelcheck_ = 0;
  clear_has_levelcheck();
}
inline ::google::protobuf::int32 flashflash::levelcheck() const {
  return levelcheck_;
}
inline void flashflash::set_levelcheck(::google::protobuf::int32 value) {
  set_has_levelcheck();
  levelcheck_ = value;
}

// optional int32 monsterRefreshTime = 7;
inline bool flashflash::has_monsterrefreshtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void flashflash::set_has_monsterrefreshtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void flashflash::clear_has_monsterrefreshtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void flashflash::clear_monsterrefreshtime() {
  monsterrefreshtime_ = 0;
  clear_has_monsterrefreshtime();
}
inline ::google::protobuf::int32 flashflash::monsterrefreshtime() const {
  return monsterrefreshtime_;
}
inline void flashflash::set_monsterrefreshtime(::google::protobuf::int32 value) {
  set_has_monsterrefreshtime();
  monsterrefreshtime_ = value;
}

// optional int64 facePath = 8;
inline bool flashflash::has_facepath() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void flashflash::set_has_facepath() {
  _has_bits_[0] |= 0x00000080u;
}
inline void flashflash::clear_has_facepath() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void flashflash::clear_facepath() {
  facepath_ = GOOGLE_LONGLONG(0);
  clear_has_facepath();
}
inline ::google::protobuf::int64 flashflash::facepath() const {
  return facepath_;
}
inline void flashflash::set_facepath(::google::protobuf::int64 value) {
  set_has_facepath();
  facepath_ = value;
}

// repeated .proto_ff.flashflashmonsterDesc monster = 9;
inline int flashflash::monster_size() const {
  return monster_.size();
}
inline void flashflash::clear_monster() {
  monster_.Clear();
}
inline const ::proto_ff::flashflashmonsterDesc& flashflash::monster(int index) const {
  return monster_.Get(index);
}
inline ::proto_ff::flashflashmonsterDesc* flashflash::mutable_monster(int index) {
  return monster_.Mutable(index);
}
inline ::proto_ff::flashflashmonsterDesc* flashflash::add_monster() {
  return monster_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflashmonsterDesc >&
flashflash::monster() const {
  return monster_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflashmonsterDesc >*
flashflash::mutable_monster() {
  return &monster_;
}

// -------------------------------------------------------------------

// Sheet_flashflash

// repeated .proto_ff.flashflash flashflash_List = 1;
inline int Sheet_flashflash::flashflash_list_size() const {
  return flashflash_list_.size();
}
inline void Sheet_flashflash::clear_flashflash_list() {
  flashflash_list_.Clear();
}
inline const ::proto_ff::flashflash& Sheet_flashflash::flashflash_list(int index) const {
  return flashflash_list_.Get(index);
}
inline ::proto_ff::flashflash* Sheet_flashflash::mutable_flashflash_list(int index) {
  return flashflash_list_.Mutable(index);
}
inline ::proto_ff::flashflash* Sheet_flashflash::add_flashflash_list() {
  return flashflash_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflash >&
Sheet_flashflash::flashflash_list() const {
  return flashflash_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashflash >*
Sheet_flashflash::mutable_flashflash_list() {
  return &flashflash_list_;
}

// -------------------------------------------------------------------

// flashitemFlashmonsterDesc

// optional int64 Id = 1;
inline bool flashitemFlashmonsterDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flashitemFlashmonsterDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flashitemFlashmonsterDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flashitemFlashmonsterDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 flashitemFlashmonsterDesc::id() const {
  return id_;
}
inline void flashitemFlashmonsterDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 weight = 2;
inline bool flashitemFlashmonsterDesc::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flashitemFlashmonsterDesc::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flashitemFlashmonsterDesc::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flashitemFlashmonsterDesc::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 flashitemFlashmonsterDesc::weight() const {
  return weight_;
}
inline void flashitemFlashmonsterDesc::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
}

// -------------------------------------------------------------------

// flashitemFlash

// optional int64 id = 1;
inline bool flashitemFlash::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flashitemFlash::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flashitemFlash::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flashitemFlash::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 flashitemFlash::id() const {
  return id_;
}
inline void flashitemFlash::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string useMap = 2;
inline bool flashitemFlash::has_usemap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flashitemFlash::set_has_usemap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flashitemFlash::clear_has_usemap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flashitemFlash::clear_usemap() {
  if (usemap_ != &::google::protobuf::internal::kEmptyString) {
    usemap_->clear();
  }
  clear_has_usemap();
}
inline const ::std::string& flashitemFlash::usemap() const {
  return *usemap_;
}
inline void flashitemFlash::set_usemap(const ::std::string& value) {
  set_has_usemap();
  if (usemap_ == &::google::protobuf::internal::kEmptyString) {
    usemap_ = new ::std::string;
  }
  usemap_->assign(value);
}
inline void flashitemFlash::set_usemap(const char* value) {
  set_has_usemap();
  if (usemap_ == &::google::protobuf::internal::kEmptyString) {
    usemap_ = new ::std::string;
  }
  usemap_->assign(value);
}
inline void flashitemFlash::set_usemap(const char* value, size_t size) {
  set_has_usemap();
  if (usemap_ == &::google::protobuf::internal::kEmptyString) {
    usemap_ = new ::std::string;
  }
  usemap_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* flashitemFlash::mutable_usemap() {
  set_has_usemap();
  if (usemap_ == &::google::protobuf::internal::kEmptyString) {
    usemap_ = new ::std::string;
  }
  return usemap_;
}
inline ::std::string* flashitemFlash::release_usemap() {
  clear_has_usemap();
  if (usemap_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = usemap_;
    usemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void flashitemFlash::set_allocated_usemap(::std::string* usemap) {
  if (usemap_ != &::google::protobuf::internal::kEmptyString) {
    delete usemap_;
  }
  if (usemap) {
    set_has_usemap();
    usemap_ = usemap;
  } else {
    clear_has_usemap();
    usemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 live = 3;
inline bool flashitemFlash::has_live() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flashitemFlash::set_has_live() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flashitemFlash::clear_has_live() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flashitemFlash::clear_live() {
  live_ = 0;
  clear_has_live();
}
inline ::google::protobuf::int32 flashitemFlash::live() const {
  return live_;
}
inline void flashitemFlash::set_live(::google::protobuf::int32 value) {
  set_has_live();
  live_ = value;
}

// optional int32 levelwave = 4;
inline bool flashitemFlash::has_levelwave() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flashitemFlash::set_has_levelwave() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flashitemFlash::clear_has_levelwave() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flashitemFlash::clear_levelwave() {
  levelwave_ = 0;
  clear_has_levelwave();
}
inline ::google::protobuf::int32 flashitemFlash::levelwave() const {
  return levelwave_;
}
inline void flashitemFlash::set_levelwave(::google::protobuf::int32 value) {
  set_has_levelwave();
  levelwave_ = value;
}

// optional int32 flashNum = 5;
inline bool flashitemFlash::has_flashnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flashitemFlash::set_has_flashnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flashitemFlash::clear_has_flashnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flashitemFlash::clear_flashnum() {
  flashnum_ = 0;
  clear_has_flashnum();
}
inline ::google::protobuf::int32 flashitemFlash::flashnum() const {
  return flashnum_;
}
inline void flashitemFlash::set_flashnum(::google::protobuf::int32 value) {
  set_has_flashnum();
  flashnum_ = value;
}

// repeated .proto_ff.flashitemFlashmonsterDesc monster = 6;
inline int flashitemFlash::monster_size() const {
  return monster_.size();
}
inline void flashitemFlash::clear_monster() {
  monster_.Clear();
}
inline const ::proto_ff::flashitemFlashmonsterDesc& flashitemFlash::monster(int index) const {
  return monster_.Get(index);
}
inline ::proto_ff::flashitemFlashmonsterDesc* flashitemFlash::mutable_monster(int index) {
  return monster_.Mutable(index);
}
inline ::proto_ff::flashitemFlashmonsterDesc* flashitemFlash::add_monster() {
  return monster_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlashmonsterDesc >&
flashitemFlash::monster() const {
  return monster_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlashmonsterDesc >*
flashitemFlash::mutable_monster() {
  return &monster_;
}

// -------------------------------------------------------------------

// Sheet_flashitemFlash

// repeated .proto_ff.flashitemFlash flashitemFlash_List = 1;
inline int Sheet_flashitemFlash::flashitemflash_list_size() const {
  return flashitemflash_list_.size();
}
inline void Sheet_flashitemFlash::clear_flashitemflash_list() {
  flashitemflash_list_.Clear();
}
inline const ::proto_ff::flashitemFlash& Sheet_flashitemFlash::flashitemflash_list(int index) const {
  return flashitemflash_list_.Get(index);
}
inline ::proto_ff::flashitemFlash* Sheet_flashitemFlash::mutable_flashitemflash_list(int index) {
  return flashitemflash_list_.Mutable(index);
}
inline ::proto_ff::flashitemFlash* Sheet_flashitemFlash::add_flashitemflash_list() {
  return flashitemflash_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlash >&
Sheet_flashitemFlash::flashitemflash_list() const {
  return flashitemflash_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::flashitemFlash >*
Sheet_flashitemFlash::mutable_flashitemflash_list() {
  return &flashitemflash_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_flash_2eproto__INCLUDED
