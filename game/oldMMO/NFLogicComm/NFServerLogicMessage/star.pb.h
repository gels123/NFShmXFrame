// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: star.proto

#ifndef PROTOBUF_star_2eproto__INCLUDED
#define PROTOBUF_star_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_star_2eproto();
void protobuf_AssignDesc_star_2eproto();
void protobuf_ShutdownFile_star_2eproto();

class starpoint;
class Sheet_starpoint;
class starstarstarDesc;
class starstar;
class Sheet_starstar;
class starexp;
class Sheet_starexp;
class starastrology;
class Sheet_starastrology;

// ===================================================================

class starpoint : public ::google::protobuf::Message {
 public:
  starpoint();
  virtual ~starpoint();

  starpoint(const starpoint& from);

  inline starpoint& operator=(const starpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const starpoint& default_instance();

  void Swap(starpoint* other);

  // implements Message ----------------------------------------------

  starpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const starpoint& from);
  void MergeFrom(const starpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 starID = 1;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIDFieldNumber = 1;
  inline ::google::protobuf::int32 starid() const;
  inline void set_starid(::google::protobuf::int32 value);

  // optional int32 starNum = 2;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 2;
  inline ::google::protobuf::int32 starnum() const;
  inline void set_starnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.starpoint)
 private:
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_starnum();
  inline void clear_has_starnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 starid_;
  ::google::protobuf::int32 starnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static starpoint* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_starpoint : public ::google::protobuf::Message {
 public:
  Sheet_starpoint();
  virtual ~Sheet_starpoint();

  Sheet_starpoint(const Sheet_starpoint& from);

  inline Sheet_starpoint& operator=(const Sheet_starpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_starpoint& default_instance();

  void Swap(Sheet_starpoint* other);

  // implements Message ----------------------------------------------

  Sheet_starpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_starpoint& from);
  void MergeFrom(const Sheet_starpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.starpoint starpoint_List = 1;
  inline int starpoint_list_size() const;
  inline void clear_starpoint_list();
  static const int kStarpointListFieldNumber = 1;
  inline const ::proto_ff::starpoint& starpoint_list(int index) const;
  inline ::proto_ff::starpoint* mutable_starpoint_list(int index);
  inline ::proto_ff::starpoint* add_starpoint_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starpoint >&
      starpoint_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starpoint >*
      mutable_starpoint_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_starpoint)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::starpoint > starpoint_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static Sheet_starpoint* default_instance_;
};
// -------------------------------------------------------------------

class starstarstarDesc : public ::google::protobuf::Message {
 public:
  starstarstarDesc();
  virtual ~starstarstarDesc();

  starstarstarDesc(const starstarstarDesc& from);

  inline starstarstarDesc& operator=(const starstarstarDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const starstarstarDesc& default_instance();

  void Swap(starstarstarDesc* other);

  // implements Message ----------------------------------------------

  starstarstarDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const starstarstarDesc& from);
  void MergeFrom(const starstarstarDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Att = 1;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 1;
  inline ::google::protobuf::int32 att() const;
  inline void set_att(::google::protobuf::int32 value);

  // optional int32 Attnum = 2;
  inline bool has_attnum() const;
  inline void clear_attnum();
  static const int kAttnumFieldNumber = 2;
  inline ::google::protobuf::int32 attnum() const;
  inline void set_attnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.starstarstarDesc)
 private:
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_attnum();
  inline void clear_has_attnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att_;
  ::google::protobuf::int32 attnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static starstarstarDesc* default_instance_;
};
// -------------------------------------------------------------------

class starstar : public ::google::protobuf::Message {
 public:
  starstar();
  virtual ~starstar();

  starstar(const starstar& from);

  inline starstar& operator=(const starstar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const starstar& default_instance();

  void Swap(starstar* other);

  // implements Message ----------------------------------------------

  starstar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const starstar& from);
  void MergeFrom(const starstar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 starID = 1;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIDFieldNumber = 1;
  inline ::google::protobuf::int64 starid() const;
  inline void set_starid(::google::protobuf::int64 value);

  // optional string starName = 2;
  inline bool has_starname() const;
  inline void clear_starname();
  static const int kStarNameFieldNumber = 2;
  inline const ::std::string& starname() const;
  inline void set_starname(const ::std::string& value);
  inline void set_starname(const char* value);
  inline void set_starname(const char* value, size_t size);
  inline ::std::string* mutable_starname();
  inline ::std::string* release_starname();
  inline void set_allocated_starname(::std::string* starname);

  // optional int32 starQuality = 3;
  inline bool has_starquality() const;
  inline void clear_starquality();
  static const int kStarQualityFieldNumber = 3;
  inline ::google::protobuf::int32 starquality() const;
  inline void set_starquality(::google::protobuf::int32 value);

  // optional int32 starNum = 4;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 4;
  inline ::google::protobuf::int32 starnum() const;
  inline void set_starnum(::google::protobuf::int32 value);

  // optional int32 change = 5;
  inline bool has_change() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 5;
  inline ::google::protobuf::int32 change() const;
  inline void set_change(::google::protobuf::int32 value);

  // optional int32 LvUp = 6;
  inline bool has_lvup() const;
  inline void clear_lvup();
  static const int kLvUpFieldNumber = 6;
  inline ::google::protobuf::int32 lvup() const;
  inline void set_lvup(::google::protobuf::int32 value);

  // optional int32 starSq = 7;
  inline bool has_starsq() const;
  inline void clear_starsq();
  static const int kStarSqFieldNumber = 7;
  inline ::google::protobuf::int32 starsq() const;
  inline void set_starsq(::google::protobuf::int32 value);

  // optional int32 starDs = 8;
  inline bool has_stards() const;
  inline void clear_stards();
  static const int kStarDsFieldNumber = 8;
  inline ::google::protobuf::int32 stards() const;
  inline void set_stards(::google::protobuf::int32 value);

  // optional int32 rock = 9;
  inline bool has_rock() const;
  inline void clear_rock();
  static const int kRockFieldNumber = 9;
  inline ::google::protobuf::int32 rock() const;
  inline void set_rock(::google::protobuf::int32 value);

  // optional int32 exp = 10;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 10;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 starType = 11;
  inline bool has_startype() const;
  inline void clear_startype();
  static const int kStarTypeFieldNumber = 11;
  inline ::google::protobuf::int32 startype() const;
  inline void set_startype(::google::protobuf::int32 value);

  // repeated string LvAdd = 12;
  inline int lvadd_size() const;
  inline void clear_lvadd();
  static const int kLvAddFieldNumber = 12;
  inline const ::std::string& lvadd(int index) const;
  inline ::std::string* mutable_lvadd(int index);
  inline void set_lvadd(int index, const ::std::string& value);
  inline void set_lvadd(int index, const char* value);
  inline void set_lvadd(int index, const char* value, size_t size);
  inline ::std::string* add_lvadd();
  inline void add_lvadd(const ::std::string& value);
  inline void add_lvadd(const char* value);
  inline void add_lvadd(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& lvadd() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_lvadd();

  // repeated .proto_ff.starstarstarDesc star = 13;
  inline int star_size() const;
  inline void clear_star();
  static const int kStarFieldNumber = 13;
  inline const ::proto_ff::starstarstarDesc& star(int index) const;
  inline ::proto_ff::starstarstarDesc* mutable_star(int index);
  inline ::proto_ff::starstarstarDesc* add_star();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starstarstarDesc >&
      star() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starstarstarDesc >*
      mutable_star();

  // @@protoc_insertion_point(class_scope:proto_ff.starstar)
 private:
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_starname();
  inline void clear_has_starname();
  inline void set_has_starquality();
  inline void clear_has_starquality();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_change();
  inline void clear_has_change();
  inline void set_has_lvup();
  inline void clear_has_lvup();
  inline void set_has_starsq();
  inline void clear_has_starsq();
  inline void set_has_stards();
  inline void clear_has_stards();
  inline void set_has_rock();
  inline void clear_has_rock();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_startype();
  inline void clear_has_startype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 starid_;
  ::std::string* starname_;
  ::google::protobuf::int32 starquality_;
  ::google::protobuf::int32 starnum_;
  ::google::protobuf::int32 change_;
  ::google::protobuf::int32 lvup_;
  ::google::protobuf::int32 starsq_;
  ::google::protobuf::int32 stards_;
  ::google::protobuf::int32 rock_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::RepeatedPtrField< ::std::string> lvadd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::starstarstarDesc > star_;
  ::google::protobuf::int32 startype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static starstar* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_starstar : public ::google::protobuf::Message {
 public:
  Sheet_starstar();
  virtual ~Sheet_starstar();

  Sheet_starstar(const Sheet_starstar& from);

  inline Sheet_starstar& operator=(const Sheet_starstar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_starstar& default_instance();

  void Swap(Sheet_starstar* other);

  // implements Message ----------------------------------------------

  Sheet_starstar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_starstar& from);
  void MergeFrom(const Sheet_starstar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.starstar starstar_List = 1;
  inline int starstar_list_size() const;
  inline void clear_starstar_list();
  static const int kStarstarListFieldNumber = 1;
  inline const ::proto_ff::starstar& starstar_list(int index) const;
  inline ::proto_ff::starstar* mutable_starstar_list(int index);
  inline ::proto_ff::starstar* add_starstar_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starstar >&
      starstar_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starstar >*
      mutable_starstar_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_starstar)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::starstar > starstar_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static Sheet_starstar* default_instance_;
};
// -------------------------------------------------------------------

class starexp : public ::google::protobuf::Message {
 public:
  starexp();
  virtual ~starexp();

  starexp(const starexp& from);

  inline starexp& operator=(const starexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const starexp& default_instance();

  void Swap(starexp* other);

  // implements Message ----------------------------------------------

  starexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const starexp& from);
  void MergeFrom(const starexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 starDs = 2;
  inline bool has_stards() const;
  inline void clear_stards();
  static const int kStarDsFieldNumber = 2;
  inline ::google::protobuf::int32 stards() const;
  inline void set_stards(::google::protobuf::int32 value);

  // optional int32 starQuality = 3;
  inline bool has_starquality() const;
  inline void clear_starquality();
  static const int kStarQualityFieldNumber = 3;
  inline ::google::protobuf::int32 starquality() const;
  inline void set_starquality(::google::protobuf::int32 value);

  // optional int32 starLv = 4;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 4;
  inline ::google::protobuf::int32 starlv() const;
  inline void set_starlv(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.starexp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_stards();
  inline void clear_has_stards();
  inline void set_has_starquality();
  inline void clear_has_starquality();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 stards_;
  ::google::protobuf::int32 starquality_;
  ::google::protobuf::int32 starlv_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static starexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_starexp : public ::google::protobuf::Message {
 public:
  Sheet_starexp();
  virtual ~Sheet_starexp();

  Sheet_starexp(const Sheet_starexp& from);

  inline Sheet_starexp& operator=(const Sheet_starexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_starexp& default_instance();

  void Swap(Sheet_starexp* other);

  // implements Message ----------------------------------------------

  Sheet_starexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_starexp& from);
  void MergeFrom(const Sheet_starexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.starexp starexp_List = 1;
  inline int starexp_list_size() const;
  inline void clear_starexp_list();
  static const int kStarexpListFieldNumber = 1;
  inline const ::proto_ff::starexp& starexp_list(int index) const;
  inline ::proto_ff::starexp* mutable_starexp_list(int index);
  inline ::proto_ff::starexp* add_starexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starexp >&
      starexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starexp >*
      mutable_starexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_starexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::starexp > starexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static Sheet_starexp* default_instance_;
};
// -------------------------------------------------------------------

class starastrology : public ::google::protobuf::Message {
 public:
  starastrology();
  virtual ~starastrology();

  starastrology(const starastrology& from);

  inline starastrology& operator=(const starastrology& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const starastrology& default_instance();

  void Swap(starastrology* other);

  // implements Message ----------------------------------------------

  starastrology* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const starastrology& from);
  void MergeFrom(const starastrology& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 astrology = 1;
  inline bool has_astrology() const;
  inline void clear_astrology();
  static const int kAstrologyFieldNumber = 1;
  inline ::google::protobuf::int32 astrology() const;
  inline void set_astrology(::google::protobuf::int32 value);

  // optional int64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 itemNum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // optional int32 fragment = 4;
  inline bool has_fragment() const;
  inline void clear_fragment();
  static const int kFragmentFieldNumber = 4;
  inline ::google::protobuf::int32 fragment() const;
  inline void set_fragment(::google::protobuf::int32 value);

  // optional int32 essence = 5;
  inline bool has_essence() const;
  inline void clear_essence();
  static const int kEssenceFieldNumber = 5;
  inline ::google::protobuf::int32 essence() const;
  inline void set_essence(::google::protobuf::int32 value);

  // optional int32 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 coinTye = 7;
  inline bool has_cointye() const;
  inline void clear_cointye();
  static const int kCoinTyeFieldNumber = 7;
  inline ::google::protobuf::int32 cointye() const;
  inline void set_cointye(::google::protobuf::int32 value);

  // optional int32 number = 8;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 8;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // repeated int32 gailv = 9;
  inline int gailv_size() const;
  inline void clear_gailv();
  static const int kGailvFieldNumber = 9;
  inline ::google::protobuf::int32 gailv(int index) const;
  inline void set_gailv(int index, ::google::protobuf::int32 value);
  inline void add_gailv(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gailv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gailv();

  // repeated int32 probability = 10;
  inline int probability_size() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 10;
  inline ::google::protobuf::int32 probability(int index) const;
  inline void set_probability(int index, ::google::protobuf::int32 value);
  inline void add_probability(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      probability() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_probability();

  // @@protoc_insertion_point(class_scope:proto_ff.starastrology)
 private:
  inline void set_has_astrology();
  inline void clear_has_astrology();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_fragment();
  inline void clear_has_fragment();
  inline void set_has_essence();
  inline void clear_has_essence();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_cointye();
  inline void clear_has_cointye();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 astrology_;
  ::google::protobuf::int32 itemnum_;
  ::google::protobuf::int32 fragment_;
  ::google::protobuf::int32 essence_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 cointye_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gailv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > probability_;
  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static starastrology* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_starastrology : public ::google::protobuf::Message {
 public:
  Sheet_starastrology();
  virtual ~Sheet_starastrology();

  Sheet_starastrology(const Sheet_starastrology& from);

  inline Sheet_starastrology& operator=(const Sheet_starastrology& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_starastrology& default_instance();

  void Swap(Sheet_starastrology* other);

  // implements Message ----------------------------------------------

  Sheet_starastrology* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_starastrology& from);
  void MergeFrom(const Sheet_starastrology& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.starastrology starastrology_List = 1;
  inline int starastrology_list_size() const;
  inline void clear_starastrology_list();
  static const int kStarastrologyListFieldNumber = 1;
  inline const ::proto_ff::starastrology& starastrology_list(int index) const;
  inline ::proto_ff::starastrology* mutable_starastrology_list(int index);
  inline ::proto_ff::starastrology* add_starastrology_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starastrology >&
      starastrology_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starastrology >*
      mutable_starastrology_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_starastrology)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::starastrology > starastrology_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_star_2eproto();
  friend void protobuf_AssignDesc_star_2eproto();
  friend void protobuf_ShutdownFile_star_2eproto();

  void InitAsDefaultInstance();
  static Sheet_starastrology* default_instance_;
};
// ===================================================================


// ===================================================================

// starpoint

// optional int32 starID = 1;
inline bool starpoint::has_starid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void starpoint::set_has_starid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void starpoint::clear_has_starid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void starpoint::clear_starid() {
  starid_ = 0;
  clear_has_starid();
}
inline ::google::protobuf::int32 starpoint::starid() const {
  return starid_;
}
inline void starpoint::set_starid(::google::protobuf::int32 value) {
  set_has_starid();
  starid_ = value;
}

// optional int32 starNum = 2;
inline bool starpoint::has_starnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void starpoint::set_has_starnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void starpoint::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void starpoint::clear_starnum() {
  starnum_ = 0;
  clear_has_starnum();
}
inline ::google::protobuf::int32 starpoint::starnum() const {
  return starnum_;
}
inline void starpoint::set_starnum(::google::protobuf::int32 value) {
  set_has_starnum();
  starnum_ = value;
}

// -------------------------------------------------------------------

// Sheet_starpoint

// repeated .proto_ff.starpoint starpoint_List = 1;
inline int Sheet_starpoint::starpoint_list_size() const {
  return starpoint_list_.size();
}
inline void Sheet_starpoint::clear_starpoint_list() {
  starpoint_list_.Clear();
}
inline const ::proto_ff::starpoint& Sheet_starpoint::starpoint_list(int index) const {
  return starpoint_list_.Get(index);
}
inline ::proto_ff::starpoint* Sheet_starpoint::mutable_starpoint_list(int index) {
  return starpoint_list_.Mutable(index);
}
inline ::proto_ff::starpoint* Sheet_starpoint::add_starpoint_list() {
  return starpoint_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starpoint >&
Sheet_starpoint::starpoint_list() const {
  return starpoint_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starpoint >*
Sheet_starpoint::mutable_starpoint_list() {
  return &starpoint_list_;
}

// -------------------------------------------------------------------

// starstarstarDesc

// optional int32 Att = 1;
inline bool starstarstarDesc::has_att() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void starstarstarDesc::set_has_att() {
  _has_bits_[0] |= 0x00000001u;
}
inline void starstarstarDesc::clear_has_att() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void starstarstarDesc::clear_att() {
  att_ = 0;
  clear_has_att();
}
inline ::google::protobuf::int32 starstarstarDesc::att() const {
  return att_;
}
inline void starstarstarDesc::set_att(::google::protobuf::int32 value) {
  set_has_att();
  att_ = value;
}

// optional int32 Attnum = 2;
inline bool starstarstarDesc::has_attnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void starstarstarDesc::set_has_attnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void starstarstarDesc::clear_has_attnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void starstarstarDesc::clear_attnum() {
  attnum_ = 0;
  clear_has_attnum();
}
inline ::google::protobuf::int32 starstarstarDesc::attnum() const {
  return attnum_;
}
inline void starstarstarDesc::set_attnum(::google::protobuf::int32 value) {
  set_has_attnum();
  attnum_ = value;
}

// -------------------------------------------------------------------

// starstar

// optional int64 starID = 1;
inline bool starstar::has_starid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void starstar::set_has_starid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void starstar::clear_has_starid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void starstar::clear_starid() {
  starid_ = GOOGLE_LONGLONG(0);
  clear_has_starid();
}
inline ::google::protobuf::int64 starstar::starid() const {
  return starid_;
}
inline void starstar::set_starid(::google::protobuf::int64 value) {
  set_has_starid();
  starid_ = value;
}

// optional string starName = 2;
inline bool starstar::has_starname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void starstar::set_has_starname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void starstar::clear_has_starname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void starstar::clear_starname() {
  if (starname_ != &::google::protobuf::internal::kEmptyString) {
    starname_->clear();
  }
  clear_has_starname();
}
inline const ::std::string& starstar::starname() const {
  return *starname_;
}
inline void starstar::set_starname(const ::std::string& value) {
  set_has_starname();
  if (starname_ == &::google::protobuf::internal::kEmptyString) {
    starname_ = new ::std::string;
  }
  starname_->assign(value);
}
inline void starstar::set_starname(const char* value) {
  set_has_starname();
  if (starname_ == &::google::protobuf::internal::kEmptyString) {
    starname_ = new ::std::string;
  }
  starname_->assign(value);
}
inline void starstar::set_starname(const char* value, size_t size) {
  set_has_starname();
  if (starname_ == &::google::protobuf::internal::kEmptyString) {
    starname_ = new ::std::string;
  }
  starname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* starstar::mutable_starname() {
  set_has_starname();
  if (starname_ == &::google::protobuf::internal::kEmptyString) {
    starname_ = new ::std::string;
  }
  return starname_;
}
inline ::std::string* starstar::release_starname() {
  clear_has_starname();
  if (starname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = starname_;
    starname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void starstar::set_allocated_starname(::std::string* starname) {
  if (starname_ != &::google::protobuf::internal::kEmptyString) {
    delete starname_;
  }
  if (starname) {
    set_has_starname();
    starname_ = starname;
  } else {
    clear_has_starname();
    starname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 starQuality = 3;
inline bool starstar::has_starquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void starstar::set_has_starquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void starstar::clear_has_starquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void starstar::clear_starquality() {
  starquality_ = 0;
  clear_has_starquality();
}
inline ::google::protobuf::int32 starstar::starquality() const {
  return starquality_;
}
inline void starstar::set_starquality(::google::protobuf::int32 value) {
  set_has_starquality();
  starquality_ = value;
}

// optional int32 starNum = 4;
inline bool starstar::has_starnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void starstar::set_has_starnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void starstar::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void starstar::clear_starnum() {
  starnum_ = 0;
  clear_has_starnum();
}
inline ::google::protobuf::int32 starstar::starnum() const {
  return starnum_;
}
inline void starstar::set_starnum(::google::protobuf::int32 value) {
  set_has_starnum();
  starnum_ = value;
}

// optional int32 change = 5;
inline bool starstar::has_change() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void starstar::set_has_change() {
  _has_bits_[0] |= 0x00000010u;
}
inline void starstar::clear_has_change() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void starstar::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 starstar::change() const {
  return change_;
}
inline void starstar::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
}

// optional int32 LvUp = 6;
inline bool starstar::has_lvup() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void starstar::set_has_lvup() {
  _has_bits_[0] |= 0x00000020u;
}
inline void starstar::clear_has_lvup() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void starstar::clear_lvup() {
  lvup_ = 0;
  clear_has_lvup();
}
inline ::google::protobuf::int32 starstar::lvup() const {
  return lvup_;
}
inline void starstar::set_lvup(::google::protobuf::int32 value) {
  set_has_lvup();
  lvup_ = value;
}

// optional int32 starSq = 7;
inline bool starstar::has_starsq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void starstar::set_has_starsq() {
  _has_bits_[0] |= 0x00000040u;
}
inline void starstar::clear_has_starsq() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void starstar::clear_starsq() {
  starsq_ = 0;
  clear_has_starsq();
}
inline ::google::protobuf::int32 starstar::starsq() const {
  return starsq_;
}
inline void starstar::set_starsq(::google::protobuf::int32 value) {
  set_has_starsq();
  starsq_ = value;
}

// optional int32 starDs = 8;
inline bool starstar::has_stards() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void starstar::set_has_stards() {
  _has_bits_[0] |= 0x00000080u;
}
inline void starstar::clear_has_stards() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void starstar::clear_stards() {
  stards_ = 0;
  clear_has_stards();
}
inline ::google::protobuf::int32 starstar::stards() const {
  return stards_;
}
inline void starstar::set_stards(::google::protobuf::int32 value) {
  set_has_stards();
  stards_ = value;
}

// optional int32 rock = 9;
inline bool starstar::has_rock() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void starstar::set_has_rock() {
  _has_bits_[0] |= 0x00000100u;
}
inline void starstar::clear_has_rock() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void starstar::clear_rock() {
  rock_ = 0;
  clear_has_rock();
}
inline ::google::protobuf::int32 starstar::rock() const {
  return rock_;
}
inline void starstar::set_rock(::google::protobuf::int32 value) {
  set_has_rock();
  rock_ = value;
}

// optional int32 exp = 10;
inline bool starstar::has_exp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void starstar::set_has_exp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void starstar::clear_has_exp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void starstar::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 starstar::exp() const {
  return exp_;
}
inline void starstar::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 starType = 11;
inline bool starstar::has_startype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void starstar::set_has_startype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void starstar::clear_has_startype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void starstar::clear_startype() {
  startype_ = 0;
  clear_has_startype();
}
inline ::google::protobuf::int32 starstar::startype() const {
  return startype_;
}
inline void starstar::set_startype(::google::protobuf::int32 value) {
  set_has_startype();
  startype_ = value;
}

// repeated string LvAdd = 12;
inline int starstar::lvadd_size() const {
  return lvadd_.size();
}
inline void starstar::clear_lvadd() {
  lvadd_.Clear();
}
inline const ::std::string& starstar::lvadd(int index) const {
  return lvadd_.Get(index);
}
inline ::std::string* starstar::mutable_lvadd(int index) {
  return lvadd_.Mutable(index);
}
inline void starstar::set_lvadd(int index, const ::std::string& value) {
  lvadd_.Mutable(index)->assign(value);
}
inline void starstar::set_lvadd(int index, const char* value) {
  lvadd_.Mutable(index)->assign(value);
}
inline void starstar::set_lvadd(int index, const char* value, size_t size) {
  lvadd_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* starstar::add_lvadd() {
  return lvadd_.Add();
}
inline void starstar::add_lvadd(const ::std::string& value) {
  lvadd_.Add()->assign(value);
}
inline void starstar::add_lvadd(const char* value) {
  lvadd_.Add()->assign(value);
}
inline void starstar::add_lvadd(const char* value, size_t size) {
  lvadd_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
starstar::lvadd() const {
  return lvadd_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
starstar::mutable_lvadd() {
  return &lvadd_;
}

// repeated .proto_ff.starstarstarDesc star = 13;
inline int starstar::star_size() const {
  return star_.size();
}
inline void starstar::clear_star() {
  star_.Clear();
}
inline const ::proto_ff::starstarstarDesc& starstar::star(int index) const {
  return star_.Get(index);
}
inline ::proto_ff::starstarstarDesc* starstar::mutable_star(int index) {
  return star_.Mutable(index);
}
inline ::proto_ff::starstarstarDesc* starstar::add_star() {
  return star_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starstarstarDesc >&
starstar::star() const {
  return star_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starstarstarDesc >*
starstar::mutable_star() {
  return &star_;
}

// -------------------------------------------------------------------

// Sheet_starstar

// repeated .proto_ff.starstar starstar_List = 1;
inline int Sheet_starstar::starstar_list_size() const {
  return starstar_list_.size();
}
inline void Sheet_starstar::clear_starstar_list() {
  starstar_list_.Clear();
}
inline const ::proto_ff::starstar& Sheet_starstar::starstar_list(int index) const {
  return starstar_list_.Get(index);
}
inline ::proto_ff::starstar* Sheet_starstar::mutable_starstar_list(int index) {
  return starstar_list_.Mutable(index);
}
inline ::proto_ff::starstar* Sheet_starstar::add_starstar_list() {
  return starstar_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starstar >&
Sheet_starstar::starstar_list() const {
  return starstar_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starstar >*
Sheet_starstar::mutable_starstar_list() {
  return &starstar_list_;
}

// -------------------------------------------------------------------

// starexp

// optional int64 id = 1;
inline bool starexp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void starexp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void starexp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void starexp::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 starexp::id() const {
  return id_;
}
inline void starexp::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 starDs = 2;
inline bool starexp::has_stards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void starexp::set_has_stards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void starexp::clear_has_stards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void starexp::clear_stards() {
  stards_ = 0;
  clear_has_stards();
}
inline ::google::protobuf::int32 starexp::stards() const {
  return stards_;
}
inline void starexp::set_stards(::google::protobuf::int32 value) {
  set_has_stards();
  stards_ = value;
}

// optional int32 starQuality = 3;
inline bool starexp::has_starquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void starexp::set_has_starquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void starexp::clear_has_starquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void starexp::clear_starquality() {
  starquality_ = 0;
  clear_has_starquality();
}
inline ::google::protobuf::int32 starexp::starquality() const {
  return starquality_;
}
inline void starexp::set_starquality(::google::protobuf::int32 value) {
  set_has_starquality();
  starquality_ = value;
}

// optional int32 starLv = 4;
inline bool starexp::has_starlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void starexp::set_has_starlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void starexp::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void starexp::clear_starlv() {
  starlv_ = 0;
  clear_has_starlv();
}
inline ::google::protobuf::int32 starexp::starlv() const {
  return starlv_;
}
inline void starexp::set_starlv(::google::protobuf::int32 value) {
  set_has_starlv();
  starlv_ = value;
}

// optional int32 exp = 5;
inline bool starexp::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void starexp::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void starexp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void starexp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 starexp::exp() const {
  return exp_;
}
inline void starexp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_starexp

// repeated .proto_ff.starexp starexp_List = 1;
inline int Sheet_starexp::starexp_list_size() const {
  return starexp_list_.size();
}
inline void Sheet_starexp::clear_starexp_list() {
  starexp_list_.Clear();
}
inline const ::proto_ff::starexp& Sheet_starexp::starexp_list(int index) const {
  return starexp_list_.Get(index);
}
inline ::proto_ff::starexp* Sheet_starexp::mutable_starexp_list(int index) {
  return starexp_list_.Mutable(index);
}
inline ::proto_ff::starexp* Sheet_starexp::add_starexp_list() {
  return starexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starexp >&
Sheet_starexp::starexp_list() const {
  return starexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starexp >*
Sheet_starexp::mutable_starexp_list() {
  return &starexp_list_;
}

// -------------------------------------------------------------------

// starastrology

// optional int32 astrology = 1;
inline bool starastrology::has_astrology() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void starastrology::set_has_astrology() {
  _has_bits_[0] |= 0x00000001u;
}
inline void starastrology::clear_has_astrology() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void starastrology::clear_astrology() {
  astrology_ = 0;
  clear_has_astrology();
}
inline ::google::protobuf::int32 starastrology::astrology() const {
  return astrology_;
}
inline void starastrology::set_astrology(::google::protobuf::int32 value) {
  set_has_astrology();
  astrology_ = value;
}

// optional int64 itemId = 2;
inline bool starastrology::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void starastrology::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void starastrology::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void starastrology::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 starastrology::itemid() const {
  return itemid_;
}
inline void starastrology::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 itemNum = 3;
inline bool starastrology::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void starastrology::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void starastrology::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void starastrology::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 starastrology::itemnum() const {
  return itemnum_;
}
inline void starastrology::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// optional int32 fragment = 4;
inline bool starastrology::has_fragment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void starastrology::set_has_fragment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void starastrology::clear_has_fragment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void starastrology::clear_fragment() {
  fragment_ = 0;
  clear_has_fragment();
}
inline ::google::protobuf::int32 starastrology::fragment() const {
  return fragment_;
}
inline void starastrology::set_fragment(::google::protobuf::int32 value) {
  set_has_fragment();
  fragment_ = value;
}

// optional int32 essence = 5;
inline bool starastrology::has_essence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void starastrology::set_has_essence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void starastrology::clear_has_essence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void starastrology::clear_essence() {
  essence_ = 0;
  clear_has_essence();
}
inline ::google::protobuf::int32 starastrology::essence() const {
  return essence_;
}
inline void starastrology::set_essence(::google::protobuf::int32 value) {
  set_has_essence();
  essence_ = value;
}

// optional int32 time = 6;
inline bool starastrology::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void starastrology::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void starastrology::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void starastrology::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 starastrology::time() const {
  return time_;
}
inline void starastrology::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 coinTye = 7;
inline bool starastrology::has_cointye() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void starastrology::set_has_cointye() {
  _has_bits_[0] |= 0x00000040u;
}
inline void starastrology::clear_has_cointye() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void starastrology::clear_cointye() {
  cointye_ = 0;
  clear_has_cointye();
}
inline ::google::protobuf::int32 starastrology::cointye() const {
  return cointye_;
}
inline void starastrology::set_cointye(::google::protobuf::int32 value) {
  set_has_cointye();
  cointye_ = value;
}

// optional int32 number = 8;
inline bool starastrology::has_number() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void starastrology::set_has_number() {
  _has_bits_[0] |= 0x00000080u;
}
inline void starastrology::clear_has_number() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void starastrology::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 starastrology::number() const {
  return number_;
}
inline void starastrology::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// repeated int32 gailv = 9;
inline int starastrology::gailv_size() const {
  return gailv_.size();
}
inline void starastrology::clear_gailv() {
  gailv_.Clear();
}
inline ::google::protobuf::int32 starastrology::gailv(int index) const {
  return gailv_.Get(index);
}
inline void starastrology::set_gailv(int index, ::google::protobuf::int32 value) {
  gailv_.Set(index, value);
}
inline void starastrology::add_gailv(::google::protobuf::int32 value) {
  gailv_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
starastrology::gailv() const {
  return gailv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
starastrology::mutable_gailv() {
  return &gailv_;
}

// repeated int32 probability = 10;
inline int starastrology::probability_size() const {
  return probability_.size();
}
inline void starastrology::clear_probability() {
  probability_.Clear();
}
inline ::google::protobuf::int32 starastrology::probability(int index) const {
  return probability_.Get(index);
}
inline void starastrology::set_probability(int index, ::google::protobuf::int32 value) {
  probability_.Set(index, value);
}
inline void starastrology::add_probability(::google::protobuf::int32 value) {
  probability_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
starastrology::probability() const {
  return probability_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
starastrology::mutable_probability() {
  return &probability_;
}

// -------------------------------------------------------------------

// Sheet_starastrology

// repeated .proto_ff.starastrology starastrology_List = 1;
inline int Sheet_starastrology::starastrology_list_size() const {
  return starastrology_list_.size();
}
inline void Sheet_starastrology::clear_starastrology_list() {
  starastrology_list_.Clear();
}
inline const ::proto_ff::starastrology& Sheet_starastrology::starastrology_list(int index) const {
  return starastrology_list_.Get(index);
}
inline ::proto_ff::starastrology* Sheet_starastrology::mutable_starastrology_list(int index) {
  return starastrology_list_.Mutable(index);
}
inline ::proto_ff::starastrology* Sheet_starastrology::add_starastrology_list() {
  return starastrology_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::starastrology >&
Sheet_starastrology::starastrology_list() const {
  return starastrology_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::starastrology >*
Sheet_starastrology::mutable_starastrology_list() {
  return &starastrology_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_star_2eproto__INCLUDED
