// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasure.proto

#ifndef PROTOBUF_treasure_2eproto__INCLUDED
#define PROTOBUF_treasure_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_treasure_2eproto();
void protobuf_AssignDesc_treasure_2eproto();
void protobuf_ShutdownFile_treasure_2eproto();

class treasuretreasureattributeDesc;
class treasuretreasure;
class Sheet_treasuretreasure;
class treasurechangeattributeDesc;
class treasurechange;
class Sheet_treasurechange;
class treasurestarUpupAttributeDesc;
class treasurestarUp;
class Sheet_treasurestarUp;
class treasurefragmentattributeDesc;
class treasurefragment;
class Sheet_treasurefragment;
class treasureequipattributeDesc;
class treasureequip;
class Sheet_treasureequip;
class treasureslot;
class Sheet_treasureslot;
class treasurerefine;
class Sheet_treasurerefine;

// ===================================================================

class treasuretreasureattributeDesc : public ::google::protobuf::Message {
 public:
  treasuretreasureattributeDesc();
  virtual ~treasuretreasureattributeDesc();

  treasuretreasureattributeDesc(const treasuretreasureattributeDesc& from);

  inline treasuretreasureattributeDesc& operator=(const treasuretreasureattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasuretreasureattributeDesc& default_instance();

  void Swap(treasuretreasureattributeDesc* other);

  // implements Message ----------------------------------------------

  treasuretreasureattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasuretreasureattributeDesc& from);
  void MergeFrom(const treasuretreasureattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasuretreasureattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasuretreasureattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class treasuretreasure : public ::google::protobuf::Message {
 public:
  treasuretreasure();
  virtual ~treasuretreasure();

  treasuretreasure(const treasuretreasure& from);

  inline treasuretreasure& operator=(const treasuretreasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasuretreasure& default_instance();

  void Swap(treasuretreasure* other);

  // implements Message ----------------------------------------------

  treasuretreasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasuretreasure& from);
  void MergeFrom(const treasuretreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string activeDesc = 4;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 4;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional int32 realLevel = 5;
  inline bool has_reallevel() const;
  inline void clear_reallevel();
  static const int kRealLevelFieldNumber = 5;
  inline ::google::protobuf::int32 reallevel() const;
  inline void set_reallevel(::google::protobuf::int32 value);

  // optional int64 materialID = 6;
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialIDFieldNumber = 6;
  inline ::google::protobuf::int64 materialid() const;
  inline void set_materialid(::google::protobuf::int64 value);

  // optional int32 materialEXP = 7;
  inline bool has_materialexp() const;
  inline void clear_materialexp();
  static const int kMaterialEXPFieldNumber = 7;
  inline ::google::protobuf::int32 materialexp() const;
  inline void set_materialexp(::google::protobuf::int32 value);

  // optional int32 exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int64 BreakMaterialID = 9;
  inline bool has_breakmaterialid() const;
  inline void clear_breakmaterialid();
  static const int kBreakMaterialIDFieldNumber = 9;
  inline ::google::protobuf::int64 breakmaterialid() const;
  inline void set_breakmaterialid(::google::protobuf::int64 value);

  // optional int32 BreakMaterialCost = 10;
  inline bool has_breakmaterialcost() const;
  inline void clear_breakmaterialcost();
  static const int kBreakMaterialCostFieldNumber = 10;
  inline ::google::protobuf::int32 breakmaterialcost() const;
  inline void set_breakmaterialcost(::google::protobuf::int32 value);

  // optional int64 skill = 11;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 11;
  inline ::google::protobuf::int64 skill() const;
  inline void set_skill(::google::protobuf::int64 value);

  // optional int64 skillID = 12;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 12;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // repeated .proto_ff.treasuretreasureattributeDesc attribute = 13;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 13;
  inline const ::proto_ff::treasuretreasureattributeDesc& attribute(int index) const;
  inline ::proto_ff::treasuretreasureattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::treasuretreasureattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasureattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasureattributeDesc >*
      mutable_attribute();

  // repeated int64 fragmentID = 14;
  inline int fragmentid_size() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 14;
  inline ::google::protobuf::int64 fragmentid(int index) const;
  inline void set_fragmentid(int index, ::google::protobuf::int64 value);
  inline void add_fragmentid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      fragmentid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_fragmentid();

  // @@protoc_insertion_point(class_scope:proto_ff.treasuretreasure)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_reallevel();
  inline void clear_has_reallevel();
  inline void set_has_materialid();
  inline void clear_has_materialid();
  inline void set_has_materialexp();
  inline void clear_has_materialexp();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_breakmaterialid();
  inline void clear_has_breakmaterialid();
  inline void set_has_breakmaterialcost();
  inline void clear_has_breakmaterialcost();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::std::string* name_;
  ::std::string* activedesc_;
  ::google::protobuf::int64 materialid_;
  ::google::protobuf::int32 reallevel_;
  ::google::protobuf::int32 materialexp_;
  ::google::protobuf::int64 breakmaterialid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 breakmaterialcost_;
  ::google::protobuf::int64 skill_;
  ::google::protobuf::int64 skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasureattributeDesc > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > fragmentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasuretreasure* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasuretreasure : public ::google::protobuf::Message {
 public:
  Sheet_treasuretreasure();
  virtual ~Sheet_treasuretreasure();

  Sheet_treasuretreasure(const Sheet_treasuretreasure& from);

  inline Sheet_treasuretreasure& operator=(const Sheet_treasuretreasure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasuretreasure& default_instance();

  void Swap(Sheet_treasuretreasure* other);

  // implements Message ----------------------------------------------

  Sheet_treasuretreasure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasuretreasure& from);
  void MergeFrom(const Sheet_treasuretreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasuretreasure treasuretreasure_List = 1;
  inline int treasuretreasure_list_size() const;
  inline void clear_treasuretreasure_list();
  static const int kTreasuretreasureListFieldNumber = 1;
  inline const ::proto_ff::treasuretreasure& treasuretreasure_list(int index) const;
  inline ::proto_ff::treasuretreasure* mutable_treasuretreasure_list(int index);
  inline ::proto_ff::treasuretreasure* add_treasuretreasure_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasure >&
      treasuretreasure_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasure >*
      mutable_treasuretreasure_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasuretreasure)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasure > treasuretreasure_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasuretreasure* default_instance_;
};
// -------------------------------------------------------------------

class treasurechangeattributeDesc : public ::google::protobuf::Message {
 public:
  treasurechangeattributeDesc();
  virtual ~treasurechangeattributeDesc();

  treasurechangeattributeDesc(const treasurechangeattributeDesc& from);

  inline treasurechangeattributeDesc& operator=(const treasurechangeattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurechangeattributeDesc& default_instance();

  void Swap(treasurechangeattributeDesc* other);

  // implements Message ----------------------------------------------

  treasurechangeattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurechangeattributeDesc& from);
  void MergeFrom(const treasurechangeattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasurechangeattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurechangeattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class treasurechange : public ::google::protobuf::Message {
 public:
  treasurechange();
  virtual ~treasurechange();

  treasurechange(const treasurechange& from);

  inline treasurechange& operator=(const treasurechange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurechange& default_instance();

  void Swap(treasurechange* other);

  // implements Message ----------------------------------------------

  treasurechange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurechange& from);
  void MergeFrom(const treasurechange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string activeDesc = 4;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 4;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int64 starId = 6;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIdFieldNumber = 6;
  inline ::google::protobuf::int64 starid() const;
  inline void set_starid(::google::protobuf::int64 value);

  // optional string starNum = 7;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 7;
  inline const ::std::string& starnum() const;
  inline void set_starnum(const ::std::string& value);
  inline void set_starnum(const char* value);
  inline void set_starnum(const char* value, size_t size);
  inline ::std::string* mutable_starnum();
  inline ::std::string* release_starnum();
  inline void set_allocated_starnum(::std::string* starnum);

  // optional int32 starUp = 8;
  inline bool has_starup() const;
  inline void clear_starup();
  static const int kStarUpFieldNumber = 8;
  inline ::google::protobuf::int32 starup() const;
  inline void set_starup(::google::protobuf::int32 value);

  // optional int32 starBer = 9;
  inline bool has_starber() const;
  inline void clear_starber();
  static const int kStarBerFieldNumber = 9;
  inline ::google::protobuf::int32 starber() const;
  inline void set_starber(::google::protobuf::int32 value);

  // optional int64 occupation = 10;
  inline bool has_occupation() const;
  inline void clear_occupation();
  static const int kOccupationFieldNumber = 10;
  inline ::google::protobuf::int64 occupation() const;
  inline void set_occupation(::google::protobuf::int64 value);

  // optional int64 skill = 11;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 11;
  inline ::google::protobuf::int64 skill() const;
  inline void set_skill(::google::protobuf::int64 value);

  // optional int64 upAttributeId = 12;
  inline bool has_upattributeid() const;
  inline void clear_upattributeid();
  static const int kUpAttributeIdFieldNumber = 12;
  inline ::google::protobuf::int64 upattributeid() const;
  inline void set_upattributeid(::google::protobuf::int64 value);

  // repeated .proto_ff.treasurechangeattributeDesc attribute = 13;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 13;
  inline const ::proto_ff::treasurechangeattributeDesc& attribute(int index) const;
  inline ::proto_ff::treasurechangeattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::treasurechangeattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechangeattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechangeattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.treasurechange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_starid();
  inline void clear_has_starid();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_starup();
  inline void clear_has_starup();
  inline void set_has_starber();
  inline void clear_has_starber();
  inline void set_has_occupation();
  inline void clear_has_occupation();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_upattributeid();
  inline void clear_has_upattributeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::std::string* name_;
  ::std::string* activedesc_;
  ::google::protobuf::int64 starid_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 starup_;
  ::std::string* starnum_;
  ::google::protobuf::int64 occupation_;
  ::google::protobuf::int64 skill_;
  ::google::protobuf::int64 upattributeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechangeattributeDesc > attribute_;
  ::google::protobuf::int32 starber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurechange* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasurechange : public ::google::protobuf::Message {
 public:
  Sheet_treasurechange();
  virtual ~Sheet_treasurechange();

  Sheet_treasurechange(const Sheet_treasurechange& from);

  inline Sheet_treasurechange& operator=(const Sheet_treasurechange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasurechange& default_instance();

  void Swap(Sheet_treasurechange* other);

  // implements Message ----------------------------------------------

  Sheet_treasurechange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasurechange& from);
  void MergeFrom(const Sheet_treasurechange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasurechange treasurechange_List = 1;
  inline int treasurechange_list_size() const;
  inline void clear_treasurechange_list();
  static const int kTreasurechangeListFieldNumber = 1;
  inline const ::proto_ff::treasurechange& treasurechange_list(int index) const;
  inline ::proto_ff::treasurechange* mutable_treasurechange_list(int index);
  inline ::proto_ff::treasurechange* add_treasurechange_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechange >&
      treasurechange_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechange >*
      mutable_treasurechange_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasurechange)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechange > treasurechange_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasurechange* default_instance_;
};
// -------------------------------------------------------------------

class treasurestarUpupAttributeDesc : public ::google::protobuf::Message {
 public:
  treasurestarUpupAttributeDesc();
  virtual ~treasurestarUpupAttributeDesc();

  treasurestarUpupAttributeDesc(const treasurestarUpupAttributeDesc& from);

  inline treasurestarUpupAttributeDesc& operator=(const treasurestarUpupAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurestarUpupAttributeDesc& default_instance();

  void Swap(treasurestarUpupAttributeDesc* other);

  // implements Message ----------------------------------------------

  treasurestarUpupAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurestarUpupAttributeDesc& from);
  void MergeFrom(const treasurestarUpupAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasurestarUpupAttributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurestarUpupAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class treasurestarUp : public ::google::protobuf::Message {
 public:
  treasurestarUp();
  virtual ~treasurestarUp();

  treasurestarUp(const treasurestarUp& from);

  inline treasurestarUp& operator=(const treasurestarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurestarUp& default_instance();

  void Swap(treasurestarUp* other);

  // implements Message ----------------------------------------------

  treasurestarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurestarUp& from);
  void MergeFrom(const treasurestarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 upAttributeId = 2;
  inline bool has_upattributeid() const;
  inline void clear_upattributeid();
  static const int kUpAttributeIdFieldNumber = 2;
  inline ::google::protobuf::int64 upattributeid() const;
  inline void set_upattributeid(::google::protobuf::int64 value);

  // optional int32 starID = 3;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIDFieldNumber = 3;
  inline ::google::protobuf::int32 starid() const;
  inline void set_starid(::google::protobuf::int32 value);

  // repeated .proto_ff.treasurestarUpupAttributeDesc upAttribute = 4;
  inline int upattribute_size() const;
  inline void clear_upattribute();
  static const int kUpAttributeFieldNumber = 4;
  inline const ::proto_ff::treasurestarUpupAttributeDesc& upattribute(int index) const;
  inline ::proto_ff::treasurestarUpupAttributeDesc* mutable_upattribute(int index);
  inline ::proto_ff::treasurestarUpupAttributeDesc* add_upattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUpupAttributeDesc >&
      upattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUpupAttributeDesc >*
      mutable_upattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.treasurestarUp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_upattributeid();
  inline void clear_has_upattributeid();
  inline void set_has_starid();
  inline void clear_has_starid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 upattributeid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 starid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUpupAttributeDesc > upattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurestarUp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasurestarUp : public ::google::protobuf::Message {
 public:
  Sheet_treasurestarUp();
  virtual ~Sheet_treasurestarUp();

  Sheet_treasurestarUp(const Sheet_treasurestarUp& from);

  inline Sheet_treasurestarUp& operator=(const Sheet_treasurestarUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasurestarUp& default_instance();

  void Swap(Sheet_treasurestarUp* other);

  // implements Message ----------------------------------------------

  Sheet_treasurestarUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasurestarUp& from);
  void MergeFrom(const Sheet_treasurestarUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasurestarUp treasurestarUp_List = 1;
  inline int treasurestarup_list_size() const;
  inline void clear_treasurestarup_list();
  static const int kTreasurestarUpListFieldNumber = 1;
  inline const ::proto_ff::treasurestarUp& treasurestarup_list(int index) const;
  inline ::proto_ff::treasurestarUp* mutable_treasurestarup_list(int index);
  inline ::proto_ff::treasurestarUp* add_treasurestarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUp >&
      treasurestarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUp >*
      mutable_treasurestarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasurestarUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUp > treasurestarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasurestarUp* default_instance_;
};
// -------------------------------------------------------------------

class treasurefragmentattributeDesc : public ::google::protobuf::Message {
 public:
  treasurefragmentattributeDesc();
  virtual ~treasurefragmentattributeDesc();

  treasurefragmentattributeDesc(const treasurefragmentattributeDesc& from);

  inline treasurefragmentattributeDesc& operator=(const treasurefragmentattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurefragmentattributeDesc& default_instance();

  void Swap(treasurefragmentattributeDesc* other);

  // implements Message ----------------------------------------------

  treasurefragmentattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurefragmentattributeDesc& from);
  void MergeFrom(const treasurefragmentattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasurefragmentattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurefragmentattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class treasurefragment : public ::google::protobuf::Message {
 public:
  treasurefragment();
  virtual ~treasurefragment();

  treasurefragment(const treasurefragment& from);

  inline treasurefragment& operator=(const treasurefragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurefragment& default_instance();

  void Swap(treasurefragment* other);

  // implements Message ----------------------------------------------

  treasurefragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurefragment& from);
  void MergeFrom(const treasurefragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fragmentID = 1;
  inline bool has_fragmentid() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 1;
  inline ::google::protobuf::int64 fragmentid() const;
  inline void set_fragmentid(::google::protobuf::int64 value);

  // optional int64 item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::int64 item() const;
  inline void set_item(::google::protobuf::int64 value);

  // optional int32 itemNum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // repeated .proto_ff.treasurefragmentattributeDesc attribute = 4;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 4;
  inline const ::proto_ff::treasurefragmentattributeDesc& attribute(int index) const;
  inline ::proto_ff::treasurefragmentattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::treasurefragmentattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragmentattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragmentattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.treasurefragment)
 private:
  inline void set_has_fragmentid();
  inline void clear_has_fragmentid();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 fragmentid_;
  ::google::protobuf::int64 item_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragmentattributeDesc > attribute_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurefragment* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasurefragment : public ::google::protobuf::Message {
 public:
  Sheet_treasurefragment();
  virtual ~Sheet_treasurefragment();

  Sheet_treasurefragment(const Sheet_treasurefragment& from);

  inline Sheet_treasurefragment& operator=(const Sheet_treasurefragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasurefragment& default_instance();

  void Swap(Sheet_treasurefragment* other);

  // implements Message ----------------------------------------------

  Sheet_treasurefragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasurefragment& from);
  void MergeFrom(const Sheet_treasurefragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasurefragment treasurefragment_List = 1;
  inline int treasurefragment_list_size() const;
  inline void clear_treasurefragment_list();
  static const int kTreasurefragmentListFieldNumber = 1;
  inline const ::proto_ff::treasurefragment& treasurefragment_list(int index) const;
  inline ::proto_ff::treasurefragment* mutable_treasurefragment_list(int index);
  inline ::proto_ff::treasurefragment* add_treasurefragment_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragment >&
      treasurefragment_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragment >*
      mutable_treasurefragment_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasurefragment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragment > treasurefragment_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasurefragment* default_instance_;
};
// -------------------------------------------------------------------

class treasureequipattributeDesc : public ::google::protobuf::Message {
 public:
  treasureequipattributeDesc();
  virtual ~treasureequipattributeDesc();

  treasureequipattributeDesc(const treasureequipattributeDesc& from);

  inline treasureequipattributeDesc& operator=(const treasureequipattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasureequipattributeDesc& default_instance();

  void Swap(treasureequipattributeDesc* other);

  // implements Message ----------------------------------------------

  treasureequipattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasureequipattributeDesc& from);
  void MergeFrom(const treasureequipattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasureequipattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasureequipattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class treasureequip : public ::google::protobuf::Message {
 public:
  treasureequip();
  virtual ~treasureequip();

  treasureequip(const treasureequip& from);

  inline treasureequip& operator=(const treasureequip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasureequip& default_instance();

  void Swap(treasureequip* other);

  // implements Message ----------------------------------------------

  treasureequip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasureequip& from);
  void MergeFrom(const treasureequip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // repeated .proto_ff.treasureequipattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::treasureequipattributeDesc& attribute(int index) const;
  inline ::proto_ff::treasureequipattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::treasureequipattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequipattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequipattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.treasureequip)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequipattributeDesc > attribute_;
  ::google::protobuf::int32 position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasureequip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasureequip : public ::google::protobuf::Message {
 public:
  Sheet_treasureequip();
  virtual ~Sheet_treasureequip();

  Sheet_treasureequip(const Sheet_treasureequip& from);

  inline Sheet_treasureequip& operator=(const Sheet_treasureequip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasureequip& default_instance();

  void Swap(Sheet_treasureequip* other);

  // implements Message ----------------------------------------------

  Sheet_treasureequip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasureequip& from);
  void MergeFrom(const Sheet_treasureequip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasureequip treasureequip_List = 1;
  inline int treasureequip_list_size() const;
  inline void clear_treasureequip_list();
  static const int kTreasureequipListFieldNumber = 1;
  inline const ::proto_ff::treasureequip& treasureequip_list(int index) const;
  inline ::proto_ff::treasureequip* mutable_treasureequip_list(int index);
  inline ::proto_ff::treasureequip* add_treasureequip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequip >&
      treasureequip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequip >*
      mutable_treasureequip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasureequip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequip > treasureequip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasureequip* default_instance_;
};
// -------------------------------------------------------------------

class treasureslot : public ::google::protobuf::Message {
 public:
  treasureslot();
  virtual ~treasureslot();

  treasureslot(const treasureslot& from);

  inline treasureslot& operator=(const treasureslot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasureslot& default_instance();

  void Swap(treasureslot* other);

  // implements Message ----------------------------------------------

  treasureslot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasureslot& from);
  void MergeFrom(const treasureslot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // optional int32 refineLv = 2;
  inline bool has_refinelv() const;
  inline void clear_refinelv();
  static const int kRefineLvFieldNumber = 2;
  inline ::google::protobuf::int32 refinelv() const;
  inline void set_refinelv(::google::protobuf::int32 value);

  // optional int32 refineNum = 3;
  inline bool has_refinenum() const;
  inline void clear_refinenum();
  static const int kRefineNumFieldNumber = 3;
  inline ::google::protobuf::int32 refinenum() const;
  inline void set_refinenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasureslot)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_refinelv();
  inline void clear_has_refinelv();
  inline void set_has_refinenum();
  inline void clear_has_refinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 refinelv_;
  ::google::protobuf::int32 refinenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasureslot* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasureslot : public ::google::protobuf::Message {
 public:
  Sheet_treasureslot();
  virtual ~Sheet_treasureslot();

  Sheet_treasureslot(const Sheet_treasureslot& from);

  inline Sheet_treasureslot& operator=(const Sheet_treasureslot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasureslot& default_instance();

  void Swap(Sheet_treasureslot* other);

  // implements Message ----------------------------------------------

  Sheet_treasureslot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasureslot& from);
  void MergeFrom(const Sheet_treasureslot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasureslot treasureslot_List = 1;
  inline int treasureslot_list_size() const;
  inline void clear_treasureslot_list();
  static const int kTreasureslotListFieldNumber = 1;
  inline const ::proto_ff::treasureslot& treasureslot_list(int index) const;
  inline ::proto_ff::treasureslot* mutable_treasureslot_list(int index);
  inline ::proto_ff::treasureslot* add_treasureslot_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureslot >&
      treasureslot_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureslot >*
      mutable_treasureslot_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasureslot)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureslot > treasureslot_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasureslot* default_instance_;
};
// -------------------------------------------------------------------

class treasurerefine : public ::google::protobuf::Message {
 public:
  treasurerefine();
  virtual ~treasurerefine();

  treasurerefine(const treasurerefine& from);

  inline treasurerefine& operator=(const treasurerefine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const treasurerefine& default_instance();

  void Swap(treasurerefine* other);

  // implements Message ----------------------------------------------

  treasurerefine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const treasurerefine& from);
  void MergeFrom(const treasurerefine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 refineId = 2;
  inline bool has_refineid() const;
  inline void clear_refineid();
  static const int kRefineIdFieldNumber = 2;
  inline ::google::protobuf::int64 refineid() const;
  inline void set_refineid(::google::protobuf::int64 value);

  // optional int32 refineNum = 3;
  inline bool has_refinenum() const;
  inline void clear_refinenum();
  static const int kRefineNumFieldNumber = 3;
  inline ::google::protobuf::int32 refinenum() const;
  inline void set_refinenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.treasurerefine)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_refineid();
  inline void clear_has_refineid();
  inline void set_has_refinenum();
  inline void clear_has_refinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 refineid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 refinenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static treasurerefine* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_treasurerefine : public ::google::protobuf::Message {
 public:
  Sheet_treasurerefine();
  virtual ~Sheet_treasurerefine();

  Sheet_treasurerefine(const Sheet_treasurerefine& from);

  inline Sheet_treasurerefine& operator=(const Sheet_treasurerefine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_treasurerefine& default_instance();

  void Swap(Sheet_treasurerefine* other);

  // implements Message ----------------------------------------------

  Sheet_treasurerefine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_treasurerefine& from);
  void MergeFrom(const Sheet_treasurerefine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.treasurerefine treasurerefine_List = 1;
  inline int treasurerefine_list_size() const;
  inline void clear_treasurerefine_list();
  static const int kTreasurerefineListFieldNumber = 1;
  inline const ::proto_ff::treasurerefine& treasurerefine_list(int index) const;
  inline ::proto_ff::treasurerefine* mutable_treasurerefine_list(int index);
  inline ::proto_ff::treasurerefine* add_treasurerefine_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurerefine >&
      treasurerefine_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurerefine >*
      mutable_treasurerefine_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_treasurerefine)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurerefine > treasurerefine_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasure_2eproto();
  friend void protobuf_AssignDesc_treasure_2eproto();
  friend void protobuf_ShutdownFile_treasure_2eproto();

  void InitAsDefaultInstance();
  static Sheet_treasurerefine* default_instance_;
};
// ===================================================================


// ===================================================================

// treasuretreasureattributeDesc

// optional int32 type = 1;
inline bool treasuretreasureattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasuretreasureattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasuretreasureattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasuretreasureattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 treasuretreasureattributeDesc::type() const {
  return type_;
}
inline void treasuretreasureattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool treasuretreasureattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasuretreasureattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasuretreasureattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasuretreasureattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 treasuretreasureattributeDesc::value() const {
  return value_;
}
inline void treasuretreasureattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// treasuretreasure

// optional int64 id = 1;
inline bool treasuretreasure::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasuretreasure::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasuretreasure::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasuretreasure::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 treasuretreasure::id() const {
  return id_;
}
inline void treasuretreasure::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string resource = 2;
inline bool treasuretreasure::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasuretreasure::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasuretreasure::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasuretreasure::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& treasuretreasure::resource() const {
  return *resource_;
}
inline void treasuretreasure::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void treasuretreasure::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void treasuretreasure::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasuretreasure::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* treasuretreasure::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasuretreasure::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 3;
inline bool treasuretreasure::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void treasuretreasure::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void treasuretreasure::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void treasuretreasure::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& treasuretreasure::name() const {
  return *name_;
}
inline void treasuretreasure::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void treasuretreasure::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void treasuretreasure::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasuretreasure::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* treasuretreasure::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasuretreasure::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string activeDesc = 4;
inline bool treasuretreasure::has_activedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void treasuretreasure::set_has_activedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void treasuretreasure::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void treasuretreasure::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& treasuretreasure::activedesc() const {
  return *activedesc_;
}
inline void treasuretreasure::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void treasuretreasure::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void treasuretreasure::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasuretreasure::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* treasuretreasure::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasuretreasure::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 realLevel = 5;
inline bool treasuretreasure::has_reallevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void treasuretreasure::set_has_reallevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void treasuretreasure::clear_has_reallevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void treasuretreasure::clear_reallevel() {
  reallevel_ = 0;
  clear_has_reallevel();
}
inline ::google::protobuf::int32 treasuretreasure::reallevel() const {
  return reallevel_;
}
inline void treasuretreasure::set_reallevel(::google::protobuf::int32 value) {
  set_has_reallevel();
  reallevel_ = value;
}

// optional int64 materialID = 6;
inline bool treasuretreasure::has_materialid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void treasuretreasure::set_has_materialid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void treasuretreasure::clear_has_materialid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void treasuretreasure::clear_materialid() {
  materialid_ = GOOGLE_LONGLONG(0);
  clear_has_materialid();
}
inline ::google::protobuf::int64 treasuretreasure::materialid() const {
  return materialid_;
}
inline void treasuretreasure::set_materialid(::google::protobuf::int64 value) {
  set_has_materialid();
  materialid_ = value;
}

// optional int32 materialEXP = 7;
inline bool treasuretreasure::has_materialexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void treasuretreasure::set_has_materialexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void treasuretreasure::clear_has_materialexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void treasuretreasure::clear_materialexp() {
  materialexp_ = 0;
  clear_has_materialexp();
}
inline ::google::protobuf::int32 treasuretreasure::materialexp() const {
  return materialexp_;
}
inline void treasuretreasure::set_materialexp(::google::protobuf::int32 value) {
  set_has_materialexp();
  materialexp_ = value;
}

// optional int32 exp = 8;
inline bool treasuretreasure::has_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void treasuretreasure::set_has_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void treasuretreasure::clear_has_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void treasuretreasure::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 treasuretreasure::exp() const {
  return exp_;
}
inline void treasuretreasure::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int64 BreakMaterialID = 9;
inline bool treasuretreasure::has_breakmaterialid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void treasuretreasure::set_has_breakmaterialid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void treasuretreasure::clear_has_breakmaterialid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void treasuretreasure::clear_breakmaterialid() {
  breakmaterialid_ = GOOGLE_LONGLONG(0);
  clear_has_breakmaterialid();
}
inline ::google::protobuf::int64 treasuretreasure::breakmaterialid() const {
  return breakmaterialid_;
}
inline void treasuretreasure::set_breakmaterialid(::google::protobuf::int64 value) {
  set_has_breakmaterialid();
  breakmaterialid_ = value;
}

// optional int32 BreakMaterialCost = 10;
inline bool treasuretreasure::has_breakmaterialcost() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void treasuretreasure::set_has_breakmaterialcost() {
  _has_bits_[0] |= 0x00000200u;
}
inline void treasuretreasure::clear_has_breakmaterialcost() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void treasuretreasure::clear_breakmaterialcost() {
  breakmaterialcost_ = 0;
  clear_has_breakmaterialcost();
}
inline ::google::protobuf::int32 treasuretreasure::breakmaterialcost() const {
  return breakmaterialcost_;
}
inline void treasuretreasure::set_breakmaterialcost(::google::protobuf::int32 value) {
  set_has_breakmaterialcost();
  breakmaterialcost_ = value;
}

// optional int64 skill = 11;
inline bool treasuretreasure::has_skill() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void treasuretreasure::set_has_skill() {
  _has_bits_[0] |= 0x00000400u;
}
inline void treasuretreasure::clear_has_skill() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void treasuretreasure::clear_skill() {
  skill_ = GOOGLE_LONGLONG(0);
  clear_has_skill();
}
inline ::google::protobuf::int64 treasuretreasure::skill() const {
  return skill_;
}
inline void treasuretreasure::set_skill(::google::protobuf::int64 value) {
  set_has_skill();
  skill_ = value;
}

// optional int64 skillID = 12;
inline bool treasuretreasure::has_skillid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void treasuretreasure::set_has_skillid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void treasuretreasure::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void treasuretreasure::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 treasuretreasure::skillid() const {
  return skillid_;
}
inline void treasuretreasure::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// repeated .proto_ff.treasuretreasureattributeDesc attribute = 13;
inline int treasuretreasure::attribute_size() const {
  return attribute_.size();
}
inline void treasuretreasure::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::treasuretreasureattributeDesc& treasuretreasure::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::treasuretreasureattributeDesc* treasuretreasure::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::treasuretreasureattributeDesc* treasuretreasure::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasureattributeDesc >&
treasuretreasure::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasureattributeDesc >*
treasuretreasure::mutable_attribute() {
  return &attribute_;
}

// repeated int64 fragmentID = 14;
inline int treasuretreasure::fragmentid_size() const {
  return fragmentid_.size();
}
inline void treasuretreasure::clear_fragmentid() {
  fragmentid_.Clear();
}
inline ::google::protobuf::int64 treasuretreasure::fragmentid(int index) const {
  return fragmentid_.Get(index);
}
inline void treasuretreasure::set_fragmentid(int index, ::google::protobuf::int64 value) {
  fragmentid_.Set(index, value);
}
inline void treasuretreasure::add_fragmentid(::google::protobuf::int64 value) {
  fragmentid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
treasuretreasure::fragmentid() const {
  return fragmentid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
treasuretreasure::mutable_fragmentid() {
  return &fragmentid_;
}

// -------------------------------------------------------------------

// Sheet_treasuretreasure

// repeated .proto_ff.treasuretreasure treasuretreasure_List = 1;
inline int Sheet_treasuretreasure::treasuretreasure_list_size() const {
  return treasuretreasure_list_.size();
}
inline void Sheet_treasuretreasure::clear_treasuretreasure_list() {
  treasuretreasure_list_.Clear();
}
inline const ::proto_ff::treasuretreasure& Sheet_treasuretreasure::treasuretreasure_list(int index) const {
  return treasuretreasure_list_.Get(index);
}
inline ::proto_ff::treasuretreasure* Sheet_treasuretreasure::mutable_treasuretreasure_list(int index) {
  return treasuretreasure_list_.Mutable(index);
}
inline ::proto_ff::treasuretreasure* Sheet_treasuretreasure::add_treasuretreasure_list() {
  return treasuretreasure_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasure >&
Sheet_treasuretreasure::treasuretreasure_list() const {
  return treasuretreasure_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasuretreasure >*
Sheet_treasuretreasure::mutable_treasuretreasure_list() {
  return &treasuretreasure_list_;
}

// -------------------------------------------------------------------

// treasurechangeattributeDesc

// optional int32 type = 1;
inline bool treasurechangeattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurechangeattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurechangeattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurechangeattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 treasurechangeattributeDesc::type() const {
  return type_;
}
inline void treasurechangeattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool treasurechangeattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurechangeattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurechangeattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurechangeattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 treasurechangeattributeDesc::value() const {
  return value_;
}
inline void treasurechangeattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// treasurechange

// optional int64 id = 1;
inline bool treasurechange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurechange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurechange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurechange::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 treasurechange::id() const {
  return id_;
}
inline void treasurechange::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string resource = 2;
inline bool treasurechange::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurechange::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurechange::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurechange::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& treasurechange::resource() const {
  return *resource_;
}
inline void treasurechange::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void treasurechange::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void treasurechange::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasurechange::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* treasurechange::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasurechange::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 3;
inline bool treasurechange::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void treasurechange::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void treasurechange::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void treasurechange::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& treasurechange::name() const {
  return *name_;
}
inline void treasurechange::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void treasurechange::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void treasurechange::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasurechange::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* treasurechange::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasurechange::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string activeDesc = 4;
inline bool treasurechange::has_activedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void treasurechange::set_has_activedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void treasurechange::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void treasurechange::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& treasurechange::activedesc() const {
  return *activedesc_;
}
inline void treasurechange::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void treasurechange::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void treasurechange::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasurechange::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* treasurechange::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasurechange::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 quality = 5;
inline bool treasurechange::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void treasurechange::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void treasurechange::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void treasurechange::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 treasurechange::quality() const {
  return quality_;
}
inline void treasurechange::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int64 starId = 6;
inline bool treasurechange::has_starid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void treasurechange::set_has_starid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void treasurechange::clear_has_starid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void treasurechange::clear_starid() {
  starid_ = GOOGLE_LONGLONG(0);
  clear_has_starid();
}
inline ::google::protobuf::int64 treasurechange::starid() const {
  return starid_;
}
inline void treasurechange::set_starid(::google::protobuf::int64 value) {
  set_has_starid();
  starid_ = value;
}

// optional string starNum = 7;
inline bool treasurechange::has_starnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void treasurechange::set_has_starnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void treasurechange::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void treasurechange::clear_starnum() {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    starnum_->clear();
  }
  clear_has_starnum();
}
inline const ::std::string& treasurechange::starnum() const {
  return *starnum_;
}
inline void treasurechange::set_starnum(const ::std::string& value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void treasurechange::set_starnum(const char* value) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(value);
}
inline void treasurechange::set_starnum(const char* value, size_t size) {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* treasurechange::mutable_starnum() {
  set_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    starnum_ = new ::std::string;
  }
  return starnum_;
}
inline ::std::string* treasurechange::release_starnum() {
  clear_has_starnum();
  if (starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = starnum_;
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void treasurechange::set_allocated_starnum(::std::string* starnum) {
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (starnum) {
    set_has_starnum();
    starnum_ = starnum;
  } else {
    clear_has_starnum();
    starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 starUp = 8;
inline bool treasurechange::has_starup() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void treasurechange::set_has_starup() {
  _has_bits_[0] |= 0x00000080u;
}
inline void treasurechange::clear_has_starup() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void treasurechange::clear_starup() {
  starup_ = 0;
  clear_has_starup();
}
inline ::google::protobuf::int32 treasurechange::starup() const {
  return starup_;
}
inline void treasurechange::set_starup(::google::protobuf::int32 value) {
  set_has_starup();
  starup_ = value;
}

// optional int32 starBer = 9;
inline bool treasurechange::has_starber() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void treasurechange::set_has_starber() {
  _has_bits_[0] |= 0x00000100u;
}
inline void treasurechange::clear_has_starber() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void treasurechange::clear_starber() {
  starber_ = 0;
  clear_has_starber();
}
inline ::google::protobuf::int32 treasurechange::starber() const {
  return starber_;
}
inline void treasurechange::set_starber(::google::protobuf::int32 value) {
  set_has_starber();
  starber_ = value;
}

// optional int64 occupation = 10;
inline bool treasurechange::has_occupation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void treasurechange::set_has_occupation() {
  _has_bits_[0] |= 0x00000200u;
}
inline void treasurechange::clear_has_occupation() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void treasurechange::clear_occupation() {
  occupation_ = GOOGLE_LONGLONG(0);
  clear_has_occupation();
}
inline ::google::protobuf::int64 treasurechange::occupation() const {
  return occupation_;
}
inline void treasurechange::set_occupation(::google::protobuf::int64 value) {
  set_has_occupation();
  occupation_ = value;
}

// optional int64 skill = 11;
inline bool treasurechange::has_skill() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void treasurechange::set_has_skill() {
  _has_bits_[0] |= 0x00000400u;
}
inline void treasurechange::clear_has_skill() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void treasurechange::clear_skill() {
  skill_ = GOOGLE_LONGLONG(0);
  clear_has_skill();
}
inline ::google::protobuf::int64 treasurechange::skill() const {
  return skill_;
}
inline void treasurechange::set_skill(::google::protobuf::int64 value) {
  set_has_skill();
  skill_ = value;
}

// optional int64 upAttributeId = 12;
inline bool treasurechange::has_upattributeid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void treasurechange::set_has_upattributeid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void treasurechange::clear_has_upattributeid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void treasurechange::clear_upattributeid() {
  upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_upattributeid();
}
inline ::google::protobuf::int64 treasurechange::upattributeid() const {
  return upattributeid_;
}
inline void treasurechange::set_upattributeid(::google::protobuf::int64 value) {
  set_has_upattributeid();
  upattributeid_ = value;
}

// repeated .proto_ff.treasurechangeattributeDesc attribute = 13;
inline int treasurechange::attribute_size() const {
  return attribute_.size();
}
inline void treasurechange::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::treasurechangeattributeDesc& treasurechange::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::treasurechangeattributeDesc* treasurechange::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::treasurechangeattributeDesc* treasurechange::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechangeattributeDesc >&
treasurechange::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechangeattributeDesc >*
treasurechange::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_treasurechange

// repeated .proto_ff.treasurechange treasurechange_List = 1;
inline int Sheet_treasurechange::treasurechange_list_size() const {
  return treasurechange_list_.size();
}
inline void Sheet_treasurechange::clear_treasurechange_list() {
  treasurechange_list_.Clear();
}
inline const ::proto_ff::treasurechange& Sheet_treasurechange::treasurechange_list(int index) const {
  return treasurechange_list_.Get(index);
}
inline ::proto_ff::treasurechange* Sheet_treasurechange::mutable_treasurechange_list(int index) {
  return treasurechange_list_.Mutable(index);
}
inline ::proto_ff::treasurechange* Sheet_treasurechange::add_treasurechange_list() {
  return treasurechange_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechange >&
Sheet_treasurechange::treasurechange_list() const {
  return treasurechange_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurechange >*
Sheet_treasurechange::mutable_treasurechange_list() {
  return &treasurechange_list_;
}

// -------------------------------------------------------------------

// treasurestarUpupAttributeDesc

// optional int32 type = 1;
inline bool treasurestarUpupAttributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurestarUpupAttributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurestarUpupAttributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurestarUpupAttributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 treasurestarUpupAttributeDesc::type() const {
  return type_;
}
inline void treasurestarUpupAttributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool treasurestarUpupAttributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurestarUpupAttributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurestarUpupAttributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurestarUpupAttributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 treasurestarUpupAttributeDesc::value() const {
  return value_;
}
inline void treasurestarUpupAttributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// treasurestarUp

// optional int32 ID = 1;
inline bool treasurestarUp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurestarUp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurestarUp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurestarUp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 treasurestarUp::id() const {
  return id_;
}
inline void treasurestarUp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 upAttributeId = 2;
inline bool treasurestarUp::has_upattributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurestarUp::set_has_upattributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurestarUp::clear_has_upattributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurestarUp::clear_upattributeid() {
  upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_upattributeid();
}
inline ::google::protobuf::int64 treasurestarUp::upattributeid() const {
  return upattributeid_;
}
inline void treasurestarUp::set_upattributeid(::google::protobuf::int64 value) {
  set_has_upattributeid();
  upattributeid_ = value;
}

// optional int32 starID = 3;
inline bool treasurestarUp::has_starid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void treasurestarUp::set_has_starid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void treasurestarUp::clear_has_starid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void treasurestarUp::clear_starid() {
  starid_ = 0;
  clear_has_starid();
}
inline ::google::protobuf::int32 treasurestarUp::starid() const {
  return starid_;
}
inline void treasurestarUp::set_starid(::google::protobuf::int32 value) {
  set_has_starid();
  starid_ = value;
}

// repeated .proto_ff.treasurestarUpupAttributeDesc upAttribute = 4;
inline int treasurestarUp::upattribute_size() const {
  return upattribute_.size();
}
inline void treasurestarUp::clear_upattribute() {
  upattribute_.Clear();
}
inline const ::proto_ff::treasurestarUpupAttributeDesc& treasurestarUp::upattribute(int index) const {
  return upattribute_.Get(index);
}
inline ::proto_ff::treasurestarUpupAttributeDesc* treasurestarUp::mutable_upattribute(int index) {
  return upattribute_.Mutable(index);
}
inline ::proto_ff::treasurestarUpupAttributeDesc* treasurestarUp::add_upattribute() {
  return upattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUpupAttributeDesc >&
treasurestarUp::upattribute() const {
  return upattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUpupAttributeDesc >*
treasurestarUp::mutable_upattribute() {
  return &upattribute_;
}

// -------------------------------------------------------------------

// Sheet_treasurestarUp

// repeated .proto_ff.treasurestarUp treasurestarUp_List = 1;
inline int Sheet_treasurestarUp::treasurestarup_list_size() const {
  return treasurestarup_list_.size();
}
inline void Sheet_treasurestarUp::clear_treasurestarup_list() {
  treasurestarup_list_.Clear();
}
inline const ::proto_ff::treasurestarUp& Sheet_treasurestarUp::treasurestarup_list(int index) const {
  return treasurestarup_list_.Get(index);
}
inline ::proto_ff::treasurestarUp* Sheet_treasurestarUp::mutable_treasurestarup_list(int index) {
  return treasurestarup_list_.Mutable(index);
}
inline ::proto_ff::treasurestarUp* Sheet_treasurestarUp::add_treasurestarup_list() {
  return treasurestarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUp >&
Sheet_treasurestarUp::treasurestarup_list() const {
  return treasurestarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurestarUp >*
Sheet_treasurestarUp::mutable_treasurestarup_list() {
  return &treasurestarup_list_;
}

// -------------------------------------------------------------------

// treasurefragmentattributeDesc

// optional int32 type = 1;
inline bool treasurefragmentattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurefragmentattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurefragmentattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurefragmentattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 treasurefragmentattributeDesc::type() const {
  return type_;
}
inline void treasurefragmentattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool treasurefragmentattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurefragmentattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurefragmentattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurefragmentattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 treasurefragmentattributeDesc::value() const {
  return value_;
}
inline void treasurefragmentattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// treasurefragment

// optional int64 fragmentID = 1;
inline bool treasurefragment::has_fragmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurefragment::set_has_fragmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurefragment::clear_has_fragmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurefragment::clear_fragmentid() {
  fragmentid_ = GOOGLE_LONGLONG(0);
  clear_has_fragmentid();
}
inline ::google::protobuf::int64 treasurefragment::fragmentid() const {
  return fragmentid_;
}
inline void treasurefragment::set_fragmentid(::google::protobuf::int64 value) {
  set_has_fragmentid();
  fragmentid_ = value;
}

// optional int64 item = 2;
inline bool treasurefragment::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurefragment::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurefragment::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurefragment::clear_item() {
  item_ = GOOGLE_LONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::int64 treasurefragment::item() const {
  return item_;
}
inline void treasurefragment::set_item(::google::protobuf::int64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 itemNum = 3;
inline bool treasurefragment::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void treasurefragment::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void treasurefragment::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void treasurefragment::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 treasurefragment::itemnum() const {
  return itemnum_;
}
inline void treasurefragment::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// repeated .proto_ff.treasurefragmentattributeDesc attribute = 4;
inline int treasurefragment::attribute_size() const {
  return attribute_.size();
}
inline void treasurefragment::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::treasurefragmentattributeDesc& treasurefragment::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::treasurefragmentattributeDesc* treasurefragment::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::treasurefragmentattributeDesc* treasurefragment::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragmentattributeDesc >&
treasurefragment::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragmentattributeDesc >*
treasurefragment::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_treasurefragment

// repeated .proto_ff.treasurefragment treasurefragment_List = 1;
inline int Sheet_treasurefragment::treasurefragment_list_size() const {
  return treasurefragment_list_.size();
}
inline void Sheet_treasurefragment::clear_treasurefragment_list() {
  treasurefragment_list_.Clear();
}
inline const ::proto_ff::treasurefragment& Sheet_treasurefragment::treasurefragment_list(int index) const {
  return treasurefragment_list_.Get(index);
}
inline ::proto_ff::treasurefragment* Sheet_treasurefragment::mutable_treasurefragment_list(int index) {
  return treasurefragment_list_.Mutable(index);
}
inline ::proto_ff::treasurefragment* Sheet_treasurefragment::add_treasurefragment_list() {
  return treasurefragment_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragment >&
Sheet_treasurefragment::treasurefragment_list() const {
  return treasurefragment_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurefragment >*
Sheet_treasurefragment::mutable_treasurefragment_list() {
  return &treasurefragment_list_;
}

// -------------------------------------------------------------------

// treasureequipattributeDesc

// optional int32 type = 1;
inline bool treasureequipattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasureequipattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasureequipattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasureequipattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 treasureequipattributeDesc::type() const {
  return type_;
}
inline void treasureequipattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool treasureequipattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasureequipattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasureequipattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasureequipattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 treasureequipattributeDesc::value() const {
  return value_;
}
inline void treasureequipattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// treasureequip

// optional int64 id = 1;
inline bool treasureequip::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasureequip::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasureequip::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasureequip::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 treasureequip::id() const {
  return id_;
}
inline void treasureequip::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 position = 2;
inline bool treasureequip::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasureequip::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasureequip::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasureequip::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 treasureequip::position() const {
  return position_;
}
inline void treasureequip::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// repeated .proto_ff.treasureequipattributeDesc attribute = 3;
inline int treasureequip::attribute_size() const {
  return attribute_.size();
}
inline void treasureequip::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::treasureequipattributeDesc& treasureequip::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::treasureequipattributeDesc* treasureequip::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::treasureequipattributeDesc* treasureequip::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequipattributeDesc >&
treasureequip::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequipattributeDesc >*
treasureequip::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_treasureequip

// repeated .proto_ff.treasureequip treasureequip_List = 1;
inline int Sheet_treasureequip::treasureequip_list_size() const {
  return treasureequip_list_.size();
}
inline void Sheet_treasureequip::clear_treasureequip_list() {
  treasureequip_list_.Clear();
}
inline const ::proto_ff::treasureequip& Sheet_treasureequip::treasureequip_list(int index) const {
  return treasureequip_list_.Get(index);
}
inline ::proto_ff::treasureequip* Sheet_treasureequip::mutable_treasureequip_list(int index) {
  return treasureequip_list_.Mutable(index);
}
inline ::proto_ff::treasureequip* Sheet_treasureequip::add_treasureequip_list() {
  return treasureequip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequip >&
Sheet_treasureequip::treasureequip_list() const {
  return treasureequip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureequip >*
Sheet_treasureequip::mutable_treasureequip_list() {
  return &treasureequip_list_;
}

// -------------------------------------------------------------------

// treasureslot

// optional int32 position = 1;
inline bool treasureslot::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasureslot::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasureslot::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasureslot::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 treasureslot::position() const {
  return position_;
}
inline void treasureslot::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// optional int32 refineLv = 2;
inline bool treasureslot::has_refinelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasureslot::set_has_refinelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasureslot::clear_has_refinelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasureslot::clear_refinelv() {
  refinelv_ = 0;
  clear_has_refinelv();
}
inline ::google::protobuf::int32 treasureslot::refinelv() const {
  return refinelv_;
}
inline void treasureslot::set_refinelv(::google::protobuf::int32 value) {
  set_has_refinelv();
  refinelv_ = value;
}

// optional int32 refineNum = 3;
inline bool treasureslot::has_refinenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void treasureslot::set_has_refinenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void treasureslot::clear_has_refinenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void treasureslot::clear_refinenum() {
  refinenum_ = 0;
  clear_has_refinenum();
}
inline ::google::protobuf::int32 treasureslot::refinenum() const {
  return refinenum_;
}
inline void treasureslot::set_refinenum(::google::protobuf::int32 value) {
  set_has_refinenum();
  refinenum_ = value;
}

// -------------------------------------------------------------------

// Sheet_treasureslot

// repeated .proto_ff.treasureslot treasureslot_List = 1;
inline int Sheet_treasureslot::treasureslot_list_size() const {
  return treasureslot_list_.size();
}
inline void Sheet_treasureslot::clear_treasureslot_list() {
  treasureslot_list_.Clear();
}
inline const ::proto_ff::treasureslot& Sheet_treasureslot::treasureslot_list(int index) const {
  return treasureslot_list_.Get(index);
}
inline ::proto_ff::treasureslot* Sheet_treasureslot::mutable_treasureslot_list(int index) {
  return treasureslot_list_.Mutable(index);
}
inline ::proto_ff::treasureslot* Sheet_treasureslot::add_treasureslot_list() {
  return treasureslot_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureslot >&
Sheet_treasureslot::treasureslot_list() const {
  return treasureslot_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasureslot >*
Sheet_treasureslot::mutable_treasureslot_list() {
  return &treasureslot_list_;
}

// -------------------------------------------------------------------

// treasurerefine

// optional int32 id = 1;
inline bool treasurerefine::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void treasurerefine::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void treasurerefine::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void treasurerefine::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 treasurerefine::id() const {
  return id_;
}
inline void treasurerefine::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 refineId = 2;
inline bool treasurerefine::has_refineid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void treasurerefine::set_has_refineid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void treasurerefine::clear_has_refineid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void treasurerefine::clear_refineid() {
  refineid_ = GOOGLE_LONGLONG(0);
  clear_has_refineid();
}
inline ::google::protobuf::int64 treasurerefine::refineid() const {
  return refineid_;
}
inline void treasurerefine::set_refineid(::google::protobuf::int64 value) {
  set_has_refineid();
  refineid_ = value;
}

// optional int32 refineNum = 3;
inline bool treasurerefine::has_refinenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void treasurerefine::set_has_refinenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void treasurerefine::clear_has_refinenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void treasurerefine::clear_refinenum() {
  refinenum_ = 0;
  clear_has_refinenum();
}
inline ::google::protobuf::int32 treasurerefine::refinenum() const {
  return refinenum_;
}
inline void treasurerefine::set_refinenum(::google::protobuf::int32 value) {
  set_has_refinenum();
  refinenum_ = value;
}

// -------------------------------------------------------------------

// Sheet_treasurerefine

// repeated .proto_ff.treasurerefine treasurerefine_List = 1;
inline int Sheet_treasurerefine::treasurerefine_list_size() const {
  return treasurerefine_list_.size();
}
inline void Sheet_treasurerefine::clear_treasurerefine_list() {
  treasurerefine_list_.Clear();
}
inline const ::proto_ff::treasurerefine& Sheet_treasurerefine::treasurerefine_list(int index) const {
  return treasurerefine_list_.Get(index);
}
inline ::proto_ff::treasurerefine* Sheet_treasurerefine::mutable_treasurerefine_list(int index) {
  return treasurerefine_list_.Mutable(index);
}
inline ::proto_ff::treasurerefine* Sheet_treasurerefine::add_treasurerefine_list() {
  return treasurerefine_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurerefine >&
Sheet_treasurerefine::treasurerefine_list() const {
  return treasurerefine_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::treasurerefine >*
Sheet_treasurerefine::mutable_treasurerefine_list() {
  return &treasurerefine_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_treasure_2eproto__INCLUDED
