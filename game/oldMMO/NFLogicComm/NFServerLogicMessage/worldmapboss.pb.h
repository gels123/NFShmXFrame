// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worldmapboss.proto

#ifndef PROTOBUF_worldmapboss_2eproto__INCLUDED
#define PROTOBUF_worldmapboss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_worldmapboss_2eproto();
void protobuf_AssignDesc_worldmapboss_2eproto();
void protobuf_ShutdownFile_worldmapboss_2eproto();

class worldmapbossworldboss;
class Sheet_worldmapbossworldboss;
class worldmapbossdroplist;
class Sheet_worldmapbossdroplist;
class worldmapbossfestival;
class Sheet_worldmapbossfestival;

// ===================================================================

class worldmapbossworldboss : public ::google::protobuf::Message {
 public:
  worldmapbossworldboss();
  virtual ~worldmapbossworldboss();

  worldmapbossworldboss(const worldmapbossworldboss& from);

  inline worldmapbossworldboss& operator=(const worldmapbossworldboss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldmapbossworldboss& default_instance();

  void Swap(worldmapbossworldboss* other);

  // implements Message ----------------------------------------------

  worldmapbossworldboss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldmapbossworldboss& from);
  void MergeFrom(const worldmapbossworldboss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 bossId = 2;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 2;
  inline ::google::protobuf::int64 bossid() const;
  inline void set_bossid(::google::protobuf::int64 value);

  // optional int32 miniLevel = 3;
  inline bool has_minilevel() const;
  inline void clear_minilevel();
  static const int kMiniLevelFieldNumber = 3;
  inline ::google::protobuf::int32 minilevel() const;
  inline void set_minilevel(::google::protobuf::int32 value);

  // optional int32 unLockLevel = 4;
  inline bool has_unlocklevel() const;
  inline void clear_unlocklevel();
  static const int kUnLockLevelFieldNumber = 4;
  inline ::google::protobuf::int32 unlocklevel() const;
  inline void set_unlocklevel(::google::protobuf::int32 value);

  // optional int32 levelCheck = 5;
  inline bool has_levelcheck() const;
  inline void clear_levelcheck();
  static const int kLevelCheckFieldNumber = 5;
  inline ::google::protobuf::int32 levelcheck() const;
  inline void set_levelcheck(::google::protobuf::int32 value);

  // optional string pathId = 6;
  inline bool has_pathid() const;
  inline void clear_pathid();
  static const int kPathIdFieldNumber = 6;
  inline const ::std::string& pathid() const;
  inline void set_pathid(const ::std::string& value);
  inline void set_pathid(const char* value);
  inline void set_pathid(const char* value, size_t size);
  inline ::std::string* mutable_pathid();
  inline ::std::string* release_pathid();
  inline void set_allocated_pathid(::std::string* pathid);

  // optional int32 specNoticeHP = 7;
  inline bool has_specnoticehp() const;
  inline void clear_specnoticehp();
  static const int kSpecNoticeHPFieldNumber = 7;
  inline ::google::protobuf::int32 specnoticehp() const;
  inline void set_specnoticehp(::google::protobuf::int32 value);

  // optional int32 bornSpaceTime = 8;
  inline bool has_bornspacetime() const;
  inline void clear_bornspacetime();
  static const int kBornSpaceTimeFieldNumber = 8;
  inline ::google::protobuf::int32 bornspacetime() const;
  inline void set_bornspacetime(::google::protobuf::int32 value);

  // repeated string born_Time = 9;
  inline int born_time_size() const;
  inline void clear_born_time();
  static const int kBornTimeFieldNumber = 9;
  inline const ::std::string& born_time(int index) const;
  inline ::std::string* mutable_born_time(int index);
  inline void set_born_time(int index, const ::std::string& value);
  inline void set_born_time(int index, const char* value);
  inline void set_born_time(int index, const char* value, size_t size);
  inline ::std::string* add_born_time();
  inline void add_born_time(const ::std::string& value);
  inline void add_born_time(const char* value);
  inline void add_born_time(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& born_time() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_born_time();

  // @@protoc_insertion_point(class_scope:proto_ff.worldmapbossworldboss)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_minilevel();
  inline void clear_has_minilevel();
  inline void set_has_unlocklevel();
  inline void clear_has_unlocklevel();
  inline void set_has_levelcheck();
  inline void clear_has_levelcheck();
  inline void set_has_pathid();
  inline void clear_has_pathid();
  inline void set_has_specnoticehp();
  inline void clear_has_specnoticehp();
  inline void set_has_bornspacetime();
  inline void clear_has_bornspacetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bossid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 minilevel_;
  ::google::protobuf::int32 unlocklevel_;
  ::google::protobuf::int32 levelcheck_;
  ::std::string* pathid_;
  ::google::protobuf::int32 specnoticehp_;
  ::google::protobuf::int32 bornspacetime_;
  ::google::protobuf::RepeatedPtrField< ::std::string> born_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_worldmapboss_2eproto();
  friend void protobuf_AssignDesc_worldmapboss_2eproto();
  friend void protobuf_ShutdownFile_worldmapboss_2eproto();

  void InitAsDefaultInstance();
  static worldmapbossworldboss* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_worldmapbossworldboss : public ::google::protobuf::Message {
 public:
  Sheet_worldmapbossworldboss();
  virtual ~Sheet_worldmapbossworldboss();

  Sheet_worldmapbossworldboss(const Sheet_worldmapbossworldboss& from);

  inline Sheet_worldmapbossworldboss& operator=(const Sheet_worldmapbossworldboss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_worldmapbossworldboss& default_instance();

  void Swap(Sheet_worldmapbossworldboss* other);

  // implements Message ----------------------------------------------

  Sheet_worldmapbossworldboss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_worldmapbossworldboss& from);
  void MergeFrom(const Sheet_worldmapbossworldboss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.worldmapbossworldboss worldmapbossworldboss_List = 1;
  inline int worldmapbossworldboss_list_size() const;
  inline void clear_worldmapbossworldboss_list();
  static const int kWorldmapbossworldbossListFieldNumber = 1;
  inline const ::proto_ff::worldmapbossworldboss& worldmapbossworldboss_list(int index) const;
  inline ::proto_ff::worldmapbossworldboss* mutable_worldmapbossworldboss_list(int index);
  inline ::proto_ff::worldmapbossworldboss* add_worldmapbossworldboss_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossworldboss >&
      worldmapbossworldboss_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossworldboss >*
      mutable_worldmapbossworldboss_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_worldmapbossworldboss)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossworldboss > worldmapbossworldboss_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_worldmapboss_2eproto();
  friend void protobuf_AssignDesc_worldmapboss_2eproto();
  friend void protobuf_ShutdownFile_worldmapboss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_worldmapbossworldboss* default_instance_;
};
// -------------------------------------------------------------------

class worldmapbossdroplist : public ::google::protobuf::Message {
 public:
  worldmapbossdroplist();
  virtual ~worldmapbossdroplist();

  worldmapbossdroplist(const worldmapbossdroplist& from);

  inline worldmapbossdroplist& operator=(const worldmapbossdroplist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldmapbossdroplist& default_instance();

  void Swap(worldmapbossdroplist* other);

  // implements Message ----------------------------------------------

  worldmapbossdroplist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldmapbossdroplist& from);
  void MergeFrom(const worldmapbossdroplist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 monsterId = 2;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsterIdFieldNumber = 2;
  inline ::google::protobuf::int64 monsterid() const;
  inline void set_monsterid(::google::protobuf::int64 value);

  // optional int32 bossLevel = 3;
  inline bool has_bosslevel() const;
  inline void clear_bosslevel();
  static const int kBossLevelFieldNumber = 3;
  inline ::google::protobuf::int32 bosslevel() const;
  inline void set_bosslevel(::google::protobuf::int32 value);

  // optional int64 dropId = 4;
  inline bool has_dropid() const;
  inline void clear_dropid();
  static const int kDropIdFieldNumber = 4;
  inline ::google::protobuf::int64 dropid() const;
  inline void set_dropid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.worldmapbossdroplist)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_bosslevel();
  inline void clear_has_bosslevel();
  inline void set_has_dropid();
  inline void clear_has_dropid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 monsterid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 bosslevel_;
  ::google::protobuf::int64 dropid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_worldmapboss_2eproto();
  friend void protobuf_AssignDesc_worldmapboss_2eproto();
  friend void protobuf_ShutdownFile_worldmapboss_2eproto();

  void InitAsDefaultInstance();
  static worldmapbossdroplist* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_worldmapbossdroplist : public ::google::protobuf::Message {
 public:
  Sheet_worldmapbossdroplist();
  virtual ~Sheet_worldmapbossdroplist();

  Sheet_worldmapbossdroplist(const Sheet_worldmapbossdroplist& from);

  inline Sheet_worldmapbossdroplist& operator=(const Sheet_worldmapbossdroplist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_worldmapbossdroplist& default_instance();

  void Swap(Sheet_worldmapbossdroplist* other);

  // implements Message ----------------------------------------------

  Sheet_worldmapbossdroplist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_worldmapbossdroplist& from);
  void MergeFrom(const Sheet_worldmapbossdroplist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.worldmapbossdroplist worldmapbossdroplist_List = 1;
  inline int worldmapbossdroplist_list_size() const;
  inline void clear_worldmapbossdroplist_list();
  static const int kWorldmapbossdroplistListFieldNumber = 1;
  inline const ::proto_ff::worldmapbossdroplist& worldmapbossdroplist_list(int index) const;
  inline ::proto_ff::worldmapbossdroplist* mutable_worldmapbossdroplist_list(int index);
  inline ::proto_ff::worldmapbossdroplist* add_worldmapbossdroplist_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossdroplist >&
      worldmapbossdroplist_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossdroplist >*
      mutable_worldmapbossdroplist_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_worldmapbossdroplist)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossdroplist > worldmapbossdroplist_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_worldmapboss_2eproto();
  friend void protobuf_AssignDesc_worldmapboss_2eproto();
  friend void protobuf_ShutdownFile_worldmapboss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_worldmapbossdroplist* default_instance_;
};
// -------------------------------------------------------------------

class worldmapbossfestival : public ::google::protobuf::Message {
 public:
  worldmapbossfestival();
  virtual ~worldmapbossfestival();

  worldmapbossfestival(const worldmapbossfestival& from);

  inline worldmapbossfestival& operator=(const worldmapbossfestival& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldmapbossfestival& default_instance();

  void Swap(worldmapbossfestival* other);

  // implements Message ----------------------------------------------

  worldmapbossfestival* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldmapbossfestival& from);
  void MergeFrom(const worldmapbossfestival& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 bossId = 2;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 2;
  inline ::google::protobuf::int64 bossid() const;
  inline void set_bossid(::google::protobuf::int64 value);

  // optional int32 across = 3;
  inline bool has_across() const;
  inline void clear_across();
  static const int kAcrossFieldNumber = 3;
  inline ::google::protobuf::int32 across() const;
  inline void set_across(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.worldmapbossfestival)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_across();
  inline void clear_has_across();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bossid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 across_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_worldmapboss_2eproto();
  friend void protobuf_AssignDesc_worldmapboss_2eproto();
  friend void protobuf_ShutdownFile_worldmapboss_2eproto();

  void InitAsDefaultInstance();
  static worldmapbossfestival* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_worldmapbossfestival : public ::google::protobuf::Message {
 public:
  Sheet_worldmapbossfestival();
  virtual ~Sheet_worldmapbossfestival();

  Sheet_worldmapbossfestival(const Sheet_worldmapbossfestival& from);

  inline Sheet_worldmapbossfestival& operator=(const Sheet_worldmapbossfestival& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_worldmapbossfestival& default_instance();

  void Swap(Sheet_worldmapbossfestival* other);

  // implements Message ----------------------------------------------

  Sheet_worldmapbossfestival* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_worldmapbossfestival& from);
  void MergeFrom(const Sheet_worldmapbossfestival& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.worldmapbossfestival worldmapbossfestival_List = 1;
  inline int worldmapbossfestival_list_size() const;
  inline void clear_worldmapbossfestival_list();
  static const int kWorldmapbossfestivalListFieldNumber = 1;
  inline const ::proto_ff::worldmapbossfestival& worldmapbossfestival_list(int index) const;
  inline ::proto_ff::worldmapbossfestival* mutable_worldmapbossfestival_list(int index);
  inline ::proto_ff::worldmapbossfestival* add_worldmapbossfestival_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossfestival >&
      worldmapbossfestival_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossfestival >*
      mutable_worldmapbossfestival_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_worldmapbossfestival)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossfestival > worldmapbossfestival_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_worldmapboss_2eproto();
  friend void protobuf_AssignDesc_worldmapboss_2eproto();
  friend void protobuf_ShutdownFile_worldmapboss_2eproto();

  void InitAsDefaultInstance();
  static Sheet_worldmapbossfestival* default_instance_;
};
// ===================================================================


// ===================================================================

// worldmapbossworldboss

// optional int32 id = 1;
inline bool worldmapbossworldboss::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worldmapbossworldboss::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worldmapbossworldboss::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worldmapbossworldboss::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 worldmapbossworldboss::id() const {
  return id_;
}
inline void worldmapbossworldboss::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 bossId = 2;
inline bool worldmapbossworldboss::has_bossid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worldmapbossworldboss::set_has_bossid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worldmapbossworldboss::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worldmapbossworldboss::clear_bossid() {
  bossid_ = GOOGLE_LONGLONG(0);
  clear_has_bossid();
}
inline ::google::protobuf::int64 worldmapbossworldboss::bossid() const {
  return bossid_;
}
inline void worldmapbossworldboss::set_bossid(::google::protobuf::int64 value) {
  set_has_bossid();
  bossid_ = value;
}

// optional int32 miniLevel = 3;
inline bool worldmapbossworldboss::has_minilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void worldmapbossworldboss::set_has_minilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void worldmapbossworldboss::clear_has_minilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void worldmapbossworldboss::clear_minilevel() {
  minilevel_ = 0;
  clear_has_minilevel();
}
inline ::google::protobuf::int32 worldmapbossworldboss::minilevel() const {
  return minilevel_;
}
inline void worldmapbossworldboss::set_minilevel(::google::protobuf::int32 value) {
  set_has_minilevel();
  minilevel_ = value;
}

// optional int32 unLockLevel = 4;
inline bool worldmapbossworldboss::has_unlocklevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void worldmapbossworldboss::set_has_unlocklevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void worldmapbossworldboss::clear_has_unlocklevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void worldmapbossworldboss::clear_unlocklevel() {
  unlocklevel_ = 0;
  clear_has_unlocklevel();
}
inline ::google::protobuf::int32 worldmapbossworldboss::unlocklevel() const {
  return unlocklevel_;
}
inline void worldmapbossworldboss::set_unlocklevel(::google::protobuf::int32 value) {
  set_has_unlocklevel();
  unlocklevel_ = value;
}

// optional int32 levelCheck = 5;
inline bool worldmapbossworldboss::has_levelcheck() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void worldmapbossworldboss::set_has_levelcheck() {
  _has_bits_[0] |= 0x00000010u;
}
inline void worldmapbossworldboss::clear_has_levelcheck() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void worldmapbossworldboss::clear_levelcheck() {
  levelcheck_ = 0;
  clear_has_levelcheck();
}
inline ::google::protobuf::int32 worldmapbossworldboss::levelcheck() const {
  return levelcheck_;
}
inline void worldmapbossworldboss::set_levelcheck(::google::protobuf::int32 value) {
  set_has_levelcheck();
  levelcheck_ = value;
}

// optional string pathId = 6;
inline bool worldmapbossworldboss::has_pathid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void worldmapbossworldboss::set_has_pathid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void worldmapbossworldboss::clear_has_pathid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void worldmapbossworldboss::clear_pathid() {
  if (pathid_ != &::google::protobuf::internal::kEmptyString) {
    pathid_->clear();
  }
  clear_has_pathid();
}
inline const ::std::string& worldmapbossworldboss::pathid() const {
  return *pathid_;
}
inline void worldmapbossworldboss::set_pathid(const ::std::string& value) {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  pathid_->assign(value);
}
inline void worldmapbossworldboss::set_pathid(const char* value) {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  pathid_->assign(value);
}
inline void worldmapbossworldboss::set_pathid(const char* value, size_t size) {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  pathid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* worldmapbossworldboss::mutable_pathid() {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  return pathid_;
}
inline ::std::string* worldmapbossworldboss::release_pathid() {
  clear_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pathid_;
    pathid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void worldmapbossworldboss::set_allocated_pathid(::std::string* pathid) {
  if (pathid_ != &::google::protobuf::internal::kEmptyString) {
    delete pathid_;
  }
  if (pathid) {
    set_has_pathid();
    pathid_ = pathid;
  } else {
    clear_has_pathid();
    pathid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 specNoticeHP = 7;
inline bool worldmapbossworldboss::has_specnoticehp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void worldmapbossworldboss::set_has_specnoticehp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void worldmapbossworldboss::clear_has_specnoticehp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void worldmapbossworldboss::clear_specnoticehp() {
  specnoticehp_ = 0;
  clear_has_specnoticehp();
}
inline ::google::protobuf::int32 worldmapbossworldboss::specnoticehp() const {
  return specnoticehp_;
}
inline void worldmapbossworldboss::set_specnoticehp(::google::protobuf::int32 value) {
  set_has_specnoticehp();
  specnoticehp_ = value;
}

// optional int32 bornSpaceTime = 8;
inline bool worldmapbossworldboss::has_bornspacetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void worldmapbossworldboss::set_has_bornspacetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void worldmapbossworldboss::clear_has_bornspacetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void worldmapbossworldboss::clear_bornspacetime() {
  bornspacetime_ = 0;
  clear_has_bornspacetime();
}
inline ::google::protobuf::int32 worldmapbossworldboss::bornspacetime() const {
  return bornspacetime_;
}
inline void worldmapbossworldboss::set_bornspacetime(::google::protobuf::int32 value) {
  set_has_bornspacetime();
  bornspacetime_ = value;
}

// repeated string born_Time = 9;
inline int worldmapbossworldboss::born_time_size() const {
  return born_time_.size();
}
inline void worldmapbossworldboss::clear_born_time() {
  born_time_.Clear();
}
inline const ::std::string& worldmapbossworldboss::born_time(int index) const {
  return born_time_.Get(index);
}
inline ::std::string* worldmapbossworldboss::mutable_born_time(int index) {
  return born_time_.Mutable(index);
}
inline void worldmapbossworldboss::set_born_time(int index, const ::std::string& value) {
  born_time_.Mutable(index)->assign(value);
}
inline void worldmapbossworldboss::set_born_time(int index, const char* value) {
  born_time_.Mutable(index)->assign(value);
}
inline void worldmapbossworldboss::set_born_time(int index, const char* value, size_t size) {
  born_time_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* worldmapbossworldboss::add_born_time() {
  return born_time_.Add();
}
inline void worldmapbossworldboss::add_born_time(const ::std::string& value) {
  born_time_.Add()->assign(value);
}
inline void worldmapbossworldboss::add_born_time(const char* value) {
  born_time_.Add()->assign(value);
}
inline void worldmapbossworldboss::add_born_time(const char* value, size_t size) {
  born_time_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
worldmapbossworldboss::born_time() const {
  return born_time_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
worldmapbossworldboss::mutable_born_time() {
  return &born_time_;
}

// -------------------------------------------------------------------

// Sheet_worldmapbossworldboss

// repeated .proto_ff.worldmapbossworldboss worldmapbossworldboss_List = 1;
inline int Sheet_worldmapbossworldboss::worldmapbossworldboss_list_size() const {
  return worldmapbossworldboss_list_.size();
}
inline void Sheet_worldmapbossworldboss::clear_worldmapbossworldboss_list() {
  worldmapbossworldboss_list_.Clear();
}
inline const ::proto_ff::worldmapbossworldboss& Sheet_worldmapbossworldboss::worldmapbossworldboss_list(int index) const {
  return worldmapbossworldboss_list_.Get(index);
}
inline ::proto_ff::worldmapbossworldboss* Sheet_worldmapbossworldboss::mutable_worldmapbossworldboss_list(int index) {
  return worldmapbossworldboss_list_.Mutable(index);
}
inline ::proto_ff::worldmapbossworldboss* Sheet_worldmapbossworldboss::add_worldmapbossworldboss_list() {
  return worldmapbossworldboss_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossworldboss >&
Sheet_worldmapbossworldboss::worldmapbossworldboss_list() const {
  return worldmapbossworldboss_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossworldboss >*
Sheet_worldmapbossworldboss::mutable_worldmapbossworldboss_list() {
  return &worldmapbossworldboss_list_;
}

// -------------------------------------------------------------------

// worldmapbossdroplist

// optional int32 id = 1;
inline bool worldmapbossdroplist::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worldmapbossdroplist::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worldmapbossdroplist::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worldmapbossdroplist::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 worldmapbossdroplist::id() const {
  return id_;
}
inline void worldmapbossdroplist::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 monsterId = 2;
inline bool worldmapbossdroplist::has_monsterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worldmapbossdroplist::set_has_monsterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worldmapbossdroplist::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worldmapbossdroplist::clear_monsterid() {
  monsterid_ = GOOGLE_LONGLONG(0);
  clear_has_monsterid();
}
inline ::google::protobuf::int64 worldmapbossdroplist::monsterid() const {
  return monsterid_;
}
inline void worldmapbossdroplist::set_monsterid(::google::protobuf::int64 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional int32 bossLevel = 3;
inline bool worldmapbossdroplist::has_bosslevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void worldmapbossdroplist::set_has_bosslevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void worldmapbossdroplist::clear_has_bosslevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void worldmapbossdroplist::clear_bosslevel() {
  bosslevel_ = 0;
  clear_has_bosslevel();
}
inline ::google::protobuf::int32 worldmapbossdroplist::bosslevel() const {
  return bosslevel_;
}
inline void worldmapbossdroplist::set_bosslevel(::google::protobuf::int32 value) {
  set_has_bosslevel();
  bosslevel_ = value;
}

// optional int64 dropId = 4;
inline bool worldmapbossdroplist::has_dropid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void worldmapbossdroplist::set_has_dropid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void worldmapbossdroplist::clear_has_dropid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void worldmapbossdroplist::clear_dropid() {
  dropid_ = GOOGLE_LONGLONG(0);
  clear_has_dropid();
}
inline ::google::protobuf::int64 worldmapbossdroplist::dropid() const {
  return dropid_;
}
inline void worldmapbossdroplist::set_dropid(::google::protobuf::int64 value) {
  set_has_dropid();
  dropid_ = value;
}

// -------------------------------------------------------------------

// Sheet_worldmapbossdroplist

// repeated .proto_ff.worldmapbossdroplist worldmapbossdroplist_List = 1;
inline int Sheet_worldmapbossdroplist::worldmapbossdroplist_list_size() const {
  return worldmapbossdroplist_list_.size();
}
inline void Sheet_worldmapbossdroplist::clear_worldmapbossdroplist_list() {
  worldmapbossdroplist_list_.Clear();
}
inline const ::proto_ff::worldmapbossdroplist& Sheet_worldmapbossdroplist::worldmapbossdroplist_list(int index) const {
  return worldmapbossdroplist_list_.Get(index);
}
inline ::proto_ff::worldmapbossdroplist* Sheet_worldmapbossdroplist::mutable_worldmapbossdroplist_list(int index) {
  return worldmapbossdroplist_list_.Mutable(index);
}
inline ::proto_ff::worldmapbossdroplist* Sheet_worldmapbossdroplist::add_worldmapbossdroplist_list() {
  return worldmapbossdroplist_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossdroplist >&
Sheet_worldmapbossdroplist::worldmapbossdroplist_list() const {
  return worldmapbossdroplist_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossdroplist >*
Sheet_worldmapbossdroplist::mutable_worldmapbossdroplist_list() {
  return &worldmapbossdroplist_list_;
}

// -------------------------------------------------------------------

// worldmapbossfestival

// optional int32 id = 1;
inline bool worldmapbossfestival::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worldmapbossfestival::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worldmapbossfestival::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worldmapbossfestival::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 worldmapbossfestival::id() const {
  return id_;
}
inline void worldmapbossfestival::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 bossId = 2;
inline bool worldmapbossfestival::has_bossid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worldmapbossfestival::set_has_bossid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worldmapbossfestival::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worldmapbossfestival::clear_bossid() {
  bossid_ = GOOGLE_LONGLONG(0);
  clear_has_bossid();
}
inline ::google::protobuf::int64 worldmapbossfestival::bossid() const {
  return bossid_;
}
inline void worldmapbossfestival::set_bossid(::google::protobuf::int64 value) {
  set_has_bossid();
  bossid_ = value;
}

// optional int32 across = 3;
inline bool worldmapbossfestival::has_across() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void worldmapbossfestival::set_has_across() {
  _has_bits_[0] |= 0x00000004u;
}
inline void worldmapbossfestival::clear_has_across() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void worldmapbossfestival::clear_across() {
  across_ = 0;
  clear_has_across();
}
inline ::google::protobuf::int32 worldmapbossfestival::across() const {
  return across_;
}
inline void worldmapbossfestival::set_across(::google::protobuf::int32 value) {
  set_has_across();
  across_ = value;
}

// -------------------------------------------------------------------

// Sheet_worldmapbossfestival

// repeated .proto_ff.worldmapbossfestival worldmapbossfestival_List = 1;
inline int Sheet_worldmapbossfestival::worldmapbossfestival_list_size() const {
  return worldmapbossfestival_list_.size();
}
inline void Sheet_worldmapbossfestival::clear_worldmapbossfestival_list() {
  worldmapbossfestival_list_.Clear();
}
inline const ::proto_ff::worldmapbossfestival& Sheet_worldmapbossfestival::worldmapbossfestival_list(int index) const {
  return worldmapbossfestival_list_.Get(index);
}
inline ::proto_ff::worldmapbossfestival* Sheet_worldmapbossfestival::mutable_worldmapbossfestival_list(int index) {
  return worldmapbossfestival_list_.Mutable(index);
}
inline ::proto_ff::worldmapbossfestival* Sheet_worldmapbossfestival::add_worldmapbossfestival_list() {
  return worldmapbossfestival_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossfestival >&
Sheet_worldmapbossfestival::worldmapbossfestival_list() const {
  return worldmapbossfestival_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::worldmapbossfestival >*
Sheet_worldmapbossfestival::mutable_worldmapbossfestival_list() {
  return &worldmapbossfestival_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_worldmapboss_2eproto__INCLUDED
