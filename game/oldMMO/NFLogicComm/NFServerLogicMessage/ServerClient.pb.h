// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerClient.proto

#ifndef PROTOBUF_ServerClient_2eproto__INCLUDED
#define PROTOBUF_ServerClient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerClient_2eproto();
void protobuf_AssignDesc_ServerClient_2eproto();
void protobuf_ShutdownFile_ServerClient_2eproto();

class PingRsp;
class ServerToClientQueue_RSP;
class NotifyLogoutGame;
class NotifyLogoutGame_SwitchServerParam;
class ClientLoginGateRsp;

// ===================================================================

class PingRsp : public ::google::protobuf::Message {
 public:
  PingRsp();
  virtual ~PingRsp();

  PingRsp(const PingRsp& from);

  inline PingRsp& operator=(const PingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingRsp& default_instance();

  void Swap(PingRsp* other);

  // implements Message ----------------------------------------------

  PingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingRsp& from);
  void MergeFrom(const PingRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 currentmsTime = 1;
  inline bool has_currentmstime() const;
  inline void clear_currentmstime();
  static const int kCurrentmsTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 currentmstime() const;
  inline void set_currentmstime(::google::protobuf::uint64 value);

  // optional uint32 queuereducenum = 2;
  inline bool has_queuereducenum() const;
  inline void clear_queuereducenum();
  static const int kQueuereducenumFieldNumber = 2;
  inline ::google::protobuf::uint32 queuereducenum() const;
  inline void set_queuereducenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PingRsp)
 private:
  inline void set_has_currentmstime();
  inline void clear_has_currentmstime();
  inline void set_has_queuereducenum();
  inline void clear_has_queuereducenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 currentmstime_;
  ::google::protobuf::uint32 queuereducenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerClient_2eproto();
  friend void protobuf_AssignDesc_ServerClient_2eproto();
  friend void protobuf_ShutdownFile_ServerClient_2eproto();

  void InitAsDefaultInstance();
  static PingRsp* default_instance_;
};
// -------------------------------------------------------------------

class ServerToClientQueue_RSP : public ::google::protobuf::Message {
 public:
  ServerToClientQueue_RSP();
  virtual ~ServerToClientQueue_RSP();

  ServerToClientQueue_RSP(const ServerToClientQueue_RSP& from);

  inline ServerToClientQueue_RSP& operator=(const ServerToClientQueue_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerToClientQueue_RSP& default_instance();

  void Swap(ServerToClientQueue_RSP* other);

  // implements Message ----------------------------------------------

  ServerToClientQueue_RSP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerToClientQueue_RSP& from);
  void MergeFrom(const ServerToClientQueue_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto_ff.ERetCode retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::proto_ff::ERetCode retcode() const;
  inline void set_retcode(::proto_ff::ERetCode value);

  // optional uint32 nNum = 2;
  inline bool has_nnum() const;
  inline void clear_nnum();
  static const int kNNumFieldNumber = 2;
  inline ::google::protobuf::uint32 nnum() const;
  inline void set_nnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ServerToClientQueue_RSP)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_nnum();
  inline void clear_has_nnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int retcode_;
  ::google::protobuf::uint32 nnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerClient_2eproto();
  friend void protobuf_AssignDesc_ServerClient_2eproto();
  friend void protobuf_ShutdownFile_ServerClient_2eproto();

  void InitAsDefaultInstance();
  static ServerToClientQueue_RSP* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogoutGame_SwitchServerParam : public ::google::protobuf::Message {
 public:
  NotifyLogoutGame_SwitchServerParam();
  virtual ~NotifyLogoutGame_SwitchServerParam();

  NotifyLogoutGame_SwitchServerParam(const NotifyLogoutGame_SwitchServerParam& from);

  inline NotifyLogoutGame_SwitchServerParam& operator=(const NotifyLogoutGame_SwitchServerParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogoutGame_SwitchServerParam& default_instance();

  void Swap(NotifyLogoutGame_SwitchServerParam* other);

  // implements Message ----------------------------------------------

  NotifyLogoutGame_SwitchServerParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogoutGame_SwitchServerParam& from);
  void MergeFrom(const NotifyLogoutGame_SwitchServerParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string logic_server_ip = 1;
  inline bool has_logic_server_ip() const;
  inline void clear_logic_server_ip();
  static const int kLogicServerIpFieldNumber = 1;
  inline const ::std::string& logic_server_ip() const;
  inline void set_logic_server_ip(const ::std::string& value);
  inline void set_logic_server_ip(const char* value);
  inline void set_logic_server_ip(const char* value, size_t size);
  inline ::std::string* mutable_logic_server_ip();
  inline ::std::string* release_logic_server_ip();
  inline void set_allocated_logic_server_ip(::std::string* logic_server_ip);

  // required uint32 logic_server_port = 2;
  inline bool has_logic_server_port() const;
  inline void clear_logic_server_port();
  static const int kLogicServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_server_port() const;
  inline void set_logic_server_port(::google::protobuf::uint32 value);

  // required uint32 scene_template_id = 3;
  inline bool has_scene_template_id() const;
  inline void clear_scene_template_id();
  static const int kSceneTemplateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_template_id() const;
  inline void set_scene_template_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyLogoutGame.SwitchServerParam)
 private:
  inline void set_has_logic_server_ip();
  inline void clear_has_logic_server_ip();
  inline void set_has_logic_server_port();
  inline void clear_has_logic_server_port();
  inline void set_has_scene_template_id();
  inline void clear_has_scene_template_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* logic_server_ip_;
  ::google::protobuf::uint32 logic_server_port_;
  ::google::protobuf::uint32 scene_template_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ServerClient_2eproto();
  friend void protobuf_AssignDesc_ServerClient_2eproto();
  friend void protobuf_ShutdownFile_ServerClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogoutGame_SwitchServerParam* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogoutGame : public ::google::protobuf::Message {
 public:
  NotifyLogoutGame();
  virtual ~NotifyLogoutGame();

  NotifyLogoutGame(const NotifyLogoutGame& from);

  inline NotifyLogoutGame& operator=(const NotifyLogoutGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogoutGame& default_instance();

  void Swap(NotifyLogoutGame* other);

  // implements Message ----------------------------------------------

  NotifyLogoutGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogoutGame& from);
  void MergeFrom(const NotifyLogoutGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyLogoutGame_SwitchServerParam SwitchServerParam;

  // accessors -------------------------------------------------------

  // required .proto_ff.LOGOUT_FLAG flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::proto_ff::LOGOUT_FLAG flag() const;
  inline void set_flag(::proto_ff::LOGOUT_FLAG value);

  // optional .proto_ff.NotifyLogoutGame.SwitchServerParam switch_server_param = 2;
  inline bool has_switch_server_param() const;
  inline void clear_switch_server_param();
  static const int kSwitchServerParamFieldNumber = 2;
  inline const ::proto_ff::NotifyLogoutGame_SwitchServerParam& switch_server_param() const;
  inline ::proto_ff::NotifyLogoutGame_SwitchServerParam* mutable_switch_server_param();
  inline ::proto_ff::NotifyLogoutGame_SwitchServerParam* release_switch_server_param();
  inline void set_allocated_switch_server_param(::proto_ff::NotifyLogoutGame_SwitchServerParam* switch_server_param);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyLogoutGame)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_switch_server_param();
  inline void clear_has_switch_server_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::NotifyLogoutGame_SwitchServerParam* switch_server_param_;
  int flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerClient_2eproto();
  friend void protobuf_AssignDesc_ServerClient_2eproto();
  friend void protobuf_ShutdownFile_ServerClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogoutGame* default_instance_;
};
// -------------------------------------------------------------------

class ClientLoginGateRsp : public ::google::protobuf::Message {
 public:
  ClientLoginGateRsp();
  virtual ~ClientLoginGateRsp();

  ClientLoginGateRsp(const ClientLoginGateRsp& from);

  inline ClientLoginGateRsp& operator=(const ClientLoginGateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginGateRsp& default_instance();

  void Swap(ClientLoginGateRsp* other);

  // implements Message ----------------------------------------------

  ClientLoginGateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginGateRsp& from);
  void MergeFrom(const ClientLoginGateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // repeated .proto_ff.CharacterDBSimpleInfo charInfoList = 2;
  inline int charinfolist_size() const;
  inline void clear_charinfolist();
  static const int kCharInfoListFieldNumber = 2;
  inline const ::proto_ff::CharacterDBSimpleInfo& charinfolist(int index) const;
  inline ::proto_ff::CharacterDBSimpleInfo* mutable_charinfolist(int index);
  inline ::proto_ff::CharacterDBSimpleInfo* add_charinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSimpleInfo >&
      charinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSimpleInfo >*
      mutable_charinfolist();

  // @@protoc_insertion_point(class_scope:proto_ff.ClientLoginGateRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSimpleInfo > charinfolist_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerClient_2eproto();
  friend void protobuf_AssignDesc_ServerClient_2eproto();
  friend void protobuf_ShutdownFile_ServerClient_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginGateRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// PingRsp

// required uint64 currentmsTime = 1;
inline bool PingRsp::has_currentmstime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingRsp::set_has_currentmstime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingRsp::clear_has_currentmstime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingRsp::clear_currentmstime() {
  currentmstime_ = GOOGLE_ULONGLONG(0);
  clear_has_currentmstime();
}
inline ::google::protobuf::uint64 PingRsp::currentmstime() const {
  return currentmstime_;
}
inline void PingRsp::set_currentmstime(::google::protobuf::uint64 value) {
  set_has_currentmstime();
  currentmstime_ = value;
}

// optional uint32 queuereducenum = 2;
inline bool PingRsp::has_queuereducenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PingRsp::set_has_queuereducenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PingRsp::clear_has_queuereducenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PingRsp::clear_queuereducenum() {
  queuereducenum_ = 0u;
  clear_has_queuereducenum();
}
inline ::google::protobuf::uint32 PingRsp::queuereducenum() const {
  return queuereducenum_;
}
inline void PingRsp::set_queuereducenum(::google::protobuf::uint32 value) {
  set_has_queuereducenum();
  queuereducenum_ = value;
}

// -------------------------------------------------------------------

// ServerToClientQueue_RSP

// required .proto_ff.ERetCode retCode = 1;
inline bool ServerToClientQueue_RSP::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerToClientQueue_RSP::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerToClientQueue_RSP::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerToClientQueue_RSP::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::proto_ff::ERetCode ServerToClientQueue_RSP::retcode() const {
  return static_cast< ::proto_ff::ERetCode >(retcode_);
}
inline void ServerToClientQueue_RSP::set_retcode(::proto_ff::ERetCode value) {
  assert(::proto_ff::ERetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
}

// optional uint32 nNum = 2;
inline bool ServerToClientQueue_RSP::has_nnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerToClientQueue_RSP::set_has_nnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerToClientQueue_RSP::clear_has_nnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerToClientQueue_RSP::clear_nnum() {
  nnum_ = 0u;
  clear_has_nnum();
}
inline ::google::protobuf::uint32 ServerToClientQueue_RSP::nnum() const {
  return nnum_;
}
inline void ServerToClientQueue_RSP::set_nnum(::google::protobuf::uint32 value) {
  set_has_nnum();
  nnum_ = value;
}

// -------------------------------------------------------------------

// NotifyLogoutGame_SwitchServerParam

// required string logic_server_ip = 1;
inline bool NotifyLogoutGame_SwitchServerParam::has_logic_server_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogoutGame_SwitchServerParam::set_has_logic_server_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_has_logic_server_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_logic_server_ip() {
  if (logic_server_ip_ != &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_->clear();
  }
  clear_has_logic_server_ip();
}
inline const ::std::string& NotifyLogoutGame_SwitchServerParam::logic_server_ip() const {
  return *logic_server_ip_;
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_ip(const ::std::string& value) {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  logic_server_ip_->assign(value);
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_ip(const char* value) {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  logic_server_ip_->assign(value);
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_ip(const char* value, size_t size) {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  logic_server_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyLogoutGame_SwitchServerParam::mutable_logic_server_ip() {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  return logic_server_ip_;
}
inline ::std::string* NotifyLogoutGame_SwitchServerParam::release_logic_server_ip() {
  clear_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = logic_server_ip_;
    logic_server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyLogoutGame_SwitchServerParam::set_allocated_logic_server_ip(::std::string* logic_server_ip) {
  if (logic_server_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete logic_server_ip_;
  }
  if (logic_server_ip) {
    set_has_logic_server_ip();
    logic_server_ip_ = logic_server_ip;
  } else {
    clear_has_logic_server_ip();
    logic_server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 logic_server_port = 2;
inline bool NotifyLogoutGame_SwitchServerParam::has_logic_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLogoutGame_SwitchServerParam::set_has_logic_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_has_logic_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_logic_server_port() {
  logic_server_port_ = 0u;
  clear_has_logic_server_port();
}
inline ::google::protobuf::uint32 NotifyLogoutGame_SwitchServerParam::logic_server_port() const {
  return logic_server_port_;
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_port(::google::protobuf::uint32 value) {
  set_has_logic_server_port();
  logic_server_port_ = value;
}

// required uint32 scene_template_id = 3;
inline bool NotifyLogoutGame_SwitchServerParam::has_scene_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyLogoutGame_SwitchServerParam::set_has_scene_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_has_scene_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_scene_template_id() {
  scene_template_id_ = 0u;
  clear_has_scene_template_id();
}
inline ::google::protobuf::uint32 NotifyLogoutGame_SwitchServerParam::scene_template_id() const {
  return scene_template_id_;
}
inline void NotifyLogoutGame_SwitchServerParam::set_scene_template_id(::google::protobuf::uint32 value) {
  set_has_scene_template_id();
  scene_template_id_ = value;
}

// -------------------------------------------------------------------

// NotifyLogoutGame

// required .proto_ff.LOGOUT_FLAG flag = 1;
inline bool NotifyLogoutGame::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogoutGame::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogoutGame::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogoutGame::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::proto_ff::LOGOUT_FLAG NotifyLogoutGame::flag() const {
  return static_cast< ::proto_ff::LOGOUT_FLAG >(flag_);
}
inline void NotifyLogoutGame::set_flag(::proto_ff::LOGOUT_FLAG value) {
  assert(::proto_ff::LOGOUT_FLAG_IsValid(value));
  set_has_flag();
  flag_ = value;
}

// optional .proto_ff.NotifyLogoutGame.SwitchServerParam switch_server_param = 2;
inline bool NotifyLogoutGame::has_switch_server_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLogoutGame::set_has_switch_server_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLogoutGame::clear_has_switch_server_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLogoutGame::clear_switch_server_param() {
  if (switch_server_param_ != NULL) switch_server_param_->::proto_ff::NotifyLogoutGame_SwitchServerParam::Clear();
  clear_has_switch_server_param();
}
inline const ::proto_ff::NotifyLogoutGame_SwitchServerParam& NotifyLogoutGame::switch_server_param() const {
  return switch_server_param_ != NULL ? *switch_server_param_ : *default_instance_->switch_server_param_;
}
inline ::proto_ff::NotifyLogoutGame_SwitchServerParam* NotifyLogoutGame::mutable_switch_server_param() {
  set_has_switch_server_param();
  if (switch_server_param_ == NULL) switch_server_param_ = new ::proto_ff::NotifyLogoutGame_SwitchServerParam;
  return switch_server_param_;
}
inline ::proto_ff::NotifyLogoutGame_SwitchServerParam* NotifyLogoutGame::release_switch_server_param() {
  clear_has_switch_server_param();
  ::proto_ff::NotifyLogoutGame_SwitchServerParam* temp = switch_server_param_;
  switch_server_param_ = NULL;
  return temp;
}
inline void NotifyLogoutGame::set_allocated_switch_server_param(::proto_ff::NotifyLogoutGame_SwitchServerParam* switch_server_param) {
  delete switch_server_param_;
  switch_server_param_ = switch_server_param;
  if (switch_server_param) {
    set_has_switch_server_param();
  } else {
    clear_has_switch_server_param();
  }
}

// -------------------------------------------------------------------

// ClientLoginGateRsp

// required uint32 ret = 1;
inline bool ClientLoginGateRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginGateRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginGateRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginGateRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ClientLoginGateRsp::ret() const {
  return ret_;
}
inline void ClientLoginGateRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.CharacterDBSimpleInfo charInfoList = 2;
inline int ClientLoginGateRsp::charinfolist_size() const {
  return charinfolist_.size();
}
inline void ClientLoginGateRsp::clear_charinfolist() {
  charinfolist_.Clear();
}
inline const ::proto_ff::CharacterDBSimpleInfo& ClientLoginGateRsp::charinfolist(int index) const {
  return charinfolist_.Get(index);
}
inline ::proto_ff::CharacterDBSimpleInfo* ClientLoginGateRsp::mutable_charinfolist(int index) {
  return charinfolist_.Mutable(index);
}
inline ::proto_ff::CharacterDBSimpleInfo* ClientLoginGateRsp::add_charinfolist() {
  return charinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSimpleInfo >&
ClientLoginGateRsp::charinfolist() const {
  return charinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSimpleInfo >*
ClientLoginGateRsp::mutable_charinfolist() {
  return &charinfolist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerClient_2eproto__INCLUDED
