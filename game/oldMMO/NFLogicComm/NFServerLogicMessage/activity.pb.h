// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.proto

#ifndef PROTOBUF_activity_2eproto__INCLUDED
#define PROTOBUF_activity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_activity_2eproto();
void protobuf_AssignDesc_activity_2eproto();
void protobuf_ShutdownFile_activity_2eproto();

class activitydaily;
class Sheet_activitydaily;
class activityactivitynotice;
class Sheet_activityactivitynotice;
class activityscufflerewardDesc;
class activityscuffle;
class Sheet_activityscuffle;
class activitychaosDragonsrewardDesc;
class activitychaosDragons;
class Sheet_activitychaosDragons;
class activitycircuscircusDesc;
class activitycircus;
class Sheet_activitycircus;
class activitycircusNumitemDesc;
class activitycircusNum;
class Sheet_activitycircusNum;
class activitycircusDanitemDesc;
class activitycircusDancircusDesc;
class activitycircusDan;
class Sheet_activitycircusDan;
class activitymathrule;
class Sheet_activitymathrule;
class activitymathrewardrewardDesc;
class activitymathreward;
class Sheet_activitymathreward;
class activitygvgConst;
class Sheet_activitygvgConst;
class activitygvgRankRewardgMemberrewardDesc;
class activitygvgRankRewardgLeaderrewardDesc;
class activitygvgRankReward;
class Sheet_activitygvgRankReward;
class activitygvgRewardrewardDesc;
class activitygvgRewardfinalityDesc;
class activitygvgReward;
class Sheet_activitygvgReward;
class activityworldTreasureConst;
class Sheet_activityworldTreasureConst;
class activityworldTreasureMap;
class Sheet_activityworldTreasureMap;
class activityworldTreasureMonster;
class Sheet_activityworldTreasureMonster;
class activitylosttempleConstant;
class Sheet_activitylosttempleConstant;

// ===================================================================

class activitydaily : public ::google::protobuf::Message {
 public:
  activitydaily();
  virtual ~activitydaily();

  activitydaily(const activitydaily& from);

  inline activitydaily& operator=(const activitydaily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitydaily& default_instance();

  void Swap(activitydaily* other);

  // implements Message ----------------------------------------------

  activitydaily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitydaily& from);
  void MergeFrom(const activitydaily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::int64 activeid() const;
  inline void set_activeid(::google::protobuf::int64 value);

  // optional string activeName = 2;
  inline bool has_activename() const;
  inline void clear_activename();
  static const int kActiveNameFieldNumber = 2;
  inline const ::std::string& activename() const;
  inline void set_activename(const ::std::string& value);
  inline void set_activename(const char* value);
  inline void set_activename(const char* value, size_t size);
  inline ::std::string* mutable_activename();
  inline ::std::string* release_activename();
  inline void set_allocated_activename(::std::string* activename);

  // optional int32 typeId = 3;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIdFieldNumber = 3;
  inline ::google::protobuf::int32 typeid_() const;
  inline void set_typeid_(::google::protobuf::int32 value);

  // optional int32 Descriptiontype = 4;
  inline bool has_descriptiontype() const;
  inline void clear_descriptiontype();
  static const int kDescriptiontypeFieldNumber = 4;
  inline ::google::protobuf::int32 descriptiontype() const;
  inline void set_descriptiontype(::google::protobuf::int32 value);

  // optional int64 typeArgs = 5;
  inline bool has_typeargs() const;
  inline void clear_typeargs();
  static const int kTypeArgsFieldNumber = 5;
  inline ::google::protobuf::int64 typeargs() const;
  inline void set_typeargs(::google::protobuf::int64 value);

  // optional string involveMap = 6;
  inline bool has_involvemap() const;
  inline void clear_involvemap();
  static const int kInvolveMapFieldNumber = 6;
  inline const ::std::string& involvemap() const;
  inline void set_involvemap(const ::std::string& value);
  inline void set_involvemap(const char* value);
  inline void set_involvemap(const char* value, size_t size);
  inline ::std::string* mutable_involvemap();
  inline ::std::string* release_involvemap();
  inline void set_allocated_involvemap(::std::string* involvemap);

  // optional int32 minlevel = 7;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinlevelFieldNumber = 7;
  inline ::google::protobuf::int32 minlevel() const;
  inline void set_minlevel(::google::protobuf::int32 value);

  // optional string openCycle = 8;
  inline bool has_opencycle() const;
  inline void clear_opencycle();
  static const int kOpenCycleFieldNumber = 8;
  inline const ::std::string& opencycle() const;
  inline void set_opencycle(const ::std::string& value);
  inline void set_opencycle(const char* value);
  inline void set_opencycle(const char* value, size_t size);
  inline ::std::string* mutable_opencycle();
  inline ::std::string* release_opencycle();
  inline void set_allocated_opencycle(::std::string* opencycle);

  // optional string openTime = 9;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpenTimeFieldNumber = 9;
  inline const ::std::string& opentime() const;
  inline void set_opentime(const ::std::string& value);
  inline void set_opentime(const char* value);
  inline void set_opentime(const char* value, size_t size);
  inline ::std::string* mutable_opentime();
  inline ::std::string* release_opentime();
  inline void set_allocated_opentime(::std::string* opentime);

  // optional string pushTime = 10;
  inline bool has_pushtime() const;
  inline void clear_pushtime();
  static const int kPushTimeFieldNumber = 10;
  inline const ::std::string& pushtime() const;
  inline void set_pushtime(const ::std::string& value);
  inline void set_pushtime(const char* value);
  inline void set_pushtime(const char* value, size_t size);
  inline ::std::string* mutable_pushtime();
  inline ::std::string* release_pushtime();
  inline void set_allocated_pushtime(::std::string* pushtime);

  // optional int32 openingTime = 11;
  inline bool has_openingtime() const;
  inline void clear_openingtime();
  static const int kOpeningTimeFieldNumber = 11;
  inline ::google::protobuf::int32 openingtime() const;
  inline void set_openingtime(::google::protobuf::int32 value);

  // optional int32 advanceTime = 12;
  inline bool has_advancetime() const;
  inline void clear_advancetime();
  static const int kAdvanceTimeFieldNumber = 12;
  inline ::google::protobuf::int32 advancetime() const;
  inline void set_advancetime(::google::protobuf::int32 value);

  // optional int32 intervalTime = 13;
  inline bool has_intervaltime() const;
  inline void clear_intervaltime();
  static const int kIntervalTimeFieldNumber = 13;
  inline ::google::protobuf::int32 intervaltime() const;
  inline void set_intervaltime(::google::protobuf::int32 value);

  // optional string opeDay = 14;
  inline bool has_opeday() const;
  inline void clear_opeday();
  static const int kOpeDayFieldNumber = 14;
  inline const ::std::string& opeday() const;
  inline void set_opeday(const ::std::string& value);
  inline void set_opeday(const char* value);
  inline void set_opeday(const char* value, size_t size);
  inline ::std::string* mutable_opeday();
  inline ::std::string* release_opeday();
  inline void set_allocated_opeday(::std::string* opeday);

  // optional string closeDay = 15;
  inline bool has_closeday() const;
  inline void clear_closeday();
  static const int kCloseDayFieldNumber = 15;
  inline const ::std::string& closeday() const;
  inline void set_closeday(const ::std::string& value);
  inline void set_closeday(const char* value);
  inline void set_closeday(const char* value, size_t size);
  inline ::std::string* mutable_closeday();
  inline ::std::string* release_closeday();
  inline void set_allocated_closeday(::std::string* closeday);

  // optional int32 isCross = 16;
  inline bool has_iscross() const;
  inline void clear_iscross();
  static const int kIsCrossFieldNumber = 16;
  inline ::google::protobuf::int32 iscross() const;
  inline void set_iscross(::google::protobuf::int32 value);

  // optional int32 serverTime = 17;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 17;
  inline ::google::protobuf::int32 servertime() const;
  inline void set_servertime(::google::protobuf::int32 value);

  // optional int32 serverdelayTime = 18;
  inline bool has_serverdelaytime() const;
  inline void clear_serverdelaytime();
  static const int kServerdelayTimeFieldNumber = 18;
  inline ::google::protobuf::int32 serverdelaytime() const;
  inline void set_serverdelaytime(::google::protobuf::int32 value);

  // optional int32 forwordEnterTime = 19;
  inline bool has_forwordentertime() const;
  inline void clear_forwordentertime();
  static const int kForwordEnterTimeFieldNumber = 19;
  inline ::google::protobuf::int32 forwordentertime() const;
  inline void set_forwordentertime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitydaily)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_activename();
  inline void clear_has_activename();
  inline void set_has_typeid_();
  inline void clear_has_typeid_();
  inline void set_has_descriptiontype();
  inline void clear_has_descriptiontype();
  inline void set_has_typeargs();
  inline void clear_has_typeargs();
  inline void set_has_involvemap();
  inline void clear_has_involvemap();
  inline void set_has_minlevel();
  inline void clear_has_minlevel();
  inline void set_has_opencycle();
  inline void clear_has_opencycle();
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_pushtime();
  inline void clear_has_pushtime();
  inline void set_has_openingtime();
  inline void clear_has_openingtime();
  inline void set_has_advancetime();
  inline void clear_has_advancetime();
  inline void set_has_intervaltime();
  inline void clear_has_intervaltime();
  inline void set_has_opeday();
  inline void clear_has_opeday();
  inline void set_has_closeday();
  inline void clear_has_closeday();
  inline void set_has_iscross();
  inline void clear_has_iscross();
  inline void set_has_servertime();
  inline void clear_has_servertime();
  inline void set_has_serverdelaytime();
  inline void clear_has_serverdelaytime();
  inline void set_has_forwordentertime();
  inline void clear_has_forwordentertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 activeid_;
  ::std::string* activename_;
  ::google::protobuf::int32 typeid__;
  ::google::protobuf::int32 descriptiontype_;
  ::google::protobuf::int64 typeargs_;
  ::std::string* involvemap_;
  ::std::string* opencycle_;
  ::std::string* opentime_;
  ::google::protobuf::int32 minlevel_;
  ::google::protobuf::int32 openingtime_;
  ::std::string* pushtime_;
  ::google::protobuf::int32 advancetime_;
  ::google::protobuf::int32 intervaltime_;
  ::std::string* opeday_;
  ::std::string* closeday_;
  ::google::protobuf::int32 iscross_;
  ::google::protobuf::int32 servertime_;
  ::google::protobuf::int32 serverdelaytime_;
  ::google::protobuf::int32 forwordentertime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitydaily* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitydaily : public ::google::protobuf::Message {
 public:
  Sheet_activitydaily();
  virtual ~Sheet_activitydaily();

  Sheet_activitydaily(const Sheet_activitydaily& from);

  inline Sheet_activitydaily& operator=(const Sheet_activitydaily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitydaily& default_instance();

  void Swap(Sheet_activitydaily* other);

  // implements Message ----------------------------------------------

  Sheet_activitydaily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitydaily& from);
  void MergeFrom(const Sheet_activitydaily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitydaily activitydaily_List = 1;
  inline int activitydaily_list_size() const;
  inline void clear_activitydaily_list();
  static const int kActivitydailyListFieldNumber = 1;
  inline const ::proto_ff::activitydaily& activitydaily_list(int index) const;
  inline ::proto_ff::activitydaily* mutable_activitydaily_list(int index);
  inline ::proto_ff::activitydaily* add_activitydaily_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitydaily >&
      activitydaily_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitydaily >*
      mutable_activitydaily_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitydaily)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitydaily > activitydaily_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitydaily* default_instance_;
};
// -------------------------------------------------------------------

class activityactivitynotice : public ::google::protobuf::Message {
 public:
  activityactivitynotice();
  virtual ~activityactivitynotice();

  activityactivitynotice(const activityactivitynotice& from);

  inline activityactivitynotice& operator=(const activityactivitynotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activityactivitynotice& default_instance();

  void Swap(activityactivitynotice* other);

  // implements Message ----------------------------------------------

  activityactivitynotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activityactivitynotice& from);
  void MergeFrom(const activityactivitynotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::int64 activeid() const;
  inline void set_activeid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activityactivitynotice)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 activeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activityactivitynotice* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activityactivitynotice : public ::google::protobuf::Message {
 public:
  Sheet_activityactivitynotice();
  virtual ~Sheet_activityactivitynotice();

  Sheet_activityactivitynotice(const Sheet_activityactivitynotice& from);

  inline Sheet_activityactivitynotice& operator=(const Sheet_activityactivitynotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activityactivitynotice& default_instance();

  void Swap(Sheet_activityactivitynotice* other);

  // implements Message ----------------------------------------------

  Sheet_activityactivitynotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activityactivitynotice& from);
  void MergeFrom(const Sheet_activityactivitynotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activityactivitynotice activityactivitynotice_List = 1;
  inline int activityactivitynotice_list_size() const;
  inline void clear_activityactivitynotice_list();
  static const int kActivityactivitynoticeListFieldNumber = 1;
  inline const ::proto_ff::activityactivitynotice& activityactivitynotice_list(int index) const;
  inline ::proto_ff::activityactivitynotice* mutable_activityactivitynotice_list(int index);
  inline ::proto_ff::activityactivitynotice* add_activityactivitynotice_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityactivitynotice >&
      activityactivitynotice_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityactivitynotice >*
      mutable_activityactivitynotice_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activityactivitynotice)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activityactivitynotice > activityactivitynotice_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activityactivitynotice* default_instance_;
};
// -------------------------------------------------------------------

class activityscufflerewardDesc : public ::google::protobuf::Message {
 public:
  activityscufflerewardDesc();
  virtual ~activityscufflerewardDesc();

  activityscufflerewardDesc(const activityscufflerewardDesc& from);

  inline activityscufflerewardDesc& operator=(const activityscufflerewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activityscufflerewardDesc& default_instance();

  void Swap(activityscufflerewardDesc* other);

  // implements Message ----------------------------------------------

  activityscufflerewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activityscufflerewardDesc& from);
  void MergeFrom(const activityscufflerewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // optional int64 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activityscufflerewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 num_;
  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activityscufflerewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class activityscuffle : public ::google::protobuf::Message {
 public:
  activityscuffle();
  virtual ~activityscuffle();

  activityscuffle(const activityscuffle& from);

  inline activityscuffle& operator=(const activityscuffle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activityscuffle& default_instance();

  void Swap(activityscuffle* other);

  // implements Message ----------------------------------------------

  activityscuffle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activityscuffle& from);
  void MergeFrom(const activityscuffle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 typeArgs = 2;
  inline bool has_typeargs() const;
  inline void clear_typeargs();
  static const int kTypeArgsFieldNumber = 2;
  inline ::google::protobuf::int32 typeargs() const;
  inline void set_typeargs(::google::protobuf::int32 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 stage = 4;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 4;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int64 mapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // optional int64 nextID = 6;
  inline bool has_nextid() const;
  inline void clear_nextid();
  static const int kNextIDFieldNumber = 6;
  inline ::google::protobuf::int64 nextid() const;
  inline void set_nextid(::google::protobuf::int64 value);

  // optional int32 maxPoints = 7;
  inline bool has_maxpoints() const;
  inline void clear_maxpoints();
  static const int kMaxPointsFieldNumber = 7;
  inline ::google::protobuf::int32 maxpoints() const;
  inline void set_maxpoints(::google::protobuf::int32 value);

  // optional int32 pvePoints = 8;
  inline bool has_pvepoints() const;
  inline void clear_pvepoints();
  static const int kPvePointsFieldNumber = 8;
  inline ::google::protobuf::int32 pvepoints() const;
  inline void set_pvepoints(::google::protobuf::int32 value);

  // optional int32 pvpPoints = 9;
  inline bool has_pvppoints() const;
  inline void clear_pvppoints();
  static const int kPvpPointsFieldNumber = 9;
  inline ::google::protobuf::int32 pvppoints() const;
  inline void set_pvppoints(::google::protobuf::int32 value);

  // optional int32 pvpHelpPoints = 10;
  inline bool has_pvphelppoints() const;
  inline void clear_pvphelppoints();
  static const int kPvpHelpPointsFieldNumber = 10;
  inline ::google::protobuf::int32 pvphelppoints() const;
  inline void set_pvphelppoints(::google::protobuf::int32 value);

  // repeated .proto_ff.activityscufflerewardDesc reward = 11;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 11;
  inline const ::proto_ff::activityscufflerewardDesc& reward(int index) const;
  inline ::proto_ff::activityscufflerewardDesc* mutable_reward(int index);
  inline ::proto_ff::activityscufflerewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscufflerewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscufflerewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.activityscuffle)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_typeargs();
  inline void clear_has_typeargs();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_nextid();
  inline void clear_has_nextid();
  inline void set_has_maxpoints();
  inline void clear_has_maxpoints();
  inline void set_has_pvepoints();
  inline void clear_has_pvepoints();
  inline void set_has_pvppoints();
  inline void clear_has_pvppoints();
  inline void set_has_pvphelppoints();
  inline void clear_has_pvphelppoints();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 typeargs_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 mapid_;
  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 maxpoints_;
  ::google::protobuf::int64 nextid_;
  ::google::protobuf::int32 pvepoints_;
  ::google::protobuf::int32 pvppoints_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscufflerewardDesc > reward_;
  ::google::protobuf::int32 pvphelppoints_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activityscuffle* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activityscuffle : public ::google::protobuf::Message {
 public:
  Sheet_activityscuffle();
  virtual ~Sheet_activityscuffle();

  Sheet_activityscuffle(const Sheet_activityscuffle& from);

  inline Sheet_activityscuffle& operator=(const Sheet_activityscuffle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activityscuffle& default_instance();

  void Swap(Sheet_activityscuffle* other);

  // implements Message ----------------------------------------------

  Sheet_activityscuffle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activityscuffle& from);
  void MergeFrom(const Sheet_activityscuffle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activityscuffle activityscuffle_List = 1;
  inline int activityscuffle_list_size() const;
  inline void clear_activityscuffle_list();
  static const int kActivityscuffleListFieldNumber = 1;
  inline const ::proto_ff::activityscuffle& activityscuffle_list(int index) const;
  inline ::proto_ff::activityscuffle* mutable_activityscuffle_list(int index);
  inline ::proto_ff::activityscuffle* add_activityscuffle_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscuffle >&
      activityscuffle_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscuffle >*
      mutable_activityscuffle_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activityscuffle)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscuffle > activityscuffle_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activityscuffle* default_instance_;
};
// -------------------------------------------------------------------

class activitychaosDragonsrewardDesc : public ::google::protobuf::Message {
 public:
  activitychaosDragonsrewardDesc();
  virtual ~activitychaosDragonsrewardDesc();

  activitychaosDragonsrewardDesc(const activitychaosDragonsrewardDesc& from);

  inline activitychaosDragonsrewardDesc& operator=(const activitychaosDragonsrewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitychaosDragonsrewardDesc& default_instance();

  void Swap(activitychaosDragonsrewardDesc* other);

  // implements Message ----------------------------------------------

  activitychaosDragonsrewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitychaosDragonsrewardDesc& from);
  void MergeFrom(const activitychaosDragonsrewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // optional int64 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitychaosDragonsrewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 num_;
  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitychaosDragonsrewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitychaosDragons : public ::google::protobuf::Message {
 public:
  activitychaosDragons();
  virtual ~activitychaosDragons();

  activitychaosDragons(const activitychaosDragons& from);

  inline activitychaosDragons& operator=(const activitychaosDragons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitychaosDragons& default_instance();

  void Swap(activitychaosDragons* other);

  // implements Message ----------------------------------------------

  activitychaosDragons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitychaosDragons& from);
  void MergeFrom(const activitychaosDragons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::google::protobuf::int32 reward_type() const;
  inline void set_reward_type(::google::protobuf::int32 value);

  // optional int32 reward_param = 3;
  inline bool has_reward_param() const;
  inline void clear_reward_param();
  static const int kRewardParamFieldNumber = 3;
  inline ::google::protobuf::int32 reward_param() const;
  inline void set_reward_param(::google::protobuf::int32 value);

  // optional int32 rankmin = 4;
  inline bool has_rankmin() const;
  inline void clear_rankmin();
  static const int kRankminFieldNumber = 4;
  inline ::google::protobuf::int32 rankmin() const;
  inline void set_rankmin(::google::protobuf::int32 value);

  // optional int32 rankmax = 5;
  inline bool has_rankmax() const;
  inline void clear_rankmax();
  static const int kRankmaxFieldNumber = 5;
  inline ::google::protobuf::int32 rankmax() const;
  inline void set_rankmax(::google::protobuf::int32 value);

  // optional int64 getPoint = 6;
  inline bool has_getpoint() const;
  inline void clear_getpoint();
  static const int kGetPointFieldNumber = 6;
  inline ::google::protobuf::int64 getpoint() const;
  inline void set_getpoint(::google::protobuf::int64 value);

  // repeated .proto_ff.activitychaosDragonsrewardDesc reward = 7;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 7;
  inline const ::proto_ff::activitychaosDragonsrewardDesc& reward(int index) const;
  inline ::proto_ff::activitychaosDragonsrewardDesc* mutable_reward(int index);
  inline ::proto_ff::activitychaosDragonsrewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragonsrewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragonsrewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.activitychaosDragons)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_reward_param();
  inline void clear_has_reward_param();
  inline void set_has_rankmin();
  inline void clear_has_rankmin();
  inline void set_has_rankmax();
  inline void clear_has_rankmax();
  inline void set_has_getpoint();
  inline void clear_has_getpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 reward_type_;
  ::google::protobuf::int32 reward_param_;
  ::google::protobuf::int32 rankmin_;
  ::google::protobuf::int64 getpoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragonsrewardDesc > reward_;
  ::google::protobuf::int32 rankmax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitychaosDragons* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitychaosDragons : public ::google::protobuf::Message {
 public:
  Sheet_activitychaosDragons();
  virtual ~Sheet_activitychaosDragons();

  Sheet_activitychaosDragons(const Sheet_activitychaosDragons& from);

  inline Sheet_activitychaosDragons& operator=(const Sheet_activitychaosDragons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitychaosDragons& default_instance();

  void Swap(Sheet_activitychaosDragons* other);

  // implements Message ----------------------------------------------

  Sheet_activitychaosDragons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitychaosDragons& from);
  void MergeFrom(const Sheet_activitychaosDragons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitychaosDragons activitychaosDragons_List = 1;
  inline int activitychaosdragons_list_size() const;
  inline void clear_activitychaosdragons_list();
  static const int kActivitychaosDragonsListFieldNumber = 1;
  inline const ::proto_ff::activitychaosDragons& activitychaosdragons_list(int index) const;
  inline ::proto_ff::activitychaosDragons* mutable_activitychaosdragons_list(int index);
  inline ::proto_ff::activitychaosDragons* add_activitychaosdragons_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragons >&
      activitychaosdragons_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragons >*
      mutable_activitychaosdragons_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitychaosDragons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragons > activitychaosdragons_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitychaosDragons* default_instance_;
};
// -------------------------------------------------------------------

class activitycircuscircusDesc : public ::google::protobuf::Message {
 public:
  activitycircuscircusDesc();
  virtual ~activitycircuscircusDesc();

  activitycircuscircusDesc(const activitycircuscircusDesc& from);

  inline activitycircuscircusDesc& operator=(const activitycircuscircusDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircuscircusDesc& default_instance();

  void Swap(activitycircuscircusDesc* other);

  // implements Message ----------------------------------------------

  activitycircuscircusDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircuscircusDesc& from);
  void MergeFrom(const activitycircuscircusDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 a = 1;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 1;
  inline ::google::protobuf::int32 a() const;
  inline void set_a(::google::protobuf::int32 value);

  // optional int64 b = 2;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 2;
  inline ::google::protobuf::int64 b() const;
  inline void set_b(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircuscircusDesc)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 b_;
  ::google::protobuf::int32 a_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircuscircusDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitycircus : public ::google::protobuf::Message {
 public:
  activitycircus();
  virtual ~activitycircus();

  activitycircus(const activitycircus& from);

  inline activitycircus& operator=(const activitycircus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircus& default_instance();

  void Swap(activitycircus* other);

  // implements Message ----------------------------------------------

  activitycircus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircus& from);
  void MergeFrom(const activitycircus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 circusID = 1;
  inline bool has_circusid() const;
  inline void clear_circusid();
  static const int kCircusIDFieldNumber = 1;
  inline ::google::protobuf::int64 circusid() const;
  inline void set_circusid(::google::protobuf::int64 value);

  // optional int64 powerLow = 2;
  inline bool has_powerlow() const;
  inline void clear_powerlow();
  static const int kPowerLowFieldNumber = 2;
  inline ::google::protobuf::int64 powerlow() const;
  inline void set_powerlow(::google::protobuf::int64 value);

  // optional int64 powerUp = 3;
  inline bool has_powerup() const;
  inline void clear_powerup();
  static const int kPowerUpFieldNumber = 3;
  inline ::google::protobuf::int64 powerup() const;
  inline void set_powerup(::google::protobuf::int64 value);

  // repeated .proto_ff.activitycircuscircusDesc circus = 4;
  inline int circus_size() const;
  inline void clear_circus();
  static const int kCircusFieldNumber = 4;
  inline const ::proto_ff::activitycircuscircusDesc& circus(int index) const;
  inline ::proto_ff::activitycircuscircusDesc* mutable_circus(int index);
  inline ::proto_ff::activitycircuscircusDesc* add_circus();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircuscircusDesc >&
      circus() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircuscircusDesc >*
      mutable_circus();

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircus)
 private:
  inline void set_has_circusid();
  inline void clear_has_circusid();
  inline void set_has_powerlow();
  inline void clear_has_powerlow();
  inline void set_has_powerup();
  inline void clear_has_powerup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 circusid_;
  ::google::protobuf::int64 powerlow_;
  ::google::protobuf::int64 powerup_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircuscircusDesc > circus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircus* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitycircus : public ::google::protobuf::Message {
 public:
  Sheet_activitycircus();
  virtual ~Sheet_activitycircus();

  Sheet_activitycircus(const Sheet_activitycircus& from);

  inline Sheet_activitycircus& operator=(const Sheet_activitycircus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitycircus& default_instance();

  void Swap(Sheet_activitycircus* other);

  // implements Message ----------------------------------------------

  Sheet_activitycircus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitycircus& from);
  void MergeFrom(const Sheet_activitycircus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitycircus activitycircus_List = 1;
  inline int activitycircus_list_size() const;
  inline void clear_activitycircus_list();
  static const int kActivitycircusListFieldNumber = 1;
  inline const ::proto_ff::activitycircus& activitycircus_list(int index) const;
  inline ::proto_ff::activitycircus* mutable_activitycircus_list(int index);
  inline ::proto_ff::activitycircus* add_activitycircus_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircus >&
      activitycircus_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircus >*
      mutable_activitycircus_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitycircus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircus > activitycircus_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitycircus* default_instance_;
};
// -------------------------------------------------------------------

class activitycircusNumitemDesc : public ::google::protobuf::Message {
 public:
  activitycircusNumitemDesc();
  virtual ~activitycircusNumitemDesc();

  activitycircusNumitemDesc(const activitycircusNumitemDesc& from);

  inline activitycircusNumitemDesc& operator=(const activitycircusNumitemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircusNumitemDesc& default_instance();

  void Swap(activitycircusNumitemDesc* other);

  // implements Message ----------------------------------------------

  activitycircusNumitemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircusNumitemDesc& from);
  void MergeFrom(const activitycircusNumitemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircusNumitemDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircusNumitemDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitycircusNum : public ::google::protobuf::Message {
 public:
  activitycircusNum();
  virtual ~activitycircusNum();

  activitycircusNum(const activitycircusNum& from);

  inline activitycircusNum& operator=(const activitycircusNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircusNum& default_instance();

  void Swap(activitycircusNum* other);

  // implements Message ----------------------------------------------

  activitycircusNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircusNum& from);
  void MergeFrom(const activitycircusNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RankID = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIDFieldNumber = 1;
  inline ::google::protobuf::int32 rankid() const;
  inline void set_rankid(::google::protobuf::int32 value);

  // repeated .proto_ff.activitycircusNumitemDesc item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::proto_ff::activitycircusNumitemDesc& item(int index) const;
  inline ::proto_ff::activitycircusNumitemDesc* mutable_item(int index);
  inline ::proto_ff::activitycircusNumitemDesc* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNumitemDesc >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNumitemDesc >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircusNum)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNumitemDesc > item_;
  ::google::protobuf::int32 rankid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircusNum* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitycircusNum : public ::google::protobuf::Message {
 public:
  Sheet_activitycircusNum();
  virtual ~Sheet_activitycircusNum();

  Sheet_activitycircusNum(const Sheet_activitycircusNum& from);

  inline Sheet_activitycircusNum& operator=(const Sheet_activitycircusNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitycircusNum& default_instance();

  void Swap(Sheet_activitycircusNum* other);

  // implements Message ----------------------------------------------

  Sheet_activitycircusNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitycircusNum& from);
  void MergeFrom(const Sheet_activitycircusNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitycircusNum activitycircusNum_List = 1;
  inline int activitycircusnum_list_size() const;
  inline void clear_activitycircusnum_list();
  static const int kActivitycircusNumListFieldNumber = 1;
  inline const ::proto_ff::activitycircusNum& activitycircusnum_list(int index) const;
  inline ::proto_ff::activitycircusNum* mutable_activitycircusnum_list(int index);
  inline ::proto_ff::activitycircusNum* add_activitycircusnum_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNum >&
      activitycircusnum_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNum >*
      mutable_activitycircusnum_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitycircusNum)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNum > activitycircusnum_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitycircusNum* default_instance_;
};
// -------------------------------------------------------------------

class activitycircusDanitemDesc : public ::google::protobuf::Message {
 public:
  activitycircusDanitemDesc();
  virtual ~activitycircusDanitemDesc();

  activitycircusDanitemDesc(const activitycircusDanitemDesc& from);

  inline activitycircusDanitemDesc& operator=(const activitycircusDanitemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircusDanitemDesc& default_instance();

  void Swap(activitycircusDanitemDesc* other);

  // implements Message ----------------------------------------------

  activitycircusDanitemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircusDanitemDesc& from);
  void MergeFrom(const activitycircusDanitemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircusDanitemDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircusDanitemDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitycircusDancircusDesc : public ::google::protobuf::Message {
 public:
  activitycircusDancircusDesc();
  virtual ~activitycircusDancircusDesc();

  activitycircusDancircusDesc(const activitycircusDancircusDesc& from);

  inline activitycircusDancircusDesc& operator=(const activitycircusDancircusDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircusDancircusDesc& default_instance();

  void Swap(activitycircusDancircusDesc* other);

  // implements Message ----------------------------------------------

  activitycircusDancircusDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircusDancircusDesc& from);
  void MergeFrom(const activitycircusDancircusDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircusDancircusDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircusDancircusDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitycircusDan : public ::google::protobuf::Message {
 public:
  activitycircusDan();
  virtual ~activitycircusDan();

  activitycircusDan(const activitycircusDan& from);

  inline activitycircusDan& operator=(const activitycircusDan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitycircusDan& default_instance();

  void Swap(activitycircusDan* other);

  // implements Message ----------------------------------------------

  activitycircusDan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitycircusDan& from);
  void MergeFrom(const activitycircusDan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 changCiID = 1;
  inline bool has_changciid() const;
  inline void clear_changciid();
  static const int kChangCiIDFieldNumber = 1;
  inline ::google::protobuf::int32 changciid() const;
  inline void set_changciid(::google::protobuf::int32 value);

  // repeated .proto_ff.activitycircusDanitemDesc item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::proto_ff::activitycircusDanitemDesc& item(int index) const;
  inline ::proto_ff::activitycircusDanitemDesc* mutable_item(int index);
  inline ::proto_ff::activitycircusDanitemDesc* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDanitemDesc >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDanitemDesc >*
      mutable_item();

  // repeated .proto_ff.activitycircusDancircusDesc circus = 3;
  inline int circus_size() const;
  inline void clear_circus();
  static const int kCircusFieldNumber = 3;
  inline const ::proto_ff::activitycircusDancircusDesc& circus(int index) const;
  inline ::proto_ff::activitycircusDancircusDesc* mutable_circus(int index);
  inline ::proto_ff::activitycircusDancircusDesc* add_circus();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDancircusDesc >&
      circus() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDancircusDesc >*
      mutable_circus();

  // @@protoc_insertion_point(class_scope:proto_ff.activitycircusDan)
 private:
  inline void set_has_changciid();
  inline void clear_has_changciid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDanitemDesc > item_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDancircusDesc > circus_;
  ::google::protobuf::int32 changciid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitycircusDan* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitycircusDan : public ::google::protobuf::Message {
 public:
  Sheet_activitycircusDan();
  virtual ~Sheet_activitycircusDan();

  Sheet_activitycircusDan(const Sheet_activitycircusDan& from);

  inline Sheet_activitycircusDan& operator=(const Sheet_activitycircusDan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitycircusDan& default_instance();

  void Swap(Sheet_activitycircusDan* other);

  // implements Message ----------------------------------------------

  Sheet_activitycircusDan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitycircusDan& from);
  void MergeFrom(const Sheet_activitycircusDan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitycircusDan activitycircusDan_List = 1;
  inline int activitycircusdan_list_size() const;
  inline void clear_activitycircusdan_list();
  static const int kActivitycircusDanListFieldNumber = 1;
  inline const ::proto_ff::activitycircusDan& activitycircusdan_list(int index) const;
  inline ::proto_ff::activitycircusDan* mutable_activitycircusdan_list(int index);
  inline ::proto_ff::activitycircusDan* add_activitycircusdan_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDan >&
      activitycircusdan_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDan >*
      mutable_activitycircusdan_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitycircusDan)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDan > activitycircusdan_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitycircusDan* default_instance_;
};
// -------------------------------------------------------------------

class activitymathrule : public ::google::protobuf::Message {
 public:
  activitymathrule();
  virtual ~activitymathrule();

  activitymathrule(const activitymathrule& from);

  inline activitymathrule& operator=(const activitymathrule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitymathrule& default_instance();

  void Swap(activitymathrule* other);

  // implements Message ----------------------------------------------

  activitymathrule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitymathrule& from);
  void MergeFrom(const activitymathrule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::int64 activeid() const;
  inline void set_activeid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 mapId = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // optional int64 duplicateId = 4;
  inline bool has_duplicateid() const;
  inline void clear_duplicateid();
  static const int kDuplicateIdFieldNumber = 4;
  inline ::google::protobuf::int64 duplicateid() const;
  inline void set_duplicateid(::google::protobuf::int64 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 winnerPoints = 6;
  inline bool has_winnerpoints() const;
  inline void clear_winnerpoints();
  static const int kWinnerPointsFieldNumber = 6;
  inline ::google::protobuf::int32 winnerpoints() const;
  inline void set_winnerpoints(::google::protobuf::int32 value);

  // optional int32 loserPoints = 7;
  inline bool has_loserpoints() const;
  inline void clear_loserpoints();
  static const int kLoserPointsFieldNumber = 7;
  inline ::google::protobuf::int32 loserpoints() const;
  inline void set_loserpoints(::google::protobuf::int32 value);

  // optional int32 drawPoints = 8;
  inline bool has_drawpoints() const;
  inline void clear_drawpoints();
  static const int kDrawPointsFieldNumber = 8;
  inline ::google::protobuf::int32 drawpoints() const;
  inline void set_drawpoints(::google::protobuf::int32 value);

  // optional int32 rewardtype = 9;
  inline bool has_rewardtype() const;
  inline void clear_rewardtype();
  static const int kRewardtypeFieldNumber = 9;
  inline ::google::protobuf::int32 rewardtype() const;
  inline void set_rewardtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitymathrule)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_duplicateid();
  inline void clear_has_duplicateid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_winnerpoints();
  inline void clear_has_winnerpoints();
  inline void set_has_loserpoints();
  inline void clear_has_loserpoints();
  inline void set_has_drawpoints();
  inline void clear_has_drawpoints();
  inline void set_has_rewardtype();
  inline void clear_has_rewardtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 activeid_;
  ::google::protobuf::int64 mapid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int64 duplicateid_;
  ::google::protobuf::int32 winnerpoints_;
  ::google::protobuf::int32 loserpoints_;
  ::google::protobuf::int32 drawpoints_;
  ::google::protobuf::int32 rewardtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitymathrule* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitymathrule : public ::google::protobuf::Message {
 public:
  Sheet_activitymathrule();
  virtual ~Sheet_activitymathrule();

  Sheet_activitymathrule(const Sheet_activitymathrule& from);

  inline Sheet_activitymathrule& operator=(const Sheet_activitymathrule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitymathrule& default_instance();

  void Swap(Sheet_activitymathrule* other);

  // implements Message ----------------------------------------------

  Sheet_activitymathrule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitymathrule& from);
  void MergeFrom(const Sheet_activitymathrule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitymathrule activitymathrule_List = 1;
  inline int activitymathrule_list_size() const;
  inline void clear_activitymathrule_list();
  static const int kActivitymathruleListFieldNumber = 1;
  inline const ::proto_ff::activitymathrule& activitymathrule_list(int index) const;
  inline ::proto_ff::activitymathrule* mutable_activitymathrule_list(int index);
  inline ::proto_ff::activitymathrule* add_activitymathrule_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrule >&
      activitymathrule_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrule >*
      mutable_activitymathrule_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitymathrule)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrule > activitymathrule_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitymathrule* default_instance_;
};
// -------------------------------------------------------------------

class activitymathrewardrewardDesc : public ::google::protobuf::Message {
 public:
  activitymathrewardrewardDesc();
  virtual ~activitymathrewardrewardDesc();

  activitymathrewardrewardDesc(const activitymathrewardrewardDesc& from);

  inline activitymathrewardrewardDesc& operator=(const activitymathrewardrewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitymathrewardrewardDesc& default_instance();

  void Swap(activitymathrewardrewardDesc* other);

  // implements Message ----------------------------------------------

  activitymathrewardrewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitymathrewardrewardDesc& from);
  void MergeFrom(const activitymathrewardrewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitymathrewardrewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitymathrewardrewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitymathreward : public ::google::protobuf::Message {
 public:
  activitymathreward();
  virtual ~activitymathreward();

  activitymathreward(const activitymathreward& from);

  inline activitymathreward& operator=(const activitymathreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitymathreward& default_instance();

  void Swap(activitymathreward* other);

  // implements Message ----------------------------------------------

  activitymathreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitymathreward& from);
  void MergeFrom(const activitymathreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 rewardtype = 2;
  inline bool has_rewardtype() const;
  inline void clear_rewardtype();
  static const int kRewardtypeFieldNumber = 2;
  inline ::google::protobuf::int32 rewardtype() const;
  inline void set_rewardtype(::google::protobuf::int32 value);

  // optional int32 rewardlevel = 3;
  inline bool has_rewardlevel() const;
  inline void clear_rewardlevel();
  static const int kRewardlevelFieldNumber = 3;
  inline ::google::protobuf::int32 rewardlevel() const;
  inline void set_rewardlevel(::google::protobuf::int32 value);

  // repeated .proto_ff.activitymathrewardrewardDesc reward = 4;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::proto_ff::activitymathrewardrewardDesc& reward(int index) const;
  inline ::proto_ff::activitymathrewardrewardDesc* mutable_reward(int index);
  inline ::proto_ff::activitymathrewardrewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrewardrewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrewardrewardDesc >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.activitymathreward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rewardtype();
  inline void clear_has_rewardtype();
  inline void set_has_rewardlevel();
  inline void clear_has_rewardlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 rewardtype_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrewardrewardDesc > reward_;
  ::google::protobuf::int32 rewardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitymathreward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitymathreward : public ::google::protobuf::Message {
 public:
  Sheet_activitymathreward();
  virtual ~Sheet_activitymathreward();

  Sheet_activitymathreward(const Sheet_activitymathreward& from);

  inline Sheet_activitymathreward& operator=(const Sheet_activitymathreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitymathreward& default_instance();

  void Swap(Sheet_activitymathreward* other);

  // implements Message ----------------------------------------------

  Sheet_activitymathreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitymathreward& from);
  void MergeFrom(const Sheet_activitymathreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitymathreward activitymathreward_List = 1;
  inline int activitymathreward_list_size() const;
  inline void clear_activitymathreward_list();
  static const int kActivitymathrewardListFieldNumber = 1;
  inline const ::proto_ff::activitymathreward& activitymathreward_list(int index) const;
  inline ::proto_ff::activitymathreward* mutable_activitymathreward_list(int index);
  inline ::proto_ff::activitymathreward* add_activitymathreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathreward >&
      activitymathreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathreward >*
      mutable_activitymathreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitymathreward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathreward > activitymathreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitymathreward* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgConst : public ::google::protobuf::Message {
 public:
  activitygvgConst();
  virtual ~activitygvgConst();

  activitygvgConst(const activitygvgConst& from);

  inline activitygvgConst& operator=(const activitygvgConst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgConst& default_instance();

  void Swap(activitygvgConst* other);

  // implements Message ----------------------------------------------

  activitygvgConst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgConst& from);
  void MergeFrom(const activitygvgConst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 constantdata = 2;
  inline bool has_constantdata() const;
  inline void clear_constantdata();
  static const int kConstantdataFieldNumber = 2;
  inline ::google::protobuf::int64 constantdata() const;
  inline void set_constantdata(::google::protobuf::int64 value);

  // optional string stringdata = 3;
  inline bool has_stringdata() const;
  inline void clear_stringdata();
  static const int kStringdataFieldNumber = 3;
  inline const ::std::string& stringdata() const;
  inline void set_stringdata(const ::std::string& value);
  inline void set_stringdata(const char* value);
  inline void set_stringdata(const char* value, size_t size);
  inline ::std::string* mutable_stringdata();
  inline ::std::string* release_stringdata();
  inline void set_allocated_stringdata(::std::string* stringdata);

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgConst)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_constantdata();
  inline void clear_has_constantdata();
  inline void set_has_stringdata();
  inline void clear_has_stringdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 constantdata_;
  ::std::string* stringdata_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgConst* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitygvgConst : public ::google::protobuf::Message {
 public:
  Sheet_activitygvgConst();
  virtual ~Sheet_activitygvgConst();

  Sheet_activitygvgConst(const Sheet_activitygvgConst& from);

  inline Sheet_activitygvgConst& operator=(const Sheet_activitygvgConst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitygvgConst& default_instance();

  void Swap(Sheet_activitygvgConst* other);

  // implements Message ----------------------------------------------

  Sheet_activitygvgConst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitygvgConst& from);
  void MergeFrom(const Sheet_activitygvgConst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitygvgConst activitygvgConst_List = 1;
  inline int activitygvgconst_list_size() const;
  inline void clear_activitygvgconst_list();
  static const int kActivitygvgConstListFieldNumber = 1;
  inline const ::proto_ff::activitygvgConst& activitygvgconst_list(int index) const;
  inline ::proto_ff::activitygvgConst* mutable_activitygvgconst_list(int index);
  inline ::proto_ff::activitygvgConst* add_activitygvgconst_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgConst >&
      activitygvgconst_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgConst >*
      mutable_activitygvgconst_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitygvgConst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgConst > activitygvgconst_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitygvgConst* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgRankRewardgMemberrewardDesc : public ::google::protobuf::Message {
 public:
  activitygvgRankRewardgMemberrewardDesc();
  virtual ~activitygvgRankRewardgMemberrewardDesc();

  activitygvgRankRewardgMemberrewardDesc(const activitygvgRankRewardgMemberrewardDesc& from);

  inline activitygvgRankRewardgMemberrewardDesc& operator=(const activitygvgRankRewardgMemberrewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgRankRewardgMemberrewardDesc& default_instance();

  void Swap(activitygvgRankRewardgMemberrewardDesc* other);

  // implements Message ----------------------------------------------

  activitygvgRankRewardgMemberrewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgRankRewardgMemberrewardDesc& from);
  void MergeFrom(const activitygvgRankRewardgMemberrewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgRankRewardgMemberrewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgRankRewardgMemberrewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgRankRewardgLeaderrewardDesc : public ::google::protobuf::Message {
 public:
  activitygvgRankRewardgLeaderrewardDesc();
  virtual ~activitygvgRankRewardgLeaderrewardDesc();

  activitygvgRankRewardgLeaderrewardDesc(const activitygvgRankRewardgLeaderrewardDesc& from);

  inline activitygvgRankRewardgLeaderrewardDesc& operator=(const activitygvgRankRewardgLeaderrewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgRankRewardgLeaderrewardDesc& default_instance();

  void Swap(activitygvgRankRewardgLeaderrewardDesc* other);

  // implements Message ----------------------------------------------

  activitygvgRankRewardgLeaderrewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgRankRewardgLeaderrewardDesc& from);
  void MergeFrom(const activitygvgRankRewardgLeaderrewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgRankRewardgLeaderrewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgRankRewardgLeaderrewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgRankReward : public ::google::protobuf::Message {
 public:
  activitygvgRankReward();
  virtual ~activitygvgRankReward();

  activitygvgRankReward(const activitygvgRankReward& from);

  inline activitygvgRankReward& operator=(const activitygvgRankReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgRankReward& default_instance();

  void Swap(activitygvgRankReward* other);

  // implements Message ----------------------------------------------

  activitygvgRankReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgRankReward& from);
  void MergeFrom(const activitygvgRankReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 gLeaderId = 2;
  inline bool has_gleaderid() const;
  inline void clear_gleaderid();
  static const int kGLeaderIdFieldNumber = 2;
  inline ::google::protobuf::int64 gleaderid() const;
  inline void set_gleaderid(::google::protobuf::int64 value);

  // repeated .proto_ff.activitygvgRankRewardgMemberrewardDesc gMemberreward = 3;
  inline int gmemberreward_size() const;
  inline void clear_gmemberreward();
  static const int kGMemberrewardFieldNumber = 3;
  inline const ::proto_ff::activitygvgRankRewardgMemberrewardDesc& gmemberreward(int index) const;
  inline ::proto_ff::activitygvgRankRewardgMemberrewardDesc* mutable_gmemberreward(int index);
  inline ::proto_ff::activitygvgRankRewardgMemberrewardDesc* add_gmemberreward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgMemberrewardDesc >&
      gmemberreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgMemberrewardDesc >*
      mutable_gmemberreward();

  // repeated .proto_ff.activitygvgRankRewardgLeaderrewardDesc gLeaderreward = 4;
  inline int gleaderreward_size() const;
  inline void clear_gleaderreward();
  static const int kGLeaderrewardFieldNumber = 4;
  inline const ::proto_ff::activitygvgRankRewardgLeaderrewardDesc& gleaderreward(int index) const;
  inline ::proto_ff::activitygvgRankRewardgLeaderrewardDesc* mutable_gleaderreward(int index);
  inline ::proto_ff::activitygvgRankRewardgLeaderrewardDesc* add_gleaderreward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgLeaderrewardDesc >&
      gleaderreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgLeaderrewardDesc >*
      mutable_gleaderreward();

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgRankReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gleaderid();
  inline void clear_has_gleaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gleaderid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgMemberrewardDesc > gmemberreward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgLeaderrewardDesc > gleaderreward_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgRankReward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitygvgRankReward : public ::google::protobuf::Message {
 public:
  Sheet_activitygvgRankReward();
  virtual ~Sheet_activitygvgRankReward();

  Sheet_activitygvgRankReward(const Sheet_activitygvgRankReward& from);

  inline Sheet_activitygvgRankReward& operator=(const Sheet_activitygvgRankReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitygvgRankReward& default_instance();

  void Swap(Sheet_activitygvgRankReward* other);

  // implements Message ----------------------------------------------

  Sheet_activitygvgRankReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitygvgRankReward& from);
  void MergeFrom(const Sheet_activitygvgRankReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitygvgRankReward activitygvgRankReward_List = 1;
  inline int activitygvgrankreward_list_size() const;
  inline void clear_activitygvgrankreward_list();
  static const int kActivitygvgRankRewardListFieldNumber = 1;
  inline const ::proto_ff::activitygvgRankReward& activitygvgrankreward_list(int index) const;
  inline ::proto_ff::activitygvgRankReward* mutable_activitygvgrankreward_list(int index);
  inline ::proto_ff::activitygvgRankReward* add_activitygvgrankreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankReward >&
      activitygvgrankreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankReward >*
      mutable_activitygvgrankreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitygvgRankReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankReward > activitygvgrankreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitygvgRankReward* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgRewardrewardDesc : public ::google::protobuf::Message {
 public:
  activitygvgRewardrewardDesc();
  virtual ~activitygvgRewardrewardDesc();

  activitygvgRewardrewardDesc(const activitygvgRewardrewardDesc& from);

  inline activitygvgRewardrewardDesc& operator=(const activitygvgRewardrewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgRewardrewardDesc& default_instance();

  void Swap(activitygvgRewardrewardDesc* other);

  // implements Message ----------------------------------------------

  activitygvgRewardrewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgRewardrewardDesc& from);
  void MergeFrom(const activitygvgRewardrewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgRewardrewardDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgRewardrewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgRewardfinalityDesc : public ::google::protobuf::Message {
 public:
  activitygvgRewardfinalityDesc();
  virtual ~activitygvgRewardfinalityDesc();

  activitygvgRewardfinalityDesc(const activitygvgRewardfinalityDesc& from);

  inline activitygvgRewardfinalityDesc& operator=(const activitygvgRewardfinalityDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgRewardfinalityDesc& default_instance();

  void Swap(activitygvgRewardfinalityDesc* other);

  // implements Message ----------------------------------------------

  activitygvgRewardfinalityDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgRewardfinalityDesc& from);
  void MergeFrom(const activitygvgRewardfinalityDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgRewardfinalityDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgRewardfinalityDesc* default_instance_;
};
// -------------------------------------------------------------------

class activitygvgReward : public ::google::protobuf::Message {
 public:
  activitygvgReward();
  virtual ~activitygvgReward();

  activitygvgReward(const activitygvgReward& from);

  inline activitygvgReward& operator=(const activitygvgReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitygvgReward& default_instance();

  void Swap(activitygvgReward* other);

  // implements Message ----------------------------------------------

  activitygvgReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitygvgReward& from);
  void MergeFrom(const activitygvgReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 finalityskill = 2;
  inline bool has_finalityskill() const;
  inline void clear_finalityskill();
  static const int kFinalityskillFieldNumber = 2;
  inline ::google::protobuf::int64 finalityskill() const;
  inline void set_finalityskill(::google::protobuf::int64 value);

  // repeated .proto_ff.activitygvgRewardrewardDesc reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::proto_ff::activitygvgRewardrewardDesc& reward(int index) const;
  inline ::proto_ff::activitygvgRewardrewardDesc* mutable_reward(int index);
  inline ::proto_ff::activitygvgRewardrewardDesc* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardrewardDesc >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardrewardDesc >*
      mutable_reward();

  // repeated .proto_ff.activitygvgRewardfinalityDesc finality = 4;
  inline int finality_size() const;
  inline void clear_finality();
  static const int kFinalityFieldNumber = 4;
  inline const ::proto_ff::activitygvgRewardfinalityDesc& finality(int index) const;
  inline ::proto_ff::activitygvgRewardfinalityDesc* mutable_finality(int index);
  inline ::proto_ff::activitygvgRewardfinalityDesc* add_finality();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardfinalityDesc >&
      finality() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardfinalityDesc >*
      mutable_finality();

  // @@protoc_insertion_point(class_scope:proto_ff.activitygvgReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_finalityskill();
  inline void clear_has_finalityskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 finalityskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardrewardDesc > reward_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardfinalityDesc > finality_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitygvgReward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitygvgReward : public ::google::protobuf::Message {
 public:
  Sheet_activitygvgReward();
  virtual ~Sheet_activitygvgReward();

  Sheet_activitygvgReward(const Sheet_activitygvgReward& from);

  inline Sheet_activitygvgReward& operator=(const Sheet_activitygvgReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitygvgReward& default_instance();

  void Swap(Sheet_activitygvgReward* other);

  // implements Message ----------------------------------------------

  Sheet_activitygvgReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitygvgReward& from);
  void MergeFrom(const Sheet_activitygvgReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitygvgReward activitygvgReward_List = 1;
  inline int activitygvgreward_list_size() const;
  inline void clear_activitygvgreward_list();
  static const int kActivitygvgRewardListFieldNumber = 1;
  inline const ::proto_ff::activitygvgReward& activitygvgreward_list(int index) const;
  inline ::proto_ff::activitygvgReward* mutable_activitygvgreward_list(int index);
  inline ::proto_ff::activitygvgReward* add_activitygvgreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgReward >&
      activitygvgreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgReward >*
      mutable_activitygvgreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitygvgReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgReward > activitygvgreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitygvgReward* default_instance_;
};
// -------------------------------------------------------------------

class activityworldTreasureConst : public ::google::protobuf::Message {
 public:
  activityworldTreasureConst();
  virtual ~activityworldTreasureConst();

  activityworldTreasureConst(const activityworldTreasureConst& from);

  inline activityworldTreasureConst& operator=(const activityworldTreasureConst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activityworldTreasureConst& default_instance();

  void Swap(activityworldTreasureConst* other);

  // implements Message ----------------------------------------------

  activityworldTreasureConst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activityworldTreasureConst& from);
  void MergeFrom(const activityworldTreasureConst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 constantdata = 2;
  inline bool has_constantdata() const;
  inline void clear_constantdata();
  static const int kConstantdataFieldNumber = 2;
  inline ::google::protobuf::int64 constantdata() const;
  inline void set_constantdata(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activityworldTreasureConst)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_constantdata();
  inline void clear_has_constantdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 constantdata_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activityworldTreasureConst* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activityworldTreasureConst : public ::google::protobuf::Message {
 public:
  Sheet_activityworldTreasureConst();
  virtual ~Sheet_activityworldTreasureConst();

  Sheet_activityworldTreasureConst(const Sheet_activityworldTreasureConst& from);

  inline Sheet_activityworldTreasureConst& operator=(const Sheet_activityworldTreasureConst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activityworldTreasureConst& default_instance();

  void Swap(Sheet_activityworldTreasureConst* other);

  // implements Message ----------------------------------------------

  Sheet_activityworldTreasureConst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activityworldTreasureConst& from);
  void MergeFrom(const Sheet_activityworldTreasureConst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activityworldTreasureConst activityworldTreasureConst_List = 1;
  inline int activityworldtreasureconst_list_size() const;
  inline void clear_activityworldtreasureconst_list();
  static const int kActivityworldTreasureConstListFieldNumber = 1;
  inline const ::proto_ff::activityworldTreasureConst& activityworldtreasureconst_list(int index) const;
  inline ::proto_ff::activityworldTreasureConst* mutable_activityworldtreasureconst_list(int index);
  inline ::proto_ff::activityworldTreasureConst* add_activityworldtreasureconst_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureConst >&
      activityworldtreasureconst_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureConst >*
      mutable_activityworldtreasureconst_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activityworldTreasureConst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureConst > activityworldtreasureconst_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activityworldTreasureConst* default_instance_;
};
// -------------------------------------------------------------------

class activityworldTreasureMap : public ::google::protobuf::Message {
 public:
  activityworldTreasureMap();
  virtual ~activityworldTreasureMap();

  activityworldTreasureMap(const activityworldTreasureMap& from);

  inline activityworldTreasureMap& operator=(const activityworldTreasureMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activityworldTreasureMap& default_instance();

  void Swap(activityworldTreasureMap* other);

  // implements Message ----------------------------------------------

  activityworldTreasureMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activityworldTreasureMap& from);
  void MergeFrom(const activityworldTreasureMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 mapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // optional string pathID = 2;
  inline bool has_pathid() const;
  inline void clear_pathid();
  static const int kPathIDFieldNumber = 2;
  inline const ::std::string& pathid() const;
  inline void set_pathid(const ::std::string& value);
  inline void set_pathid(const char* value);
  inline void set_pathid(const char* value, size_t size);
  inline ::std::string* mutable_pathid();
  inline ::std::string* release_pathid();
  inline void set_allocated_pathid(::std::string* pathid);

  // @@protoc_insertion_point(class_scope:proto_ff.activityworldTreasureMap)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pathid();
  inline void clear_has_pathid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mapid_;
  ::std::string* pathid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activityworldTreasureMap* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activityworldTreasureMap : public ::google::protobuf::Message {
 public:
  Sheet_activityworldTreasureMap();
  virtual ~Sheet_activityworldTreasureMap();

  Sheet_activityworldTreasureMap(const Sheet_activityworldTreasureMap& from);

  inline Sheet_activityworldTreasureMap& operator=(const Sheet_activityworldTreasureMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activityworldTreasureMap& default_instance();

  void Swap(Sheet_activityworldTreasureMap* other);

  // implements Message ----------------------------------------------

  Sheet_activityworldTreasureMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activityworldTreasureMap& from);
  void MergeFrom(const Sheet_activityworldTreasureMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activityworldTreasureMap activityworldTreasureMap_List = 1;
  inline int activityworldtreasuremap_list_size() const;
  inline void clear_activityworldtreasuremap_list();
  static const int kActivityworldTreasureMapListFieldNumber = 1;
  inline const ::proto_ff::activityworldTreasureMap& activityworldtreasuremap_list(int index) const;
  inline ::proto_ff::activityworldTreasureMap* mutable_activityworldtreasuremap_list(int index);
  inline ::proto_ff::activityworldTreasureMap* add_activityworldtreasuremap_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMap >&
      activityworldtreasuremap_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMap >*
      mutable_activityworldtreasuremap_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activityworldTreasureMap)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMap > activityworldtreasuremap_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activityworldTreasureMap* default_instance_;
};
// -------------------------------------------------------------------

class activityworldTreasureMonster : public ::google::protobuf::Message {
 public:
  activityworldTreasureMonster();
  virtual ~activityworldTreasureMonster();

  activityworldTreasureMonster(const activityworldTreasureMonster& from);

  inline activityworldTreasureMonster& operator=(const activityworldTreasureMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activityworldTreasureMonster& default_instance();

  void Swap(activityworldTreasureMonster* other);

  // implements Message ----------------------------------------------

  activityworldTreasureMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activityworldTreasureMonster& from);
  void MergeFrom(const activityworldTreasureMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 monsterID = 2;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsterIDFieldNumber = 2;
  inline ::google::protobuf::int64 monsterid() const;
  inline void set_monsterid(::google::protobuf::int64 value);

  // optional int32 appearWeight = 3;
  inline bool has_appearweight() const;
  inline void clear_appearweight();
  static const int kAppearWeightFieldNumber = 3;
  inline ::google::protobuf::int32 appearweight() const;
  inline void set_appearweight(::google::protobuf::int32 value);

  // optional int64 skillId = 4;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 4;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.activityworldTreasureMonster)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_appearweight();
  inline void clear_has_appearweight();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 monsterid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 appearweight_;
  ::google::protobuf::int64 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activityworldTreasureMonster* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activityworldTreasureMonster : public ::google::protobuf::Message {
 public:
  Sheet_activityworldTreasureMonster();
  virtual ~Sheet_activityworldTreasureMonster();

  Sheet_activityworldTreasureMonster(const Sheet_activityworldTreasureMonster& from);

  inline Sheet_activityworldTreasureMonster& operator=(const Sheet_activityworldTreasureMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activityworldTreasureMonster& default_instance();

  void Swap(Sheet_activityworldTreasureMonster* other);

  // implements Message ----------------------------------------------

  Sheet_activityworldTreasureMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activityworldTreasureMonster& from);
  void MergeFrom(const Sheet_activityworldTreasureMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activityworldTreasureMonster activityworldTreasureMonster_List = 1;
  inline int activityworldtreasuremonster_list_size() const;
  inline void clear_activityworldtreasuremonster_list();
  static const int kActivityworldTreasureMonsterListFieldNumber = 1;
  inline const ::proto_ff::activityworldTreasureMonster& activityworldtreasuremonster_list(int index) const;
  inline ::proto_ff::activityworldTreasureMonster* mutable_activityworldtreasuremonster_list(int index);
  inline ::proto_ff::activityworldTreasureMonster* add_activityworldtreasuremonster_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMonster >&
      activityworldtreasuremonster_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMonster >*
      mutable_activityworldtreasuremonster_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activityworldTreasureMonster)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMonster > activityworldtreasuremonster_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activityworldTreasureMonster* default_instance_;
};
// -------------------------------------------------------------------

class activitylosttempleConstant : public ::google::protobuf::Message {
 public:
  activitylosttempleConstant();
  virtual ~activitylosttempleConstant();

  activitylosttempleConstant(const activitylosttempleConstant& from);

  inline activitylosttempleConstant& operator=(const activitylosttempleConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activitylosttempleConstant& default_instance();

  void Swap(activitylosttempleConstant* other);

  // implements Message ----------------------------------------------

  activitylosttempleConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activitylosttempleConstant& from);
  void MergeFrom(const activitylosttempleConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 constantdata = 2;
  inline bool has_constantdata() const;
  inline void clear_constantdata();
  static const int kConstantdataFieldNumber = 2;
  inline ::google::protobuf::int64 constantdata() const;
  inline void set_constantdata(::google::protobuf::int64 value);

  // optional string stringdata = 3;
  inline bool has_stringdata() const;
  inline void clear_stringdata();
  static const int kStringdataFieldNumber = 3;
  inline const ::std::string& stringdata() const;
  inline void set_stringdata(const ::std::string& value);
  inline void set_stringdata(const char* value);
  inline void set_stringdata(const char* value, size_t size);
  inline ::std::string* mutable_stringdata();
  inline ::std::string* release_stringdata();
  inline void set_allocated_stringdata(::std::string* stringdata);

  // @@protoc_insertion_point(class_scope:proto_ff.activitylosttempleConstant)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_constantdata();
  inline void clear_has_constantdata();
  inline void set_has_stringdata();
  inline void clear_has_stringdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 constantdata_;
  ::std::string* stringdata_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static activitylosttempleConstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_activitylosttempleConstant : public ::google::protobuf::Message {
 public:
  Sheet_activitylosttempleConstant();
  virtual ~Sheet_activitylosttempleConstant();

  Sheet_activitylosttempleConstant(const Sheet_activitylosttempleConstant& from);

  inline Sheet_activitylosttempleConstant& operator=(const Sheet_activitylosttempleConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_activitylosttempleConstant& default_instance();

  void Swap(Sheet_activitylosttempleConstant* other);

  // implements Message ----------------------------------------------

  Sheet_activitylosttempleConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_activitylosttempleConstant& from);
  void MergeFrom(const Sheet_activitylosttempleConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.activitylosttempleConstant activitylosttempleConstant_List = 1;
  inline int activitylosttempleconstant_list_size() const;
  inline void clear_activitylosttempleconstant_list();
  static const int kActivitylosttempleConstantListFieldNumber = 1;
  inline const ::proto_ff::activitylosttempleConstant& activitylosttempleconstant_list(int index) const;
  inline ::proto_ff::activitylosttempleConstant* mutable_activitylosttempleconstant_list(int index);
  inline ::proto_ff::activitylosttempleConstant* add_activitylosttempleconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitylosttempleConstant >&
      activitylosttempleconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitylosttempleConstant >*
      mutable_activitylosttempleconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_activitylosttempleConstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::activitylosttempleConstant > activitylosttempleconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2eproto();
  friend void protobuf_AssignDesc_activity_2eproto();
  friend void protobuf_ShutdownFile_activity_2eproto();

  void InitAsDefaultInstance();
  static Sheet_activitylosttempleConstant* default_instance_;
};
// ===================================================================


// ===================================================================

// activitydaily

// optional int64 activeId = 1;
inline bool activitydaily::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitydaily::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitydaily::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitydaily::clear_activeid() {
  activeid_ = GOOGLE_LONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::int64 activitydaily::activeid() const {
  return activeid_;
}
inline void activitydaily::set_activeid(::google::protobuf::int64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional string activeName = 2;
inline bool activitydaily::has_activename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitydaily::set_has_activename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitydaily::clear_has_activename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitydaily::clear_activename() {
  if (activename_ != &::google::protobuf::internal::kEmptyString) {
    activename_->clear();
  }
  clear_has_activename();
}
inline const ::std::string& activitydaily::activename() const {
  return *activename_;
}
inline void activitydaily::set_activename(const ::std::string& value) {
  set_has_activename();
  if (activename_ == &::google::protobuf::internal::kEmptyString) {
    activename_ = new ::std::string;
  }
  activename_->assign(value);
}
inline void activitydaily::set_activename(const char* value) {
  set_has_activename();
  if (activename_ == &::google::protobuf::internal::kEmptyString) {
    activename_ = new ::std::string;
  }
  activename_->assign(value);
}
inline void activitydaily::set_activename(const char* value, size_t size) {
  set_has_activename();
  if (activename_ == &::google::protobuf::internal::kEmptyString) {
    activename_ = new ::std::string;
  }
  activename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_activename() {
  set_has_activename();
  if (activename_ == &::google::protobuf::internal::kEmptyString) {
    activename_ = new ::std::string;
  }
  return activename_;
}
inline ::std::string* activitydaily::release_activename() {
  clear_has_activename();
  if (activename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activename_;
    activename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_activename(::std::string* activename) {
  if (activename_ != &::google::protobuf::internal::kEmptyString) {
    delete activename_;
  }
  if (activename) {
    set_has_activename();
    activename_ = activename;
  } else {
    clear_has_activename();
    activename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 typeId = 3;
inline bool activitydaily::has_typeid_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitydaily::set_has_typeid_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitydaily::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitydaily::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 activitydaily::typeid_() const {
  return typeid__;
}
inline void activitydaily::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
}

// optional int32 Descriptiontype = 4;
inline bool activitydaily::has_descriptiontype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activitydaily::set_has_descriptiontype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activitydaily::clear_has_descriptiontype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activitydaily::clear_descriptiontype() {
  descriptiontype_ = 0;
  clear_has_descriptiontype();
}
inline ::google::protobuf::int32 activitydaily::descriptiontype() const {
  return descriptiontype_;
}
inline void activitydaily::set_descriptiontype(::google::protobuf::int32 value) {
  set_has_descriptiontype();
  descriptiontype_ = value;
}

// optional int64 typeArgs = 5;
inline bool activitydaily::has_typeargs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activitydaily::set_has_typeargs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activitydaily::clear_has_typeargs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activitydaily::clear_typeargs() {
  typeargs_ = GOOGLE_LONGLONG(0);
  clear_has_typeargs();
}
inline ::google::protobuf::int64 activitydaily::typeargs() const {
  return typeargs_;
}
inline void activitydaily::set_typeargs(::google::protobuf::int64 value) {
  set_has_typeargs();
  typeargs_ = value;
}

// optional string involveMap = 6;
inline bool activitydaily::has_involvemap() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activitydaily::set_has_involvemap() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activitydaily::clear_has_involvemap() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activitydaily::clear_involvemap() {
  if (involvemap_ != &::google::protobuf::internal::kEmptyString) {
    involvemap_->clear();
  }
  clear_has_involvemap();
}
inline const ::std::string& activitydaily::involvemap() const {
  return *involvemap_;
}
inline void activitydaily::set_involvemap(const ::std::string& value) {
  set_has_involvemap();
  if (involvemap_ == &::google::protobuf::internal::kEmptyString) {
    involvemap_ = new ::std::string;
  }
  involvemap_->assign(value);
}
inline void activitydaily::set_involvemap(const char* value) {
  set_has_involvemap();
  if (involvemap_ == &::google::protobuf::internal::kEmptyString) {
    involvemap_ = new ::std::string;
  }
  involvemap_->assign(value);
}
inline void activitydaily::set_involvemap(const char* value, size_t size) {
  set_has_involvemap();
  if (involvemap_ == &::google::protobuf::internal::kEmptyString) {
    involvemap_ = new ::std::string;
  }
  involvemap_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_involvemap() {
  set_has_involvemap();
  if (involvemap_ == &::google::protobuf::internal::kEmptyString) {
    involvemap_ = new ::std::string;
  }
  return involvemap_;
}
inline ::std::string* activitydaily::release_involvemap() {
  clear_has_involvemap();
  if (involvemap_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = involvemap_;
    involvemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_involvemap(::std::string* involvemap) {
  if (involvemap_ != &::google::protobuf::internal::kEmptyString) {
    delete involvemap_;
  }
  if (involvemap) {
    set_has_involvemap();
    involvemap_ = involvemap;
  } else {
    clear_has_involvemap();
    involvemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 minlevel = 7;
inline bool activitydaily::has_minlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void activitydaily::set_has_minlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void activitydaily::clear_has_minlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void activitydaily::clear_minlevel() {
  minlevel_ = 0;
  clear_has_minlevel();
}
inline ::google::protobuf::int32 activitydaily::minlevel() const {
  return minlevel_;
}
inline void activitydaily::set_minlevel(::google::protobuf::int32 value) {
  set_has_minlevel();
  minlevel_ = value;
}

// optional string openCycle = 8;
inline bool activitydaily::has_opencycle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void activitydaily::set_has_opencycle() {
  _has_bits_[0] |= 0x00000080u;
}
inline void activitydaily::clear_has_opencycle() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void activitydaily::clear_opencycle() {
  if (opencycle_ != &::google::protobuf::internal::kEmptyString) {
    opencycle_->clear();
  }
  clear_has_opencycle();
}
inline const ::std::string& activitydaily::opencycle() const {
  return *opencycle_;
}
inline void activitydaily::set_opencycle(const ::std::string& value) {
  set_has_opencycle();
  if (opencycle_ == &::google::protobuf::internal::kEmptyString) {
    opencycle_ = new ::std::string;
  }
  opencycle_->assign(value);
}
inline void activitydaily::set_opencycle(const char* value) {
  set_has_opencycle();
  if (opencycle_ == &::google::protobuf::internal::kEmptyString) {
    opencycle_ = new ::std::string;
  }
  opencycle_->assign(value);
}
inline void activitydaily::set_opencycle(const char* value, size_t size) {
  set_has_opencycle();
  if (opencycle_ == &::google::protobuf::internal::kEmptyString) {
    opencycle_ = new ::std::string;
  }
  opencycle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_opencycle() {
  set_has_opencycle();
  if (opencycle_ == &::google::protobuf::internal::kEmptyString) {
    opencycle_ = new ::std::string;
  }
  return opencycle_;
}
inline ::std::string* activitydaily::release_opencycle() {
  clear_has_opencycle();
  if (opencycle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opencycle_;
    opencycle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_opencycle(::std::string* opencycle) {
  if (opencycle_ != &::google::protobuf::internal::kEmptyString) {
    delete opencycle_;
  }
  if (opencycle) {
    set_has_opencycle();
    opencycle_ = opencycle;
  } else {
    clear_has_opencycle();
    opencycle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string openTime = 9;
inline bool activitydaily::has_opentime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void activitydaily::set_has_opentime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void activitydaily::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void activitydaily::clear_opentime() {
  if (opentime_ != &::google::protobuf::internal::kEmptyString) {
    opentime_->clear();
  }
  clear_has_opentime();
}
inline const ::std::string& activitydaily::opentime() const {
  return *opentime_;
}
inline void activitydaily::set_opentime(const ::std::string& value) {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  opentime_->assign(value);
}
inline void activitydaily::set_opentime(const char* value) {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  opentime_->assign(value);
}
inline void activitydaily::set_opentime(const char* value, size_t size) {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  opentime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_opentime() {
  set_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    opentime_ = new ::std::string;
  }
  return opentime_;
}
inline ::std::string* activitydaily::release_opentime() {
  clear_has_opentime();
  if (opentime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opentime_;
    opentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_opentime(::std::string* opentime) {
  if (opentime_ != &::google::protobuf::internal::kEmptyString) {
    delete opentime_;
  }
  if (opentime) {
    set_has_opentime();
    opentime_ = opentime;
  } else {
    clear_has_opentime();
    opentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string pushTime = 10;
inline bool activitydaily::has_pushtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void activitydaily::set_has_pushtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void activitydaily::clear_has_pushtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void activitydaily::clear_pushtime() {
  if (pushtime_ != &::google::protobuf::internal::kEmptyString) {
    pushtime_->clear();
  }
  clear_has_pushtime();
}
inline const ::std::string& activitydaily::pushtime() const {
  return *pushtime_;
}
inline void activitydaily::set_pushtime(const ::std::string& value) {
  set_has_pushtime();
  if (pushtime_ == &::google::protobuf::internal::kEmptyString) {
    pushtime_ = new ::std::string;
  }
  pushtime_->assign(value);
}
inline void activitydaily::set_pushtime(const char* value) {
  set_has_pushtime();
  if (pushtime_ == &::google::protobuf::internal::kEmptyString) {
    pushtime_ = new ::std::string;
  }
  pushtime_->assign(value);
}
inline void activitydaily::set_pushtime(const char* value, size_t size) {
  set_has_pushtime();
  if (pushtime_ == &::google::protobuf::internal::kEmptyString) {
    pushtime_ = new ::std::string;
  }
  pushtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_pushtime() {
  set_has_pushtime();
  if (pushtime_ == &::google::protobuf::internal::kEmptyString) {
    pushtime_ = new ::std::string;
  }
  return pushtime_;
}
inline ::std::string* activitydaily::release_pushtime() {
  clear_has_pushtime();
  if (pushtime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pushtime_;
    pushtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_pushtime(::std::string* pushtime) {
  if (pushtime_ != &::google::protobuf::internal::kEmptyString) {
    delete pushtime_;
  }
  if (pushtime) {
    set_has_pushtime();
    pushtime_ = pushtime;
  } else {
    clear_has_pushtime();
    pushtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 openingTime = 11;
inline bool activitydaily::has_openingtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void activitydaily::set_has_openingtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void activitydaily::clear_has_openingtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void activitydaily::clear_openingtime() {
  openingtime_ = 0;
  clear_has_openingtime();
}
inline ::google::protobuf::int32 activitydaily::openingtime() const {
  return openingtime_;
}
inline void activitydaily::set_openingtime(::google::protobuf::int32 value) {
  set_has_openingtime();
  openingtime_ = value;
}

// optional int32 advanceTime = 12;
inline bool activitydaily::has_advancetime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void activitydaily::set_has_advancetime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void activitydaily::clear_has_advancetime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void activitydaily::clear_advancetime() {
  advancetime_ = 0;
  clear_has_advancetime();
}
inline ::google::protobuf::int32 activitydaily::advancetime() const {
  return advancetime_;
}
inline void activitydaily::set_advancetime(::google::protobuf::int32 value) {
  set_has_advancetime();
  advancetime_ = value;
}

// optional int32 intervalTime = 13;
inline bool activitydaily::has_intervaltime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void activitydaily::set_has_intervaltime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void activitydaily::clear_has_intervaltime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void activitydaily::clear_intervaltime() {
  intervaltime_ = 0;
  clear_has_intervaltime();
}
inline ::google::protobuf::int32 activitydaily::intervaltime() const {
  return intervaltime_;
}
inline void activitydaily::set_intervaltime(::google::protobuf::int32 value) {
  set_has_intervaltime();
  intervaltime_ = value;
}

// optional string opeDay = 14;
inline bool activitydaily::has_opeday() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void activitydaily::set_has_opeday() {
  _has_bits_[0] |= 0x00002000u;
}
inline void activitydaily::clear_has_opeday() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void activitydaily::clear_opeday() {
  if (opeday_ != &::google::protobuf::internal::kEmptyString) {
    opeday_->clear();
  }
  clear_has_opeday();
}
inline const ::std::string& activitydaily::opeday() const {
  return *opeday_;
}
inline void activitydaily::set_opeday(const ::std::string& value) {
  set_has_opeday();
  if (opeday_ == &::google::protobuf::internal::kEmptyString) {
    opeday_ = new ::std::string;
  }
  opeday_->assign(value);
}
inline void activitydaily::set_opeday(const char* value) {
  set_has_opeday();
  if (opeday_ == &::google::protobuf::internal::kEmptyString) {
    opeday_ = new ::std::string;
  }
  opeday_->assign(value);
}
inline void activitydaily::set_opeday(const char* value, size_t size) {
  set_has_opeday();
  if (opeday_ == &::google::protobuf::internal::kEmptyString) {
    opeday_ = new ::std::string;
  }
  opeday_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_opeday() {
  set_has_opeday();
  if (opeday_ == &::google::protobuf::internal::kEmptyString) {
    opeday_ = new ::std::string;
  }
  return opeday_;
}
inline ::std::string* activitydaily::release_opeday() {
  clear_has_opeday();
  if (opeday_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opeday_;
    opeday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_opeday(::std::string* opeday) {
  if (opeday_ != &::google::protobuf::internal::kEmptyString) {
    delete opeday_;
  }
  if (opeday) {
    set_has_opeday();
    opeday_ = opeday;
  } else {
    clear_has_opeday();
    opeday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string closeDay = 15;
inline bool activitydaily::has_closeday() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void activitydaily::set_has_closeday() {
  _has_bits_[0] |= 0x00004000u;
}
inline void activitydaily::clear_has_closeday() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void activitydaily::clear_closeday() {
  if (closeday_ != &::google::protobuf::internal::kEmptyString) {
    closeday_->clear();
  }
  clear_has_closeday();
}
inline const ::std::string& activitydaily::closeday() const {
  return *closeday_;
}
inline void activitydaily::set_closeday(const ::std::string& value) {
  set_has_closeday();
  if (closeday_ == &::google::protobuf::internal::kEmptyString) {
    closeday_ = new ::std::string;
  }
  closeday_->assign(value);
}
inline void activitydaily::set_closeday(const char* value) {
  set_has_closeday();
  if (closeday_ == &::google::protobuf::internal::kEmptyString) {
    closeday_ = new ::std::string;
  }
  closeday_->assign(value);
}
inline void activitydaily::set_closeday(const char* value, size_t size) {
  set_has_closeday();
  if (closeday_ == &::google::protobuf::internal::kEmptyString) {
    closeday_ = new ::std::string;
  }
  closeday_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitydaily::mutable_closeday() {
  set_has_closeday();
  if (closeday_ == &::google::protobuf::internal::kEmptyString) {
    closeday_ = new ::std::string;
  }
  return closeday_;
}
inline ::std::string* activitydaily::release_closeday() {
  clear_has_closeday();
  if (closeday_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = closeday_;
    closeday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitydaily::set_allocated_closeday(::std::string* closeday) {
  if (closeday_ != &::google::protobuf::internal::kEmptyString) {
    delete closeday_;
  }
  if (closeday) {
    set_has_closeday();
    closeday_ = closeday;
  } else {
    clear_has_closeday();
    closeday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 isCross = 16;
inline bool activitydaily::has_iscross() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void activitydaily::set_has_iscross() {
  _has_bits_[0] |= 0x00008000u;
}
inline void activitydaily::clear_has_iscross() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void activitydaily::clear_iscross() {
  iscross_ = 0;
  clear_has_iscross();
}
inline ::google::protobuf::int32 activitydaily::iscross() const {
  return iscross_;
}
inline void activitydaily::set_iscross(::google::protobuf::int32 value) {
  set_has_iscross();
  iscross_ = value;
}

// optional int32 serverTime = 17;
inline bool activitydaily::has_servertime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void activitydaily::set_has_servertime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void activitydaily::clear_has_servertime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void activitydaily::clear_servertime() {
  servertime_ = 0;
  clear_has_servertime();
}
inline ::google::protobuf::int32 activitydaily::servertime() const {
  return servertime_;
}
inline void activitydaily::set_servertime(::google::protobuf::int32 value) {
  set_has_servertime();
  servertime_ = value;
}

// optional int32 serverdelayTime = 18;
inline bool activitydaily::has_serverdelaytime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void activitydaily::set_has_serverdelaytime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void activitydaily::clear_has_serverdelaytime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void activitydaily::clear_serverdelaytime() {
  serverdelaytime_ = 0;
  clear_has_serverdelaytime();
}
inline ::google::protobuf::int32 activitydaily::serverdelaytime() const {
  return serverdelaytime_;
}
inline void activitydaily::set_serverdelaytime(::google::protobuf::int32 value) {
  set_has_serverdelaytime();
  serverdelaytime_ = value;
}

// optional int32 forwordEnterTime = 19;
inline bool activitydaily::has_forwordentertime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void activitydaily::set_has_forwordentertime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void activitydaily::clear_has_forwordentertime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void activitydaily::clear_forwordentertime() {
  forwordentertime_ = 0;
  clear_has_forwordentertime();
}
inline ::google::protobuf::int32 activitydaily::forwordentertime() const {
  return forwordentertime_;
}
inline void activitydaily::set_forwordentertime(::google::protobuf::int32 value) {
  set_has_forwordentertime();
  forwordentertime_ = value;
}

// -------------------------------------------------------------------

// Sheet_activitydaily

// repeated .proto_ff.activitydaily activitydaily_List = 1;
inline int Sheet_activitydaily::activitydaily_list_size() const {
  return activitydaily_list_.size();
}
inline void Sheet_activitydaily::clear_activitydaily_list() {
  activitydaily_list_.Clear();
}
inline const ::proto_ff::activitydaily& Sheet_activitydaily::activitydaily_list(int index) const {
  return activitydaily_list_.Get(index);
}
inline ::proto_ff::activitydaily* Sheet_activitydaily::mutable_activitydaily_list(int index) {
  return activitydaily_list_.Mutable(index);
}
inline ::proto_ff::activitydaily* Sheet_activitydaily::add_activitydaily_list() {
  return activitydaily_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitydaily >&
Sheet_activitydaily::activitydaily_list() const {
  return activitydaily_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitydaily >*
Sheet_activitydaily::mutable_activitydaily_list() {
  return &activitydaily_list_;
}

// -------------------------------------------------------------------

// activityactivitynotice

// optional int64 activeId = 1;
inline bool activityactivitynotice::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activityactivitynotice::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activityactivitynotice::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activityactivitynotice::clear_activeid() {
  activeid_ = GOOGLE_LONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::int64 activityactivitynotice::activeid() const {
  return activeid_;
}
inline void activityactivitynotice::set_activeid(::google::protobuf::int64 value) {
  set_has_activeid();
  activeid_ = value;
}

// -------------------------------------------------------------------

// Sheet_activityactivitynotice

// repeated .proto_ff.activityactivitynotice activityactivitynotice_List = 1;
inline int Sheet_activityactivitynotice::activityactivitynotice_list_size() const {
  return activityactivitynotice_list_.size();
}
inline void Sheet_activityactivitynotice::clear_activityactivitynotice_list() {
  activityactivitynotice_list_.Clear();
}
inline const ::proto_ff::activityactivitynotice& Sheet_activityactivitynotice::activityactivitynotice_list(int index) const {
  return activityactivitynotice_list_.Get(index);
}
inline ::proto_ff::activityactivitynotice* Sheet_activityactivitynotice::mutable_activityactivitynotice_list(int index) {
  return activityactivitynotice_list_.Mutable(index);
}
inline ::proto_ff::activityactivitynotice* Sheet_activityactivitynotice::add_activityactivitynotice_list() {
  return activityactivitynotice_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityactivitynotice >&
Sheet_activityactivitynotice::activityactivitynotice_list() const {
  return activityactivitynotice_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityactivitynotice >*
Sheet_activityactivitynotice::mutable_activityactivitynotice_list() {
  return &activityactivitynotice_list_;
}

// -------------------------------------------------------------------

// activityscufflerewardDesc

// optional int64 Num = 1;
inline bool activityscufflerewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activityscufflerewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activityscufflerewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activityscufflerewardDesc::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 activityscufflerewardDesc::num() const {
  return num_;
}
inline void activityscufflerewardDesc::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// optional int64 ID = 2;
inline bool activityscufflerewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activityscufflerewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activityscufflerewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activityscufflerewardDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activityscufflerewardDesc::id() const {
  return id_;
}
inline void activityscufflerewardDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activityscuffle

// optional int64 id = 1;
inline bool activityscuffle::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activityscuffle::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activityscuffle::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activityscuffle::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activityscuffle::id() const {
  return id_;
}
inline void activityscuffle::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 typeArgs = 2;
inline bool activityscuffle::has_typeargs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activityscuffle::set_has_typeargs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activityscuffle::clear_has_typeargs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activityscuffle::clear_typeargs() {
  typeargs_ = 0;
  clear_has_typeargs();
}
inline ::google::protobuf::int32 activityscuffle::typeargs() const {
  return typeargs_;
}
inline void activityscuffle::set_typeargs(::google::protobuf::int32 value) {
  set_has_typeargs();
  typeargs_ = value;
}

// optional int32 level = 3;
inline bool activityscuffle::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activityscuffle::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activityscuffle::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activityscuffle::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 activityscuffle::level() const {
  return level_;
}
inline void activityscuffle::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 stage = 4;
inline bool activityscuffle::has_stage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activityscuffle::set_has_stage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activityscuffle::clear_has_stage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activityscuffle::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 activityscuffle::stage() const {
  return stage_;
}
inline void activityscuffle::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional int64 mapID = 5;
inline bool activityscuffle::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activityscuffle::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activityscuffle::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activityscuffle::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 activityscuffle::mapid() const {
  return mapid_;
}
inline void activityscuffle::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int64 nextID = 6;
inline bool activityscuffle::has_nextid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activityscuffle::set_has_nextid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activityscuffle::clear_has_nextid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activityscuffle::clear_nextid() {
  nextid_ = GOOGLE_LONGLONG(0);
  clear_has_nextid();
}
inline ::google::protobuf::int64 activityscuffle::nextid() const {
  return nextid_;
}
inline void activityscuffle::set_nextid(::google::protobuf::int64 value) {
  set_has_nextid();
  nextid_ = value;
}

// optional int32 maxPoints = 7;
inline bool activityscuffle::has_maxpoints() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void activityscuffle::set_has_maxpoints() {
  _has_bits_[0] |= 0x00000040u;
}
inline void activityscuffle::clear_has_maxpoints() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void activityscuffle::clear_maxpoints() {
  maxpoints_ = 0;
  clear_has_maxpoints();
}
inline ::google::protobuf::int32 activityscuffle::maxpoints() const {
  return maxpoints_;
}
inline void activityscuffle::set_maxpoints(::google::protobuf::int32 value) {
  set_has_maxpoints();
  maxpoints_ = value;
}

// optional int32 pvePoints = 8;
inline bool activityscuffle::has_pvepoints() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void activityscuffle::set_has_pvepoints() {
  _has_bits_[0] |= 0x00000080u;
}
inline void activityscuffle::clear_has_pvepoints() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void activityscuffle::clear_pvepoints() {
  pvepoints_ = 0;
  clear_has_pvepoints();
}
inline ::google::protobuf::int32 activityscuffle::pvepoints() const {
  return pvepoints_;
}
inline void activityscuffle::set_pvepoints(::google::protobuf::int32 value) {
  set_has_pvepoints();
  pvepoints_ = value;
}

// optional int32 pvpPoints = 9;
inline bool activityscuffle::has_pvppoints() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void activityscuffle::set_has_pvppoints() {
  _has_bits_[0] |= 0x00000100u;
}
inline void activityscuffle::clear_has_pvppoints() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void activityscuffle::clear_pvppoints() {
  pvppoints_ = 0;
  clear_has_pvppoints();
}
inline ::google::protobuf::int32 activityscuffle::pvppoints() const {
  return pvppoints_;
}
inline void activityscuffle::set_pvppoints(::google::protobuf::int32 value) {
  set_has_pvppoints();
  pvppoints_ = value;
}

// optional int32 pvpHelpPoints = 10;
inline bool activityscuffle::has_pvphelppoints() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void activityscuffle::set_has_pvphelppoints() {
  _has_bits_[0] |= 0x00000200u;
}
inline void activityscuffle::clear_has_pvphelppoints() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void activityscuffle::clear_pvphelppoints() {
  pvphelppoints_ = 0;
  clear_has_pvphelppoints();
}
inline ::google::protobuf::int32 activityscuffle::pvphelppoints() const {
  return pvphelppoints_;
}
inline void activityscuffle::set_pvphelppoints(::google::protobuf::int32 value) {
  set_has_pvphelppoints();
  pvphelppoints_ = value;
}

// repeated .proto_ff.activityscufflerewardDesc reward = 11;
inline int activityscuffle::reward_size() const {
  return reward_.size();
}
inline void activityscuffle::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::activityscufflerewardDesc& activityscuffle::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::activityscufflerewardDesc* activityscuffle::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::activityscufflerewardDesc* activityscuffle::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscufflerewardDesc >&
activityscuffle::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscufflerewardDesc >*
activityscuffle::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_activityscuffle

// repeated .proto_ff.activityscuffle activityscuffle_List = 1;
inline int Sheet_activityscuffle::activityscuffle_list_size() const {
  return activityscuffle_list_.size();
}
inline void Sheet_activityscuffle::clear_activityscuffle_list() {
  activityscuffle_list_.Clear();
}
inline const ::proto_ff::activityscuffle& Sheet_activityscuffle::activityscuffle_list(int index) const {
  return activityscuffle_list_.Get(index);
}
inline ::proto_ff::activityscuffle* Sheet_activityscuffle::mutable_activityscuffle_list(int index) {
  return activityscuffle_list_.Mutable(index);
}
inline ::proto_ff::activityscuffle* Sheet_activityscuffle::add_activityscuffle_list() {
  return activityscuffle_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscuffle >&
Sheet_activityscuffle::activityscuffle_list() const {
  return activityscuffle_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityscuffle >*
Sheet_activityscuffle::mutable_activityscuffle_list() {
  return &activityscuffle_list_;
}

// -------------------------------------------------------------------

// activitychaosDragonsrewardDesc

// optional int64 Num = 1;
inline bool activitychaosDragonsrewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitychaosDragonsrewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitychaosDragonsrewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitychaosDragonsrewardDesc::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 activitychaosDragonsrewardDesc::num() const {
  return num_;
}
inline void activitychaosDragonsrewardDesc::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// optional int64 ID = 2;
inline bool activitychaosDragonsrewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitychaosDragonsrewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitychaosDragonsrewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitychaosDragonsrewardDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitychaosDragonsrewardDesc::id() const {
  return id_;
}
inline void activitychaosDragonsrewardDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitychaosDragons

// optional int32 id = 1;
inline bool activitychaosDragons::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitychaosDragons::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitychaosDragons::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitychaosDragons::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activitychaosDragons::id() const {
  return id_;
}
inline void activitychaosDragons::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 reward_type = 2;
inline bool activitychaosDragons::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitychaosDragons::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitychaosDragons::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitychaosDragons::clear_reward_type() {
  reward_type_ = 0;
  clear_has_reward_type();
}
inline ::google::protobuf::int32 activitychaosDragons::reward_type() const {
  return reward_type_;
}
inline void activitychaosDragons::set_reward_type(::google::protobuf::int32 value) {
  set_has_reward_type();
  reward_type_ = value;
}

// optional int32 reward_param = 3;
inline bool activitychaosDragons::has_reward_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitychaosDragons::set_has_reward_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitychaosDragons::clear_has_reward_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitychaosDragons::clear_reward_param() {
  reward_param_ = 0;
  clear_has_reward_param();
}
inline ::google::protobuf::int32 activitychaosDragons::reward_param() const {
  return reward_param_;
}
inline void activitychaosDragons::set_reward_param(::google::protobuf::int32 value) {
  set_has_reward_param();
  reward_param_ = value;
}

// optional int32 rankmin = 4;
inline bool activitychaosDragons::has_rankmin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activitychaosDragons::set_has_rankmin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activitychaosDragons::clear_has_rankmin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activitychaosDragons::clear_rankmin() {
  rankmin_ = 0;
  clear_has_rankmin();
}
inline ::google::protobuf::int32 activitychaosDragons::rankmin() const {
  return rankmin_;
}
inline void activitychaosDragons::set_rankmin(::google::protobuf::int32 value) {
  set_has_rankmin();
  rankmin_ = value;
}

// optional int32 rankmax = 5;
inline bool activitychaosDragons::has_rankmax() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activitychaosDragons::set_has_rankmax() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activitychaosDragons::clear_has_rankmax() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activitychaosDragons::clear_rankmax() {
  rankmax_ = 0;
  clear_has_rankmax();
}
inline ::google::protobuf::int32 activitychaosDragons::rankmax() const {
  return rankmax_;
}
inline void activitychaosDragons::set_rankmax(::google::protobuf::int32 value) {
  set_has_rankmax();
  rankmax_ = value;
}

// optional int64 getPoint = 6;
inline bool activitychaosDragons::has_getpoint() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activitychaosDragons::set_has_getpoint() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activitychaosDragons::clear_has_getpoint() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activitychaosDragons::clear_getpoint() {
  getpoint_ = GOOGLE_LONGLONG(0);
  clear_has_getpoint();
}
inline ::google::protobuf::int64 activitychaosDragons::getpoint() const {
  return getpoint_;
}
inline void activitychaosDragons::set_getpoint(::google::protobuf::int64 value) {
  set_has_getpoint();
  getpoint_ = value;
}

// repeated .proto_ff.activitychaosDragonsrewardDesc reward = 7;
inline int activitychaosDragons::reward_size() const {
  return reward_.size();
}
inline void activitychaosDragons::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::activitychaosDragonsrewardDesc& activitychaosDragons::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::activitychaosDragonsrewardDesc* activitychaosDragons::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::activitychaosDragonsrewardDesc* activitychaosDragons::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragonsrewardDesc >&
activitychaosDragons::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragonsrewardDesc >*
activitychaosDragons::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_activitychaosDragons

// repeated .proto_ff.activitychaosDragons activitychaosDragons_List = 1;
inline int Sheet_activitychaosDragons::activitychaosdragons_list_size() const {
  return activitychaosdragons_list_.size();
}
inline void Sheet_activitychaosDragons::clear_activitychaosdragons_list() {
  activitychaosdragons_list_.Clear();
}
inline const ::proto_ff::activitychaosDragons& Sheet_activitychaosDragons::activitychaosdragons_list(int index) const {
  return activitychaosdragons_list_.Get(index);
}
inline ::proto_ff::activitychaosDragons* Sheet_activitychaosDragons::mutable_activitychaosdragons_list(int index) {
  return activitychaosdragons_list_.Mutable(index);
}
inline ::proto_ff::activitychaosDragons* Sheet_activitychaosDragons::add_activitychaosdragons_list() {
  return activitychaosdragons_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragons >&
Sheet_activitychaosDragons::activitychaosdragons_list() const {
  return activitychaosdragons_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitychaosDragons >*
Sheet_activitychaosDragons::mutable_activitychaosdragons_list() {
  return &activitychaosdragons_list_;
}

// -------------------------------------------------------------------

// activitycircuscircusDesc

// optional int32 a = 1;
inline bool activitycircuscircusDesc::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircuscircusDesc::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircuscircusDesc::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircuscircusDesc::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 activitycircuscircusDesc::a() const {
  return a_;
}
inline void activitycircuscircusDesc::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
}

// optional int64 b = 2;
inline bool activitycircuscircusDesc::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitycircuscircusDesc::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitycircuscircusDesc::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitycircuscircusDesc::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
  clear_has_b();
}
inline ::google::protobuf::int64 activitycircuscircusDesc::b() const {
  return b_;
}
inline void activitycircuscircusDesc::set_b(::google::protobuf::int64 value) {
  set_has_b();
  b_ = value;
}

// -------------------------------------------------------------------

// activitycircus

// optional int64 circusID = 1;
inline bool activitycircus::has_circusid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircus::set_has_circusid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircus::clear_has_circusid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircus::clear_circusid() {
  circusid_ = GOOGLE_LONGLONG(0);
  clear_has_circusid();
}
inline ::google::protobuf::int64 activitycircus::circusid() const {
  return circusid_;
}
inline void activitycircus::set_circusid(::google::protobuf::int64 value) {
  set_has_circusid();
  circusid_ = value;
}

// optional int64 powerLow = 2;
inline bool activitycircus::has_powerlow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitycircus::set_has_powerlow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitycircus::clear_has_powerlow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitycircus::clear_powerlow() {
  powerlow_ = GOOGLE_LONGLONG(0);
  clear_has_powerlow();
}
inline ::google::protobuf::int64 activitycircus::powerlow() const {
  return powerlow_;
}
inline void activitycircus::set_powerlow(::google::protobuf::int64 value) {
  set_has_powerlow();
  powerlow_ = value;
}

// optional int64 powerUp = 3;
inline bool activitycircus::has_powerup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitycircus::set_has_powerup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitycircus::clear_has_powerup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitycircus::clear_powerup() {
  powerup_ = GOOGLE_LONGLONG(0);
  clear_has_powerup();
}
inline ::google::protobuf::int64 activitycircus::powerup() const {
  return powerup_;
}
inline void activitycircus::set_powerup(::google::protobuf::int64 value) {
  set_has_powerup();
  powerup_ = value;
}

// repeated .proto_ff.activitycircuscircusDesc circus = 4;
inline int activitycircus::circus_size() const {
  return circus_.size();
}
inline void activitycircus::clear_circus() {
  circus_.Clear();
}
inline const ::proto_ff::activitycircuscircusDesc& activitycircus::circus(int index) const {
  return circus_.Get(index);
}
inline ::proto_ff::activitycircuscircusDesc* activitycircus::mutable_circus(int index) {
  return circus_.Mutable(index);
}
inline ::proto_ff::activitycircuscircusDesc* activitycircus::add_circus() {
  return circus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircuscircusDesc >&
activitycircus::circus() const {
  return circus_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircuscircusDesc >*
activitycircus::mutable_circus() {
  return &circus_;
}

// -------------------------------------------------------------------

// Sheet_activitycircus

// repeated .proto_ff.activitycircus activitycircus_List = 1;
inline int Sheet_activitycircus::activitycircus_list_size() const {
  return activitycircus_list_.size();
}
inline void Sheet_activitycircus::clear_activitycircus_list() {
  activitycircus_list_.Clear();
}
inline const ::proto_ff::activitycircus& Sheet_activitycircus::activitycircus_list(int index) const {
  return activitycircus_list_.Get(index);
}
inline ::proto_ff::activitycircus* Sheet_activitycircus::mutable_activitycircus_list(int index) {
  return activitycircus_list_.Mutable(index);
}
inline ::proto_ff::activitycircus* Sheet_activitycircus::add_activitycircus_list() {
  return activitycircus_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircus >&
Sheet_activitycircus::activitycircus_list() const {
  return activitycircus_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircus >*
Sheet_activitycircus::mutable_activitycircus_list() {
  return &activitycircus_list_;
}

// -------------------------------------------------------------------

// activitycircusNumitemDesc

// optional int32 Num = 1;
inline bool activitycircusNumitemDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircusNumitemDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircusNumitemDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircusNumitemDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitycircusNumitemDesc::num() const {
  return num_;
}
inline void activitycircusNumitemDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 Id = 2;
inline bool activitycircusNumitemDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitycircusNumitemDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitycircusNumitemDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitycircusNumitemDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitycircusNumitemDesc::id() const {
  return id_;
}
inline void activitycircusNumitemDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitycircusNum

// optional int32 RankID = 1;
inline bool activitycircusNum::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircusNum::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircusNum::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircusNum::clear_rankid() {
  rankid_ = 0;
  clear_has_rankid();
}
inline ::google::protobuf::int32 activitycircusNum::rankid() const {
  return rankid_;
}
inline void activitycircusNum::set_rankid(::google::protobuf::int32 value) {
  set_has_rankid();
  rankid_ = value;
}

// repeated .proto_ff.activitycircusNumitemDesc item = 2;
inline int activitycircusNum::item_size() const {
  return item_.size();
}
inline void activitycircusNum::clear_item() {
  item_.Clear();
}
inline const ::proto_ff::activitycircusNumitemDesc& activitycircusNum::item(int index) const {
  return item_.Get(index);
}
inline ::proto_ff::activitycircusNumitemDesc* activitycircusNum::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::proto_ff::activitycircusNumitemDesc* activitycircusNum::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNumitemDesc >&
activitycircusNum::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNumitemDesc >*
activitycircusNum::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// Sheet_activitycircusNum

// repeated .proto_ff.activitycircusNum activitycircusNum_List = 1;
inline int Sheet_activitycircusNum::activitycircusnum_list_size() const {
  return activitycircusnum_list_.size();
}
inline void Sheet_activitycircusNum::clear_activitycircusnum_list() {
  activitycircusnum_list_.Clear();
}
inline const ::proto_ff::activitycircusNum& Sheet_activitycircusNum::activitycircusnum_list(int index) const {
  return activitycircusnum_list_.Get(index);
}
inline ::proto_ff::activitycircusNum* Sheet_activitycircusNum::mutable_activitycircusnum_list(int index) {
  return activitycircusnum_list_.Mutable(index);
}
inline ::proto_ff::activitycircusNum* Sheet_activitycircusNum::add_activitycircusnum_list() {
  return activitycircusnum_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNum >&
Sheet_activitycircusNum::activitycircusnum_list() const {
  return activitycircusnum_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusNum >*
Sheet_activitycircusNum::mutable_activitycircusnum_list() {
  return &activitycircusnum_list_;
}

// -------------------------------------------------------------------

// activitycircusDanitemDesc

// optional int32 Num = 1;
inline bool activitycircusDanitemDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircusDanitemDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircusDanitemDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircusDanitemDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitycircusDanitemDesc::num() const {
  return num_;
}
inline void activitycircusDanitemDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 Id = 2;
inline bool activitycircusDanitemDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitycircusDanitemDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitycircusDanitemDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitycircusDanitemDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitycircusDanitemDesc::id() const {
  return id_;
}
inline void activitycircusDanitemDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitycircusDancircusDesc

// optional int32 Num = 1;
inline bool activitycircusDancircusDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircusDancircusDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircusDancircusDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircusDancircusDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitycircusDancircusDesc::num() const {
  return num_;
}
inline void activitycircusDancircusDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 Id = 2;
inline bool activitycircusDancircusDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitycircusDancircusDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitycircusDancircusDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitycircusDancircusDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitycircusDancircusDesc::id() const {
  return id_;
}
inline void activitycircusDancircusDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitycircusDan

// optional int32 changCiID = 1;
inline bool activitycircusDan::has_changciid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitycircusDan::set_has_changciid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitycircusDan::clear_has_changciid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitycircusDan::clear_changciid() {
  changciid_ = 0;
  clear_has_changciid();
}
inline ::google::protobuf::int32 activitycircusDan::changciid() const {
  return changciid_;
}
inline void activitycircusDan::set_changciid(::google::protobuf::int32 value) {
  set_has_changciid();
  changciid_ = value;
}

// repeated .proto_ff.activitycircusDanitemDesc item = 2;
inline int activitycircusDan::item_size() const {
  return item_.size();
}
inline void activitycircusDan::clear_item() {
  item_.Clear();
}
inline const ::proto_ff::activitycircusDanitemDesc& activitycircusDan::item(int index) const {
  return item_.Get(index);
}
inline ::proto_ff::activitycircusDanitemDesc* activitycircusDan::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::proto_ff::activitycircusDanitemDesc* activitycircusDan::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDanitemDesc >&
activitycircusDan::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDanitemDesc >*
activitycircusDan::mutable_item() {
  return &item_;
}

// repeated .proto_ff.activitycircusDancircusDesc circus = 3;
inline int activitycircusDan::circus_size() const {
  return circus_.size();
}
inline void activitycircusDan::clear_circus() {
  circus_.Clear();
}
inline const ::proto_ff::activitycircusDancircusDesc& activitycircusDan::circus(int index) const {
  return circus_.Get(index);
}
inline ::proto_ff::activitycircusDancircusDesc* activitycircusDan::mutable_circus(int index) {
  return circus_.Mutable(index);
}
inline ::proto_ff::activitycircusDancircusDesc* activitycircusDan::add_circus() {
  return circus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDancircusDesc >&
activitycircusDan::circus() const {
  return circus_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDancircusDesc >*
activitycircusDan::mutable_circus() {
  return &circus_;
}

// -------------------------------------------------------------------

// Sheet_activitycircusDan

// repeated .proto_ff.activitycircusDan activitycircusDan_List = 1;
inline int Sheet_activitycircusDan::activitycircusdan_list_size() const {
  return activitycircusdan_list_.size();
}
inline void Sheet_activitycircusDan::clear_activitycircusdan_list() {
  activitycircusdan_list_.Clear();
}
inline const ::proto_ff::activitycircusDan& Sheet_activitycircusDan::activitycircusdan_list(int index) const {
  return activitycircusdan_list_.Get(index);
}
inline ::proto_ff::activitycircusDan* Sheet_activitycircusDan::mutable_activitycircusdan_list(int index) {
  return activitycircusdan_list_.Mutable(index);
}
inline ::proto_ff::activitycircusDan* Sheet_activitycircusDan::add_activitycircusdan_list() {
  return activitycircusdan_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDan >&
Sheet_activitycircusDan::activitycircusdan_list() const {
  return activitycircusdan_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitycircusDan >*
Sheet_activitycircusDan::mutable_activitycircusdan_list() {
  return &activitycircusdan_list_;
}

// -------------------------------------------------------------------

// activitymathrule

// optional int64 activeId = 1;
inline bool activitymathrule::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitymathrule::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitymathrule::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitymathrule::clear_activeid() {
  activeid_ = GOOGLE_LONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::int64 activitymathrule::activeid() const {
  return activeid_;
}
inline void activitymathrule::set_activeid(::google::protobuf::int64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional int32 type = 2;
inline bool activitymathrule::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitymathrule::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitymathrule::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitymathrule::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 activitymathrule::type() const {
  return type_;
}
inline void activitymathrule::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 mapId = 3;
inline bool activitymathrule::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitymathrule::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitymathrule::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitymathrule::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 activitymathrule::mapid() const {
  return mapid_;
}
inline void activitymathrule::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int64 duplicateId = 4;
inline bool activitymathrule::has_duplicateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activitymathrule::set_has_duplicateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activitymathrule::clear_has_duplicateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activitymathrule::clear_duplicateid() {
  duplicateid_ = GOOGLE_LONGLONG(0);
  clear_has_duplicateid();
}
inline ::google::protobuf::int64 activitymathrule::duplicateid() const {
  return duplicateid_;
}
inline void activitymathrule::set_duplicateid(::google::protobuf::int64 value) {
  set_has_duplicateid();
  duplicateid_ = value;
}

// optional int32 time = 5;
inline bool activitymathrule::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activitymathrule::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activitymathrule::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activitymathrule::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 activitymathrule::time() const {
  return time_;
}
inline void activitymathrule::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 winnerPoints = 6;
inline bool activitymathrule::has_winnerpoints() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activitymathrule::set_has_winnerpoints() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activitymathrule::clear_has_winnerpoints() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activitymathrule::clear_winnerpoints() {
  winnerpoints_ = 0;
  clear_has_winnerpoints();
}
inline ::google::protobuf::int32 activitymathrule::winnerpoints() const {
  return winnerpoints_;
}
inline void activitymathrule::set_winnerpoints(::google::protobuf::int32 value) {
  set_has_winnerpoints();
  winnerpoints_ = value;
}

// optional int32 loserPoints = 7;
inline bool activitymathrule::has_loserpoints() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void activitymathrule::set_has_loserpoints() {
  _has_bits_[0] |= 0x00000040u;
}
inline void activitymathrule::clear_has_loserpoints() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void activitymathrule::clear_loserpoints() {
  loserpoints_ = 0;
  clear_has_loserpoints();
}
inline ::google::protobuf::int32 activitymathrule::loserpoints() const {
  return loserpoints_;
}
inline void activitymathrule::set_loserpoints(::google::protobuf::int32 value) {
  set_has_loserpoints();
  loserpoints_ = value;
}

// optional int32 drawPoints = 8;
inline bool activitymathrule::has_drawpoints() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void activitymathrule::set_has_drawpoints() {
  _has_bits_[0] |= 0x00000080u;
}
inline void activitymathrule::clear_has_drawpoints() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void activitymathrule::clear_drawpoints() {
  drawpoints_ = 0;
  clear_has_drawpoints();
}
inline ::google::protobuf::int32 activitymathrule::drawpoints() const {
  return drawpoints_;
}
inline void activitymathrule::set_drawpoints(::google::protobuf::int32 value) {
  set_has_drawpoints();
  drawpoints_ = value;
}

// optional int32 rewardtype = 9;
inline bool activitymathrule::has_rewardtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void activitymathrule::set_has_rewardtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void activitymathrule::clear_has_rewardtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void activitymathrule::clear_rewardtype() {
  rewardtype_ = 0;
  clear_has_rewardtype();
}
inline ::google::protobuf::int32 activitymathrule::rewardtype() const {
  return rewardtype_;
}
inline void activitymathrule::set_rewardtype(::google::protobuf::int32 value) {
  set_has_rewardtype();
  rewardtype_ = value;
}

// -------------------------------------------------------------------

// Sheet_activitymathrule

// repeated .proto_ff.activitymathrule activitymathrule_List = 1;
inline int Sheet_activitymathrule::activitymathrule_list_size() const {
  return activitymathrule_list_.size();
}
inline void Sheet_activitymathrule::clear_activitymathrule_list() {
  activitymathrule_list_.Clear();
}
inline const ::proto_ff::activitymathrule& Sheet_activitymathrule::activitymathrule_list(int index) const {
  return activitymathrule_list_.Get(index);
}
inline ::proto_ff::activitymathrule* Sheet_activitymathrule::mutable_activitymathrule_list(int index) {
  return activitymathrule_list_.Mutable(index);
}
inline ::proto_ff::activitymathrule* Sheet_activitymathrule::add_activitymathrule_list() {
  return activitymathrule_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrule >&
Sheet_activitymathrule::activitymathrule_list() const {
  return activitymathrule_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrule >*
Sheet_activitymathrule::mutable_activitymathrule_list() {
  return &activitymathrule_list_;
}

// -------------------------------------------------------------------

// activitymathrewardrewardDesc

// optional int32 Num = 1;
inline bool activitymathrewardrewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitymathrewardrewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitymathrewardrewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitymathrewardrewardDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitymathrewardrewardDesc::num() const {
  return num_;
}
inline void activitymathrewardrewardDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 ID = 2;
inline bool activitymathrewardrewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitymathrewardrewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitymathrewardrewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitymathrewardrewardDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitymathrewardrewardDesc::id() const {
  return id_;
}
inline void activitymathrewardrewardDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitymathreward

// optional int32 ID = 1;
inline bool activitymathreward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitymathreward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitymathreward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitymathreward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activitymathreward::id() const {
  return id_;
}
inline void activitymathreward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 rewardtype = 2;
inline bool activitymathreward::has_rewardtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitymathreward::set_has_rewardtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitymathreward::clear_has_rewardtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitymathreward::clear_rewardtype() {
  rewardtype_ = 0;
  clear_has_rewardtype();
}
inline ::google::protobuf::int32 activitymathreward::rewardtype() const {
  return rewardtype_;
}
inline void activitymathreward::set_rewardtype(::google::protobuf::int32 value) {
  set_has_rewardtype();
  rewardtype_ = value;
}

// optional int32 rewardlevel = 3;
inline bool activitymathreward::has_rewardlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitymathreward::set_has_rewardlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitymathreward::clear_has_rewardlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitymathreward::clear_rewardlevel() {
  rewardlevel_ = 0;
  clear_has_rewardlevel();
}
inline ::google::protobuf::int32 activitymathreward::rewardlevel() const {
  return rewardlevel_;
}
inline void activitymathreward::set_rewardlevel(::google::protobuf::int32 value) {
  set_has_rewardlevel();
  rewardlevel_ = value;
}

// repeated .proto_ff.activitymathrewardrewardDesc reward = 4;
inline int activitymathreward::reward_size() const {
  return reward_.size();
}
inline void activitymathreward::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::activitymathrewardrewardDesc& activitymathreward::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::activitymathrewardrewardDesc* activitymathreward::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::activitymathrewardrewardDesc* activitymathreward::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrewardrewardDesc >&
activitymathreward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathrewardrewardDesc >*
activitymathreward::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// Sheet_activitymathreward

// repeated .proto_ff.activitymathreward activitymathreward_List = 1;
inline int Sheet_activitymathreward::activitymathreward_list_size() const {
  return activitymathreward_list_.size();
}
inline void Sheet_activitymathreward::clear_activitymathreward_list() {
  activitymathreward_list_.Clear();
}
inline const ::proto_ff::activitymathreward& Sheet_activitymathreward::activitymathreward_list(int index) const {
  return activitymathreward_list_.Get(index);
}
inline ::proto_ff::activitymathreward* Sheet_activitymathreward::mutable_activitymathreward_list(int index) {
  return activitymathreward_list_.Mutable(index);
}
inline ::proto_ff::activitymathreward* Sheet_activitymathreward::add_activitymathreward_list() {
  return activitymathreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathreward >&
Sheet_activitymathreward::activitymathreward_list() const {
  return activitymathreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitymathreward >*
Sheet_activitymathreward::mutable_activitymathreward_list() {
  return &activitymathreward_list_;
}

// -------------------------------------------------------------------

// activitygvgConst

// optional int32 id = 1;
inline bool activitygvgConst::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgConst::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgConst::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgConst::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activitygvgConst::id() const {
  return id_;
}
inline void activitygvgConst::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 constantdata = 2;
inline bool activitygvgConst::has_constantdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgConst::set_has_constantdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgConst::clear_has_constantdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgConst::clear_constantdata() {
  constantdata_ = GOOGLE_LONGLONG(0);
  clear_has_constantdata();
}
inline ::google::protobuf::int64 activitygvgConst::constantdata() const {
  return constantdata_;
}
inline void activitygvgConst::set_constantdata(::google::protobuf::int64 value) {
  set_has_constantdata();
  constantdata_ = value;
}

// optional string stringdata = 3;
inline bool activitygvgConst::has_stringdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitygvgConst::set_has_stringdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitygvgConst::clear_has_stringdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitygvgConst::clear_stringdata() {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    stringdata_->clear();
  }
  clear_has_stringdata();
}
inline const ::std::string& activitygvgConst::stringdata() const {
  return *stringdata_;
}
inline void activitygvgConst::set_stringdata(const ::std::string& value) {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  stringdata_->assign(value);
}
inline void activitygvgConst::set_stringdata(const char* value) {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  stringdata_->assign(value);
}
inline void activitygvgConst::set_stringdata(const char* value, size_t size) {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  stringdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitygvgConst::mutable_stringdata() {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  return stringdata_;
}
inline ::std::string* activitygvgConst::release_stringdata() {
  clear_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stringdata_;
    stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitygvgConst::set_allocated_stringdata(::std::string* stringdata) {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    delete stringdata_;
  }
  if (stringdata) {
    set_has_stringdata();
    stringdata_ = stringdata;
  } else {
    clear_has_stringdata();
    stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_activitygvgConst

// repeated .proto_ff.activitygvgConst activitygvgConst_List = 1;
inline int Sheet_activitygvgConst::activitygvgconst_list_size() const {
  return activitygvgconst_list_.size();
}
inline void Sheet_activitygvgConst::clear_activitygvgconst_list() {
  activitygvgconst_list_.Clear();
}
inline const ::proto_ff::activitygvgConst& Sheet_activitygvgConst::activitygvgconst_list(int index) const {
  return activitygvgconst_list_.Get(index);
}
inline ::proto_ff::activitygvgConst* Sheet_activitygvgConst::mutable_activitygvgconst_list(int index) {
  return activitygvgconst_list_.Mutable(index);
}
inline ::proto_ff::activitygvgConst* Sheet_activitygvgConst::add_activitygvgconst_list() {
  return activitygvgconst_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgConst >&
Sheet_activitygvgConst::activitygvgconst_list() const {
  return activitygvgconst_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgConst >*
Sheet_activitygvgConst::mutable_activitygvgconst_list() {
  return &activitygvgconst_list_;
}

// -------------------------------------------------------------------

// activitygvgRankRewardgMemberrewardDesc

// optional int32 Num = 1;
inline bool activitygvgRankRewardgMemberrewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgRankRewardgMemberrewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgRankRewardgMemberrewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgRankRewardgMemberrewardDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitygvgRankRewardgMemberrewardDesc::num() const {
  return num_;
}
inline void activitygvgRankRewardgMemberrewardDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 id = 2;
inline bool activitygvgRankRewardgMemberrewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgRankRewardgMemberrewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgRankRewardgMemberrewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgRankRewardgMemberrewardDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitygvgRankRewardgMemberrewardDesc::id() const {
  return id_;
}
inline void activitygvgRankRewardgMemberrewardDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitygvgRankRewardgLeaderrewardDesc

// optional int32 Num = 1;
inline bool activitygvgRankRewardgLeaderrewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgRankRewardgLeaderrewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgRankRewardgLeaderrewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgRankRewardgLeaderrewardDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitygvgRankRewardgLeaderrewardDesc::num() const {
  return num_;
}
inline void activitygvgRankRewardgLeaderrewardDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 id = 2;
inline bool activitygvgRankRewardgLeaderrewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgRankRewardgLeaderrewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgRankRewardgLeaderrewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgRankRewardgLeaderrewardDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitygvgRankRewardgLeaderrewardDesc::id() const {
  return id_;
}
inline void activitygvgRankRewardgLeaderrewardDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitygvgRankReward

// optional int32 id = 1;
inline bool activitygvgRankReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgRankReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgRankReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgRankReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activitygvgRankReward::id() const {
  return id_;
}
inline void activitygvgRankReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 gLeaderId = 2;
inline bool activitygvgRankReward::has_gleaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgRankReward::set_has_gleaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgRankReward::clear_has_gleaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgRankReward::clear_gleaderid() {
  gleaderid_ = GOOGLE_LONGLONG(0);
  clear_has_gleaderid();
}
inline ::google::protobuf::int64 activitygvgRankReward::gleaderid() const {
  return gleaderid_;
}
inline void activitygvgRankReward::set_gleaderid(::google::protobuf::int64 value) {
  set_has_gleaderid();
  gleaderid_ = value;
}

// repeated .proto_ff.activitygvgRankRewardgMemberrewardDesc gMemberreward = 3;
inline int activitygvgRankReward::gmemberreward_size() const {
  return gmemberreward_.size();
}
inline void activitygvgRankReward::clear_gmemberreward() {
  gmemberreward_.Clear();
}
inline const ::proto_ff::activitygvgRankRewardgMemberrewardDesc& activitygvgRankReward::gmemberreward(int index) const {
  return gmemberreward_.Get(index);
}
inline ::proto_ff::activitygvgRankRewardgMemberrewardDesc* activitygvgRankReward::mutable_gmemberreward(int index) {
  return gmemberreward_.Mutable(index);
}
inline ::proto_ff::activitygvgRankRewardgMemberrewardDesc* activitygvgRankReward::add_gmemberreward() {
  return gmemberreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgMemberrewardDesc >&
activitygvgRankReward::gmemberreward() const {
  return gmemberreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgMemberrewardDesc >*
activitygvgRankReward::mutable_gmemberreward() {
  return &gmemberreward_;
}

// repeated .proto_ff.activitygvgRankRewardgLeaderrewardDesc gLeaderreward = 4;
inline int activitygvgRankReward::gleaderreward_size() const {
  return gleaderreward_.size();
}
inline void activitygvgRankReward::clear_gleaderreward() {
  gleaderreward_.Clear();
}
inline const ::proto_ff::activitygvgRankRewardgLeaderrewardDesc& activitygvgRankReward::gleaderreward(int index) const {
  return gleaderreward_.Get(index);
}
inline ::proto_ff::activitygvgRankRewardgLeaderrewardDesc* activitygvgRankReward::mutable_gleaderreward(int index) {
  return gleaderreward_.Mutable(index);
}
inline ::proto_ff::activitygvgRankRewardgLeaderrewardDesc* activitygvgRankReward::add_gleaderreward() {
  return gleaderreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgLeaderrewardDesc >&
activitygvgRankReward::gleaderreward() const {
  return gleaderreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankRewardgLeaderrewardDesc >*
activitygvgRankReward::mutable_gleaderreward() {
  return &gleaderreward_;
}

// -------------------------------------------------------------------

// Sheet_activitygvgRankReward

// repeated .proto_ff.activitygvgRankReward activitygvgRankReward_List = 1;
inline int Sheet_activitygvgRankReward::activitygvgrankreward_list_size() const {
  return activitygvgrankreward_list_.size();
}
inline void Sheet_activitygvgRankReward::clear_activitygvgrankreward_list() {
  activitygvgrankreward_list_.Clear();
}
inline const ::proto_ff::activitygvgRankReward& Sheet_activitygvgRankReward::activitygvgrankreward_list(int index) const {
  return activitygvgrankreward_list_.Get(index);
}
inline ::proto_ff::activitygvgRankReward* Sheet_activitygvgRankReward::mutable_activitygvgrankreward_list(int index) {
  return activitygvgrankreward_list_.Mutable(index);
}
inline ::proto_ff::activitygvgRankReward* Sheet_activitygvgRankReward::add_activitygvgrankreward_list() {
  return activitygvgrankreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankReward >&
Sheet_activitygvgRankReward::activitygvgrankreward_list() const {
  return activitygvgrankreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRankReward >*
Sheet_activitygvgRankReward::mutable_activitygvgrankreward_list() {
  return &activitygvgrankreward_list_;
}

// -------------------------------------------------------------------

// activitygvgRewardrewardDesc

// optional int32 Num = 1;
inline bool activitygvgRewardrewardDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgRewardrewardDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgRewardrewardDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgRewardrewardDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitygvgRewardrewardDesc::num() const {
  return num_;
}
inline void activitygvgRewardrewardDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 id = 2;
inline bool activitygvgRewardrewardDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgRewardrewardDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgRewardrewardDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgRewardrewardDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitygvgRewardrewardDesc::id() const {
  return id_;
}
inline void activitygvgRewardrewardDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitygvgRewardfinalityDesc

// optional int32 Num = 1;
inline bool activitygvgRewardfinalityDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgRewardfinalityDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgRewardfinalityDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgRewardfinalityDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 activitygvgRewardfinalityDesc::num() const {
  return num_;
}
inline void activitygvgRewardfinalityDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 id = 2;
inline bool activitygvgRewardfinalityDesc::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgRewardfinalityDesc::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgRewardfinalityDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgRewardfinalityDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 activitygvgRewardfinalityDesc::id() const {
  return id_;
}
inline void activitygvgRewardfinalityDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// activitygvgReward

// optional int32 id = 1;
inline bool activitygvgReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitygvgReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitygvgReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitygvgReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activitygvgReward::id() const {
  return id_;
}
inline void activitygvgReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 finalityskill = 2;
inline bool activitygvgReward::has_finalityskill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitygvgReward::set_has_finalityskill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitygvgReward::clear_has_finalityskill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitygvgReward::clear_finalityskill() {
  finalityskill_ = GOOGLE_LONGLONG(0);
  clear_has_finalityskill();
}
inline ::google::protobuf::int64 activitygvgReward::finalityskill() const {
  return finalityskill_;
}
inline void activitygvgReward::set_finalityskill(::google::protobuf::int64 value) {
  set_has_finalityskill();
  finalityskill_ = value;
}

// repeated .proto_ff.activitygvgRewardrewardDesc reward = 3;
inline int activitygvgReward::reward_size() const {
  return reward_.size();
}
inline void activitygvgReward::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::activitygvgRewardrewardDesc& activitygvgReward::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::activitygvgRewardrewardDesc* activitygvgReward::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::activitygvgRewardrewardDesc* activitygvgReward::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardrewardDesc >&
activitygvgReward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardrewardDesc >*
activitygvgReward::mutable_reward() {
  return &reward_;
}

// repeated .proto_ff.activitygvgRewardfinalityDesc finality = 4;
inline int activitygvgReward::finality_size() const {
  return finality_.size();
}
inline void activitygvgReward::clear_finality() {
  finality_.Clear();
}
inline const ::proto_ff::activitygvgRewardfinalityDesc& activitygvgReward::finality(int index) const {
  return finality_.Get(index);
}
inline ::proto_ff::activitygvgRewardfinalityDesc* activitygvgReward::mutable_finality(int index) {
  return finality_.Mutable(index);
}
inline ::proto_ff::activitygvgRewardfinalityDesc* activitygvgReward::add_finality() {
  return finality_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardfinalityDesc >&
activitygvgReward::finality() const {
  return finality_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgRewardfinalityDesc >*
activitygvgReward::mutable_finality() {
  return &finality_;
}

// -------------------------------------------------------------------

// Sheet_activitygvgReward

// repeated .proto_ff.activitygvgReward activitygvgReward_List = 1;
inline int Sheet_activitygvgReward::activitygvgreward_list_size() const {
  return activitygvgreward_list_.size();
}
inline void Sheet_activitygvgReward::clear_activitygvgreward_list() {
  activitygvgreward_list_.Clear();
}
inline const ::proto_ff::activitygvgReward& Sheet_activitygvgReward::activitygvgreward_list(int index) const {
  return activitygvgreward_list_.Get(index);
}
inline ::proto_ff::activitygvgReward* Sheet_activitygvgReward::mutable_activitygvgreward_list(int index) {
  return activitygvgreward_list_.Mutable(index);
}
inline ::proto_ff::activitygvgReward* Sheet_activitygvgReward::add_activitygvgreward_list() {
  return activitygvgreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgReward >&
Sheet_activitygvgReward::activitygvgreward_list() const {
  return activitygvgreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitygvgReward >*
Sheet_activitygvgReward::mutable_activitygvgreward_list() {
  return &activitygvgreward_list_;
}

// -------------------------------------------------------------------

// activityworldTreasureConst

// optional int32 id = 1;
inline bool activityworldTreasureConst::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activityworldTreasureConst::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activityworldTreasureConst::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activityworldTreasureConst::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activityworldTreasureConst::id() const {
  return id_;
}
inline void activityworldTreasureConst::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 constantdata = 2;
inline bool activityworldTreasureConst::has_constantdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activityworldTreasureConst::set_has_constantdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activityworldTreasureConst::clear_has_constantdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activityworldTreasureConst::clear_constantdata() {
  constantdata_ = GOOGLE_LONGLONG(0);
  clear_has_constantdata();
}
inline ::google::protobuf::int64 activityworldTreasureConst::constantdata() const {
  return constantdata_;
}
inline void activityworldTreasureConst::set_constantdata(::google::protobuf::int64 value) {
  set_has_constantdata();
  constantdata_ = value;
}

// -------------------------------------------------------------------

// Sheet_activityworldTreasureConst

// repeated .proto_ff.activityworldTreasureConst activityworldTreasureConst_List = 1;
inline int Sheet_activityworldTreasureConst::activityworldtreasureconst_list_size() const {
  return activityworldtreasureconst_list_.size();
}
inline void Sheet_activityworldTreasureConst::clear_activityworldtreasureconst_list() {
  activityworldtreasureconst_list_.Clear();
}
inline const ::proto_ff::activityworldTreasureConst& Sheet_activityworldTreasureConst::activityworldtreasureconst_list(int index) const {
  return activityworldtreasureconst_list_.Get(index);
}
inline ::proto_ff::activityworldTreasureConst* Sheet_activityworldTreasureConst::mutable_activityworldtreasureconst_list(int index) {
  return activityworldtreasureconst_list_.Mutable(index);
}
inline ::proto_ff::activityworldTreasureConst* Sheet_activityworldTreasureConst::add_activityworldtreasureconst_list() {
  return activityworldtreasureconst_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureConst >&
Sheet_activityworldTreasureConst::activityworldtreasureconst_list() const {
  return activityworldtreasureconst_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureConst >*
Sheet_activityworldTreasureConst::mutable_activityworldtreasureconst_list() {
  return &activityworldtreasureconst_list_;
}

// -------------------------------------------------------------------

// activityworldTreasureMap

// optional int64 mapID = 1;
inline bool activityworldTreasureMap::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activityworldTreasureMap::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activityworldTreasureMap::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activityworldTreasureMap::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 activityworldTreasureMap::mapid() const {
  return mapid_;
}
inline void activityworldTreasureMap::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional string pathID = 2;
inline bool activityworldTreasureMap::has_pathid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activityworldTreasureMap::set_has_pathid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activityworldTreasureMap::clear_has_pathid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activityworldTreasureMap::clear_pathid() {
  if (pathid_ != &::google::protobuf::internal::kEmptyString) {
    pathid_->clear();
  }
  clear_has_pathid();
}
inline const ::std::string& activityworldTreasureMap::pathid() const {
  return *pathid_;
}
inline void activityworldTreasureMap::set_pathid(const ::std::string& value) {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  pathid_->assign(value);
}
inline void activityworldTreasureMap::set_pathid(const char* value) {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  pathid_->assign(value);
}
inline void activityworldTreasureMap::set_pathid(const char* value, size_t size) {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  pathid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activityworldTreasureMap::mutable_pathid() {
  set_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    pathid_ = new ::std::string;
  }
  return pathid_;
}
inline ::std::string* activityworldTreasureMap::release_pathid() {
  clear_has_pathid();
  if (pathid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pathid_;
    pathid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activityworldTreasureMap::set_allocated_pathid(::std::string* pathid) {
  if (pathid_ != &::google::protobuf::internal::kEmptyString) {
    delete pathid_;
  }
  if (pathid) {
    set_has_pathid();
    pathid_ = pathid;
  } else {
    clear_has_pathid();
    pathid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_activityworldTreasureMap

// repeated .proto_ff.activityworldTreasureMap activityworldTreasureMap_List = 1;
inline int Sheet_activityworldTreasureMap::activityworldtreasuremap_list_size() const {
  return activityworldtreasuremap_list_.size();
}
inline void Sheet_activityworldTreasureMap::clear_activityworldtreasuremap_list() {
  activityworldtreasuremap_list_.Clear();
}
inline const ::proto_ff::activityworldTreasureMap& Sheet_activityworldTreasureMap::activityworldtreasuremap_list(int index) const {
  return activityworldtreasuremap_list_.Get(index);
}
inline ::proto_ff::activityworldTreasureMap* Sheet_activityworldTreasureMap::mutable_activityworldtreasuremap_list(int index) {
  return activityworldtreasuremap_list_.Mutable(index);
}
inline ::proto_ff::activityworldTreasureMap* Sheet_activityworldTreasureMap::add_activityworldtreasuremap_list() {
  return activityworldtreasuremap_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMap >&
Sheet_activityworldTreasureMap::activityworldtreasuremap_list() const {
  return activityworldtreasuremap_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMap >*
Sheet_activityworldTreasureMap::mutable_activityworldtreasuremap_list() {
  return &activityworldtreasuremap_list_;
}

// -------------------------------------------------------------------

// activityworldTreasureMonster

// optional int32 ID = 1;
inline bool activityworldTreasureMonster::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activityworldTreasureMonster::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activityworldTreasureMonster::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activityworldTreasureMonster::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activityworldTreasureMonster::id() const {
  return id_;
}
inline void activityworldTreasureMonster::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 monsterID = 2;
inline bool activityworldTreasureMonster::has_monsterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activityworldTreasureMonster::set_has_monsterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activityworldTreasureMonster::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activityworldTreasureMonster::clear_monsterid() {
  monsterid_ = GOOGLE_LONGLONG(0);
  clear_has_monsterid();
}
inline ::google::protobuf::int64 activityworldTreasureMonster::monsterid() const {
  return monsterid_;
}
inline void activityworldTreasureMonster::set_monsterid(::google::protobuf::int64 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional int32 appearWeight = 3;
inline bool activityworldTreasureMonster::has_appearweight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activityworldTreasureMonster::set_has_appearweight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activityworldTreasureMonster::clear_has_appearweight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activityworldTreasureMonster::clear_appearweight() {
  appearweight_ = 0;
  clear_has_appearweight();
}
inline ::google::protobuf::int32 activityworldTreasureMonster::appearweight() const {
  return appearweight_;
}
inline void activityworldTreasureMonster::set_appearweight(::google::protobuf::int32 value) {
  set_has_appearweight();
  appearweight_ = value;
}

// optional int64 skillId = 4;
inline bool activityworldTreasureMonster::has_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activityworldTreasureMonster::set_has_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activityworldTreasureMonster::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activityworldTreasureMonster::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 activityworldTreasureMonster::skillid() const {
  return skillid_;
}
inline void activityworldTreasureMonster::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// Sheet_activityworldTreasureMonster

// repeated .proto_ff.activityworldTreasureMonster activityworldTreasureMonster_List = 1;
inline int Sheet_activityworldTreasureMonster::activityworldtreasuremonster_list_size() const {
  return activityworldtreasuremonster_list_.size();
}
inline void Sheet_activityworldTreasureMonster::clear_activityworldtreasuremonster_list() {
  activityworldtreasuremonster_list_.Clear();
}
inline const ::proto_ff::activityworldTreasureMonster& Sheet_activityworldTreasureMonster::activityworldtreasuremonster_list(int index) const {
  return activityworldtreasuremonster_list_.Get(index);
}
inline ::proto_ff::activityworldTreasureMonster* Sheet_activityworldTreasureMonster::mutable_activityworldtreasuremonster_list(int index) {
  return activityworldtreasuremonster_list_.Mutable(index);
}
inline ::proto_ff::activityworldTreasureMonster* Sheet_activityworldTreasureMonster::add_activityworldtreasuremonster_list() {
  return activityworldtreasuremonster_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMonster >&
Sheet_activityworldTreasureMonster::activityworldtreasuremonster_list() const {
  return activityworldtreasuremonster_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activityworldTreasureMonster >*
Sheet_activityworldTreasureMonster::mutable_activityworldtreasuremonster_list() {
  return &activityworldtreasuremonster_list_;
}

// -------------------------------------------------------------------

// activitylosttempleConstant

// optional int32 id = 1;
inline bool activitylosttempleConstant::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activitylosttempleConstant::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activitylosttempleConstant::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activitylosttempleConstant::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 activitylosttempleConstant::id() const {
  return id_;
}
inline void activitylosttempleConstant::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 constantdata = 2;
inline bool activitylosttempleConstant::has_constantdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activitylosttempleConstant::set_has_constantdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activitylosttempleConstant::clear_has_constantdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activitylosttempleConstant::clear_constantdata() {
  constantdata_ = GOOGLE_LONGLONG(0);
  clear_has_constantdata();
}
inline ::google::protobuf::int64 activitylosttempleConstant::constantdata() const {
  return constantdata_;
}
inline void activitylosttempleConstant::set_constantdata(::google::protobuf::int64 value) {
  set_has_constantdata();
  constantdata_ = value;
}

// optional string stringdata = 3;
inline bool activitylosttempleConstant::has_stringdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activitylosttempleConstant::set_has_stringdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activitylosttempleConstant::clear_has_stringdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activitylosttempleConstant::clear_stringdata() {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    stringdata_->clear();
  }
  clear_has_stringdata();
}
inline const ::std::string& activitylosttempleConstant::stringdata() const {
  return *stringdata_;
}
inline void activitylosttempleConstant::set_stringdata(const ::std::string& value) {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  stringdata_->assign(value);
}
inline void activitylosttempleConstant::set_stringdata(const char* value) {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  stringdata_->assign(value);
}
inline void activitylosttempleConstant::set_stringdata(const char* value, size_t size) {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  stringdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* activitylosttempleConstant::mutable_stringdata() {
  set_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    stringdata_ = new ::std::string;
  }
  return stringdata_;
}
inline ::std::string* activitylosttempleConstant::release_stringdata() {
  clear_has_stringdata();
  if (stringdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stringdata_;
    stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void activitylosttempleConstant::set_allocated_stringdata(::std::string* stringdata) {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    delete stringdata_;
  }
  if (stringdata) {
    set_has_stringdata();
    stringdata_ = stringdata;
  } else {
    clear_has_stringdata();
    stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_activitylosttempleConstant

// repeated .proto_ff.activitylosttempleConstant activitylosttempleConstant_List = 1;
inline int Sheet_activitylosttempleConstant::activitylosttempleconstant_list_size() const {
  return activitylosttempleconstant_list_.size();
}
inline void Sheet_activitylosttempleConstant::clear_activitylosttempleconstant_list() {
  activitylosttempleconstant_list_.Clear();
}
inline const ::proto_ff::activitylosttempleConstant& Sheet_activitylosttempleConstant::activitylosttempleconstant_list(int index) const {
  return activitylosttempleconstant_list_.Get(index);
}
inline ::proto_ff::activitylosttempleConstant* Sheet_activitylosttempleConstant::mutable_activitylosttempleconstant_list(int index) {
  return activitylosttempleconstant_list_.Mutable(index);
}
inline ::proto_ff::activitylosttempleConstant* Sheet_activitylosttempleConstant::add_activitylosttempleconstant_list() {
  return activitylosttempleconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::activitylosttempleConstant >&
Sheet_activitylosttempleConstant::activitylosttempleconstant_list() const {
  return activitylosttempleconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::activitylosttempleConstant >*
Sheet_activitylosttempleConstant::mutable_activitylosttempleconstant_list() {
  return &activitylosttempleconstant_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_activity_2eproto__INCLUDED
