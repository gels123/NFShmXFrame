// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serverHorn.proto

#ifndef PROTOBUF_serverHorn_2eproto__INCLUDED
#define PROTOBUF_serverHorn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_serverHorn_2eproto();
void protobuf_AssignDesc_serverHorn_2eproto();
void protobuf_ShutdownFile_serverHorn_2eproto();

class serverHornserverHorn;
class Sheet_serverHornserverHorn;

// ===================================================================

class serverHornserverHorn : public ::google::protobuf::Message {
 public:
  serverHornserverHorn();
  virtual ~serverHornserverHorn();

  serverHornserverHorn(const serverHornserverHorn& from);

  inline serverHornserverHorn& operator=(const serverHornserverHorn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serverHornserverHorn& default_instance();

  void Swap(serverHornserverHorn* other);

  // implements Message ----------------------------------------------

  serverHornserverHorn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serverHornserverHorn& from);
  void MergeFrom(const serverHornserverHorn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 minTime = 3;
  inline bool has_mintime() const;
  inline void clear_mintime();
  static const int kMinTimeFieldNumber = 3;
  inline ::google::protobuf::int32 mintime() const;
  inline void set_mintime(::google::protobuf::int32 value);

  // optional int64 itemid = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 4;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 currencyType = 5;
  inline bool has_currencytype() const;
  inline void clear_currencytype();
  static const int kCurrencyTypeFieldNumber = 5;
  inline ::google::protobuf::int32 currencytype() const;
  inline void set_currencytype(::google::protobuf::int32 value);

  // optional int32 currencyCost = 6;
  inline bool has_currencycost() const;
  inline void clear_currencycost();
  static const int kCurrencyCostFieldNumber = 6;
  inline ::google::protobuf::int32 currencycost() const;
  inline void set_currencycost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.serverHornserverHorn)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mintime();
  inline void clear_has_mintime();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_currencytype();
  inline void clear_has_currencytype();
  inline void set_has_currencycost();
  inline void clear_has_currencycost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 mintime_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 currencytype_;
  ::google::protobuf::int32 currencycost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_serverHorn_2eproto();
  friend void protobuf_AssignDesc_serverHorn_2eproto();
  friend void protobuf_ShutdownFile_serverHorn_2eproto();

  void InitAsDefaultInstance();
  static serverHornserverHorn* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serverHornserverHorn : public ::google::protobuf::Message {
 public:
  Sheet_serverHornserverHorn();
  virtual ~Sheet_serverHornserverHorn();

  Sheet_serverHornserverHorn(const Sheet_serverHornserverHorn& from);

  inline Sheet_serverHornserverHorn& operator=(const Sheet_serverHornserverHorn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serverHornserverHorn& default_instance();

  void Swap(Sheet_serverHornserverHorn* other);

  // implements Message ----------------------------------------------

  Sheet_serverHornserverHorn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serverHornserverHorn& from);
  void MergeFrom(const Sheet_serverHornserverHorn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serverHornserverHorn serverHornserverHorn_List = 1;
  inline int serverhornserverhorn_list_size() const;
  inline void clear_serverhornserverhorn_list();
  static const int kServerHornserverHornListFieldNumber = 1;
  inline const ::proto_ff::serverHornserverHorn& serverhornserverhorn_list(int index) const;
  inline ::proto_ff::serverHornserverHorn* mutable_serverhornserverhorn_list(int index);
  inline ::proto_ff::serverHornserverHorn* add_serverhornserverhorn_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serverHornserverHorn >&
      serverhornserverhorn_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serverHornserverHorn >*
      mutable_serverhornserverhorn_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serverHornserverHorn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serverHornserverHorn > serverhornserverhorn_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serverHorn_2eproto();
  friend void protobuf_AssignDesc_serverHorn_2eproto();
  friend void protobuf_ShutdownFile_serverHorn_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serverHornserverHorn* default_instance_;
};
// ===================================================================


// ===================================================================

// serverHornserverHorn

// optional int64 id = 1;
inline bool serverHornserverHorn::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serverHornserverHorn::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serverHornserverHorn::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serverHornserverHorn::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 serverHornserverHorn::id() const {
  return id_;
}
inline void serverHornserverHorn::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 time = 2;
inline bool serverHornserverHorn::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serverHornserverHorn::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serverHornserverHorn::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serverHornserverHorn::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 serverHornserverHorn::time() const {
  return time_;
}
inline void serverHornserverHorn::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 minTime = 3;
inline bool serverHornserverHorn::has_mintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serverHornserverHorn::set_has_mintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serverHornserverHorn::clear_has_mintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serverHornserverHorn::clear_mintime() {
  mintime_ = 0;
  clear_has_mintime();
}
inline ::google::protobuf::int32 serverHornserverHorn::mintime() const {
  return mintime_;
}
inline void serverHornserverHorn::set_mintime(::google::protobuf::int32 value) {
  set_has_mintime();
  mintime_ = value;
}

// optional int64 itemid = 4;
inline bool serverHornserverHorn::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serverHornserverHorn::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serverHornserverHorn::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serverHornserverHorn::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 serverHornserverHorn::itemid() const {
  return itemid_;
}
inline void serverHornserverHorn::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 currencyType = 5;
inline bool serverHornserverHorn::has_currencytype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void serverHornserverHorn::set_has_currencytype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void serverHornserverHorn::clear_has_currencytype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void serverHornserverHorn::clear_currencytype() {
  currencytype_ = 0;
  clear_has_currencytype();
}
inline ::google::protobuf::int32 serverHornserverHorn::currencytype() const {
  return currencytype_;
}
inline void serverHornserverHorn::set_currencytype(::google::protobuf::int32 value) {
  set_has_currencytype();
  currencytype_ = value;
}

// optional int32 currencyCost = 6;
inline bool serverHornserverHorn::has_currencycost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void serverHornserverHorn::set_has_currencycost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void serverHornserverHorn::clear_has_currencycost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void serverHornserverHorn::clear_currencycost() {
  currencycost_ = 0;
  clear_has_currencycost();
}
inline ::google::protobuf::int32 serverHornserverHorn::currencycost() const {
  return currencycost_;
}
inline void serverHornserverHorn::set_currencycost(::google::protobuf::int32 value) {
  set_has_currencycost();
  currencycost_ = value;
}

// -------------------------------------------------------------------

// Sheet_serverHornserverHorn

// repeated .proto_ff.serverHornserverHorn serverHornserverHorn_List = 1;
inline int Sheet_serverHornserverHorn::serverhornserverhorn_list_size() const {
  return serverhornserverhorn_list_.size();
}
inline void Sheet_serverHornserverHorn::clear_serverhornserverhorn_list() {
  serverhornserverhorn_list_.Clear();
}
inline const ::proto_ff::serverHornserverHorn& Sheet_serverHornserverHorn::serverhornserverhorn_list(int index) const {
  return serverhornserverhorn_list_.Get(index);
}
inline ::proto_ff::serverHornserverHorn* Sheet_serverHornserverHorn::mutable_serverhornserverhorn_list(int index) {
  return serverhornserverhorn_list_.Mutable(index);
}
inline ::proto_ff::serverHornserverHorn* Sheet_serverHornserverHorn::add_serverhornserverhorn_list() {
  return serverhornserverhorn_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serverHornserverHorn >&
Sheet_serverHornserverHorn::serverhornserverhorn_list() const {
  return serverhornserverhorn_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serverHornserverHorn >*
Sheet_serverHornserverHorn::mutable_serverhornserverhorn_list() {
  return &serverhornserverhorn_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serverHorn_2eproto__INCLUDED
