// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: conditionshop.proto

#ifndef PROTOBUF_conditionshop_2eproto__INCLUDED
#define PROTOBUF_conditionshop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_conditionshop_2eproto();
void protobuf_AssignDesc_conditionshop_2eproto();
void protobuf_ShutdownFile_conditionshop_2eproto();

class conditionshopconditionshop;
class Sheet_conditionshopconditionshop;

// ===================================================================

class conditionshopconditionshop : public ::google::protobuf::Message {
 public:
  conditionshopconditionshop();
  virtual ~conditionshopconditionshop();

  conditionshopconditionshop(const conditionshopconditionshop& from);

  inline conditionshopconditionshop& operator=(const conditionshopconditionshop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const conditionshopconditionshop& default_instance();

  void Swap(conditionshopconditionshop* other);

  // implements Message ----------------------------------------------

  conditionshopconditionshop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const conditionshopconditionshop& from);
  void MergeFrom(const conditionshopconditionshop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int64 boxId = 4;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxIdFieldNumber = 4;
  inline ::google::protobuf::int64 boxid() const;
  inline void set_boxid(::google::protobuf::int64 value);

  // optional string itemId = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 5;
  inline const ::std::string& itemid() const;
  inline void set_itemid(const ::std::string& value);
  inline void set_itemid(const char* value);
  inline void set_itemid(const char* value, size_t size);
  inline ::std::string* mutable_itemid();
  inline ::std::string* release_itemid();
  inline void set_allocated_itemid(::std::string* itemid);

  // optional int32 moneytype = 6;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneytypeFieldNumber = 6;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // optional int32 DiscountPrice = 7;
  inline bool has_discountprice() const;
  inline void clear_discountprice();
  static const int kDiscountPriceFieldNumber = 7;
  inline ::google::protobuf::int32 discountprice() const;
  inline void set_discountprice(::google::protobuf::int32 value);

  // repeated string ConditionParam = 8;
  inline int conditionparam_size() const;
  inline void clear_conditionparam();
  static const int kConditionParamFieldNumber = 8;
  inline const ::std::string& conditionparam(int index) const;
  inline ::std::string* mutable_conditionparam(int index);
  inline void set_conditionparam(int index, const ::std::string& value);
  inline void set_conditionparam(int index, const char* value);
  inline void set_conditionparam(int index, const char* value, size_t size);
  inline ::std::string* add_conditionparam();
  inline void add_conditionparam(const ::std::string& value);
  inline void add_conditionparam(const char* value);
  inline void add_conditionparam(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& conditionparam() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_conditionparam();

  // repeated int32 ConditionType = 9;
  inline int conditiontype_size() const;
  inline void clear_conditiontype();
  static const int kConditionTypeFieldNumber = 9;
  inline ::google::protobuf::int32 conditiontype(int index) const;
  inline void set_conditiontype(int index, ::google::protobuf::int32 value);
  inline void add_conditiontype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      conditiontype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_conditiontype();

  // @@protoc_insertion_point(class_scope:proto_ff.conditionshopconditionshop)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_discountprice();
  inline void clear_has_discountprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 boxid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 moneytype_;
  ::std::string* itemid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> conditionparam_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > conditiontype_;
  ::google::protobuf::int32 discountprice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_conditionshop_2eproto();
  friend void protobuf_AssignDesc_conditionshop_2eproto();
  friend void protobuf_ShutdownFile_conditionshop_2eproto();

  void InitAsDefaultInstance();
  static conditionshopconditionshop* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_conditionshopconditionshop : public ::google::protobuf::Message {
 public:
  Sheet_conditionshopconditionshop();
  virtual ~Sheet_conditionshopconditionshop();

  Sheet_conditionshopconditionshop(const Sheet_conditionshopconditionshop& from);

  inline Sheet_conditionshopconditionshop& operator=(const Sheet_conditionshopconditionshop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_conditionshopconditionshop& default_instance();

  void Swap(Sheet_conditionshopconditionshop* other);

  // implements Message ----------------------------------------------

  Sheet_conditionshopconditionshop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_conditionshopconditionshop& from);
  void MergeFrom(const Sheet_conditionshopconditionshop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.conditionshopconditionshop conditionshopconditionshop_List = 1;
  inline int conditionshopconditionshop_list_size() const;
  inline void clear_conditionshopconditionshop_list();
  static const int kConditionshopconditionshopListFieldNumber = 1;
  inline const ::proto_ff::conditionshopconditionshop& conditionshopconditionshop_list(int index) const;
  inline ::proto_ff::conditionshopconditionshop* mutable_conditionshopconditionshop_list(int index);
  inline ::proto_ff::conditionshopconditionshop* add_conditionshopconditionshop_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::conditionshopconditionshop >&
      conditionshopconditionshop_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::conditionshopconditionshop >*
      mutable_conditionshopconditionshop_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_conditionshopconditionshop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::conditionshopconditionshop > conditionshopconditionshop_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_conditionshop_2eproto();
  friend void protobuf_AssignDesc_conditionshop_2eproto();
  friend void protobuf_ShutdownFile_conditionshop_2eproto();

  void InitAsDefaultInstance();
  static Sheet_conditionshopconditionshop* default_instance_;
};
// ===================================================================


// ===================================================================

// conditionshopconditionshop

// optional int32 Id = 1;
inline bool conditionshopconditionshop::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void conditionshopconditionshop::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void conditionshopconditionshop::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void conditionshopconditionshop::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 conditionshopconditionshop::id() const {
  return id_;
}
inline void conditionshopconditionshop::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 Type = 2;
inline bool conditionshopconditionshop::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void conditionshopconditionshop::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void conditionshopconditionshop::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void conditionshopconditionshop::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 conditionshopconditionshop::type() const {
  return type_;
}
inline void conditionshopconditionshop::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Time = 3;
inline bool conditionshopconditionshop::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void conditionshopconditionshop::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void conditionshopconditionshop::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void conditionshopconditionshop::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 conditionshopconditionshop::time() const {
  return time_;
}
inline void conditionshopconditionshop::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int64 boxId = 4;
inline bool conditionshopconditionshop::has_boxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void conditionshopconditionshop::set_has_boxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void conditionshopconditionshop::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void conditionshopconditionshop::clear_boxid() {
  boxid_ = GOOGLE_LONGLONG(0);
  clear_has_boxid();
}
inline ::google::protobuf::int64 conditionshopconditionshop::boxid() const {
  return boxid_;
}
inline void conditionshopconditionshop::set_boxid(::google::protobuf::int64 value) {
  set_has_boxid();
  boxid_ = value;
}

// optional string itemId = 5;
inline bool conditionshopconditionshop::has_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void conditionshopconditionshop::set_has_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void conditionshopconditionshop::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void conditionshopconditionshop::clear_itemid() {
  if (itemid_ != &::google::protobuf::internal::kEmptyString) {
    itemid_->clear();
  }
  clear_has_itemid();
}
inline const ::std::string& conditionshopconditionshop::itemid() const {
  return *itemid_;
}
inline void conditionshopconditionshop::set_itemid(const ::std::string& value) {
  set_has_itemid();
  if (itemid_ == &::google::protobuf::internal::kEmptyString) {
    itemid_ = new ::std::string;
  }
  itemid_->assign(value);
}
inline void conditionshopconditionshop::set_itemid(const char* value) {
  set_has_itemid();
  if (itemid_ == &::google::protobuf::internal::kEmptyString) {
    itemid_ = new ::std::string;
  }
  itemid_->assign(value);
}
inline void conditionshopconditionshop::set_itemid(const char* value, size_t size) {
  set_has_itemid();
  if (itemid_ == &::google::protobuf::internal::kEmptyString) {
    itemid_ = new ::std::string;
  }
  itemid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* conditionshopconditionshop::mutable_itemid() {
  set_has_itemid();
  if (itemid_ == &::google::protobuf::internal::kEmptyString) {
    itemid_ = new ::std::string;
  }
  return itemid_;
}
inline ::std::string* conditionshopconditionshop::release_itemid() {
  clear_has_itemid();
  if (itemid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = itemid_;
    itemid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void conditionshopconditionshop::set_allocated_itemid(::std::string* itemid) {
  if (itemid_ != &::google::protobuf::internal::kEmptyString) {
    delete itemid_;
  }
  if (itemid) {
    set_has_itemid();
    itemid_ = itemid;
  } else {
    clear_has_itemid();
    itemid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 moneytype = 6;
inline bool conditionshopconditionshop::has_moneytype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void conditionshopconditionshop::set_has_moneytype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void conditionshopconditionshop::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void conditionshopconditionshop::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 conditionshopconditionshop::moneytype() const {
  return moneytype_;
}
inline void conditionshopconditionshop::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional int32 DiscountPrice = 7;
inline bool conditionshopconditionshop::has_discountprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void conditionshopconditionshop::set_has_discountprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void conditionshopconditionshop::clear_has_discountprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void conditionshopconditionshop::clear_discountprice() {
  discountprice_ = 0;
  clear_has_discountprice();
}
inline ::google::protobuf::int32 conditionshopconditionshop::discountprice() const {
  return discountprice_;
}
inline void conditionshopconditionshop::set_discountprice(::google::protobuf::int32 value) {
  set_has_discountprice();
  discountprice_ = value;
}

// repeated string ConditionParam = 8;
inline int conditionshopconditionshop::conditionparam_size() const {
  return conditionparam_.size();
}
inline void conditionshopconditionshop::clear_conditionparam() {
  conditionparam_.Clear();
}
inline const ::std::string& conditionshopconditionshop::conditionparam(int index) const {
  return conditionparam_.Get(index);
}
inline ::std::string* conditionshopconditionshop::mutable_conditionparam(int index) {
  return conditionparam_.Mutable(index);
}
inline void conditionshopconditionshop::set_conditionparam(int index, const ::std::string& value) {
  conditionparam_.Mutable(index)->assign(value);
}
inline void conditionshopconditionshop::set_conditionparam(int index, const char* value) {
  conditionparam_.Mutable(index)->assign(value);
}
inline void conditionshopconditionshop::set_conditionparam(int index, const char* value, size_t size) {
  conditionparam_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* conditionshopconditionshop::add_conditionparam() {
  return conditionparam_.Add();
}
inline void conditionshopconditionshop::add_conditionparam(const ::std::string& value) {
  conditionparam_.Add()->assign(value);
}
inline void conditionshopconditionshop::add_conditionparam(const char* value) {
  conditionparam_.Add()->assign(value);
}
inline void conditionshopconditionshop::add_conditionparam(const char* value, size_t size) {
  conditionparam_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
conditionshopconditionshop::conditionparam() const {
  return conditionparam_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
conditionshopconditionshop::mutable_conditionparam() {
  return &conditionparam_;
}

// repeated int32 ConditionType = 9;
inline int conditionshopconditionshop::conditiontype_size() const {
  return conditiontype_.size();
}
inline void conditionshopconditionshop::clear_conditiontype() {
  conditiontype_.Clear();
}
inline ::google::protobuf::int32 conditionshopconditionshop::conditiontype(int index) const {
  return conditiontype_.Get(index);
}
inline void conditionshopconditionshop::set_conditiontype(int index, ::google::protobuf::int32 value) {
  conditiontype_.Set(index, value);
}
inline void conditionshopconditionshop::add_conditiontype(::google::protobuf::int32 value) {
  conditiontype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
conditionshopconditionshop::conditiontype() const {
  return conditiontype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
conditionshopconditionshop::mutable_conditiontype() {
  return &conditiontype_;
}

// -------------------------------------------------------------------

// Sheet_conditionshopconditionshop

// repeated .proto_ff.conditionshopconditionshop conditionshopconditionshop_List = 1;
inline int Sheet_conditionshopconditionshop::conditionshopconditionshop_list_size() const {
  return conditionshopconditionshop_list_.size();
}
inline void Sheet_conditionshopconditionshop::clear_conditionshopconditionshop_list() {
  conditionshopconditionshop_list_.Clear();
}
inline const ::proto_ff::conditionshopconditionshop& Sheet_conditionshopconditionshop::conditionshopconditionshop_list(int index) const {
  return conditionshopconditionshop_list_.Get(index);
}
inline ::proto_ff::conditionshopconditionshop* Sheet_conditionshopconditionshop::mutable_conditionshopconditionshop_list(int index) {
  return conditionshopconditionshop_list_.Mutable(index);
}
inline ::proto_ff::conditionshopconditionshop* Sheet_conditionshopconditionshop::add_conditionshopconditionshop_list() {
  return conditionshopconditionshop_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::conditionshopconditionshop >&
Sheet_conditionshopconditionshop::conditionshopconditionshop_list() const {
  return conditionshopconditionshop_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::conditionshopconditionshop >*
Sheet_conditionshopconditionshop::mutable_conditionshopconditionshop_list() {
  return &conditionshopconditionshop_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_conditionshop_2eproto__INCLUDED
