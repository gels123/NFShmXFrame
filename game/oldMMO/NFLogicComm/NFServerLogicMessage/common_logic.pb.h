// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_logic.proto

#ifndef PROTOBUF_common_5flogic_2eproto__INCLUDED
#define PROTOBUF_common_5flogic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_5flogic_2eproto();
void protobuf_AssignDesc_common_5flogic_2eproto();
void protobuf_ShutdownFile_common_5flogic_2eproto();

class PacketMsg;
class ServerPacketMsg;
class WorldExternalConfig;
class CharFacadeProto;
class CharTrimProto;
class ForceDupProto;
class CharMultTrimProto;
class CharacterDBBaseInfo;
class Attr;
class Attr64;
class AttrEx64;
class FieldItemAttrInfo;
class MarryEquipInfo;
class ComposeSingleCostProto;
class ComposeCostProto;
class blustarAttr;
class ItemProtoInfo;
class CharacterDBPackageBag;
class CharacterDBPackageData;
class CharacterDBMissionItemInfo;
class CharacterDBMissionTrack;
class CharacterDBDyMissionInfo;
class CharacterDBRecentSubmitMission;
class CharacterDBTaskData;
class CharacterDBSkillItem;
class CharacterDBSkillData;
class CharacterDBAttrDetailInfo;
class CharacterDBExtendData;
class EquipSlotProto;
class CharacterDBEquipData;
class DuplicateSingleProto;
class DuplicateGroupProto;
class DuplicateLadderExProto;
class DupHistoryExpProto;
class DupUnionBossDBProto;
class DupPalaceFetchDBProto;
class DupPalaceMultFetchDBProto;
class DupUnionPalaceDBProto;
class CharacterDBDuplicateData;
class SingleAchievementDBData;
class GroupAchievementDBData;
class CharacterAchievementDBData;
class EffectParamProto;
class MultEffectParamProto;
class BuffBagInfo;
class CharacterBuffData;
class CharacterArenaData;
class CharacterTitleInfo;
class CharacterTitleSaveData;
class CharacterDBSingleOperateLimitInfo;
class CharacterDBOperateProto;
class CharacterDBOperateMutProto;
class CharacterDBOperateInfo;
class CharacterDBOperateLimitInfo;
class CharacterDBSingleHuoYueDuInfoInfo;
class CharacterDBHuoYueDuInfo;
class IndultTaskEntry;
class IndultTaskGroupEntry;
class ColPointsTaskEntry;
class ColPointsTaskGroupEntry;
class ColPointsTaskData;
class WelfareDailySignInDBData;
class WelfareLoginGiftDBData;
class WelfareLevelGiftDBData;
class CommodityEntry;
class LimitShopGroupEntry;
class LimitShopData;
class LimitTaskEntry;
class LimitTaskGroupEntry;
class LimitTaskData;
class WishDBTypeEntry;
class WishDBData;
class FestivalInvestDBData;
class FestivalExchangeDBData;
class FestivalLoginDBData;
class FestivalTotalRechargeDBData;
class FestivalConsumptionDBData;
class FestivalKillBossData;
class FestivalZhiChongData;
class FestivalPreRechargeData;
class FestivalSuperDBData;
class FestivalSuperDoubleDBData;
class FestivalHuoYueDuDBData;
class FestivalFirstRechargeDBData;
class FestivalYanHuaDBData;
class FestivalBigYanHuaDBData;
class FestivalShopDBData;
class LimitGiftDBData;
class LimitGiftActiveDBData;
class FRechargeDBData;
class FRechargeActiveDBData;
class FSmashEggDBData;
class FestivalSmashEggDBData;
class OperateReward;
class OperateDailyRechargeData;
class OperateMoonCardData;
class OperateFundData;
class OperateFirstRechargeType;
class OperateFirstRechargeData;
class WelfareVipGiftDBData;
class HoroscopeJackpotDBData;
class HoroscopeActiveDBData;
class WelfareOnlineGiftDBData;
class OperationTurntableTaskDBData;
class OperationTurntableDBData;
class OperationTutoraskDBData;
class OperationTutorDBData;
class limitInfo;
class FestivalWorldBossData;
class OperateCommonEntryData;
class OperateWingGiftData;
class OperateRechargeGiftData;
class CharacterDBOperateData;
class PlayerActiveAnswerData;
class CharacterDBActiveInfo;
class PayCountDBProto;
class OfflineRetDBProto;
class CharacterPayData;
class FunctionUnlockInfo;
class EmblemSlot;
class CharacterDBEmblemData;
class CharacterDBIdentifyData;
class ElementInfoData;
class CharacterDBElementData;
class CharacterDBFashionData;
class CharacterDBWingData;
class CharacterDBPartnerData;
class CharacterDBMountData;
class PlayerBossDataInfo;
class CharacterDBBossAttentInfo;
class CharacterDBBossData;
class RedPlayerInfo;
class CharacterDBPvpData;
class CharacterDBTreasureData;
class ArtifactInfo;
class CharacterDBArtifactData;
class CharacterDBFateStarData;
class CharacterDBConvoyData;
class CharacterDBDailyEntry;
class CharacterDBDailyData;
class FieldCylstalInfo;
class FieldExInfo;
class CharacterDBFieldData;
class vipGiftDBData;
class VipTCardInfo;
class VipTCardData;
class CharacterDBVipData;
class CharacterDBMallData;
class GodhoodSlot;
class CharacterDBGodhoodData;
class RecoveryCompleteDBData;
class RecoveryDBReward;
class RecoveryDBData;
class CharacterDBRecoveryData;
class CharacterDBActivityScuffleData;
class CharacterDBActivityChaosDragonsData;
class CharacterDBActivityAsharmData;
class CharacterDBCombatTeamData;
class CharacterDBSoloData;
class CharacterDBAtBoxData;
class CharDBAncientShopProto;
class CharDBAncientShopData;
class CharacterDBAncientData;
class ChooseGiftData;
class CharacterDBActivityData;
class SOAcitveTotalRechargeData;
class SOAcitveAdvanceData;
class SOAcitveGoodsData;
class CharacterDBSOAcitveData;
class CharacterDBUseItemData;
class CharacterDBDayUseItemData;
class MysteryShopDBData;
class CharacterDBMysteryShopData;
class CharacterDBPackageTestRebateData;
class FuncFightDBData;
class PowerInfo;
class PowerInfoDBList;
class OccupationTaskInfo;
class OccupationTakeList;
class ComStarInfo;
class CharacterDBHeadSetData;
class CharacterDBOnlineGiftInfo;
class CharacterDBOnlineGiftData;
class CharDropItemDBProto;
class CharDropMultItemDBProto;
class CharDropLimitDBData;
class CharacterDBGmHelpData;
class GMToolsDB;
class CharacterDBGodGMData;
class BowlDBRewardProto;
class BowlDBData;
class HidePeriodDBProto;
class CharacterDBHideData;
class tbRoleInfo;
class CharacterDBSimpleInfo;

// ===================================================================

class PacketMsg : public ::google::protobuf::Message {
 public:
  PacketMsg();
  virtual ~PacketMsg();

  PacketMsg(const PacketMsg& from);

  inline PacketMsg& operator=(const PacketMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketMsg& default_instance();

  void Swap(PacketMsg* other);

  // implements Message ----------------------------------------------

  PacketMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketMsg& from);
  void MergeFrom(const PacketMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // optional uint32 serverType = 2;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);

  // optional uint32 upper_limit = 3;
  inline bool has_upper_limit() const;
  inline void clear_upper_limit();
  static const int kUpperLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 upper_limit() const;
  inline void set_upper_limit(::google::protobuf::uint32 value);

  // optional uint32 min_interval = 4;
  inline bool has_min_interval() const;
  inline void clear_min_interval();
  static const int kMinIntervalFieldNumber = 4;
  inline ::google::protobuf::uint32 min_interval() const;
  inline void set_min_interval(::google::protobuf::uint32 value);

  // optional uint32 control_time = 5;
  inline bool has_control_time() const;
  inline void clear_control_time();
  static const int kControlTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 control_time() const;
  inline void set_control_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PacketMsg)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_upper_limit();
  inline void clear_has_upper_limit();
  inline void set_has_min_interval();
  inline void clear_has_min_interval();
  inline void set_has_control_time();
  inline void clear_has_control_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 upper_limit_;
  ::google::protobuf::uint32 min_interval_;
  ::google::protobuf::uint32 control_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PacketMsg* default_instance_;
};
// -------------------------------------------------------------------

class ServerPacketMsg : public ::google::protobuf::Message {
 public:
  ServerPacketMsg();
  virtual ~ServerPacketMsg();

  ServerPacketMsg(const ServerPacketMsg& from);

  inline ServerPacketMsg& operator=(const ServerPacketMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerPacketMsg& default_instance();

  void Swap(ServerPacketMsg* other);

  // implements Message ----------------------------------------------

  ServerPacketMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerPacketMsg& from);
  void MergeFrom(const ServerPacketMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.PacketMsg PacketMsg = 1;
  inline int packetmsg_size() const;
  inline void clear_packetmsg();
  static const int kPacketMsgFieldNumber = 1;
  inline const ::proto_ff::PacketMsg& packetmsg(int index) const;
  inline ::proto_ff::PacketMsg* mutable_packetmsg(int index);
  inline ::proto_ff::PacketMsg* add_packetmsg();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >&
      packetmsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >*
      mutable_packetmsg();

  // @@protoc_insertion_point(class_scope:proto_ff.ServerPacketMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg > packetmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ServerPacketMsg* default_instance_;
};
// -------------------------------------------------------------------

class WorldExternalConfig : public ::google::protobuf::Message {
 public:
  WorldExternalConfig();
  virtual ~WorldExternalConfig();

  WorldExternalConfig(const WorldExternalConfig& from);

  inline WorldExternalConfig& operator=(const WorldExternalConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldExternalConfig& default_instance();

  void Swap(WorldExternalConfig* other);

  // implements Message ----------------------------------------------

  WorldExternalConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldExternalConfig& from);
  void MergeFrom(const WorldExternalConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool TokenTimeCheck = 1;
  inline bool has_tokentimecheck() const;
  inline void clear_tokentimecheck();
  static const int kTokenTimeCheckFieldNumber = 1;
  inline bool tokentimecheck() const;
  inline void set_tokentimecheck(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.WorldExternalConfig)
 private:
  inline void set_has_tokentimecheck();
  inline void clear_has_tokentimecheck();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool tokentimecheck_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WorldExternalConfig* default_instance_;
};
// -------------------------------------------------------------------

class CharFacadeProto : public ::google::protobuf::Message {
 public:
  CharFacadeProto();
  virtual ~CharFacadeProto();

  CharFacadeProto(const CharFacadeProto& from);

  inline CharFacadeProto& operator=(const CharFacadeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharFacadeProto& default_instance();

  void Swap(CharFacadeProto* other);

  // implements Message ----------------------------------------------

  CharFacadeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharFacadeProto& from);
  void MergeFrom(const CharFacadeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cur_mount_id = 1;
  inline bool has_cur_mount_id() const;
  inline void clear_cur_mount_id();
  static const int kCurMountIdFieldNumber = 1;
  inline ::google::protobuf::uint64 cur_mount_id() const;
  inline void set_cur_mount_id(::google::protobuf::uint64 value);

  // optional uint64 wing_id = 2;
  inline bool has_wing_id() const;
  inline void clear_wing_id();
  static const int kWingIdFieldNumber = 2;
  inline ::google::protobuf::uint64 wing_id() const;
  inline void set_wing_id(::google::protobuf::uint64 value);

  // optional uint64 fashion_clothes_id = 3;
  inline bool has_fashion_clothes_id() const;
  inline void clear_fashion_clothes_id();
  static const int kFashionClothesIdFieldNumber = 3;
  inline ::google::protobuf::uint64 fashion_clothes_id() const;
  inline void set_fashion_clothes_id(::google::protobuf::uint64 value);

  // optional uint64 fashion_weapon_id = 4;
  inline bool has_fashion_weapon_id() const;
  inline void clear_fashion_weapon_id();
  static const int kFashionWeaponIdFieldNumber = 4;
  inline ::google::protobuf::uint64 fashion_weapon_id() const;
  inline void set_fashion_weapon_id(::google::protobuf::uint64 value);

  // optional uint64 occupationId = 5;
  inline bool has_occupationid() const;
  inline void clear_occupationid();
  static const int kOccupationIdFieldNumber = 5;
  inline ::google::protobuf::uint64 occupationid() const;
  inline void set_occupationid(::google::protobuf::uint64 value);

  // optional uint64 treasure_id = 6;
  inline bool has_treasure_id() const;
  inline void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 6;
  inline ::google::protobuf::uint64 treasure_id() const;
  inline void set_treasure_id(::google::protobuf::uint64 value);

  // optional int32 treasure_type = 7;
  inline bool has_treasure_type() const;
  inline void clear_treasure_type();
  static const int kTreasureTypeFieldNumber = 7;
  inline ::google::protobuf::int32 treasure_type() const;
  inline void set_treasure_type(::google::protobuf::int32 value);

  // optional uint64 artifact_id = 8;
  inline bool has_artifact_id() const;
  inline void clear_artifact_id();
  static const int kArtifactIdFieldNumber = 8;
  inline ::google::protobuf::uint64 artifact_id() const;
  inline void set_artifact_id(::google::protobuf::uint64 value);

  // optional uint64 cur_select_mount_id = 9;
  inline bool has_cur_select_mount_id() const;
  inline void clear_cur_select_mount_id();
  static const int kCurSelectMountIdFieldNumber = 9;
  inline ::google::protobuf::uint64 cur_select_mount_id() const;
  inline void set_cur_select_mount_id(::google::protobuf::uint64 value);

  // optional uint64 partner_id = 10;
  inline bool has_partner_id() const;
  inline void clear_partner_id();
  static const int kPartnerIdFieldNumber = 10;
  inline ::google::protobuf::uint64 partner_id() const;
  inline void set_partner_id(::google::protobuf::uint64 value);

  // optional uint64 head_id = 11;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 11;
  inline ::google::protobuf::uint64 head_id() const;
  inline void set_head_id(::google::protobuf::uint64 value);

  // optional uint64 frame_id = 12;
  inline bool has_frame_id() const;
  inline void clear_frame_id();
  static const int kFrameIdFieldNumber = 12;
  inline ::google::protobuf::uint64 frame_id() const;
  inline void set_frame_id(::google::protobuf::uint64 value);

  // optional uint64 bubble_id = 13;
  inline bool has_bubble_id() const;
  inline void clear_bubble_id();
  static const int kBubbleIdFieldNumber = 13;
  inline ::google::protobuf::uint64 bubble_id() const;
  inline void set_bubble_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharFacadeProto)
 private:
  inline void set_has_cur_mount_id();
  inline void clear_has_cur_mount_id();
  inline void set_has_wing_id();
  inline void clear_has_wing_id();
  inline void set_has_fashion_clothes_id();
  inline void clear_has_fashion_clothes_id();
  inline void set_has_fashion_weapon_id();
  inline void clear_has_fashion_weapon_id();
  inline void set_has_occupationid();
  inline void clear_has_occupationid();
  inline void set_has_treasure_id();
  inline void clear_has_treasure_id();
  inline void set_has_treasure_type();
  inline void clear_has_treasure_type();
  inline void set_has_artifact_id();
  inline void clear_has_artifact_id();
  inline void set_has_cur_select_mount_id();
  inline void clear_has_cur_select_mount_id();
  inline void set_has_partner_id();
  inline void clear_has_partner_id();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_frame_id();
  inline void clear_has_frame_id();
  inline void set_has_bubble_id();
  inline void clear_has_bubble_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cur_mount_id_;
  ::google::protobuf::uint64 wing_id_;
  ::google::protobuf::uint64 fashion_clothes_id_;
  ::google::protobuf::uint64 fashion_weapon_id_;
  ::google::protobuf::uint64 occupationid_;
  ::google::protobuf::uint64 treasure_id_;
  ::google::protobuf::uint64 artifact_id_;
  ::google::protobuf::uint64 cur_select_mount_id_;
  ::google::protobuf::uint64 partner_id_;
  ::google::protobuf::uint64 head_id_;
  ::google::protobuf::uint64 frame_id_;
  ::google::protobuf::uint64 bubble_id_;
  ::google::protobuf::int32 treasure_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharFacadeProto* default_instance_;
};
// -------------------------------------------------------------------

class CharTrimProto : public ::google::protobuf::Message {
 public:
  CharTrimProto();
  virtual ~CharTrimProto();

  CharTrimProto(const CharTrimProto& from);

  inline CharTrimProto& operator=(const CharTrimProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharTrimProto& default_instance();

  void Swap(CharTrimProto* other);

  // implements Message ----------------------------------------------

  CharTrimProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharTrimProto& from);
  void MergeFrom(const CharTrimProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 trim_type = 1;
  inline bool has_trim_type() const;
  inline void clear_trim_type();
  static const int kTrimTypeFieldNumber = 1;
  inline ::google::protobuf::int32 trim_type() const;
  inline void set_trim_type(::google::protobuf::int32 value);

  // optional int32 trim_level = 2;
  inline bool has_trim_level() const;
  inline void clear_trim_level();
  static const int kTrimLevelFieldNumber = 2;
  inline ::google::protobuf::int32 trim_level() const;
  inline void set_trim_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharTrimProto)
 private:
  inline void set_has_trim_type();
  inline void clear_has_trim_type();
  inline void set_has_trim_level();
  inline void clear_has_trim_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 trim_type_;
  ::google::protobuf::int32 trim_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharTrimProto* default_instance_;
};
// -------------------------------------------------------------------

class ForceDupProto : public ::google::protobuf::Message {
 public:
  ForceDupProto();
  virtual ~ForceDupProto();

  ForceDupProto(const ForceDupProto& from);

  inline ForceDupProto& operator=(const ForceDupProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceDupProto& default_instance();

  void Swap(ForceDupProto* other);

  // implements Message ----------------------------------------------

  ForceDupProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForceDupProto& from);
  void MergeFrom(const ForceDupProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 treasure_state = 1;
  inline bool has_treasure_state() const;
  inline void clear_treasure_state();
  static const int kTreasureStateFieldNumber = 1;
  inline ::google::protobuf::int32 treasure_state() const;
  inline void set_treasure_state(::google::protobuf::int32 value);

  // optional int32 ladder_state = 2;
  inline bool has_ladder_state() const;
  inline void clear_ladder_state();
  static const int kLadderStateFieldNumber = 2;
  inline ::google::protobuf::int32 ladder_state() const;
  inline void set_ladder_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ForceDupProto)
 private:
  inline void set_has_treasure_state();
  inline void clear_has_treasure_state();
  inline void set_has_ladder_state();
  inline void clear_has_ladder_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 treasure_state_;
  ::google::protobuf::int32 ladder_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ForceDupProto* default_instance_;
};
// -------------------------------------------------------------------

class CharMultTrimProto : public ::google::protobuf::Message {
 public:
  CharMultTrimProto();
  virtual ~CharMultTrimProto();

  CharMultTrimProto(const CharMultTrimProto& from);

  inline CharMultTrimProto& operator=(const CharMultTrimProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharMultTrimProto& default_instance();

  void Swap(CharMultTrimProto* other);

  // implements Message ----------------------------------------------

  CharMultTrimProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharMultTrimProto& from);
  void MergeFrom(const CharMultTrimProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharTrimProto trim_lst = 1;
  inline int trim_lst_size() const;
  inline void clear_trim_lst();
  static const int kTrimLstFieldNumber = 1;
  inline const ::proto_ff::CharTrimProto& trim_lst(int index) const;
  inline ::proto_ff::CharTrimProto* mutable_trim_lst(int index);
  inline ::proto_ff::CharTrimProto* add_trim_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharTrimProto >&
      trim_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharTrimProto >*
      mutable_trim_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.CharMultTrimProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharTrimProto > trim_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharMultTrimProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBBaseInfo : public ::google::protobuf::Message {
 public:
  CharacterDBBaseInfo();
  virtual ~CharacterDBBaseInfo();

  CharacterDBBaseInfo(const CharacterDBBaseInfo& from);

  inline CharacterDBBaseInfo& operator=(const CharacterDBBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBBaseInfo& default_instance();

  void Swap(CharacterDBBaseInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBBaseInfo& from);
  void MergeFrom(const CharacterDBBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 createTime = 1;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint64 lastSaveTime = 2;
  inline bool has_lastsavetime() const;
  inline void clear_lastsavetime();
  static const int kLastSaveTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastsavetime() const;
  inline void set_lastsavetime(::google::protobuf::uint64 value);

  // optional uint64 onlineTime = 3;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlineTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint64 value);

  // optional uint64 loginTime = 4;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 logintime() const;
  inline void set_logintime(::google::protobuf::uint64 value);

  // optional uint64 logoutTime = 5;
  inline bool has_logouttime() const;
  inline void clear_logouttime();
  static const int kLogoutTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 logouttime() const;
  inline void set_logouttime(::google::protobuf::uint64 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional uint32 prof = 8;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 8;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 9;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int64 exp = 10;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 10;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional int64 hp = 11;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 11;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 fight = 12;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 12;
  inline ::google::protobuf::int64 fight() const;
  inline void set_fight(::google::protobuf::int64 value);

  // optional uint64 gold = 13;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 13;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 diamond = 14;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 14;
  inline ::google::protobuf::uint64 diamond() const;
  inline void set_diamond(::google::protobuf::uint64 value);

  // optional uint64 binddiamond = 15;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBinddiamondFieldNumber = 15;
  inline ::google::protobuf::uint64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::uint64 value);

  // optional uint64 enter_scene_id = 16;
  inline bool has_enter_scene_id() const;
  inline void clear_enter_scene_id();
  static const int kEnterSceneIdFieldNumber = 16;
  inline ::google::protobuf::uint64 enter_scene_id() const;
  inline void set_enter_scene_id(::google::protobuf::uint64 value);

  // optional uint64 enter_map_id = 17;
  inline bool has_enter_map_id() const;
  inline void clear_enter_map_id();
  static const int kEnterMapIdFieldNumber = 17;
  inline ::google::protobuf::uint64 enter_map_id() const;
  inline void set_enter_map_id(::google::protobuf::uint64 value);

  // optional float enterPosX = 18;
  inline bool has_enterposx() const;
  inline void clear_enterposx();
  static const int kEnterPosXFieldNumber = 18;
  inline float enterposx() const;
  inline void set_enterposx(float value);

  // optional float enterPosY = 19;
  inline bool has_enterposy() const;
  inline void clear_enterposy();
  static const int kEnterPosYFieldNumber = 19;
  inline float enterposy() const;
  inline void set_enterposy(float value);

  // optional float enterPosZ = 20;
  inline bool has_enterposz() const;
  inline void clear_enterposz();
  static const int kEnterPosZFieldNumber = 20;
  inline float enterposz() const;
  inline void set_enterposz(float value);

  // optional uint64 lastSceneId = 21;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastSceneIdFieldNumber = 21;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastMapId = 22;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastMapIdFieldNumber = 22;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional float lastPosX = 23;
  inline bool has_lastposx() const;
  inline void clear_lastposx();
  static const int kLastPosXFieldNumber = 23;
  inline float lastposx() const;
  inline void set_lastposx(float value);

  // optional float lastPosY = 24;
  inline bool has_lastposy() const;
  inline void clear_lastposy();
  static const int kLastPosYFieldNumber = 24;
  inline float lastposy() const;
  inline void set_lastposy(float value);

  // optional float lastPosZ = 25;
  inline bool has_lastposz() const;
  inline void clear_lastposz();
  static const int kLastPosZFieldNumber = 25;
  inline float lastposz() const;
  inline void set_lastposz(float value);

  // optional uint64 lastReviveTime = 26;
  inline bool has_lastrevivetime() const;
  inline void clear_lastrevivetime();
  static const int kLastReviveTimeFieldNumber = 26;
  inline ::google::protobuf::uint64 lastrevivetime() const;
  inline void set_lastrevivetime(::google::protobuf::uint64 value);

  // optional uint32 curState = 27;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurStateFieldNumber = 27;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // optional float clx = 28;
  inline bool has_clx() const;
  inline void clear_clx();
  static const int kClxFieldNumber = 28;
  inline float clx() const;
  inline void set_clx(float value);

  // optional float cly = 29;
  inline bool has_cly() const;
  inline void clear_cly();
  static const int kClyFieldNumber = 29;
  inline float cly() const;
  inline void set_cly(float value);

  // optional float clz = 30;
  inline bool has_clz() const;
  inline void clear_clz();
  static const int kClzFieldNumber = 30;
  inline float clz() const;
  inline void set_clz(float value);

  // optional uint64 occupation = 31;
  inline bool has_occupation() const;
  inline void clear_occupation();
  static const int kOccupationFieldNumber = 31;
  inline ::google::protobuf::uint64 occupation() const;
  inline void set_occupation(::google::protobuf::uint64 value);

  // optional uint64 aptitude = 32;
  inline bool has_aptitude() const;
  inline void clear_aptitude();
  static const int kAptitudeFieldNumber = 32;
  inline ::google::protobuf::uint64 aptitude() const;
  inline void set_aptitude(::google::protobuf::uint64 value);

  // optional .proto_ff.CharFacadeProto facade = 33;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 33;
  inline const ::proto_ff::CharFacadeProto& facade() const;
  inline ::proto_ff::CharFacadeProto* mutable_facade();
  inline ::proto_ff::CharFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::CharFacadeProto* facade);

  // optional int64 arenacoin = 34;
  inline bool has_arenacoin() const;
  inline void clear_arenacoin();
  static const int kArenacoinFieldNumber = 34;
  inline ::google::protobuf::int64 arenacoin() const;
  inline void set_arenacoin(::google::protobuf::int64 value);

  // optional int64 starEssence = 35;
  inline bool has_staressence() const;
  inline void clear_staressence();
  static const int kStarEssenceFieldNumber = 35;
  inline ::google::protobuf::int64 staressence() const;
  inline void set_staressence(::google::protobuf::int64 value);

  // optional int64 starExp = 36;
  inline bool has_starexp() const;
  inline void clear_starexp();
  static const int kStarExpFieldNumber = 36;
  inline ::google::protobuf::int64 starexp() const;
  inline void set_starexp(::google::protobuf::int64 value);

  // optional int64 starFragment = 37;
  inline bool has_starfragment() const;
  inline void clear_starfragment();
  static const int kStarFragmentFieldNumber = 37;
  inline ::google::protobuf::int64 starfragment() const;
  inline void set_starfragment(::google::protobuf::int64 value);

  // optional int64 hangUpTime = 38;
  inline bool has_hanguptime() const;
  inline void clear_hanguptime();
  static const int kHangUpTimeFieldNumber = 38;
  inline ::google::protobuf::int64 hanguptime() const;
  inline void set_hanguptime(::google::protobuf::int64 value);

  // optional uint32 active_num = 39;
  inline bool has_active_num() const;
  inline void clear_active_num();
  static const int kActiveNumFieldNumber = 39;
  inline ::google::protobuf::uint32 active_num() const;
  inline void set_active_num(::google::protobuf::uint32 value);

  // optional int64 vipLevel = 40;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 40;
  inline ::google::protobuf::int64 viplevel() const;
  inline void set_viplevel(::google::protobuf::int64 value);

  // optional int64 godhoodExp = 41;
  inline bool has_godhoodexp() const;
  inline void clear_godhoodexp();
  static const int kGodhoodExpFieldNumber = 41;
  inline ::google::protobuf::int64 godhoodexp() const;
  inline void set_godhoodexp(::google::protobuf::int64 value);

  // optional int64 smallSpirit = 42;
  inline bool has_smallspirit() const;
  inline void clear_smallspirit();
  static const int kSmallSpiritFieldNumber = 42;
  inline ::google::protobuf::int64 smallspirit() const;
  inline void set_smallspirit(::google::protobuf::int64 value);

  // optional int64 bigSpirit = 43;
  inline bool has_bigspirit() const;
  inline void clear_bigspirit();
  static const int kBigSpiritFieldNumber = 43;
  inline ::google::protobuf::int64 bigspirit() const;
  inline void set_bigspirit(::google::protobuf::int64 value);

  // optional .proto_ff.CharMultTrimProto trim = 44;
  inline bool has_trim() const;
  inline void clear_trim();
  static const int kTrimFieldNumber = 44;
  inline const ::proto_ff::CharMultTrimProto& trim() const;
  inline ::proto_ff::CharMultTrimProto* mutable_trim();
  inline ::proto_ff::CharMultTrimProto* release_trim();
  inline void set_allocated_trim(::proto_ff::CharMultTrimProto* trim);

  // optional int32 finish_flag = 45;
  inline bool has_finish_flag() const;
  inline void clear_finish_flag();
  static const int kFinishFlagFieldNumber = 45;
  inline ::google::protobuf::int32 finish_flag() const;
  inline void set_finish_flag(::google::protobuf::int32 value);

  // optional string guide = 46;
  inline bool has_guide() const;
  inline void clear_guide();
  static const int kGuideFieldNumber = 46;
  inline const ::std::string& guide() const;
  inline void set_guide(const ::std::string& value);
  inline void set_guide(const char* value);
  inline void set_guide(const char* value, size_t size);
  inline ::std::string* mutable_guide();
  inline ::std::string* release_guide();
  inline void set_allocated_guide(::std::string* guide);

  // optional .proto_ff.ForceDupProto force = 47;
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 47;
  inline const ::proto_ff::ForceDupProto& force() const;
  inline ::proto_ff::ForceDupProto* mutable_force();
  inline ::proto_ff::ForceDupProto* release_force();
  inline void set_allocated_force(::proto_ff::ForceDupProto* force);

  // optional int64 useTitle = 48;
  inline bool has_usetitle() const;
  inline void clear_usetitle();
  static const int kUseTitleFieldNumber = 48;
  inline ::google::protobuf::int64 usetitle() const;
  inline void set_usetitle(::google::protobuf::int64 value);

  // optional int32 subpack_type = 49;
  inline bool has_subpack_type() const;
  inline void clear_subpack_type();
  static const int kSubpackTypeFieldNumber = 49;
  inline ::google::protobuf::int32 subpack_type() const;
  inline void set_subpack_type(::google::protobuf::int32 value);

  // optional int32 subpack_fetch = 50;
  inline bool has_subpack_fetch() const;
  inline void clear_subpack_fetch();
  static const int kSubpackFetchFieldNumber = 50;
  inline ::google::protobuf::int32 subpack_fetch() const;
  inline void set_subpack_fetch(::google::protobuf::int32 value);

  // optional int32 rechargeDiscountDate = 51;
  inline bool has_rechargediscountdate() const;
  inline void clear_rechargediscountdate();
  static const int kRechargeDiscountDateFieldNumber = 51;
  inline ::google::protobuf::int32 rechargediscountdate() const;
  inline void set_rechargediscountdate(::google::protobuf::int32 value);

  // optional int32 friendNum = 52;
  inline bool has_friendnum() const;
  inline void clear_friendnum();
  static const int kFriendNumFieldNumber = 52;
  inline ::google::protobuf::int32 friendnum() const;
  inline void set_friendnum(::google::protobuf::int32 value);

  // optional string platid = 53;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatidFieldNumber = 53;
  inline const ::std::string& platid() const;
  inline void set_platid(const ::std::string& value);
  inline void set_platid(const char* value);
  inline void set_platid(const char* value, size_t size);
  inline ::std::string* mutable_platid();
  inline ::std::string* release_platid();
  inline void set_allocated_platid(::std::string* platid);

  // optional int32 solo_score = 54;
  inline bool has_solo_score() const;
  inline void clear_solo_score();
  static const int kSoloScoreFieldNumber = 54;
  inline ::google::protobuf::int32 solo_score() const;
  inline void set_solo_score(::google::protobuf::int32 value);

  // optional int32 solo_prv_score = 55;
  inline bool has_solo_prv_score() const;
  inline void clear_solo_prv_score();
  static const int kSoloPrvScoreFieldNumber = 55;
  inline ::google::protobuf::int32 solo_prv_score() const;
  inline void set_solo_prv_score(::google::protobuf::int32 value);

  // optional int32 dragons_num = 56;
  inline bool has_dragons_num() const;
  inline void clear_dragons_num();
  static const int kDragonsNumFieldNumber = 56;
  inline ::google::protobuf::int32 dragons_num() const;
  inline void set_dragons_num(::google::protobuf::int32 value);

  // optional uint32 total_login_day = 57;
  inline bool has_total_login_day() const;
  inline void clear_total_login_day();
  static const int kTotalLoginDayFieldNumber = 57;
  inline ::google::protobuf::uint32 total_login_day() const;
  inline void set_total_login_day(::google::protobuf::uint32 value);

  // optional uint64 login_day_time = 58;
  inline bool has_login_day_time() const;
  inline void clear_login_day_time();
  static const int kLoginDayTimeFieldNumber = 58;
  inline ::google::protobuf::uint64 login_day_time() const;
  inline void set_login_day_time(::google::protobuf::uint64 value);

  // optional int32 login_gift = 59;
  inline bool has_login_gift() const;
  inline void clear_login_gift();
  static const int kLoginGiftFieldNumber = 59;
  inline ::google::protobuf::int32 login_gift() const;
  inline void set_login_gift(::google::protobuf::int32 value);

  // optional int64 vipCardDiamond = 60;
  inline bool has_vipcarddiamond() const;
  inline void clear_vipcarddiamond();
  static const int kVipCardDiamondFieldNumber = 60;
  inline ::google::protobuf::int64 vipcarddiamond() const;
  inline void set_vipcarddiamond(::google::protobuf::int64 value);

  // optional uint64 holydia = 61;
  inline bool has_holydia() const;
  inline void clear_holydia();
  static const int kHolydiaFieldNumber = 61;
  inline ::google::protobuf::uint64 holydia() const;
  inline void set_holydia(::google::protobuf::uint64 value);

  // optional int32 relive_num = 62;
  inline bool has_relive_num() const;
  inline void clear_relive_num();
  static const int kReliveNumFieldNumber = 62;
  inline ::google::protobuf::int32 relive_num() const;
  inline void set_relive_num(::google::protobuf::int32 value);

  // optional int64 last_relive_time = 63;
  inline bool has_last_relive_time() const;
  inline void clear_last_relive_time();
  static const int kLastReliveTimeFieldNumber = 63;
  inline ::google::protobuf::int64 last_relive_time() const;
  inline void set_last_relive_time(::google::protobuf::int64 value);

  // optional int64 dead_static_map_id = 64;
  inline bool has_dead_static_map_id() const;
  inline void clear_dead_static_map_id();
  static const int kDeadStaticMapIdFieldNumber = 64;
  inline ::google::protobuf::int64 dead_static_map_id() const;
  inline void set_dead_static_map_id(::google::protobuf::int64 value);

  // optional int32 dead_static_num = 65;
  inline bool has_dead_static_num() const;
  inline void clear_dead_static_num();
  static const int kDeadStaticNumFieldNumber = 65;
  inline ::google::protobuf::int32 dead_static_num() const;
  inline void set_dead_static_num(::google::protobuf::int32 value);

  // optional int64 dead_static_cd = 66;
  inline bool has_dead_static_cd() const;
  inline void clear_dead_static_cd();
  static const int kDeadStaticCdFieldNumber = 66;
  inline ::google::protobuf::int64 dead_static_cd() const;
  inline void set_dead_static_cd(::google::protobuf::int64 value);

  // optional int32 fushi_time = 67;
  inline bool has_fushi_time() const;
  inline void clear_fushi_time();
  static const int kFushiTimeFieldNumber = 67;
  inline ::google::protobuf::int32 fushi_time() const;
  inline void set_fushi_time(::google::protobuf::int32 value);

  // optional int64 starStone = 68;
  inline bool has_starstone() const;
  inline void clear_starstone();
  static const int kStarStoneFieldNumber = 68;
  inline ::google::protobuf::int64 starstone() const;
  inline void set_starstone(::google::protobuf::int64 value);

  // optional int64 voucher = 69;
  inline bool has_voucher() const;
  inline void clear_voucher();
  static const int kVoucherFieldNumber = 69;
  inline ::google::protobuf::int64 voucher() const;
  inline void set_voucher(::google::protobuf::int64 value);

  // optional int64 waiguan = 70;
  inline bool has_waiguan() const;
  inline void clear_waiguan();
  static const int kWaiguanFieldNumber = 70;
  inline ::google::protobuf::int64 waiguan() const;
  inline void set_waiguan(::google::protobuf::int64 value);

  // optional int64 gmpoint = 71;
  inline bool has_gmpoint() const;
  inline void clear_gmpoint();
  static const int kGmpointFieldNumber = 71;
  inline ::google::protobuf::int64 gmpoint() const;
  inline void set_gmpoint(::google::protobuf::int64 value);

  // optional int64 gmpoint_limit = 72;
  inline bool has_gmpoint_limit() const;
  inline void clear_gmpoint_limit();
  static const int kGmpointLimitFieldNumber = 72;
  inline ::google::protobuf::int64 gmpoint_limit() const;
  inline void set_gmpoint_limit(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBBaseInfo)
 private:
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_lastsavetime();
  inline void clear_has_lastsavetime();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_logouttime();
  inline void clear_has_logouttime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_enter_scene_id();
  inline void clear_has_enter_scene_id();
  inline void set_has_enter_map_id();
  inline void clear_has_enter_map_id();
  inline void set_has_enterposx();
  inline void clear_has_enterposx();
  inline void set_has_enterposy();
  inline void clear_has_enterposy();
  inline void set_has_enterposz();
  inline void clear_has_enterposz();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastposx();
  inline void clear_has_lastposx();
  inline void set_has_lastposy();
  inline void clear_has_lastposy();
  inline void set_has_lastposz();
  inline void clear_has_lastposz();
  inline void set_has_lastrevivetime();
  inline void clear_has_lastrevivetime();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_clx();
  inline void clear_has_clx();
  inline void set_has_cly();
  inline void clear_has_cly();
  inline void set_has_clz();
  inline void clear_has_clz();
  inline void set_has_occupation();
  inline void clear_has_occupation();
  inline void set_has_aptitude();
  inline void clear_has_aptitude();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_arenacoin();
  inline void clear_has_arenacoin();
  inline void set_has_staressence();
  inline void clear_has_staressence();
  inline void set_has_starexp();
  inline void clear_has_starexp();
  inline void set_has_starfragment();
  inline void clear_has_starfragment();
  inline void set_has_hanguptime();
  inline void clear_has_hanguptime();
  inline void set_has_active_num();
  inline void clear_has_active_num();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_godhoodexp();
  inline void clear_has_godhoodexp();
  inline void set_has_smallspirit();
  inline void clear_has_smallspirit();
  inline void set_has_bigspirit();
  inline void clear_has_bigspirit();
  inline void set_has_trim();
  inline void clear_has_trim();
  inline void set_has_finish_flag();
  inline void clear_has_finish_flag();
  inline void set_has_guide();
  inline void clear_has_guide();
  inline void set_has_force();
  inline void clear_has_force();
  inline void set_has_usetitle();
  inline void clear_has_usetitle();
  inline void set_has_subpack_type();
  inline void clear_has_subpack_type();
  inline void set_has_subpack_fetch();
  inline void clear_has_subpack_fetch();
  inline void set_has_rechargediscountdate();
  inline void clear_has_rechargediscountdate();
  inline void set_has_friendnum();
  inline void clear_has_friendnum();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_solo_score();
  inline void clear_has_solo_score();
  inline void set_has_solo_prv_score();
  inline void clear_has_solo_prv_score();
  inline void set_has_dragons_num();
  inline void clear_has_dragons_num();
  inline void set_has_total_login_day();
  inline void clear_has_total_login_day();
  inline void set_has_login_day_time();
  inline void clear_has_login_day_time();
  inline void set_has_login_gift();
  inline void clear_has_login_gift();
  inline void set_has_vipcarddiamond();
  inline void clear_has_vipcarddiamond();
  inline void set_has_holydia();
  inline void clear_has_holydia();
  inline void set_has_relive_num();
  inline void clear_has_relive_num();
  inline void set_has_last_relive_time();
  inline void clear_has_last_relive_time();
  inline void set_has_dead_static_map_id();
  inline void clear_has_dead_static_map_id();
  inline void set_has_dead_static_num();
  inline void clear_has_dead_static_num();
  inline void set_has_dead_static_cd();
  inline void clear_has_dead_static_cd();
  inline void set_has_fushi_time();
  inline void clear_has_fushi_time();
  inline void set_has_starstone();
  inline void clear_has_starstone();
  inline void set_has_voucher();
  inline void clear_has_voucher();
  inline void set_has_waiguan();
  inline void clear_has_waiguan();
  inline void set_has_gmpoint();
  inline void clear_has_gmpoint();
  inline void set_has_gmpoint_limit();
  inline void clear_has_gmpoint_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint64 lastsavetime_;
  ::google::protobuf::uint64 onlinetime_;
  ::google::protobuf::uint64 logintime_;
  ::google::protobuf::uint64 logouttime_;
  ::std::string* name_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 fight_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint32 level_;
  float enterposx_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint64 binddiamond_;
  ::google::protobuf::uint64 enter_scene_id_;
  ::google::protobuf::uint64 enter_map_id_;
  float enterposy_;
  float enterposz_;
  ::google::protobuf::uint64 lastsceneid_;
  ::google::protobuf::uint64 lastmapid_;
  float lastposx_;
  float lastposy_;
  float lastposz_;
  ::google::protobuf::uint32 curstate_;
  ::google::protobuf::uint64 lastrevivetime_;
  float clx_;
  float cly_;
  ::google::protobuf::uint64 occupation_;
  ::google::protobuf::uint64 aptitude_;
  ::proto_ff::CharFacadeProto* facade_;
  ::google::protobuf::int64 arenacoin_;
  float clz_;
  ::google::protobuf::uint32 active_num_;
  ::google::protobuf::int64 staressence_;
  ::google::protobuf::int64 starexp_;
  ::google::protobuf::int64 starfragment_;
  ::google::protobuf::int64 hanguptime_;
  ::google::protobuf::int64 viplevel_;
  ::google::protobuf::int64 godhoodexp_;
  ::google::protobuf::int64 smallspirit_;
  ::google::protobuf::int64 bigspirit_;
  ::proto_ff::CharMultTrimProto* trim_;
  ::std::string* guide_;
  ::google::protobuf::int32 finish_flag_;
  ::google::protobuf::int32 subpack_type_;
  ::proto_ff::ForceDupProto* force_;
  ::google::protobuf::int64 usetitle_;
  ::google::protobuf::int32 subpack_fetch_;
  ::google::protobuf::int32 rechargediscountdate_;
  ::google::protobuf::int32 friendnum_;
  ::google::protobuf::int32 solo_score_;
  ::std::string* platid_;
  ::google::protobuf::int32 solo_prv_score_;
  ::google::protobuf::int32 dragons_num_;
  ::google::protobuf::uint32 total_login_day_;
  ::google::protobuf::int32 login_gift_;
  ::google::protobuf::uint64 login_day_time_;
  ::google::protobuf::int64 vipcarddiamond_;
  ::google::protobuf::uint64 holydia_;
  ::google::protobuf::int64 last_relive_time_;
  ::google::protobuf::int32 relive_num_;
  ::google::protobuf::int32 dead_static_num_;
  ::google::protobuf::int64 dead_static_map_id_;
  ::google::protobuf::int64 dead_static_cd_;
  ::google::protobuf::int64 starstone_;
  ::google::protobuf::int64 voucher_;
  ::google::protobuf::int64 waiguan_;
  ::google::protobuf::int64 gmpoint_;
  ::google::protobuf::int64 gmpoint_limit_;
  ::google::protobuf::int32 fushi_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(72 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class Attr : public ::google::protobuf::Message {
 public:
  Attr();
  virtual ~Attr();

  Attr(const Attr& from);

  inline Attr& operator=(const Attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr& default_instance();

  void Swap(Attr* other);

  // implements Message ----------------------------------------------

  Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr& from);
  void MergeFrom(const Attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AttrNum = 1;
  inline bool has_attrnum() const;
  inline void clear_attrnum();
  static const int kAttrNumFieldNumber = 1;
  inline ::google::protobuf::uint32 attrnum() const;
  inline void set_attrnum(::google::protobuf::uint32 value);

  // optional uint32 Attrvalue = 2;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr)
 private:
  inline void set_has_attrnum();
  inline void clear_has_attrnum();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 attrnum_;
  ::google::protobuf::uint32 attrvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static Attr* default_instance_;
};
// -------------------------------------------------------------------

class Attr64 : public ::google::protobuf::Message {
 public:
  Attr64();
  virtual ~Attr64();

  Attr64(const Attr64& from);

  inline Attr64& operator=(const Attr64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Attr64& default_instance();

  void Swap(Attr64* other);

  // implements Message ----------------------------------------------

  Attr64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Attr64& from);
  void MergeFrom(const Attr64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AttrNum = 1;
  inline bool has_attrnum() const;
  inline void clear_attrnum();
  static const int kAttrNumFieldNumber = 1;
  inline ::google::protobuf::uint32 attrnum() const;
  inline void set_attrnum(::google::protobuf::uint32 value);

  // optional int64 Attrvalue = 2;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 2;
  inline ::google::protobuf::int64 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Attr64)
 private:
  inline void set_has_attrnum();
  inline void clear_has_attrnum();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 attrvalue_;
  ::google::protobuf::uint32 attrnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static Attr64* default_instance_;
};
// -------------------------------------------------------------------

class AttrEx64 : public ::google::protobuf::Message {
 public:
  AttrEx64();
  virtual ~AttrEx64();

  AttrEx64(const AttrEx64& from);

  inline AttrEx64& operator=(const AttrEx64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttrEx64& default_instance();

  void Swap(AttrEx64* other);

  // implements Message ----------------------------------------------

  AttrEx64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttrEx64& from);
  void MergeFrom(const AttrEx64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AttrNum = 1;
  inline bool has_attrnum() const;
  inline void clear_attrnum();
  static const int kAttrNumFieldNumber = 1;
  inline ::google::protobuf::uint32 attrnum() const;
  inline void set_attrnum(::google::protobuf::uint32 value);

  // optional uint64 Attrvalue = 2;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 2;
  inline ::google::protobuf::uint64 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::uint64 value);

  // optional uint32 AttrIndex = 3;
  inline bool has_attrindex() const;
  inline void clear_attrindex();
  static const int kAttrIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 attrindex() const;
  inline void set_attrindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.AttrEx64)
 private:
  inline void set_has_attrnum();
  inline void clear_has_attrnum();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();
  inline void set_has_attrindex();
  inline void clear_has_attrindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 attrvalue_;
  ::google::protobuf::uint32 attrnum_;
  ::google::protobuf::uint32 attrindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static AttrEx64* default_instance_;
};
// -------------------------------------------------------------------

class FieldItemAttrInfo : public ::google::protobuf::Message {
 public:
  FieldItemAttrInfo();
  virtual ~FieldItemAttrInfo();

  FieldItemAttrInfo(const FieldItemAttrInfo& from);

  inline FieldItemAttrInfo& operator=(const FieldItemAttrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldItemAttrInfo& default_instance();

  void Swap(FieldItemAttrInfo* other);

  // implements Message ----------------------------------------------

  FieldItemAttrInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldItemAttrInfo& from);
  void MergeFrom(const FieldItemAttrInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.Attr base_attr = 1;
  inline int base_attr_size() const;
  inline void clear_base_attr();
  static const int kBaseAttrFieldNumber = 1;
  inline const ::proto_ff::Attr& base_attr(int index) const;
  inline ::proto_ff::Attr* mutable_base_attr(int index);
  inline ::proto_ff::Attr* add_base_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      base_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_base_attr();

  // repeated .proto_ff.Attr star_attr = 2;
  inline int star_attr_size() const;
  inline void clear_star_attr();
  static const int kStarAttrFieldNumber = 2;
  inline const ::proto_ff::Attr& star_attr(int index) const;
  inline ::proto_ff::Attr* mutable_star_attr(int index);
  inline ::proto_ff::Attr* add_star_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      star_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_star_attr();

  // repeated .proto_ff.Attr blue_star_attr = 3;
  inline int blue_star_attr_size() const;
  inline void clear_blue_star_attr();
  static const int kBlueStarAttrFieldNumber = 3;
  inline const ::proto_ff::Attr& blue_star_attr(int index) const;
  inline ::proto_ff::Attr* mutable_blue_star_attr(int index);
  inline ::proto_ff::Attr* add_blue_star_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      blue_star_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_blue_star_attr();

  // optional int32 refine_level = 4;
  inline bool has_refine_level() const;
  inline void clear_refine_level();
  static const int kRefineLevelFieldNumber = 4;
  inline ::google::protobuf::int32 refine_level() const;
  inline void set_refine_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FieldItemAttrInfo)
 private:
  inline void set_has_refine_level();
  inline void clear_has_refine_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > base_attr_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > star_attr_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > blue_star_attr_;
  ::google::protobuf::int32 refine_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FieldItemAttrInfo* default_instance_;
};
// -------------------------------------------------------------------

class MarryEquipInfo : public ::google::protobuf::Message {
 public:
  MarryEquipInfo();
  virtual ~MarryEquipInfo();

  MarryEquipInfo(const MarryEquipInfo& from);

  inline MarryEquipInfo& operator=(const MarryEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarryEquipInfo& default_instance();

  void Swap(MarryEquipInfo* other);

  // implements Message ----------------------------------------------

  MarryEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarryEquipInfo& from);
  void MergeFrom(const MarryEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 strong_lv = 1;
  inline bool has_strong_lv() const;
  inline void clear_strong_lv();
  static const int kStrongLvFieldNumber = 1;
  inline ::google::protobuf::int32 strong_lv() const;
  inline void set_strong_lv(::google::protobuf::int32 value);

  // optional int32 strong_exp = 2;
  inline bool has_strong_exp() const;
  inline void clear_strong_exp();
  static const int kStrongExpFieldNumber = 2;
  inline ::google::protobuf::int32 strong_exp() const;
  inline void set_strong_exp(::google::protobuf::int32 value);

  // optional int32 stage_lv = 3;
  inline bool has_stage_lv() const;
  inline void clear_stage_lv();
  static const int kStageLvFieldNumber = 3;
  inline ::google::protobuf::int32 stage_lv() const;
  inline void set_stage_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MarryEquipInfo)
 private:
  inline void set_has_strong_lv();
  inline void clear_has_strong_lv();
  inline void set_has_strong_exp();
  inline void clear_has_strong_exp();
  inline void set_has_stage_lv();
  inline void clear_has_stage_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 strong_lv_;
  ::google::protobuf::int32 strong_exp_;
  ::google::protobuf::int32 stage_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static MarryEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class ComposeSingleCostProto : public ::google::protobuf::Message {
 public:
  ComposeSingleCostProto();
  virtual ~ComposeSingleCostProto();

  ComposeSingleCostProto(const ComposeSingleCostProto& from);

  inline ComposeSingleCostProto& operator=(const ComposeSingleCostProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComposeSingleCostProto& default_instance();

  void Swap(ComposeSingleCostProto* other);

  // implements Message ----------------------------------------------

  ComposeSingleCostProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComposeSingleCostProto& from);
  void MergeFrom(const ComposeSingleCostProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional int32 bind = 2;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 2;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComposeSingleCostProto)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::int32 bind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ComposeSingleCostProto* default_instance_;
};
// -------------------------------------------------------------------

class ComposeCostProto : public ::google::protobuf::Message {
 public:
  ComposeCostProto();
  virtual ~ComposeCostProto();

  ComposeCostProto(const ComposeCostProto& from);

  inline ComposeCostProto& operator=(const ComposeCostProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComposeCostProto& default_instance();

  void Swap(ComposeCostProto* other);

  // implements Message ----------------------------------------------

  ComposeCostProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComposeCostProto& from);
  void MergeFrom(const ComposeCostProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComposeSingleCostProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::ComposeSingleCostProto& info(int index) const;
  inline ::proto_ff::ComposeSingleCostProto* mutable_info(int index);
  inline ::proto_ff::ComposeSingleCostProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComposeSingleCostProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComposeSingleCostProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.ComposeCostProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComposeSingleCostProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ComposeCostProto* default_instance_;
};
// -------------------------------------------------------------------

class blustarAttr : public ::google::protobuf::Message {
 public:
  blustarAttr();
  virtual ~blustarAttr();

  blustarAttr(const blustarAttr& from);

  inline blustarAttr& operator=(const blustarAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const blustarAttr& default_instance();

  void Swap(blustarAttr* other);

  // implements Message ----------------------------------------------

  blustarAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const blustarAttr& from);
  void MergeFrom(const blustarAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 attrid = 1;
  inline bool has_attrid() const;
  inline void clear_attrid();
  static const int kAttridFieldNumber = 1;
  inline ::google::protobuf::uint32 attrid() const;
  inline void set_attrid(::google::protobuf::uint32 value);

  // optional uint32 levelinterval = 2;
  inline bool has_levelinterval() const;
  inline void clear_levelinterval();
  static const int kLevelintervalFieldNumber = 2;
  inline ::google::protobuf::uint32 levelinterval() const;
  inline void set_levelinterval(::google::protobuf::uint32 value);

  // optional uint32 attrvalue = 3;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 3;
  inline ::google::protobuf::uint32 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.blustarAttr)
 private:
  inline void set_has_attrid();
  inline void clear_has_attrid();
  inline void set_has_levelinterval();
  inline void clear_has_levelinterval();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 attrid_;
  ::google::protobuf::uint32 levelinterval_;
  ::google::protobuf::uint32 attrvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static blustarAttr* default_instance_;
};
// -------------------------------------------------------------------

class ItemProtoInfo : public ::google::protobuf::Message {
 public:
  ItemProtoInfo();
  virtual ~ItemProtoInfo();

  ItemProtoInfo(const ItemProtoInfo& from);

  inline ItemProtoInfo& operator=(const ItemProtoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemProtoInfo& default_instance();

  void Swap(ItemProtoInfo* other);

  // implements Message ----------------------------------------------

  ItemProtoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemProtoInfo& from);
  void MergeFrom(const ItemProtoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional int64 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::int64 item_num() const;
  inline void set_item_num(::google::protobuf::int64 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr baseattr = 4;
  inline int baseattr_size() const;
  inline void clear_baseattr();
  static const int kBaseattrFieldNumber = 4;
  inline const ::proto_ff::Attr& baseattr(int index) const;
  inline ::proto_ff::Attr* mutable_baseattr(int index);
  inline ::proto_ff::Attr* add_baseattr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      baseattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_baseattr();

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr refineex = 8;
  inline int refineex_size() const;
  inline void clear_refineex();
  static const int kRefineexFieldNumber = 8;
  inline const ::proto_ff::Attr& refineex(int index) const;
  inline ::proto_ff::Attr* mutable_refineex(int index);
  inline ::proto_ff::Attr* add_refineex();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      refineex() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_refineex();

  // repeated .proto_ff.blustarAttr con_attr = 9;
  inline int con_attr_size() const;
  inline void clear_con_attr();
  static const int kConAttrFieldNumber = 9;
  inline const ::proto_ff::blustarAttr& con_attr(int index) const;
  inline ::proto_ff::blustarAttr* mutable_con_attr(int index);
  inline ::proto_ff::blustarAttr* add_con_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::blustarAttr >&
      con_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::blustarAttr >*
      mutable_con_attr();

  // optional uint64 expireTime = 10;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // optional .proto_ff.FieldItemAttrInfo field_data = 11;
  inline bool has_field_data() const;
  inline void clear_field_data();
  static const int kFieldDataFieldNumber = 11;
  inline const ::proto_ff::FieldItemAttrInfo& field_data() const;
  inline ::proto_ff::FieldItemAttrInfo* mutable_field_data();
  inline ::proto_ff::FieldItemAttrInfo* release_field_data();
  inline void set_allocated_field_data(::proto_ff::FieldItemAttrInfo* field_data);

  // optional .proto_ff.MarryEquipInfo marry_equip_data = 12;
  inline bool has_marry_equip_data() const;
  inline void clear_marry_equip_data();
  static const int kMarryEquipDataFieldNumber = 12;
  inline const ::proto_ff::MarryEquipInfo& marry_equip_data() const;
  inline ::proto_ff::MarryEquipInfo* mutable_marry_equip_data();
  inline ::proto_ff::MarryEquipInfo* release_marry_equip_data();
  inline void set_allocated_marry_equip_data(::proto_ff::MarryEquipInfo* marry_equip_data);

  // optional .proto_ff.ComposeCostProto compose = 13;
  inline bool has_compose() const;
  inline void clear_compose();
  static const int kComposeFieldNumber = 13;
  inline const ::proto_ff::ComposeCostProto& compose() const;
  inline ::proto_ff::ComposeCostProto* mutable_compose();
  inline ::proto_ff::ComposeCostProto* release_compose();
  inline void set_allocated_compose(::proto_ff::ComposeCostProto* compose);

  // optional uint64 out_time = 14;
  inline bool has_out_time() const;
  inline void clear_out_time();
  static const int kOutTimeFieldNumber = 14;
  inline ::google::protobuf::uint64 out_time() const;
  inline void set_out_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemProtoInfo)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_field_data();
  inline void clear_has_field_data();
  inline void set_has_marry_equip_data();
  inline void clear_has_marry_equip_data();
  inline void set_has_compose();
  inline void clear_has_compose();
  inline void set_has_out_time();
  inline void clear_has_out_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::int64 item_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > baseattr_;
  ::google::protobuf::int32 bind_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > refineex_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::blustarAttr > con_attr_;
  ::google::protobuf::uint64 expiretime_;
  ::proto_ff::FieldItemAttrInfo* field_data_;
  ::proto_ff::MarryEquipInfo* marry_equip_data_;
  ::proto_ff::ComposeCostProto* compose_;
  ::google::protobuf::uint64 out_time_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ItemProtoInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBPackageBag : public ::google::protobuf::Message {
 public:
  CharacterDBPackageBag();
  virtual ~CharacterDBPackageBag();

  CharacterDBPackageBag(const CharacterDBPackageBag& from);

  inline CharacterDBPackageBag& operator=(const CharacterDBPackageBag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBPackageBag& default_instance();

  void Swap(CharacterDBPackageBag* other);

  // implements Message ----------------------------------------------

  CharacterDBPackageBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBPackageBag& from);
  void MergeFrom(const CharacterDBPackageBag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 package_type = 1;
  inline bool has_package_type() const;
  inline void clear_package_type();
  static const int kPackageTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 package_type() const;
  inline void set_package_type(::google::protobuf::uint32 value);

  // optional uint32 expand_num = 2;
  inline bool has_expand_num() const;
  inline void clear_expand_num();
  static const int kExpandNumFieldNumber = 2;
  inline ::google::protobuf::uint32 expand_num() const;
  inline void set_expand_num(::google::protobuf::uint32 value);

  // repeated .proto_ff.ItemProtoInfo items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::proto_ff::ItemProtoInfo& items(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_items(int index);
  inline ::proto_ff::ItemProtoInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_items();

  // optional int32 offset = 4;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 4;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBPackageBag)
 private:
  inline void set_has_package_type();
  inline void clear_has_package_type();
  inline void set_has_expand_num();
  inline void clear_has_expand_num();
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 package_type_;
  ::google::protobuf::uint32 expand_num_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > items_;
  ::google::protobuf::int32 offset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBPackageBag* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBPackageData : public ::google::protobuf::Message {
 public:
  CharacterDBPackageData();
  virtual ~CharacterDBPackageData();

  CharacterDBPackageData(const CharacterDBPackageData& from);

  inline CharacterDBPackageData& operator=(const CharacterDBPackageData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBPackageData& default_instance();

  void Swap(CharacterDBPackageData* other);

  // implements Message ----------------------------------------------

  CharacterDBPackageData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBPackageData& from);
  void MergeFrom(const CharacterDBPackageData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBPackageBag bags = 1;
  inline int bags_size() const;
  inline void clear_bags();
  static const int kBagsFieldNumber = 1;
  inline const ::proto_ff::CharacterDBPackageBag& bags(int index) const;
  inline ::proto_ff::CharacterDBPackageBag* mutable_bags(int index);
  inline ::proto_ff::CharacterDBPackageBag* add_bags();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBPackageBag >&
      bags() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBPackageBag >*
      mutable_bags();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBPackageData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBPackageBag > bags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBPackageData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionItemInfo : public ::google::protobuf::Message {
 public:
  CharacterDBMissionItemInfo();
  virtual ~CharacterDBMissionItemInfo();

  CharacterDBMissionItemInfo(const CharacterDBMissionItemInfo& from);

  inline CharacterDBMissionItemInfo& operator=(const CharacterDBMissionItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionItemInfo& default_instance();

  void Swap(CharacterDBMissionItemInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionItemInfo& from);
  void MergeFrom(const CharacterDBMissionItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 currentValue = 3;
  inline bool has_currentvalue() const;
  inline void clear_currentvalue();
  static const int kCurrentValueFieldNumber = 3;
  inline ::google::protobuf::uint32 currentvalue() const;
  inline void set_currentvalue(::google::protobuf::uint32 value);

  // optional uint32 finalValue = 4;
  inline bool has_finalvalue() const;
  inline void clear_finalvalue();
  static const int kFinalValueFieldNumber = 4;
  inline ::google::protobuf::uint32 finalvalue() const;
  inline void set_finalvalue(::google::protobuf::uint32 value);

  // optional bool completedFlag = 5;
  inline bool has_completedflag() const;
  inline void clear_completedflag();
  static const int kCompletedFlagFieldNumber = 5;
  inline bool completedflag() const;
  inline void set_completedflag(bool value);

  // optional uint64 parma1 = 6;
  inline bool has_parma1() const;
  inline void clear_parma1();
  static const int kParma1FieldNumber = 6;
  inline ::google::protobuf::uint64 parma1() const;
  inline void set_parma1(::google::protobuf::uint64 value);

  // optional uint64 parma2 = 7;
  inline bool has_parma2() const;
  inline void clear_parma2();
  static const int kParma2FieldNumber = 7;
  inline ::google::protobuf::uint64 parma2() const;
  inline void set_parma2(::google::protobuf::uint64 value);

  // optional uint64 parma3 = 8;
  inline bool has_parma3() const;
  inline void clear_parma3();
  static const int kParma3FieldNumber = 8;
  inline ::google::protobuf::uint64 parma3() const;
  inline void set_parma3(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionItemInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currentvalue();
  inline void clear_has_currentvalue();
  inline void set_has_finalvalue();
  inline void clear_has_finalvalue();
  inline void set_has_completedflag();
  inline void clear_has_completedflag();
  inline void set_has_parma1();
  inline void clear_has_parma1();
  inline void set_has_parma2();
  inline void clear_has_parma2();
  inline void set_has_parma3();
  inline void clear_has_parma3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 currentvalue_;
  ::google::protobuf::uint32 finalvalue_;
  bool completedflag_;
  ::google::protobuf::uint64 parma1_;
  ::google::protobuf::uint64 parma2_;
  ::google::protobuf::uint64 parma3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMissionTrack : public ::google::protobuf::Message {
 public:
  CharacterDBMissionTrack();
  virtual ~CharacterDBMissionTrack();

  CharacterDBMissionTrack(const CharacterDBMissionTrack& from);

  inline CharacterDBMissionTrack& operator=(const CharacterDBMissionTrack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMissionTrack& default_instance();

  void Swap(CharacterDBMissionTrack* other);

  // implements Message ----------------------------------------------

  CharacterDBMissionTrack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMissionTrack& from);
  void MergeFrom(const CharacterDBMissionTrack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 missionid() const;
  inline void set_missionid(::google::protobuf::uint64 value);

  // optional uint64 dynamicid = 2;
  inline bool has_dynamicid() const;
  inline void clear_dynamicid();
  static const int kDynamicidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynamicid() const;
  inline void set_dynamicid(::google::protobuf::uint64 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint64 acceptMissionTime = 4;
  inline bool has_acceptmissiontime() const;
  inline void clear_acceptmissiontime();
  static const int kAcceptMissionTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 acceptmissiontime() const;
  inline void set_acceptmissiontime(::google::protobuf::uint64 value);

  // repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 5;
  inline const ::proto_ff::CharacterDBMissionItemInfo& iteminfo(int index) const;
  inline ::proto_ff::CharacterDBMissionItemInfo* mutable_iteminfo(int index);
  inline ::proto_ff::CharacterDBMissionItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
      mutable_iteminfo();

  // optional uint64 textid = 6;
  inline bool has_textid() const;
  inline void clear_textid();
  static const int kTextidFieldNumber = 6;
  inline ::google::protobuf::uint64 textid() const;
  inline void set_textid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMissionTrack)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_dynamicid();
  inline void clear_has_dynamicid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_acceptmissiontime();
  inline void clear_has_acceptmissiontime();
  inline void set_has_textid();
  inline void clear_has_textid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 missionid_;
  ::google::protobuf::uint64 dynamicid_;
  ::google::protobuf::uint64 acceptmissiontime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo > iteminfo_;
  ::google::protobuf::uint64 textid_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMissionTrack* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDyMissionInfo : public ::google::protobuf::Message {
 public:
  CharacterDBDyMissionInfo();
  virtual ~CharacterDBDyMissionInfo();

  CharacterDBDyMissionInfo(const CharacterDBDyMissionInfo& from);

  inline CharacterDBDyMissionInfo& operator=(const CharacterDBDyMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDyMissionInfo& default_instance();

  void Swap(CharacterDBDyMissionInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBDyMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDyMissionInfo& from);
  void MergeFrom(const CharacterDBDyMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 lastfresh = 2;
  inline bool has_lastfresh() const;
  inline void clear_lastfresh();
  static const int kLastfreshFieldNumber = 2;
  inline ::google::protobuf::uint64 lastfresh() const;
  inline void set_lastfresh(::google::protobuf::uint64 value);

  // optional int32 accept_num = 3;
  inline bool has_accept_num() const;
  inline void clear_accept_num();
  static const int kAcceptNumFieldNumber = 3;
  inline ::google::protobuf::int32 accept_num() const;
  inline void set_accept_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDyMissionInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_lastfresh();
  inline void clear_has_lastfresh();
  inline void set_has_accept_num();
  inline void clear_has_accept_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lastfresh_;
  ::google::protobuf::int32 mission_type_;
  ::google::protobuf::int32 accept_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDyMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBRecentSubmitMission : public ::google::protobuf::Message {
 public:
  CharacterDBRecentSubmitMission();
  virtual ~CharacterDBRecentSubmitMission();

  CharacterDBRecentSubmitMission(const CharacterDBRecentSubmitMission& from);

  inline CharacterDBRecentSubmitMission& operator=(const CharacterDBRecentSubmitMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBRecentSubmitMission& default_instance();

  void Swap(CharacterDBRecentSubmitMission* other);

  // implements Message ----------------------------------------------

  CharacterDBRecentSubmitMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBRecentSubmitMission& from);
  void MergeFrom(const CharacterDBRecentSubmitMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mission_type() const;
  inline void set_mission_type(::google::protobuf::int32 value);

  // optional uint64 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mission_id() const;
  inline void set_mission_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBRecentSubmitMission)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mission_id_;
  ::google::protobuf::int32 mission_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBRecentSubmitMission* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBTaskData : public ::google::protobuf::Message {
 public:
  CharacterDBTaskData();
  virtual ~CharacterDBTaskData();

  CharacterDBTaskData(const CharacterDBTaskData& from);

  inline CharacterDBTaskData& operator=(const CharacterDBTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBTaskData& default_instance();

  void Swap(CharacterDBTaskData* other);

  // implements Message ----------------------------------------------

  CharacterDBTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBTaskData& from);
  void MergeFrom(const CharacterDBTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
  inline int missiontrack_size() const;
  inline void clear_missiontrack();
  static const int kMissionTrackFieldNumber = 1;
  inline const ::proto_ff::CharacterDBMissionTrack& missiontrack(int index) const;
  inline ::proto_ff::CharacterDBMissionTrack* mutable_missiontrack(int index);
  inline ::proto_ff::CharacterDBMissionTrack* add_missiontrack();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
      missiontrack() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
      mutable_missiontrack();

  // repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
  inline int dyinfo_size() const;
  inline void clear_dyinfo();
  static const int kDyinfoFieldNumber = 2;
  inline const ::proto_ff::CharacterDBDyMissionInfo& dyinfo(int index) const;
  inline ::proto_ff::CharacterDBDyMissionInfo* mutable_dyinfo(int index);
  inline ::proto_ff::CharacterDBDyMissionInfo* add_dyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
      dyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
      mutable_dyinfo();

  // repeated uint64 already_submit = 3;
  inline int already_submit_size() const;
  inline void clear_already_submit();
  static const int kAlreadySubmitFieldNumber = 3;
  inline ::google::protobuf::uint64 already_submit(int index) const;
  inline void set_already_submit(int index, ::google::protobuf::uint64 value);
  inline void add_already_submit(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      already_submit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_already_submit();

  // repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
  inline int recent_submit_size() const;
  inline void clear_recent_submit();
  static const int kRecentSubmitFieldNumber = 4;
  inline const ::proto_ff::CharacterDBRecentSubmitMission& recent_submit(int index) const;
  inline ::proto_ff::CharacterDBRecentSubmitMission* mutable_recent_submit(int index);
  inline ::proto_ff::CharacterDBRecentSubmitMission* add_recent_submit();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
      recent_submit() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
      mutable_recent_submit();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBTaskData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack > missiontrack_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo > dyinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > already_submit_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission > recent_submit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBTaskData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSkillItem : public ::google::protobuf::Message {
 public:
  CharacterDBSkillItem();
  virtual ~CharacterDBSkillItem();

  CharacterDBSkillItem(const CharacterDBSkillItem& from);

  inline CharacterDBSkillItem& operator=(const CharacterDBSkillItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSkillItem& default_instance();

  void Swap(CharacterDBSkillItem* other);

  // implements Message ----------------------------------------------

  CharacterDBSkillItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSkillItem& from);
  void MergeFrom(const CharacterDBSkillItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 skillID = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // optional int32 skillLevel = 2;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::int32 value);

  // optional uint64 cd = 3;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline ::google::protobuf::uint64 cd() const;
  inline void set_cd(::google::protobuf::uint64 value);

  // optional int32 unlock = 4;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 4;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);

  // optional int64 replace_skillid = 5;
  inline bool has_replace_skillid() const;
  inline void clear_replace_skillid();
  static const int kReplaceSkillidFieldNumber = 5;
  inline ::google::protobuf::int64 replace_skillid() const;
  inline void set_replace_skillid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSkillItem)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_replace_skillid();
  inline void clear_has_replace_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 skillid_;
  ::google::protobuf::uint64 cd_;
  ::google::protobuf::int32 skilllevel_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::int64 replace_skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSkillItem* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSkillData : public ::google::protobuf::Message {
 public:
  CharacterDBSkillData();
  virtual ~CharacterDBSkillData();

  CharacterDBSkillData(const CharacterDBSkillData& from);

  inline CharacterDBSkillData& operator=(const CharacterDBSkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSkillData& default_instance();

  void Swap(CharacterDBSkillData* other);

  // implements Message ----------------------------------------------

  CharacterDBSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSkillData& from);
  void MergeFrom(const CharacterDBSkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBSkillItem skillList = 1;
  inline int skilllist_size() const;
  inline void clear_skilllist();
  static const int kSkillListFieldNumber = 1;
  inline const ::proto_ff::CharacterDBSkillItem& skilllist(int index) const;
  inline ::proto_ff::CharacterDBSkillItem* mutable_skilllist(int index);
  inline ::proto_ff::CharacterDBSkillItem* add_skilllist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSkillItem >&
      skilllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSkillItem >*
      mutable_skilllist();

  // repeated uint32 skillAttrs = 2;
  inline int skillattrs_size() const;
  inline void clear_skillattrs();
  static const int kSkillAttrsFieldNumber = 2;
  inline ::google::protobuf::uint32 skillattrs(int index) const;
  inline void set_skillattrs(int index, ::google::protobuf::uint32 value);
  inline void add_skillattrs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillattrs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillattrs();

  // repeated int64 skillslot = 3;
  inline int skillslot_size() const;
  inline void clear_skillslot();
  static const int kSkillslotFieldNumber = 3;
  inline ::google::protobuf::int64 skillslot(int index) const;
  inline void set_skillslot(int index, ::google::protobuf::int64 value);
  inline void add_skillslot(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      skillslot() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_skillslot();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSkillData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSkillItem > skilllist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillattrs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > skillslot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSkillData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBAttrDetailInfo : public ::google::protobuf::Message {
 public:
  CharacterDBAttrDetailInfo();
  virtual ~CharacterDBAttrDetailInfo();

  CharacterDBAttrDetailInfo(const CharacterDBAttrDetailInfo& from);

  inline CharacterDBAttrDetailInfo& operator=(const CharacterDBAttrDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBAttrDetailInfo& default_instance();

  void Swap(CharacterDBAttrDetailInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBAttrDetailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBAttrDetailInfo& from);
  void MergeFrom(const CharacterDBAttrDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.Attr64 attrs = 1;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 1;
  inline const ::proto_ff::Attr64& attrs(int index) const;
  inline ::proto_ff::Attr64* mutable_attrs(int index);
  inline ::proto_ff::Attr64* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
      mutable_attrs();

  // optional .proto_ff.Vector3PB cur_pos = 2;
  inline bool has_cur_pos() const;
  inline void clear_cur_pos();
  static const int kCurPosFieldNumber = 2;
  inline const ::proto_ff::Vector3PB& cur_pos() const;
  inline ::proto_ff::Vector3PB* mutable_cur_pos();
  inline ::proto_ff::Vector3PB* release_cur_pos();
  inline void set_allocated_cur_pos(::proto_ff::Vector3PB* cur_pos);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBAttrDetailInfo)
 private:
  inline void set_has_cur_pos();
  inline void clear_has_cur_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 > attrs_;
  ::proto_ff::Vector3PB* cur_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBAttrDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBExtendData : public ::google::protobuf::Message {
 public:
  CharacterDBExtendData();
  virtual ~CharacterDBExtendData();

  CharacterDBExtendData(const CharacterDBExtendData& from);

  inline CharacterDBExtendData& operator=(const CharacterDBExtendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBExtendData& default_instance();

  void Swap(CharacterDBExtendData* other);

  // implements Message ----------------------------------------------

  CharacterDBExtendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBExtendData& from);
  void MergeFrom(const CharacterDBExtendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CharacterDBAttrDetailInfo attr_detail = 1;
  inline bool has_attr_detail() const;
  inline void clear_attr_detail();
  static const int kAttrDetailFieldNumber = 1;
  inline const ::proto_ff::CharacterDBAttrDetailInfo& attr_detail() const;
  inline ::proto_ff::CharacterDBAttrDetailInfo* mutable_attr_detail();
  inline ::proto_ff::CharacterDBAttrDetailInfo* release_attr_detail();
  inline void set_allocated_attr_detail(::proto_ff::CharacterDBAttrDetailInfo* attr_detail);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBExtendData)
 private:
  inline void set_has_attr_detail();
  inline void clear_has_attr_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CharacterDBAttrDetailInfo* attr_detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBExtendData* default_instance_;
};
// -------------------------------------------------------------------

class EquipSlotProto : public ::google::protobuf::Message {
 public:
  EquipSlotProto();
  virtual ~EquipSlotProto();

  EquipSlotProto(const EquipSlotProto& from);

  inline EquipSlotProto& operator=(const EquipSlotProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSlotProto& default_instance();

  void Swap(EquipSlotProto* other);

  // implements Message ----------------------------------------------

  EquipSlotProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSlotProto& from);
  void MergeFrom(const EquipSlotProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 strenlv = 2;
  inline bool has_strenlv() const;
  inline void clear_strenlv();
  static const int kStrenlvFieldNumber = 2;
  inline ::google::protobuf::int32 strenlv() const;
  inline void set_strenlv(::google::protobuf::int32 value);

  // optional int32 refinelv = 3;
  inline bool has_refinelv() const;
  inline void clear_refinelv();
  static const int kRefinelvFieldNumber = 3;
  inline ::google::protobuf::int32 refinelv() const;
  inline void set_refinelv(::google::protobuf::int32 value);

  // repeated uint64 inlay = 4;
  inline int inlay_size() const;
  inline void clear_inlay();
  static const int kInlayFieldNumber = 4;
  inline ::google::protobuf::uint64 inlay(int index) const;
  inline void set_inlay(int index, ::google::protobuf::uint64 value);
  inline void add_inlay(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      inlay() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_inlay();

  // optional int32 strenexp = 5;
  inline bool has_strenexp() const;
  inline void clear_strenexp();
  static const int kStrenexpFieldNumber = 5;
  inline ::google::protobuf::int32 strenexp() const;
  inline void set_strenexp(::google::protobuf::int32 value);

  // optional int32 refineexp = 6;
  inline bool has_refineexp() const;
  inline void clear_refineexp();
  static const int kRefineexpFieldNumber = 6;
  inline ::google::protobuf::int32 refineexp() const;
  inline void set_refineexp(::google::protobuf::int32 value);

  // repeated .proto_ff.Attr strenAttr = 7;
  inline int strenattr_size() const;
  inline void clear_strenattr();
  static const int kStrenAttrFieldNumber = 7;
  inline const ::proto_ff::Attr& strenattr(int index) const;
  inline ::proto_ff::Attr* mutable_strenattr(int index);
  inline ::proto_ff::Attr* add_strenattr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
      strenattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
      mutable_strenattr();

  // optional int64 refinepecent = 8;
  inline bool has_refinepecent() const;
  inline void clear_refinepecent();
  static const int kRefinepecentFieldNumber = 8;
  inline ::google::protobuf::int64 refinepecent() const;
  inline void set_refinepecent(::google::protobuf::int64 value);

  // optional int32 scrutinyTrepanningNum = 9;
  inline bool has_scrutinytrepanningnum() const;
  inline void clear_scrutinytrepanningnum();
  static const int kScrutinyTrepanningNumFieldNumber = 9;
  inline ::google::protobuf::int32 scrutinytrepanningnum() const;
  inline void set_scrutinytrepanningnum(::google::protobuf::int32 value);

  // repeated .proto_ff.AttrEx64 scrutinyAttr = 10;
  inline int scrutinyattr_size() const;
  inline void clear_scrutinyattr();
  static const int kScrutinyAttrFieldNumber = 10;
  inline const ::proto_ff::AttrEx64& scrutinyattr(int index) const;
  inline ::proto_ff::AttrEx64* mutable_scrutinyattr(int index);
  inline ::proto_ff::AttrEx64* add_scrutinyattr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::AttrEx64 >&
      scrutinyattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::AttrEx64 >*
      mutable_scrutinyattr();

  // optional int32 clearStep = 11;
  inline bool has_clearstep() const;
  inline void clear_clearstep();
  static const int kClearStepFieldNumber = 11;
  inline ::google::protobuf::int32 clearstep() const;
  inline void set_clearstep(::google::protobuf::int32 value);

  // optional int64 clearCombat = 12;
  inline bool has_clearcombat() const;
  inline void clear_clearcombat();
  static const int kClearCombatFieldNumber = 12;
  inline ::google::protobuf::int64 clearcombat() const;
  inline void set_clearcombat(::google::protobuf::int64 value);

  // optional int32 suitlv = 13;
  inline bool has_suitlv() const;
  inline void clear_suitlv();
  static const int kSuitlvFieldNumber = 13;
  inline ::google::protobuf::int32 suitlv() const;
  inline void set_suitlv(::google::protobuf::int32 value);

  // optional int32 suit_record_max_lv = 14;
  inline bool has_suit_record_max_lv() const;
  inline void clear_suit_record_max_lv();
  static const int kSuitRecordMaxLvFieldNumber = 14;
  inline ::google::protobuf::int32 suit_record_max_lv() const;
  inline void set_suit_record_max_lv(::google::protobuf::int32 value);

  // optional int32 awaklv = 15;
  inline bool has_awaklv() const;
  inline void clear_awaklv();
  static const int kAwaklvFieldNumber = 15;
  inline ::google::protobuf::int32 awaklv() const;
  inline void set_awaklv(::google::protobuf::int32 value);

  // optional int32 enchantinglv = 16;
  inline bool has_enchantinglv() const;
  inline void clear_enchantinglv();
  static const int kEnchantinglvFieldNumber = 16;
  inline ::google::protobuf::int32 enchantinglv() const;
  inline void set_enchantinglv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EquipSlotProto)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_strenlv();
  inline void clear_has_strenlv();
  inline void set_has_refinelv();
  inline void clear_has_refinelv();
  inline void set_has_strenexp();
  inline void clear_has_strenexp();
  inline void set_has_refineexp();
  inline void clear_has_refineexp();
  inline void set_has_refinepecent();
  inline void clear_has_refinepecent();
  inline void set_has_scrutinytrepanningnum();
  inline void clear_has_scrutinytrepanningnum();
  inline void set_has_clearstep();
  inline void clear_has_clearstep();
  inline void set_has_clearcombat();
  inline void clear_has_clearcombat();
  inline void set_has_suitlv();
  inline void clear_has_suitlv();
  inline void set_has_suit_record_max_lv();
  inline void clear_has_suit_record_max_lv();
  inline void set_has_awaklv();
  inline void clear_has_awaklv();
  inline void set_has_enchantinglv();
  inline void clear_has_enchantinglv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 strenlv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > inlay_;
  ::google::protobuf::int32 refinelv_;
  ::google::protobuf::int32 strenexp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr > strenattr_;
  ::google::protobuf::int32 refineexp_;
  ::google::protobuf::int32 scrutinytrepanningnum_;
  ::google::protobuf::int64 refinepecent_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::AttrEx64 > scrutinyattr_;
  ::google::protobuf::int64 clearcombat_;
  ::google::protobuf::int32 clearstep_;
  ::google::protobuf::int32 suitlv_;
  ::google::protobuf::int32 suit_record_max_lv_;
  ::google::protobuf::int32 awaklv_;
  ::google::protobuf::int32 enchantinglv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static EquipSlotProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBEquipData : public ::google::protobuf::Message {
 public:
  CharacterDBEquipData();
  virtual ~CharacterDBEquipData();

  CharacterDBEquipData(const CharacterDBEquipData& from);

  inline CharacterDBEquipData& operator=(const CharacterDBEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBEquipData& default_instance();

  void Swap(CharacterDBEquipData* other);

  // implements Message ----------------------------------------------

  CharacterDBEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBEquipData& from);
  void MergeFrom(const CharacterDBEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo equip = 1;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& equip(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_equip(int index);
  inline ::proto_ff::ItemProtoInfo* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_equip();

  // repeated .proto_ff.EquipSlotProto equip_slot = 2;
  inline int equip_slot_size() const;
  inline void clear_equip_slot();
  static const int kEquipSlotFieldNumber = 2;
  inline const ::proto_ff::EquipSlotProto& equip_slot(int index) const;
  inline ::proto_ff::EquipSlotProto* mutable_equip_slot(int index);
  inline ::proto_ff::EquipSlotProto* add_equip_slot();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotProto >&
      equip_slot() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotProto >*
      mutable_equip_slot();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBEquipData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > equip_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotProto > equip_slot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBEquipData* default_instance_;
};
// -------------------------------------------------------------------

class DuplicateSingleProto : public ::google::protobuf::Message {
 public:
  DuplicateSingleProto();
  virtual ~DuplicateSingleProto();

  DuplicateSingleProto(const DuplicateSingleProto& from);

  inline DuplicateSingleProto& operator=(const DuplicateSingleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DuplicateSingleProto& default_instance();

  void Swap(DuplicateSingleProto* other);

  // implements Message ----------------------------------------------

  DuplicateSingleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DuplicateSingleProto& from);
  void MergeFrom(const DuplicateSingleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 duplicate_id = 1;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 1;
  inline ::google::protobuf::uint64 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint64 value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 cur_layer = 3;
  inline bool has_cur_layer() const;
  inline void clear_cur_layer();
  static const int kCurLayerFieldNumber = 3;
  inline ::google::protobuf::int32 cur_layer() const;
  inline void set_cur_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DuplicateSingleProto)
 private:
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_cur_layer();
  inline void clear_has_cur_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 duplicate_id_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 cur_layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DuplicateSingleProto* default_instance_;
};
// -------------------------------------------------------------------

class DuplicateGroupProto : public ::google::protobuf::Message {
 public:
  DuplicateGroupProto();
  virtual ~DuplicateGroupProto();

  DuplicateGroupProto(const DuplicateGroupProto& from);

  inline DuplicateGroupProto& operator=(const DuplicateGroupProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DuplicateGroupProto& default_instance();

  void Swap(DuplicateGroupProto* other);

  // implements Message ----------------------------------------------

  DuplicateGroupProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DuplicateGroupProto& from);
  void MergeFrom(const DuplicateGroupProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional int32 enter_num = 2;
  inline bool has_enter_num() const;
  inline void clear_enter_num();
  static const int kEnterNumFieldNumber = 2;
  inline ::google::protobuf::int32 enter_num() const;
  inline void set_enter_num(::google::protobuf::int32 value);

  // optional int32 total_num = 3;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 3;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);

  // optional int32 buy_num = 4;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 4;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional uint64 last_fresh = 5;
  inline bool has_last_fresh() const;
  inline void clear_last_fresh();
  static const int kLastFreshFieldNumber = 5;
  inline ::google::protobuf::uint64 last_fresh() const;
  inline void set_last_fresh(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DuplicateGroupProto)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_enter_num();
  inline void clear_has_enter_num();
  inline void set_has_total_num();
  inline void clear_has_total_num();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_last_fresh();
  inline void clear_has_last_fresh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::int32 enter_num_;
  ::google::protobuf::int32 total_num_;
  ::google::protobuf::uint64 last_fresh_;
  ::google::protobuf::int32 buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DuplicateGroupProto* default_instance_;
};
// -------------------------------------------------------------------

class DuplicateLadderExProto : public ::google::protobuf::Message {
 public:
  DuplicateLadderExProto();
  virtual ~DuplicateLadderExProto();

  DuplicateLadderExProto(const DuplicateLadderExProto& from);

  inline DuplicateLadderExProto& operator=(const DuplicateLadderExProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DuplicateLadderExProto& default_instance();

  void Swap(DuplicateLadderExProto* other);

  // implements Message ----------------------------------------------

  DuplicateLadderExProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DuplicateLadderExProto& from);
  void MergeFrom(const DuplicateLadderExProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cur_layer = 1;
  inline bool has_cur_layer() const;
  inline void clear_cur_layer();
  static const int kCurLayerFieldNumber = 1;
  inline ::google::protobuf::int32 cur_layer() const;
  inline void set_cur_layer(::google::protobuf::int32 value);

  // optional uint64 last_mail_time = 2;
  inline bool has_last_mail_time() const;
  inline void clear_last_mail_time();
  static const int kLastMailTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 last_mail_time() const;
  inline void set_last_mail_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DuplicateLadderExProto)
 private:
  inline void set_has_cur_layer();
  inline void clear_has_cur_layer();
  inline void set_has_last_mail_time();
  inline void clear_has_last_mail_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 last_mail_time_;
  ::google::protobuf::int32 cur_layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DuplicateLadderExProto* default_instance_;
};
// -------------------------------------------------------------------

class DupHistoryExpProto : public ::google::protobuf::Message {
 public:
  DupHistoryExpProto();
  virtual ~DupHistoryExpProto();

  DupHistoryExpProto(const DupHistoryExpProto& from);

  inline DupHistoryExpProto& operator=(const DupHistoryExpProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupHistoryExpProto& default_instance();

  void Swap(DupHistoryExpProto* other);

  // implements Message ----------------------------------------------

  DupHistoryExpProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupHistoryExpProto& from);
  void MergeFrom(const DupHistoryExpProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 duplicate_id = 1;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 1;
  inline ::google::protobuf::uint64 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint64 value);

  // optional uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupHistoryExpProto)
 private:
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 duplicate_id_;
  ::google::protobuf::uint64 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DupHistoryExpProto* default_instance_;
};
// -------------------------------------------------------------------

class DupUnionBossDBProto : public ::google::protobuf::Message {
 public:
  DupUnionBossDBProto();
  virtual ~DupUnionBossDBProto();

  DupUnionBossDBProto(const DupUnionBossDBProto& from);

  inline DupUnionBossDBProto& operator=(const DupUnionBossDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupUnionBossDBProto& default_instance();

  void Swap(DupUnionBossDBProto* other);

  // implements Message ----------------------------------------------

  DupUnionBossDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupUnionBossDBProto& from);
  void MergeFrom(const DupUnionBossDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 mutex_id = 1;
  inline int mutex_id_size() const;
  inline void clear_mutex_id();
  static const int kMutexIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mutex_id(int index) const;
  inline void set_mutex_id(int index, ::google::protobuf::uint64 value);
  inline void add_mutex_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mutex_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mutex_id();

  // optional uint64 last_pass = 2;
  inline bool has_last_pass() const;
  inline void clear_last_pass();
  static const int kLastPassFieldNumber = 2;
  inline ::google::protobuf::uint64 last_pass() const;
  inline void set_last_pass(::google::protobuf::uint64 value);

  // optional uint64 last_fail = 3;
  inline bool has_last_fail() const;
  inline void clear_last_fail();
  static const int kLastFailFieldNumber = 3;
  inline ::google::protobuf::uint64 last_fail() const;
  inline void set_last_fail(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupUnionBossDBProto)
 private:
  inline void set_has_last_pass();
  inline void clear_has_last_pass();
  inline void set_has_last_fail();
  inline void clear_has_last_fail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mutex_id_;
  ::google::protobuf::uint64 last_pass_;
  ::google::protobuf::uint64 last_fail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DupUnionBossDBProto* default_instance_;
};
// -------------------------------------------------------------------

class DupPalaceFetchDBProto : public ::google::protobuf::Message {
 public:
  DupPalaceFetchDBProto();
  virtual ~DupPalaceFetchDBProto();

  DupPalaceFetchDBProto(const DupPalaceFetchDBProto& from);

  inline DupPalaceFetchDBProto& operator=(const DupPalaceFetchDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupPalaceFetchDBProto& default_instance();

  void Swap(DupPalaceFetchDBProto* other);

  // implements Message ----------------------------------------------

  DupPalaceFetchDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupPalaceFetchDBProto& from);
  void MergeFrom(const DupPalaceFetchDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 pass_num = 2;
  inline bool has_pass_num() const;
  inline void clear_pass_num();
  static const int kPassNumFieldNumber = 2;
  inline ::google::protobuf::int32 pass_num() const;
  inline void set_pass_num(::google::protobuf::int32 value);

  // repeated uint32 num_lst = 3;
  inline int num_lst_size() const;
  inline void clear_num_lst();
  static const int kNumLstFieldNumber = 3;
  inline ::google::protobuf::uint32 num_lst(int index) const;
  inline void set_num_lst(int index, ::google::protobuf::uint32 value);
  inline void add_num_lst(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      num_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_num_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.DupPalaceFetchDBProto)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_pass_num();
  inline void clear_has_pass_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 pass_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > num_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DupPalaceFetchDBProto* default_instance_;
};
// -------------------------------------------------------------------

class DupPalaceMultFetchDBProto : public ::google::protobuf::Message {
 public:
  DupPalaceMultFetchDBProto();
  virtual ~DupPalaceMultFetchDBProto();

  DupPalaceMultFetchDBProto(const DupPalaceMultFetchDBProto& from);

  inline DupPalaceMultFetchDBProto& operator=(const DupPalaceMultFetchDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupPalaceMultFetchDBProto& default_instance();

  void Swap(DupPalaceMultFetchDBProto* other);

  // implements Message ----------------------------------------------

  DupPalaceMultFetchDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupPalaceMultFetchDBProto& from);
  void MergeFrom(const DupPalaceMultFetchDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DupPalaceFetchDBProto fetch_progress = 1;
  inline int fetch_progress_size() const;
  inline void clear_fetch_progress();
  static const int kFetchProgressFieldNumber = 1;
  inline const ::proto_ff::DupPalaceFetchDBProto& fetch_progress(int index) const;
  inline ::proto_ff::DupPalaceFetchDBProto* mutable_fetch_progress(int index);
  inline ::proto_ff::DupPalaceFetchDBProto* add_fetch_progress();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupPalaceFetchDBProto >&
      fetch_progress() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupPalaceFetchDBProto >*
      mutable_fetch_progress();

  // @@protoc_insertion_point(class_scope:proto_ff.DupPalaceMultFetchDBProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupPalaceFetchDBProto > fetch_progress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DupPalaceMultFetchDBProto* default_instance_;
};
// -------------------------------------------------------------------

class DupUnionPalaceDBProto : public ::google::protobuf::Message {
 public:
  DupUnionPalaceDBProto();
  virtual ~DupUnionPalaceDBProto();

  DupUnionPalaceDBProto(const DupUnionPalaceDBProto& from);

  inline DupUnionPalaceDBProto& operator=(const DupUnionPalaceDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupUnionPalaceDBProto& default_instance();

  void Swap(DupUnionPalaceDBProto* other);

  // implements Message ----------------------------------------------

  DupUnionPalaceDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupUnionPalaceDBProto& from);
  void MergeFrom(const DupUnionPalaceDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // repeated int32 fetched_lst = 2;
  inline int fetched_lst_size() const;
  inline void clear_fetched_lst();
  static const int kFetchedLstFieldNumber = 2;
  inline ::google::protobuf::int32 fetched_lst(int index) const;
  inline void set_fetched_lst(int index, ::google::protobuf::int32 value);
  inline void add_fetched_lst(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fetched_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fetched_lst();

  // optional .proto_ff.DupPalaceMultFetchDBProto fetch = 3;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 3;
  inline const ::proto_ff::DupPalaceMultFetchDBProto& fetch() const;
  inline ::proto_ff::DupPalaceMultFetchDBProto* mutable_fetch();
  inline ::proto_ff::DupPalaceMultFetchDBProto* release_fetch();
  inline void set_allocated_fetch(::proto_ff::DupPalaceMultFetchDBProto* fetch);

  // optional int32 break_count = 4;
  inline bool has_break_count() const;
  inline void clear_break_count();
  static const int kBreakCountFieldNumber = 4;
  inline ::google::protobuf::int32 break_count() const;
  inline void set_break_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupUnionPalaceDBProto)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_break_count();
  inline void clear_has_break_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fetched_lst_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 break_count_;
  ::proto_ff::DupPalaceMultFetchDBProto* fetch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static DupUnionPalaceDBProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDuplicateData : public ::google::protobuf::Message {
 public:
  CharacterDBDuplicateData();
  virtual ~CharacterDBDuplicateData();

  CharacterDBDuplicateData(const CharacterDBDuplicateData& from);

  inline CharacterDBDuplicateData& operator=(const CharacterDBDuplicateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDuplicateData& default_instance();

  void Swap(CharacterDBDuplicateData* other);

  // implements Message ----------------------------------------------

  CharacterDBDuplicateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDuplicateData& from);
  void MergeFrom(const CharacterDBDuplicateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DuplicateSingleProto duplicate = 1;
  inline int duplicate_size() const;
  inline void clear_duplicate();
  static const int kDuplicateFieldNumber = 1;
  inline const ::proto_ff::DuplicateSingleProto& duplicate(int index) const;
  inline ::proto_ff::DuplicateSingleProto* mutable_duplicate(int index);
  inline ::proto_ff::DuplicateSingleProto* add_duplicate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateSingleProto >&
      duplicate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateSingleProto >*
      mutable_duplicate();

  // repeated .proto_ff.DuplicateGroupProto group = 2;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline const ::proto_ff::DuplicateGroupProto& group(int index) const;
  inline ::proto_ff::DuplicateGroupProto* mutable_group(int index);
  inline ::proto_ff::DuplicateGroupProto* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateGroupProto >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateGroupProto >*
      mutable_group();

  // repeated uint32 open_dup = 3;
  inline int open_dup_size() const;
  inline void clear_open_dup();
  static const int kOpenDupFieldNumber = 3;
  inline ::google::protobuf::uint32 open_dup(int index) const;
  inline void set_open_dup(int index, ::google::protobuf::uint32 value);
  inline void add_open_dup(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      open_dup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_open_dup();

  // optional .proto_ff.DuplicateLadderExProto ladder = 4;
  inline bool has_ladder() const;
  inline void clear_ladder();
  static const int kLadderFieldNumber = 4;
  inline const ::proto_ff::DuplicateLadderExProto& ladder() const;
  inline ::proto_ff::DuplicateLadderExProto* mutable_ladder();
  inline ::proto_ff::DuplicateLadderExProto* release_ladder();
  inline void set_allocated_ladder(::proto_ff::DuplicateLadderExProto* ladder);

  // repeated .proto_ff.DupHistoryExpProto dup_exp = 5;
  inline int dup_exp_size() const;
  inline void clear_dup_exp();
  static const int kDupExpFieldNumber = 5;
  inline const ::proto_ff::DupHistoryExpProto& dup_exp(int index) const;
  inline ::proto_ff::DupHistoryExpProto* mutable_dup_exp(int index);
  inline ::proto_ff::DupHistoryExpProto* add_dup_exp();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupHistoryExpProto >&
      dup_exp() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupHistoryExpProto >*
      mutable_dup_exp();

  // optional .proto_ff.DupUnionBossDBProto union_boss = 6;
  inline bool has_union_boss() const;
  inline void clear_union_boss();
  static const int kUnionBossFieldNumber = 6;
  inline const ::proto_ff::DupUnionBossDBProto& union_boss() const;
  inline ::proto_ff::DupUnionBossDBProto* mutable_union_boss();
  inline ::proto_ff::DupUnionBossDBProto* release_union_boss();
  inline void set_allocated_union_boss(::proto_ff::DupUnionBossDBProto* union_boss);

  // optional .proto_ff.DupUnionPalaceDBProto palace = 7;
  inline bool has_palace() const;
  inline void clear_palace();
  static const int kPalaceFieldNumber = 7;
  inline const ::proto_ff::DupUnionPalaceDBProto& palace() const;
  inline ::proto_ff::DupUnionPalaceDBProto* mutable_palace();
  inline ::proto_ff::DupUnionPalaceDBProto* release_palace();
  inline void set_allocated_palace(::proto_ff::DupUnionPalaceDBProto* palace);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDuplicateData)
 private:
  inline void set_has_ladder();
  inline void clear_has_ladder();
  inline void set_has_union_boss();
  inline void clear_has_union_boss();
  inline void set_has_palace();
  inline void clear_has_palace();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateSingleProto > duplicate_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateGroupProto > group_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > open_dup_;
  ::proto_ff::DuplicateLadderExProto* ladder_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupHistoryExpProto > dup_exp_;
  ::proto_ff::DupUnionBossDBProto* union_boss_;
  ::proto_ff::DupUnionPalaceDBProto* palace_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDuplicateData* default_instance_;
};
// -------------------------------------------------------------------

class SingleAchievementDBData : public ::google::protobuf::Message {
 public:
  SingleAchievementDBData();
  virtual ~SingleAchievementDBData();

  SingleAchievementDBData(const SingleAchievementDBData& from);

  inline SingleAchievementDBData& operator=(const SingleAchievementDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleAchievementDBData& default_instance();

  void Swap(SingleAchievementDBData* other);

  // implements Message ----------------------------------------------

  SingleAchievementDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleAchievementDBData& from);
  void MergeFrom(const SingleAchievementDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 completeCount = 3;
  inline bool has_completecount() const;
  inline void clear_completecount();
  static const int kCompleteCountFieldNumber = 3;
  inline ::google::protobuf::uint32 completecount() const;
  inline void set_completecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SingleAchievementDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_completecount();
  inline void clear_has_completecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 completecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static SingleAchievementDBData* default_instance_;
};
// -------------------------------------------------------------------

class GroupAchievementDBData : public ::google::protobuf::Message {
 public:
  GroupAchievementDBData();
  virtual ~GroupAchievementDBData();

  GroupAchievementDBData(const GroupAchievementDBData& from);

  inline GroupAchievementDBData& operator=(const GroupAchievementDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupAchievementDBData& default_instance();

  void Swap(GroupAchievementDBData* other);

  // implements Message ----------------------------------------------

  GroupAchievementDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupAchievementDBData& from);
  void MergeFrom(const GroupAchievementDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sortType = 1;
  inline bool has_sorttype() const;
  inline void clear_sorttype();
  static const int kSortTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 sorttype() const;
  inline void set_sorttype(::google::protobuf::uint32 value);

  // repeated .proto_ff.SingleAchievementDBData achievementInfoList = 2;
  inline int achievementinfolist_size() const;
  inline void clear_achievementinfolist();
  static const int kAchievementInfoListFieldNumber = 2;
  inline const ::proto_ff::SingleAchievementDBData& achievementinfolist(int index) const;
  inline ::proto_ff::SingleAchievementDBData* mutable_achievementinfolist(int index);
  inline ::proto_ff::SingleAchievementDBData* add_achievementinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SingleAchievementDBData >&
      achievementinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SingleAchievementDBData >*
      mutable_achievementinfolist();

  // optional uint32 achievementReward = 3;
  inline bool has_achievementreward() const;
  inline void clear_achievementreward();
  static const int kAchievementRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 achievementreward() const;
  inline void set_achievementreward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GroupAchievementDBData)
 private:
  inline void set_has_sorttype();
  inline void clear_has_sorttype();
  inline void set_has_achievementreward();
  inline void clear_has_achievementreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SingleAchievementDBData > achievementinfolist_;
  ::google::protobuf::uint32 sorttype_;
  ::google::protobuf::uint32 achievementreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static GroupAchievementDBData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterAchievementDBData : public ::google::protobuf::Message {
 public:
  CharacterAchievementDBData();
  virtual ~CharacterAchievementDBData();

  CharacterAchievementDBData(const CharacterAchievementDBData& from);

  inline CharacterAchievementDBData& operator=(const CharacterAchievementDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterAchievementDBData& default_instance();

  void Swap(CharacterAchievementDBData* other);

  // implements Message ----------------------------------------------

  CharacterAchievementDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterAchievementDBData& from);
  void MergeFrom(const CharacterAchievementDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GroupAchievementDBData groupAchievementData = 1;
  inline int groupachievementdata_size() const;
  inline void clear_groupachievementdata();
  static const int kGroupAchievementDataFieldNumber = 1;
  inline const ::proto_ff::GroupAchievementDBData& groupachievementdata(int index) const;
  inline ::proto_ff::GroupAchievementDBData* mutable_groupachievementdata(int index);
  inline ::proto_ff::GroupAchievementDBData* add_groupachievementdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GroupAchievementDBData >&
      groupachievementdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GroupAchievementDBData >*
      mutable_groupachievementdata();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterAchievementDBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GroupAchievementDBData > groupachievementdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterAchievementDBData* default_instance_;
};
// -------------------------------------------------------------------

class EffectParamProto : public ::google::protobuf::Message {
 public:
  EffectParamProto();
  virtual ~EffectParamProto();

  EffectParamProto(const EffectParamProto& from);

  inline EffectParamProto& operator=(const EffectParamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EffectParamProto& default_instance();

  void Swap(EffectParamProto* other);

  // implements Message ----------------------------------------------

  EffectParamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EffectParamProto& from);
  void MergeFrom(const EffectParamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 param1 = 1;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 1;
  inline ::google::protobuf::int64 param1() const;
  inline void set_param1(::google::protobuf::int64 value);

  // optional int64 param2 = 2;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 2;
  inline ::google::protobuf::int64 param2() const;
  inline void set_param2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EffectParamProto)
 private:
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 param1_;
  ::google::protobuf::int64 param2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static EffectParamProto* default_instance_;
};
// -------------------------------------------------------------------

class MultEffectParamProto : public ::google::protobuf::Message {
 public:
  MultEffectParamProto();
  virtual ~MultEffectParamProto();

  MultEffectParamProto(const MultEffectParamProto& from);

  inline MultEffectParamProto& operator=(const MultEffectParamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultEffectParamProto& default_instance();

  void Swap(MultEffectParamProto* other);

  // implements Message ----------------------------------------------

  MultEffectParamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MultEffectParamProto& from);
  void MergeFrom(const MultEffectParamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EffectParamProto param_lst = 1;
  inline int param_lst_size() const;
  inline void clear_param_lst();
  static const int kParamLstFieldNumber = 1;
  inline const ::proto_ff::EffectParamProto& param_lst(int index) const;
  inline ::proto_ff::EffectParamProto* mutable_param_lst(int index);
  inline ::proto_ff::EffectParamProto* add_param_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EffectParamProto >&
      param_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EffectParamProto >*
      mutable_param_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.MultEffectParamProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EffectParamProto > param_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static MultEffectParamProto* default_instance_;
};
// -------------------------------------------------------------------

class BuffBagInfo : public ::google::protobuf::Message {
 public:
  BuffBagInfo();
  virtual ~BuffBagInfo();

  BuffBagInfo(const BuffBagInfo& from);

  inline BuffBagInfo& operator=(const BuffBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffBagInfo& default_instance();

  void Swap(BuffBagInfo* other);

  // implements Message ----------------------------------------------

  BuffBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffBagInfo& from);
  void MergeFrom(const BuffBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 buffBagInstId = 1;
  inline bool has_buffbaginstid() const;
  inline void clear_buffbaginstid();
  static const int kBuffBagInstIdFieldNumber = 1;
  inline ::google::protobuf::uint32 buffbaginstid() const;
  inline void set_buffbaginstid(::google::protobuf::uint32 value);

  // optional uint64 stateBagId = 2;
  inline bool has_statebagid() const;
  inline void clear_statebagid();
  static const int kStateBagIdFieldNumber = 2;
  inline ::google::protobuf::uint64 statebagid() const;
  inline void set_statebagid(::google::protobuf::uint64 value);

  // optional uint32 stateBagTime = 3;
  inline bool has_statebagtime() const;
  inline void clear_statebagtime();
  static const int kStateBagTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 statebagtime() const;
  inline void set_statebagtime(::google::protobuf::uint32 value);

  // optional uint32 delayedTime = 4;
  inline bool has_delayedtime() const;
  inline void clear_delayedtime();
  static const int kDelayedTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 delayedtime() const;
  inline void set_delayedtime(::google::protobuf::uint32 value);

  // optional bool isForever = 6;
  inline bool has_isforever() const;
  inline void clear_isforever();
  static const int kIsForeverFieldNumber = 6;
  inline bool isforever() const;
  inline void set_isforever(bool value);

  // optional uint64 skillId = 7;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 7;
  inline ::google::protobuf::uint64 skillid() const;
  inline void set_skillid(::google::protobuf::uint64 value);

  // optional uint32 skillLevel = 8;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);

  // optional uint64 senderCid = 10;
  inline bool has_sendercid() const;
  inline void clear_sendercid();
  static const int kSenderCidFieldNumber = 10;
  inline ::google::protobuf::uint64 sendercid() const;
  inline void set_sendercid(::google::protobuf::uint64 value);

  // repeated uint64 params = 11;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 11;
  inline ::google::protobuf::uint64 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint64 value);
  inline void add_params(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_params();

  // optional uint32 status = 12;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 12;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 targettype = 13;
  inline bool has_targettype() const;
  inline void clear_targettype();
  static const int kTargettypeFieldNumber = 13;
  inline ::google::protobuf::uint32 targettype() const;
  inline void set_targettype(::google::protobuf::uint32 value);

  // optional uint64 startTime = 14;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 14;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional .proto_ff.MultEffectParamProto eparam = 15;
  inline bool has_eparam() const;
  inline void clear_eparam();
  static const int kEparamFieldNumber = 15;
  inline const ::proto_ff::MultEffectParamProto& eparam() const;
  inline ::proto_ff::MultEffectParamProto* mutable_eparam();
  inline ::proto_ff::MultEffectParamProto* release_eparam();
  inline void set_allocated_eparam(::proto_ff::MultEffectParamProto* eparam);

  // @@protoc_insertion_point(class_scope:proto_ff.BuffBagInfo)
 private:
  inline void set_has_buffbaginstid();
  inline void clear_has_buffbaginstid();
  inline void set_has_statebagid();
  inline void clear_has_statebagid();
  inline void set_has_statebagtime();
  inline void clear_has_statebagtime();
  inline void set_has_delayedtime();
  inline void clear_has_delayedtime();
  inline void set_has_isforever();
  inline void clear_has_isforever();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();
  inline void set_has_sendercid();
  inline void clear_has_sendercid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_targettype();
  inline void clear_has_targettype();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_eparam();
  inline void clear_has_eparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 statebagid_;
  ::google::protobuf::uint32 buffbaginstid_;
  ::google::protobuf::uint32 statebagtime_;
  ::google::protobuf::uint32 delayedtime_;
  bool isforever_;
  ::google::protobuf::uint64 skillid_;
  ::google::protobuf::uint64 sendercid_;
  ::google::protobuf::uint32 skilllevel_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > params_;
  ::google::protobuf::uint64 starttime_;
  ::proto_ff::MultEffectParamProto* eparam_;
  ::google::protobuf::uint32 targettype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static BuffBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterBuffData : public ::google::protobuf::Message {
 public:
  CharacterBuffData();
  virtual ~CharacterBuffData();

  CharacterBuffData(const CharacterBuffData& from);

  inline CharacterBuffData& operator=(const CharacterBuffData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterBuffData& default_instance();

  void Swap(CharacterBuffData* other);

  // implements Message ----------------------------------------------

  CharacterBuffData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterBuffData& from);
  void MergeFrom(const CharacterBuffData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.BuffBagInfo delayedBag = 1;
  inline int delayedbag_size() const;
  inline void clear_delayedbag();
  static const int kDelayedBagFieldNumber = 1;
  inline const ::proto_ff::BuffBagInfo& delayedbag(int index) const;
  inline ::proto_ff::BuffBagInfo* mutable_delayedbag(int index);
  inline ::proto_ff::BuffBagInfo* add_delayedbag();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >&
      delayedbag() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >*
      mutable_delayedbag();

  // repeated .proto_ff.BuffBagInfo buffbagLst = 2;
  inline int buffbaglst_size() const;
  inline void clear_buffbaglst();
  static const int kBuffbagLstFieldNumber = 2;
  inline const ::proto_ff::BuffBagInfo& buffbaglst(int index) const;
  inline ::proto_ff::BuffBagInfo* mutable_buffbaglst(int index);
  inline ::proto_ff::BuffBagInfo* add_buffbaglst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >&
      buffbaglst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >*
      mutable_buffbaglst();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterBuffData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo > delayedbag_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo > buffbaglst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterBuffData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterArenaData : public ::google::protobuf::Message {
 public:
  CharacterArenaData();
  virtual ~CharacterArenaData();

  CharacterArenaData(const CharacterArenaData& from);

  inline CharacterArenaData& operator=(const CharacterArenaData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterArenaData& default_instance();

  void Swap(CharacterArenaData* other);

  // implements Message ----------------------------------------------

  CharacterArenaData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterArenaData& from);
  void MergeFrom(const CharacterArenaData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challengeTimes = 1;
  inline bool has_challengetimes() const;
  inline void clear_challengetimes();
  static const int kChallengeTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 challengetimes() const;
  inline void set_challengetimes(::google::protobuf::uint32 value);

  // optional uint64 updateTime = 2;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // optional uint32 historyRankId = 3 [default = 5001];
  inline bool has_historyrankid() const;
  inline void clear_historyrankid();
  static const int kHistoryRankIdFieldNumber = 3;
  inline ::google::protobuf::uint32 historyrankid() const;
  inline void set_historyrankid(::google::protobuf::uint32 value);

  // optional uint32 buyChallengeTimes = 4;
  inline bool has_buychallengetimes() const;
  inline void clear_buychallengetimes();
  static const int kBuyChallengeTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 buychallengetimes() const;
  inline void set_buychallengetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterArenaData)
 private:
  inline void set_has_challengetimes();
  inline void clear_has_challengetimes();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();
  inline void set_has_historyrankid();
  inline void clear_has_historyrankid();
  inline void set_has_buychallengetimes();
  inline void clear_has_buychallengetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatetime_;
  ::google::protobuf::uint32 challengetimes_;
  ::google::protobuf::uint32 historyrankid_;
  ::google::protobuf::uint32 buychallengetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterArenaData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterTitleInfo : public ::google::protobuf::Message {
 public:
  CharacterTitleInfo();
  virtual ~CharacterTitleInfo();

  CharacterTitleInfo(const CharacterTitleInfo& from);

  inline CharacterTitleInfo& operator=(const CharacterTitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterTitleInfo& default_instance();

  void Swap(CharacterTitleInfo* other);

  // implements Message ----------------------------------------------

  CharacterTitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterTitleInfo& from);
  void MergeFrom(const CharacterTitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // optional uint64 startTime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterTitleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 starttime_;
  ::std::string* name_;
  ::google::protobuf::uint32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterTitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterTitleSaveData : public ::google::protobuf::Message {
 public:
  CharacterTitleSaveData();
  virtual ~CharacterTitleSaveData();

  CharacterTitleSaveData(const CharacterTitleSaveData& from);

  inline CharacterTitleSaveData& operator=(const CharacterTitleSaveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterTitleSaveData& default_instance();

  void Swap(CharacterTitleSaveData* other);

  // implements Message ----------------------------------------------

  CharacterTitleSaveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterTitleSaveData& from);
  void MergeFrom(const CharacterTitleSaveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterTitleInfo titelData = 1;
  inline int titeldata_size() const;
  inline void clear_titeldata();
  static const int kTitelDataFieldNumber = 1;
  inline const ::proto_ff::CharacterTitleInfo& titeldata(int index) const;
  inline ::proto_ff::CharacterTitleInfo* mutable_titeldata(int index);
  inline ::proto_ff::CharacterTitleInfo* add_titeldata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterTitleInfo >&
      titeldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterTitleInfo >*
      mutable_titeldata();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterTitleSaveData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterTitleInfo > titeldata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterTitleSaveData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSingleOperateLimitInfo : public ::google::protobuf::Message {
 public:
  CharacterDBSingleOperateLimitInfo();
  virtual ~CharacterDBSingleOperateLimitInfo();

  CharacterDBSingleOperateLimitInfo(const CharacterDBSingleOperateLimitInfo& from);

  inline CharacterDBSingleOperateLimitInfo& operator=(const CharacterDBSingleOperateLimitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSingleOperateLimitInfo& default_instance();

  void Swap(CharacterDBSingleOperateLimitInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBSingleOperateLimitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSingleOperateLimitInfo& from);
  void MergeFrom(const CharacterDBSingleOperateLimitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 lastTime = 3;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSingleOperateLimitInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 lasttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSingleOperateLimitInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOperateProto : public ::google::protobuf::Message {
 public:
  CharacterDBOperateProto();
  virtual ~CharacterDBOperateProto();

  CharacterDBOperateProto(const CharacterDBOperateProto& from);

  inline CharacterDBOperateProto& operator=(const CharacterDBOperateProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOperateProto& default_instance();

  void Swap(CharacterDBOperateProto* other);

  // implements Message ----------------------------------------------

  CharacterDBOperateProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOperateProto& from);
  void MergeFrom(const CharacterDBOperateProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint64 num() const;
  inline void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOperateProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 num_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOperateProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOperateMutProto : public ::google::protobuf::Message {
 public:
  CharacterDBOperateMutProto();
  virtual ~CharacterDBOperateMutProto();

  CharacterDBOperateMutProto(const CharacterDBOperateMutProto& from);

  inline CharacterDBOperateMutProto& operator=(const CharacterDBOperateMutProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOperateMutProto& default_instance();

  void Swap(CharacterDBOperateMutProto* other);

  // implements Message ----------------------------------------------

  CharacterDBOperateMutProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOperateMutProto& from);
  void MergeFrom(const CharacterDBOperateMutProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBOperateProto operate_lst = 1;
  inline int operate_lst_size() const;
  inline void clear_operate_lst();
  static const int kOperateLstFieldNumber = 1;
  inline const ::proto_ff::CharacterDBOperateProto& operate_lst(int index) const;
  inline ::proto_ff::CharacterDBOperateProto* mutable_operate_lst(int index);
  inline ::proto_ff::CharacterDBOperateProto* add_operate_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOperateProto >&
      operate_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOperateProto >*
      mutable_operate_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOperateMutProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOperateProto > operate_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOperateMutProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOperateInfo : public ::google::protobuf::Message {
 public:
  CharacterDBOperateInfo();
  virtual ~CharacterDBOperateInfo();

  CharacterDBOperateInfo(const CharacterDBOperateInfo& from);

  inline CharacterDBOperateInfo& operator=(const CharacterDBOperateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOperateInfo& default_instance();

  void Swap(CharacterDBOperateInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBOperateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOperateInfo& from);
  void MergeFrom(const CharacterDBOperateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CharacterDBOperateMutProto kill_mons = 1;
  inline bool has_kill_mons() const;
  inline void clear_kill_mons();
  static const int kKillMonsFieldNumber = 1;
  inline const ::proto_ff::CharacterDBOperateMutProto& kill_mons() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_kill_mons();
  inline ::proto_ff::CharacterDBOperateMutProto* release_kill_mons();
  inline void set_allocated_kill_mons(::proto_ff::CharacterDBOperateMutProto* kill_mons);

  // optional .proto_ff.CharacterDBOperateMutProto last_kill_mons = 2;
  inline bool has_last_kill_mons() const;
  inline void clear_last_kill_mons();
  static const int kLastKillMonsFieldNumber = 2;
  inline const ::proto_ff::CharacterDBOperateMutProto& last_kill_mons() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_last_kill_mons();
  inline ::proto_ff::CharacterDBOperateMutProto* release_last_kill_mons();
  inline void set_allocated_last_kill_mons(::proto_ff::CharacterDBOperateMutProto* last_kill_mons);

  // optional .proto_ff.CharacterDBOperateMutProto attend_act = 3;
  inline bool has_attend_act() const;
  inline void clear_attend_act();
  static const int kAttendActFieldNumber = 3;
  inline const ::proto_ff::CharacterDBOperateMutProto& attend_act() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_attend_act();
  inline ::proto_ff::CharacterDBOperateMutProto* release_attend_act();
  inline void set_allocated_attend_act(::proto_ff::CharacterDBOperateMutProto* attend_act);

  // optional .proto_ff.CharacterDBOperateMutProto last_attend_act = 4;
  inline bool has_last_attend_act() const;
  inline void clear_last_attend_act();
  static const int kLastAttendActFieldNumber = 4;
  inline const ::proto_ff::CharacterDBOperateMutProto& last_attend_act() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_last_attend_act();
  inline ::proto_ff::CharacterDBOperateMutProto* release_last_attend_act();
  inline void set_allocated_last_attend_act(::proto_ff::CharacterDBOperateMutProto* last_attend_act);

  // optional .proto_ff.CharacterDBOperateMutProto finish_act = 5;
  inline bool has_finish_act() const;
  inline void clear_finish_act();
  static const int kFinishActFieldNumber = 5;
  inline const ::proto_ff::CharacterDBOperateMutProto& finish_act() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_finish_act();
  inline ::proto_ff::CharacterDBOperateMutProto* release_finish_act();
  inline void set_allocated_finish_act(::proto_ff::CharacterDBOperateMutProto* finish_act);

  // optional .proto_ff.CharacterDBOperateMutProto pass_dup = 6;
  inline bool has_pass_dup() const;
  inline void clear_pass_dup();
  static const int kPassDupFieldNumber = 6;
  inline const ::proto_ff::CharacterDBOperateMutProto& pass_dup() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_pass_dup();
  inline ::proto_ff::CharacterDBOperateMutProto* release_pass_dup();
  inline void set_allocated_pass_dup(::proto_ff::CharacterDBOperateMutProto* pass_dup);

  // optional .proto_ff.CharacterDBOperateMutProto coll_action = 7;
  inline bool has_coll_action() const;
  inline void clear_coll_action();
  static const int kCollActionFieldNumber = 7;
  inline const ::proto_ff::CharacterDBOperateMutProto& coll_action() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_coll_action();
  inline ::proto_ff::CharacterDBOperateMutProto* release_coll_action();
  inline void set_allocated_coll_action(::proto_ff::CharacterDBOperateMutProto* coll_action);

  // optional .proto_ff.CharacterDBOperateMutProto make_action = 8;
  inline bool has_make_action() const;
  inline void clear_make_action();
  static const int kMakeActionFieldNumber = 8;
  inline const ::proto_ff::CharacterDBOperateMutProto& make_action() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_make_action();
  inline ::proto_ff::CharacterDBOperateMutProto* release_make_action();
  inline void set_allocated_make_action(::proto_ff::CharacterDBOperateMutProto* make_action);

  // optional .proto_ff.CharacterDBOperateMutProto collect = 9;
  inline bool has_collect() const;
  inline void clear_collect();
  static const int kCollectFieldNumber = 9;
  inline const ::proto_ff::CharacterDBOperateMutProto& collect() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_collect();
  inline ::proto_ff::CharacterDBOperateMutProto* release_collect();
  inline void set_allocated_collect(::proto_ff::CharacterDBOperateMutProto* collect);

  // optional .proto_ff.CharacterDBOperateMutProto make = 10;
  inline bool has_make() const;
  inline void clear_make();
  static const int kMakeFieldNumber = 10;
  inline const ::proto_ff::CharacterDBOperateMutProto& make() const;
  inline ::proto_ff::CharacterDBOperateMutProto* mutable_make();
  inline ::proto_ff::CharacterDBOperateMutProto* release_make();
  inline void set_allocated_make(::proto_ff::CharacterDBOperateMutProto* make);

  // optional uint64 make_gold_quip = 11;
  inline bool has_make_gold_quip() const;
  inline void clear_make_gold_quip();
  static const int kMakeGoldQuipFieldNumber = 11;
  inline ::google::protobuf::uint64 make_gold_quip() const;
  inline void set_make_gold_quip(::google::protobuf::uint64 value);

  // optional uint64 identify = 12;
  inline bool has_identify() const;
  inline void clear_identify();
  static const int kIdentifyFieldNumber = 12;
  inline ::google::protobuf::uint64 identify() const;
  inline void set_identify(::google::protobuf::uint64 value);

  // optional uint64 arena_success = 13;
  inline bool has_arena_success() const;
  inline void clear_arena_success();
  static const int kArenaSuccessFieldNumber = 13;
  inline ::google::protobuf::uint64 arena_success() const;
  inline void set_arena_success(::google::protobuf::uint64 value);

  // optional uint64 die = 14;
  inline bool has_die() const;
  inline void clear_die();
  static const int kDieFieldNumber = 14;
  inline ::google::protobuf::uint64 die() const;
  inline void set_die(::google::protobuf::uint64 value);

  // optional uint64 kill_enemy = 15;
  inline bool has_kill_enemy() const;
  inline void clear_kill_enemy();
  static const int kKillEnemyFieldNumber = 15;
  inline ::google::protobuf::uint64 kill_enemy() const;
  inline void set_kill_enemy(::google::protobuf::uint64 value);

  // optional uint64 kill_enemy_camp = 16;
  inline bool has_kill_enemy_camp() const;
  inline void clear_kill_enemy_camp();
  static const int kKillEnemyCampFieldNumber = 16;
  inline ::google::protobuf::uint64 kill_enemy_camp() const;
  inline void set_kill_enemy_camp(::google::protobuf::uint64 value);

  // optional uint64 charge = 17;
  inline bool has_charge() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 17;
  inline ::google::protobuf::uint64 charge() const;
  inline void set_charge(::google::protobuf::uint64 value);

  // optional uint64 gold = 18;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 18;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);

  // optional uint64 treasure = 19;
  inline bool has_treasure() const;
  inline void clear_treasure();
  static const int kTreasureFieldNumber = 19;
  inline ::google::protobuf::uint64 treasure() const;
  inline void set_treasure(::google::protobuf::uint64 value);

  // optional uint64 pandos_trans = 20;
  inline bool has_pandos_trans() const;
  inline void clear_pandos_trans();
  static const int kPandosTransFieldNumber = 20;
  inline ::google::protobuf::uint64 pandos_trans() const;
  inline void set_pandos_trans(::google::protobuf::uint64 value);

  // optional uint64 world_chat = 21;
  inline bool has_world_chat() const;
  inline void clear_world_chat();
  static const int kWorldChatFieldNumber = 21;
  inline ::google::protobuf::uint64 world_chat() const;
  inline void set_world_chat(::google::protobuf::uint64 value);

  // optional uint64 refine_success = 22;
  inline bool has_refine_success() const;
  inline void clear_refine_success();
  static const int kRefineSuccessFieldNumber = 22;
  inline ::google::protobuf::uint64 refine_success() const;
  inline void set_refine_success(::google::protobuf::uint64 value);

  // optional uint64 refine_fail = 23;
  inline bool has_refine_fail() const;
  inline void clear_refine_fail();
  static const int kRefineFailFieldNumber = 23;
  inline ::google::protobuf::uint64 refine_fail() const;
  inline void set_refine_fail(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOperateInfo)
 private:
  inline void set_has_kill_mons();
  inline void clear_has_kill_mons();
  inline void set_has_last_kill_mons();
  inline void clear_has_last_kill_mons();
  inline void set_has_attend_act();
  inline void clear_has_attend_act();
  inline void set_has_last_attend_act();
  inline void clear_has_last_attend_act();
  inline void set_has_finish_act();
  inline void clear_has_finish_act();
  inline void set_has_pass_dup();
  inline void clear_has_pass_dup();
  inline void set_has_coll_action();
  inline void clear_has_coll_action();
  inline void set_has_make_action();
  inline void clear_has_make_action();
  inline void set_has_collect();
  inline void clear_has_collect();
  inline void set_has_make();
  inline void clear_has_make();
  inline void set_has_make_gold_quip();
  inline void clear_has_make_gold_quip();
  inline void set_has_identify();
  inline void clear_has_identify();
  inline void set_has_arena_success();
  inline void clear_has_arena_success();
  inline void set_has_die();
  inline void clear_has_die();
  inline void set_has_kill_enemy();
  inline void clear_has_kill_enemy();
  inline void set_has_kill_enemy_camp();
  inline void clear_has_kill_enemy_camp();
  inline void set_has_charge();
  inline void clear_has_charge();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_treasure();
  inline void clear_has_treasure();
  inline void set_has_pandos_trans();
  inline void clear_has_pandos_trans();
  inline void set_has_world_chat();
  inline void clear_has_world_chat();
  inline void set_has_refine_success();
  inline void clear_has_refine_success();
  inline void set_has_refine_fail();
  inline void clear_has_refine_fail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CharacterDBOperateMutProto* kill_mons_;
  ::proto_ff::CharacterDBOperateMutProto* last_kill_mons_;
  ::proto_ff::CharacterDBOperateMutProto* attend_act_;
  ::proto_ff::CharacterDBOperateMutProto* last_attend_act_;
  ::proto_ff::CharacterDBOperateMutProto* finish_act_;
  ::proto_ff::CharacterDBOperateMutProto* pass_dup_;
  ::proto_ff::CharacterDBOperateMutProto* coll_action_;
  ::proto_ff::CharacterDBOperateMutProto* make_action_;
  ::proto_ff::CharacterDBOperateMutProto* collect_;
  ::proto_ff::CharacterDBOperateMutProto* make_;
  ::google::protobuf::uint64 make_gold_quip_;
  ::google::protobuf::uint64 identify_;
  ::google::protobuf::uint64 arena_success_;
  ::google::protobuf::uint64 die_;
  ::google::protobuf::uint64 kill_enemy_;
  ::google::protobuf::uint64 kill_enemy_camp_;
  ::google::protobuf::uint64 charge_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 treasure_;
  ::google::protobuf::uint64 pandos_trans_;
  ::google::protobuf::uint64 world_chat_;
  ::google::protobuf::uint64 refine_success_;
  ::google::protobuf::uint64 refine_fail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOperateInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOperateLimitInfo : public ::google::protobuf::Message {
 public:
  CharacterDBOperateLimitInfo();
  virtual ~CharacterDBOperateLimitInfo();

  CharacterDBOperateLimitInfo(const CharacterDBOperateLimitInfo& from);

  inline CharacterDBOperateLimitInfo& operator=(const CharacterDBOperateLimitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOperateLimitInfo& default_instance();

  void Swap(CharacterDBOperateLimitInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBOperateLimitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOperateLimitInfo& from);
  void MergeFrom(const CharacterDBOperateLimitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBSingleOperateLimitInfo operateLimitInfo = 1;
  inline int operatelimitinfo_size() const;
  inline void clear_operatelimitinfo();
  static const int kOperateLimitInfoFieldNumber = 1;
  inline const ::proto_ff::CharacterDBSingleOperateLimitInfo& operatelimitinfo(int index) const;
  inline ::proto_ff::CharacterDBSingleOperateLimitInfo* mutable_operatelimitinfo(int index);
  inline ::proto_ff::CharacterDBSingleOperateLimitInfo* add_operatelimitinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleOperateLimitInfo >&
      operatelimitinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleOperateLimitInfo >*
      mutable_operatelimitinfo();

  // optional .proto_ff.CharacterDBOperateInfo operate_data = 2;
  inline bool has_operate_data() const;
  inline void clear_operate_data();
  static const int kOperateDataFieldNumber = 2;
  inline const ::proto_ff::CharacterDBOperateInfo& operate_data() const;
  inline ::proto_ff::CharacterDBOperateInfo* mutable_operate_data();
  inline ::proto_ff::CharacterDBOperateInfo* release_operate_data();
  inline void set_allocated_operate_data(::proto_ff::CharacterDBOperateInfo* operate_data);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOperateLimitInfo)
 private:
  inline void set_has_operate_data();
  inline void clear_has_operate_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleOperateLimitInfo > operatelimitinfo_;
  ::proto_ff::CharacterDBOperateInfo* operate_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOperateLimitInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSingleHuoYueDuInfoInfo : public ::google::protobuf::Message {
 public:
  CharacterDBSingleHuoYueDuInfoInfo();
  virtual ~CharacterDBSingleHuoYueDuInfoInfo();

  CharacterDBSingleHuoYueDuInfoInfo(const CharacterDBSingleHuoYueDuInfoInfo& from);

  inline CharacterDBSingleHuoYueDuInfoInfo& operator=(const CharacterDBSingleHuoYueDuInfoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSingleHuoYueDuInfoInfo& default_instance();

  void Swap(CharacterDBSingleHuoYueDuInfoInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBSingleHuoYueDuInfoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSingleHuoYueDuInfoInfo& from);
  void MergeFrom(const CharacterDBSingleHuoYueDuInfoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 sin_process = 4;
  inline bool has_sin_process() const;
  inline void clear_sin_process();
  static const int kSinProcessFieldNumber = 4;
  inline ::google::protobuf::uint32 sin_process() const;
  inline void set_sin_process(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSingleHuoYueDuInfoInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_sin_process();
  inline void clear_has_sin_process();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 sin_process_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSingleHuoYueDuInfoInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBHuoYueDuInfo : public ::google::protobuf::Message {
 public:
  CharacterDBHuoYueDuInfo();
  virtual ~CharacterDBHuoYueDuInfo();

  CharacterDBHuoYueDuInfo(const CharacterDBHuoYueDuInfo& from);

  inline CharacterDBHuoYueDuInfo& operator=(const CharacterDBHuoYueDuInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBHuoYueDuInfo& default_instance();

  void Swap(CharacterDBHuoYueDuInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBHuoYueDuInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBHuoYueDuInfo& from);
  void MergeFrom(const CharacterDBHuoYueDuInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBSingleHuoYueDuInfoInfo huoYueDuInfo = 1;
  inline int huoyueduinfo_size() const;
  inline void clear_huoyueduinfo();
  static const int kHuoYueDuInfoFieldNumber = 1;
  inline const ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo& huoyueduinfo(int index) const;
  inline ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo* mutable_huoyueduinfo(int index);
  inline ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo* add_huoyueduinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo >&
      huoyueduinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo >*
      mutable_huoyueduinfo();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBHuoYueDuInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo > huoyueduinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBHuoYueDuInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndultTaskEntry : public ::google::protobuf::Message {
 public:
  IndultTaskEntry();
  virtual ~IndultTaskEntry();

  IndultTaskEntry(const IndultTaskEntry& from);

  inline IndultTaskEntry& operator=(const IndultTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndultTaskEntry& default_instance();

  void Swap(IndultTaskEntry* other);

  // implements Message ----------------------------------------------

  IndultTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndultTaskEntry& from);
  void MergeFrom(const IndultTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.IndultTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static IndultTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class IndultTaskGroupEntry : public ::google::protobuf::Message {
 public:
  IndultTaskGroupEntry();
  virtual ~IndultTaskGroupEntry();

  IndultTaskGroupEntry(const IndultTaskGroupEntry& from);

  inline IndultTaskGroupEntry& operator=(const IndultTaskGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndultTaskGroupEntry& default_instance();

  void Swap(IndultTaskGroupEntry* other);

  // implements Message ----------------------------------------------

  IndultTaskGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndultTaskGroupEntry& from);
  void MergeFrom(const IndultTaskGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.IndultTaskEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::IndultTaskEntry& entrys(int index) const;
  inline ::proto_ff::IndultTaskEntry* mutable_entrys(int index);
  inline ::proto_ff::IndultTaskEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskEntry >*
      mutable_entrys();

  // optional int32 normal_reward_state = 3;
  inline bool has_normal_reward_state() const;
  inline void clear_normal_reward_state();
  static const int kNormalRewardStateFieldNumber = 3;
  inline ::google::protobuf::int32 normal_reward_state() const;
  inline void set_normal_reward_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.IndultTaskGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_normal_reward_state();
  inline void clear_has_normal_reward_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskEntry > entrys_;
  ::google::protobuf::int32 normal_reward_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static IndultTaskGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class ColPointsTaskEntry : public ::google::protobuf::Message {
 public:
  ColPointsTaskEntry();
  virtual ~ColPointsTaskEntry();

  ColPointsTaskEntry(const ColPointsTaskEntry& from);

  inline ColPointsTaskEntry& operator=(const ColPointsTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColPointsTaskEntry& default_instance();

  void Swap(ColPointsTaskEntry* other);

  // implements Message ----------------------------------------------

  ColPointsTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColPointsTaskEntry& from);
  void MergeFrom(const ColPointsTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ColPointsTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ColPointsTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class ColPointsTaskGroupEntry : public ::google::protobuf::Message {
 public:
  ColPointsTaskGroupEntry();
  virtual ~ColPointsTaskGroupEntry();

  ColPointsTaskGroupEntry(const ColPointsTaskGroupEntry& from);

  inline ColPointsTaskGroupEntry& operator=(const ColPointsTaskGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColPointsTaskGroupEntry& default_instance();

  void Swap(ColPointsTaskGroupEntry* other);

  // implements Message ----------------------------------------------

  ColPointsTaskGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColPointsTaskGroupEntry& from);
  void MergeFrom(const ColPointsTaskGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.ColPointsTaskEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::ColPointsTaskEntry& entrys(int index) const;
  inline ::proto_ff::ColPointsTaskEntry* mutable_entrys(int index);
  inline ::proto_ff::ColPointsTaskEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ColPointsTaskEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ColPointsTaskEntry >*
      mutable_entrys();

  // optional int32 normal_reward_state = 3;
  inline bool has_normal_reward_state() const;
  inline void clear_normal_reward_state();
  static const int kNormalRewardStateFieldNumber = 3;
  inline ::google::protobuf::int32 normal_reward_state() const;
  inline void set_normal_reward_state(::google::protobuf::int32 value);

  // optional int32 cur_points = 4;
  inline bool has_cur_points() const;
  inline void clear_cur_points();
  static const int kCurPointsFieldNumber = 4;
  inline ::google::protobuf::int32 cur_points() const;
  inline void set_cur_points(::google::protobuf::int32 value);

  // optional uint64 create_time = 5;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ColPointsTaskGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_normal_reward_state();
  inline void clear_has_normal_reward_state();
  inline void set_has_cur_points();
  inline void clear_has_cur_points();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ColPointsTaskEntry > entrys_;
  ::google::protobuf::int32 normal_reward_state_;
  ::google::protobuf::int32 cur_points_;
  ::google::protobuf::uint64 create_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ColPointsTaskGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class ColPointsTaskData : public ::google::protobuf::Message {
 public:
  ColPointsTaskData();
  virtual ~ColPointsTaskData();

  ColPointsTaskData(const ColPointsTaskData& from);

  inline ColPointsTaskData& operator=(const ColPointsTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColPointsTaskData& default_instance();

  void Swap(ColPointsTaskData* other);

  // implements Message ----------------------------------------------

  ColPointsTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColPointsTaskData& from);
  void MergeFrom(const ColPointsTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.ColPointsTaskGroupEntry data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::ColPointsTaskGroupEntry& data() const;
  inline ::proto_ff::ColPointsTaskGroupEntry* mutable_data();
  inline ::proto_ff::ColPointsTaskGroupEntry* release_data();
  inline void set_allocated_data(::proto_ff::ColPointsTaskGroupEntry* data);

  // optional uint64 last_refresh_time = 2;
  inline bool has_last_refresh_time() const;
  inline void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 last_refresh_time() const;
  inline void set_last_refresh_time(::google::protobuf::uint64 value);

  // optional uint64 online_time = 3;
  inline bool has_online_time() const;
  inline void clear_online_time();
  static const int kOnlineTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 online_time() const;
  inline void set_online_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ColPointsTaskData)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_last_refresh_time();
  inline void clear_has_last_refresh_time();
  inline void set_has_online_time();
  inline void clear_has_online_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ColPointsTaskGroupEntry* data_;
  ::google::protobuf::uint64 last_refresh_time_;
  ::google::protobuf::uint64 online_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ColPointsTaskData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareDailySignInDBData : public ::google::protobuf::Message {
 public:
  WelfareDailySignInDBData();
  virtual ~WelfareDailySignInDBData();

  WelfareDailySignInDBData(const WelfareDailySignInDBData& from);

  inline WelfareDailySignInDBData& operator=(const WelfareDailySignInDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareDailySignInDBData& default_instance();

  void Swap(WelfareDailySignInDBData* other);

  // implements Message ----------------------------------------------

  WelfareDailySignInDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareDailySignInDBData& from);
  void MergeFrom(const WelfareDailySignInDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 dayIndex = 2;
  inline bool has_dayindex() const;
  inline void clear_dayindex();
  static const int kDayIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 dayindex() const;
  inline void set_dayindex(::google::protobuf::uint32 value);

  // optional uint32 nState = 3;
  inline bool has_nstate() const;
  inline void clear_nstate();
  static const int kNStateFieldNumber = 3;
  inline ::google::protobuf::uint32 nstate() const;
  inline void set_nstate(::google::protobuf::uint32 value);

  // optional uint64 lastResetTime = 4;
  inline bool has_lastresettime() const;
  inline void clear_lastresettime();
  static const int kLastResetTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 lastresettime() const;
  inline void set_lastresettime(::google::protobuf::uint64 value);

  // optional bool bRecharge = 5;
  inline bool has_brecharge() const;
  inline void clear_brecharge();
  static const int kBRechargeFieldNumber = 5;
  inline bool brecharge() const;
  inline void set_brecharge(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareDailySignInDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_dayindex();
  inline void clear_has_dayindex();
  inline void set_has_nstate();
  inline void clear_has_nstate();
  inline void set_has_lastresettime();
  inline void clear_has_lastresettime();
  inline void set_has_brecharge();
  inline void clear_has_brecharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 dayindex_;
  ::google::protobuf::uint32 nstate_;
  ::google::protobuf::uint64 lastresettime_;
  bool brecharge_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WelfareDailySignInDBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareLoginGiftDBData : public ::google::protobuf::Message {
 public:
  WelfareLoginGiftDBData();
  virtual ~WelfareLoginGiftDBData();

  WelfareLoginGiftDBData(const WelfareLoginGiftDBData& from);

  inline WelfareLoginGiftDBData& operator=(const WelfareLoginGiftDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareLoginGiftDBData& default_instance();

  void Swap(WelfareLoginGiftDBData* other);

  // implements Message ----------------------------------------------

  WelfareLoginGiftDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareLoginGiftDBData& from);
  void MergeFrom(const WelfareLoginGiftDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 LoninCount = 2;
  inline bool has_lonincount() const;
  inline void clear_lonincount();
  static const int kLoninCountFieldNumber = 2;
  inline ::google::protobuf::uint32 lonincount() const;
  inline void set_lonincount(::google::protobuf::uint32 value);

  // optional uint64 lastResetTime = 3;
  inline bool has_lastresettime() const;
  inline void clear_lastresettime();
  static const int kLastResetTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 lastresettime() const;
  inline void set_lastresettime(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 4;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 4;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // optional uint32 nState = 5;
  inline bool has_nstate() const;
  inline void clear_nstate();
  static const int kNStateFieldNumber = 5;
  inline ::google::protobuf::uint32 nstate() const;
  inline void set_nstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareLoginGiftDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lonincount();
  inline void clear_has_lonincount();
  inline void set_has_lastresettime();
  inline void clear_has_lastresettime();
  inline void set_has_nstate();
  inline void clear_has_nstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 lastresettime_;
  ::google::protobuf::uint32 lonincount_;
  ::google::protobuf::uint32 nstate_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WelfareLoginGiftDBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareLevelGiftDBData : public ::google::protobuf::Message {
 public:
  WelfareLevelGiftDBData();
  virtual ~WelfareLevelGiftDBData();

  WelfareLevelGiftDBData(const WelfareLevelGiftDBData& from);

  inline WelfareLevelGiftDBData& operator=(const WelfareLevelGiftDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareLevelGiftDBData& default_instance();

  void Swap(WelfareLevelGiftDBData* other);

  // implements Message ----------------------------------------------

  WelfareLevelGiftDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareLevelGiftDBData& from);
  void MergeFrom(const WelfareLevelGiftDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 2;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 2;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareLevelGiftDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WelfareLevelGiftDBData* default_instance_;
};
// -------------------------------------------------------------------

class CommodityEntry : public ::google::protobuf::Message {
 public:
  CommodityEntry();
  virtual ~CommodityEntry();

  CommodityEntry(const CommodityEntry& from);

  inline CommodityEntry& operator=(const CommodityEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommodityEntry& default_instance();

  void Swap(CommodityEntry* other);

  // implements Message ----------------------------------------------

  CommodityEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommodityEntry& from);
  void MergeFrom(const CommodityEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 commodity_id = 1;
  inline bool has_commodity_id() const;
  inline void clear_commodity_id();
  static const int kCommodityIdFieldNumber = 1;
  inline ::google::protobuf::uint64 commodity_id() const;
  inline void set_commodity_id(::google::protobuf::uint64 value);

  // optional int32 cur_buy_num = 2;
  inline bool has_cur_buy_num() const;
  inline void clear_cur_buy_num();
  static const int kCurBuyNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_buy_num() const;
  inline void set_cur_buy_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CommodityEntry)
 private:
  inline void set_has_commodity_id();
  inline void clear_has_commodity_id();
  inline void set_has_cur_buy_num();
  inline void clear_has_cur_buy_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 commodity_id_;
  ::google::protobuf::int32 cur_buy_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CommodityEntry* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopGroupEntry : public ::google::protobuf::Message {
 public:
  LimitShopGroupEntry();
  virtual ~LimitShopGroupEntry();

  LimitShopGroupEntry(const LimitShopGroupEntry& from);

  inline LimitShopGroupEntry& operator=(const LimitShopGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopGroupEntry& default_instance();

  void Swap(LimitShopGroupEntry* other);

  // implements Message ----------------------------------------------

  LimitShopGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopGroupEntry& from);
  void MergeFrom(const LimitShopGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // optional int32 open_time = 2;
  inline bool has_open_time() const;
  inline void clear_open_time();
  static const int kOpenTimeFieldNumber = 2;
  inline ::google::protobuf::int32 open_time() const;
  inline void set_open_time(::google::protobuf::int32 value);

  // repeated .proto_ff.CommodityEntry entrys = 3;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 3;
  inline const ::proto_ff::CommodityEntry& entrys(int index) const;
  inline ::proto_ff::CommodityEntry* mutable_entrys(int index);
  inline ::proto_ff::CommodityEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CommodityEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CommodityEntry >*
      mutable_entrys();

  // @@protoc_insertion_point(class_scope:proto_ff.LimitShopGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_open_time();
  inline void clear_has_open_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::CommodityEntry > entrys_;
  ::google::protobuf::int32 open_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitShopGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class LimitShopData : public ::google::protobuf::Message {
 public:
  LimitShopData();
  virtual ~LimitShopData();

  LimitShopData(const LimitShopData& from);

  inline LimitShopData& operator=(const LimitShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitShopData& default_instance();

  void Swap(LimitShopData* other);

  // implements Message ----------------------------------------------

  LimitShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitShopData& from);
  void MergeFrom(const LimitShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.LimitShopGroupEntry groups = 2;
  inline int groups_size() const;
  inline void clear_groups();
  static const int kGroupsFieldNumber = 2;
  inline const ::proto_ff::LimitShopGroupEntry& groups(int index) const;
  inline ::proto_ff::LimitShopGroupEntry* mutable_groups(int index);
  inline ::proto_ff::LimitShopGroupEntry* add_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopGroupEntry >&
      groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopGroupEntry >*
      mutable_groups();

  // @@protoc_insertion_point(class_scope:proto_ff.LimitShopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopGroupEntry > groups_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitShopData* default_instance_;
};
// -------------------------------------------------------------------

class LimitTaskEntry : public ::google::protobuf::Message {
 public:
  LimitTaskEntry();
  virtual ~LimitTaskEntry();

  LimitTaskEntry(const LimitTaskEntry& from);

  inline LimitTaskEntry& operator=(const LimitTaskEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitTaskEntry& default_instance();

  void Swap(LimitTaskEntry* other);

  // implements Message ----------------------------------------------

  LimitTaskEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitTaskEntry& from);
  void MergeFrom(const LimitTaskEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 task_cfg_id = 1;
  inline bool has_task_cfg_id() const;
  inline void clear_task_cfg_id();
  static const int kTaskCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_cfg_id() const;
  inline void set_task_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 task_state = 3;
  inline bool has_task_state() const;
  inline void clear_task_state();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 task_state() const;
  inline void set_task_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LimitTaskEntry)
 private:
  inline void set_has_task_cfg_id();
  inline void clear_has_task_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_task_state();
  inline void clear_has_task_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_cfg_id_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 task_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitTaskEntry* default_instance_;
};
// -------------------------------------------------------------------

class LimitTaskGroupEntry : public ::google::protobuf::Message {
 public:
  LimitTaskGroupEntry();
  virtual ~LimitTaskGroupEntry();

  LimitTaskGroupEntry(const LimitTaskGroupEntry& from);

  inline LimitTaskGroupEntry& operator=(const LimitTaskGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitTaskGroupEntry& default_instance();

  void Swap(LimitTaskGroupEntry* other);

  // implements Message ----------------------------------------------

  LimitTaskGroupEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitTaskGroupEntry& from);
  void MergeFrom(const LimitTaskGroupEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_cfg_id = 1;
  inline bool has_group_cfg_id() const;
  inline void clear_group_cfg_id();
  static const int kGroupCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_cfg_id() const;
  inline void set_group_cfg_id(::google::protobuf::uint64 value);

  // optional int32 open_time = 2;
  inline bool has_open_time() const;
  inline void clear_open_time();
  static const int kOpenTimeFieldNumber = 2;
  inline ::google::protobuf::int32 open_time() const;
  inline void set_open_time(::google::protobuf::int32 value);

  // repeated .proto_ff.LimitTaskEntry entrys = 3;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 3;
  inline const ::proto_ff::LimitTaskEntry& entrys(int index) const;
  inline ::proto_ff::LimitTaskEntry* mutable_entrys(int index);
  inline ::proto_ff::LimitTaskEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskEntry >*
      mutable_entrys();

  // optional int32 normal_reward_state = 4;
  inline bool has_normal_reward_state() const;
  inline void clear_normal_reward_state();
  static const int kNormalRewardStateFieldNumber = 4;
  inline ::google::protobuf::int32 normal_reward_state() const;
  inline void set_normal_reward_state(::google::protobuf::int32 value);

  // optional int32 senior_reward_state = 5;
  inline bool has_senior_reward_state() const;
  inline void clear_senior_reward_state();
  static const int kSeniorRewardStateFieldNumber = 5;
  inline ::google::protobuf::int32 senior_reward_state() const;
  inline void set_senior_reward_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LimitTaskGroupEntry)
 private:
  inline void set_has_group_cfg_id();
  inline void clear_has_group_cfg_id();
  inline void set_has_open_time();
  inline void clear_has_open_time();
  inline void set_has_normal_reward_state();
  inline void clear_has_normal_reward_state();
  inline void set_has_senior_reward_state();
  inline void clear_has_senior_reward_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 group_cfg_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskEntry > entrys_;
  ::google::protobuf::int32 open_time_;
  ::google::protobuf::int32 normal_reward_state_;
  ::google::protobuf::int32 senior_reward_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitTaskGroupEntry* default_instance_;
};
// -------------------------------------------------------------------

class LimitTaskData : public ::google::protobuf::Message {
 public:
  LimitTaskData();
  virtual ~LimitTaskData();

  LimitTaskData(const LimitTaskData& from);

  inline LimitTaskData& operator=(const LimitTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitTaskData& default_instance();

  void Swap(LimitTaskData* other);

  // implements Message ----------------------------------------------

  LimitTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitTaskData& from);
  void MergeFrom(const LimitTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.LimitTaskGroupEntry groups = 2;
  inline int groups_size() const;
  inline void clear_groups();
  static const int kGroupsFieldNumber = 2;
  inline const ::proto_ff::LimitTaskGroupEntry& groups(int index) const;
  inline ::proto_ff::LimitTaskGroupEntry* mutable_groups(int index);
  inline ::proto_ff::LimitTaskGroupEntry* add_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskGroupEntry >&
      groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskGroupEntry >*
      mutable_groups();

  // @@protoc_insertion_point(class_scope:proto_ff.LimitTaskData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskGroupEntry > groups_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitTaskData* default_instance_;
};
// -------------------------------------------------------------------

class WishDBTypeEntry : public ::google::protobuf::Message {
 public:
  WishDBTypeEntry();
  virtual ~WishDBTypeEntry();

  WishDBTypeEntry(const WishDBTypeEntry& from);

  inline WishDBTypeEntry& operator=(const WishDBTypeEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WishDBTypeEntry& default_instance();

  void Swap(WishDBTypeEntry* other);

  // implements Message ----------------------------------------------

  WishDBTypeEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WishDBTypeEntry& from);
  void MergeFrom(const WishDBTypeEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wish_type = 1;
  inline bool has_wish_type() const;
  inline void clear_wish_type();
  static const int kWishTypeFieldNumber = 1;
  inline ::google::protobuf::int32 wish_type() const;
  inline void set_wish_type(::google::protobuf::int32 value);

  // optional int32 wished_num = 2;
  inline bool has_wished_num() const;
  inline void clear_wished_num();
  static const int kWishedNumFieldNumber = 2;
  inline ::google::protobuf::int32 wished_num() const;
  inline void set_wished_num(::google::protobuf::int32 value);

  // optional uint64 refresh_time = 3;
  inline bool has_refresh_time() const;
  inline void clear_refresh_time();
  static const int kRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 refresh_time() const;
  inline void set_refresh_time(::google::protobuf::uint64 value);

  // optional uint64 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WishDBTypeEntry)
 private:
  inline void set_has_wish_type();
  inline void clear_has_wish_type();
  inline void set_has_wished_num();
  inline void clear_has_wished_num();
  inline void set_has_refresh_time();
  inline void clear_has_refresh_time();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wish_type_;
  ::google::protobuf::int32 wished_num_;
  ::google::protobuf::uint64 refresh_time_;
  ::google::protobuf::uint64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WishDBTypeEntry* default_instance_;
};
// -------------------------------------------------------------------

class WishDBData : public ::google::protobuf::Message {
 public:
  WishDBData();
  virtual ~WishDBData();

  WishDBData(const WishDBData& from);

  inline WishDBData& operator=(const WishDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WishDBData& default_instance();

  void Swap(WishDBData* other);

  // implements Message ----------------------------------------------

  WishDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WishDBData& from);
  void MergeFrom(const WishDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.WishDBTypeEntry type_entry = 2;
  inline int type_entry_size() const;
  inline void clear_type_entry();
  static const int kTypeEntryFieldNumber = 2;
  inline const ::proto_ff::WishDBTypeEntry& type_entry(int index) const;
  inline ::proto_ff::WishDBTypeEntry* mutable_type_entry(int index);
  inline ::proto_ff::WishDBTypeEntry* add_type_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBTypeEntry >&
      type_entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBTypeEntry >*
      mutable_type_entry();

  // @@protoc_insertion_point(class_scope:proto_ff.WishDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBTypeEntry > type_entry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WishDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalInvestDBData : public ::google::protobuf::Message {
 public:
  FestivalInvestDBData();
  virtual ~FestivalInvestDBData();

  FestivalInvestDBData(const FestivalInvestDBData& from);

  inline FestivalInvestDBData& operator=(const FestivalInvestDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalInvestDBData& default_instance();

  void Swap(FestivalInvestDBData* other);

  // implements Message ----------------------------------------------

  FestivalInvestDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalInvestDBData& from);
  void MergeFrom(const FestivalInvestDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 nActiveId = 1;
  inline bool has_nactiveid() const;
  inline void clear_nactiveid();
  static const int kNActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 nactiveid() const;
  inline void set_nactiveid(::google::protobuf::uint64 value);

  // optional bool bInvest = 2;
  inline bool has_binvest() const;
  inline void clear_binvest();
  static const int kBInvestFieldNumber = 2;
  inline bool binvest() const;
  inline void set_binvest(bool value);

  // optional uint64 nLastResetTime = 3;
  inline bool has_nlastresettime() const;
  inline void clear_nlastresettime();
  static const int kNLastResetTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 nlastresettime() const;
  inline void set_nlastresettime(::google::protobuf::uint64 value);

  // optional int32 nLoninCount = 4;
  inline bool has_nlonincount() const;
  inline void clear_nlonincount();
  static const int kNLoninCountFieldNumber = 4;
  inline ::google::protobuf::int32 nlonincount() const;
  inline void set_nlonincount(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair getState = 5;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 5;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // repeated .proto_ff.ComPair params = 6;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 6;
  inline const ::proto_ff::ComPair& params(int index) const;
  inline ::proto_ff::ComPair* mutable_params(int index);
  inline ::proto_ff::ComPair* add_params();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      params() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_params();

  // optional int64 investTime = 7;
  inline bool has_investtime() const;
  inline void clear_investtime();
  static const int kInvestTimeFieldNumber = 7;
  inline ::google::protobuf::int64 investtime() const;
  inline void set_investtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalInvestDBData)
 private:
  inline void set_has_nactiveid();
  inline void clear_has_nactiveid();
  inline void set_has_binvest();
  inline void clear_has_binvest();
  inline void set_has_nlastresettime();
  inline void clear_has_nlastresettime();
  inline void set_has_nlonincount();
  inline void clear_has_nlonincount();
  inline void set_has_investtime();
  inline void clear_has_investtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nactiveid_;
  ::google::protobuf::uint64 nlastresettime_;
  bool binvest_;
  ::google::protobuf::int32 nlonincount_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > params_;
  ::google::protobuf::int64 investtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalInvestDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalExchangeDBData : public ::google::protobuf::Message {
 public:
  FestivalExchangeDBData();
  virtual ~FestivalExchangeDBData();

  FestivalExchangeDBData(const FestivalExchangeDBData& from);

  inline FestivalExchangeDBData& operator=(const FestivalExchangeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalExchangeDBData& default_instance();

  void Swap(FestivalExchangeDBData* other);

  // implements Message ----------------------------------------------

  FestivalExchangeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalExchangeDBData& from);
  void MergeFrom(const FestivalExchangeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 nActiveId = 1;
  inline bool has_nactiveid() const;
  inline void clear_nactiveid();
  static const int kNActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 nactiveid() const;
  inline void set_nactiveid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair exchangeCount = 2;
  inline int exchangecount_size() const;
  inline void clear_exchangecount();
  static const int kExchangeCountFieldNumber = 2;
  inline const ::proto_ff::ComPair& exchangecount(int index) const;
  inline ::proto_ff::ComPair* mutable_exchangecount(int index);
  inline ::proto_ff::ComPair* add_exchangecount();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      exchangecount() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_exchangecount();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalExchangeDBData)
 private:
  inline void set_has_nactiveid();
  inline void clear_has_nactiveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nactiveid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > exchangecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalExchangeDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalLoginDBData : public ::google::protobuf::Message {
 public:
  FestivalLoginDBData();
  virtual ~FestivalLoginDBData();

  FestivalLoginDBData(const FestivalLoginDBData& from);

  inline FestivalLoginDBData& operator=(const FestivalLoginDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalLoginDBData& default_instance();

  void Swap(FestivalLoginDBData* other);

  // implements Message ----------------------------------------------

  FestivalLoginDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalLoginDBData& from);
  void MergeFrom(const FestivalLoginDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 nLastResetTime = 2;
  inline bool has_nlastresettime() const;
  inline void clear_nlastresettime();
  static const int kNLastResetTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 nlastresettime() const;
  inline void set_nlastresettime(::google::protobuf::uint64 value);

  // optional uint32 nLoninCount = 3;
  inline bool has_nlonincount() const;
  inline void clear_nlonincount();
  static const int kNLoninCountFieldNumber = 3;
  inline ::google::protobuf::uint32 nlonincount() const;
  inline void set_nlonincount(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair getState = 4;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 4;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalLoginDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_nlastresettime();
  inline void clear_has_nlastresettime();
  inline void set_has_nlonincount();
  inline void clear_has_nlonincount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 nlastresettime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::uint32 nlonincount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalLoginDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalTotalRechargeDBData : public ::google::protobuf::Message {
 public:
  FestivalTotalRechargeDBData();
  virtual ~FestivalTotalRechargeDBData();

  FestivalTotalRechargeDBData(const FestivalTotalRechargeDBData& from);

  inline FestivalTotalRechargeDBData& operator=(const FestivalTotalRechargeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalTotalRechargeDBData& default_instance();

  void Swap(FestivalTotalRechargeDBData* other);

  // implements Message ----------------------------------------------

  FestivalTotalRechargeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalTotalRechargeDBData& from);
  void MergeFrom(const FestivalTotalRechargeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 nRechargeCount = 2;
  inline bool has_nrechargecount() const;
  inline void clear_nrechargecount();
  static const int kNRechargeCountFieldNumber = 2;
  inline ::google::protobuf::uint32 nrechargecount() const;
  inline void set_nrechargecount(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair getState = 3;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 3;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // optional uint32 nRechargeHoly = 4;
  inline bool has_nrechargeholy() const;
  inline void clear_nrechargeholy();
  static const int kNRechargeHolyFieldNumber = 4;
  inline ::google::protobuf::uint32 nrechargeholy() const;
  inline void set_nrechargeholy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalTotalRechargeDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_nrechargecount();
  inline void clear_has_nrechargecount();
  inline void set_has_nrechargeholy();
  inline void clear_has_nrechargeholy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::uint32 nrechargecount_;
  ::google::protobuf::uint32 nrechargeholy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalTotalRechargeDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalConsumptionDBData : public ::google::protobuf::Message {
 public:
  FestivalConsumptionDBData();
  virtual ~FestivalConsumptionDBData();

  FestivalConsumptionDBData(const FestivalConsumptionDBData& from);

  inline FestivalConsumptionDBData& operator=(const FestivalConsumptionDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalConsumptionDBData& default_instance();

  void Swap(FestivalConsumptionDBData* other);

  // implements Message ----------------------------------------------

  FestivalConsumptionDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalConsumptionDBData& from);
  void MergeFrom(const FestivalConsumptionDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 nConsumptionValue = 2;
  inline bool has_nconsumptionvalue() const;
  inline void clear_nconsumptionvalue();
  static const int kNConsumptionValueFieldNumber = 2;
  inline ::google::protobuf::uint32 nconsumptionvalue() const;
  inline void set_nconsumptionvalue(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair getState = 3;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 3;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // optional uint32 nConsumptionHoly = 4;
  inline bool has_nconsumptionholy() const;
  inline void clear_nconsumptionholy();
  static const int kNConsumptionHolyFieldNumber = 4;
  inline ::google::protobuf::uint32 nconsumptionholy() const;
  inline void set_nconsumptionholy(::google::protobuf::uint32 value);

  // optional uint32 nConsumptionVoucher = 5;
  inline bool has_nconsumptionvoucher() const;
  inline void clear_nconsumptionvoucher();
  static const int kNConsumptionVoucherFieldNumber = 5;
  inline ::google::protobuf::uint32 nconsumptionvoucher() const;
  inline void set_nconsumptionvoucher(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalConsumptionDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_nconsumptionvalue();
  inline void clear_has_nconsumptionvalue();
  inline void set_has_nconsumptionholy();
  inline void clear_has_nconsumptionholy();
  inline void set_has_nconsumptionvoucher();
  inline void clear_has_nconsumptionvoucher();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::uint32 nconsumptionvalue_;
  ::google::protobuf::uint32 nconsumptionholy_;
  ::google::protobuf::uint32 nconsumptionvoucher_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalConsumptionDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalKillBossData : public ::google::protobuf::Message {
 public:
  FestivalKillBossData();
  virtual ~FestivalKillBossData();

  FestivalKillBossData(const FestivalKillBossData& from);

  inline FestivalKillBossData& operator=(const FestivalKillBossData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalKillBossData& default_instance();

  void Swap(FestivalKillBossData* other);

  // implements Message ----------------------------------------------

  FestivalKillBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalKillBossData& from);
  void MergeFrom(const FestivalKillBossData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 2;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 2;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalKillBossData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalKillBossData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalZhiChongData : public ::google::protobuf::Message {
 public:
  FestivalZhiChongData();
  virtual ~FestivalZhiChongData();

  FestivalZhiChongData(const FestivalZhiChongData& from);

  inline FestivalZhiChongData& operator=(const FestivalZhiChongData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalZhiChongData& default_instance();

  void Swap(FestivalZhiChongData* other);

  // implements Message ----------------------------------------------

  FestivalZhiChongData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalZhiChongData& from);
  void MergeFrom(const FestivalZhiChongData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 2;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 2;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // repeated int64 pointList = 3;
  inline int pointlist_size() const;
  inline void clear_pointlist();
  static const int kPointListFieldNumber = 3;
  inline ::google::protobuf::int64 pointlist(int index) const;
  inline void set_pointlist(int index, ::google::protobuf::int64 value);
  inline void add_pointlist(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      pointlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_pointlist();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalZhiChongData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > pointlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalZhiChongData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalPreRechargeData : public ::google::protobuf::Message {
 public:
  FestivalPreRechargeData();
  virtual ~FestivalPreRechargeData();

  FestivalPreRechargeData(const FestivalPreRechargeData& from);

  inline FestivalPreRechargeData& operator=(const FestivalPreRechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalPreRechargeData& default_instance();

  void Swap(FestivalPreRechargeData* other);

  // implements Message ----------------------------------------------

  FestivalPreRechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalPreRechargeData& from);
  void MergeFrom(const FestivalPreRechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair buy = 2;
  inline int buy_size() const;
  inline void clear_buy();
  static const int kBuyFieldNumber = 2;
  inline const ::proto_ff::ComPair& buy(int index) const;
  inline ::proto_ff::ComPair* mutable_buy(int index);
  inline ::proto_ff::ComPair* add_buy();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      buy() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_buy();

  // repeated int64 pointList = 3;
  inline int pointlist_size() const;
  inline void clear_pointlist();
  static const int kPointListFieldNumber = 3;
  inline ::google::protobuf::int64 pointlist(int index) const;
  inline void set_pointlist(int index, ::google::protobuf::int64 value);
  inline void add_pointlist(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      pointlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_pointlist();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalPreRechargeData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > buy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > pointlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalPreRechargeData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalSuperDBData : public ::google::protobuf::Message {
 public:
  FestivalSuperDBData();
  virtual ~FestivalSuperDBData();

  FestivalSuperDBData(const FestivalSuperDBData& from);

  inline FestivalSuperDBData& operator=(const FestivalSuperDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalSuperDBData& default_instance();

  void Swap(FestivalSuperDBData* other);

  // implements Message ----------------------------------------------

  FestivalSuperDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalSuperDBData& from);
  void MergeFrom(const FestivalSuperDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 nLastResetTime = 2;
  inline bool has_nlastresettime() const;
  inline void clear_nlastresettime();
  static const int kNLastResetTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 nlastresettime() const;
  inline void set_nlastresettime(::google::protobuf::uint64 value);

  // optional uint32 nLoninCount = 3;
  inline bool has_nlonincount() const;
  inline void clear_nlonincount();
  static const int kNLoninCountFieldNumber = 3;
  inline ::google::protobuf::uint32 nlonincount() const;
  inline void set_nlonincount(::google::protobuf::uint32 value);

  // optional int32 getId = 4;
  inline bool has_getid() const;
  inline void clear_getid();
  static const int kGetIdFieldNumber = 4;
  inline ::google::protobuf::int32 getid() const;
  inline void set_getid(::google::protobuf::int32 value);

  // optional int32 active_state = 5;
  inline bool has_active_state() const;
  inline void clear_active_state();
  static const int kActiveStateFieldNumber = 5;
  inline ::google::protobuf::int32 active_state() const;
  inline void set_active_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalSuperDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_nlastresettime();
  inline void clear_has_nlastresettime();
  inline void set_has_nlonincount();
  inline void clear_has_nlonincount();
  inline void set_has_getid();
  inline void clear_has_getid();
  inline void set_has_active_state();
  inline void clear_has_active_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 nlastresettime_;
  ::google::protobuf::uint32 nlonincount_;
  ::google::protobuf::int32 getid_;
  ::google::protobuf::int32 active_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalSuperDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalSuperDoubleDBData : public ::google::protobuf::Message {
 public:
  FestivalSuperDoubleDBData();
  virtual ~FestivalSuperDoubleDBData();

  FestivalSuperDoubleDBData(const FestivalSuperDoubleDBData& from);

  inline FestivalSuperDoubleDBData& operator=(const FestivalSuperDoubleDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalSuperDoubleDBData& default_instance();

  void Swap(FestivalSuperDoubleDBData* other);

  // implements Message ----------------------------------------------

  FestivalSuperDoubleDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalSuperDoubleDBData& from);
  void MergeFrom(const FestivalSuperDoubleDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 nLastResetTime = 2;
  inline bool has_nlastresettime() const;
  inline void clear_nlastresettime();
  static const int kNLastResetTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 nlastresettime() const;
  inline void set_nlastresettime(::google::protobuf::uint64 value);

  // optional uint32 curGiftId = 3;
  inline bool has_curgiftid() const;
  inline void clear_curgiftid();
  static const int kCurGiftIdFieldNumber = 3;
  inline ::google::protobuf::uint32 curgiftid() const;
  inline void set_curgiftid(::google::protobuf::uint32 value);

  // optional int32 curGiftState = 4;
  inline bool has_curgiftstate() const;
  inline void clear_curgiftstate();
  static const int kCurGiftStateFieldNumber = 4;
  inline ::google::protobuf::int32 curgiftstate() const;
  inline void set_curgiftstate(::google::protobuf::int32 value);

  // optional int32 curDailyState = 5;
  inline bool has_curdailystate() const;
  inline void clear_curdailystate();
  static const int kCurDailyStateFieldNumber = 5;
  inline ::google::protobuf::int32 curdailystate() const;
  inline void set_curdailystate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalSuperDoubleDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_nlastresettime();
  inline void clear_has_nlastresettime();
  inline void set_has_curgiftid();
  inline void clear_has_curgiftid();
  inline void set_has_curgiftstate();
  inline void clear_has_curgiftstate();
  inline void set_has_curdailystate();
  inline void clear_has_curdailystate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 nlastresettime_;
  ::google::protobuf::uint32 curgiftid_;
  ::google::protobuf::int32 curgiftstate_;
  ::google::protobuf::int32 curdailystate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalSuperDoubleDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalHuoYueDuDBData : public ::google::protobuf::Message {
 public:
  FestivalHuoYueDuDBData();
  virtual ~FestivalHuoYueDuDBData();

  FestivalHuoYueDuDBData(const FestivalHuoYueDuDBData& from);

  inline FestivalHuoYueDuDBData& operator=(const FestivalHuoYueDuDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalHuoYueDuDBData& default_instance();

  void Swap(FestivalHuoYueDuDBData* other);

  // implements Message ----------------------------------------------

  FestivalHuoYueDuDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalHuoYueDuDBData& from);
  void MergeFrom(const FestivalHuoYueDuDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 nHuoYueDu = 2;
  inline bool has_nhuoyuedu() const;
  inline void clear_nhuoyuedu();
  static const int kNHuoYueDuFieldNumber = 2;
  inline ::google::protobuf::uint32 nhuoyuedu() const;
  inline void set_nhuoyuedu(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair getState = 3;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 3;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalHuoYueDuDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_nhuoyuedu();
  inline void clear_has_nhuoyuedu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::uint32 nhuoyuedu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalHuoYueDuDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalFirstRechargeDBData : public ::google::protobuf::Message {
 public:
  FestivalFirstRechargeDBData();
  virtual ~FestivalFirstRechargeDBData();

  FestivalFirstRechargeDBData(const FestivalFirstRechargeDBData& from);

  inline FestivalFirstRechargeDBData& operator=(const FestivalFirstRechargeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalFirstRechargeDBData& default_instance();

  void Swap(FestivalFirstRechargeDBData* other);

  // implements Message ----------------------------------------------

  FestivalFirstRechargeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalFirstRechargeDBData& from);
  void MergeFrom(const FestivalFirstRechargeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 rechargeTime = 2;
  inline bool has_rechargetime() const;
  inline void clear_rechargetime();
  static const int kRechargeTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 rechargetime() const;
  inline void set_rechargetime(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair getState = 3;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 3;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalFirstRechargeDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_rechargetime();
  inline void clear_has_rechargetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::uint32 rechargetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalFirstRechargeDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalYanHuaDBData : public ::google::protobuf::Message {
 public:
  FestivalYanHuaDBData();
  virtual ~FestivalYanHuaDBData();

  FestivalYanHuaDBData(const FestivalYanHuaDBData& from);

  inline FestivalYanHuaDBData& operator=(const FestivalYanHuaDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalYanHuaDBData& default_instance();

  void Swap(FestivalYanHuaDBData* other);

  // implements Message ----------------------------------------------

  FestivalYanHuaDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalYanHuaDBData& from);
  void MergeFrom(const FestivalYanHuaDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated uint64 getItems = 2;
  inline int getitems_size() const;
  inline void clear_getitems();
  static const int kGetItemsFieldNumber = 2;
  inline ::google::protobuf::uint64 getitems(int index) const;
  inline void set_getitems(int index, ::google::protobuf::uint64 value);
  inline void add_getitems(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      getitems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_getitems();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalYanHuaDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > getitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalYanHuaDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalBigYanHuaDBData : public ::google::protobuf::Message {
 public:
  FestivalBigYanHuaDBData();
  virtual ~FestivalBigYanHuaDBData();

  FestivalBigYanHuaDBData(const FestivalBigYanHuaDBData& from);

  inline FestivalBigYanHuaDBData& operator=(const FestivalBigYanHuaDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalBigYanHuaDBData& default_instance();

  void Swap(FestivalBigYanHuaDBData* other);

  // implements Message ----------------------------------------------

  FestivalBigYanHuaDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalBigYanHuaDBData& from);
  void MergeFrom(const FestivalBigYanHuaDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated uint64 getItems = 2;
  inline int getitems_size() const;
  inline void clear_getitems();
  static const int kGetItemsFieldNumber = 2;
  inline ::google::protobuf::uint64 getitems(int index) const;
  inline void set_getitems(int index, ::google::protobuf::uint64 value);
  inline void add_getitems(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      getitems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_getitems();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalBigYanHuaDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > getitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalBigYanHuaDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalShopDBData : public ::google::protobuf::Message {
 public:
  FestivalShopDBData();
  virtual ~FestivalShopDBData();

  FestivalShopDBData(const FestivalShopDBData& from);

  inline FestivalShopDBData& operator=(const FestivalShopDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalShopDBData& default_instance();

  void Swap(FestivalShopDBData* other);

  // implements Message ----------------------------------------------

  FestivalShopDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalShopDBData& from);
  void MergeFrom(const FestivalShopDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 buyCount = 2;
  inline int buycount_size() const;
  inline void clear_buycount();
  static const int kBuyCountFieldNumber = 2;
  inline const ::proto_ff::ComPair64& buycount(int index) const;
  inline ::proto_ff::ComPair64* mutable_buycount(int index);
  inline ::proto_ff::ComPair64* add_buycount();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      buycount() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_buycount();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalShopDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > buycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalShopDBData* default_instance_;
};
// -------------------------------------------------------------------

class LimitGiftDBData : public ::google::protobuf::Message {
 public:
  LimitGiftDBData();
  virtual ~LimitGiftDBData();

  LimitGiftDBData(const LimitGiftDBData& from);

  inline LimitGiftDBData& operator=(const LimitGiftDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitGiftDBData& default_instance();

  void Swap(LimitGiftDBData* other);

  // implements Message ----------------------------------------------

  LimitGiftDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitGiftDBData& from);
  void MergeFrom(const LimitGiftDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 giftId = 1;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 1;
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // optional uint64 buyTime = 2;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // optional uint32 getState = 3;
  inline bool has_getstate() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 3;
  inline ::google::protobuf::uint32 getstate() const;
  inline void set_getstate(::google::protobuf::uint32 value);

  // optional uint32 totalBack = 4;
  inline bool has_totalback() const;
  inline void clear_totalback();
  static const int kTotalBackFieldNumber = 4;
  inline ::google::protobuf::uint32 totalback() const;
  inline void set_totalback(::google::protobuf::uint32 value);

  // optional uint32 openTime = 5;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpenTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 opentime() const;
  inline void set_opentime(::google::protobuf::uint32 value);

  // optional uint64 lastResetTime = 6;
  inline bool has_lastresettime() const;
  inline void clear_lastresettime();
  static const int kLastResetTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 lastresettime() const;
  inline void set_lastresettime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LimitGiftDBData)
 private:
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_buytime();
  inline void clear_has_buytime();
  inline void set_has_getstate();
  inline void clear_has_getstate();
  inline void set_has_totalback();
  inline void clear_has_totalback();
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_lastresettime();
  inline void clear_has_lastresettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 buytime_;
  ::google::protobuf::uint32 giftid_;
  ::google::protobuf::uint32 getstate_;
  ::google::protobuf::uint32 totalback_;
  ::google::protobuf::uint32 opentime_;
  ::google::protobuf::uint64 lastresettime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitGiftDBData* default_instance_;
};
// -------------------------------------------------------------------

class LimitGiftActiveDBData : public ::google::protobuf::Message {
 public:
  LimitGiftActiveDBData();
  virtual ~LimitGiftActiveDBData();

  LimitGiftActiveDBData(const LimitGiftActiveDBData& from);

  inline LimitGiftActiveDBData& operator=(const LimitGiftActiveDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitGiftActiveDBData& default_instance();

  void Swap(LimitGiftActiveDBData* other);

  // implements Message ----------------------------------------------

  LimitGiftActiveDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitGiftActiveDBData& from);
  void MergeFrom(const LimitGiftActiveDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional bool isFinish = 2;
  inline bool has_isfinish() const;
  inline void clear_isfinish();
  static const int kIsFinishFieldNumber = 2;
  inline bool isfinish() const;
  inline void set_isfinish(bool value);

  // repeated .proto_ff.LimitGiftDBData giftList = 3;
  inline int giftlist_size() const;
  inline void clear_giftlist();
  static const int kGiftListFieldNumber = 3;
  inline const ::proto_ff::LimitGiftDBData& giftlist(int index) const;
  inline ::proto_ff::LimitGiftDBData* mutable_giftlist(int index);
  inline ::proto_ff::LimitGiftDBData* add_giftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftDBData >&
      giftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftDBData >*
      mutable_giftlist();

  // @@protoc_insertion_point(class_scope:proto_ff.LimitGiftActiveDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_isfinish();
  inline void clear_has_isfinish();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftDBData > giftlist_;
  bool isfinish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static LimitGiftActiveDBData* default_instance_;
};
// -------------------------------------------------------------------

class FRechargeDBData : public ::google::protobuf::Message {
 public:
  FRechargeDBData();
  virtual ~FRechargeDBData();

  FRechargeDBData(const FRechargeDBData& from);

  inline FRechargeDBData& operator=(const FRechargeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FRechargeDBData& default_instance();

  void Swap(FRechargeDBData* other);

  // implements Message ----------------------------------------------

  FRechargeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FRechargeDBData& from);
  void MergeFrom(const FRechargeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pointId = 1;
  inline bool has_pointid() const;
  inline void clear_pointid();
  static const int kPointIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pointid() const;
  inline void set_pointid(::google::protobuf::uint64 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FRechargeDBData)
 private:
  inline void set_has_pointid();
  inline void clear_has_pointid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pointid_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FRechargeDBData* default_instance_;
};
// -------------------------------------------------------------------

class FRechargeActiveDBData : public ::google::protobuf::Message {
 public:
  FRechargeActiveDBData();
  virtual ~FRechargeActiveDBData();

  FRechargeActiveDBData(const FRechargeActiveDBData& from);

  inline FRechargeActiveDBData& operator=(const FRechargeActiveDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FRechargeActiveDBData& default_instance();

  void Swap(FRechargeActiveDBData* other);

  // implements Message ----------------------------------------------

  FRechargeActiveDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FRechargeActiveDBData& from);
  void MergeFrom(const FRechargeActiveDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.FRechargeDBData dataList = 2;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDataListFieldNumber = 2;
  inline const ::proto_ff::FRechargeDBData& datalist(int index) const;
  inline ::proto_ff::FRechargeDBData* mutable_datalist(int index);
  inline ::proto_ff::FRechargeDBData* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeDBData >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeDBData >*
      mutable_datalist();

  // @@protoc_insertion_point(class_scope:proto_ff.FRechargeActiveDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeDBData > datalist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FRechargeActiveDBData* default_instance_;
};
// -------------------------------------------------------------------

class FSmashEggDBData : public ::google::protobuf::Message {
 public:
  FSmashEggDBData();
  virtual ~FSmashEggDBData();

  FSmashEggDBData(const FSmashEggDBData& from);

  inline FSmashEggDBData& operator=(const FSmashEggDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FSmashEggDBData& default_instance();

  void Swap(FSmashEggDBData* other);

  // implements Message ----------------------------------------------

  FSmashEggDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FSmashEggDBData& from);
  void MergeFrom(const FSmashEggDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // optional uint32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional uint32 itemNum = 4;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FSmashEggDBData)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FSmashEggDBData* default_instance_;
};
// -------------------------------------------------------------------

class FestivalSmashEggDBData : public ::google::protobuf::Message {
 public:
  FestivalSmashEggDBData();
  virtual ~FestivalSmashEggDBData();

  FestivalSmashEggDBData(const FestivalSmashEggDBData& from);

  inline FestivalSmashEggDBData& operator=(const FestivalSmashEggDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalSmashEggDBData& default_instance();

  void Swap(FestivalSmashEggDBData* other);

  // implements Message ----------------------------------------------

  FestivalSmashEggDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalSmashEggDBData& from);
  void MergeFrom(const FestivalSmashEggDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 smashCount = 2;
  inline bool has_smashcount() const;
  inline void clear_smashcount();
  static const int kSmashCountFieldNumber = 2;
  inline ::google::protobuf::uint64 smashcount() const;
  inline void set_smashcount(::google::protobuf::uint64 value);

  // optional uint64 smashCountToday = 3;
  inline bool has_smashcounttoday() const;
  inline void clear_smashcounttoday();
  static const int kSmashCountTodayFieldNumber = 3;
  inline ::google::protobuf::uint64 smashcounttoday() const;
  inline void set_smashcounttoday(::google::protobuf::uint64 value);

  // optional uint64 freeTimeDeadLine = 4;
  inline bool has_freetimedeadline() const;
  inline void clear_freetimedeadline();
  static const int kFreeTimeDeadLineFieldNumber = 4;
  inline ::google::protobuf::uint64 freetimedeadline() const;
  inline void set_freetimedeadline(::google::protobuf::uint64 value);

  // optional uint32 addRateCount = 5;
  inline bool has_addratecount() const;
  inline void clear_addratecount();
  static const int kAddRateCountFieldNumber = 5;
  inline ::google::protobuf::uint32 addratecount() const;
  inline void set_addratecount(::google::protobuf::uint32 value);

  // optional uint32 resetRewardTime = 6;
  inline bool has_resetrewardtime() const;
  inline void clear_resetrewardtime();
  static const int kResetRewardTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 resetrewardtime() const;
  inline void set_resetrewardtime(::google::protobuf::uint32 value);

  // repeated .proto_ff.FSmashEggDBData eggData = 7;
  inline int eggdata_size() const;
  inline void clear_eggdata();
  static const int kEggDataFieldNumber = 7;
  inline const ::proto_ff::FSmashEggDBData& eggdata(int index) const;
  inline ::proto_ff::FSmashEggDBData* mutable_eggdata(int index);
  inline ::proto_ff::FSmashEggDBData* add_eggdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FSmashEggDBData >&
      eggdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FSmashEggDBData >*
      mutable_eggdata();

  // repeated .proto_ff.ComPair rewardGetState = 8;
  inline int rewardgetstate_size() const;
  inline void clear_rewardgetstate();
  static const int kRewardGetStateFieldNumber = 8;
  inline const ::proto_ff::ComPair& rewardgetstate(int index) const;
  inline ::proto_ff::ComPair* mutable_rewardgetstate(int index);
  inline ::proto_ff::ComPair* add_rewardgetstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      rewardgetstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_rewardgetstate();

  // optional int32 daynum = 9;
  inline bool has_daynum() const;
  inline void clear_daynum();
  static const int kDaynumFieldNumber = 9;
  inline ::google::protobuf::int32 daynum() const;
  inline void set_daynum(::google::protobuf::int32 value);

  // optional int64 lastTime = 10;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 10;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalSmashEggDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_smashcount();
  inline void clear_has_smashcount();
  inline void set_has_smashcounttoday();
  inline void clear_has_smashcounttoday();
  inline void set_has_freetimedeadline();
  inline void clear_has_freetimedeadline();
  inline void set_has_addratecount();
  inline void clear_has_addratecount();
  inline void set_has_resetrewardtime();
  inline void clear_has_resetrewardtime();
  inline void set_has_daynum();
  inline void clear_has_daynum();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 smashcount_;
  ::google::protobuf::uint64 smashcounttoday_;
  ::google::protobuf::uint64 freetimedeadline_;
  ::google::protobuf::uint32 addratecount_;
  ::google::protobuf::uint32 resetrewardtime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FSmashEggDBData > eggdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > rewardgetstate_;
  ::google::protobuf::int64 lasttime_;
  ::google::protobuf::int32 daynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalSmashEggDBData* default_instance_;
};
// -------------------------------------------------------------------

class OperateReward : public ::google::protobuf::Message {
 public:
  OperateReward();
  virtual ~OperateReward();

  OperateReward(const OperateReward& from);

  inline OperateReward& operator=(const OperateReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateReward& default_instance();

  void Swap(OperateReward* other);

  // implements Message ----------------------------------------------

  OperateReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateReward& from);
  void MergeFrom(const OperateReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 key_id = 1;
  inline bool has_key_id() const;
  inline void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 key_id() const;
  inline void set_key_id(::google::protobuf::uint64 value);

  // optional bool isFinish = 2;
  inline bool has_isfinish() const;
  inline void clear_isfinish();
  static const int kIsFinishFieldNumber = 2;
  inline bool isfinish() const;
  inline void set_isfinish(bool value);

  // optional bool isReceiveReward = 3;
  inline bool has_isreceivereward() const;
  inline void clear_isreceivereward();
  static const int kIsReceiveRewardFieldNumber = 3;
  inline bool isreceivereward() const;
  inline void set_isreceivereward(bool value);

  // optional .proto_ff.ComPair rechargeDays = 4;
  inline bool has_rechargedays() const;
  inline void clear_rechargedays();
  static const int kRechargeDaysFieldNumber = 4;
  inline const ::proto_ff::ComPair& rechargedays() const;
  inline ::proto_ff::ComPair* mutable_rechargedays();
  inline ::proto_ff::ComPair* release_rechargedays();
  inline void set_allocated_rechargedays(::proto_ff::ComPair* rechargedays);

  // @@protoc_insertion_point(class_scope:proto_ff.OperateReward)
 private:
  inline void set_has_key_id();
  inline void clear_has_key_id();
  inline void set_has_isfinish();
  inline void clear_has_isfinish();
  inline void set_has_isreceivereward();
  inline void clear_has_isreceivereward();
  inline void set_has_rechargedays();
  inline void clear_has_rechargedays();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 key_id_;
  ::proto_ff::ComPair* rechargedays_;
  bool isfinish_;
  bool isreceivereward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateReward* default_instance_;
};
// -------------------------------------------------------------------

class OperateDailyRechargeData : public ::google::protobuf::Message {
 public:
  OperateDailyRechargeData();
  virtual ~OperateDailyRechargeData();

  OperateDailyRechargeData(const OperateDailyRechargeData& from);

  inline OperateDailyRechargeData& operator=(const OperateDailyRechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateDailyRechargeData& default_instance();

  void Swap(OperateDailyRechargeData* other);

  // implements Message ----------------------------------------------

  OperateDailyRechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateDailyRechargeData& from);
  void MergeFrom(const OperateDailyRechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 rmbToday = 2;
  inline bool has_rmbtoday() const;
  inline void clear_rmbtoday();
  static const int kRmbTodayFieldNumber = 2;
  inline ::google::protobuf::uint32 rmbtoday() const;
  inline void set_rmbtoday(::google::protobuf::uint32 value);

  // optional uint32 rmbTotal = 3;
  inline bool has_rmbtotal() const;
  inline void clear_rmbtotal();
  static const int kRmbTotalFieldNumber = 3;
  inline ::google::protobuf::uint32 rmbtotal() const;
  inline void set_rmbtotal(::google::protobuf::uint32 value);

  // optional uint32 lastRechargeDate = 4;
  inline bool has_lastrechargedate() const;
  inline void clear_lastrechargedate();
  static const int kLastRechargeDateFieldNumber = 4;
  inline ::google::protobuf::uint32 lastrechargedate() const;
  inline void set_lastrechargedate(::google::protobuf::uint32 value);

  // repeated .proto_ff.OperateReward list = 5;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 5;
  inline const ::proto_ff::OperateReward& list(int index) const;
  inline ::proto_ff::OperateReward* mutable_list(int index);
  inline ::proto_ff::OperateReward* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.OperateDailyRechargeData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rmbtoday();
  inline void clear_has_rmbtoday();
  inline void set_has_rmbtotal();
  inline void clear_has_rmbtotal();
  inline void set_has_lastrechargedate();
  inline void clear_has_lastrechargedate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 rmbtoday_;
  ::google::protobuf::uint32 rmbtotal_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward > list_;
  ::google::protobuf::uint32 lastrechargedate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateDailyRechargeData* default_instance_;
};
// -------------------------------------------------------------------

class OperateMoonCardData : public ::google::protobuf::Message {
 public:
  OperateMoonCardData();
  virtual ~OperateMoonCardData();

  OperateMoonCardData(const OperateMoonCardData& from);

  inline OperateMoonCardData& operator=(const OperateMoonCardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateMoonCardData& default_instance();

  void Swap(OperateMoonCardData* other);

  // implements Message ----------------------------------------------

  OperateMoonCardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateMoonCardData& from);
  void MergeFrom(const OperateMoonCardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 buyDate = 2;
  inline bool has_buydate() const;
  inline void clear_buydate();
  static const int kBuyDateFieldNumber = 2;
  inline ::google::protobuf::uint32 buydate() const;
  inline void set_buydate(::google::protobuf::uint32 value);

  // repeated .proto_ff.OperateReward list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::proto_ff::OperateReward& list(int index) const;
  inline ::proto_ff::OperateReward* mutable_list(int index);
  inline ::proto_ff::OperateReward* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.OperateMoonCardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buydate();
  inline void clear_has_buydate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward > list_;
  ::google::protobuf::uint32 buydate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateMoonCardData* default_instance_;
};
// -------------------------------------------------------------------

class OperateFundData : public ::google::protobuf::Message {
 public:
  OperateFundData();
  virtual ~OperateFundData();

  OperateFundData(const OperateFundData& from);

  inline OperateFundData& operator=(const OperateFundData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateFundData& default_instance();

  void Swap(OperateFundData* other);

  // implements Message ----------------------------------------------

  OperateFundData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateFundData& from);
  void MergeFrom(const OperateFundData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 buyDate = 3;
  inline bool has_buydate() const;
  inline void clear_buydate();
  static const int kBuyDateFieldNumber = 3;
  inline ::google::protobuf::uint32 buydate() const;
  inline void set_buydate(::google::protobuf::uint32 value);

  // repeated .proto_ff.OperateReward list = 4;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 4;
  inline const ::proto_ff::OperateReward& list(int index) const;
  inline ::proto_ff::OperateReward* mutable_list(int index);
  inline ::proto_ff::OperateReward* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.OperateFundData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_buydate();
  inline void clear_has_buydate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 buydate_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateFundData* default_instance_;
};
// -------------------------------------------------------------------

class OperateFirstRechargeType : public ::google::protobuf::Message {
 public:
  OperateFirstRechargeType();
  virtual ~OperateFirstRechargeType();

  OperateFirstRechargeType(const OperateFirstRechargeType& from);

  inline OperateFirstRechargeType& operator=(const OperateFirstRechargeType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateFirstRechargeType& default_instance();

  void Swap(OperateFirstRechargeType* other);

  // implements Message ----------------------------------------------

  OperateFirstRechargeType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateFirstRechargeType& from);
  void MergeFrom(const OperateFirstRechargeType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 updateTime = 2;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint64 value);

  // optional int32 loginDay = 3;
  inline bool has_loginday() const;
  inline void clear_loginday();
  static const int kLoginDayFieldNumber = 3;
  inline ::google::protobuf::int32 loginday() const;
  inline void set_loginday(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperateFirstRechargeType)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();
  inline void set_has_loginday();
  inline void clear_has_loginday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatetime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 loginday_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateFirstRechargeType* default_instance_;
};
// -------------------------------------------------------------------

class OperateFirstRechargeData : public ::google::protobuf::Message {
 public:
  OperateFirstRechargeData();
  virtual ~OperateFirstRechargeData();

  OperateFirstRechargeData(const OperateFirstRechargeData& from);

  inline OperateFirstRechargeData& operator=(const OperateFirstRechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateFirstRechargeData& default_instance();

  void Swap(OperateFirstRechargeData* other);

  // implements Message ----------------------------------------------

  OperateFirstRechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateFirstRechargeData& from);
  void MergeFrom(const OperateFirstRechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.OperateReward list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::proto_ff::OperateReward& list(int index) const;
  inline ::proto_ff::OperateReward* mutable_list(int index);
  inline ::proto_ff::OperateReward* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
      mutable_list();

  // repeated .proto_ff.OperateFirstRechargeType firstType = 3;
  inline int firsttype_size() const;
  inline void clear_firsttype();
  static const int kFirstTypeFieldNumber = 3;
  inline const ::proto_ff::OperateFirstRechargeType& firsttype(int index) const;
  inline ::proto_ff::OperateFirstRechargeType* mutable_firsttype(int index);
  inline ::proto_ff::OperateFirstRechargeType* add_firsttype();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateFirstRechargeType >&
      firsttype() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateFirstRechargeType >*
      mutable_firsttype();

  // optional int32 rmb = 4;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 4;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperateFirstRechargeData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rmb();
  inline void clear_has_rmb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward > list_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateFirstRechargeType > firsttype_;
  ::google::protobuf::int32 rmb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateFirstRechargeData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareVipGiftDBData : public ::google::protobuf::Message {
 public:
  WelfareVipGiftDBData();
  virtual ~WelfareVipGiftDBData();

  WelfareVipGiftDBData(const WelfareVipGiftDBData& from);

  inline WelfareVipGiftDBData& operator=(const WelfareVipGiftDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareVipGiftDBData& default_instance();

  void Swap(WelfareVipGiftDBData* other);

  // implements Message ----------------------------------------------

  WelfareVipGiftDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareVipGiftDBData& from);
  void MergeFrom(const WelfareVipGiftDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 2;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 2;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareVipGiftDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WelfareVipGiftDBData* default_instance_;
};
// -------------------------------------------------------------------

class HoroscopeJackpotDBData : public ::google::protobuf::Message {
 public:
  HoroscopeJackpotDBData();
  virtual ~HoroscopeJackpotDBData();

  HoroscopeJackpotDBData(const HoroscopeJackpotDBData& from);

  inline HoroscopeJackpotDBData& operator=(const HoroscopeJackpotDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HoroscopeJackpotDBData& default_instance();

  void Swap(HoroscopeJackpotDBData* other);

  // implements Message ----------------------------------------------

  HoroscopeJackpotDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HoroscopeJackpotDBData& from);
  void MergeFrom(const HoroscopeJackpotDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional bool bOpen = 2;
  inline bool has_bopen() const;
  inline void clear_bopen();
  static const int kBOpenFieldNumber = 2;
  inline bool bopen() const;
  inline void set_bopen(bool value);

  // optional uint32 nNeedLevel = 3;
  inline bool has_nneedlevel() const;
  inline void clear_nneedlevel();
  static const int kNNeedLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 nneedlevel() const;
  inline void set_nneedlevel(::google::protobuf::uint32 value);

  // optional uint32 luckyValue = 4;
  inline bool has_luckyvalue() const;
  inline void clear_luckyvalue();
  static const int kLuckyValueFieldNumber = 4;
  inline ::google::protobuf::uint32 luckyvalue() const;
  inline void set_luckyvalue(::google::protobuf::uint32 value);

  // optional uint32 welfareValue = 5;
  inline bool has_welfarevalue() const;
  inline void clear_welfarevalue();
  static const int kWelfareValueFieldNumber = 5;
  inline ::google::protobuf::uint32 welfarevalue() const;
  inline void set_welfarevalue(::google::protobuf::uint32 value);

  // optional uint32 getLuckyCount = 6;
  inline bool has_getluckycount() const;
  inline void clear_getluckycount();
  static const int kGetLuckyCountFieldNumber = 6;
  inline ::google::protobuf::uint32 getluckycount() const;
  inline void set_getluckycount(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair welfareGetState = 7;
  inline int welfaregetstate_size() const;
  inline void clear_welfaregetstate();
  static const int kWelfareGetStateFieldNumber = 7;
  inline const ::proto_ff::ComPair& welfaregetstate(int index) const;
  inline ::proto_ff::ComPair* mutable_welfaregetstate(int index);
  inline ::proto_ff::ComPair* add_welfaregetstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      welfaregetstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_welfaregetstate();

  // optional int64 lastTime = 8;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 8;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // optional int32 curNum = 9;
  inline bool has_curnum() const;
  inline void clear_curnum();
  static const int kCurNumFieldNumber = 9;
  inline ::google::protobuf::int32 curnum() const;
  inline void set_curnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HoroscopeJackpotDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bopen();
  inline void clear_has_bopen();
  inline void set_has_nneedlevel();
  inline void clear_has_nneedlevel();
  inline void set_has_luckyvalue();
  inline void clear_has_luckyvalue();
  inline void set_has_welfarevalue();
  inline void clear_has_welfarevalue();
  inline void set_has_getluckycount();
  inline void clear_has_getluckycount();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_curnum();
  inline void clear_has_curnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  bool bopen_;
  ::google::protobuf::uint32 nneedlevel_;
  ::google::protobuf::uint32 luckyvalue_;
  ::google::protobuf::uint32 welfarevalue_;
  ::google::protobuf::uint32 getluckycount_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > welfaregetstate_;
  ::google::protobuf::int64 lasttime_;
  ::google::protobuf::int32 curnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static HoroscopeJackpotDBData* default_instance_;
};
// -------------------------------------------------------------------

class HoroscopeActiveDBData : public ::google::protobuf::Message {
 public:
  HoroscopeActiveDBData();
  virtual ~HoroscopeActiveDBData();

  HoroscopeActiveDBData(const HoroscopeActiveDBData& from);

  inline HoroscopeActiveDBData& operator=(const HoroscopeActiveDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HoroscopeActiveDBData& default_instance();

  void Swap(HoroscopeActiveDBData* other);

  // implements Message ----------------------------------------------

  HoroscopeActiveDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HoroscopeActiveDBData& from);
  void MergeFrom(const HoroscopeActiveDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 drawCount = 2;
  inline bool has_drawcount() const;
  inline void clear_drawcount();
  static const int kDrawCountFieldNumber = 2;
  inline ::google::protobuf::uint64 drawcount() const;
  inline void set_drawcount(::google::protobuf::uint64 value);

  // optional uint32 freeOpId = 3;
  inline bool has_freeopid() const;
  inline void clear_freeopid();
  static const int kFreeOpIdFieldNumber = 3;
  inline ::google::protobuf::uint32 freeopid() const;
  inline void set_freeopid(::google::protobuf::uint32 value);

  // optional uint64 lastFreeGetTime = 4;
  inline bool has_lastfreegettime() const;
  inline void clear_lastfreegettime();
  static const int kLastFreeGetTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 lastfreegettime() const;
  inline void set_lastfreegettime(::google::protobuf::uint64 value);

  // repeated .proto_ff.HoroscopeJackpotDBData jackpotList = 5;
  inline int jackpotlist_size() const;
  inline void clear_jackpotlist();
  static const int kJackpotListFieldNumber = 5;
  inline const ::proto_ff::HoroscopeJackpotDBData& jackpotlist(int index) const;
  inline ::proto_ff::HoroscopeJackpotDBData* mutable_jackpotlist(int index);
  inline ::proto_ff::HoroscopeJackpotDBData* add_jackpotlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeJackpotDBData >&
      jackpotlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeJackpotDBData >*
      mutable_jackpotlist();

  // @@protoc_insertion_point(class_scope:proto_ff.HoroscopeActiveDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_drawcount();
  inline void clear_has_drawcount();
  inline void set_has_freeopid();
  inline void clear_has_freeopid();
  inline void set_has_lastfreegettime();
  inline void clear_has_lastfreegettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 drawcount_;
  ::google::protobuf::uint64 lastfreegettime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeJackpotDBData > jackpotlist_;
  ::google::protobuf::uint32 freeopid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static HoroscopeActiveDBData* default_instance_;
};
// -------------------------------------------------------------------

class WelfareOnlineGiftDBData : public ::google::protobuf::Message {
 public:
  WelfareOnlineGiftDBData();
  virtual ~WelfareOnlineGiftDBData();

  WelfareOnlineGiftDBData(const WelfareOnlineGiftDBData& from);

  inline WelfareOnlineGiftDBData& operator=(const WelfareOnlineGiftDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareOnlineGiftDBData& default_instance();

  void Swap(WelfareOnlineGiftDBData* other);

  // implements Message ----------------------------------------------

  WelfareOnlineGiftDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareOnlineGiftDBData& from);
  void MergeFrom(const WelfareOnlineGiftDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 lastRefreshTime = 2;
  inline bool has_lastrefreshtime() const;
  inline void clear_lastrefreshtime();
  static const int kLastRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastrefreshtime() const;
  inline void set_lastrefreshtime(::google::protobuf::uint64 value);

  // optional uint64 OnlineTime = 3;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlineTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 4;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 4;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.WelfareOnlineGiftDBData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lastrefreshtime();
  inline void clear_has_lastrefreshtime();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 lastrefreshtime_;
  ::google::protobuf::uint64 onlinetime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static WelfareOnlineGiftDBData* default_instance_;
};
// -------------------------------------------------------------------

class OperationTurntableTaskDBData : public ::google::protobuf::Message {
 public:
  OperationTurntableTaskDBData();
  virtual ~OperationTurntableTaskDBData();

  OperationTurntableTaskDBData(const OperationTurntableTaskDBData& from);

  inline OperationTurntableTaskDBData& operator=(const OperationTurntableTaskDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationTurntableTaskDBData& default_instance();

  void Swap(OperationTurntableTaskDBData* other);

  // implements Message ----------------------------------------------

  OperationTurntableTaskDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationTurntableTaskDBData& from);
  void MergeFrom(const OperationTurntableTaskDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint64 taskid() const;
  inline void set_taskid(::google::protobuf::uint64 value);

  // optional uint64 progress = 2;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint64 progress() const;
  inline void set_progress(::google::protobuf::uint64 value);

  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperationTurntableTaskDBData)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 taskid_;
  ::google::protobuf::uint64 progress_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperationTurntableTaskDBData* default_instance_;
};
// -------------------------------------------------------------------

class OperationTurntableDBData : public ::google::protobuf::Message {
 public:
  OperationTurntableDBData();
  virtual ~OperationTurntableDBData();

  OperationTurntableDBData(const OperationTurntableDBData& from);

  inline OperationTurntableDBData& operator=(const OperationTurntableDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationTurntableDBData& default_instance();

  void Swap(OperationTurntableDBData* other);

  // implements Message ----------------------------------------------

  OperationTurntableDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationTurntableDBData& from);
  void MergeFrom(const OperationTurntableDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 lastRefreshTime = 2;
  inline bool has_lastrefreshtime() const;
  inline void clear_lastrefreshtime();
  static const int kLastRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastrefreshtime() const;
  inline void set_lastrefreshtime(::google::protobuf::uint64 value);

  // repeated .proto_ff.OperationTurntableTaskDBData tasklist = 3;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTasklistFieldNumber = 3;
  inline const ::proto_ff::OperationTurntableTaskDBData& tasklist(int index) const;
  inline ::proto_ff::OperationTurntableTaskDBData* mutable_tasklist(int index);
  inline ::proto_ff::OperationTurntableTaskDBData* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableTaskDBData >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableTaskDBData >*
      mutable_tasklist();

  // @@protoc_insertion_point(class_scope:proto_ff.OperationTurntableDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_lastrefreshtime();
  inline void clear_has_lastrefreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 lastrefreshtime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableTaskDBData > tasklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperationTurntableDBData* default_instance_;
};
// -------------------------------------------------------------------

class OperationTutoraskDBData : public ::google::protobuf::Message {
 public:
  OperationTutoraskDBData();
  virtual ~OperationTutoraskDBData();

  OperationTutoraskDBData(const OperationTutoraskDBData& from);

  inline OperationTutoraskDBData& operator=(const OperationTutoraskDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationTutoraskDBData& default_instance();

  void Swap(OperationTutoraskDBData* other);

  // implements Message ----------------------------------------------

  OperationTutoraskDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationTutoraskDBData& from);
  void MergeFrom(const OperationTutoraskDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint64 taskid() const;
  inline void set_taskid(::google::protobuf::uint64 value);

  // optional uint64 progress = 2;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint64 progress() const;
  inline void set_progress(::google::protobuf::uint64 value);

  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperationTutoraskDBData)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 taskid_;
  ::google::protobuf::uint64 progress_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperationTutoraskDBData* default_instance_;
};
// -------------------------------------------------------------------

class OperationTutorDBData : public ::google::protobuf::Message {
 public:
  OperationTutorDBData();
  virtual ~OperationTutorDBData();

  OperationTutorDBData(const OperationTutorDBData& from);

  inline OperationTutorDBData& operator=(const OperationTutorDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationTutorDBData& default_instance();

  void Swap(OperationTutorDBData* other);

  // implements Message ----------------------------------------------

  OperationTutorDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationTutorDBData& from);
  void MergeFrom(const OperationTutorDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint64 lastRefreshTime = 2;
  inline bool has_lastrefreshtime() const;
  inline void clear_lastrefreshtime();
  static const int kLastRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastrefreshtime() const;
  inline void set_lastrefreshtime(::google::protobuf::uint64 value);

  // optional uint64 diligentValue = 3;
  inline bool has_diligentvalue() const;
  inline void clear_diligentvalue();
  static const int kDiligentValueFieldNumber = 3;
  inline ::google::protobuf::uint64 diligentvalue() const;
  inline void set_diligentvalue(::google::protobuf::uint64 value);

  // repeated .proto_ff.OperationTutoraskDBData tasklist = 4;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTasklistFieldNumber = 4;
  inline const ::proto_ff::OperationTutoraskDBData& tasklist(int index) const;
  inline ::proto_ff::OperationTutoraskDBData* mutable_tasklist(int index);
  inline ::proto_ff::OperationTutoraskDBData* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutoraskDBData >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutoraskDBData >*
      mutable_tasklist();

  // @@protoc_insertion_point(class_scope:proto_ff.OperationTutorDBData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_lastrefreshtime();
  inline void clear_has_lastrefreshtime();
  inline void set_has_diligentvalue();
  inline void clear_has_diligentvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 lastrefreshtime_;
  ::google::protobuf::uint64 diligentvalue_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutoraskDBData > tasklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperationTutorDBData* default_instance_;
};
// -------------------------------------------------------------------

class limitInfo : public ::google::protobuf::Message {
 public:
  limitInfo();
  virtual ~limitInfo();

  limitInfo(const limitInfo& from);

  inline limitInfo& operator=(const limitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const limitInfo& default_instance();

  void Swap(limitInfo* other);

  // implements Message ----------------------------------------------

  limitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const limitInfo& from);
  void MergeFrom(const limitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::ComPair64& infos(int index) const;
  inline ::proto_ff::ComPair64* mutable_infos(int index);
  inline ::proto_ff::ComPair64* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.limitInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static limitInfo* default_instance_;
};
// -------------------------------------------------------------------

class FestivalWorldBossData : public ::google::protobuf::Message {
 public:
  FestivalWorldBossData();
  virtual ~FestivalWorldBossData();

  FestivalWorldBossData(const FestivalWorldBossData& from);

  inline FestivalWorldBossData& operator=(const FestivalWorldBossData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FestivalWorldBossData& default_instance();

  void Swap(FestivalWorldBossData* other);

  // implements Message ----------------------------------------------

  FestivalWorldBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FestivalWorldBossData& from);
  void MergeFrom(const FestivalWorldBossData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 2;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 2;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // @@protoc_insertion_point(class_scope:proto_ff.FestivalWorldBossData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FestivalWorldBossData* default_instance_;
};
// -------------------------------------------------------------------

class OperateCommonEntryData : public ::google::protobuf::Message {
 public:
  OperateCommonEntryData();
  virtual ~OperateCommonEntryData();

  OperateCommonEntryData(const OperateCommonEntryData& from);

  inline OperateCommonEntryData& operator=(const OperateCommonEntryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateCommonEntryData& default_instance();

  void Swap(OperateCommonEntryData* other);

  // implements Message ----------------------------------------------

  OperateCommonEntryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateCommonEntryData& from);
  void MergeFrom(const OperateCommonEntryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int64 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperateCommonEntryData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateCommonEntryData* default_instance_;
};
// -------------------------------------------------------------------

class OperateWingGiftData : public ::google::protobuf::Message {
 public:
  OperateWingGiftData();
  virtual ~OperateWingGiftData();

  OperateWingGiftData(const OperateWingGiftData& from);

  inline OperateWingGiftData& operator=(const OperateWingGiftData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateWingGiftData& default_instance();

  void Swap(OperateWingGiftData* other);

  // implements Message ----------------------------------------------

  OperateWingGiftData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateWingGiftData& from);
  void MergeFrom(const OperateWingGiftData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.OperateCommonEntryData entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::OperateCommonEntryData& entrys(int index) const;
  inline ::proto_ff::OperateCommonEntryData* mutable_entrys(int index);
  inline ::proto_ff::OperateCommonEntryData* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >*
      mutable_entrys();

  // optional int64 refreshTime = 3;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::int64 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::int64 value);

  // optional int32 loginDay = 4;
  inline bool has_loginday() const;
  inline void clear_loginday();
  static const int kLoginDayFieldNumber = 4;
  inline ::google::protobuf::int32 loginday() const;
  inline void set_loginday(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperateWingGiftData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();
  inline void set_has_loginday();
  inline void clear_has_loginday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData > entrys_;
  ::google::protobuf::int64 refreshtime_;
  ::google::protobuf::int32 loginday_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateWingGiftData* default_instance_;
};
// -------------------------------------------------------------------

class OperateRechargeGiftData : public ::google::protobuf::Message {
 public:
  OperateRechargeGiftData();
  virtual ~OperateRechargeGiftData();

  OperateRechargeGiftData(const OperateRechargeGiftData& from);

  inline OperateRechargeGiftData& operator=(const OperateRechargeGiftData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateRechargeGiftData& default_instance();

  void Swap(OperateRechargeGiftData* other);

  // implements Message ----------------------------------------------

  OperateRechargeGiftData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateRechargeGiftData& from);
  void MergeFrom(const OperateRechargeGiftData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // repeated .proto_ff.OperateCommonEntryData entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::OperateCommonEntryData& entrys(int index) const;
  inline ::proto_ff::OperateCommonEntryData* mutable_entrys(int index);
  inline ::proto_ff::OperateCommonEntryData* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >*
      mutable_entrys();

  // optional int32 rechargeRmb = 3;
  inline bool has_rechargermb() const;
  inline void clear_rechargermb();
  static const int kRechargeRmbFieldNumber = 3;
  inline ::google::protobuf::int32 rechargermb() const;
  inline void set_rechargermb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OperateRechargeGiftData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_rechargermb();
  inline void clear_has_rechargermb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData > entrys_;
  ::google::protobuf::int32 rechargermb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OperateRechargeGiftData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOperateData : public ::google::protobuf::Message {
 public:
  CharacterDBOperateData();
  virtual ~CharacterDBOperateData();

  CharacterDBOperateData(const CharacterDBOperateData& from);

  inline CharacterDBOperateData& operator=(const CharacterDBOperateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOperateData& default_instance();

  void Swap(CharacterDBOperateData* other);

  // implements Message ----------------------------------------------

  CharacterDBOperateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOperateData& from);
  void MergeFrom(const CharacterDBOperateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.WelfareDailySignInDBData signInData = 1;
  inline int signindata_size() const;
  inline void clear_signindata();
  static const int kSignInDataFieldNumber = 1;
  inline const ::proto_ff::WelfareDailySignInDBData& signindata(int index) const;
  inline ::proto_ff::WelfareDailySignInDBData* mutable_signindata(int index);
  inline ::proto_ff::WelfareDailySignInDBData* add_signindata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareDailySignInDBData >&
      signindata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareDailySignInDBData >*
      mutable_signindata();

  // repeated .proto_ff.WelfareLoginGiftDBData loginGiftData = 2;
  inline int logingiftdata_size() const;
  inline void clear_logingiftdata();
  static const int kLoginGiftDataFieldNumber = 2;
  inline const ::proto_ff::WelfareLoginGiftDBData& logingiftdata(int index) const;
  inline ::proto_ff::WelfareLoginGiftDBData* mutable_logingiftdata(int index);
  inline ::proto_ff::WelfareLoginGiftDBData* add_logingiftdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLoginGiftDBData >&
      logingiftdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLoginGiftDBData >*
      mutable_logingiftdata();

  // repeated .proto_ff.WelfareLevelGiftDBData levelGiftData = 3;
  inline int levelgiftdata_size() const;
  inline void clear_levelgiftdata();
  static const int kLevelGiftDataFieldNumber = 3;
  inline const ::proto_ff::WelfareLevelGiftDBData& levelgiftdata(int index) const;
  inline ::proto_ff::WelfareLevelGiftDBData* mutable_levelgiftdata(int index);
  inline ::proto_ff::WelfareLevelGiftDBData* add_levelgiftdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLevelGiftDBData >&
      levelgiftdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLevelGiftDBData >*
      mutable_levelgiftdata();

  // repeated .proto_ff.LimitShopData shopData = 4;
  inline int shopdata_size() const;
  inline void clear_shopdata();
  static const int kShopDataFieldNumber = 4;
  inline const ::proto_ff::LimitShopData& shopdata(int index) const;
  inline ::proto_ff::LimitShopData* mutable_shopdata(int index);
  inline ::proto_ff::LimitShopData* add_shopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopData >&
      shopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopData >*
      mutable_shopdata();

  // repeated .proto_ff.LimitTaskData taskData = 5;
  inline int taskdata_size() const;
  inline void clear_taskdata();
  static const int kTaskDataFieldNumber = 5;
  inline const ::proto_ff::LimitTaskData& taskdata(int index) const;
  inline ::proto_ff::LimitTaskData* mutable_taskdata(int index);
  inline ::proto_ff::LimitTaskData* add_taskdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskData >&
      taskdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskData >*
      mutable_taskdata();

  // repeated .proto_ff.WishDBData wishData = 6;
  inline int wishdata_size() const;
  inline void clear_wishdata();
  static const int kWishDataFieldNumber = 6;
  inline const ::proto_ff::WishDBData& wishdata(int index) const;
  inline ::proto_ff::WishDBData* mutable_wishdata(int index);
  inline ::proto_ff::WishDBData* add_wishdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBData >&
      wishdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBData >*
      mutable_wishdata();

  // optional .proto_ff.OperateDailyRechargeData dailyRecharge = 7;
  inline bool has_dailyrecharge() const;
  inline void clear_dailyrecharge();
  static const int kDailyRechargeFieldNumber = 7;
  inline const ::proto_ff::OperateDailyRechargeData& dailyrecharge() const;
  inline ::proto_ff::OperateDailyRechargeData* mutable_dailyrecharge();
  inline ::proto_ff::OperateDailyRechargeData* release_dailyrecharge();
  inline void set_allocated_dailyrecharge(::proto_ff::OperateDailyRechargeData* dailyrecharge);

  // optional .proto_ff.OperateFirstRechargeData firstRecharge = 8;
  inline bool has_firstrecharge() const;
  inline void clear_firstrecharge();
  static const int kFirstRechargeFieldNumber = 8;
  inline const ::proto_ff::OperateFirstRechargeData& firstrecharge() const;
  inline ::proto_ff::OperateFirstRechargeData* mutable_firstrecharge();
  inline ::proto_ff::OperateFirstRechargeData* release_firstrecharge();
  inline void set_allocated_firstrecharge(::proto_ff::OperateFirstRechargeData* firstrecharge);

  // optional .proto_ff.OperateMoonCardData moonCard = 9;
  inline bool has_mooncard() const;
  inline void clear_mooncard();
  static const int kMoonCardFieldNumber = 9;
  inline const ::proto_ff::OperateMoonCardData& mooncard() const;
  inline ::proto_ff::OperateMoonCardData* mutable_mooncard();
  inline ::proto_ff::OperateMoonCardData* release_mooncard();
  inline void set_allocated_mooncard(::proto_ff::OperateMoonCardData* mooncard);

  // optional .proto_ff.OperateFundData noviceFund = 10;
  inline bool has_novicefund() const;
  inline void clear_novicefund();
  static const int kNoviceFundFieldNumber = 10;
  inline const ::proto_ff::OperateFundData& novicefund() const;
  inline ::proto_ff::OperateFundData* mutable_novicefund();
  inline ::proto_ff::OperateFundData* release_novicefund();
  inline void set_allocated_novicefund(::proto_ff::OperateFundData* novicefund);

  // optional .proto_ff.OperateFundData growthFund = 11;
  inline bool has_growthfund() const;
  inline void clear_growthfund();
  static const int kGrowthFundFieldNumber = 11;
  inline const ::proto_ff::OperateFundData& growthfund() const;
  inline ::proto_ff::OperateFundData* mutable_growthfund();
  inline ::proto_ff::OperateFundData* release_growthfund();
  inline void set_allocated_growthfund(::proto_ff::OperateFundData* growthfund);

  // optional .proto_ff.OperateFundData dreamFund = 12;
  inline bool has_dreamfund() const;
  inline void clear_dreamfund();
  static const int kDreamFundFieldNumber = 12;
  inline const ::proto_ff::OperateFundData& dreamfund() const;
  inline ::proto_ff::OperateFundData* mutable_dreamfund();
  inline ::proto_ff::OperateFundData* release_dreamfund();
  inline void set_allocated_dreamfund(::proto_ff::OperateFundData* dreamfund);

  // optional .proto_ff.OperateFundData noviceFundHigh = 13;
  inline bool has_novicefundhigh() const;
  inline void clear_novicefundhigh();
  static const int kNoviceFundHighFieldNumber = 13;
  inline const ::proto_ff::OperateFundData& novicefundhigh() const;
  inline ::proto_ff::OperateFundData* mutable_novicefundhigh();
  inline ::proto_ff::OperateFundData* release_novicefundhigh();
  inline void set_allocated_novicefundhigh(::proto_ff::OperateFundData* novicefundhigh);

  // optional .proto_ff.OperateFundData growthFundHigh = 14;
  inline bool has_growthfundhigh() const;
  inline void clear_growthfundhigh();
  static const int kGrowthFundHighFieldNumber = 14;
  inline const ::proto_ff::OperateFundData& growthfundhigh() const;
  inline ::proto_ff::OperateFundData* mutable_growthfundhigh();
  inline ::proto_ff::OperateFundData* release_growthfundhigh();
  inline void set_allocated_growthfundhigh(::proto_ff::OperateFundData* growthfundhigh);

  // optional .proto_ff.OperateFundData dreamFundHigh = 15;
  inline bool has_dreamfundhigh() const;
  inline void clear_dreamfundhigh();
  static const int kDreamFundHighFieldNumber = 15;
  inline const ::proto_ff::OperateFundData& dreamfundhigh() const;
  inline ::proto_ff::OperateFundData* mutable_dreamfundhigh();
  inline ::proto_ff::OperateFundData* release_dreamfundhigh();
  inline void set_allocated_dreamfundhigh(::proto_ff::OperateFundData* dreamfundhigh);

  // repeated .proto_ff.FestivalInvestDBData fInvestDBData = 16;
  inline int finvestdbdata_size() const;
  inline void clear_finvestdbdata();
  static const int kFInvestDBDataFieldNumber = 16;
  inline const ::proto_ff::FestivalInvestDBData& finvestdbdata(int index) const;
  inline ::proto_ff::FestivalInvestDBData* mutable_finvestdbdata(int index);
  inline ::proto_ff::FestivalInvestDBData* add_finvestdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalInvestDBData >&
      finvestdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalInvestDBData >*
      mutable_finvestdbdata();

  // repeated .proto_ff.FestivalExchangeDBData fExchangeDBData = 17;
  inline int fexchangedbdata_size() const;
  inline void clear_fexchangedbdata();
  static const int kFExchangeDBDataFieldNumber = 17;
  inline const ::proto_ff::FestivalExchangeDBData& fexchangedbdata(int index) const;
  inline ::proto_ff::FestivalExchangeDBData* mutable_fexchangedbdata(int index);
  inline ::proto_ff::FestivalExchangeDBData* add_fexchangedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalExchangeDBData >&
      fexchangedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalExchangeDBData >*
      mutable_fexchangedbdata();

  // repeated .proto_ff.FestivalLoginDBData fLoginDBData = 18;
  inline int flogindbdata_size() const;
  inline void clear_flogindbdata();
  static const int kFLoginDBDataFieldNumber = 18;
  inline const ::proto_ff::FestivalLoginDBData& flogindbdata(int index) const;
  inline ::proto_ff::FestivalLoginDBData* mutable_flogindbdata(int index);
  inline ::proto_ff::FestivalLoginDBData* add_flogindbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalLoginDBData >&
      flogindbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalLoginDBData >*
      mutable_flogindbdata();

  // repeated .proto_ff.FestivalTotalRechargeDBData fRechargeDBData = 19;
  inline int frechargedbdata_size() const;
  inline void clear_frechargedbdata();
  static const int kFRechargeDBDataFieldNumber = 19;
  inline const ::proto_ff::FestivalTotalRechargeDBData& frechargedbdata(int index) const;
  inline ::proto_ff::FestivalTotalRechargeDBData* mutable_frechargedbdata(int index);
  inline ::proto_ff::FestivalTotalRechargeDBData* add_frechargedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalTotalRechargeDBData >&
      frechargedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalTotalRechargeDBData >*
      mutable_frechargedbdata();

  // repeated .proto_ff.FestivalConsumptionDBData fConsumptionDBData = 20;
  inline int fconsumptiondbdata_size() const;
  inline void clear_fconsumptiondbdata();
  static const int kFConsumptionDBDataFieldNumber = 20;
  inline const ::proto_ff::FestivalConsumptionDBData& fconsumptiondbdata(int index) const;
  inline ::proto_ff::FestivalConsumptionDBData* mutable_fconsumptiondbdata(int index);
  inline ::proto_ff::FestivalConsumptionDBData* add_fconsumptiondbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalConsumptionDBData >&
      fconsumptiondbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalConsumptionDBData >*
      mutable_fconsumptiondbdata();

  // repeated .proto_ff.FestivalFirstRechargeDBData fFirstRechargeDBData = 21;
  inline int ffirstrechargedbdata_size() const;
  inline void clear_ffirstrechargedbdata();
  static const int kFFirstRechargeDBDataFieldNumber = 21;
  inline const ::proto_ff::FestivalFirstRechargeDBData& ffirstrechargedbdata(int index) const;
  inline ::proto_ff::FestivalFirstRechargeDBData* mutable_ffirstrechargedbdata(int index);
  inline ::proto_ff::FestivalFirstRechargeDBData* add_ffirstrechargedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalFirstRechargeDBData >&
      ffirstrechargedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalFirstRechargeDBData >*
      mutable_ffirstrechargedbdata();

  // repeated .proto_ff.FestivalYanHuaDBData fYanHuaDBData = 22;
  inline int fyanhuadbdata_size() const;
  inline void clear_fyanhuadbdata();
  static const int kFYanHuaDBDataFieldNumber = 22;
  inline const ::proto_ff::FestivalYanHuaDBData& fyanhuadbdata(int index) const;
  inline ::proto_ff::FestivalYanHuaDBData* mutable_fyanhuadbdata(int index);
  inline ::proto_ff::FestivalYanHuaDBData* add_fyanhuadbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalYanHuaDBData >&
      fyanhuadbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalYanHuaDBData >*
      mutable_fyanhuadbdata();

  // repeated .proto_ff.FestivalShopDBData fShopDBData = 23;
  inline int fshopdbdata_size() const;
  inline void clear_fshopdbdata();
  static const int kFShopDBDataFieldNumber = 23;
  inline const ::proto_ff::FestivalShopDBData& fshopdbdata(int index) const;
  inline ::proto_ff::FestivalShopDBData* mutable_fshopdbdata(int index);
  inline ::proto_ff::FestivalShopDBData* add_fshopdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalShopDBData >&
      fshopdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalShopDBData >*
      mutable_fshopdbdata();

  // repeated .proto_ff.LimitGiftActiveDBData limitGiftDBData = 24;
  inline int limitgiftdbdata_size() const;
  inline void clear_limitgiftdbdata();
  static const int kLimitGiftDBDataFieldNumber = 24;
  inline const ::proto_ff::LimitGiftActiveDBData& limitgiftdbdata(int index) const;
  inline ::proto_ff::LimitGiftActiveDBData* mutable_limitgiftdbdata(int index);
  inline ::proto_ff::LimitGiftActiveDBData* add_limitgiftdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftActiveDBData >&
      limitgiftdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftActiveDBData >*
      mutable_limitgiftdbdata();

  // repeated .proto_ff.HoroscopeActiveDBData horoscopeDBData = 25;
  inline int horoscopedbdata_size() const;
  inline void clear_horoscopedbdata();
  static const int kHoroscopeDBDataFieldNumber = 25;
  inline const ::proto_ff::HoroscopeActiveDBData& horoscopedbdata(int index) const;
  inline ::proto_ff::HoroscopeActiveDBData* mutable_horoscopedbdata(int index);
  inline ::proto_ff::HoroscopeActiveDBData* add_horoscopedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeActiveDBData >&
      horoscopedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeActiveDBData >*
      mutable_horoscopedbdata();

  // repeated .proto_ff.FRechargeActiveDBData festivalRechargeDBData = 26;
  inline int festivalrechargedbdata_size() const;
  inline void clear_festivalrechargedbdata();
  static const int kFestivalRechargeDBDataFieldNumber = 26;
  inline const ::proto_ff::FRechargeActiveDBData& festivalrechargedbdata(int index) const;
  inline ::proto_ff::FRechargeActiveDBData* mutable_festivalrechargedbdata(int index);
  inline ::proto_ff::FRechargeActiveDBData* add_festivalrechargedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeActiveDBData >&
      festivalrechargedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeActiveDBData >*
      mutable_festivalrechargedbdata();

  // repeated .proto_ff.FestivalSmashEggDBData fSmashEggDBData = 27;
  inline int fsmasheggdbdata_size() const;
  inline void clear_fsmasheggdbdata();
  static const int kFSmashEggDBDataFieldNumber = 27;
  inline const ::proto_ff::FestivalSmashEggDBData& fsmasheggdbdata(int index) const;
  inline ::proto_ff::FestivalSmashEggDBData* mutable_fsmasheggdbdata(int index);
  inline ::proto_ff::FestivalSmashEggDBData* add_fsmasheggdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSmashEggDBData >&
      fsmasheggdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSmashEggDBData >*
      mutable_fsmasheggdbdata();

  // repeated .proto_ff.ComPair64 redPointClickData = 28;
  inline int redpointclickdata_size() const;
  inline void clear_redpointclickdata();
  static const int kRedPointClickDataFieldNumber = 28;
  inline const ::proto_ff::ComPair64& redpointclickdata(int index) const;
  inline ::proto_ff::ComPair64* mutable_redpointclickdata(int index);
  inline ::proto_ff::ComPair64* add_redpointclickdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      redpointclickdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_redpointclickdata();

  // repeated .proto_ff.WelfareVipGiftDBData wVipDBData = 29;
  inline int wvipdbdata_size() const;
  inline void clear_wvipdbdata();
  static const int kWVipDBDataFieldNumber = 29;
  inline const ::proto_ff::WelfareVipGiftDBData& wvipdbdata(int index) const;
  inline ::proto_ff::WelfareVipGiftDBData* mutable_wvipdbdata(int index);
  inline ::proto_ff::WelfareVipGiftDBData* add_wvipdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareVipGiftDBData >&
      wvipdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareVipGiftDBData >*
      mutable_wvipdbdata();

  // repeated .proto_ff.WelfareOnlineGiftDBData wOnlineDBData = 30;
  inline int wonlinedbdata_size() const;
  inline void clear_wonlinedbdata();
  static const int kWOnlineDBDataFieldNumber = 30;
  inline const ::proto_ff::WelfareOnlineGiftDBData& wonlinedbdata(int index) const;
  inline ::proto_ff::WelfareOnlineGiftDBData* mutable_wonlinedbdata(int index);
  inline ::proto_ff::WelfareOnlineGiftDBData* add_wonlinedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineGiftDBData >&
      wonlinedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineGiftDBData >*
      mutable_wonlinedbdata();

  // repeated .proto_ff.FestivalKillBossData fBossDBData = 31;
  inline int fbossdbdata_size() const;
  inline void clear_fbossdbdata();
  static const int kFBossDBDataFieldNumber = 31;
  inline const ::proto_ff::FestivalKillBossData& fbossdbdata(int index) const;
  inline ::proto_ff::FestivalKillBossData* mutable_fbossdbdata(int index);
  inline ::proto_ff::FestivalKillBossData* add_fbossdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalKillBossData >&
      fbossdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalKillBossData >*
      mutable_fbossdbdata();

  // repeated .proto_ff.FestivalHuoYueDuDBData fHuoYueDuDBData = 32;
  inline int fhuoyuedudbdata_size() const;
  inline void clear_fhuoyuedudbdata();
  static const int kFHuoYueDuDBDataFieldNumber = 32;
  inline const ::proto_ff::FestivalHuoYueDuDBData& fhuoyuedudbdata(int index) const;
  inline ::proto_ff::FestivalHuoYueDuDBData* mutable_fhuoyuedudbdata(int index);
  inline ::proto_ff::FestivalHuoYueDuDBData* add_fhuoyuedudbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalHuoYueDuDBData >&
      fhuoyuedudbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalHuoYueDuDBData >*
      mutable_fhuoyuedudbdata();

  // repeated .proto_ff.OperationTurntableDBData fTurntableDBData = 33;
  inline int fturntabledbdata_size() const;
  inline void clear_fturntabledbdata();
  static const int kFTurntableDBDataFieldNumber = 33;
  inline const ::proto_ff::OperationTurntableDBData& fturntabledbdata(int index) const;
  inline ::proto_ff::OperationTurntableDBData* mutable_fturntabledbdata(int index);
  inline ::proto_ff::OperationTurntableDBData* add_fturntabledbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableDBData >&
      fturntabledbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableDBData >*
      mutable_fturntabledbdata();

  // repeated .proto_ff.OperationTutorDBData TutorDBData = 34;
  inline int tutordbdata_size() const;
  inline void clear_tutordbdata();
  static const int kTutorDBDataFieldNumber = 34;
  inline const ::proto_ff::OperationTutorDBData& tutordbdata(int index) const;
  inline ::proto_ff::OperationTutorDBData* mutable_tutordbdata(int index);
  inline ::proto_ff::OperationTutorDBData* add_tutordbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutorDBData >&
      tutordbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutorDBData >*
      mutable_tutordbdata();

  // repeated .proto_ff.FestivalZhiChongData zhiChongData = 35;
  inline int zhichongdata_size() const;
  inline void clear_zhichongdata();
  static const int kZhiChongDataFieldNumber = 35;
  inline const ::proto_ff::FestivalZhiChongData& zhichongdata(int index) const;
  inline ::proto_ff::FestivalZhiChongData* mutable_zhichongdata(int index);
  inline ::proto_ff::FestivalZhiChongData* add_zhichongdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalZhiChongData >&
      zhichongdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalZhiChongData >*
      mutable_zhichongdata();

  // repeated .proto_ff.limitInfo limitData = 36;
  inline int limitdata_size() const;
  inline void clear_limitdata();
  static const int kLimitDataFieldNumber = 36;
  inline const ::proto_ff::limitInfo& limitdata(int index) const;
  inline ::proto_ff::limitInfo* mutable_limitdata(int index);
  inline ::proto_ff::limitInfo* add_limitdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::limitInfo >&
      limitdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::limitInfo >*
      mutable_limitdata();

  // repeated .proto_ff.FestivalSuperDBData superData = 37;
  inline int superdata_size() const;
  inline void clear_superdata();
  static const int kSuperDataFieldNumber = 37;
  inline const ::proto_ff::FestivalSuperDBData& superdata(int index) const;
  inline ::proto_ff::FestivalSuperDBData* mutable_superdata(int index);
  inline ::proto_ff::FestivalSuperDBData* add_superdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDBData >&
      superdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDBData >*
      mutable_superdata();

  // repeated .proto_ff.FestivalBigYanHuaDBData fBigYanHuaDBData = 38;
  inline int fbigyanhuadbdata_size() const;
  inline void clear_fbigyanhuadbdata();
  static const int kFBigYanHuaDBDataFieldNumber = 38;
  inline const ::proto_ff::FestivalBigYanHuaDBData& fbigyanhuadbdata(int index) const;
  inline ::proto_ff::FestivalBigYanHuaDBData* mutable_fbigyanhuadbdata(int index);
  inline ::proto_ff::FestivalBigYanHuaDBData* add_fbigyanhuadbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalBigYanHuaDBData >&
      fbigyanhuadbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalBigYanHuaDBData >*
      mutable_fbigyanhuadbdata();

  // repeated .proto_ff.FestivalWorldBossData worldBossData = 39;
  inline int worldbossdata_size() const;
  inline void clear_worldbossdata();
  static const int kWorldBossDataFieldNumber = 39;
  inline const ::proto_ff::FestivalWorldBossData& worldbossdata(int index) const;
  inline ::proto_ff::FestivalWorldBossData* mutable_worldbossdata(int index);
  inline ::proto_ff::FestivalWorldBossData* add_worldbossdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalWorldBossData >&
      worldbossdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalWorldBossData >*
      mutable_worldbossdata();

  // repeated .proto_ff.FestivalPreRechargeData prerechargedata = 40;
  inline int prerechargedata_size() const;
  inline void clear_prerechargedata();
  static const int kPrerechargedataFieldNumber = 40;
  inline const ::proto_ff::FestivalPreRechargeData& prerechargedata(int index) const;
  inline ::proto_ff::FestivalPreRechargeData* mutable_prerechargedata(int index);
  inline ::proto_ff::FestivalPreRechargeData* add_prerechargedata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalPreRechargeData >&
      prerechargedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalPreRechargeData >*
      mutable_prerechargedata();

  // optional .proto_ff.OperateWingGiftData winggiftdata = 41;
  inline bool has_winggiftdata() const;
  inline void clear_winggiftdata();
  static const int kWinggiftdataFieldNumber = 41;
  inline const ::proto_ff::OperateWingGiftData& winggiftdata() const;
  inline ::proto_ff::OperateWingGiftData* mutable_winggiftdata();
  inline ::proto_ff::OperateWingGiftData* release_winggiftdata();
  inline void set_allocated_winggiftdata(::proto_ff::OperateWingGiftData* winggiftdata);

  // optional .proto_ff.OperateRechargeGiftData rechargegiftdata = 42;
  inline bool has_rechargegiftdata() const;
  inline void clear_rechargegiftdata();
  static const int kRechargegiftdataFieldNumber = 42;
  inline const ::proto_ff::OperateRechargeGiftData& rechargegiftdata() const;
  inline ::proto_ff::OperateRechargeGiftData* mutable_rechargegiftdata();
  inline ::proto_ff::OperateRechargeGiftData* release_rechargegiftdata();
  inline void set_allocated_rechargegiftdata(::proto_ff::OperateRechargeGiftData* rechargegiftdata);

  // repeated .proto_ff.FestivalSuperDoubleDBData superDoubleData = 43;
  inline int superdoubledata_size() const;
  inline void clear_superdoubledata();
  static const int kSuperDoubleDataFieldNumber = 43;
  inline const ::proto_ff::FestivalSuperDoubleDBData& superdoubledata(int index) const;
  inline ::proto_ff::FestivalSuperDoubleDBData* mutable_superdoubledata(int index);
  inline ::proto_ff::FestivalSuperDoubleDBData* add_superdoubledata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDoubleDBData >&
      superdoubledata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDoubleDBData >*
      mutable_superdoubledata();

  // repeated .proto_ff.IndultTaskGroupEntry IndultTaskDBData = 44;
  inline int indulttaskdbdata_size() const;
  inline void clear_indulttaskdbdata();
  static const int kIndultTaskDBDataFieldNumber = 44;
  inline const ::proto_ff::IndultTaskGroupEntry& indulttaskdbdata(int index) const;
  inline ::proto_ff::IndultTaskGroupEntry* mutable_indulttaskdbdata(int index);
  inline ::proto_ff::IndultTaskGroupEntry* add_indulttaskdbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskGroupEntry >&
      indulttaskdbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskGroupEntry >*
      mutable_indulttaskdbdata();

  // optional .proto_ff.ColPointsTaskData ColPointsTaskData = 45;
  inline bool has_colpointstaskdata() const;
  inline void clear_colpointstaskdata();
  static const int kColPointsTaskDataFieldNumber = 45;
  inline const ::proto_ff::ColPointsTaskData& colpointstaskdata() const;
  inline ::proto_ff::ColPointsTaskData* mutable_colpointstaskdata();
  inline ::proto_ff::ColPointsTaskData* release_colpointstaskdata();
  inline void set_allocated_colpointstaskdata(::proto_ff::ColPointsTaskData* colpointstaskdata);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOperateData)
 private:
  inline void set_has_dailyrecharge();
  inline void clear_has_dailyrecharge();
  inline void set_has_firstrecharge();
  inline void clear_has_firstrecharge();
  inline void set_has_mooncard();
  inline void clear_has_mooncard();
  inline void set_has_novicefund();
  inline void clear_has_novicefund();
  inline void set_has_growthfund();
  inline void clear_has_growthfund();
  inline void set_has_dreamfund();
  inline void clear_has_dreamfund();
  inline void set_has_novicefundhigh();
  inline void clear_has_novicefundhigh();
  inline void set_has_growthfundhigh();
  inline void clear_has_growthfundhigh();
  inline void set_has_dreamfundhigh();
  inline void clear_has_dreamfundhigh();
  inline void set_has_winggiftdata();
  inline void clear_has_winggiftdata();
  inline void set_has_rechargegiftdata();
  inline void clear_has_rechargegiftdata();
  inline void set_has_colpointstaskdata();
  inline void clear_has_colpointstaskdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareDailySignInDBData > signindata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLoginGiftDBData > logingiftdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLevelGiftDBData > levelgiftdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopData > shopdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskData > taskdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBData > wishdata_;
  ::proto_ff::OperateDailyRechargeData* dailyrecharge_;
  ::proto_ff::OperateFirstRechargeData* firstrecharge_;
  ::proto_ff::OperateMoonCardData* mooncard_;
  ::proto_ff::OperateFundData* novicefund_;
  ::proto_ff::OperateFundData* growthfund_;
  ::proto_ff::OperateFundData* dreamfund_;
  ::proto_ff::OperateFundData* novicefundhigh_;
  ::proto_ff::OperateFundData* growthfundhigh_;
  ::proto_ff::OperateFundData* dreamfundhigh_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalInvestDBData > finvestdbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalExchangeDBData > fexchangedbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalLoginDBData > flogindbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalTotalRechargeDBData > frechargedbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalConsumptionDBData > fconsumptiondbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalFirstRechargeDBData > ffirstrechargedbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalYanHuaDBData > fyanhuadbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalShopDBData > fshopdbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftActiveDBData > limitgiftdbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeActiveDBData > horoscopedbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeActiveDBData > festivalrechargedbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSmashEggDBData > fsmasheggdbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > redpointclickdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareVipGiftDBData > wvipdbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineGiftDBData > wonlinedbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalKillBossData > fbossdbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalHuoYueDuDBData > fhuoyuedudbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableDBData > fturntabledbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutorDBData > tutordbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalZhiChongData > zhichongdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::limitInfo > limitdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDBData > superdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalBigYanHuaDBData > fbigyanhuadbdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalWorldBossData > worldbossdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalPreRechargeData > prerechargedata_;
  ::proto_ff::OperateWingGiftData* winggiftdata_;
  ::proto_ff::OperateRechargeGiftData* rechargegiftdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDoubleDBData > superdoubledata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskGroupEntry > indulttaskdbdata_;
  ::proto_ff::ColPointsTaskData* colpointstaskdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(45 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOperateData* default_instance_;
};
// -------------------------------------------------------------------

class PlayerActiveAnswerData : public ::google::protobuf::Message {
 public:
  PlayerActiveAnswerData();
  virtual ~PlayerActiveAnswerData();

  PlayerActiveAnswerData(const PlayerActiveAnswerData& from);

  inline PlayerActiveAnswerData& operator=(const PlayerActiveAnswerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerActiveAnswerData& default_instance();

  void Swap(PlayerActiveAnswerData* other);

  // implements Message ----------------------------------------------

  PlayerActiveAnswerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerActiveAnswerData& from);
  void MergeFrom(const PlayerActiveAnswerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 answerIndex = 1;
  inline bool has_answerindex() const;
  inline void clear_answerindex();
  static const int kAnswerIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 answerindex() const;
  inline void set_answerindex(::google::protobuf::uint32 value);

  // repeated uint32 answerList = 2;
  inline int answerlist_size() const;
  inline void clear_answerlist();
  static const int kAnswerListFieldNumber = 2;
  inline ::google::protobuf::uint32 answerlist(int index) const;
  inline void set_answerlist(int index, ::google::protobuf::uint32 value);
  inline void add_answerlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      answerlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_answerlist();

  // optional uint32 allexp = 3;
  inline bool has_allexp() const;
  inline void clear_allexp();
  static const int kAllexpFieldNumber = 3;
  inline ::google::protobuf::uint32 allexp() const;
  inline void set_allexp(::google::protobuf::uint32 value);

  // optional uint32 allmoney = 4;
  inline bool has_allmoney() const;
  inline void clear_allmoney();
  static const int kAllmoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 allmoney() const;
  inline void set_allmoney(::google::protobuf::uint32 value);

  // optional uint32 correctnum = 5;
  inline bool has_correctnum() const;
  inline void clear_correctnum();
  static const int kCorrectnumFieldNumber = 5;
  inline ::google::protobuf::uint32 correctnum() const;
  inline void set_correctnum(::google::protobuf::uint32 value);

  // optional uint32 isGetReward = 6;
  inline bool has_isgetreward() const;
  inline void clear_isgetreward();
  static const int kIsGetRewardFieldNumber = 6;
  inline ::google::protobuf::uint32 isgetreward() const;
  inline void set_isgetreward(::google::protobuf::uint32 value);

  // optional uint64 lastAnswerTime = 7;
  inline bool has_lastanswertime() const;
  inline void clear_lastanswertime();
  static const int kLastAnswerTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 lastanswertime() const;
  inline void set_lastanswertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerActiveAnswerData)
 private:
  inline void set_has_answerindex();
  inline void clear_has_answerindex();
  inline void set_has_allexp();
  inline void clear_has_allexp();
  inline void set_has_allmoney();
  inline void clear_has_allmoney();
  inline void set_has_correctnum();
  inline void clear_has_correctnum();
  inline void set_has_isgetreward();
  inline void clear_has_isgetreward();
  inline void set_has_lastanswertime();
  inline void clear_has_lastanswertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > answerlist_;
  ::google::protobuf::uint32 answerindex_;
  ::google::protobuf::uint32 allexp_;
  ::google::protobuf::uint32 allmoney_;
  ::google::protobuf::uint32 correctnum_;
  ::google::protobuf::uint64 lastanswertime_;
  ::google::protobuf::uint32 isgetreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PlayerActiveAnswerData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBActiveInfo : public ::google::protobuf::Message {
 public:
  CharacterDBActiveInfo();
  virtual ~CharacterDBActiveInfo();

  CharacterDBActiveInfo(const CharacterDBActiveInfo& from);

  inline CharacterDBActiveInfo& operator=(const CharacterDBActiveInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBActiveInfo& default_instance();

  void Swap(CharacterDBActiveInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBActiveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBActiveInfo& from);
  void MergeFrom(const CharacterDBActiveInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.PlayerActiveAnswerData playerActiveAnswerInfo = 1;
  inline bool has_playeractiveanswerinfo() const;
  inline void clear_playeractiveanswerinfo();
  static const int kPlayerActiveAnswerInfoFieldNumber = 1;
  inline const ::proto_ff::PlayerActiveAnswerData& playeractiveanswerinfo() const;
  inline ::proto_ff::PlayerActiveAnswerData* mutable_playeractiveanswerinfo();
  inline ::proto_ff::PlayerActiveAnswerData* release_playeractiveanswerinfo();
  inline void set_allocated_playeractiveanswerinfo(::proto_ff::PlayerActiveAnswerData* playeractiveanswerinfo);

  // optional .proto_ff.PlayerActiveAnswerData playerActiveDailyAnswerInfo = 2;
  inline bool has_playeractivedailyanswerinfo() const;
  inline void clear_playeractivedailyanswerinfo();
  static const int kPlayerActiveDailyAnswerInfoFieldNumber = 2;
  inline const ::proto_ff::PlayerActiveAnswerData& playeractivedailyanswerinfo() const;
  inline ::proto_ff::PlayerActiveAnswerData* mutable_playeractivedailyanswerinfo();
  inline ::proto_ff::PlayerActiveAnswerData* release_playeractivedailyanswerinfo();
  inline void set_allocated_playeractivedailyanswerinfo(::proto_ff::PlayerActiveAnswerData* playeractivedailyanswerinfo);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBActiveInfo)
 private:
  inline void set_has_playeractiveanswerinfo();
  inline void clear_has_playeractiveanswerinfo();
  inline void set_has_playeractivedailyanswerinfo();
  inline void clear_has_playeractivedailyanswerinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::PlayerActiveAnswerData* playeractiveanswerinfo_;
  ::proto_ff::PlayerActiveAnswerData* playeractivedailyanswerinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBActiveInfo* default_instance_;
};
// -------------------------------------------------------------------

class PayCountDBProto : public ::google::protobuf::Message {
 public:
  PayCountDBProto();
  virtual ~PayCountDBProto();

  PayCountDBProto(const PayCountDBProto& from);

  inline PayCountDBProto& operator=(const PayCountDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PayCountDBProto& default_instance();

  void Swap(PayCountDBProto* other);

  // implements Message ----------------------------------------------

  PayCountDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PayCountDBProto& from);
  void MergeFrom(const PayCountDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 charge_id = 1;
  inline bool has_charge_id() const;
  inline void clear_charge_id();
  static const int kChargeIdFieldNumber = 1;
  inline ::google::protobuf::int32 charge_id() const;
  inline void set_charge_id(::google::protobuf::int32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PayCountDBProto)
 private:
  inline void set_has_charge_id();
  inline void clear_has_charge_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 charge_id_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PayCountDBProto* default_instance_;
};
// -------------------------------------------------------------------

class OfflineRetDBProto : public ::google::protobuf::Message {
 public:
  OfflineRetDBProto();
  virtual ~OfflineRetDBProto();

  OfflineRetDBProto(const OfflineRetDBProto& from);

  inline OfflineRetDBProto& operator=(const OfflineRetDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineRetDBProto& default_instance();

  void Swap(OfflineRetDBProto* other);

  // implements Message ----------------------------------------------

  OfflineRetDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfflineRetDBProto& from);
  void MergeFrom(const OfflineRetDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 diamond = 1;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 1;
  inline ::google::protobuf::int64 diamond() const;
  inline void set_diamond(::google::protobuf::int64 value);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint64 freshtime = 3;
  inline bool has_freshtime() const;
  inline void clear_freshtime();
  static const int kFreshtimeFieldNumber = 3;
  inline ::google::protobuf::uint64 freshtime() const;
  inline void set_freshtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OfflineRetDBProto)
 private:
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_freshtime();
  inline void clear_has_freshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 diamond_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 freshtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OfflineRetDBProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterPayData : public ::google::protobuf::Message {
 public:
  CharacterPayData();
  virtual ~CharacterPayData();

  CharacterPayData(const CharacterPayData& from);

  inline CharacterPayData& operator=(const CharacterPayData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterPayData& default_instance();

  void Swap(CharacterPayData* other);

  // implements Message ----------------------------------------------

  CharacterPayData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterPayData& from);
  void MergeFrom(const CharacterPayData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rmb = 1;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 1;
  inline ::google::protobuf::uint32 rmb() const;
  inline void set_rmb(::google::protobuf::uint32 value);

  // optional uint32 maxPayId = 2;
  inline bool has_maxpayid() const;
  inline void clear_maxpayid();
  static const int kMaxPayIdFieldNumber = 2;
  inline ::google::protobuf::uint32 maxpayid() const;
  inline void set_maxpayid(::google::protobuf::uint32 value);

  // repeated string payedProducts = 3;
  inline int payedproducts_size() const;
  inline void clear_payedproducts();
  static const int kPayedProductsFieldNumber = 3;
  inline const ::std::string& payedproducts(int index) const;
  inline ::std::string* mutable_payedproducts(int index);
  inline void set_payedproducts(int index, const ::std::string& value);
  inline void set_payedproducts(int index, const char* value);
  inline void set_payedproducts(int index, const char* value, size_t size);
  inline ::std::string* add_payedproducts();
  inline void add_payedproducts(const ::std::string& value);
  inline void add_payedproducts(const char* value);
  inline void add_payedproducts(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& payedproducts() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_payedproducts();

  // optional uint32 today_rmb = 4;
  inline bool has_today_rmb() const;
  inline void clear_today_rmb();
  static const int kTodayRmbFieldNumber = 4;
  inline ::google::protobuf::uint32 today_rmb() const;
  inline void set_today_rmb(::google::protobuf::uint32 value);

  // optional uint64 last_time = 5;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // repeated .proto_ff.PayCountDBProto pay_count = 6;
  inline int pay_count_size() const;
  inline void clear_pay_count();
  static const int kPayCountFieldNumber = 6;
  inline const ::proto_ff::PayCountDBProto& pay_count(int index) const;
  inline ::proto_ff::PayCountDBProto* mutable_pay_count(int index);
  inline ::proto_ff::PayCountDBProto* add_pay_count();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PayCountDBProto >&
      pay_count() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PayCountDBProto >*
      mutable_pay_count();

  // optional uint64 pay_count_time = 7;
  inline bool has_pay_count_time() const;
  inline void clear_pay_count_time();
  static const int kPayCountTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 pay_count_time() const;
  inline void set_pay_count_time(::google::protobuf::uint64 value);

  // optional int64 diamond = 8;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 8;
  inline ::google::protobuf::int64 diamond() const;
  inline void set_diamond(::google::protobuf::int64 value);

  // optional uint64 real_rmb = 9;
  inline bool has_real_rmb() const;
  inline void clear_real_rmb();
  static const int kRealRmbFieldNumber = 9;
  inline ::google::protobuf::uint64 real_rmb() const;
  inline void set_real_rmb(::google::protobuf::uint64 value);

  // optional int64 freshtime = 10;
  inline bool has_freshtime() const;
  inline void clear_freshtime();
  static const int kFreshtimeFieldNumber = 10;
  inline ::google::protobuf::int64 freshtime() const;
  inline void set_freshtime(::google::protobuf::int64 value);

  // optional int32 openwindow = 11;
  inline bool has_openwindow() const;
  inline void clear_openwindow();
  static const int kOpenwindowFieldNumber = 11;
  inline ::google::protobuf::int32 openwindow() const;
  inline void set_openwindow(::google::protobuf::int32 value);

  // optional .proto_ff.OfflineRetDBProto offline_ret = 12;
  inline bool has_offline_ret() const;
  inline void clear_offline_ret();
  static const int kOfflineRetFieldNumber = 12;
  inline const ::proto_ff::OfflineRetDBProto& offline_ret() const;
  inline ::proto_ff::OfflineRetDBProto* mutable_offline_ret();
  inline ::proto_ff::OfflineRetDBProto* release_offline_ret();
  inline void set_allocated_offline_ret(::proto_ff::OfflineRetDBProto* offline_ret);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterPayData)
 private:
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_maxpayid();
  inline void clear_has_maxpayid();
  inline void set_has_today_rmb();
  inline void clear_has_today_rmb();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_pay_count_time();
  inline void clear_has_pay_count_time();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_real_rmb();
  inline void clear_has_real_rmb();
  inline void set_has_freshtime();
  inline void clear_has_freshtime();
  inline void set_has_openwindow();
  inline void clear_has_openwindow();
  inline void set_has_offline_ret();
  inline void clear_has_offline_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rmb_;
  ::google::protobuf::uint32 maxpayid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> payedproducts_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PayCountDBProto > pay_count_;
  ::google::protobuf::uint64 pay_count_time_;
  ::google::protobuf::uint32 today_rmb_;
  ::google::protobuf::int32 openwindow_;
  ::google::protobuf::int64 diamond_;
  ::google::protobuf::uint64 real_rmb_;
  ::google::protobuf::int64 freshtime_;
  ::proto_ff::OfflineRetDBProto* offline_ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterPayData* default_instance_;
};
// -------------------------------------------------------------------

class FunctionUnlockInfo : public ::google::protobuf::Message {
 public:
  FunctionUnlockInfo();
  virtual ~FunctionUnlockInfo();

  FunctionUnlockInfo(const FunctionUnlockInfo& from);

  inline FunctionUnlockInfo& operator=(const FunctionUnlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockInfo& default_instance();

  void Swap(FunctionUnlockInfo* other);

  // implements Message ----------------------------------------------

  FunctionUnlockInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockInfo& from);
  void MergeFrom(const FunctionUnlockInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 unlockIds = 1;
  inline int unlockids_size() const;
  inline void clear_unlockids();
  static const int kUnlockIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 unlockids(int index) const;
  inline void set_unlockids(int index, ::google::protobuf::uint64 value);
  inline void add_unlockids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      unlockids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_unlockids();

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > unlockids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockInfo* default_instance_;
};
// -------------------------------------------------------------------

class EmblemSlot : public ::google::protobuf::Message {
 public:
  EmblemSlot();
  virtual ~EmblemSlot();

  EmblemSlot(const EmblemSlot& from);

  inline EmblemSlot& operator=(const EmblemSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmblemSlot& default_instance();

  void Swap(EmblemSlot* other);

  // implements Message ----------------------------------------------

  EmblemSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmblemSlot& from);
  void MergeFrom(const EmblemSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slotId = 1;
  inline bool has_slotid() const;
  inline void clear_slotid();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::uint32 slotid() const;
  inline void set_slotid(::google::protobuf::uint32 value);

  // optional uint32 groupId = 2;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 posId = 3;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 3;
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // optional uint32 attrType = 4;
  inline bool has_attrtype() const;
  inline void clear_attrtype();
  static const int kAttrTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 attrtype() const;
  inline void set_attrtype(::google::protobuf::uint32 value);

  // optional bool open = 5;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 5;
  inline bool open() const;
  inline void set_open(bool value);

  // optional uint64 itemId = 6;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 6;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 bind = 7;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 7;
  inline ::google::protobuf::uint32 bind() const;
  inline void set_bind(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EmblemSlot)
 private:
  inline void set_has_slotid();
  inline void clear_has_slotid();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_posid();
  inline void clear_has_posid();
  inline void set_has_attrtype();
  inline void clear_has_attrtype();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 slotid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 posid_;
  ::google::protobuf::uint32 attrtype_;
  ::google::protobuf::uint64 itemid_;
  bool open_;
  ::google::protobuf::uint32 bind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static EmblemSlot* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBEmblemData : public ::google::protobuf::Message {
 public:
  CharacterDBEmblemData();
  virtual ~CharacterDBEmblemData();

  CharacterDBEmblemData(const CharacterDBEmblemData& from);

  inline CharacterDBEmblemData& operator=(const CharacterDBEmblemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBEmblemData& default_instance();

  void Swap(CharacterDBEmblemData* other);

  // implements Message ----------------------------------------------

  CharacterDBEmblemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBEmblemData& from);
  void MergeFrom(const CharacterDBEmblemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EmblemSlot slots = 1;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 1;
  inline const ::proto_ff::EmblemSlot& slots(int index) const;
  inline ::proto_ff::EmblemSlot* mutable_slots(int index);
  inline ::proto_ff::EmblemSlot* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EmblemSlot >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EmblemSlot >*
      mutable_slots();

  // repeated .proto_ff.ComPair groupSuitIds = 2;
  inline int groupsuitids_size() const;
  inline void clear_groupsuitids();
  static const int kGroupSuitIdsFieldNumber = 2;
  inline const ::proto_ff::ComPair& groupsuitids(int index) const;
  inline ::proto_ff::ComPair* mutable_groupsuitids(int index);
  inline ::proto_ff::ComPair* add_groupsuitids();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      groupsuitids() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_groupsuitids();

  // repeated .proto_ff.ComPair suitSkillId = 3;
  inline int suitskillid_size() const;
  inline void clear_suitskillid();
  static const int kSuitSkillIdFieldNumber = 3;
  inline const ::proto_ff::ComPair& suitskillid(int index) const;
  inline ::proto_ff::ComPair* mutable_suitskillid(int index);
  inline ::proto_ff::ComPair* add_suitskillid();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      suitskillid() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_suitskillid();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBEmblemData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EmblemSlot > slots_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > groupsuitids_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > suitskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBEmblemData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBIdentifyData : public ::google::protobuf::Message {
 public:
  CharacterDBIdentifyData();
  virtual ~CharacterDBIdentifyData();

  CharacterDBIdentifyData(const CharacterDBIdentifyData& from);

  inline CharacterDBIdentifyData& operator=(const CharacterDBIdentifyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBIdentifyData& default_instance();

  void Swap(CharacterDBIdentifyData* other);

  // implements Message ----------------------------------------------

  CharacterDBIdentifyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBIdentifyData& from);
  void MergeFrom(const CharacterDBIdentifyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair64 identifys = 1;
  inline int identifys_size() const;
  inline void clear_identifys();
  static const int kIdentifysFieldNumber = 1;
  inline const ::proto_ff::ComPair64& identifys(int index) const;
  inline ::proto_ff::ComPair64* mutable_identifys(int index);
  inline ::proto_ff::ComPair64* add_identifys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      identifys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_identifys();

  // repeated .proto_ff.ComPair64 identifyfates = 2;
  inline int identifyfates_size() const;
  inline void clear_identifyfates();
  static const int kIdentifyfatesFieldNumber = 2;
  inline const ::proto_ff::ComPair64& identifyfates(int index) const;
  inline ::proto_ff::ComPair64* mutable_identifyfates(int index);
  inline ::proto_ff::ComPair64* add_identifyfates();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      identifyfates() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_identifyfates();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBIdentifyData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > identifys_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > identifyfates_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBIdentifyData* default_instance_;
};
// -------------------------------------------------------------------

class ElementInfoData : public ::google::protobuf::Message {
 public:
  ElementInfoData();
  virtual ~ElementInfoData();

  ElementInfoData(const ElementInfoData& from);

  inline ElementInfoData& operator=(const ElementInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementInfoData& default_instance();

  void Swap(ElementInfoData* other);

  // implements Message ----------------------------------------------

  ElementInfoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ElementInfoData& from);
  void MergeFrom(const ElementInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint64 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ElementInfoData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ElementInfoData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBElementData : public ::google::protobuf::Message {
 public:
  CharacterDBElementData();
  virtual ~CharacterDBElementData();

  CharacterDBElementData(const CharacterDBElementData& from);

  inline CharacterDBElementData& operator=(const CharacterDBElementData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBElementData& default_instance();

  void Swap(CharacterDBElementData* other);

  // implements Message ----------------------------------------------

  CharacterDBElementData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBElementData& from);
  void MergeFrom(const CharacterDBElementData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ElementInfoData elements = 1;
  inline int elements_size() const;
  inline void clear_elements();
  static const int kElementsFieldNumber = 1;
  inline const ::proto_ff::ElementInfoData& elements(int index) const;
  inline ::proto_ff::ElementInfoData* mutable_elements(int index);
  inline ::proto_ff::ElementInfoData* add_elements();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ElementInfoData >&
      elements() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ElementInfoData >*
      mutable_elements();

  // repeated .proto_ff.ComPair64 fragments = 2;
  inline int fragments_size() const;
  inline void clear_fragments();
  static const int kFragmentsFieldNumber = 2;
  inline const ::proto_ff::ComPair64& fragments(int index) const;
  inline ::proto_ff::ComPair64* mutable_fragments(int index);
  inline ::proto_ff::ComPair64* add_fragments();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fragments() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fragments();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBElementData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ElementInfoData > elements_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fragments_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBElementData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBFashionData : public ::google::protobuf::Message {
 public:
  CharacterDBFashionData();
  virtual ~CharacterDBFashionData();

  CharacterDBFashionData(const CharacterDBFashionData& from);

  inline CharacterDBFashionData& operator=(const CharacterDBFashionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBFashionData& default_instance();

  void Swap(CharacterDBFashionData* other);

  // implements Message ----------------------------------------------

  CharacterDBFashionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBFashionData& from);
  void MergeFrom(const CharacterDBFashionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair64 fashions = 1;
  inline int fashions_size() const;
  inline void clear_fashions();
  static const int kFashionsFieldNumber = 1;
  inline const ::proto_ff::ComPair64& fashions(int index) const;
  inline ::proto_ff::ComPair64* mutable_fashions(int index);
  inline ::proto_ff::ComPair64* add_fashions();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fashions() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fashions();

  // optional uint64 dressClothesFashionID = 2;
  inline bool has_dressclothesfashionid() const;
  inline void clear_dressclothesfashionid();
  static const int kDressClothesFashionIDFieldNumber = 2;
  inline ::google::protobuf::uint64 dressclothesfashionid() const;
  inline void set_dressclothesfashionid(::google::protobuf::uint64 value);

  // optional uint64 dressWeaponFashionID = 3;
  inline bool has_dressweaponfashionid() const;
  inline void clear_dressweaponfashionid();
  static const int kDressWeaponFashionIDFieldNumber = 3;
  inline ::google::protobuf::uint64 dressweaponfashionid() const;
  inline void set_dressweaponfashionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBFashionData)
 private:
  inline void set_has_dressclothesfashionid();
  inline void clear_has_dressclothesfashionid();
  inline void set_has_dressweaponfashionid();
  inline void clear_has_dressweaponfashionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fashions_;
  ::google::protobuf::uint64 dressclothesfashionid_;
  ::google::protobuf::uint64 dressweaponfashionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBFashionData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBWingData : public ::google::protobuf::Message {
 public:
  CharacterDBWingData();
  virtual ~CharacterDBWingData();

  CharacterDBWingData(const CharacterDBWingData& from);

  inline CharacterDBWingData& operator=(const CharacterDBWingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBWingData& default_instance();

  void Swap(CharacterDBWingData* other);

  // implements Message ----------------------------------------------

  CharacterDBWingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBWingData& from);
  void MergeFrom(const CharacterDBWingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 advanceWingExp = 1;
  inline bool has_advancewingexp() const;
  inline void clear_advancewingexp();
  static const int kAdvanceWingExpFieldNumber = 1;
  inline ::google::protobuf::uint64 advancewingexp() const;
  inline void set_advancewingexp(::google::protobuf::uint64 value);

  // optional uint32 advanceWingLev = 2;
  inline bool has_advancewinglev() const;
  inline void clear_advancewinglev();
  static const int kAdvanceWingLevFieldNumber = 2;
  inline ::google::protobuf::uint32 advancewinglev() const;
  inline void set_advancewinglev(::google::protobuf::uint32 value);

  // optional uint64 equipWingID = 3;
  inline bool has_equipwingid() const;
  inline void clear_equipwingid();
  static const int kEquipWingIDFieldNumber = 3;
  inline ::google::protobuf::uint64 equipwingid() const;
  inline void set_equipwingid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 fantasyWings = 4;
  inline int fantasywings_size() const;
  inline void clear_fantasywings();
  static const int kFantasyWingsFieldNumber = 4;
  inline const ::proto_ff::ComPair64& fantasywings(int index) const;
  inline ::proto_ff::ComPair64* mutable_fantasywings(int index);
  inline ::proto_ff::ComPair64* add_fantasywings();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fantasywings() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fantasywings();

  // repeated .proto_ff.ComPair64 fragments = 5;
  inline int fragments_size() const;
  inline void clear_fragments();
  static const int kFragmentsFieldNumber = 5;
  inline const ::proto_ff::ComPair64& fragments(int index) const;
  inline ::proto_ff::ComPair64* mutable_fragments(int index);
  inline ::proto_ff::ComPair64* add_fragments();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fragments() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fragments();

  // optional int32 isbreak = 6;
  inline bool has_isbreak() const;
  inline void clear_isbreak();
  static const int kIsbreakFieldNumber = 6;
  inline ::google::protobuf::int32 isbreak() const;
  inline void set_isbreak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBWingData)
 private:
  inline void set_has_advancewingexp();
  inline void clear_has_advancewingexp();
  inline void set_has_advancewinglev();
  inline void clear_has_advancewinglev();
  inline void set_has_equipwingid();
  inline void clear_has_equipwingid();
  inline void set_has_isbreak();
  inline void clear_has_isbreak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 advancewingexp_;
  ::google::protobuf::uint64 equipwingid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fantasywings_;
  ::google::protobuf::uint32 advancewinglev_;
  ::google::protobuf::int32 isbreak_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fragments_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBWingData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBPartnerData : public ::google::protobuf::Message {
 public:
  CharacterDBPartnerData();
  virtual ~CharacterDBPartnerData();

  CharacterDBPartnerData(const CharacterDBPartnerData& from);

  inline CharacterDBPartnerData& operator=(const CharacterDBPartnerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBPartnerData& default_instance();

  void Swap(CharacterDBPartnerData* other);

  // implements Message ----------------------------------------------

  CharacterDBPartnerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBPartnerData& from);
  void MergeFrom(const CharacterDBPartnerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 advancePartnerExp = 1;
  inline bool has_advancepartnerexp() const;
  inline void clear_advancepartnerexp();
  static const int kAdvancePartnerExpFieldNumber = 1;
  inline ::google::protobuf::uint64 advancepartnerexp() const;
  inline void set_advancepartnerexp(::google::protobuf::uint64 value);

  // optional uint32 advancePartnerLev = 2;
  inline bool has_advancepartnerlev() const;
  inline void clear_advancepartnerlev();
  static const int kAdvancePartnerLevFieldNumber = 2;
  inline ::google::protobuf::uint32 advancepartnerlev() const;
  inline void set_advancepartnerlev(::google::protobuf::uint32 value);

  // optional uint64 equipPartnerID = 3;
  inline bool has_equippartnerid() const;
  inline void clear_equippartnerid();
  static const int kEquipPartnerIDFieldNumber = 3;
  inline ::google::protobuf::uint64 equippartnerid() const;
  inline void set_equippartnerid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 fantasyPartners = 4;
  inline int fantasypartners_size() const;
  inline void clear_fantasypartners();
  static const int kFantasyPartnersFieldNumber = 4;
  inline const ::proto_ff::ComPair64& fantasypartners(int index) const;
  inline ::proto_ff::ComPair64* mutable_fantasypartners(int index);
  inline ::proto_ff::ComPair64* add_fantasypartners();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fantasypartners() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fantasypartners();

  // repeated .proto_ff.ComPair64 fragments = 5;
  inline int fragments_size() const;
  inline void clear_fragments();
  static const int kFragmentsFieldNumber = 5;
  inline const ::proto_ff::ComPair64& fragments(int index) const;
  inline ::proto_ff::ComPair64* mutable_fragments(int index);
  inline ::proto_ff::ComPair64* add_fragments();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fragments() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fragments();

  // optional uint64 commonPartnerExp = 6;
  inline bool has_commonpartnerexp() const;
  inline void clear_commonpartnerexp();
  static const int kCommonPartnerExpFieldNumber = 6;
  inline ::google::protobuf::uint64 commonpartnerexp() const;
  inline void set_commonpartnerexp(::google::protobuf::uint64 value);

  // optional uint32 autoSwallowFlag = 7;
  inline bool has_autoswallowflag() const;
  inline void clear_autoswallowflag();
  static const int kAutoSwallowFlagFieldNumber = 7;
  inline ::google::protobuf::uint32 autoswallowflag() const;
  inline void set_autoswallowflag(::google::protobuf::uint32 value);

  // optional uint64 autoSwallowClass = 8;
  inline bool has_autoswallowclass() const;
  inline void clear_autoswallowclass();
  static const int kAutoSwallowClassFieldNumber = 8;
  inline ::google::protobuf::uint64 autoswallowclass() const;
  inline void set_autoswallowclass(::google::protobuf::uint64 value);

  // optional int32 isbreak = 9;
  inline bool has_isbreak() const;
  inline void clear_isbreak();
  static const int kIsbreakFieldNumber = 9;
  inline ::google::protobuf::int32 isbreak() const;
  inline void set_isbreak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBPartnerData)
 private:
  inline void set_has_advancepartnerexp();
  inline void clear_has_advancepartnerexp();
  inline void set_has_advancepartnerlev();
  inline void clear_has_advancepartnerlev();
  inline void set_has_equippartnerid();
  inline void clear_has_equippartnerid();
  inline void set_has_commonpartnerexp();
  inline void clear_has_commonpartnerexp();
  inline void set_has_autoswallowflag();
  inline void clear_has_autoswallowflag();
  inline void set_has_autoswallowclass();
  inline void clear_has_autoswallowclass();
  inline void set_has_isbreak();
  inline void clear_has_isbreak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 advancepartnerexp_;
  ::google::protobuf::uint64 equippartnerid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fantasypartners_;
  ::google::protobuf::uint32 advancepartnerlev_;
  ::google::protobuf::uint32 autoswallowflag_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fragments_;
  ::google::protobuf::uint64 commonpartnerexp_;
  ::google::protobuf::uint64 autoswallowclass_;
  ::google::protobuf::int32 isbreak_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBPartnerData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMountData : public ::google::protobuf::Message {
 public:
  CharacterDBMountData();
  virtual ~CharacterDBMountData();

  CharacterDBMountData(const CharacterDBMountData& from);

  inline CharacterDBMountData& operator=(const CharacterDBMountData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMountData& default_instance();

  void Swap(CharacterDBMountData* other);

  // implements Message ----------------------------------------------

  CharacterDBMountData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMountData& from);
  void MergeFrom(const CharacterDBMountData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair64 mounts = 1;
  inline int mounts_size() const;
  inline void clear_mounts();
  static const int kMountsFieldNumber = 1;
  inline const ::proto_ff::ComPair64& mounts(int index) const;
  inline ::proto_ff::ComPair64* mutable_mounts(int index);
  inline ::proto_ff::ComPair64* add_mounts();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      mounts() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_mounts();

  // optional uint64 mountID = 2;
  inline bool has_mountid() const;
  inline void clear_mountid();
  static const int kMountIDFieldNumber = 2;
  inline ::google::protobuf::uint64 mountid() const;
  inline void set_mountid(::google::protobuf::uint64 value);

  // optional uint32 rideState = 3;
  inline bool has_ridestate() const;
  inline void clear_ridestate();
  static const int kRideStateFieldNumber = 3;
  inline ::google::protobuf::uint32 ridestate() const;
  inline void set_ridestate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMountData)
 private:
  inline void set_has_mountid();
  inline void clear_has_mountid();
  inline void set_has_ridestate();
  inline void clear_has_ridestate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > mounts_;
  ::google::protobuf::uint64 mountid_;
  ::google::protobuf::uint32 ridestate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMountData* default_instance_;
};
// -------------------------------------------------------------------

class PlayerBossDataInfo : public ::google::protobuf::Message {
 public:
  PlayerBossDataInfo();
  virtual ~PlayerBossDataInfo();

  PlayerBossDataInfo(const PlayerBossDataInfo& from);

  inline PlayerBossDataInfo& operator=(const PlayerBossDataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBossDataInfo& default_instance();

  void Swap(PlayerBossDataInfo* other);

  // implements Message ----------------------------------------------

  PlayerBossDataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerBossDataInfo& from);
  void MergeFrom(const PlayerBossDataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 group_type = 1;
  inline bool has_group_type() const;
  inline void clear_group_type();
  static const int kGroupTypeFieldNumber = 1;
  inline ::google::protobuf::int32 group_type() const;
  inline void set_group_type(::google::protobuf::int32 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 max_num = 3;
  inline bool has_max_num() const;
  inline void clear_max_num();
  static const int kMaxNumFieldNumber = 3;
  inline ::google::protobuf::int32 max_num() const;
  inline void set_max_num(::google::protobuf::int32 value);

  // optional int32 vip_buy_num = 4;
  inline bool has_vip_buy_num() const;
  inline void clear_vip_buy_num();
  static const int kVipBuyNumFieldNumber = 4;
  inline ::google::protobuf::int32 vip_buy_num() const;
  inline void set_vip_buy_num(::google::protobuf::int32 value);

  // optional int32 boss_type = 5;
  inline bool has_boss_type() const;
  inline void clear_boss_type();
  static const int kBossTypeFieldNumber = 5;
  inline ::google::protobuf::int32 boss_type() const;
  inline void set_boss_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerBossDataInfo)
 private:
  inline void set_has_group_type();
  inline void clear_has_group_type();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_max_num();
  inline void clear_has_max_num();
  inline void set_has_vip_buy_num();
  inline void clear_has_vip_buy_num();
  inline void set_has_boss_type();
  inline void clear_has_boss_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 group_type_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 max_num_;
  ::google::protobuf::int32 vip_buy_num_;
  ::google::protobuf::int32 boss_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PlayerBossDataInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBBossAttentInfo : public ::google::protobuf::Message {
 public:
  CharacterDBBossAttentInfo();
  virtual ~CharacterDBBossAttentInfo();

  CharacterDBBossAttentInfo(const CharacterDBBossAttentInfo& from);

  inline CharacterDBBossAttentInfo& operator=(const CharacterDBBossAttentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBBossAttentInfo& default_instance();

  void Swap(CharacterDBBossAttentInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBBossAttentInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBBossAttentInfo& from);
  void MergeFrom(const CharacterDBBossAttentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBBossAttentInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBBossAttentInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBBossData : public ::google::protobuf::Message {
 public:
  CharacterDBBossData();
  virtual ~CharacterDBBossData();

  CharacterDBBossData(const CharacterDBBossData& from);

  inline CharacterDBBossData& operator=(const CharacterDBBossData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBBossData& default_instance();

  void Swap(CharacterDBBossData* other);

  // implements Message ----------------------------------------------

  CharacterDBBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBBossData& from);
  void MergeFrom(const CharacterDBBossData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.PlayerBossDataInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::PlayerBossDataInfo& infos(int index) const;
  inline ::proto_ff::PlayerBossDataInfo* mutable_infos(int index);
  inline ::proto_ff::PlayerBossDataInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PlayerBossDataInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PlayerBossDataInfo >*
      mutable_infos();

  // optional uint64 lastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // repeated int64 attent_list = 3;
  inline int attent_list_size() const;
  inline void clear_attent_list();
  static const int kAttentListFieldNumber = 3;
  inline ::google::protobuf::int64 attent_list(int index) const;
  inline void set_attent_list(int index, ::google::protobuf::int64 value);
  inline void add_attent_list(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      attent_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_attent_list();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBBossData)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::PlayerBossDataInfo > infos_;
  ::google::protobuf::uint64 lasttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > attent_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBBossData* default_instance_;
};
// -------------------------------------------------------------------

class RedPlayerInfo : public ::google::protobuf::Message {
 public:
  RedPlayerInfo();
  virtual ~RedPlayerInfo();

  RedPlayerInfo(const RedPlayerInfo& from);

  inline RedPlayerInfo& operator=(const RedPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedPlayerInfo& default_instance();

  void Swap(RedPlayerInfo* other);

  // implements Message ----------------------------------------------

  RedPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedPlayerInfo& from);
  void MergeFrom(const RedPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RedPlayerInfo)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static RedPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBPvpData : public ::google::protobuf::Message {
 public:
  CharacterDBPvpData();
  virtual ~CharacterDBPvpData();

  CharacterDBPvpData(const CharacterDBPvpData& from);

  inline CharacterDBPvpData& operator=(const CharacterDBPvpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBPvpData& default_instance();

  void Swap(CharacterDBPvpData* other);

  // implements Message ----------------------------------------------

  CharacterDBPvpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBPvpData& from);
  void MergeFrom(const CharacterDBPvpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pk_mode = 1;
  inline bool has_pk_mode() const;
  inline void clear_pk_mode();
  static const int kPkModeFieldNumber = 1;
  inline ::google::protobuf::uint32 pk_mode() const;
  inline void set_pk_mode(::google::protobuf::uint32 value);

  // optional uint32 pk_killing_value = 2;
  inline bool has_pk_killing_value() const;
  inline void clear_pk_killing_value();
  static const int kPkKillingValueFieldNumber = 2;
  inline ::google::protobuf::uint32 pk_killing_value() const;
  inline void set_pk_killing_value(::google::protobuf::uint32 value);

  // repeated .proto_ff.RedPlayerInfo red_player = 3;
  inline int red_player_size() const;
  inline void clear_red_player();
  static const int kRedPlayerFieldNumber = 3;
  inline const ::proto_ff::RedPlayerInfo& red_player(int index) const;
  inline ::proto_ff::RedPlayerInfo* mutable_red_player(int index);
  inline ::proto_ff::RedPlayerInfo* add_red_player();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RedPlayerInfo >&
      red_player() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RedPlayerInfo >*
      mutable_red_player();

  // optional uint64 online_time = 4;
  inline bool has_online_time() const;
  inline void clear_online_time();
  static const int kOnlineTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 online_time() const;
  inline void set_online_time(::google::protobuf::uint64 value);

  // optional int32 kill_num = 5;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 5;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // optional int32 be_kill_num = 6;
  inline bool has_be_kill_num() const;
  inline void clear_be_kill_num();
  static const int kBeKillNumFieldNumber = 6;
  inline ::google::protobuf::int32 be_kill_num() const;
  inline void set_be_kill_num(::google::protobuf::int32 value);

  // optional int64 lastTime = 7;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 7;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // optional string be_kill_name = 8;
  inline bool has_be_kill_name() const;
  inline void clear_be_kill_name();
  static const int kBeKillNameFieldNumber = 8;
  inline const ::std::string& be_kill_name() const;
  inline void set_be_kill_name(const ::std::string& value);
  inline void set_be_kill_name(const char* value);
  inline void set_be_kill_name(const char* value, size_t size);
  inline ::std::string* mutable_be_kill_name();
  inline ::std::string* release_be_kill_name();
  inline void set_allocated_be_kill_name(::std::string* be_kill_name);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBPvpData)
 private:
  inline void set_has_pk_mode();
  inline void clear_has_pk_mode();
  inline void set_has_pk_killing_value();
  inline void clear_has_pk_killing_value();
  inline void set_has_online_time();
  inline void clear_has_online_time();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();
  inline void set_has_be_kill_num();
  inline void clear_has_be_kill_num();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_be_kill_name();
  inline void clear_has_be_kill_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pk_mode_;
  ::google::protobuf::uint32 pk_killing_value_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RedPlayerInfo > red_player_;
  ::google::protobuf::uint64 online_time_;
  ::google::protobuf::int32 kill_num_;
  ::google::protobuf::int32 be_kill_num_;
  ::google::protobuf::int64 lasttime_;
  ::std::string* be_kill_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBPvpData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBTreasureData : public ::google::protobuf::Message {
 public:
  CharacterDBTreasureData();
  virtual ~CharacterDBTreasureData();

  CharacterDBTreasureData(const CharacterDBTreasureData& from);

  inline CharacterDBTreasureData& operator=(const CharacterDBTreasureData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBTreasureData& default_instance();

  void Swap(CharacterDBTreasureData* other);

  // implements Message ----------------------------------------------

  CharacterDBTreasureData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBTreasureData& from);
  void MergeFrom(const CharacterDBTreasureData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 advanceTreasureExp = 1;
  inline bool has_advancetreasureexp() const;
  inline void clear_advancetreasureexp();
  static const int kAdvanceTreasureExpFieldNumber = 1;
  inline ::google::protobuf::uint64 advancetreasureexp() const;
  inline void set_advancetreasureexp(::google::protobuf::uint64 value);

  // optional uint32 advanceTreasureLev = 2;
  inline bool has_advancetreasurelev() const;
  inline void clear_advancetreasurelev();
  static const int kAdvanceTreasureLevFieldNumber = 2;
  inline ::google::protobuf::uint32 advancetreasurelev() const;
  inline void set_advancetreasurelev(::google::protobuf::uint32 value);

  // optional uint64 equipTreasureID = 3;
  inline bool has_equiptreasureid() const;
  inline void clear_equiptreasureid();
  static const int kEquipTreasureIDFieldNumber = 3;
  inline ::google::protobuf::uint64 equiptreasureid() const;
  inline void set_equiptreasureid(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 fantasyTreasures = 4;
  inline int fantasytreasures_size() const;
  inline void clear_fantasytreasures();
  static const int kFantasyTreasuresFieldNumber = 4;
  inline const ::proto_ff::ComPair64& fantasytreasures(int index) const;
  inline ::proto_ff::ComPair64* mutable_fantasytreasures(int index);
  inline ::proto_ff::ComPair64* add_fantasytreasures();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fantasytreasures() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fantasytreasures();

  // repeated .proto_ff.ComPair64 fragments = 5;
  inline int fragments_size() const;
  inline void clear_fragments();
  static const int kFragmentsFieldNumber = 5;
  inline const ::proto_ff::ComPair64& fragments(int index) const;
  inline ::proto_ff::ComPair64* mutable_fragments(int index);
  inline ::proto_ff::ComPair64* add_fragments();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      fragments() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_fragments();

  // optional uint64 skillTreasureID = 6;
  inline bool has_skilltreasureid() const;
  inline void clear_skilltreasureid();
  static const int kSkillTreasureIDFieldNumber = 6;
  inline ::google::protobuf::uint64 skilltreasureid() const;
  inline void set_skilltreasureid(::google::protobuf::uint64 value);

  // optional int32 isbreak = 7;
  inline bool has_isbreak() const;
  inline void clear_isbreak();
  static const int kIsbreakFieldNumber = 7;
  inline ::google::protobuf::int32 isbreak() const;
  inline void set_isbreak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBTreasureData)
 private:
  inline void set_has_advancetreasureexp();
  inline void clear_has_advancetreasureexp();
  inline void set_has_advancetreasurelev();
  inline void clear_has_advancetreasurelev();
  inline void set_has_equiptreasureid();
  inline void clear_has_equiptreasureid();
  inline void set_has_skilltreasureid();
  inline void clear_has_skilltreasureid();
  inline void set_has_isbreak();
  inline void clear_has_isbreak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 advancetreasureexp_;
  ::google::protobuf::uint64 equiptreasureid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fantasytreasures_;
  ::google::protobuf::uint32 advancetreasurelev_;
  ::google::protobuf::int32 isbreak_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > fragments_;
  ::google::protobuf::uint64 skilltreasureid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBTreasureData* default_instance_;
};
// -------------------------------------------------------------------

class ArtifactInfo : public ::google::protobuf::Message {
 public:
  ArtifactInfo();
  virtual ~ArtifactInfo();

  ArtifactInfo(const ArtifactInfo& from);

  inline ArtifactInfo& operator=(const ArtifactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArtifactInfo& default_instance();

  void Swap(ArtifactInfo* other);

  // implements Message ----------------------------------------------

  ArtifactInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArtifactInfo& from);
  void MergeFrom(const ArtifactInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 star_lv = 2;
  inline bool has_star_lv() const;
  inline void clear_star_lv();
  static const int kStarLvFieldNumber = 2;
  inline ::google::protobuf::int32 star_lv() const;
  inline void set_star_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ArtifactInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star_lv();
  inline void clear_has_star_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 star_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ArtifactInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBArtifactData : public ::google::protobuf::Message {
 public:
  CharacterDBArtifactData();
  virtual ~CharacterDBArtifactData();

  CharacterDBArtifactData(const CharacterDBArtifactData& from);

  inline CharacterDBArtifactData& operator=(const CharacterDBArtifactData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBArtifactData& default_instance();

  void Swap(CharacterDBArtifactData* other);

  // implements Message ----------------------------------------------

  CharacterDBArtifactData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBArtifactData& from);
  void MergeFrom(const CharacterDBArtifactData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ArtifactInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::ArtifactInfo& infos(int index) const;
  inline ::proto_ff::ArtifactInfo* mutable_infos(int index);
  inline ::proto_ff::ArtifactInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArtifactInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArtifactInfo >*
      mutable_infos();

  // optional uint64 dress_id = 2;
  inline bool has_dress_id() const;
  inline void clear_dress_id();
  static const int kDressIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dress_id() const;
  inline void set_dress_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBArtifactData)
 private:
  inline void set_has_dress_id();
  inline void clear_has_dress_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ArtifactInfo > infos_;
  ::google::protobuf::uint64 dress_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBArtifactData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBFateStarData : public ::google::protobuf::Message {
 public:
  CharacterDBFateStarData();
  virtual ~CharacterDBFateStarData();

  CharacterDBFateStarData(const CharacterDBFateStarData& from);

  inline CharacterDBFateStarData& operator=(const CharacterDBFateStarData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBFateStarData& default_instance();

  void Swap(CharacterDBFateStarData* other);

  // implements Message ----------------------------------------------

  CharacterDBFateStarData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBFateStarData& from);
  void MergeFrom(const CharacterDBFateStarData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 freeTime = 1;
  inline bool has_freetime() const;
  inline void clear_freetime();
  static const int kFreeTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 freetime() const;
  inline void set_freetime(::google::protobuf::uint64 value);

  // optional uint32 towerLevel = 2;
  inline bool has_towerlevel() const;
  inline void clear_towerlevel();
  static const int kTowerLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 towerlevel() const;
  inline void set_towerlevel(::google::protobuf::uint32 value);

  // optional uint32 nbless = 3;
  inline bool has_nbless() const;
  inline void clear_nbless();
  static const int kNblessFieldNumber = 3;
  inline ::google::protobuf::uint32 nbless() const;
  inline void set_nbless(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair soltData = 4;
  inline int soltdata_size() const;
  inline void clear_soltdata();
  static const int kSoltDataFieldNumber = 4;
  inline const ::proto_ff::ComPair& soltdata(int index) const;
  inline ::proto_ff::ComPair* mutable_soltdata(int index);
  inline ::proto_ff::ComPair* add_soltdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      soltdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_soltdata();

  // repeated .proto_ff.ItemProtoInfo equipStars = 5;
  inline int equipstars_size() const;
  inline void clear_equipstars();
  static const int kEquipStarsFieldNumber = 5;
  inline const ::proto_ff::ItemProtoInfo& equipstars(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_equipstars(int index);
  inline ::proto_ff::ItemProtoInfo* add_equipstars();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      equipstars() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_equipstars();

  // optional uint32 curnum = 6;
  inline bool has_curnum() const;
  inline void clear_curnum();
  static const int kCurnumFieldNumber = 6;
  inline ::google::protobuf::uint32 curnum() const;
  inline void set_curnum(::google::protobuf::uint32 value);

  // optional uint64 lasttime = 7;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 7;
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBFateStarData)
 private:
  inline void set_has_freetime();
  inline void clear_has_freetime();
  inline void set_has_towerlevel();
  inline void clear_has_towerlevel();
  inline void set_has_nbless();
  inline void clear_has_nbless();
  inline void set_has_curnum();
  inline void clear_has_curnum();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 freetime_;
  ::google::protobuf::uint32 towerlevel_;
  ::google::protobuf::uint32 nbless_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > soltdata_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > equipstars_;
  ::google::protobuf::uint64 lasttime_;
  ::google::protobuf::uint32 curnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBFateStarData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBConvoyData : public ::google::protobuf::Message {
 public:
  CharacterDBConvoyData();
  virtual ~CharacterDBConvoyData();

  CharacterDBConvoyData(const CharacterDBConvoyData& from);

  inline CharacterDBConvoyData& operator=(const CharacterDBConvoyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBConvoyData& default_instance();

  void Swap(CharacterDBConvoyData* other);

  // implements Message ----------------------------------------------

  CharacterDBConvoyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBConvoyData& from);
  void MergeFrom(const CharacterDBConvoyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 doTimes = 1;
  inline bool has_dotimes() const;
  inline void clear_dotimes();
  static const int kDoTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 dotimes() const;
  inline void set_dotimes(::google::protobuf::uint32 value);

  // optional uint32 convoyDate = 2;
  inline bool has_convoydate() const;
  inline void clear_convoydate();
  static const int kConvoyDateFieldNumber = 2;
  inline ::google::protobuf::uint32 convoydate() const;
  inline void set_convoydate(::google::protobuf::uint32 value);

  // optional uint64 escortid = 3;
  inline bool has_escortid() const;
  inline void clear_escortid();
  static const int kEscortidFieldNumber = 3;
  inline ::google::protobuf::uint64 escortid() const;
  inline void set_escortid(::google::protobuf::uint64 value);

  // optional uint64 acceptTime = 4;
  inline bool has_accepttime() const;
  inline void clear_accepttime();
  static const int kAcceptTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 accepttime() const;
  inline void set_accepttime(::google::protobuf::uint64 value);

  // optional uint32 refreshTimes = 5;
  inline bool has_refreshtimes() const;
  inline void clear_refreshtimes();
  static const int kRefreshTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 refreshtimes() const;
  inline void set_refreshtimes(::google::protobuf::uint32 value);

  // optional uint64 selectEscortId = 6;
  inline bool has_selectescortid() const;
  inline void clear_selectescortid();
  static const int kSelectEscortIdFieldNumber = 6;
  inline ::google::protobuf::uint64 selectescortid() const;
  inline void set_selectescortid(::google::protobuf::uint64 value);

  // optional uint64 refreshTimeStamp = 7;
  inline bool has_refreshtimestamp() const;
  inline void clear_refreshtimestamp();
  static const int kRefreshTimeStampFieldNumber = 7;
  inline ::google::protobuf::uint64 refreshtimestamp() const;
  inline void set_refreshtimestamp(::google::protobuf::uint64 value);

  // optional uint64 LastResetTime = 8;
  inline bool has_lastresettime() const;
  inline void clear_lastresettime();
  static const int kLastResetTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 lastresettime() const;
  inline void set_lastresettime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBConvoyData)
 private:
  inline void set_has_dotimes();
  inline void clear_has_dotimes();
  inline void set_has_convoydate();
  inline void clear_has_convoydate();
  inline void set_has_escortid();
  inline void clear_has_escortid();
  inline void set_has_accepttime();
  inline void clear_has_accepttime();
  inline void set_has_refreshtimes();
  inline void clear_has_refreshtimes();
  inline void set_has_selectescortid();
  inline void clear_has_selectescortid();
  inline void set_has_refreshtimestamp();
  inline void clear_has_refreshtimestamp();
  inline void set_has_lastresettime();
  inline void clear_has_lastresettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dotimes_;
  ::google::protobuf::uint32 convoydate_;
  ::google::protobuf::uint64 escortid_;
  ::google::protobuf::uint64 accepttime_;
  ::google::protobuf::uint64 selectescortid_;
  ::google::protobuf::uint64 refreshtimestamp_;
  ::google::protobuf::uint64 lastresettime_;
  ::google::protobuf::uint32 refreshtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBConvoyData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDailyEntry : public ::google::protobuf::Message {
 public:
  CharacterDBDailyEntry();
  virtual ~CharacterDBDailyEntry();

  CharacterDBDailyEntry(const CharacterDBDailyEntry& from);

  inline CharacterDBDailyEntry& operator=(const CharacterDBDailyEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDailyEntry& default_instance();

  void Swap(CharacterDBDailyEntry* other);

  // implements Message ----------------------------------------------

  CharacterDBDailyEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDailyEntry& from);
  void MergeFrom(const CharacterDBDailyEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cfg_id = 1;
  inline bool has_cfg_id() const;
  inline void clear_cfg_id();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 cfg_id() const;
  inline void set_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDailyEntry)
 private:
  inline void set_has_cfg_id();
  inline void clear_has_cfg_id();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cfg_id_;
  ::google::protobuf::int32 cur_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDailyEntry* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDailyData : public ::google::protobuf::Message {
 public:
  CharacterDBDailyData();
  virtual ~CharacterDBDailyData();

  CharacterDBDailyData(const CharacterDBDailyData& from);

  inline CharacterDBDailyData& operator=(const CharacterDBDailyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDailyData& default_instance();

  void Swap(CharacterDBDailyData* other);

  // implements Message ----------------------------------------------

  CharacterDBDailyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDailyData& from);
  void MergeFrom(const CharacterDBDailyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharacterDBDailyEntry daily_entry = 1;
  inline int daily_entry_size() const;
  inline void clear_daily_entry();
  static const int kDailyEntryFieldNumber = 1;
  inline const ::proto_ff::CharacterDBDailyEntry& daily_entry(int index) const;
  inline ::proto_ff::CharacterDBDailyEntry* mutable_daily_entry(int index);
  inline ::proto_ff::CharacterDBDailyEntry* add_daily_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDailyEntry >&
      daily_entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDailyEntry >*
      mutable_daily_entry();

  // repeated uint64 rewards = 2;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline ::google::protobuf::uint64 rewards(int index) const;
  inline void set_rewards(int index, ::google::protobuf::uint64 value);
  inline void add_rewards(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      rewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_rewards();

  // optional uint64 lasttime = 3;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 3;
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDailyData)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDailyEntry > daily_entry_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > rewards_;
  ::google::protobuf::uint64 lasttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDailyData* default_instance_;
};
// -------------------------------------------------------------------

class FieldCylstalInfo : public ::google::protobuf::Message {
 public:
  FieldCylstalInfo();
  virtual ~FieldCylstalInfo();

  FieldCylstalInfo(const FieldCylstalInfo& from);

  inline FieldCylstalInfo& operator=(const FieldCylstalInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldCylstalInfo& default_instance();

  void Swap(FieldCylstalInfo* other);

  // implements Message ----------------------------------------------

  FieldCylstalInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldCylstalInfo& from);
  void MergeFrom(const FieldCylstalInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slotIndex = 1;
  inline bool has_slotindex() const;
  inline void clear_slotindex();
  static const int kSlotIndexFieldNumber = 1;
  inline ::google::protobuf::int32 slotindex() const;
  inline void set_slotindex(::google::protobuf::int32 value);

  // optional int64 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FieldCylstalInfo)
 private:
  inline void set_has_slotindex();
  inline void clear_has_slotindex();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 slotindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FieldCylstalInfo* default_instance_;
};
// -------------------------------------------------------------------

class FieldExInfo : public ::google::protobuf::Message {
 public:
  FieldExInfo();
  virtual ~FieldExInfo();

  FieldExInfo(const FieldExInfo& from);

  inline FieldExInfo& operator=(const FieldExInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldExInfo& default_instance();

  void Swap(FieldExInfo* other);

  // implements Message ----------------------------------------------

  FieldExInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldExInfo& from);
  void MergeFrom(const FieldExInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actived = 1;
  inline bool has_actived() const;
  inline void clear_actived();
  static const int kActivedFieldNumber = 1;
  inline ::google::protobuf::int32 actived() const;
  inline void set_actived(::google::protobuf::int32 value);

  // repeated .proto_ff.ItemProtoInfo slotInfos = 2;
  inline int slotinfos_size() const;
  inline void clear_slotinfos();
  static const int kSlotInfosFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& slotinfos(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_slotinfos(int index);
  inline ::proto_ff::ItemProtoInfo* add_slotinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      slotinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_slotinfos();

  // optional uint64 fieldId = 3;
  inline bool has_fieldid() const;
  inline void clear_fieldid();
  static const int kFieldIdFieldNumber = 3;
  inline ::google::protobuf::uint64 fieldid() const;
  inline void set_fieldid(::google::protobuf::uint64 value);

  // optional uint64 fightNum = 4;
  inline bool has_fightnum() const;
  inline void clear_fightnum();
  static const int kFightNumFieldNumber = 4;
  inline ::google::protobuf::uint64 fightnum() const;
  inline void set_fightnum(::google::protobuf::uint64 value);

  // repeated .proto_ff.FieldCylstalInfo cylstalInfos = 5;
  inline int cylstalinfos_size() const;
  inline void clear_cylstalinfos();
  static const int kCylstalInfosFieldNumber = 5;
  inline const ::proto_ff::FieldCylstalInfo& cylstalinfos(int index) const;
  inline ::proto_ff::FieldCylstalInfo* mutable_cylstalinfos(int index);
  inline ::proto_ff::FieldCylstalInfo* add_cylstalinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldCylstalInfo >&
      cylstalinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldCylstalInfo >*
      mutable_cylstalinfos();

  // optional bool first_active = 6;
  inline bool has_first_active() const;
  inline void clear_first_active();
  static const int kFirstActiveFieldNumber = 6;
  inline bool first_active() const;
  inline void set_first_active(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.FieldExInfo)
 private:
  inline void set_has_actived();
  inline void clear_has_actived();
  inline void set_has_fieldid();
  inline void clear_has_fieldid();
  inline void set_has_fightnum();
  inline void clear_has_fightnum();
  inline void set_has_first_active();
  inline void clear_has_first_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > slotinfos_;
  ::google::protobuf::uint64 fieldid_;
  ::google::protobuf::int32 actived_;
  bool first_active_;
  ::google::protobuf::uint64 fightnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldCylstalInfo > cylstalinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FieldExInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBFieldData : public ::google::protobuf::Message {
 public:
  CharacterDBFieldData();
  virtual ~CharacterDBFieldData();

  CharacterDBFieldData(const CharacterDBFieldData& from);

  inline CharacterDBFieldData& operator=(const CharacterDBFieldData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBFieldData& default_instance();

  void Swap(CharacterDBFieldData* other);

  // implements Message ----------------------------------------------

  CharacterDBFieldData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBFieldData& from);
  void MergeFrom(const CharacterDBFieldData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FieldExInfo fieldInfos = 1;
  inline int fieldinfos_size() const;
  inline void clear_fieldinfos();
  static const int kFieldInfosFieldNumber = 1;
  inline const ::proto_ff::FieldExInfo& fieldinfos(int index) const;
  inline ::proto_ff::FieldExInfo* mutable_fieldinfos(int index);
  inline ::proto_ff::FieldExInfo* add_fieldinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldExInfo >&
      fieldinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldExInfo >*
      mutable_fieldinfos();

  // optional uint64 curExp = 2;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurExpFieldNumber = 2;
  inline ::google::protobuf::uint64 curexp() const;
  inline void set_curexp(::google::protobuf::uint64 value);

  // optional int32 maxNum = 3;
  inline bool has_maxnum() const;
  inline void clear_maxnum();
  static const int kMaxNumFieldNumber = 3;
  inline ::google::protobuf::int32 maxnum() const;
  inline void set_maxnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBFieldData)
 private:
  inline void set_has_curexp();
  inline void clear_has_curexp();
  inline void set_has_maxnum();
  inline void clear_has_maxnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldExInfo > fieldinfos_;
  ::google::protobuf::uint64 curexp_;
  ::google::protobuf::int32 maxnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBFieldData* default_instance_;
};
// -------------------------------------------------------------------

class vipGiftDBData : public ::google::protobuf::Message {
 public:
  vipGiftDBData();
  virtual ~vipGiftDBData();

  vipGiftDBData(const vipGiftDBData& from);

  inline vipGiftDBData& operator=(const vipGiftDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const vipGiftDBData& default_instance();

  void Swap(vipGiftDBData* other);

  // implements Message ----------------------------------------------

  vipGiftDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const vipGiftDBData& from);
  void MergeFrom(const vipGiftDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 giftId = 1;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 1;
  inline ::google::protobuf::uint64 giftid() const;
  inline void set_giftid(::google::protobuf::uint64 value);

  // optional uint64 activeTime = 2;
  inline bool has_activetime() const;
  inline void clear_activetime();
  static const int kActiveTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 activetime() const;
  inline void set_activetime(::google::protobuf::uint64 value);

  // optional uint64 lastGetTime = 3;
  inline bool has_lastgettime() const;
  inline void clear_lastgettime();
  static const int kLastGetTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 lastgettime() const;
  inline void set_lastgettime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.vipGiftDBData)
 private:
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_activetime();
  inline void clear_has_activetime();
  inline void set_has_lastgettime();
  inline void clear_has_lastgettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 giftid_;
  ::google::protobuf::uint64 activetime_;
  ::google::protobuf::uint64 lastgettime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static vipGiftDBData* default_instance_;
};
// -------------------------------------------------------------------

class VipTCardInfo : public ::google::protobuf::Message {
 public:
  VipTCardInfo();
  virtual ~VipTCardInfo();

  VipTCardInfo(const VipTCardInfo& from);

  inline VipTCardInfo& operator=(const VipTCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipTCardInfo& default_instance();

  void Swap(VipTCardInfo* other);

  // implements Message ----------------------------------------------

  VipTCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipTCardInfo& from);
  void MergeFrom(const VipTCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 endTime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 rewardState = 4;
  inline bool has_rewardstate() const;
  inline void clear_rewardstate();
  static const int kRewardStateFieldNumber = 4;
  inline ::google::protobuf::int32 rewardstate() const;
  inline void set_rewardstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.VipTCardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_rewardstate();
  inline void clear_has_rewardstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 rewardstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static VipTCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class VipTCardData : public ::google::protobuf::Message {
 public:
  VipTCardData();
  virtual ~VipTCardData();

  VipTCardData(const VipTCardData& from);

  inline VipTCardData& operator=(const VipTCardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipTCardData& default_instance();

  void Swap(VipTCardData* other);

  // implements Message ----------------------------------------------

  VipTCardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipTCardData& from);
  void MergeFrom(const VipTCardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.VipTCardInfo cardInfo = 1;
  inline int cardinfo_size() const;
  inline void clear_cardinfo();
  static const int kCardInfoFieldNumber = 1;
  inline const ::proto_ff::VipTCardInfo& cardinfo(int index) const;
  inline ::proto_ff::VipTCardInfo* mutable_cardinfo(int index);
  inline ::proto_ff::VipTCardInfo* add_cardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::VipTCardInfo >&
      cardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::VipTCardInfo >*
      mutable_cardinfo();

  // optional int32 giftState = 2;
  inline bool has_giftstate() const;
  inline void clear_giftstate();
  static const int kGiftStateFieldNumber = 2;
  inline ::google::protobuf::int32 giftstate() const;
  inline void set_giftstate(::google::protobuf::int32 value);

  // optional int32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.VipTCardData)
 private:
  inline void set_has_giftstate();
  inline void clear_has_giftstate();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::VipTCardInfo > cardinfo_;
  ::google::protobuf::int32 giftstate_;
  ::google::protobuf::int32 point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static VipTCardData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBVipData : public ::google::protobuf::Message {
 public:
  CharacterDBVipData();
  virtual ~CharacterDBVipData();

  CharacterDBVipData(const CharacterDBVipData& from);

  inline CharacterDBVipData& operator=(const CharacterDBVipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBVipData& default_instance();

  void Swap(CharacterDBVipData* other);

  // implements Message ----------------------------------------------

  CharacterDBVipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBVipData& from);
  void MergeFrom(const CharacterDBVipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vipState = 1;
  inline bool has_vipstate() const;
  inline void clear_vipstate();
  static const int kVipStateFieldNumber = 1;
  inline ::google::protobuf::uint32 vipstate() const;
  inline void set_vipstate(::google::protobuf::uint32 value);

  // optional uint64 vipExp = 2;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 2;
  inline ::google::protobuf::uint64 vipexp() const;
  inline void set_vipexp(::google::protobuf::uint64 value);

  // optional uint64 getRewardTime = 3;
  inline bool has_getrewardtime() const;
  inline void clear_getrewardtime();
  static const int kGetRewardTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 getrewardtime() const;
  inline void set_getrewardtime(::google::protobuf::uint64 value);

  // optional uint64 expDiamond = 4;
  inline bool has_expdiamond() const;
  inline void clear_expdiamond();
  static const int kExpDiamondFieldNumber = 4;
  inline ::google::protobuf::uint64 expdiamond() const;
  inline void set_expdiamond(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 timeLimitExp = 5;
  inline int timelimitexp_size() const;
  inline void clear_timelimitexp();
  static const int kTimeLimitExpFieldNumber = 5;
  inline const ::proto_ff::ComPair64& timelimitexp(int index) const;
  inline ::proto_ff::ComPair64* mutable_timelimitexp(int index);
  inline ::proto_ff::ComPair64* add_timelimitexp();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      timelimitexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_timelimitexp();

  // repeated .proto_ff.vipGiftDBData vipGift = 6;
  inline int vipgift_size() const;
  inline void clear_vipgift();
  static const int kVipGiftFieldNumber = 6;
  inline const ::proto_ff::vipGiftDBData& vipgift(int index) const;
  inline ::proto_ff::vipGiftDBData* mutable_vipgift(int index);
  inline ::proto_ff::vipGiftDBData* add_vipgift();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::vipGiftDBData >&
      vipgift() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::vipGiftDBData >*
      mutable_vipgift();

  // optional .proto_ff.VipTCardData cardData = 7;
  inline bool has_carddata() const;
  inline void clear_carddata();
  static const int kCardDataFieldNumber = 7;
  inline const ::proto_ff::VipTCardData& carddata() const;
  inline ::proto_ff::VipTCardData* mutable_carddata();
  inline ::proto_ff::VipTCardData* release_carddata();
  inline void set_allocated_carddata(::proto_ff::VipTCardData* carddata);

  // optional int64 cardLastTime = 8;
  inline bool has_cardlasttime() const;
  inline void clear_cardlasttime();
  static const int kCardLastTimeFieldNumber = 8;
  inline ::google::protobuf::int64 cardlasttime() const;
  inline void set_cardlasttime(::google::protobuf::int64 value);

  // optional int64 curAddVipExp = 9;
  inline bool has_curaddvipexp() const;
  inline void clear_curaddvipexp();
  static const int kCurAddVipExpFieldNumber = 9;
  inline ::google::protobuf::int64 curaddvipexp() const;
  inline void set_curaddvipexp(::google::protobuf::int64 value);

  // optional int32 point = 10;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 10;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBVipData)
 private:
  inline void set_has_vipstate();
  inline void clear_has_vipstate();
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_getrewardtime();
  inline void clear_has_getrewardtime();
  inline void set_has_expdiamond();
  inline void clear_has_expdiamond();
  inline void set_has_carddata();
  inline void clear_has_carddata();
  inline void set_has_cardlasttime();
  inline void clear_has_cardlasttime();
  inline void set_has_curaddvipexp();
  inline void clear_has_curaddvipexp();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 vipexp_;
  ::google::protobuf::uint64 getrewardtime_;
  ::google::protobuf::uint64 expdiamond_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > timelimitexp_;
  ::google::protobuf::uint32 vipstate_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::vipGiftDBData > vipgift_;
  ::proto_ff::VipTCardData* carddata_;
  ::google::protobuf::int64 cardlasttime_;
  ::google::protobuf::int64 curaddvipexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBVipData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMallData : public ::google::protobuf::Message {
 public:
  CharacterDBMallData();
  virtual ~CharacterDBMallData();

  CharacterDBMallData(const CharacterDBMallData& from);

  inline CharacterDBMallData& operator=(const CharacterDBMallData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMallData& default_instance();

  void Swap(CharacterDBMallData* other);

  // implements Message ----------------------------------------------

  CharacterDBMallData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMallData& from);
  void MergeFrom(const CharacterDBMallData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 refreshTime = 1;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 goodsInfo = 2;
  inline int goodsinfo_size() const;
  inline void clear_goodsinfo();
  static const int kGoodsInfoFieldNumber = 2;
  inline const ::proto_ff::ComPair64& goodsinfo(int index) const;
  inline ::proto_ff::ComPair64* mutable_goodsinfo(int index);
  inline ::proto_ff::ComPair64* add_goodsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      goodsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_goodsinfo();

  // optional uint64 dailyRefreshTime = 3;
  inline bool has_dailyrefreshtime() const;
  inline void clear_dailyrefreshtime();
  static const int kDailyRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 dailyrefreshtime() const;
  inline void set_dailyrefreshtime(::google::protobuf::uint64 value);

  // optional int32 refreshNum = 4;
  inline bool has_refreshnum() const;
  inline void clear_refreshnum();
  static const int kRefreshNumFieldNumber = 4;
  inline ::google::protobuf::int32 refreshnum() const;
  inline void set_refreshnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMallData)
 private:
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();
  inline void set_has_dailyrefreshtime();
  inline void clear_has_dailyrefreshtime();
  inline void set_has_refreshnum();
  inline void clear_has_refreshnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 refreshtime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > goodsinfo_;
  ::google::protobuf::uint64 dailyrefreshtime_;
  ::google::protobuf::int32 refreshnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMallData* default_instance_;
};
// -------------------------------------------------------------------

class GodhoodSlot : public ::google::protobuf::Message {
 public:
  GodhoodSlot();
  virtual ~GodhoodSlot();

  GodhoodSlot(const GodhoodSlot& from);

  inline GodhoodSlot& operator=(const GodhoodSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodhoodSlot& default_instance();

  void Swap(GodhoodSlot* other);

  // implements Message ----------------------------------------------

  GodhoodSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodhoodSlot& from);
  void MergeFrom(const GodhoodSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // optional bool open = 2;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 2;
  inline bool open() const;
  inline void set_open(bool value);

  // optional .proto_ff.ItemProtoInfo item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::proto_ff::ItemProtoInfo& item() const;
  inline ::proto_ff::ItemProtoInfo* mutable_item();
  inline ::proto_ff::ItemProtoInfo* release_item();
  inline void set_allocated_item(::proto_ff::ItemProtoInfo* item);

  // @@protoc_insertion_point(class_scope:proto_ff.GodhoodSlot)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;
  bool open_;
  ::proto_ff::ItemProtoInfo* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static GodhoodSlot* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBGodhoodData : public ::google::protobuf::Message {
 public:
  CharacterDBGodhoodData();
  virtual ~CharacterDBGodhoodData();

  CharacterDBGodhoodData(const CharacterDBGodhoodData& from);

  inline CharacterDBGodhoodData& operator=(const CharacterDBGodhoodData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBGodhoodData& default_instance();

  void Swap(CharacterDBGodhoodData* other);

  // implements Message ----------------------------------------------

  CharacterDBGodhoodData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBGodhoodData& from);
  void MergeFrom(const CharacterDBGodhoodData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GodhoodSlot godhoodSlot = 1;
  inline int godhoodslot_size() const;
  inline void clear_godhoodslot();
  static const int kGodhoodSlotFieldNumber = 1;
  inline const ::proto_ff::GodhoodSlot& godhoodslot(int index) const;
  inline ::proto_ff::GodhoodSlot* mutable_godhoodslot(int index);
  inline ::proto_ff::GodhoodSlot* add_godhoodslot();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodhoodSlot >&
      godhoodslot() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodhoodSlot >*
      mutable_godhoodslot();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBGodhoodData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodhoodSlot > godhoodslot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBGodhoodData* default_instance_;
};
// -------------------------------------------------------------------

class RecoveryCompleteDBData : public ::google::protobuf::Message {
 public:
  RecoveryCompleteDBData();
  virtual ~RecoveryCompleteDBData();

  RecoveryCompleteDBData(const RecoveryCompleteDBData& from);

  inline RecoveryCompleteDBData& operator=(const RecoveryCompleteDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoveryCompleteDBData& default_instance();

  void Swap(RecoveryCompleteDBData* other);

  // implements Message ----------------------------------------------

  RecoveryCompleteDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoveryCompleteDBData& from);
  void MergeFrom(const RecoveryCompleteDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 vipLevel = 2;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair completeList = 4;
  inline int completelist_size() const;
  inline void clear_completelist();
  static const int kCompleteListFieldNumber = 4;
  inline const ::proto_ff::ComPair& completelist(int index) const;
  inline ::proto_ff::ComPair* mutable_completelist(int index);
  inline ::proto_ff::ComPair* add_completelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      completelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_completelist();

  // repeated .proto_ff.ComPairBool funUnlock = 5;
  inline int fununlock_size() const;
  inline void clear_fununlock();
  static const int kFunUnlockFieldNumber = 5;
  inline const ::proto_ff::ComPairBool& fununlock(int index) const;
  inline ::proto_ff::ComPairBool* mutable_fununlock(int index);
  inline ::proto_ff::ComPairBool* add_fununlock();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPairBool >&
      fununlock() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPairBool >*
      mutable_fununlock();

  // @@protoc_insertion_point(class_scope:proto_ff.RecoveryCompleteDBData)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > completelist_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPairBool > fununlock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static RecoveryCompleteDBData* default_instance_;
};
// -------------------------------------------------------------------

class RecoveryDBReward : public ::google::protobuf::Message {
 public:
  RecoveryDBReward();
  virtual ~RecoveryDBReward();

  RecoveryDBReward(const RecoveryDBReward& from);

  inline RecoveryDBReward& operator=(const RecoveryDBReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoveryDBReward& default_instance();

  void Swap(RecoveryDBReward* other);

  // implements Message ----------------------------------------------

  RecoveryDBReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoveryDBReward& from);
  void MergeFrom(const RecoveryDBReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 day1CountMax = 2;
  inline bool has_day1countmax() const;
  inline void clear_day1countmax();
  static const int kDay1CountMaxFieldNumber = 2;
  inline ::google::protobuf::uint32 day1countmax() const;
  inline void set_day1countmax(::google::protobuf::uint32 value);

  // optional uint32 day2CountMax = 3;
  inline bool has_day2countmax() const;
  inline void clear_day2countmax();
  static const int kDay2CountMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 day2countmax() const;
  inline void set_day2countmax(::google::protobuf::uint32 value);

  // optional uint32 day1VipCountMax = 4;
  inline bool has_day1vipcountmax() const;
  inline void clear_day1vipcountmax();
  static const int kDay1VipCountMaxFieldNumber = 4;
  inline ::google::protobuf::uint32 day1vipcountmax() const;
  inline void set_day1vipcountmax(::google::protobuf::uint32 value);

  // optional uint32 day2VipCountMax = 5;
  inline bool has_day2vipcountmax() const;
  inline void clear_day2vipcountmax();
  static const int kDay2VipCountMaxFieldNumber = 5;
  inline ::google::protobuf::uint32 day2vipcountmax() const;
  inline void set_day2vipcountmax(::google::protobuf::uint32 value);

  // optional uint32 commonCount = 6;
  inline bool has_commoncount() const;
  inline void clear_commoncount();
  static const int kCommonCountFieldNumber = 6;
  inline ::google::protobuf::uint32 commoncount() const;
  inline void set_commoncount(::google::protobuf::uint32 value);

  // optional uint32 vipCount = 7;
  inline bool has_vipcount() const;
  inline void clear_vipcount();
  static const int kVipCountFieldNumber = 7;
  inline ::google::protobuf::uint32 vipcount() const;
  inline void set_vipcount(::google::protobuf::uint32 value);

  // optional uint32 goldExp = 8;
  inline bool has_goldexp() const;
  inline void clear_goldexp();
  static const int kGoldExpFieldNumber = 8;
  inline ::google::protobuf::uint32 goldexp() const;
  inline void set_goldexp(::google::protobuf::uint32 value);

  // optional uint32 diamondsExp = 9;
  inline bool has_diamondsexp() const;
  inline void clear_diamondsexp();
  static const int kDiamondsExpFieldNumber = 9;
  inline ::google::protobuf::uint32 diamondsexp() const;
  inline void set_diamondsexp(::google::protobuf::uint32 value);

  // optional uint32 goldItemCount = 10;
  inline bool has_golditemcount() const;
  inline void clear_golditemcount();
  static const int kGoldItemCountFieldNumber = 10;
  inline ::google::protobuf::uint32 golditemcount() const;
  inline void set_golditemcount(::google::protobuf::uint32 value);

  // optional uint32 diamondsItemCount = 11;
  inline bool has_diamondsitemcount() const;
  inline void clear_diamondsitemcount();
  static const int kDiamondsItemCountFieldNumber = 11;
  inline ::google::protobuf::uint32 diamondsitemcount() const;
  inline void set_diamondsitemcount(::google::protobuf::uint32 value);

  // optional uint32 needGold = 12;
  inline bool has_needgold() const;
  inline void clear_needgold();
  static const int kNeedGoldFieldNumber = 12;
  inline ::google::protobuf::uint32 needgold() const;
  inline void set_needgold(::google::protobuf::uint32 value);

  // optional uint32 needDiamonds = 13;
  inline bool has_needdiamonds() const;
  inline void clear_needdiamonds();
  static const int kNeedDiamondsFieldNumber = 13;
  inline ::google::protobuf::uint32 needdiamonds() const;
  inline void set_needdiamonds(::google::protobuf::uint32 value);

  // optional uint64 ItemId = 14;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 14;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 confid = 15;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 15;
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RecoveryDBReward)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_day1countmax();
  inline void clear_has_day1countmax();
  inline void set_has_day2countmax();
  inline void clear_has_day2countmax();
  inline void set_has_day1vipcountmax();
  inline void clear_has_day1vipcountmax();
  inline void set_has_day2vipcountmax();
  inline void clear_has_day2vipcountmax();
  inline void set_has_commoncount();
  inline void clear_has_commoncount();
  inline void set_has_vipcount();
  inline void clear_has_vipcount();
  inline void set_has_goldexp();
  inline void clear_has_goldexp();
  inline void set_has_diamondsexp();
  inline void clear_has_diamondsexp();
  inline void set_has_golditemcount();
  inline void clear_has_golditemcount();
  inline void set_has_diamondsitemcount();
  inline void clear_has_diamondsitemcount();
  inline void set_has_needgold();
  inline void clear_has_needgold();
  inline void set_has_needdiamonds();
  inline void clear_has_needdiamonds();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_confid();
  inline void clear_has_confid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 day1countmax_;
  ::google::protobuf::uint32 day2countmax_;
  ::google::protobuf::uint32 day1vipcountmax_;
  ::google::protobuf::uint32 day2vipcountmax_;
  ::google::protobuf::uint32 commoncount_;
  ::google::protobuf::uint32 vipcount_;
  ::google::protobuf::uint32 goldexp_;
  ::google::protobuf::uint32 diamondsexp_;
  ::google::protobuf::uint32 golditemcount_;
  ::google::protobuf::uint32 diamondsitemcount_;
  ::google::protobuf::uint32 needgold_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 needdiamonds_;
  ::google::protobuf::uint32 confid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static RecoveryDBReward* default_instance_;
};
// -------------------------------------------------------------------

class RecoveryDBData : public ::google::protobuf::Message {
 public:
  RecoveryDBData();
  virtual ~RecoveryDBData();

  RecoveryDBData(const RecoveryDBData& from);

  inline RecoveryDBData& operator=(const RecoveryDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoveryDBData& default_instance();

  void Swap(RecoveryDBData* other);

  // implements Message ----------------------------------------------

  RecoveryDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoveryDBData& from);
  void MergeFrom(const RecoveryDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // repeated .proto_ff.RecoveryDBReward list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::proto_ff::RecoveryDBReward& list(int index) const;
  inline ::proto_ff::RecoveryDBReward* mutable_list(int index);
  inline ::proto_ff::RecoveryDBReward* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryDBReward >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryDBReward >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:proto_ff.RecoveryDBData)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryDBReward > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static RecoveryDBData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBRecoveryData : public ::google::protobuf::Message {
 public:
  CharacterDBRecoveryData();
  virtual ~CharacterDBRecoveryData();

  CharacterDBRecoveryData(const CharacterDBRecoveryData& from);

  inline CharacterDBRecoveryData& operator=(const CharacterDBRecoveryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBRecoveryData& default_instance();

  void Swap(CharacterDBRecoveryData* other);

  // implements Message ----------------------------------------------

  CharacterDBRecoveryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBRecoveryData& from);
  void MergeFrom(const CharacterDBRecoveryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.RecoveryCompleteDBData completeDBData = 1;
  inline int completedbdata_size() const;
  inline void clear_completedbdata();
  static const int kCompleteDBDataFieldNumber = 1;
  inline const ::proto_ff::RecoveryCompleteDBData& completedbdata(int index) const;
  inline ::proto_ff::RecoveryCompleteDBData* mutable_completedbdata(int index);
  inline ::proto_ff::RecoveryCompleteDBData* add_completedbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryCompleteDBData >&
      completedbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryCompleteDBData >*
      mutable_completedbdata();

  // optional .proto_ff.RecoveryDBData recoveryDBData = 2;
  inline bool has_recoverydbdata() const;
  inline void clear_recoverydbdata();
  static const int kRecoveryDBDataFieldNumber = 2;
  inline const ::proto_ff::RecoveryDBData& recoverydbdata() const;
  inline ::proto_ff::RecoveryDBData* mutable_recoverydbdata();
  inline ::proto_ff::RecoveryDBData* release_recoverydbdata();
  inline void set_allocated_recoverydbdata(::proto_ff::RecoveryDBData* recoverydbdata);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBRecoveryData)
 private:
  inline void set_has_recoverydbdata();
  inline void clear_has_recoverydbdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryCompleteDBData > completedbdata_;
  ::proto_ff::RecoveryDBData* recoverydbdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBRecoveryData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBActivityScuffleData : public ::google::protobuf::Message {
 public:
  CharacterDBActivityScuffleData();
  virtual ~CharacterDBActivityScuffleData();

  CharacterDBActivityScuffleData(const CharacterDBActivityScuffleData& from);

  inline CharacterDBActivityScuffleData& operator=(const CharacterDBActivityScuffleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBActivityScuffleData& default_instance();

  void Swap(CharacterDBActivityScuffleData* other);

  // implements Message ----------------------------------------------

  CharacterDBActivityScuffleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBActivityScuffleData& from);
  void MergeFrom(const CharacterDBActivityScuffleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cur_cfg_id = 1;
  inline bool has_cur_cfg_id() const;
  inline void clear_cur_cfg_id();
  static const int kCurCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 cur_cfg_id() const;
  inline void set_cur_cfg_id(::google::protobuf::uint64 value);

  // optional int32 cur_points = 2;
  inline bool has_cur_points() const;
  inline void clear_cur_points();
  static const int kCurPointsFieldNumber = 2;
  inline ::google::protobuf::int32 cur_points() const;
  inline void set_cur_points(::google::protobuf::int32 value);

  // optional uint64 activity_id = 3;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 3;
  inline ::google::protobuf::uint64 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint64 value);

  // optional uint64 before_map_id = 4;
  inline bool has_before_map_id() const;
  inline void clear_before_map_id();
  static const int kBeforeMapIdFieldNumber = 4;
  inline ::google::protobuf::uint64 before_map_id() const;
  inline void set_before_map_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB before_map_point = 5;
  inline bool has_before_map_point() const;
  inline void clear_before_map_point();
  static const int kBeforeMapPointFieldNumber = 5;
  inline const ::proto_ff::Vector3PB& before_map_point() const;
  inline ::proto_ff::Vector3PB* mutable_before_map_point();
  inline ::proto_ff::Vector3PB* release_before_map_point();
  inline void set_allocated_before_map_point(::proto_ff::Vector3PB* before_map_point);

  // optional int32 last_time = 6;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 6;
  inline ::google::protobuf::int32 last_time() const;
  inline void set_last_time(::google::protobuf::int32 value);

  // optional int32 end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline ::google::protobuf::int32 end_time() const;
  inline void set_end_time(::google::protobuf::int32 value);

  // optional int32 kill_num = 8;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 8;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // optional int32 last_kill_num = 9;
  inline bool has_last_kill_num() const;
  inline void clear_last_kill_num();
  static const int kLastKillNumFieldNumber = 9;
  inline ::google::protobuf::int32 last_kill_num() const;
  inline void set_last_kill_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBActivityScuffleData)
 private:
  inline void set_has_cur_cfg_id();
  inline void clear_has_cur_cfg_id();
  inline void set_has_cur_points();
  inline void clear_has_cur_points();
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_before_map_id();
  inline void clear_has_before_map_id();
  inline void set_has_before_map_point();
  inline void clear_has_before_map_point();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();
  inline void set_has_last_kill_num();
  inline void clear_has_last_kill_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cur_cfg_id_;
  ::google::protobuf::uint64 activity_id_;
  ::google::protobuf::uint64 before_map_id_;
  ::google::protobuf::int32 cur_points_;
  ::google::protobuf::int32 last_time_;
  ::proto_ff::Vector3PB* before_map_point_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::int32 kill_num_;
  ::google::protobuf::int32 last_kill_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBActivityScuffleData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBActivityChaosDragonsData : public ::google::protobuf::Message {
 public:
  CharacterDBActivityChaosDragonsData();
  virtual ~CharacterDBActivityChaosDragonsData();

  CharacterDBActivityChaosDragonsData(const CharacterDBActivityChaosDragonsData& from);

  inline CharacterDBActivityChaosDragonsData& operator=(const CharacterDBActivityChaosDragonsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBActivityChaosDragonsData& default_instance();

  void Swap(CharacterDBActivityChaosDragonsData* other);

  // implements Message ----------------------------------------------

  CharacterDBActivityChaosDragonsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBActivityChaosDragonsData& from);
  void MergeFrom(const CharacterDBActivityChaosDragonsData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 before_map_id = 1;
  inline bool has_before_map_id() const;
  inline void clear_before_map_id();
  static const int kBeforeMapIdFieldNumber = 1;
  inline ::google::protobuf::uint64 before_map_id() const;
  inline void set_before_map_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB before_map_point = 2;
  inline bool has_before_map_point() const;
  inline void clear_before_map_point();
  static const int kBeforeMapPointFieldNumber = 2;
  inline const ::proto_ff::Vector3PB& before_map_point() const;
  inline ::proto_ff::Vector3PB* mutable_before_map_point();
  inline ::proto_ff::Vector3PB* release_before_map_point();
  inline void set_allocated_before_map_point(::proto_ff::Vector3PB* before_map_point);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBActivityChaosDragonsData)
 private:
  inline void set_has_before_map_id();
  inline void clear_has_before_map_id();
  inline void set_has_before_map_point();
  inline void clear_has_before_map_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 before_map_id_;
  ::proto_ff::Vector3PB* before_map_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBActivityChaosDragonsData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBActivityAsharmData : public ::google::protobuf::Message {
 public:
  CharacterDBActivityAsharmData();
  virtual ~CharacterDBActivityAsharmData();

  CharacterDBActivityAsharmData(const CharacterDBActivityAsharmData& from);

  inline CharacterDBActivityAsharmData& operator=(const CharacterDBActivityAsharmData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBActivityAsharmData& default_instance();

  void Swap(CharacterDBActivityAsharmData* other);

  // implements Message ----------------------------------------------

  CharacterDBActivityAsharmData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBActivityAsharmData& from);
  void MergeFrom(const CharacterDBActivityAsharmData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // optional uint64 end_time = 2;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // optional uint64 last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 cur_num = 4;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 4;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBActivityAsharmData)
 private:
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 end_time_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::uint64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBActivityAsharmData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBCombatTeamData : public ::google::protobuf::Message {
 public:
  CharacterDBCombatTeamData();
  virtual ~CharacterDBCombatTeamData();

  CharacterDBCombatTeamData(const CharacterDBCombatTeamData& from);

  inline CharacterDBCombatTeamData& operator=(const CharacterDBCombatTeamData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBCombatTeamData& default_instance();

  void Swap(CharacterDBCombatTeamData* other);

  // implements Message ----------------------------------------------

  CharacterDBCombatTeamData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBCombatTeamData& from);
  void MergeFrom(const CharacterDBCombatTeamData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team_id = 1;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 team_id() const;
  inline void set_team_id(::google::protobuf::int32 value);

  // optional uint64 team_end_time = 2;
  inline bool has_team_end_time() const;
  inline void clear_team_end_time();
  static const int kTeamEndTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 team_end_time() const;
  inline void set_team_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBCombatTeamData)
 private:
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_team_end_time();
  inline void clear_has_team_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 team_end_time_;
  ::google::protobuf::int32 team_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBCombatTeamData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSoloData : public ::google::protobuf::Message {
 public:
  CharacterDBSoloData();
  virtual ~CharacterDBSoloData();

  CharacterDBSoloData(const CharacterDBSoloData& from);

  inline CharacterDBSoloData& operator=(const CharacterDBSoloData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSoloData& default_instance();

  void Swap(CharacterDBSoloData* other);

  // implements Message ----------------------------------------------

  CharacterDBSoloData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSoloData& from);
  void MergeFrom(const CharacterDBSoloData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rewarded_join_index = 1;
  inline int rewarded_join_index_size() const;
  inline void clear_rewarded_join_index();
  static const int kRewardedJoinIndexFieldNumber = 1;
  inline ::google::protobuf::int32 rewarded_join_index(int index) const;
  inline void set_rewarded_join_index(int index, ::google::protobuf::int32 value);
  inline void add_rewarded_join_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rewarded_join_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rewarded_join_index();

  // optional int32 my_solo_num = 2;
  inline bool has_my_solo_num() const;
  inline void clear_my_solo_num();
  static const int kMySoloNumFieldNumber = 2;
  inline ::google::protobuf::int32 my_solo_num() const;
  inline void set_my_solo_num(::google::protobuf::int32 value);

  // repeated int32 rewarded_stage_index = 3;
  inline int rewarded_stage_index_size() const;
  inline void clear_rewarded_stage_index();
  static const int kRewardedStageIndexFieldNumber = 3;
  inline ::google::protobuf::int32 rewarded_stage_index(int index) const;
  inline void set_rewarded_stage_index(int index, ::google::protobuf::int32 value);
  inline void add_rewarded_stage_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rewarded_stage_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rewarded_stage_index();

  // repeated int32 rewarded_day_stage_index = 4;
  inline int rewarded_day_stage_index_size() const;
  inline void clear_rewarded_day_stage_index();
  static const int kRewardedDayStageIndexFieldNumber = 4;
  inline ::google::protobuf::int32 rewarded_day_stage_index(int index) const;
  inline void set_rewarded_day_stage_index(int index, ::google::protobuf::int32 value);
  inline void add_rewarded_day_stage_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rewarded_day_stage_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rewarded_day_stage_index();

  // optional uint64 solo_time_end = 5;
  inline bool has_solo_time_end() const;
  inline void clear_solo_time_end();
  static const int kSoloTimeEndFieldNumber = 5;
  inline ::google::protobuf::uint64 solo_time_end() const;
  inline void set_solo_time_end(::google::protobuf::uint64 value);

  // optional int32 solo_season = 6;
  inline bool has_solo_season() const;
  inline void clear_solo_season();
  static const int kSoloSeasonFieldNumber = 6;
  inline ::google::protobuf::int32 solo_season() const;
  inline void set_solo_season(::google::protobuf::int32 value);

  // optional int32 cur_buy_num = 7;
  inline bool has_cur_buy_num() const;
  inline void clear_cur_buy_num();
  static const int kCurBuyNumFieldNumber = 7;
  inline ::google::protobuf::int32 cur_buy_num() const;
  inline void set_cur_buy_num(::google::protobuf::int32 value);

  // optional uint64 last_time = 8;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 last_time() const;
  inline void set_last_time(::google::protobuf::uint64 value);

  // optional int32 lose_num = 9;
  inline bool has_lose_num() const;
  inline void clear_lose_num();
  static const int kLoseNumFieldNumber = 9;
  inline ::google::protobuf::int32 lose_num() const;
  inline void set_lose_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSoloData)
 private:
  inline void set_has_my_solo_num();
  inline void clear_has_my_solo_num();
  inline void set_has_solo_time_end();
  inline void clear_has_solo_time_end();
  inline void set_has_solo_season();
  inline void clear_has_solo_season();
  inline void set_has_cur_buy_num();
  inline void clear_has_cur_buy_num();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_lose_num();
  inline void clear_has_lose_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rewarded_join_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rewarded_stage_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rewarded_day_stage_index_;
  ::google::protobuf::int32 my_solo_num_;
  ::google::protobuf::int32 solo_season_;
  ::google::protobuf::uint64 solo_time_end_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::int32 cur_buy_num_;
  ::google::protobuf::int32 lose_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSoloData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBAtBoxData : public ::google::protobuf::Message {
 public:
  CharacterDBAtBoxData();
  virtual ~CharacterDBAtBoxData();

  CharacterDBAtBoxData(const CharacterDBAtBoxData& from);

  inline CharacterDBAtBoxData& operator=(const CharacterDBAtBoxData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBAtBoxData& default_instance();

  void Swap(CharacterDBAtBoxData* other);

  // implements Message ----------------------------------------------

  CharacterDBAtBoxData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBAtBoxData& from);
  void MergeFrom(const CharacterDBAtBoxData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 use_count = 1;
  inline bool has_use_count() const;
  inline void clear_use_count();
  static const int kUseCountFieldNumber = 1;
  inline ::google::protobuf::int32 use_count() const;
  inline void set_use_count(::google::protobuf::int32 value);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBAtBoxData)
 private:
  inline void set_has_use_count();
  inline void clear_has_use_count();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 use_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBAtBoxData* default_instance_;
};
// -------------------------------------------------------------------

class CharDBAncientShopProto : public ::google::protobuf::Message {
 public:
  CharDBAncientShopProto();
  virtual ~CharDBAncientShopProto();

  CharDBAncientShopProto(const CharDBAncientShopProto& from);

  inline CharDBAncientShopProto& operator=(const CharDBAncientShopProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharDBAncientShopProto& default_instance();

  void Swap(CharDBAncientShopProto* other);

  // implements Message ----------------------------------------------

  CharDBAncientShopProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharDBAncientShopProto& from);
  void MergeFrom(const CharDBAncientShopProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // optional int32 exchge = 4;
  inline bool has_exchge() const;
  inline void clear_exchge();
  static const int kExchgeFieldNumber = 4;
  inline ::google::protobuf::int32 exchge() const;
  inline void set_exchge(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharDBAncientShopProto)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_exchge();
  inline void clear_has_exchge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 exchge_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharDBAncientShopProto* default_instance_;
};
// -------------------------------------------------------------------

class CharDBAncientShopData : public ::google::protobuf::Message {
 public:
  CharDBAncientShopData();
  virtual ~CharDBAncientShopData();

  CharDBAncientShopData(const CharDBAncientShopData& from);

  inline CharDBAncientShopData& operator=(const CharDBAncientShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharDBAncientShopData& default_instance();

  void Swap(CharDBAncientShopData* other);

  // implements Message ----------------------------------------------

  CharDBAncientShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharDBAncientShopData& from);
  void MergeFrom(const CharDBAncientShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharDBAncientShopProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::CharDBAncientShopProto& info(int index) const;
  inline ::proto_ff::CharDBAncientShopProto* mutable_info(int index);
  inline ::proto_ff::CharDBAncientShopProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDBAncientShopProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDBAncientShopProto >*
      mutable_info();

  // optional int64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int64 score() const;
  inline void set_score(::google::protobuf::int64 value);

  // optional int32 score_cnt = 3;
  inline bool has_score_cnt() const;
  inline void clear_score_cnt();
  static const int kScoreCntFieldNumber = 3;
  inline ::google::protobuf::int32 score_cnt() const;
  inline void set_score_cnt(::google::protobuf::int32 value);

  // optional int32 dia_cnt = 4;
  inline bool has_dia_cnt() const;
  inline void clear_dia_cnt();
  static const int kDiaCntFieldNumber = 4;
  inline ::google::protobuf::int32 dia_cnt() const;
  inline void set_dia_cnt(::google::protobuf::int32 value);

  // optional int32 free_cnt = 5;
  inline bool has_free_cnt() const;
  inline void clear_free_cnt();
  static const int kFreeCntFieldNumber = 5;
  inline ::google::protobuf::int32 free_cnt() const;
  inline void set_free_cnt(::google::protobuf::int32 value);

  // optional uint64 fresh_time = 6;
  inline bool has_fresh_time() const;
  inline void clear_fresh_time();
  static const int kFreshTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 fresh_time() const;
  inline void set_fresh_time(::google::protobuf::uint64 value);

  // optional uint64 reset_time = 7;
  inline bool has_reset_time() const;
  inline void clear_reset_time();
  static const int kResetTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 reset_time() const;
  inline void set_reset_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharDBAncientShopData)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_score_cnt();
  inline void clear_has_score_cnt();
  inline void set_has_dia_cnt();
  inline void clear_has_dia_cnt();
  inline void set_has_free_cnt();
  inline void clear_has_free_cnt();
  inline void set_has_fresh_time();
  inline void clear_has_fresh_time();
  inline void set_has_reset_time();
  inline void clear_has_reset_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDBAncientShopProto > info_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::int32 score_cnt_;
  ::google::protobuf::int32 dia_cnt_;
  ::google::protobuf::uint64 fresh_time_;
  ::google::protobuf::uint64 reset_time_;
  ::google::protobuf::int32 free_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharDBAncientShopData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBAncientData : public ::google::protobuf::Message {
 public:
  CharacterDBAncientData();
  virtual ~CharacterDBAncientData();

  CharacterDBAncientData(const CharacterDBAncientData& from);

  inline CharacterDBAncientData& operator=(const CharacterDBAncientData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBAncientData& default_instance();

  void Swap(CharacterDBAncientData* other);

  // implements Message ----------------------------------------------

  CharacterDBAncientData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBAncientData& from);
  void MergeFrom(const CharacterDBAncientData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 bless_value = 1;
  inline bool has_bless_value() const;
  inline void clear_bless_value();
  static const int kBlessValueFieldNumber = 1;
  inline ::google::protobuf::int64 bless_value() const;
  inline void set_bless_value(::google::protobuf::int64 value);

  // optional int64 score_incr = 2;
  inline bool has_score_incr() const;
  inline void clear_score_incr();
  static const int kScoreIncrFieldNumber = 2;
  inline ::google::protobuf::int64 score_incr() const;
  inline void set_score_incr(::google::protobuf::int64 value);

  // optional .proto_ff.CharDBAncientShopData shop = 3;
  inline bool has_shop() const;
  inline void clear_shop();
  static const int kShopFieldNumber = 3;
  inline const ::proto_ff::CharDBAncientShopData& shop() const;
  inline ::proto_ff::CharDBAncientShopData* mutable_shop();
  inline ::proto_ff::CharDBAncientShopData* release_shop();
  inline void set_allocated_shop(::proto_ff::CharDBAncientShopData* shop);

  // optional uint64 bless_reset_time = 4;
  inline bool has_bless_reset_time() const;
  inline void clear_bless_reset_time();
  static const int kBlessResetTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 bless_reset_time() const;
  inline void set_bless_reset_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBAncientData)
 private:
  inline void set_has_bless_value();
  inline void clear_has_bless_value();
  inline void set_has_score_incr();
  inline void clear_has_score_incr();
  inline void set_has_shop();
  inline void clear_has_shop();
  inline void set_has_bless_reset_time();
  inline void clear_has_bless_reset_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bless_value_;
  ::google::protobuf::int64 score_incr_;
  ::proto_ff::CharDBAncientShopData* shop_;
  ::google::protobuf::uint64 bless_reset_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBAncientData* default_instance_;
};
// -------------------------------------------------------------------

class ChooseGiftData : public ::google::protobuf::Message {
 public:
  ChooseGiftData();
  virtual ~ChooseGiftData();

  ChooseGiftData(const ChooseGiftData& from);

  inline ChooseGiftData& operator=(const ChooseGiftData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChooseGiftData& default_instance();

  void Swap(ChooseGiftData* other);

  // implements Message ----------------------------------------------

  ChooseGiftData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChooseGiftData& from);
  void MergeFrom(const ChooseGiftData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeTime = 1;
  inline bool has_activetime() const;
  inline void clear_activetime();
  static const int kActiveTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 activetime() const;
  inline void set_activetime(::google::protobuf::uint64 value);

  // optional int32 headState = 2;
  inline bool has_headstate() const;
  inline void clear_headstate();
  static const int kHeadStateFieldNumber = 2;
  inline ::google::protobuf::int32 headstate() const;
  inline void set_headstate(::google::protobuf::int32 value);

  // optional int32 rechargeIndex = 3;
  inline bool has_rechargeindex() const;
  inline void clear_rechargeindex();
  static const int kRechargeIndexFieldNumber = 3;
  inline ::google::protobuf::int32 rechargeindex() const;
  inline void set_rechargeindex(::google::protobuf::int32 value);

  // optional int32 rechargeIndexState = 4;
  inline bool has_rechargeindexstate() const;
  inline void clear_rechargeindexstate();
  static const int kRechargeIndexStateFieldNumber = 4;
  inline ::google::protobuf::int32 rechargeindexstate() const;
  inline void set_rechargeindexstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChooseGiftData)
 private:
  inline void set_has_activetime();
  inline void clear_has_activetime();
  inline void set_has_headstate();
  inline void clear_has_headstate();
  inline void set_has_rechargeindex();
  inline void clear_has_rechargeindex();
  inline void set_has_rechargeindexstate();
  inline void clear_has_rechargeindexstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activetime_;
  ::google::protobuf::int32 headstate_;
  ::google::protobuf::int32 rechargeindex_;
  ::google::protobuf::int32 rechargeindexstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ChooseGiftData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBActivityData : public ::google::protobuf::Message {
 public:
  CharacterDBActivityData();
  virtual ~CharacterDBActivityData();

  CharacterDBActivityData(const CharacterDBActivityData& from);

  inline CharacterDBActivityData& operator=(const CharacterDBActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBActivityData& default_instance();

  void Swap(CharacterDBActivityData* other);

  // implements Message ----------------------------------------------

  CharacterDBActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBActivityData& from);
  void MergeFrom(const CharacterDBActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CharacterDBActivityScuffleData scuffle_cross_data = 1;
  inline bool has_scuffle_cross_data() const;
  inline void clear_scuffle_cross_data();
  static const int kScuffleCrossDataFieldNumber = 1;
  inline const ::proto_ff::CharacterDBActivityScuffleData& scuffle_cross_data() const;
  inline ::proto_ff::CharacterDBActivityScuffleData* mutable_scuffle_cross_data();
  inline ::proto_ff::CharacterDBActivityScuffleData* release_scuffle_cross_data();
  inline void set_allocated_scuffle_cross_data(::proto_ff::CharacterDBActivityScuffleData* scuffle_cross_data);

  // optional .proto_ff.CharacterDBActivityScuffleData scuffle_local_data = 2;
  inline bool has_scuffle_local_data() const;
  inline void clear_scuffle_local_data();
  static const int kScuffleLocalDataFieldNumber = 2;
  inline const ::proto_ff::CharacterDBActivityScuffleData& scuffle_local_data() const;
  inline ::proto_ff::CharacterDBActivityScuffleData* mutable_scuffle_local_data();
  inline ::proto_ff::CharacterDBActivityScuffleData* release_scuffle_local_data();
  inline void set_allocated_scuffle_local_data(::proto_ff::CharacterDBActivityScuffleData* scuffle_local_data);

  // optional .proto_ff.CharacterDBActivityChaosDragonsData chaos_dragons_data = 3;
  inline bool has_chaos_dragons_data() const;
  inline void clear_chaos_dragons_data();
  static const int kChaosDragonsDataFieldNumber = 3;
  inline const ::proto_ff::CharacterDBActivityChaosDragonsData& chaos_dragons_data() const;
  inline ::proto_ff::CharacterDBActivityChaosDragonsData* mutable_chaos_dragons_data();
  inline ::proto_ff::CharacterDBActivityChaosDragonsData* release_chaos_dragons_data();
  inline void set_allocated_chaos_dragons_data(::proto_ff::CharacterDBActivityChaosDragonsData* chaos_dragons_data);

  // optional .proto_ff.CharacterDBActivityAsharmData asharm_data = 4;
  inline bool has_asharm_data() const;
  inline void clear_asharm_data();
  static const int kAsharmDataFieldNumber = 4;
  inline const ::proto_ff::CharacterDBActivityAsharmData& asharm_data() const;
  inline ::proto_ff::CharacterDBActivityAsharmData* mutable_asharm_data();
  inline ::proto_ff::CharacterDBActivityAsharmData* release_asharm_data();
  inline void set_allocated_asharm_data(::proto_ff::CharacterDBActivityAsharmData* asharm_data);

  // optional .proto_ff.CharacterDBSoloData solo_data = 5;
  inline bool has_solo_data() const;
  inline void clear_solo_data();
  static const int kSoloDataFieldNumber = 5;
  inline const ::proto_ff::CharacterDBSoloData& solo_data() const;
  inline ::proto_ff::CharacterDBSoloData* mutable_solo_data();
  inline ::proto_ff::CharacterDBSoloData* release_solo_data();
  inline void set_allocated_solo_data(::proto_ff::CharacterDBSoloData* solo_data);

  // optional .proto_ff.CharacterDBAtBoxData box_data = 6;
  inline bool has_box_data() const;
  inline void clear_box_data();
  static const int kBoxDataFieldNumber = 6;
  inline const ::proto_ff::CharacterDBAtBoxData& box_data() const;
  inline ::proto_ff::CharacterDBAtBoxData* mutable_box_data();
  inline ::proto_ff::CharacterDBAtBoxData* release_box_data();
  inline void set_allocated_box_data(::proto_ff::CharacterDBAtBoxData* box_data);

  // optional .proto_ff.CharacterDBAncientData ancient_data = 7;
  inline bool has_ancient_data() const;
  inline void clear_ancient_data();
  static const int kAncientDataFieldNumber = 7;
  inline const ::proto_ff::CharacterDBAncientData& ancient_data() const;
  inline ::proto_ff::CharacterDBAncientData* mutable_ancient_data();
  inline ::proto_ff::CharacterDBAncientData* release_ancient_data();
  inline void set_allocated_ancient_data(::proto_ff::CharacterDBAncientData* ancient_data);

  // optional .proto_ff.ChooseGiftData choosegift_data = 8;
  inline bool has_choosegift_data() const;
  inline void clear_choosegift_data();
  static const int kChoosegiftDataFieldNumber = 8;
  inline const ::proto_ff::ChooseGiftData& choosegift_data() const;
  inline ::proto_ff::ChooseGiftData* mutable_choosegift_data();
  inline ::proto_ff::ChooseGiftData* release_choosegift_data();
  inline void set_allocated_choosegift_data(::proto_ff::ChooseGiftData* choosegift_data);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBActivityData)
 private:
  inline void set_has_scuffle_cross_data();
  inline void clear_has_scuffle_cross_data();
  inline void set_has_scuffle_local_data();
  inline void clear_has_scuffle_local_data();
  inline void set_has_chaos_dragons_data();
  inline void clear_has_chaos_dragons_data();
  inline void set_has_asharm_data();
  inline void clear_has_asharm_data();
  inline void set_has_solo_data();
  inline void clear_has_solo_data();
  inline void set_has_box_data();
  inline void clear_has_box_data();
  inline void set_has_ancient_data();
  inline void clear_has_ancient_data();
  inline void set_has_choosegift_data();
  inline void clear_has_choosegift_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CharacterDBActivityScuffleData* scuffle_cross_data_;
  ::proto_ff::CharacterDBActivityScuffleData* scuffle_local_data_;
  ::proto_ff::CharacterDBActivityChaosDragonsData* chaos_dragons_data_;
  ::proto_ff::CharacterDBActivityAsharmData* asharm_data_;
  ::proto_ff::CharacterDBSoloData* solo_data_;
  ::proto_ff::CharacterDBAtBoxData* box_data_;
  ::proto_ff::CharacterDBAncientData* ancient_data_;
  ::proto_ff::ChooseGiftData* choosegift_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBActivityData* default_instance_;
};
// -------------------------------------------------------------------

class SOAcitveTotalRechargeData : public ::google::protobuf::Message {
 public:
  SOAcitveTotalRechargeData();
  virtual ~SOAcitveTotalRechargeData();

  SOAcitveTotalRechargeData(const SOAcitveTotalRechargeData& from);

  inline SOAcitveTotalRechargeData& operator=(const SOAcitveTotalRechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SOAcitveTotalRechargeData& default_instance();

  void Swap(SOAcitveTotalRechargeData* other);

  // implements Message ----------------------------------------------

  SOAcitveTotalRechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SOAcitveTotalRechargeData& from);
  void MergeFrom(const SOAcitveTotalRechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 pageId = 2;
  inline bool has_pageid() const;
  inline void clear_pageid();
  static const int kPageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 pageid() const;
  inline void set_pageid(::google::protobuf::uint32 value);

  // optional uint64 rechargeValue = 3;
  inline bool has_rechargevalue() const;
  inline void clear_rechargevalue();
  static const int kRechargeValueFieldNumber = 3;
  inline ::google::protobuf::uint64 rechargevalue() const;
  inline void set_rechargevalue(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 4;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 4;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // optional uint64 rechargeholy = 5;
  inline bool has_rechargeholy() const;
  inline void clear_rechargeholy();
  static const int kRechargeholyFieldNumber = 5;
  inline ::google::protobuf::uint64 rechargeholy() const;
  inline void set_rechargeholy(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SOAcitveTotalRechargeData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_pageid();
  inline void clear_has_pageid();
  inline void set_has_rechargevalue();
  inline void clear_has_rechargevalue();
  inline void set_has_rechargeholy();
  inline void clear_has_rechargeholy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 rechargevalue_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::uint64 rechargeholy_;
  ::google::protobuf::uint32 pageid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static SOAcitveTotalRechargeData* default_instance_;
};
// -------------------------------------------------------------------

class SOAcitveAdvanceData : public ::google::protobuf::Message {
 public:
  SOAcitveAdvanceData();
  virtual ~SOAcitveAdvanceData();

  SOAcitveAdvanceData(const SOAcitveAdvanceData& from);

  inline SOAcitveAdvanceData& operator=(const SOAcitveAdvanceData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SOAcitveAdvanceData& default_instance();

  void Swap(SOAcitveAdvanceData* other);

  // implements Message ----------------------------------------------

  SOAcitveAdvanceData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SOAcitveAdvanceData& from);
  void MergeFrom(const SOAcitveAdvanceData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 pageId = 2;
  inline bool has_pageid() const;
  inline void clear_pageid();
  static const int kPageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 pageid() const;
  inline void set_pageid(::google::protobuf::uint32 value);

  // optional uint64 advanceValue = 3;
  inline bool has_advancevalue() const;
  inline void clear_advancevalue();
  static const int kAdvanceValueFieldNumber = 3;
  inline ::google::protobuf::uint64 advancevalue() const;
  inline void set_advancevalue(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair getState = 4;
  inline int getstate_size() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 4;
  inline const ::proto_ff::ComPair& getstate(int index) const;
  inline ::proto_ff::ComPair* mutable_getstate(int index);
  inline ::proto_ff::ComPair* add_getstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      getstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_getstate();

  // repeated .proto_ff.ComPair64 advanceValueMap = 5;
  inline int advancevaluemap_size() const;
  inline void clear_advancevaluemap();
  static const int kAdvanceValueMapFieldNumber = 5;
  inline const ::proto_ff::ComPair64& advancevaluemap(int index) const;
  inline ::proto_ff::ComPair64* mutable_advancevaluemap(int index);
  inline ::proto_ff::ComPair64* add_advancevaluemap();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      advancevaluemap() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_advancevaluemap();

  // @@protoc_insertion_point(class_scope:proto_ff.SOAcitveAdvanceData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_pageid();
  inline void clear_has_pageid();
  inline void set_has_advancevalue();
  inline void clear_has_advancevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::uint64 advancevalue_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > getstate_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > advancevaluemap_;
  ::google::protobuf::uint32 pageid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static SOAcitveAdvanceData* default_instance_;
};
// -------------------------------------------------------------------

class SOAcitveGoodsData : public ::google::protobuf::Message {
 public:
  SOAcitveGoodsData();
  virtual ~SOAcitveGoodsData();

  SOAcitveGoodsData(const SOAcitveGoodsData& from);

  inline SOAcitveGoodsData& operator=(const SOAcitveGoodsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SOAcitveGoodsData& default_instance();

  void Swap(SOAcitveGoodsData* other);

  // implements Message ----------------------------------------------

  SOAcitveGoodsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SOAcitveGoodsData& from);
  void MergeFrom(const SOAcitveGoodsData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 activeId = 1;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint64 activeid() const;
  inline void set_activeid(::google::protobuf::uint64 value);

  // optional uint32 pageId = 2;
  inline bool has_pageid() const;
  inline void clear_pageid();
  static const int kPageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 pageid() const;
  inline void set_pageid(::google::protobuf::uint32 value);

  // repeated .proto_ff.ComPair64 buyCount = 3;
  inline int buycount_size() const;
  inline void clear_buycount();
  static const int kBuyCountFieldNumber = 3;
  inline const ::proto_ff::ComPair64& buycount(int index) const;
  inline ::proto_ff::ComPair64* mutable_buycount(int index);
  inline ::proto_ff::ComPair64* add_buycount();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      buycount() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_buycount();

  // @@protoc_insertion_point(class_scope:proto_ff.SOAcitveGoodsData)
 private:
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_pageid();
  inline void clear_has_pageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 activeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > buycount_;
  ::google::protobuf::uint32 pageid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static SOAcitveGoodsData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSOAcitveData : public ::google::protobuf::Message {
 public:
  CharacterDBSOAcitveData();
  virtual ~CharacterDBSOAcitveData();

  CharacterDBSOAcitveData(const CharacterDBSOAcitveData& from);

  inline CharacterDBSOAcitveData& operator=(const CharacterDBSOAcitveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSOAcitveData& default_instance();

  void Swap(CharacterDBSOAcitveData* other);

  // implements Message ----------------------------------------------

  CharacterDBSOAcitveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSOAcitveData& from);
  void MergeFrom(const CharacterDBSOAcitveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.SOAcitveTotalRechargeData totalRecharge = 1;
  inline int totalrecharge_size() const;
  inline void clear_totalrecharge();
  static const int kTotalRechargeFieldNumber = 1;
  inline const ::proto_ff::SOAcitveTotalRechargeData& totalrecharge(int index) const;
  inline ::proto_ff::SOAcitveTotalRechargeData* mutable_totalrecharge(int index);
  inline ::proto_ff::SOAcitveTotalRechargeData* add_totalrecharge();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveTotalRechargeData >&
      totalrecharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveTotalRechargeData >*
      mutable_totalrecharge();

  // repeated .proto_ff.SOAcitveAdvanceData advance = 2;
  inline int advance_size() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 2;
  inline const ::proto_ff::SOAcitveAdvanceData& advance(int index) const;
  inline ::proto_ff::SOAcitveAdvanceData* mutable_advance(int index);
  inline ::proto_ff::SOAcitveAdvanceData* add_advance();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveAdvanceData >&
      advance() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveAdvanceData >*
      mutable_advance();

  // repeated .proto_ff.SOAcitveGoodsData goods = 3;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 3;
  inline const ::proto_ff::SOAcitveGoodsData& goods(int index) const;
  inline ::proto_ff::SOAcitveGoodsData* mutable_goods(int index);
  inline ::proto_ff::SOAcitveGoodsData* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveGoodsData >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveGoodsData >*
      mutable_goods();

  // repeated .proto_ff.ComPair64 redPointClickData = 4;
  inline int redpointclickdata_size() const;
  inline void clear_redpointclickdata();
  static const int kRedPointClickDataFieldNumber = 4;
  inline const ::proto_ff::ComPair64& redpointclickdata(int index) const;
  inline ::proto_ff::ComPair64* mutable_redpointclickdata(int index);
  inline ::proto_ff::ComPair64* add_redpointclickdata();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      redpointclickdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_redpointclickdata();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSOAcitveData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveTotalRechargeData > totalrecharge_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveAdvanceData > advance_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveGoodsData > goods_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > redpointclickdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSOAcitveData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBUseItemData : public ::google::protobuf::Message {
 public:
  CharacterDBUseItemData();
  virtual ~CharacterDBUseItemData();

  CharacterDBUseItemData(const CharacterDBUseItemData& from);

  inline CharacterDBUseItemData& operator=(const CharacterDBUseItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBUseItemData& default_instance();

  void Swap(CharacterDBUseItemData* other);

  // implements Message ----------------------------------------------

  CharacterDBUseItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBUseItemData& from);
  void MergeFrom(const CharacterDBUseItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair64 itemUseTimes = 1;
  inline int itemusetimes_size() const;
  inline void clear_itemusetimes();
  static const int kItemUseTimesFieldNumber = 1;
  inline const ::proto_ff::ComPair64& itemusetimes(int index) const;
  inline ::proto_ff::ComPair64* mutable_itemusetimes(int index);
  inline ::proto_ff::ComPair64* add_itemusetimes();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      itemusetimes() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_itemusetimes();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBUseItemData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > itemusetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBUseItemData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBDayUseItemData : public ::google::protobuf::Message {
 public:
  CharacterDBDayUseItemData();
  virtual ~CharacterDBDayUseItemData();

  CharacterDBDayUseItemData(const CharacterDBDayUseItemData& from);

  inline CharacterDBDayUseItemData& operator=(const CharacterDBDayUseItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBDayUseItemData& default_instance();

  void Swap(CharacterDBDayUseItemData* other);

  // implements Message ----------------------------------------------

  CharacterDBDayUseItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBDayUseItemData& from);
  void MergeFrom(const CharacterDBDayUseItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint64 day() const;
  inline void set_day(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 itemUseTimes = 2;
  inline int itemusetimes_size() const;
  inline void clear_itemusetimes();
  static const int kItemUseTimesFieldNumber = 2;
  inline const ::proto_ff::ComPair64& itemusetimes(int index) const;
  inline ::proto_ff::ComPair64* mutable_itemusetimes(int index);
  inline ::proto_ff::ComPair64* add_itemusetimes();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      itemusetimes() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_itemusetimes();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBDayUseItemData)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 day_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > itemusetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBDayUseItemData* default_instance_;
};
// -------------------------------------------------------------------

class MysteryShopDBData : public ::google::protobuf::Message {
 public:
  MysteryShopDBData();
  virtual ~MysteryShopDBData();

  MysteryShopDBData(const MysteryShopDBData& from);

  inline MysteryShopDBData& operator=(const MysteryShopDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MysteryShopDBData& default_instance();

  void Swap(MysteryShopDBData* other);

  // implements Message ----------------------------------------------

  MysteryShopDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MysteryShopDBData& from);
  void MergeFrom(const MysteryShopDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // optional uint64 nStartTime = 2;
  inline bool has_nstarttime() const;
  inline void clear_nstarttime();
  static const int kNStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 nstarttime() const;
  inline void set_nstarttime(::google::protobuf::uint64 value);

  // optional uint64 nFinishTime = 3;
  inline bool has_nfinishtime() const;
  inline void clear_nfinishtime();
  static const int kNFinishTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 nfinishtime() const;
  inline void set_nfinishtime(::google::protobuf::uint64 value);

  // optional uint32 nState = 4;
  inline bool has_nstate() const;
  inline void clear_nstate();
  static const int kNStateFieldNumber = 4;
  inline ::google::protobuf::uint32 nstate() const;
  inline void set_nstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MysteryShopDBData)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_nstarttime();
  inline void clear_has_nstarttime();
  inline void set_has_nfinishtime();
  inline void clear_has_nfinishtime();
  inline void set_has_nstate();
  inline void clear_has_nstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 nstarttime_;
  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 nstate_;
  ::google::protobuf::uint64 nfinishtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static MysteryShopDBData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBMysteryShopData : public ::google::protobuf::Message {
 public:
  CharacterDBMysteryShopData();
  virtual ~CharacterDBMysteryShopData();

  CharacterDBMysteryShopData(const CharacterDBMysteryShopData& from);

  inline CharacterDBMysteryShopData& operator=(const CharacterDBMysteryShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBMysteryShopData& default_instance();

  void Swap(CharacterDBMysteryShopData* other);

  // implements Message ----------------------------------------------

  CharacterDBMysteryShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBMysteryShopData& from);
  void MergeFrom(const CharacterDBMysteryShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.MysteryShopDBData dataList = 1;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDataListFieldNumber = 1;
  inline const ::proto_ff::MysteryShopDBData& datalist(int index) const;
  inline ::proto_ff::MysteryShopDBData* mutable_datalist(int index);
  inline ::proto_ff::MysteryShopDBData* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MysteryShopDBData >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MysteryShopDBData >*
      mutable_datalist();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBMysteryShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::MysteryShopDBData > datalist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBMysteryShopData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBPackageTestRebateData : public ::google::protobuf::Message {
 public:
  CharacterDBPackageTestRebateData();
  virtual ~CharacterDBPackageTestRebateData();

  CharacterDBPackageTestRebateData(const CharacterDBPackageTestRebateData& from);

  inline CharacterDBPackageTestRebateData& operator=(const CharacterDBPackageTestRebateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBPackageTestRebateData& default_instance();

  void Swap(CharacterDBPackageTestRebateData* other);

  // implements Message ----------------------------------------------

  CharacterDBPackageTestRebateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBPackageTestRebateData& from);
  void MergeFrom(const CharacterDBPackageTestRebateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bChecked = 1;
  inline bool has_bchecked() const;
  inline void clear_bchecked();
  static const int kBCheckedFieldNumber = 1;
  inline bool bchecked() const;
  inline void set_bchecked(bool value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 rechargeValue = 3;
  inline bool has_rechargevalue() const;
  inline void clear_rechargevalue();
  static const int kRechargeValueFieldNumber = 3;
  inline ::google::protobuf::uint32 rechargevalue() const;
  inline void set_rechargevalue(::google::protobuf::uint32 value);

  // optional uint32 powerRank = 4;
  inline bool has_powerrank() const;
  inline void clear_powerrank();
  static const int kPowerRankFieldNumber = 4;
  inline ::google::protobuf::uint32 powerrank() const;
  inline void set_powerrank(::google::protobuf::uint32 value);

  // optional uint64 deadline = 5;
  inline bool has_deadline() const;
  inline void clear_deadline();
  static const int kDeadlineFieldNumber = 5;
  inline ::google::protobuf::uint64 deadline() const;
  inline void set_deadline(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComPair64 rewardStateMap = 6;
  inline int rewardstatemap_size() const;
  inline void clear_rewardstatemap();
  static const int kRewardStateMapFieldNumber = 6;
  inline const ::proto_ff::ComPair64& rewardstatemap(int index) const;
  inline ::proto_ff::ComPair64* mutable_rewardstatemap(int index);
  inline ::proto_ff::ComPair64* add_rewardstatemap();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      rewardstatemap() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_rewardstatemap();

  // repeated .proto_ff.ComPair64 backStateMap = 7;
  inline int backstatemap_size() const;
  inline void clear_backstatemap();
  static const int kBackStateMapFieldNumber = 7;
  inline const ::proto_ff::ComPair64& backstatemap(int index) const;
  inline ::proto_ff::ComPair64* mutable_backstatemap(int index);
  inline ::proto_ff::ComPair64* add_backstatemap();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      backstatemap() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_backstatemap();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBPackageTestRebateData)
 private:
  inline void set_has_bchecked();
  inline void clear_has_bchecked();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_rechargevalue();
  inline void clear_has_rechargevalue();
  inline void set_has_powerrank();
  inline void clear_has_powerrank();
  inline void set_has_deadline();
  inline void clear_has_deadline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bchecked_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 rechargevalue_;
  ::google::protobuf::uint32 powerrank_;
  ::google::protobuf::uint64 deadline_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > rewardstatemap_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > backstatemap_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBPackageTestRebateData* default_instance_;
};
// -------------------------------------------------------------------

class FuncFightDBData : public ::google::protobuf::Message {
 public:
  FuncFightDBData();
  virtual ~FuncFightDBData();

  FuncFightDBData(const FuncFightDBData& from);

  inline FuncFightDBData& operator=(const FuncFightDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FuncFightDBData& default_instance();

  void Swap(FuncFightDBData* other);

  // implements Message ----------------------------------------------

  FuncFightDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FuncFightDBData& from);
  void MergeFrom(const FuncFightDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 equip_total = 1;
  inline bool has_equip_total() const;
  inline void clear_equip_total();
  static const int kEquipTotalFieldNumber = 1;
  inline ::google::protobuf::int64 equip_total() const;
  inline void set_equip_total(::google::protobuf::int64 value);

  // optional int64 equip_base = 2;
  inline bool has_equip_base() const;
  inline void clear_equip_base();
  static const int kEquipBaseFieldNumber = 2;
  inline ::google::protobuf::int64 equip_base() const;
  inline void set_equip_base(::google::protobuf::int64 value);

  // optional int64 equip_strong = 3;
  inline bool has_equip_strong() const;
  inline void clear_equip_strong();
  static const int kEquipStrongFieldNumber = 3;
  inline ::google::protobuf::int64 equip_strong() const;
  inline void set_equip_strong(::google::protobuf::int64 value);

  // optional int64 stone = 4;
  inline bool has_stone() const;
  inline void clear_stone();
  static const int kStoneFieldNumber = 4;
  inline ::google::protobuf::int64 stone() const;
  inline void set_stone(::google::protobuf::int64 value);

  // optional int64 equip_scrutiny = 5;
  inline bool has_equip_scrutiny() const;
  inline void clear_equip_scrutiny();
  static const int kEquipScrutinyFieldNumber = 5;
  inline ::google::protobuf::int64 equip_scrutiny() const;
  inline void set_equip_scrutiny(::google::protobuf::int64 value);

  // optional int64 equip_suit = 6;
  inline bool has_equip_suit() const;
  inline void clear_equip_suit();
  static const int kEquipSuitFieldNumber = 6;
  inline ::google::protobuf::int64 equip_suit() const;
  inline void set_equip_suit(::google::protobuf::int64 value);

  // optional int64 equip_awake = 7;
  inline bool has_equip_awake() const;
  inline void clear_equip_awake();
  static const int kEquipAwakeFieldNumber = 7;
  inline ::google::protobuf::int64 equip_awake() const;
  inline void set_equip_awake(::google::protobuf::int64 value);

  // optional int64 equip_enchant = 8;
  inline bool has_equip_enchant() const;
  inline void clear_equip_enchant();
  static const int kEquipEnchantFieldNumber = 8;
  inline ::google::protobuf::int64 equip_enchant() const;
  inline void set_equip_enchant(::google::protobuf::int64 value);

  // optional int64 fatestar = 9;
  inline bool has_fatestar() const;
  inline void clear_fatestar();
  static const int kFatestarFieldNumber = 9;
  inline ::google::protobuf::int64 fatestar() const;
  inline void set_fatestar(::google::protobuf::int64 value);

  // optional int64 godhood = 10;
  inline bool has_godhood() const;
  inline void clear_godhood();
  static const int kGodhoodFieldNumber = 10;
  inline ::google::protobuf::int64 godhood() const;
  inline void set_godhood(::google::protobuf::int64 value);

  // optional int64 identify = 11;
  inline bool has_identify() const;
  inline void clear_identify();
  static const int kIdentifyFieldNumber = 11;
  inline ::google::protobuf::int64 identify() const;
  inline void set_identify(::google::protobuf::int64 value);

  // optional int64 partner = 12;
  inline bool has_partner() const;
  inline void clear_partner();
  static const int kPartnerFieldNumber = 12;
  inline ::google::protobuf::int64 partner() const;
  inline void set_partner(::google::protobuf::int64 value);

  // optional int64 field = 13;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 13;
  inline ::google::protobuf::int64 field() const;
  inline void set_field(::google::protobuf::int64 value);

  // optional int64 element = 14;
  inline bool has_element() const;
  inline void clear_element();
  static const int kElementFieldNumber = 14;
  inline ::google::protobuf::int64 element() const;
  inline void set_element(::google::protobuf::int64 value);

  // optional int64 wing = 15;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 15;
  inline ::google::protobuf::int64 wing() const;
  inline void set_wing(::google::protobuf::int64 value);

  // optional int64 treasure = 16;
  inline bool has_treasure() const;
  inline void clear_treasure();
  static const int kTreasureFieldNumber = 16;
  inline ::google::protobuf::int64 treasure() const;
  inline void set_treasure(::google::protobuf::int64 value);

  // optional int64 fantasty_total = 17;
  inline bool has_fantasty_total() const;
  inline void clear_fantasty_total();
  static const int kFantastyTotalFieldNumber = 17;
  inline ::google::protobuf::int64 fantasty_total() const;
  inline void set_fantasty_total(::google::protobuf::int64 value);

  // optional int64 artifact_fantasty = 18;
  inline bool has_artifact_fantasty() const;
  inline void clear_artifact_fantasty();
  static const int kArtifactFantastyFieldNumber = 18;
  inline ::google::protobuf::int64 artifact_fantasty() const;
  inline void set_artifact_fantasty(::google::protobuf::int64 value);

  // optional int64 horse_fantasty = 19;
  inline bool has_horse_fantasty() const;
  inline void clear_horse_fantasty();
  static const int kHorseFantastyFieldNumber = 19;
  inline ::google::protobuf::int64 horse_fantasty() const;
  inline void set_horse_fantasty(::google::protobuf::int64 value);

  // optional int64 wing_fantasty = 20;
  inline bool has_wing_fantasty() const;
  inline void clear_wing_fantasty();
  static const int kWingFantastyFieldNumber = 20;
  inline ::google::protobuf::int64 wing_fantasty() const;
  inline void set_wing_fantasty(::google::protobuf::int64 value);

  // optional int64 fashion_fantasty = 21;
  inline bool has_fashion_fantasty() const;
  inline void clear_fashion_fantasty();
  static const int kFashionFantastyFieldNumber = 21;
  inline ::google::protobuf::int64 fashion_fantasty() const;
  inline void set_fashion_fantasty(::google::protobuf::int64 value);

  // optional int64 partner_fantasty = 22;
  inline bool has_partner_fantasty() const;
  inline void clear_partner_fantasty();
  static const int kPartnerFantastyFieldNumber = 22;
  inline ::google::protobuf::int64 partner_fantasty() const;
  inline void set_partner_fantasty(::google::protobuf::int64 value);

  // optional int64 treasure_fantasty = 23;
  inline bool has_treasure_fantasty() const;
  inline void clear_treasure_fantasty();
  static const int kTreasureFantastyFieldNumber = 23;
  inline ::google::protobuf::int64 treasure_fantasty() const;
  inline void set_treasure_fantasty(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FuncFightDBData)
 private:
  inline void set_has_equip_total();
  inline void clear_has_equip_total();
  inline void set_has_equip_base();
  inline void clear_has_equip_base();
  inline void set_has_equip_strong();
  inline void clear_has_equip_strong();
  inline void set_has_stone();
  inline void clear_has_stone();
  inline void set_has_equip_scrutiny();
  inline void clear_has_equip_scrutiny();
  inline void set_has_equip_suit();
  inline void clear_has_equip_suit();
  inline void set_has_equip_awake();
  inline void clear_has_equip_awake();
  inline void set_has_equip_enchant();
  inline void clear_has_equip_enchant();
  inline void set_has_fatestar();
  inline void clear_has_fatestar();
  inline void set_has_godhood();
  inline void clear_has_godhood();
  inline void set_has_identify();
  inline void clear_has_identify();
  inline void set_has_partner();
  inline void clear_has_partner();
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_element();
  inline void clear_has_element();
  inline void set_has_wing();
  inline void clear_has_wing();
  inline void set_has_treasure();
  inline void clear_has_treasure();
  inline void set_has_fantasty_total();
  inline void clear_has_fantasty_total();
  inline void set_has_artifact_fantasty();
  inline void clear_has_artifact_fantasty();
  inline void set_has_horse_fantasty();
  inline void clear_has_horse_fantasty();
  inline void set_has_wing_fantasty();
  inline void clear_has_wing_fantasty();
  inline void set_has_fashion_fantasty();
  inline void clear_has_fashion_fantasty();
  inline void set_has_partner_fantasty();
  inline void clear_has_partner_fantasty();
  inline void set_has_treasure_fantasty();
  inline void clear_has_treasure_fantasty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 equip_total_;
  ::google::protobuf::int64 equip_base_;
  ::google::protobuf::int64 equip_strong_;
  ::google::protobuf::int64 stone_;
  ::google::protobuf::int64 equip_scrutiny_;
  ::google::protobuf::int64 equip_suit_;
  ::google::protobuf::int64 equip_awake_;
  ::google::protobuf::int64 equip_enchant_;
  ::google::protobuf::int64 fatestar_;
  ::google::protobuf::int64 godhood_;
  ::google::protobuf::int64 identify_;
  ::google::protobuf::int64 partner_;
  ::google::protobuf::int64 field_;
  ::google::protobuf::int64 element_;
  ::google::protobuf::int64 wing_;
  ::google::protobuf::int64 treasure_;
  ::google::protobuf::int64 fantasty_total_;
  ::google::protobuf::int64 artifact_fantasty_;
  ::google::protobuf::int64 horse_fantasty_;
  ::google::protobuf::int64 wing_fantasty_;
  ::google::protobuf::int64 fashion_fantasty_;
  ::google::protobuf::int64 partner_fantasty_;
  ::google::protobuf::int64 treasure_fantasty_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static FuncFightDBData* default_instance_;
};
// -------------------------------------------------------------------

class PowerInfo : public ::google::protobuf::Message {
 public:
  PowerInfo();
  virtual ~PowerInfo();

  PowerInfo(const PowerInfo& from);

  inline PowerInfo& operator=(const PowerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerInfo& default_instance();

  void Swap(PowerInfo* other);

  // implements Message ----------------------------------------------

  PowerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerInfo& from);
  void MergeFrom(const PowerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 titleId = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIdFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // optional int32 curBuyNum = 2;
  inline bool has_curbuynum() const;
  inline void clear_curbuynum();
  static const int kCurBuyNumFieldNumber = 2;
  inline ::google::protobuf::int32 curbuynum() const;
  inline void set_curbuynum(::google::protobuf::int32 value);

  // optional int32 skillUpdateId = 3;
  inline bool has_skillupdateid() const;
  inline void clear_skillupdateid();
  static const int kSkillUpdateIdFieldNumber = 3;
  inline ::google::protobuf::int32 skillupdateid() const;
  inline void set_skillupdateid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PowerInfo)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_curbuynum();
  inline void clear_has_curbuynum();
  inline void set_has_skillupdateid();
  inline void clear_has_skillupdateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;
  ::google::protobuf::int32 curbuynum_;
  ::google::protobuf::int32 skillupdateid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PowerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PowerInfoDBList : public ::google::protobuf::Message {
 public:
  PowerInfoDBList();
  virtual ~PowerInfoDBList();

  PowerInfoDBList(const PowerInfoDBList& from);

  inline PowerInfoDBList& operator=(const PowerInfoDBList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerInfoDBList& default_instance();

  void Swap(PowerInfoDBList* other);

  // implements Message ----------------------------------------------

  PowerInfoDBList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerInfoDBList& from);
  void MergeFrom(const PowerInfoDBList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.PowerInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::PowerInfo& infos(int index) const;
  inline ::proto_ff::PowerInfo* mutable_infos(int index);
  inline ::proto_ff::PowerInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PowerInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PowerInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.PowerInfoDBList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::PowerInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static PowerInfoDBList* default_instance_;
};
// -------------------------------------------------------------------

class OccupationTaskInfo : public ::google::protobuf::Message {
 public:
  OccupationTaskInfo();
  virtual ~OccupationTaskInfo();

  OccupationTaskInfo(const OccupationTaskInfo& from);

  inline OccupationTaskInfo& operator=(const OccupationTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationTaskInfo& default_instance();

  void Swap(OccupationTaskInfo* other);

  // implements Message ----------------------------------------------

  OccupationTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationTaskInfo& from);
  void MergeFrom(const OccupationTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 curValue = 2;
  inline bool has_curvalue() const;
  inline void clear_curvalue();
  static const int kCurValueFieldNumber = 2;
  inline ::google::protobuf::int32 curvalue() const;
  inline void set_curvalue(::google::protobuf::int32 value);

  // optional int32 taskState = 3;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 taskstate() const;
  inline void set_taskstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationTaskInfo)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_curvalue();
  inline void clear_has_curvalue();
  inline void set_has_taskstate();
  inline void clear_has_taskstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 curvalue_;
  ::google::protobuf::int32 taskstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OccupationTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class OccupationTakeList : public ::google::protobuf::Message {
 public:
  OccupationTakeList();
  virtual ~OccupationTakeList();

  OccupationTakeList(const OccupationTakeList& from);

  inline OccupationTakeList& operator=(const OccupationTakeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupationTakeList& default_instance();

  void Swap(OccupationTakeList* other);

  // implements Message ----------------------------------------------

  OccupationTakeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupationTakeList& from);
  void MergeFrom(const OccupationTakeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.OccupationTaskInfo tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::proto_ff::OccupationTaskInfo& tasks(int index) const;
  inline ::proto_ff::OccupationTaskInfo* mutable_tasks(int index);
  inline ::proto_ff::OccupationTaskInfo* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationTaskInfo >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationTaskInfo >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:proto_ff.OccupationTakeList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationTaskInfo > tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static OccupationTakeList* default_instance_;
};
// -------------------------------------------------------------------

class ComStarInfo : public ::google::protobuf::Message {
 public:
  ComStarInfo();
  virtual ~ComStarInfo();

  ComStarInfo(const ComStarInfo& from);

  inline ComStarInfo& operator=(const ComStarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComStarInfo& default_instance();

  void Swap(ComStarInfo* other);

  // implements Message ----------------------------------------------

  ComStarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComStarInfo& from);
  void MergeFrom(const ComStarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 star_lv = 2;
  inline bool has_star_lv() const;
  inline void clear_star_lv();
  static const int kStarLvFieldNumber = 2;
  inline ::google::protobuf::int32 star_lv() const;
  inline void set_star_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComStarInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star_lv();
  inline void clear_has_star_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 star_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static ComStarInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBHeadSetData : public ::google::protobuf::Message {
 public:
  CharacterDBHeadSetData();
  virtual ~CharacterDBHeadSetData();

  CharacterDBHeadSetData(const CharacterDBHeadSetData& from);

  inline CharacterDBHeadSetData& operator=(const CharacterDBHeadSetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBHeadSetData& default_instance();

  void Swap(CharacterDBHeadSetData* other);

  // implements Message ----------------------------------------------

  CharacterDBHeadSetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBHeadSetData& from);
  void MergeFrom(const CharacterDBHeadSetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComStarInfo headList = 1;
  inline int headlist_size() const;
  inline void clear_headlist();
  static const int kHeadListFieldNumber = 1;
  inline const ::proto_ff::ComStarInfo& headlist(int index) const;
  inline ::proto_ff::ComStarInfo* mutable_headlist(int index);
  inline ::proto_ff::ComStarInfo* add_headlist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >&
      headlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >*
      mutable_headlist();

  // optional uint64 cur_head_id = 2;
  inline bool has_cur_head_id() const;
  inline void clear_cur_head_id();
  static const int kCurHeadIdFieldNumber = 2;
  inline ::google::protobuf::uint64 cur_head_id() const;
  inline void set_cur_head_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComStarInfo frameList = 3;
  inline int framelist_size() const;
  inline void clear_framelist();
  static const int kFrameListFieldNumber = 3;
  inline const ::proto_ff::ComStarInfo& framelist(int index) const;
  inline ::proto_ff::ComStarInfo* mutable_framelist(int index);
  inline ::proto_ff::ComStarInfo* add_framelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >&
      framelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >*
      mutable_framelist();

  // optional uint64 cur_frame_id = 4;
  inline bool has_cur_frame_id() const;
  inline void clear_cur_frame_id();
  static const int kCurFrameIdFieldNumber = 4;
  inline ::google::protobuf::uint64 cur_frame_id() const;
  inline void set_cur_frame_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.ComStarInfo bubbleList = 5;
  inline int bubblelist_size() const;
  inline void clear_bubblelist();
  static const int kBubbleListFieldNumber = 5;
  inline const ::proto_ff::ComStarInfo& bubblelist(int index) const;
  inline ::proto_ff::ComStarInfo* mutable_bubblelist(int index);
  inline ::proto_ff::ComStarInfo* add_bubblelist();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >&
      bubblelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >*
      mutable_bubblelist();

  // optional uint64 cur_bubble_id = 6;
  inline bool has_cur_bubble_id() const;
  inline void clear_cur_bubble_id();
  static const int kCurBubbleIdFieldNumber = 6;
  inline ::google::protobuf::uint64 cur_bubble_id() const;
  inline void set_cur_bubble_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBHeadSetData)
 private:
  inline void set_has_cur_head_id();
  inline void clear_has_cur_head_id();
  inline void set_has_cur_frame_id();
  inline void clear_has_cur_frame_id();
  inline void set_has_cur_bubble_id();
  inline void clear_has_cur_bubble_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo > headlist_;
  ::google::protobuf::uint64 cur_head_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo > framelist_;
  ::google::protobuf::uint64 cur_frame_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo > bubblelist_;
  ::google::protobuf::uint64 cur_bubble_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBHeadSetData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOnlineGiftInfo : public ::google::protobuf::Message {
 public:
  CharacterDBOnlineGiftInfo();
  virtual ~CharacterDBOnlineGiftInfo();

  CharacterDBOnlineGiftInfo(const CharacterDBOnlineGiftInfo& from);

  inline CharacterDBOnlineGiftInfo& operator=(const CharacterDBOnlineGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOnlineGiftInfo& default_instance();

  void Swap(CharacterDBOnlineGiftInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBOnlineGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOnlineGiftInfo& from);
  void MergeFrom(const CharacterDBOnlineGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOnlineGiftInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOnlineGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBOnlineGiftData : public ::google::protobuf::Message {
 public:
  CharacterDBOnlineGiftData();
  virtual ~CharacterDBOnlineGiftData();

  CharacterDBOnlineGiftData(const CharacterDBOnlineGiftData& from);

  inline CharacterDBOnlineGiftData& operator=(const CharacterDBOnlineGiftData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBOnlineGiftData& default_instance();

  void Swap(CharacterDBOnlineGiftData* other);

  // implements Message ----------------------------------------------

  CharacterDBOnlineGiftData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBOnlineGiftData& from);
  void MergeFrom(const CharacterDBOnlineGiftData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 online_time = 1;
  inline bool has_online_time() const;
  inline void clear_online_time();
  static const int kOnlineTimeFieldNumber = 1;
  inline ::google::protobuf::int32 online_time() const;
  inline void set_online_time(::google::protobuf::int32 value);

  // repeated .proto_ff.CharacterDBOnlineGiftInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::CharacterDBOnlineGiftInfo& infos(int index) const;
  inline ::proto_ff::CharacterDBOnlineGiftInfo* mutable_infos(int index);
  inline ::proto_ff::CharacterDBOnlineGiftInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOnlineGiftInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOnlineGiftInfo >*
      mutable_infos();

  // optional int32 reset_day = 3;
  inline bool has_reset_day() const;
  inline void clear_reset_day();
  static const int kResetDayFieldNumber = 3;
  inline ::google::protobuf::int32 reset_day() const;
  inline void set_reset_day(::google::protobuf::int32 value);

  // optional int64 lasttime = 4;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 4;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBOnlineGiftData)
 private:
  inline void set_has_online_time();
  inline void clear_has_online_time();
  inline void set_has_reset_day();
  inline void clear_has_reset_day();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOnlineGiftInfo > infos_;
  ::google::protobuf::int32 online_time_;
  ::google::protobuf::int32 reset_day_;
  ::google::protobuf::int64 lasttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBOnlineGiftData* default_instance_;
};
// -------------------------------------------------------------------

class CharDropItemDBProto : public ::google::protobuf::Message {
 public:
  CharDropItemDBProto();
  virtual ~CharDropItemDBProto();

  CharDropItemDBProto(const CharDropItemDBProto& from);

  inline CharDropItemDBProto& operator=(const CharDropItemDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharDropItemDBProto& default_instance();

  void Swap(CharDropItemDBProto* other);

  // implements Message ----------------------------------------------

  CharDropItemDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharDropItemDBProto& from);
  void MergeFrom(const CharDropItemDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional int64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharDropItemDBProto)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::int64 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharDropItemDBProto* default_instance_;
};
// -------------------------------------------------------------------

class CharDropMultItemDBProto : public ::google::protobuf::Message {
 public:
  CharDropMultItemDBProto();
  virtual ~CharDropMultItemDBProto();

  CharDropMultItemDBProto(const CharDropMultItemDBProto& from);

  inline CharDropMultItemDBProto& operator=(const CharDropMultItemDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharDropMultItemDBProto& default_instance();

  void Swap(CharDropMultItemDBProto* other);

  // implements Message ----------------------------------------------

  CharDropMultItemDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharDropMultItemDBProto& from);
  void MergeFrom(const CharDropMultItemDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.CharDropItemDBProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::CharDropItemDBProto& info(int index) const;
  inline ::proto_ff::CharDropItemDBProto* mutable_info(int index);
  inline ::proto_ff::CharDropItemDBProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDropItemDBProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDropItemDBProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.CharDropMultItemDBProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDropItemDBProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharDropMultItemDBProto* default_instance_;
};
// -------------------------------------------------------------------

class CharDropLimitDBData : public ::google::protobuf::Message {
 public:
  CharDropLimitDBData();
  virtual ~CharDropLimitDBData();

  CharDropLimitDBData(const CharDropLimitDBData& from);

  inline CharDropLimitDBData& operator=(const CharDropLimitDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharDropLimitDBData& default_instance();

  void Swap(CharDropLimitDBData* other);

  // implements Message ----------------------------------------------

  CharDropLimitDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharDropLimitDBData& from);
  void MergeFrom(const CharDropLimitDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CharDropMultItemDBProto limit = 1;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 1;
  inline const ::proto_ff::CharDropMultItemDBProto& limit() const;
  inline ::proto_ff::CharDropMultItemDBProto* mutable_limit();
  inline ::proto_ff::CharDropMultItemDBProto* release_limit();
  inline void set_allocated_limit(::proto_ff::CharDropMultItemDBProto* limit);

  // optional uint64 fresh_time = 2;
  inline bool has_fresh_time() const;
  inline void clear_fresh_time();
  static const int kFreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 fresh_time() const;
  inline void set_fresh_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharDropLimitDBData)
 private:
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_fresh_time();
  inline void clear_has_fresh_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CharDropMultItemDBProto* limit_;
  ::google::protobuf::uint64 fresh_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharDropLimitDBData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBGmHelpData : public ::google::protobuf::Message {
 public:
  CharacterDBGmHelpData();
  virtual ~CharacterDBGmHelpData();

  CharacterDBGmHelpData(const CharacterDBGmHelpData& from);

  inline CharacterDBGmHelpData& operator=(const CharacterDBGmHelpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBGmHelpData& default_instance();

  void Swap(CharacterDBGmHelpData* other);

  // implements Message ----------------------------------------------

  CharacterDBGmHelpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBGmHelpData& from);
  void MergeFrom(const CharacterDBGmHelpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 timeEnd = 1;
  inline bool has_timeend() const;
  inline void clear_timeend();
  static const int kTimeEndFieldNumber = 1;
  inline ::google::protobuf::int64 timeend() const;
  inline void set_timeend(::google::protobuf::int64 value);

  // optional int64 helpTime = 2;
  inline bool has_helptime() const;
  inline void clear_helptime();
  static const int kHelpTimeFieldNumber = 2;
  inline ::google::protobuf::int64 helptime() const;
  inline void set_helptime(::google::protobuf::int64 value);

  // optional int32 helpDay = 3;
  inline bool has_helpday() const;
  inline void clear_helpday();
  static const int kHelpDayFieldNumber = 3;
  inline ::google::protobuf::int32 helpday() const;
  inline void set_helpday(::google::protobuf::int32 value);

  // optional int64 applyTime = 4;
  inline bool has_applytime() const;
  inline void clear_applytime();
  static const int kApplyTimeFieldNumber = 4;
  inline ::google::protobuf::int64 applytime() const;
  inline void set_applytime(::google::protobuf::int64 value);

  // optional int32 applyDay = 5;
  inline bool has_applyday() const;
  inline void clear_applyday();
  static const int kApplyDayFieldNumber = 5;
  inline ::google::protobuf::int32 applyday() const;
  inline void set_applyday(::google::protobuf::int32 value);

  // optional int64 helpcid = 6;
  inline bool has_helpcid() const;
  inline void clear_helpcid();
  static const int kHelpcidFieldNumber = 6;
  inline ::google::protobuf::int64 helpcid() const;
  inline void set_helpcid(::google::protobuf::int64 value);

  // repeated .proto_ff.ComPair helpState = 7;
  inline int helpstate_size() const;
  inline void clear_helpstate();
  static const int kHelpStateFieldNumber = 7;
  inline const ::proto_ff::ComPair& helpstate(int index) const;
  inline ::proto_ff::ComPair* mutable_helpstate(int index);
  inline ::proto_ff::ComPair* add_helpstate();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      helpstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_helpstate();

  // optional int32 applyResult = 8;
  inline bool has_applyresult() const;
  inline void clear_applyresult();
  static const int kApplyResultFieldNumber = 8;
  inline ::google::protobuf::int32 applyresult() const;
  inline void set_applyresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBGmHelpData)
 private:
  inline void set_has_timeend();
  inline void clear_has_timeend();
  inline void set_has_helptime();
  inline void clear_has_helptime();
  inline void set_has_helpday();
  inline void clear_has_helpday();
  inline void set_has_applytime();
  inline void clear_has_applytime();
  inline void set_has_applyday();
  inline void clear_has_applyday();
  inline void set_has_helpcid();
  inline void clear_has_helpcid();
  inline void set_has_applyresult();
  inline void clear_has_applyresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 timeend_;
  ::google::protobuf::int64 helptime_;
  ::google::protobuf::int64 applytime_;
  ::google::protobuf::int32 helpday_;
  ::google::protobuf::int32 applyday_;
  ::google::protobuf::int64 helpcid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > helpstate_;
  ::google::protobuf::int32 applyresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBGmHelpData* default_instance_;
};
// -------------------------------------------------------------------

class GMToolsDB : public ::google::protobuf::Message {
 public:
  GMToolsDB();
  virtual ~GMToolsDB();

  GMToolsDB(const GMToolsDB& from);

  inline GMToolsDB& operator=(const GMToolsDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToolsDB& default_instance();

  void Swap(GMToolsDB* other);

  // implements Message ----------------------------------------------

  GMToolsDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToolsDB& from);
  void MergeFrom(const GMToolsDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 gifts = 1;
  inline int gifts_size() const;
  inline void clear_gifts();
  static const int kGiftsFieldNumber = 1;
  inline ::google::protobuf::int32 gifts(int index) const;
  inline void set_gifts(int index, ::google::protobuf::int32 value);
  inline void add_gifts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gifts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gifts();

  // repeated .proto_ff.ComPair unlimits = 2;
  inline int unlimits_size() const;
  inline void clear_unlimits();
  static const int kUnlimitsFieldNumber = 2;
  inline const ::proto_ff::ComPair& unlimits(int index) const;
  inline ::proto_ff::ComPair* mutable_unlimits(int index);
  inline ::proto_ff::ComPair* add_unlimits();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      unlimits() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_unlimits();

  // optional uint64 refresh_time = 3;
  inline bool has_refresh_time() const;
  inline void clear_refresh_time();
  static const int kRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 refresh_time() const;
  inline void set_refresh_time(::google::protobuf::uint64 value);

  // optional uint64 cur_use = 4;
  inline bool has_cur_use() const;
  inline void clear_cur_use();
  static const int kCurUseFieldNumber = 4;
  inline ::google::protobuf::uint64 cur_use() const;
  inline void set_cur_use(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GMToolsDB)
 private:
  inline void set_has_refresh_time();
  inline void clear_has_refresh_time();
  inline void set_has_cur_use();
  inline void clear_has_cur_use();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gifts_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > unlimits_;
  ::google::protobuf::uint64 refresh_time_;
  ::google::protobuf::uint64 cur_use_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static GMToolsDB* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBGodGMData : public ::google::protobuf::Message {
 public:
  CharacterDBGodGMData();
  virtual ~CharacterDBGodGMData();

  CharacterDBGodGMData(const CharacterDBGodGMData& from);

  inline CharacterDBGodGMData& operator=(const CharacterDBGodGMData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBGodGMData& default_instance();

  void Swap(CharacterDBGodGMData* other);

  // implements Message ----------------------------------------------

  CharacterDBGodGMData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBGodGMData& from);
  void MergeFrom(const CharacterDBGodGMData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 curType = 1;
  inline bool has_curtype() const;
  inline void clear_curtype();
  static const int kCurTypeFieldNumber = 1;
  inline ::google::protobuf::int32 curtype() const;
  inline void set_curtype(::google::protobuf::int32 value);

  // optional int64 timeEnd = 2;
  inline bool has_timeend() const;
  inline void clear_timeend();
  static const int kTimeEndFieldNumber = 2;
  inline ::google::protobuf::int64 timeend() const;
  inline void set_timeend(::google::protobuf::int64 value);

  // optional int32 curExchangeNum = 3;
  inline bool has_curexchangenum() const;
  inline void clear_curexchangenum();
  static const int kCurExchangeNumFieldNumber = 3;
  inline ::google::protobuf::int32 curexchangenum() const;
  inline void set_curexchangenum(::google::protobuf::int32 value);

  // optional int32 normalGiftState = 4;
  inline bool has_normalgiftstate() const;
  inline void clear_normalgiftstate();
  static const int kNormalGiftStateFieldNumber = 4;
  inline ::google::protobuf::int32 normalgiftstate() const;
  inline void set_normalgiftstate(::google::protobuf::int32 value);

  // optional int32 seniorGiftState = 5;
  inline bool has_seniorgiftstate() const;
  inline void clear_seniorgiftstate();
  static const int kSeniorGiftStateFieldNumber = 5;
  inline ::google::protobuf::int32 seniorgiftstate() const;
  inline void set_seniorgiftstate(::google::protobuf::int32 value);

  // optional int64 lastTime = 6;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 6;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // optional int32 unlock = 7;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 7;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);

  // optional .proto_ff.GMToolsDB gmtool = 8;
  inline bool has_gmtool() const;
  inline void clear_gmtool();
  static const int kGmtoolFieldNumber = 8;
  inline const ::proto_ff::GMToolsDB& gmtool() const;
  inline ::proto_ff::GMToolsDB* mutable_gmtool();
  inline ::proto_ff::GMToolsDB* release_gmtool();
  inline void set_allocated_gmtool(::proto_ff::GMToolsDB* gmtool);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBGodGMData)
 private:
  inline void set_has_curtype();
  inline void clear_has_curtype();
  inline void set_has_timeend();
  inline void clear_has_timeend();
  inline void set_has_curexchangenum();
  inline void clear_has_curexchangenum();
  inline void set_has_normalgiftstate();
  inline void clear_has_normalgiftstate();
  inline void set_has_seniorgiftstate();
  inline void clear_has_seniorgiftstate();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_gmtool();
  inline void clear_has_gmtool();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 timeend_;
  ::google::protobuf::int32 curtype_;
  ::google::protobuf::int32 curexchangenum_;
  ::google::protobuf::int32 normalgiftstate_;
  ::google::protobuf::int32 seniorgiftstate_;
  ::google::protobuf::int64 lasttime_;
  ::proto_ff::GMToolsDB* gmtool_;
  ::google::protobuf::int32 unlock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBGodGMData* default_instance_;
};
// -------------------------------------------------------------------

class BowlDBRewardProto : public ::google::protobuf::Message {
 public:
  BowlDBRewardProto();
  virtual ~BowlDBRewardProto();

  BowlDBRewardProto(const BowlDBRewardProto& from);

  inline BowlDBRewardProto& operator=(const BowlDBRewardProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BowlDBRewardProto& default_instance();

  void Swap(BowlDBRewardProto* other);

  // implements Message ----------------------------------------------

  BowlDBRewardProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BowlDBRewardProto& from);
  void MergeFrom(const BowlDBRewardProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recharge_id = 1;
  inline bool has_recharge_id() const;
  inline void clear_recharge_id();
  static const int kRechargeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recharge_id() const;
  inline void set_recharge_id(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BowlDBRewardProto)
 private:
  inline void set_has_recharge_id();
  inline void clear_has_recharge_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 recharge_id_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static BowlDBRewardProto* default_instance_;
};
// -------------------------------------------------------------------

class BowlDBData : public ::google::protobuf::Message {
 public:
  BowlDBData();
  virtual ~BowlDBData();

  BowlDBData(const BowlDBData& from);

  inline BowlDBData& operator=(const BowlDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BowlDBData& default_instance();

  void Swap(BowlDBData* other);

  // implements Message ----------------------------------------------

  BowlDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BowlDBData& from);
  void MergeFrom(const BowlDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int32 active = 2;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 2;
  inline ::google::protobuf::int32 active() const;
  inline void set_active(::google::protobuf::int32 value);

  // repeated .proto_ff.BowlDBRewardProto info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::proto_ff::BowlDBRewardProto& info(int index) const;
  inline ::proto_ff::BowlDBRewardProto* mutable_info(int index);
  inline ::proto_ff::BowlDBRewardProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BowlDBRewardProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BowlDBRewardProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.BowlDBData)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 active_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BowlDBRewardProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static BowlDBData* default_instance_;
};
// -------------------------------------------------------------------

class HidePeriodDBProto : public ::google::protobuf::Message {
 public:
  HidePeriodDBProto();
  virtual ~HidePeriodDBProto();

  HidePeriodDBProto(const HidePeriodDBProto& from);

  inline HidePeriodDBProto& operator=(const HidePeriodDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HidePeriodDBProto& default_instance();

  void Swap(HidePeriodDBProto* other);

  // implements Message ----------------------------------------------

  HidePeriodDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HidePeriodDBProto& from);
  void MergeFrom(const HidePeriodDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional uint64 total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::uint64 total() const;
  inline void set_total(::google::protobuf::uint64 value);

  // optional int32 reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline ::google::protobuf::int32 reward() const;
  inline void set_reward(::google::protobuf::int32 value);

  // optional uint64 lasttime = 4;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 4;
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HidePeriodDBProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 total_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 reward_;
  ::google::protobuf::uint64 lasttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static HidePeriodDBProto* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBHideData : public ::google::protobuf::Message {
 public:
  CharacterDBHideData();
  virtual ~CharacterDBHideData();

  CharacterDBHideData(const CharacterDBHideData& from);

  inline CharacterDBHideData& operator=(const CharacterDBHideData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBHideData& default_instance();

  void Swap(CharacterDBHideData* other);

  // implements Message ----------------------------------------------

  CharacterDBHideData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBHideData& from);
  void MergeFrom(const CharacterDBHideData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 forever_quota = 1;
  inline bool has_forever_quota() const;
  inline void clear_forever_quota();
  static const int kForeverQuotaFieldNumber = 1;
  inline ::google::protobuf::int32 forever_quota() const;
  inline void set_forever_quota(::google::protobuf::int32 value);

  // optional int64 lastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::int64 lasttime() const;
  inline void set_lasttime(::google::protobuf::int64 value);

  // optional int32 unit_quota = 3;
  inline bool has_unit_quota() const;
  inline void clear_unit_quota();
  static const int kUnitQuotaFieldNumber = 3;
  inline ::google::protobuf::int32 unit_quota() const;
  inline void set_unit_quota(::google::protobuf::int32 value);

  // repeated int32 unit_ids = 4;
  inline int unit_ids_size() const;
  inline void clear_unit_ids();
  static const int kUnitIdsFieldNumber = 4;
  inline ::google::protobuf::int32 unit_ids(int index) const;
  inline void set_unit_ids(int index, ::google::protobuf::int32 value);
  inline void add_unit_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unit_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unit_ids();

  // repeated int32 unit_once_ids = 5;
  inline int unit_once_ids_size() const;
  inline void clear_unit_once_ids();
  static const int kUnitOnceIdsFieldNumber = 5;
  inline ::google::protobuf::int32 unit_once_ids(int index) const;
  inline void set_unit_once_ids(int index, ::google::protobuf::int32 value);
  inline void add_unit_once_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unit_once_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unit_once_ids();

  // repeated int32 f_ids = 6;
  inline int f_ids_size() const;
  inline void clear_f_ids();
  static const int kFIdsFieldNumber = 6;
  inline ::google::protobuf::int32 f_ids(int index) const;
  inline void set_f_ids(int index, ::google::protobuf::int32 value);
  inline void add_f_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      f_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_f_ids();

  // optional int64 ctime = 7;
  inline bool has_ctime() const;
  inline void clear_ctime();
  static const int kCtimeFieldNumber = 7;
  inline ::google::protobuf::int64 ctime() const;
  inline void set_ctime(::google::protobuf::int64 value);

  // optional int32 days = 8;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 8;
  inline ::google::protobuf::int32 days() const;
  inline void set_days(::google::protobuf::int32 value);

  // repeated .proto_ff.HidePeriodDBProto period = 9;
  inline int period_size() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 9;
  inline const ::proto_ff::HidePeriodDBProto& period(int index) const;
  inline ::proto_ff::HidePeriodDBProto* mutable_period(int index);
  inline ::proto_ff::HidePeriodDBProto* add_period();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HidePeriodDBProto >&
      period() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HidePeriodDBProto >*
      mutable_period();

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBHideData)
 private:
  inline void set_has_forever_quota();
  inline void clear_has_forever_quota();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_unit_quota();
  inline void clear_has_unit_quota();
  inline void set_has_ctime();
  inline void clear_has_ctime();
  inline void set_has_days();
  inline void clear_has_days();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 lasttime_;
  ::google::protobuf::int32 forever_quota_;
  ::google::protobuf::int32 unit_quota_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unit_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unit_once_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > f_ids_;
  ::google::protobuf::int64 ctime_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::HidePeriodDBProto > period_;
  ::google::protobuf::int32 days_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBHideData* default_instance_;
};
// -------------------------------------------------------------------

class tbRoleInfo : public ::google::protobuf::Message {
 public:
  tbRoleInfo();
  virtual ~tbRoleInfo();

  tbRoleInfo(const tbRoleInfo& from);

  inline tbRoleInfo& operator=(const tbRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbRoleInfo& default_instance();

  void Swap(tbRoleInfo* other);

  // implements Message ----------------------------------------------

  tbRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbRoleInfo& from);
  void MergeFrom(const tbRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional uint64 bornZoneId = 3;
  inline bool has_bornzoneid() const;
  inline void clear_bornzoneid();
  static const int kBornZoneIdFieldNumber = 3;
  inline ::google::protobuf::uint64 bornzoneid() const;
  inline void set_bornzoneid(::google::protobuf::uint64 value);

  // optional string charName = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional string platId = 5;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatIdFieldNumber = 5;
  inline const ::std::string& platid() const;
  inline void set_platid(const ::std::string& value);
  inline void set_platid(const char* value);
  inline void set_platid(const char* value, size_t size);
  inline ::std::string* mutable_platid();
  inline ::std::string* release_platid();
  inline void set_allocated_platid(::std::string* platid);

  // optional uint64 deletechartime = 6;
  inline bool has_deletechartime() const;
  inline void clear_deletechartime();
  static const int kDeletechartimeFieldNumber = 6;
  inline ::google::protobuf::uint64 deletechartime() const;
  inline void set_deletechartime(::google::protobuf::uint64 value);

  // optional int32 dirty = 7;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 7;
  inline ::google::protobuf::int32 dirty() const;
  inline void set_dirty(::google::protobuf::int32 value);

  // optional .proto_ff.CharacterDBBaseInfo baseData = 20;
  inline bool has_basedata() const;
  inline void clear_basedata();
  static const int kBaseDataFieldNumber = 20;
  inline const ::proto_ff::CharacterDBBaseInfo& basedata() const;
  inline ::proto_ff::CharacterDBBaseInfo* mutable_basedata();
  inline ::proto_ff::CharacterDBBaseInfo* release_basedata();
  inline void set_allocated_basedata(::proto_ff::CharacterDBBaseInfo* basedata);

  // optional .proto_ff.CharacterDBPackageData itemData = 21;
  inline bool has_itemdata() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 21;
  inline const ::proto_ff::CharacterDBPackageData& itemdata() const;
  inline ::proto_ff::CharacterDBPackageData* mutable_itemdata();
  inline ::proto_ff::CharacterDBPackageData* release_itemdata();
  inline void set_allocated_itemdata(::proto_ff::CharacterDBPackageData* itemdata);

  // optional .proto_ff.CharacterDBTaskData taskData = 22;
  inline bool has_taskdata() const;
  inline void clear_taskdata();
  static const int kTaskDataFieldNumber = 22;
  inline const ::proto_ff::CharacterDBTaskData& taskdata() const;
  inline ::proto_ff::CharacterDBTaskData* mutable_taskdata();
  inline ::proto_ff::CharacterDBTaskData* release_taskdata();
  inline void set_allocated_taskdata(::proto_ff::CharacterDBTaskData* taskdata);

  // optional .proto_ff.CharacterDBSkillData skillData = 23;
  inline bool has_skilldata() const;
  inline void clear_skilldata();
  static const int kSkillDataFieldNumber = 23;
  inline const ::proto_ff::CharacterDBSkillData& skilldata() const;
  inline ::proto_ff::CharacterDBSkillData* mutable_skilldata();
  inline ::proto_ff::CharacterDBSkillData* release_skilldata();
  inline void set_allocated_skilldata(::proto_ff::CharacterDBSkillData* skilldata);

  // optional .proto_ff.CharacterDBExtendData extendData = 24;
  inline bool has_extenddata() const;
  inline void clear_extenddata();
  static const int kExtendDataFieldNumber = 24;
  inline const ::proto_ff::CharacterDBExtendData& extenddata() const;
  inline ::proto_ff::CharacterDBExtendData* mutable_extenddata();
  inline ::proto_ff::CharacterDBExtendData* release_extenddata();
  inline void set_allocated_extenddata(::proto_ff::CharacterDBExtendData* extenddata);

  // optional .proto_ff.CharacterDBEquipData equipData = 25;
  inline bool has_equipdata() const;
  inline void clear_equipdata();
  static const int kEquipDataFieldNumber = 25;
  inline const ::proto_ff::CharacterDBEquipData& equipdata() const;
  inline ::proto_ff::CharacterDBEquipData* mutable_equipdata();
  inline ::proto_ff::CharacterDBEquipData* release_equipdata();
  inline void set_allocated_equipdata(::proto_ff::CharacterDBEquipData* equipdata);

  // optional .proto_ff.CharacterDBDuplicateData duplicateData = 26;
  inline bool has_duplicatedata() const;
  inline void clear_duplicatedata();
  static const int kDuplicateDataFieldNumber = 26;
  inline const ::proto_ff::CharacterDBDuplicateData& duplicatedata() const;
  inline ::proto_ff::CharacterDBDuplicateData* mutable_duplicatedata();
  inline ::proto_ff::CharacterDBDuplicateData* release_duplicatedata();
  inline void set_allocated_duplicatedata(::proto_ff::CharacterDBDuplicateData* duplicatedata);

  // optional .proto_ff.CharacterAchievementDBData achievementData = 27;
  inline bool has_achievementdata() const;
  inline void clear_achievementdata();
  static const int kAchievementDataFieldNumber = 27;
  inline const ::proto_ff::CharacterAchievementDBData& achievementdata() const;
  inline ::proto_ff::CharacterAchievementDBData* mutable_achievementdata();
  inline ::proto_ff::CharacterAchievementDBData* release_achievementdata();
  inline void set_allocated_achievementdata(::proto_ff::CharacterAchievementDBData* achievementdata);

  // optional .proto_ff.CharacterBuffData buffData = 28;
  inline bool has_buffdata() const;
  inline void clear_buffdata();
  static const int kBuffDataFieldNumber = 28;
  inline const ::proto_ff::CharacterBuffData& buffdata() const;
  inline ::proto_ff::CharacterBuffData* mutable_buffdata();
  inline ::proto_ff::CharacterBuffData* release_buffdata();
  inline void set_allocated_buffdata(::proto_ff::CharacterBuffData* buffdata);

  // optional .proto_ff.CharacterArenaData arenaData = 29;
  inline bool has_arenadata() const;
  inline void clear_arenadata();
  static const int kArenaDataFieldNumber = 29;
  inline const ::proto_ff::CharacterArenaData& arenadata() const;
  inline ::proto_ff::CharacterArenaData* mutable_arenadata();
  inline ::proto_ff::CharacterArenaData* release_arenadata();
  inline void set_allocated_arenadata(::proto_ff::CharacterArenaData* arenadata);

  // optional .proto_ff.CharacterTitleSaveData titleData = 30;
  inline bool has_titledata() const;
  inline void clear_titledata();
  static const int kTitleDataFieldNumber = 30;
  inline const ::proto_ff::CharacterTitleSaveData& titledata() const;
  inline ::proto_ff::CharacterTitleSaveData* mutable_titledata();
  inline ::proto_ff::CharacterTitleSaveData* release_titledata();
  inline void set_allocated_titledata(::proto_ff::CharacterTitleSaveData* titledata);

  // optional .proto_ff.CharacterDBOperateLimitInfo operateLimitData = 31;
  inline bool has_operatelimitdata() const;
  inline void clear_operatelimitdata();
  static const int kOperateLimitDataFieldNumber = 31;
  inline const ::proto_ff::CharacterDBOperateLimitInfo& operatelimitdata() const;
  inline ::proto_ff::CharacterDBOperateLimitInfo* mutable_operatelimitdata();
  inline ::proto_ff::CharacterDBOperateLimitInfo* release_operatelimitdata();
  inline void set_allocated_operatelimitdata(::proto_ff::CharacterDBOperateLimitInfo* operatelimitdata);

  // optional .proto_ff.CharacterDBHuoYueDuInfo huoYueDuData = 32;
  inline bool has_huoyuedudata() const;
  inline void clear_huoyuedudata();
  static const int kHuoYueDuDataFieldNumber = 32;
  inline const ::proto_ff::CharacterDBHuoYueDuInfo& huoyuedudata() const;
  inline ::proto_ff::CharacterDBHuoYueDuInfo* mutable_huoyuedudata();
  inline ::proto_ff::CharacterDBHuoYueDuInfo* release_huoyuedudata();
  inline void set_allocated_huoyuedudata(::proto_ff::CharacterDBHuoYueDuInfo* huoyuedudata);

  // optional .proto_ff.CharacterDBOperateData operateData = 33;
  inline bool has_operatedata() const;
  inline void clear_operatedata();
  static const int kOperateDataFieldNumber = 33;
  inline const ::proto_ff::CharacterDBOperateData& operatedata() const;
  inline ::proto_ff::CharacterDBOperateData* mutable_operatedata();
  inline ::proto_ff::CharacterDBOperateData* release_operatedata();
  inline void set_allocated_operatedata(::proto_ff::CharacterDBOperateData* operatedata);

  // optional .proto_ff.CharacterDBActiveInfo playerActiveInfo = 34;
  inline bool has_playeractiveinfo() const;
  inline void clear_playeractiveinfo();
  static const int kPlayerActiveInfoFieldNumber = 34;
  inline const ::proto_ff::CharacterDBActiveInfo& playeractiveinfo() const;
  inline ::proto_ff::CharacterDBActiveInfo* mutable_playeractiveinfo();
  inline ::proto_ff::CharacterDBActiveInfo* release_playeractiveinfo();
  inline void set_allocated_playeractiveinfo(::proto_ff::CharacterDBActiveInfo* playeractiveinfo);

  // optional .proto_ff.CharacterPayData cPayData = 35;
  inline bool has_cpaydata() const;
  inline void clear_cpaydata();
  static const int kCPayDataFieldNumber = 35;
  inline const ::proto_ff::CharacterPayData& cpaydata() const;
  inline ::proto_ff::CharacterPayData* mutable_cpaydata();
  inline ::proto_ff::CharacterPayData* release_cpaydata();
  inline void set_allocated_cpaydata(::proto_ff::CharacterPayData* cpaydata);

  // optional .proto_ff.FunctionUnlockInfo unlockInfo = 36;
  inline bool has_unlockinfo() const;
  inline void clear_unlockinfo();
  static const int kUnlockInfoFieldNumber = 36;
  inline const ::proto_ff::FunctionUnlockInfo& unlockinfo() const;
  inline ::proto_ff::FunctionUnlockInfo* mutable_unlockinfo();
  inline ::proto_ff::FunctionUnlockInfo* release_unlockinfo();
  inline void set_allocated_unlockinfo(::proto_ff::FunctionUnlockInfo* unlockinfo);

  // optional .proto_ff.CharacterDBEmblemData emblemData = 37;
  inline bool has_emblemdata() const;
  inline void clear_emblemdata();
  static const int kEmblemDataFieldNumber = 37;
  inline const ::proto_ff::CharacterDBEmblemData& emblemdata() const;
  inline ::proto_ff::CharacterDBEmblemData* mutable_emblemdata();
  inline ::proto_ff::CharacterDBEmblemData* release_emblemdata();
  inline void set_allocated_emblemdata(::proto_ff::CharacterDBEmblemData* emblemdata);

  // optional .proto_ff.CharacterDBIdentifyData identifyData = 38;
  inline bool has_identifydata() const;
  inline void clear_identifydata();
  static const int kIdentifyDataFieldNumber = 38;
  inline const ::proto_ff::CharacterDBIdentifyData& identifydata() const;
  inline ::proto_ff::CharacterDBIdentifyData* mutable_identifydata();
  inline ::proto_ff::CharacterDBIdentifyData* release_identifydata();
  inline void set_allocated_identifydata(::proto_ff::CharacterDBIdentifyData* identifydata);

  // optional .proto_ff.CharacterDBElementData elementData = 39;
  inline bool has_elementdata() const;
  inline void clear_elementdata();
  static const int kElementDataFieldNumber = 39;
  inline const ::proto_ff::CharacterDBElementData& elementdata() const;
  inline ::proto_ff::CharacterDBElementData* mutable_elementdata();
  inline ::proto_ff::CharacterDBElementData* release_elementdata();
  inline void set_allocated_elementdata(::proto_ff::CharacterDBElementData* elementdata);

  // optional .proto_ff.CharacterDBFashionData fashionData = 40;
  inline bool has_fashiondata() const;
  inline void clear_fashiondata();
  static const int kFashionDataFieldNumber = 40;
  inline const ::proto_ff::CharacterDBFashionData& fashiondata() const;
  inline ::proto_ff::CharacterDBFashionData* mutable_fashiondata();
  inline ::proto_ff::CharacterDBFashionData* release_fashiondata();
  inline void set_allocated_fashiondata(::proto_ff::CharacterDBFashionData* fashiondata);

  // optional .proto_ff.CharacterDBWingData wingData = 41;
  inline bool has_wingdata() const;
  inline void clear_wingdata();
  static const int kWingDataFieldNumber = 41;
  inline const ::proto_ff::CharacterDBWingData& wingdata() const;
  inline ::proto_ff::CharacterDBWingData* mutable_wingdata();
  inline ::proto_ff::CharacterDBWingData* release_wingdata();
  inline void set_allocated_wingdata(::proto_ff::CharacterDBWingData* wingdata);

  // optional .proto_ff.CharacterDBMountData mountData = 42;
  inline bool has_mountdata() const;
  inline void clear_mountdata();
  static const int kMountDataFieldNumber = 42;
  inline const ::proto_ff::CharacterDBMountData& mountdata() const;
  inline ::proto_ff::CharacterDBMountData* mutable_mountdata();
  inline ::proto_ff::CharacterDBMountData* release_mountdata();
  inline void set_allocated_mountdata(::proto_ff::CharacterDBMountData* mountdata);

  // optional .proto_ff.CharacterDBBossData bossData = 43;
  inline bool has_bossdata() const;
  inline void clear_bossdata();
  static const int kBossDataFieldNumber = 43;
  inline const ::proto_ff::CharacterDBBossData& bossdata() const;
  inline ::proto_ff::CharacterDBBossData* mutable_bossdata();
  inline ::proto_ff::CharacterDBBossData* release_bossdata();
  inline void set_allocated_bossdata(::proto_ff::CharacterDBBossData* bossdata);

  // optional .proto_ff.CharacterDBPvpData pvpData = 44;
  inline bool has_pvpdata() const;
  inline void clear_pvpdata();
  static const int kPvpDataFieldNumber = 44;
  inline const ::proto_ff::CharacterDBPvpData& pvpdata() const;
  inline ::proto_ff::CharacterDBPvpData* mutable_pvpdata();
  inline ::proto_ff::CharacterDBPvpData* release_pvpdata();
  inline void set_allocated_pvpdata(::proto_ff::CharacterDBPvpData* pvpdata);

  // optional .proto_ff.CharacterDBTreasureData treasure_data = 45;
  inline bool has_treasure_data() const;
  inline void clear_treasure_data();
  static const int kTreasureDataFieldNumber = 45;
  inline const ::proto_ff::CharacterDBTreasureData& treasure_data() const;
  inline ::proto_ff::CharacterDBTreasureData* mutable_treasure_data();
  inline ::proto_ff::CharacterDBTreasureData* release_treasure_data();
  inline void set_allocated_treasure_data(::proto_ff::CharacterDBTreasureData* treasure_data);

  // optional .proto_ff.CharacterDBArtifactData artifact_data = 46;
  inline bool has_artifact_data() const;
  inline void clear_artifact_data();
  static const int kArtifactDataFieldNumber = 46;
  inline const ::proto_ff::CharacterDBArtifactData& artifact_data() const;
  inline ::proto_ff::CharacterDBArtifactData* mutable_artifact_data();
  inline ::proto_ff::CharacterDBArtifactData* release_artifact_data();
  inline void set_allocated_artifact_data(::proto_ff::CharacterDBArtifactData* artifact_data);

  // optional .proto_ff.CharacterDBFateStarData fateStarData = 47;
  inline bool has_fatestardata() const;
  inline void clear_fatestardata();
  static const int kFateStarDataFieldNumber = 47;
  inline const ::proto_ff::CharacterDBFateStarData& fatestardata() const;
  inline ::proto_ff::CharacterDBFateStarData* mutable_fatestardata();
  inline ::proto_ff::CharacterDBFateStarData* release_fatestardata();
  inline void set_allocated_fatestardata(::proto_ff::CharacterDBFateStarData* fatestardata);

  // optional .proto_ff.CharacterDBConvoyData convoyData = 48;
  inline bool has_convoydata() const;
  inline void clear_convoydata();
  static const int kConvoyDataFieldNumber = 48;
  inline const ::proto_ff::CharacterDBConvoyData& convoydata() const;
  inline ::proto_ff::CharacterDBConvoyData* mutable_convoydata();
  inline ::proto_ff::CharacterDBConvoyData* release_convoydata();
  inline void set_allocated_convoydata(::proto_ff::CharacterDBConvoyData* convoydata);

  // optional .proto_ff.CharacterDBDailyData daily_data = 49;
  inline bool has_daily_data() const;
  inline void clear_daily_data();
  static const int kDailyDataFieldNumber = 49;
  inline const ::proto_ff::CharacterDBDailyData& daily_data() const;
  inline ::proto_ff::CharacterDBDailyData* mutable_daily_data();
  inline ::proto_ff::CharacterDBDailyData* release_daily_data();
  inline void set_allocated_daily_data(::proto_ff::CharacterDBDailyData* daily_data);

  // optional .proto_ff.CharacterDBFieldData field_data = 50;
  inline bool has_field_data() const;
  inline void clear_field_data();
  static const int kFieldDataFieldNumber = 50;
  inline const ::proto_ff::CharacterDBFieldData& field_data() const;
  inline ::proto_ff::CharacterDBFieldData* mutable_field_data();
  inline ::proto_ff::CharacterDBFieldData* release_field_data();
  inline void set_allocated_field_data(::proto_ff::CharacterDBFieldData* field_data);

  // optional .proto_ff.CharacterDBVipData vipData = 51;
  inline bool has_vipdata() const;
  inline void clear_vipdata();
  static const int kVipDataFieldNumber = 51;
  inline const ::proto_ff::CharacterDBVipData& vipdata() const;
  inline ::proto_ff::CharacterDBVipData* mutable_vipdata();
  inline ::proto_ff::CharacterDBVipData* release_vipdata();
  inline void set_allocated_vipdata(::proto_ff::CharacterDBVipData* vipdata);

  // optional .proto_ff.CharacterDBPartnerData partnerData = 52;
  inline bool has_partnerdata() const;
  inline void clear_partnerdata();
  static const int kPartnerDataFieldNumber = 52;
  inline const ::proto_ff::CharacterDBPartnerData& partnerdata() const;
  inline ::proto_ff::CharacterDBPartnerData* mutable_partnerdata();
  inline ::proto_ff::CharacterDBPartnerData* release_partnerdata();
  inline void set_allocated_partnerdata(::proto_ff::CharacterDBPartnerData* partnerdata);

  // optional .proto_ff.CharacterDBMallData mallData = 53;
  inline bool has_malldata() const;
  inline void clear_malldata();
  static const int kMallDataFieldNumber = 53;
  inline const ::proto_ff::CharacterDBMallData& malldata() const;
  inline ::proto_ff::CharacterDBMallData* mutable_malldata();
  inline ::proto_ff::CharacterDBMallData* release_malldata();
  inline void set_allocated_malldata(::proto_ff::CharacterDBMallData* malldata);

  // optional .proto_ff.CharacterDBGodhoodData godhoodData = 54;
  inline bool has_godhooddata() const;
  inline void clear_godhooddata();
  static const int kGodhoodDataFieldNumber = 54;
  inline const ::proto_ff::CharacterDBGodhoodData& godhooddata() const;
  inline ::proto_ff::CharacterDBGodhoodData* mutable_godhooddata();
  inline ::proto_ff::CharacterDBGodhoodData* release_godhooddata();
  inline void set_allocated_godhooddata(::proto_ff::CharacterDBGodhoodData* godhooddata);

  // optional .proto_ff.CharacterDBRecoveryData recoveryData = 55;
  inline bool has_recoverydata() const;
  inline void clear_recoverydata();
  static const int kRecoveryDataFieldNumber = 55;
  inline const ::proto_ff::CharacterDBRecoveryData& recoverydata() const;
  inline ::proto_ff::CharacterDBRecoveryData* mutable_recoverydata();
  inline ::proto_ff::CharacterDBRecoveryData* release_recoverydata();
  inline void set_allocated_recoverydata(::proto_ff::CharacterDBRecoveryData* recoverydata);

  // optional .proto_ff.CharacterDBActivityData activityData = 56;
  inline bool has_activitydata() const;
  inline void clear_activitydata();
  static const int kActivityDataFieldNumber = 56;
  inline const ::proto_ff::CharacterDBActivityData& activitydata() const;
  inline ::proto_ff::CharacterDBActivityData* mutable_activitydata();
  inline ::proto_ff::CharacterDBActivityData* release_activitydata();
  inline void set_allocated_activitydata(::proto_ff::CharacterDBActivityData* activitydata);

  // optional .proto_ff.CharacterDBSOAcitveData soActivityData = 57;
  inline bool has_soactivitydata() const;
  inline void clear_soactivitydata();
  static const int kSoActivityDataFieldNumber = 57;
  inline const ::proto_ff::CharacterDBSOAcitveData& soactivitydata() const;
  inline ::proto_ff::CharacterDBSOAcitveData* mutable_soactivitydata();
  inline ::proto_ff::CharacterDBSOAcitveData* release_soactivitydata();
  inline void set_allocated_soactivitydata(::proto_ff::CharacterDBSOAcitveData* soactivitydata);

  // optional .proto_ff.CharacterDBUseItemData useitemData = 58;
  inline bool has_useitemdata() const;
  inline void clear_useitemdata();
  static const int kUseitemDataFieldNumber = 58;
  inline const ::proto_ff::CharacterDBUseItemData& useitemdata() const;
  inline ::proto_ff::CharacterDBUseItemData* mutable_useitemdata();
  inline ::proto_ff::CharacterDBUseItemData* release_useitemdata();
  inline void set_allocated_useitemdata(::proto_ff::CharacterDBUseItemData* useitemdata);

  // optional .proto_ff.CharacterDBDayUseItemData dayUseItemData = 59;
  inline bool has_dayuseitemdata() const;
  inline void clear_dayuseitemdata();
  static const int kDayUseItemDataFieldNumber = 59;
  inline const ::proto_ff::CharacterDBDayUseItemData& dayuseitemdata() const;
  inline ::proto_ff::CharacterDBDayUseItemData* mutable_dayuseitemdata();
  inline ::proto_ff::CharacterDBDayUseItemData* release_dayuseitemdata();
  inline void set_allocated_dayuseitemdata(::proto_ff::CharacterDBDayUseItemData* dayuseitemdata);

  // optional .proto_ff.CharacterDBMysteryShopData mysteryshop_data = 60;
  inline bool has_mysteryshop_data() const;
  inline void clear_mysteryshop_data();
  static const int kMysteryshopDataFieldNumber = 60;
  inline const ::proto_ff::CharacterDBMysteryShopData& mysteryshop_data() const;
  inline ::proto_ff::CharacterDBMysteryShopData* mutable_mysteryshop_data();
  inline ::proto_ff::CharacterDBMysteryShopData* release_mysteryshop_data();
  inline void set_allocated_mysteryshop_data(::proto_ff::CharacterDBMysteryShopData* mysteryshop_data);

  // optional .proto_ff.CharacterDBPackageTestRebateData packagetestrebate_data = 61;
  inline bool has_packagetestrebate_data() const;
  inline void clear_packagetestrebate_data();
  static const int kPackagetestrebateDataFieldNumber = 61;
  inline const ::proto_ff::CharacterDBPackageTestRebateData& packagetestrebate_data() const;
  inline ::proto_ff::CharacterDBPackageTestRebateData* mutable_packagetestrebate_data();
  inline ::proto_ff::CharacterDBPackageTestRebateData* release_packagetestrebate_data();
  inline void set_allocated_packagetestrebate_data(::proto_ff::CharacterDBPackageTestRebateData* packagetestrebate_data);

  // optional .proto_ff.FuncFightDBData fight_data = 62;
  inline bool has_fight_data() const;
  inline void clear_fight_data();
  static const int kFightDataFieldNumber = 62;
  inline const ::proto_ff::FuncFightDBData& fight_data() const;
  inline ::proto_ff::FuncFightDBData* mutable_fight_data();
  inline ::proto_ff::FuncFightDBData* release_fight_data();
  inline void set_allocated_fight_data(::proto_ff::FuncFightDBData* fight_data);

  // optional .proto_ff.PowerInfoDBList power_data = 63;
  inline bool has_power_data() const;
  inline void clear_power_data();
  static const int kPowerDataFieldNumber = 63;
  inline const ::proto_ff::PowerInfoDBList& power_data() const;
  inline ::proto_ff::PowerInfoDBList* mutable_power_data();
  inline ::proto_ff::PowerInfoDBList* release_power_data();
  inline void set_allocated_power_data(::proto_ff::PowerInfoDBList* power_data);

  // optional .proto_ff.OccupationTakeList occupation_data = 64;
  inline bool has_occupation_data() const;
  inline void clear_occupation_data();
  static const int kOccupationDataFieldNumber = 64;
  inline const ::proto_ff::OccupationTakeList& occupation_data() const;
  inline ::proto_ff::OccupationTakeList* mutable_occupation_data();
  inline ::proto_ff::OccupationTakeList* release_occupation_data();
  inline void set_allocated_occupation_data(::proto_ff::OccupationTakeList* occupation_data);

  // optional .proto_ff.CharacterDBHeadSetData headset_data = 65;
  inline bool has_headset_data() const;
  inline void clear_headset_data();
  static const int kHeadsetDataFieldNumber = 65;
  inline const ::proto_ff::CharacterDBHeadSetData& headset_data() const;
  inline ::proto_ff::CharacterDBHeadSetData* mutable_headset_data();
  inline ::proto_ff::CharacterDBHeadSetData* release_headset_data();
  inline void set_allocated_headset_data(::proto_ff::CharacterDBHeadSetData* headset_data);

  // optional .proto_ff.CharacterDBOnlineGiftData online_gift_data = 66;
  inline bool has_online_gift_data() const;
  inline void clear_online_gift_data();
  static const int kOnlineGiftDataFieldNumber = 66;
  inline const ::proto_ff::CharacterDBOnlineGiftData& online_gift_data() const;
  inline ::proto_ff::CharacterDBOnlineGiftData* mutable_online_gift_data();
  inline ::proto_ff::CharacterDBOnlineGiftData* release_online_gift_data();
  inline void set_allocated_online_gift_data(::proto_ff::CharacterDBOnlineGiftData* online_gift_data);

  // optional .proto_ff.CharDropLimitDBData droplimit_data = 67;
  inline bool has_droplimit_data() const;
  inline void clear_droplimit_data();
  static const int kDroplimitDataFieldNumber = 67;
  inline const ::proto_ff::CharDropLimitDBData& droplimit_data() const;
  inline ::proto_ff::CharDropLimitDBData* mutable_droplimit_data();
  inline ::proto_ff::CharDropLimitDBData* release_droplimit_data();
  inline void set_allocated_droplimit_data(::proto_ff::CharDropLimitDBData* droplimit_data);

  // optional .proto_ff.CharacterDBGmHelpData gmhelp_data = 68;
  inline bool has_gmhelp_data() const;
  inline void clear_gmhelp_data();
  static const int kGmhelpDataFieldNumber = 68;
  inline const ::proto_ff::CharacterDBGmHelpData& gmhelp_data() const;
  inline ::proto_ff::CharacterDBGmHelpData* mutable_gmhelp_data();
  inline ::proto_ff::CharacterDBGmHelpData* release_gmhelp_data();
  inline void set_allocated_gmhelp_data(::proto_ff::CharacterDBGmHelpData* gmhelp_data);

  // optional .proto_ff.CharacterDBGodGMData godgm_data = 69;
  inline bool has_godgm_data() const;
  inline void clear_godgm_data();
  static const int kGodgmDataFieldNumber = 69;
  inline const ::proto_ff::CharacterDBGodGMData& godgm_data() const;
  inline ::proto_ff::CharacterDBGodGMData* mutable_godgm_data();
  inline ::proto_ff::CharacterDBGodGMData* release_godgm_data();
  inline void set_allocated_godgm_data(::proto_ff::CharacterDBGodGMData* godgm_data);

  // optional .proto_ff.BowlDBData bowl_data = 70;
  inline bool has_bowl_data() const;
  inline void clear_bowl_data();
  static const int kBowlDataFieldNumber = 70;
  inline const ::proto_ff::BowlDBData& bowl_data() const;
  inline ::proto_ff::BowlDBData* mutable_bowl_data();
  inline ::proto_ff::BowlDBData* release_bowl_data();
  inline void set_allocated_bowl_data(::proto_ff::BowlDBData* bowl_data);

  // optional .proto_ff.CharacterDBPackageData bagitemData = 71;
  inline bool has_bagitemdata() const;
  inline void clear_bagitemdata();
  static const int kBagitemDataFieldNumber = 71;
  inline const ::proto_ff::CharacterDBPackageData& bagitemdata() const;
  inline ::proto_ff::CharacterDBPackageData* mutable_bagitemdata();
  inline ::proto_ff::CharacterDBPackageData* release_bagitemdata();
  inline void set_allocated_bagitemdata(::proto_ff::CharacterDBPackageData* bagitemdata);

  // optional .proto_ff.CharacterDBHideData hide_data = 72;
  inline bool has_hide_data() const;
  inline void clear_hide_data();
  static const int kHideDataFieldNumber = 72;
  inline const ::proto_ff::CharacterDBHideData& hide_data() const;
  inline ::proto_ff::CharacterDBHideData* mutable_hide_data();
  inline ::proto_ff::CharacterDBHideData* release_hide_data();
  inline void set_allocated_hide_data(::proto_ff::CharacterDBHideData* hide_data);

  // @@protoc_insertion_point(class_scope:proto_ff.tbRoleInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_bornzoneid();
  inline void clear_has_bornzoneid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_deletechartime();
  inline void clear_has_deletechartime();
  inline void set_has_dirty();
  inline void clear_has_dirty();
  inline void set_has_basedata();
  inline void clear_has_basedata();
  inline void set_has_itemdata();
  inline void clear_has_itemdata();
  inline void set_has_taskdata();
  inline void clear_has_taskdata();
  inline void set_has_skilldata();
  inline void clear_has_skilldata();
  inline void set_has_extenddata();
  inline void clear_has_extenddata();
  inline void set_has_equipdata();
  inline void clear_has_equipdata();
  inline void set_has_duplicatedata();
  inline void clear_has_duplicatedata();
  inline void set_has_achievementdata();
  inline void clear_has_achievementdata();
  inline void set_has_buffdata();
  inline void clear_has_buffdata();
  inline void set_has_arenadata();
  inline void clear_has_arenadata();
  inline void set_has_titledata();
  inline void clear_has_titledata();
  inline void set_has_operatelimitdata();
  inline void clear_has_operatelimitdata();
  inline void set_has_huoyuedudata();
  inline void clear_has_huoyuedudata();
  inline void set_has_operatedata();
  inline void clear_has_operatedata();
  inline void set_has_playeractiveinfo();
  inline void clear_has_playeractiveinfo();
  inline void set_has_cpaydata();
  inline void clear_has_cpaydata();
  inline void set_has_unlockinfo();
  inline void clear_has_unlockinfo();
  inline void set_has_emblemdata();
  inline void clear_has_emblemdata();
  inline void set_has_identifydata();
  inline void clear_has_identifydata();
  inline void set_has_elementdata();
  inline void clear_has_elementdata();
  inline void set_has_fashiondata();
  inline void clear_has_fashiondata();
  inline void set_has_wingdata();
  inline void clear_has_wingdata();
  inline void set_has_mountdata();
  inline void clear_has_mountdata();
  inline void set_has_bossdata();
  inline void clear_has_bossdata();
  inline void set_has_pvpdata();
  inline void clear_has_pvpdata();
  inline void set_has_treasure_data();
  inline void clear_has_treasure_data();
  inline void set_has_artifact_data();
  inline void clear_has_artifact_data();
  inline void set_has_fatestardata();
  inline void clear_has_fatestardata();
  inline void set_has_convoydata();
  inline void clear_has_convoydata();
  inline void set_has_daily_data();
  inline void clear_has_daily_data();
  inline void set_has_field_data();
  inline void clear_has_field_data();
  inline void set_has_vipdata();
  inline void clear_has_vipdata();
  inline void set_has_partnerdata();
  inline void clear_has_partnerdata();
  inline void set_has_malldata();
  inline void clear_has_malldata();
  inline void set_has_godhooddata();
  inline void clear_has_godhooddata();
  inline void set_has_recoverydata();
  inline void clear_has_recoverydata();
  inline void set_has_activitydata();
  inline void clear_has_activitydata();
  inline void set_has_soactivitydata();
  inline void clear_has_soactivitydata();
  inline void set_has_useitemdata();
  inline void clear_has_useitemdata();
  inline void set_has_dayuseitemdata();
  inline void clear_has_dayuseitemdata();
  inline void set_has_mysteryshop_data();
  inline void clear_has_mysteryshop_data();
  inline void set_has_packagetestrebate_data();
  inline void clear_has_packagetestrebate_data();
  inline void set_has_fight_data();
  inline void clear_has_fight_data();
  inline void set_has_power_data();
  inline void clear_has_power_data();
  inline void set_has_occupation_data();
  inline void clear_has_occupation_data();
  inline void set_has_headset_data();
  inline void clear_has_headset_data();
  inline void set_has_online_gift_data();
  inline void clear_has_online_gift_data();
  inline void set_has_droplimit_data();
  inline void clear_has_droplimit_data();
  inline void set_has_gmhelp_data();
  inline void clear_has_gmhelp_data();
  inline void set_has_godgm_data();
  inline void clear_has_godgm_data();
  inline void set_has_bowl_data();
  inline void clear_has_bowl_data();
  inline void set_has_bagitemdata();
  inline void clear_has_bagitemdata();
  inline void set_has_hide_data();
  inline void clear_has_hide_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 bornzoneid_;
  ::std::string* charname_;
  ::std::string* platid_;
  ::google::protobuf::uint64 deletechartime_;
  ::proto_ff::CharacterDBBaseInfo* basedata_;
  ::proto_ff::CharacterDBPackageData* itemdata_;
  ::proto_ff::CharacterDBTaskData* taskdata_;
  ::proto_ff::CharacterDBSkillData* skilldata_;
  ::proto_ff::CharacterDBExtendData* extenddata_;
  ::proto_ff::CharacterDBEquipData* equipdata_;
  ::proto_ff::CharacterDBDuplicateData* duplicatedata_;
  ::proto_ff::CharacterAchievementDBData* achievementdata_;
  ::proto_ff::CharacterBuffData* buffdata_;
  ::proto_ff::CharacterArenaData* arenadata_;
  ::proto_ff::CharacterTitleSaveData* titledata_;
  ::proto_ff::CharacterDBOperateLimitInfo* operatelimitdata_;
  ::proto_ff::CharacterDBHuoYueDuInfo* huoyuedudata_;
  ::proto_ff::CharacterDBOperateData* operatedata_;
  ::proto_ff::CharacterDBActiveInfo* playeractiveinfo_;
  ::proto_ff::CharacterPayData* cpaydata_;
  ::proto_ff::FunctionUnlockInfo* unlockinfo_;
  ::proto_ff::CharacterDBEmblemData* emblemdata_;
  ::proto_ff::CharacterDBIdentifyData* identifydata_;
  ::proto_ff::CharacterDBElementData* elementdata_;
  ::proto_ff::CharacterDBFashionData* fashiondata_;
  ::proto_ff::CharacterDBWingData* wingdata_;
  ::proto_ff::CharacterDBMountData* mountdata_;
  ::proto_ff::CharacterDBBossData* bossdata_;
  ::proto_ff::CharacterDBPvpData* pvpdata_;
  ::proto_ff::CharacterDBTreasureData* treasure_data_;
  ::proto_ff::CharacterDBArtifactData* artifact_data_;
  ::proto_ff::CharacterDBFateStarData* fatestardata_;
  ::proto_ff::CharacterDBConvoyData* convoydata_;
  ::proto_ff::CharacterDBDailyData* daily_data_;
  ::proto_ff::CharacterDBFieldData* field_data_;
  ::proto_ff::CharacterDBVipData* vipdata_;
  ::proto_ff::CharacterDBPartnerData* partnerdata_;
  ::proto_ff::CharacterDBMallData* malldata_;
  ::proto_ff::CharacterDBGodhoodData* godhooddata_;
  ::proto_ff::CharacterDBRecoveryData* recoverydata_;
  ::proto_ff::CharacterDBActivityData* activitydata_;
  ::proto_ff::CharacterDBSOAcitveData* soactivitydata_;
  ::proto_ff::CharacterDBUseItemData* useitemdata_;
  ::proto_ff::CharacterDBDayUseItemData* dayuseitemdata_;
  ::proto_ff::CharacterDBMysteryShopData* mysteryshop_data_;
  ::proto_ff::CharacterDBPackageTestRebateData* packagetestrebate_data_;
  ::proto_ff::FuncFightDBData* fight_data_;
  ::proto_ff::PowerInfoDBList* power_data_;
  ::proto_ff::OccupationTakeList* occupation_data_;
  ::proto_ff::CharacterDBHeadSetData* headset_data_;
  ::proto_ff::CharacterDBOnlineGiftData* online_gift_data_;
  ::proto_ff::CharDropLimitDBData* droplimit_data_;
  ::proto_ff::CharacterDBGmHelpData* gmhelp_data_;
  ::proto_ff::CharacterDBGodGMData* godgm_data_;
  ::proto_ff::BowlDBData* bowl_data_;
  ::proto_ff::CharacterDBPackageData* bagitemdata_;
  ::proto_ff::CharacterDBHideData* hide_data_;
  ::google::protobuf::int32 dirty_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(60 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static tbRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterDBSimpleInfo : public ::google::protobuf::Message {
 public:
  CharacterDBSimpleInfo();
  virtual ~CharacterDBSimpleInfo();

  CharacterDBSimpleInfo(const CharacterDBSimpleInfo& from);

  inline CharacterDBSimpleInfo& operator=(const CharacterDBSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterDBSimpleInfo& default_instance();

  void Swap(CharacterDBSimpleInfo* other);

  // implements Message ----------------------------------------------

  CharacterDBSimpleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterDBSimpleInfo& from);
  void MergeFrom(const CharacterDBSimpleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional uint32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int64 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional uint64 hp = 7;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 7;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // optional uint64 fightPower = 8;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightPowerFieldNumber = 8;
  inline ::google::protobuf::uint64 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint64 value);

  // optional uint64 enter_scene_id = 9;
  inline bool has_enter_scene_id() const;
  inline void clear_enter_scene_id();
  static const int kEnterSceneIdFieldNumber = 9;
  inline ::google::protobuf::uint64 enter_scene_id() const;
  inline void set_enter_scene_id(::google::protobuf::uint64 value);

  // optional uint64 enter_map_id = 10;
  inline bool has_enter_map_id() const;
  inline void clear_enter_map_id();
  static const int kEnterMapIdFieldNumber = 10;
  inline ::google::protobuf::uint64 enter_map_id() const;
  inline void set_enter_map_id(::google::protobuf::uint64 value);

  // optional float enterPosX = 11;
  inline bool has_enterposx() const;
  inline void clear_enterposx();
  static const int kEnterPosXFieldNumber = 11;
  inline float enterposx() const;
  inline void set_enterposx(float value);

  // optional float enterPosY = 12;
  inline bool has_enterposy() const;
  inline void clear_enterposy();
  static const int kEnterPosYFieldNumber = 12;
  inline float enterposy() const;
  inline void set_enterposy(float value);

  // optional float enterPosZ = 13;
  inline bool has_enterposz() const;
  inline void clear_enterposz();
  static const int kEnterPosZFieldNumber = 13;
  inline float enterposz() const;
  inline void set_enterposz(float value);

  // optional uint64 lastSceneId = 14;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastSceneIdFieldNumber = 14;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastMapId = 15;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastMapIdFieldNumber = 15;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional float lastPosX = 16;
  inline bool has_lastposx() const;
  inline void clear_lastposx();
  static const int kLastPosXFieldNumber = 16;
  inline float lastposx() const;
  inline void set_lastposx(float value);

  // optional float lastPosY = 17;
  inline bool has_lastposy() const;
  inline void clear_lastposy();
  static const int kLastPosYFieldNumber = 17;
  inline float lastposy() const;
  inline void set_lastposy(float value);

  // optional float lastPosZ = 18;
  inline bool has_lastposz() const;
  inline void clear_lastposz();
  static const int kLastPosZFieldNumber = 18;
  inline float lastposz() const;
  inline void set_lastposz(float value);

  // optional .proto_ff.CharFacadeProto facade = 19;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 19;
  inline const ::proto_ff::CharFacadeProto& facade() const;
  inline ::proto_ff::CharFacadeProto* mutable_facade();
  inline ::proto_ff::CharFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::CharFacadeProto* facade);

  // optional int32 curstate = 20;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 20;
  inline ::google::protobuf::int32 curstate() const;
  inline void set_curstate(::google::protobuf::int32 value);

  // optional uint64 deletechartime = 21;
  inline bool has_deletechartime() const;
  inline void clear_deletechartime();
  static const int kDeletechartimeFieldNumber = 21;
  inline ::google::protobuf::uint64 deletechartime() const;
  inline void set_deletechartime(::google::protobuf::uint64 value);

  // optional uint64 createTime = 22;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 22;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint32 totalpay = 23;
  inline bool has_totalpay() const;
  inline void clear_totalpay();
  static const int kTotalpayFieldNumber = 23;
  inline ::google::protobuf::uint32 totalpay() const;
  inline void set_totalpay(::google::protobuf::uint32 value);

  // optional float clx = 24;
  inline bool has_clx() const;
  inline void clear_clx();
  static const int kClxFieldNumber = 24;
  inline float clx() const;
  inline void set_clx(float value);

  // optional float cly = 25;
  inline bool has_cly() const;
  inline void clear_cly();
  static const int kClyFieldNumber = 25;
  inline float cly() const;
  inline void set_cly(float value);

  // optional float clz = 26;
  inline bool has_clz() const;
  inline void clear_clz();
  static const int kClzFieldNumber = 26;
  inline float clz() const;
  inline void set_clz(float value);

  // optional uint64 occupation = 27;
  inline bool has_occupation() const;
  inline void clear_occupation();
  static const int kOccupationFieldNumber = 27;
  inline ::google::protobuf::uint64 occupation() const;
  inline void set_occupation(::google::protobuf::uint64 value);

  // optional uint64 aptitude = 28;
  inline bool has_aptitude() const;
  inline void clear_aptitude();
  static const int kAptitudeFieldNumber = 28;
  inline ::google::protobuf::uint64 aptitude() const;
  inline void set_aptitude(::google::protobuf::uint64 value);

  // optional int32 finish_flag = 29;
  inline bool has_finish_flag() const;
  inline void clear_finish_flag();
  static const int kFinishFlagFieldNumber = 29;
  inline ::google::protobuf::int32 finish_flag() const;
  inline void set_finish_flag(::google::protobuf::int32 value);

  // optional string platid = 30;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatidFieldNumber = 30;
  inline const ::std::string& platid() const;
  inline void set_platid(const ::std::string& value);
  inline void set_platid(const char* value);
  inline void set_platid(const char* value, size_t size);
  inline ::std::string* mutable_platid();
  inline ::std::string* release_platid();
  inline void set_allocated_platid(::std::string* platid);

  // optional int32 palace_layer = 31;
  inline bool has_palace_layer() const;
  inline void clear_palace_layer();
  static const int kPalaceLayerFieldNumber = 31;
  inline ::google::protobuf::int32 palace_layer() const;
  inline void set_palace_layer(::google::protobuf::int32 value);

  // optional int32 palace_break_count = 32;
  inline bool has_palace_break_count() const;
  inline void clear_palace_break_count();
  static const int kPalaceBreakCountFieldNumber = 32;
  inline ::google::protobuf::int32 palace_break_count() const;
  inline void set_palace_break_count(::google::protobuf::int32 value);

  // optional int32 dirty = 33;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 33;
  inline ::google::protobuf::int32 dirty() const;
  inline void set_dirty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterDBSimpleInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_enter_scene_id();
  inline void clear_has_enter_scene_id();
  inline void set_has_enter_map_id();
  inline void clear_has_enter_map_id();
  inline void set_has_enterposx();
  inline void clear_has_enterposx();
  inline void set_has_enterposy();
  inline void clear_has_enterposy();
  inline void set_has_enterposz();
  inline void clear_has_enterposz();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastposx();
  inline void clear_has_lastposx();
  inline void set_has_lastposy();
  inline void clear_has_lastposy();
  inline void set_has_lastposz();
  inline void clear_has_lastposz();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_deletechartime();
  inline void clear_has_deletechartime();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_totalpay();
  inline void clear_has_totalpay();
  inline void set_has_clx();
  inline void clear_has_clx();
  inline void set_has_cly();
  inline void clear_has_cly();
  inline void set_has_clz();
  inline void clear_has_clz();
  inline void set_has_occupation();
  inline void clear_has_occupation();
  inline void set_has_aptitude();
  inline void clear_has_aptitude();
  inline void set_has_finish_flag();
  inline void clear_has_finish_flag();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_palace_layer();
  inline void clear_has_palace_layer();
  inline void set_has_palace_break_count();
  inline void clear_has_palace_break_count();
  inline void set_has_dirty();
  inline void clear_has_dirty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::uint64 hp_;
  ::google::protobuf::uint64 fightpower_;
  ::google::protobuf::uint32 level_;
  float enterposx_;
  ::google::protobuf::uint64 enter_scene_id_;
  ::google::protobuf::uint64 enter_map_id_;
  float enterposy_;
  float enterposz_;
  ::google::protobuf::uint64 lastsceneid_;
  ::google::protobuf::uint64 lastmapid_;
  float lastposx_;
  float lastposy_;
  float lastposz_;
  ::google::protobuf::int32 curstate_;
  ::proto_ff::CharFacadeProto* facade_;
  ::google::protobuf::uint64 deletechartime_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint32 totalpay_;
  float clx_;
  float cly_;
  float clz_;
  ::google::protobuf::uint64 occupation_;
  ::google::protobuf::uint64 aptitude_;
  ::std::string* platid_;
  ::google::protobuf::int32 finish_flag_;
  ::google::protobuf::int32 palace_layer_;
  ::google::protobuf::int32 palace_break_count_;
  ::google::protobuf::int32 dirty_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(33 + 31) / 32];

  friend void  protobuf_AddDesc_common_5flogic_2eproto();
  friend void protobuf_AssignDesc_common_5flogic_2eproto();
  friend void protobuf_ShutdownFile_common_5flogic_2eproto();

  void InitAsDefaultInstance();
  static CharacterDBSimpleInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// PacketMsg

// optional uint32 cmd = 1;
inline bool PacketMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketMsg::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 PacketMsg::cmd() const {
  return cmd_;
}
inline void PacketMsg::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional uint32 serverType = 2;
inline bool PacketMsg::has_servertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketMsg::set_has_servertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketMsg::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketMsg::clear_servertype() {
  servertype_ = 0u;
  clear_has_servertype();
}
inline ::google::protobuf::uint32 PacketMsg::servertype() const {
  return servertype_;
}
inline void PacketMsg::set_servertype(::google::protobuf::uint32 value) {
  set_has_servertype();
  servertype_ = value;
}

// optional uint32 upper_limit = 3;
inline bool PacketMsg::has_upper_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketMsg::set_has_upper_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketMsg::clear_has_upper_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketMsg::clear_upper_limit() {
  upper_limit_ = 0u;
  clear_has_upper_limit();
}
inline ::google::protobuf::uint32 PacketMsg::upper_limit() const {
  return upper_limit_;
}
inline void PacketMsg::set_upper_limit(::google::protobuf::uint32 value) {
  set_has_upper_limit();
  upper_limit_ = value;
}

// optional uint32 min_interval = 4;
inline bool PacketMsg::has_min_interval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PacketMsg::set_has_min_interval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PacketMsg::clear_has_min_interval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PacketMsg::clear_min_interval() {
  min_interval_ = 0u;
  clear_has_min_interval();
}
inline ::google::protobuf::uint32 PacketMsg::min_interval() const {
  return min_interval_;
}
inline void PacketMsg::set_min_interval(::google::protobuf::uint32 value) {
  set_has_min_interval();
  min_interval_ = value;
}

// optional uint32 control_time = 5;
inline bool PacketMsg::has_control_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PacketMsg::set_has_control_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PacketMsg::clear_has_control_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PacketMsg::clear_control_time() {
  control_time_ = 0u;
  clear_has_control_time();
}
inline ::google::protobuf::uint32 PacketMsg::control_time() const {
  return control_time_;
}
inline void PacketMsg::set_control_time(::google::protobuf::uint32 value) {
  set_has_control_time();
  control_time_ = value;
}

// -------------------------------------------------------------------

// ServerPacketMsg

// repeated .proto_ff.PacketMsg PacketMsg = 1;
inline int ServerPacketMsg::packetmsg_size() const {
  return packetmsg_.size();
}
inline void ServerPacketMsg::clear_packetmsg() {
  packetmsg_.Clear();
}
inline const ::proto_ff::PacketMsg& ServerPacketMsg::packetmsg(int index) const {
  return packetmsg_.Get(index);
}
inline ::proto_ff::PacketMsg* ServerPacketMsg::mutable_packetmsg(int index) {
  return packetmsg_.Mutable(index);
}
inline ::proto_ff::PacketMsg* ServerPacketMsg::add_packetmsg() {
  return packetmsg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >&
ServerPacketMsg::packetmsg() const {
  return packetmsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PacketMsg >*
ServerPacketMsg::mutable_packetmsg() {
  return &packetmsg_;
}

// -------------------------------------------------------------------

// WorldExternalConfig

// optional bool TokenTimeCheck = 1;
inline bool WorldExternalConfig::has_tokentimecheck() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldExternalConfig::set_has_tokentimecheck() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldExternalConfig::clear_has_tokentimecheck() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldExternalConfig::clear_tokentimecheck() {
  tokentimecheck_ = false;
  clear_has_tokentimecheck();
}
inline bool WorldExternalConfig::tokentimecheck() const {
  return tokentimecheck_;
}
inline void WorldExternalConfig::set_tokentimecheck(bool value) {
  set_has_tokentimecheck();
  tokentimecheck_ = value;
}

// -------------------------------------------------------------------

// CharFacadeProto

// optional uint64 cur_mount_id = 1;
inline bool CharFacadeProto::has_cur_mount_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharFacadeProto::set_has_cur_mount_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharFacadeProto::clear_has_cur_mount_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharFacadeProto::clear_cur_mount_id() {
  cur_mount_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_mount_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::cur_mount_id() const {
  return cur_mount_id_;
}
inline void CharFacadeProto::set_cur_mount_id(::google::protobuf::uint64 value) {
  set_has_cur_mount_id();
  cur_mount_id_ = value;
}

// optional uint64 wing_id = 2;
inline bool CharFacadeProto::has_wing_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharFacadeProto::set_has_wing_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharFacadeProto::clear_has_wing_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharFacadeProto::clear_wing_id() {
  wing_id_ = GOOGLE_ULONGLONG(0);
  clear_has_wing_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::wing_id() const {
  return wing_id_;
}
inline void CharFacadeProto::set_wing_id(::google::protobuf::uint64 value) {
  set_has_wing_id();
  wing_id_ = value;
}

// optional uint64 fashion_clothes_id = 3;
inline bool CharFacadeProto::has_fashion_clothes_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharFacadeProto::set_has_fashion_clothes_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharFacadeProto::clear_has_fashion_clothes_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharFacadeProto::clear_fashion_clothes_id() {
  fashion_clothes_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fashion_clothes_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::fashion_clothes_id() const {
  return fashion_clothes_id_;
}
inline void CharFacadeProto::set_fashion_clothes_id(::google::protobuf::uint64 value) {
  set_has_fashion_clothes_id();
  fashion_clothes_id_ = value;
}

// optional uint64 fashion_weapon_id = 4;
inline bool CharFacadeProto::has_fashion_weapon_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharFacadeProto::set_has_fashion_weapon_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharFacadeProto::clear_has_fashion_weapon_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharFacadeProto::clear_fashion_weapon_id() {
  fashion_weapon_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fashion_weapon_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::fashion_weapon_id() const {
  return fashion_weapon_id_;
}
inline void CharFacadeProto::set_fashion_weapon_id(::google::protobuf::uint64 value) {
  set_has_fashion_weapon_id();
  fashion_weapon_id_ = value;
}

// optional uint64 occupationId = 5;
inline bool CharFacadeProto::has_occupationid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharFacadeProto::set_has_occupationid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharFacadeProto::clear_has_occupationid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharFacadeProto::clear_occupationid() {
  occupationid_ = GOOGLE_ULONGLONG(0);
  clear_has_occupationid();
}
inline ::google::protobuf::uint64 CharFacadeProto::occupationid() const {
  return occupationid_;
}
inline void CharFacadeProto::set_occupationid(::google::protobuf::uint64 value) {
  set_has_occupationid();
  occupationid_ = value;
}

// optional uint64 treasure_id = 6;
inline bool CharFacadeProto::has_treasure_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharFacadeProto::set_has_treasure_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharFacadeProto::clear_has_treasure_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharFacadeProto::clear_treasure_id() {
  treasure_id_ = GOOGLE_ULONGLONG(0);
  clear_has_treasure_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::treasure_id() const {
  return treasure_id_;
}
inline void CharFacadeProto::set_treasure_id(::google::protobuf::uint64 value) {
  set_has_treasure_id();
  treasure_id_ = value;
}

// optional int32 treasure_type = 7;
inline bool CharFacadeProto::has_treasure_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharFacadeProto::set_has_treasure_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharFacadeProto::clear_has_treasure_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharFacadeProto::clear_treasure_type() {
  treasure_type_ = 0;
  clear_has_treasure_type();
}
inline ::google::protobuf::int32 CharFacadeProto::treasure_type() const {
  return treasure_type_;
}
inline void CharFacadeProto::set_treasure_type(::google::protobuf::int32 value) {
  set_has_treasure_type();
  treasure_type_ = value;
}

// optional uint64 artifact_id = 8;
inline bool CharFacadeProto::has_artifact_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharFacadeProto::set_has_artifact_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharFacadeProto::clear_has_artifact_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharFacadeProto::clear_artifact_id() {
  artifact_id_ = GOOGLE_ULONGLONG(0);
  clear_has_artifact_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::artifact_id() const {
  return artifact_id_;
}
inline void CharFacadeProto::set_artifact_id(::google::protobuf::uint64 value) {
  set_has_artifact_id();
  artifact_id_ = value;
}

// optional uint64 cur_select_mount_id = 9;
inline bool CharFacadeProto::has_cur_select_mount_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharFacadeProto::set_has_cur_select_mount_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharFacadeProto::clear_has_cur_select_mount_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharFacadeProto::clear_cur_select_mount_id() {
  cur_select_mount_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_select_mount_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::cur_select_mount_id() const {
  return cur_select_mount_id_;
}
inline void CharFacadeProto::set_cur_select_mount_id(::google::protobuf::uint64 value) {
  set_has_cur_select_mount_id();
  cur_select_mount_id_ = value;
}

// optional uint64 partner_id = 10;
inline bool CharFacadeProto::has_partner_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharFacadeProto::set_has_partner_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharFacadeProto::clear_has_partner_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharFacadeProto::clear_partner_id() {
  partner_id_ = GOOGLE_ULONGLONG(0);
  clear_has_partner_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::partner_id() const {
  return partner_id_;
}
inline void CharFacadeProto::set_partner_id(::google::protobuf::uint64 value) {
  set_has_partner_id();
  partner_id_ = value;
}

// optional uint64 head_id = 11;
inline bool CharFacadeProto::has_head_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharFacadeProto::set_has_head_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharFacadeProto::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharFacadeProto::clear_head_id() {
  head_id_ = GOOGLE_ULONGLONG(0);
  clear_has_head_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::head_id() const {
  return head_id_;
}
inline void CharFacadeProto::set_head_id(::google::protobuf::uint64 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint64 frame_id = 12;
inline bool CharFacadeProto::has_frame_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharFacadeProto::set_has_frame_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharFacadeProto::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharFacadeProto::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
  clear_has_frame_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::frame_id() const {
  return frame_id_;
}
inline void CharFacadeProto::set_frame_id(::google::protobuf::uint64 value) {
  set_has_frame_id();
  frame_id_ = value;
}

// optional uint64 bubble_id = 13;
inline bool CharFacadeProto::has_bubble_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharFacadeProto::set_has_bubble_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharFacadeProto::clear_has_bubble_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharFacadeProto::clear_bubble_id() {
  bubble_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bubble_id();
}
inline ::google::protobuf::uint64 CharFacadeProto::bubble_id() const {
  return bubble_id_;
}
inline void CharFacadeProto::set_bubble_id(::google::protobuf::uint64 value) {
  set_has_bubble_id();
  bubble_id_ = value;
}

// -------------------------------------------------------------------

// CharTrimProto

// optional int32 trim_type = 1;
inline bool CharTrimProto::has_trim_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharTrimProto::set_has_trim_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharTrimProto::clear_has_trim_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharTrimProto::clear_trim_type() {
  trim_type_ = 0;
  clear_has_trim_type();
}
inline ::google::protobuf::int32 CharTrimProto::trim_type() const {
  return trim_type_;
}
inline void CharTrimProto::set_trim_type(::google::protobuf::int32 value) {
  set_has_trim_type();
  trim_type_ = value;
}

// optional int32 trim_level = 2;
inline bool CharTrimProto::has_trim_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharTrimProto::set_has_trim_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharTrimProto::clear_has_trim_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharTrimProto::clear_trim_level() {
  trim_level_ = 0;
  clear_has_trim_level();
}
inline ::google::protobuf::int32 CharTrimProto::trim_level() const {
  return trim_level_;
}
inline void CharTrimProto::set_trim_level(::google::protobuf::int32 value) {
  set_has_trim_level();
  trim_level_ = value;
}

// -------------------------------------------------------------------

// ForceDupProto

// optional int32 treasure_state = 1;
inline bool ForceDupProto::has_treasure_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForceDupProto::set_has_treasure_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForceDupProto::clear_has_treasure_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForceDupProto::clear_treasure_state() {
  treasure_state_ = 0;
  clear_has_treasure_state();
}
inline ::google::protobuf::int32 ForceDupProto::treasure_state() const {
  return treasure_state_;
}
inline void ForceDupProto::set_treasure_state(::google::protobuf::int32 value) {
  set_has_treasure_state();
  treasure_state_ = value;
}

// optional int32 ladder_state = 2;
inline bool ForceDupProto::has_ladder_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForceDupProto::set_has_ladder_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForceDupProto::clear_has_ladder_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForceDupProto::clear_ladder_state() {
  ladder_state_ = 0;
  clear_has_ladder_state();
}
inline ::google::protobuf::int32 ForceDupProto::ladder_state() const {
  return ladder_state_;
}
inline void ForceDupProto::set_ladder_state(::google::protobuf::int32 value) {
  set_has_ladder_state();
  ladder_state_ = value;
}

// -------------------------------------------------------------------

// CharMultTrimProto

// repeated .proto_ff.CharTrimProto trim_lst = 1;
inline int CharMultTrimProto::trim_lst_size() const {
  return trim_lst_.size();
}
inline void CharMultTrimProto::clear_trim_lst() {
  trim_lst_.Clear();
}
inline const ::proto_ff::CharTrimProto& CharMultTrimProto::trim_lst(int index) const {
  return trim_lst_.Get(index);
}
inline ::proto_ff::CharTrimProto* CharMultTrimProto::mutable_trim_lst(int index) {
  return trim_lst_.Mutable(index);
}
inline ::proto_ff::CharTrimProto* CharMultTrimProto::add_trim_lst() {
  return trim_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharTrimProto >&
CharMultTrimProto::trim_lst() const {
  return trim_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharTrimProto >*
CharMultTrimProto::mutable_trim_lst() {
  return &trim_lst_;
}

// -------------------------------------------------------------------

// CharacterDBBaseInfo

// optional uint64 createTime = 1;
inline bool CharacterDBBaseInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBBaseInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBBaseInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBBaseInfo::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::createtime() const {
  return createtime_;
}
inline void CharacterDBBaseInfo::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint64 lastSaveTime = 2;
inline bool CharacterDBBaseInfo::has_lastsavetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastsavetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBBaseInfo::clear_has_lastsavetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBBaseInfo::clear_lastsavetime() {
  lastsavetime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsavetime();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::lastsavetime() const {
  return lastsavetime_;
}
inline void CharacterDBBaseInfo::set_lastsavetime(::google::protobuf::uint64 value) {
  set_has_lastsavetime();
  lastsavetime_ = value;
}

// optional uint64 onlineTime = 3;
inline bool CharacterDBBaseInfo::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBBaseInfo::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBBaseInfo::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBBaseInfo::clear_onlinetime() {
  onlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_onlinetime();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::onlinetime() const {
  return onlinetime_;
}
inline void CharacterDBBaseInfo::set_onlinetime(::google::protobuf::uint64 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// optional uint64 loginTime = 4;
inline bool CharacterDBBaseInfo::has_logintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBBaseInfo::set_has_logintime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBBaseInfo::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBBaseInfo::clear_logintime() {
  logintime_ = GOOGLE_ULONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::logintime() const {
  return logintime_;
}
inline void CharacterDBBaseInfo::set_logintime(::google::protobuf::uint64 value) {
  set_has_logintime();
  logintime_ = value;
}

// optional uint64 logoutTime = 5;
inline bool CharacterDBBaseInfo::has_logouttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBBaseInfo::set_has_logouttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBBaseInfo::clear_has_logouttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBBaseInfo::clear_logouttime() {
  logouttime_ = GOOGLE_ULONGLONG(0);
  clear_has_logouttime();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::logouttime() const {
  return logouttime_;
}
inline void CharacterDBBaseInfo::set_logouttime(::google::protobuf::uint64 value) {
  set_has_logouttime();
  logouttime_ = value;
}

// optional string name = 6;
inline bool CharacterDBBaseInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBBaseInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBBaseInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBBaseInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CharacterDBBaseInfo::name() const {
  return *name_;
}
inline void CharacterDBBaseInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharacterDBBaseInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharacterDBBaseInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterDBBaseInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CharacterDBBaseInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterDBBaseInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 sex = 7;
inline bool CharacterDBBaseInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBBaseInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBBaseInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBBaseInfo::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 CharacterDBBaseInfo::sex() const {
  return sex_;
}
inline void CharacterDBBaseInfo::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// optional uint32 prof = 8;
inline bool CharacterDBBaseInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBBaseInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBBaseInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBBaseInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 CharacterDBBaseInfo::prof() const {
  return prof_;
}
inline void CharacterDBBaseInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 9;
inline bool CharacterDBBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBBaseInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CharacterDBBaseInfo::level() const {
  return level_;
}
inline void CharacterDBBaseInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int64 exp = 10;
inline bool CharacterDBBaseInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterDBBaseInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterDBBaseInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterDBBaseInfo::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::exp() const {
  return exp_;
}
inline void CharacterDBBaseInfo::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// optional int64 hp = 11;
inline bool CharacterDBBaseInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterDBBaseInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterDBBaseInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterDBBaseInfo::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::hp() const {
  return hp_;
}
inline void CharacterDBBaseInfo::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 fight = 12;
inline bool CharacterDBBaseInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterDBBaseInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterDBBaseInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterDBBaseInfo::clear_fight() {
  fight_ = GOOGLE_LONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::fight() const {
  return fight_;
}
inline void CharacterDBBaseInfo::set_fight(::google::protobuf::int64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 gold = 13;
inline bool CharacterDBBaseInfo::has_gold() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_gold() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterDBBaseInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterDBBaseInfo::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::gold() const {
  return gold_;
}
inline void CharacterDBBaseInfo::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 diamond = 14;
inline bool CharacterDBBaseInfo::has_diamond() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_diamond() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterDBBaseInfo::clear_has_diamond() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterDBBaseInfo::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::diamond() const {
  return diamond_;
}
inline void CharacterDBBaseInfo::set_diamond(::google::protobuf::uint64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 binddiamond = 15;
inline bool CharacterDBBaseInfo::has_binddiamond() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_binddiamond() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharacterDBBaseInfo::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharacterDBBaseInfo::clear_binddiamond() {
  binddiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::binddiamond() const {
  return binddiamond_;
}
inline void CharacterDBBaseInfo::set_binddiamond(::google::protobuf::uint64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional uint64 enter_scene_id = 16;
inline bool CharacterDBBaseInfo::has_enter_scene_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_enter_scene_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CharacterDBBaseInfo::clear_has_enter_scene_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CharacterDBBaseInfo::clear_enter_scene_id() {
  enter_scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_scene_id();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::enter_scene_id() const {
  return enter_scene_id_;
}
inline void CharacterDBBaseInfo::set_enter_scene_id(::google::protobuf::uint64 value) {
  set_has_enter_scene_id();
  enter_scene_id_ = value;
}

// optional uint64 enter_map_id = 17;
inline bool CharacterDBBaseInfo::has_enter_map_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_enter_map_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharacterDBBaseInfo::clear_has_enter_map_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharacterDBBaseInfo::clear_enter_map_id() {
  enter_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_map_id();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::enter_map_id() const {
  return enter_map_id_;
}
inline void CharacterDBBaseInfo::set_enter_map_id(::google::protobuf::uint64 value) {
  set_has_enter_map_id();
  enter_map_id_ = value;
}

// optional float enterPosX = 18;
inline bool CharacterDBBaseInfo::has_enterposx() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_enterposx() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharacterDBBaseInfo::clear_has_enterposx() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharacterDBBaseInfo::clear_enterposx() {
  enterposx_ = 0;
  clear_has_enterposx();
}
inline float CharacterDBBaseInfo::enterposx() const {
  return enterposx_;
}
inline void CharacterDBBaseInfo::set_enterposx(float value) {
  set_has_enterposx();
  enterposx_ = value;
}

// optional float enterPosY = 19;
inline bool CharacterDBBaseInfo::has_enterposy() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_enterposy() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharacterDBBaseInfo::clear_has_enterposy() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharacterDBBaseInfo::clear_enterposy() {
  enterposy_ = 0;
  clear_has_enterposy();
}
inline float CharacterDBBaseInfo::enterposy() const {
  return enterposy_;
}
inline void CharacterDBBaseInfo::set_enterposy(float value) {
  set_has_enterposy();
  enterposy_ = value;
}

// optional float enterPosZ = 20;
inline bool CharacterDBBaseInfo::has_enterposz() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_enterposz() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharacterDBBaseInfo::clear_has_enterposz() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharacterDBBaseInfo::clear_enterposz() {
  enterposz_ = 0;
  clear_has_enterposz();
}
inline float CharacterDBBaseInfo::enterposz() const {
  return enterposz_;
}
inline void CharacterDBBaseInfo::set_enterposz(float value) {
  set_has_enterposz();
  enterposz_ = value;
}

// optional uint64 lastSceneId = 21;
inline bool CharacterDBBaseInfo::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CharacterDBBaseInfo::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CharacterDBBaseInfo::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::lastsceneid() const {
  return lastsceneid_;
}
inline void CharacterDBBaseInfo::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastMapId = 22;
inline bool CharacterDBBaseInfo::has_lastmapid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastmapid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CharacterDBBaseInfo::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CharacterDBBaseInfo::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::lastmapid() const {
  return lastmapid_;
}
inline void CharacterDBBaseInfo::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional float lastPosX = 23;
inline bool CharacterDBBaseInfo::has_lastposx() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastposx() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CharacterDBBaseInfo::clear_has_lastposx() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CharacterDBBaseInfo::clear_lastposx() {
  lastposx_ = 0;
  clear_has_lastposx();
}
inline float CharacterDBBaseInfo::lastposx() const {
  return lastposx_;
}
inline void CharacterDBBaseInfo::set_lastposx(float value) {
  set_has_lastposx();
  lastposx_ = value;
}

// optional float lastPosY = 24;
inline bool CharacterDBBaseInfo::has_lastposy() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastposy() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CharacterDBBaseInfo::clear_has_lastposy() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CharacterDBBaseInfo::clear_lastposy() {
  lastposy_ = 0;
  clear_has_lastposy();
}
inline float CharacterDBBaseInfo::lastposy() const {
  return lastposy_;
}
inline void CharacterDBBaseInfo::set_lastposy(float value) {
  set_has_lastposy();
  lastposy_ = value;
}

// optional float lastPosZ = 25;
inline bool CharacterDBBaseInfo::has_lastposz() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastposz() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CharacterDBBaseInfo::clear_has_lastposz() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CharacterDBBaseInfo::clear_lastposz() {
  lastposz_ = 0;
  clear_has_lastposz();
}
inline float CharacterDBBaseInfo::lastposz() const {
  return lastposz_;
}
inline void CharacterDBBaseInfo::set_lastposz(float value) {
  set_has_lastposz();
  lastposz_ = value;
}

// optional uint64 lastReviveTime = 26;
inline bool CharacterDBBaseInfo::has_lastrevivetime() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_lastrevivetime() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CharacterDBBaseInfo::clear_has_lastrevivetime() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CharacterDBBaseInfo::clear_lastrevivetime() {
  lastrevivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastrevivetime();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::lastrevivetime() const {
  return lastrevivetime_;
}
inline void CharacterDBBaseInfo::set_lastrevivetime(::google::protobuf::uint64 value) {
  set_has_lastrevivetime();
  lastrevivetime_ = value;
}

// optional uint32 curState = 27;
inline bool CharacterDBBaseInfo::has_curstate() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_curstate() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CharacterDBBaseInfo::clear_has_curstate() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CharacterDBBaseInfo::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 CharacterDBBaseInfo::curstate() const {
  return curstate_;
}
inline void CharacterDBBaseInfo::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// optional float clx = 28;
inline bool CharacterDBBaseInfo::has_clx() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_clx() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CharacterDBBaseInfo::clear_has_clx() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CharacterDBBaseInfo::clear_clx() {
  clx_ = 0;
  clear_has_clx();
}
inline float CharacterDBBaseInfo::clx() const {
  return clx_;
}
inline void CharacterDBBaseInfo::set_clx(float value) {
  set_has_clx();
  clx_ = value;
}

// optional float cly = 29;
inline bool CharacterDBBaseInfo::has_cly() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_cly() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CharacterDBBaseInfo::clear_has_cly() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CharacterDBBaseInfo::clear_cly() {
  cly_ = 0;
  clear_has_cly();
}
inline float CharacterDBBaseInfo::cly() const {
  return cly_;
}
inline void CharacterDBBaseInfo::set_cly(float value) {
  set_has_cly();
  cly_ = value;
}

// optional float clz = 30;
inline bool CharacterDBBaseInfo::has_clz() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_clz() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CharacterDBBaseInfo::clear_has_clz() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CharacterDBBaseInfo::clear_clz() {
  clz_ = 0;
  clear_has_clz();
}
inline float CharacterDBBaseInfo::clz() const {
  return clz_;
}
inline void CharacterDBBaseInfo::set_clz(float value) {
  set_has_clz();
  clz_ = value;
}

// optional uint64 occupation = 31;
inline bool CharacterDBBaseInfo::has_occupation() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_occupation() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CharacterDBBaseInfo::clear_has_occupation() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CharacterDBBaseInfo::clear_occupation() {
  occupation_ = GOOGLE_ULONGLONG(0);
  clear_has_occupation();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::occupation() const {
  return occupation_;
}
inline void CharacterDBBaseInfo::set_occupation(::google::protobuf::uint64 value) {
  set_has_occupation();
  occupation_ = value;
}

// optional uint64 aptitude = 32;
inline bool CharacterDBBaseInfo::has_aptitude() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_aptitude() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CharacterDBBaseInfo::clear_has_aptitude() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CharacterDBBaseInfo::clear_aptitude() {
  aptitude_ = GOOGLE_ULONGLONG(0);
  clear_has_aptitude();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::aptitude() const {
  return aptitude_;
}
inline void CharacterDBBaseInfo::set_aptitude(::google::protobuf::uint64 value) {
  set_has_aptitude();
  aptitude_ = value;
}

// optional .proto_ff.CharFacadeProto facade = 33;
inline bool CharacterDBBaseInfo::has_facade() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CharacterDBBaseInfo::set_has_facade() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CharacterDBBaseInfo::clear_has_facade() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CharacterDBBaseInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::CharFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::CharFacadeProto& CharacterDBBaseInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::CharFacadeProto* CharacterDBBaseInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::CharFacadeProto;
  return facade_;
}
inline ::proto_ff::CharFacadeProto* CharacterDBBaseInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::CharFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void CharacterDBBaseInfo::set_allocated_facade(::proto_ff::CharFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional int64 arenacoin = 34;
inline bool CharacterDBBaseInfo::has_arenacoin() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CharacterDBBaseInfo::set_has_arenacoin() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CharacterDBBaseInfo::clear_has_arenacoin() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CharacterDBBaseInfo::clear_arenacoin() {
  arenacoin_ = GOOGLE_LONGLONG(0);
  clear_has_arenacoin();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::arenacoin() const {
  return arenacoin_;
}
inline void CharacterDBBaseInfo::set_arenacoin(::google::protobuf::int64 value) {
  set_has_arenacoin();
  arenacoin_ = value;
}

// optional int64 starEssence = 35;
inline bool CharacterDBBaseInfo::has_staressence() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CharacterDBBaseInfo::set_has_staressence() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CharacterDBBaseInfo::clear_has_staressence() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CharacterDBBaseInfo::clear_staressence() {
  staressence_ = GOOGLE_LONGLONG(0);
  clear_has_staressence();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::staressence() const {
  return staressence_;
}
inline void CharacterDBBaseInfo::set_staressence(::google::protobuf::int64 value) {
  set_has_staressence();
  staressence_ = value;
}

// optional int64 starExp = 36;
inline bool CharacterDBBaseInfo::has_starexp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CharacterDBBaseInfo::set_has_starexp() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CharacterDBBaseInfo::clear_has_starexp() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CharacterDBBaseInfo::clear_starexp() {
  starexp_ = GOOGLE_LONGLONG(0);
  clear_has_starexp();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::starexp() const {
  return starexp_;
}
inline void CharacterDBBaseInfo::set_starexp(::google::protobuf::int64 value) {
  set_has_starexp();
  starexp_ = value;
}

// optional int64 starFragment = 37;
inline bool CharacterDBBaseInfo::has_starfragment() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CharacterDBBaseInfo::set_has_starfragment() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CharacterDBBaseInfo::clear_has_starfragment() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CharacterDBBaseInfo::clear_starfragment() {
  starfragment_ = GOOGLE_LONGLONG(0);
  clear_has_starfragment();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::starfragment() const {
  return starfragment_;
}
inline void CharacterDBBaseInfo::set_starfragment(::google::protobuf::int64 value) {
  set_has_starfragment();
  starfragment_ = value;
}

// optional int64 hangUpTime = 38;
inline bool CharacterDBBaseInfo::has_hanguptime() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CharacterDBBaseInfo::set_has_hanguptime() {
  _has_bits_[1] |= 0x00000020u;
}
inline void CharacterDBBaseInfo::clear_has_hanguptime() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void CharacterDBBaseInfo::clear_hanguptime() {
  hanguptime_ = GOOGLE_LONGLONG(0);
  clear_has_hanguptime();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::hanguptime() const {
  return hanguptime_;
}
inline void CharacterDBBaseInfo::set_hanguptime(::google::protobuf::int64 value) {
  set_has_hanguptime();
  hanguptime_ = value;
}

// optional uint32 active_num = 39;
inline bool CharacterDBBaseInfo::has_active_num() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CharacterDBBaseInfo::set_has_active_num() {
  _has_bits_[1] |= 0x00000040u;
}
inline void CharacterDBBaseInfo::clear_has_active_num() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void CharacterDBBaseInfo::clear_active_num() {
  active_num_ = 0u;
  clear_has_active_num();
}
inline ::google::protobuf::uint32 CharacterDBBaseInfo::active_num() const {
  return active_num_;
}
inline void CharacterDBBaseInfo::set_active_num(::google::protobuf::uint32 value) {
  set_has_active_num();
  active_num_ = value;
}

// optional int64 vipLevel = 40;
inline bool CharacterDBBaseInfo::has_viplevel() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CharacterDBBaseInfo::set_has_viplevel() {
  _has_bits_[1] |= 0x00000080u;
}
inline void CharacterDBBaseInfo::clear_has_viplevel() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void CharacterDBBaseInfo::clear_viplevel() {
  viplevel_ = GOOGLE_LONGLONG(0);
  clear_has_viplevel();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::viplevel() const {
  return viplevel_;
}
inline void CharacterDBBaseInfo::set_viplevel(::google::protobuf::int64 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional int64 godhoodExp = 41;
inline bool CharacterDBBaseInfo::has_godhoodexp() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CharacterDBBaseInfo::set_has_godhoodexp() {
  _has_bits_[1] |= 0x00000100u;
}
inline void CharacterDBBaseInfo::clear_has_godhoodexp() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void CharacterDBBaseInfo::clear_godhoodexp() {
  godhoodexp_ = GOOGLE_LONGLONG(0);
  clear_has_godhoodexp();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::godhoodexp() const {
  return godhoodexp_;
}
inline void CharacterDBBaseInfo::set_godhoodexp(::google::protobuf::int64 value) {
  set_has_godhoodexp();
  godhoodexp_ = value;
}

// optional int64 smallSpirit = 42;
inline bool CharacterDBBaseInfo::has_smallspirit() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CharacterDBBaseInfo::set_has_smallspirit() {
  _has_bits_[1] |= 0x00000200u;
}
inline void CharacterDBBaseInfo::clear_has_smallspirit() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void CharacterDBBaseInfo::clear_smallspirit() {
  smallspirit_ = GOOGLE_LONGLONG(0);
  clear_has_smallspirit();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::smallspirit() const {
  return smallspirit_;
}
inline void CharacterDBBaseInfo::set_smallspirit(::google::protobuf::int64 value) {
  set_has_smallspirit();
  smallspirit_ = value;
}

// optional int64 bigSpirit = 43;
inline bool CharacterDBBaseInfo::has_bigspirit() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void CharacterDBBaseInfo::set_has_bigspirit() {
  _has_bits_[1] |= 0x00000400u;
}
inline void CharacterDBBaseInfo::clear_has_bigspirit() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void CharacterDBBaseInfo::clear_bigspirit() {
  bigspirit_ = GOOGLE_LONGLONG(0);
  clear_has_bigspirit();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::bigspirit() const {
  return bigspirit_;
}
inline void CharacterDBBaseInfo::set_bigspirit(::google::protobuf::int64 value) {
  set_has_bigspirit();
  bigspirit_ = value;
}

// optional .proto_ff.CharMultTrimProto trim = 44;
inline bool CharacterDBBaseInfo::has_trim() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void CharacterDBBaseInfo::set_has_trim() {
  _has_bits_[1] |= 0x00000800u;
}
inline void CharacterDBBaseInfo::clear_has_trim() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void CharacterDBBaseInfo::clear_trim() {
  if (trim_ != NULL) trim_->::proto_ff::CharMultTrimProto::Clear();
  clear_has_trim();
}
inline const ::proto_ff::CharMultTrimProto& CharacterDBBaseInfo::trim() const {
  return trim_ != NULL ? *trim_ : *default_instance_->trim_;
}
inline ::proto_ff::CharMultTrimProto* CharacterDBBaseInfo::mutable_trim() {
  set_has_trim();
  if (trim_ == NULL) trim_ = new ::proto_ff::CharMultTrimProto;
  return trim_;
}
inline ::proto_ff::CharMultTrimProto* CharacterDBBaseInfo::release_trim() {
  clear_has_trim();
  ::proto_ff::CharMultTrimProto* temp = trim_;
  trim_ = NULL;
  return temp;
}
inline void CharacterDBBaseInfo::set_allocated_trim(::proto_ff::CharMultTrimProto* trim) {
  delete trim_;
  trim_ = trim;
  if (trim) {
    set_has_trim();
  } else {
    clear_has_trim();
  }
}

// optional int32 finish_flag = 45;
inline bool CharacterDBBaseInfo::has_finish_flag() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_finish_flag() {
  _has_bits_[1] |= 0x00001000u;
}
inline void CharacterDBBaseInfo::clear_has_finish_flag() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void CharacterDBBaseInfo::clear_finish_flag() {
  finish_flag_ = 0;
  clear_has_finish_flag();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::finish_flag() const {
  return finish_flag_;
}
inline void CharacterDBBaseInfo::set_finish_flag(::google::protobuf::int32 value) {
  set_has_finish_flag();
  finish_flag_ = value;
}

// optional string guide = 46;
inline bool CharacterDBBaseInfo::has_guide() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_guide() {
  _has_bits_[1] |= 0x00002000u;
}
inline void CharacterDBBaseInfo::clear_has_guide() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void CharacterDBBaseInfo::clear_guide() {
  if (guide_ != &::google::protobuf::internal::kEmptyString) {
    guide_->clear();
  }
  clear_has_guide();
}
inline const ::std::string& CharacterDBBaseInfo::guide() const {
  return *guide_;
}
inline void CharacterDBBaseInfo::set_guide(const ::std::string& value) {
  set_has_guide();
  if (guide_ == &::google::protobuf::internal::kEmptyString) {
    guide_ = new ::std::string;
  }
  guide_->assign(value);
}
inline void CharacterDBBaseInfo::set_guide(const char* value) {
  set_has_guide();
  if (guide_ == &::google::protobuf::internal::kEmptyString) {
    guide_ = new ::std::string;
  }
  guide_->assign(value);
}
inline void CharacterDBBaseInfo::set_guide(const char* value, size_t size) {
  set_has_guide();
  if (guide_ == &::google::protobuf::internal::kEmptyString) {
    guide_ = new ::std::string;
  }
  guide_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterDBBaseInfo::mutable_guide() {
  set_has_guide();
  if (guide_ == &::google::protobuf::internal::kEmptyString) {
    guide_ = new ::std::string;
  }
  return guide_;
}
inline ::std::string* CharacterDBBaseInfo::release_guide() {
  clear_has_guide();
  if (guide_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guide_;
    guide_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterDBBaseInfo::set_allocated_guide(::std::string* guide) {
  if (guide_ != &::google::protobuf::internal::kEmptyString) {
    delete guide_;
  }
  if (guide) {
    set_has_guide();
    guide_ = guide;
  } else {
    clear_has_guide();
    guide_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.ForceDupProto force = 47;
inline bool CharacterDBBaseInfo::has_force() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_force() {
  _has_bits_[1] |= 0x00004000u;
}
inline void CharacterDBBaseInfo::clear_has_force() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void CharacterDBBaseInfo::clear_force() {
  if (force_ != NULL) force_->::proto_ff::ForceDupProto::Clear();
  clear_has_force();
}
inline const ::proto_ff::ForceDupProto& CharacterDBBaseInfo::force() const {
  return force_ != NULL ? *force_ : *default_instance_->force_;
}
inline ::proto_ff::ForceDupProto* CharacterDBBaseInfo::mutable_force() {
  set_has_force();
  if (force_ == NULL) force_ = new ::proto_ff::ForceDupProto;
  return force_;
}
inline ::proto_ff::ForceDupProto* CharacterDBBaseInfo::release_force() {
  clear_has_force();
  ::proto_ff::ForceDupProto* temp = force_;
  force_ = NULL;
  return temp;
}
inline void CharacterDBBaseInfo::set_allocated_force(::proto_ff::ForceDupProto* force) {
  delete force_;
  force_ = force;
  if (force) {
    set_has_force();
  } else {
    clear_has_force();
  }
}

// optional int64 useTitle = 48;
inline bool CharacterDBBaseInfo::has_usetitle() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_usetitle() {
  _has_bits_[1] |= 0x00008000u;
}
inline void CharacterDBBaseInfo::clear_has_usetitle() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void CharacterDBBaseInfo::clear_usetitle() {
  usetitle_ = GOOGLE_LONGLONG(0);
  clear_has_usetitle();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::usetitle() const {
  return usetitle_;
}
inline void CharacterDBBaseInfo::set_usetitle(::google::protobuf::int64 value) {
  set_has_usetitle();
  usetitle_ = value;
}

// optional int32 subpack_type = 49;
inline bool CharacterDBBaseInfo::has_subpack_type() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_subpack_type() {
  _has_bits_[1] |= 0x00010000u;
}
inline void CharacterDBBaseInfo::clear_has_subpack_type() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void CharacterDBBaseInfo::clear_subpack_type() {
  subpack_type_ = 0;
  clear_has_subpack_type();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::subpack_type() const {
  return subpack_type_;
}
inline void CharacterDBBaseInfo::set_subpack_type(::google::protobuf::int32 value) {
  set_has_subpack_type();
  subpack_type_ = value;
}

// optional int32 subpack_fetch = 50;
inline bool CharacterDBBaseInfo::has_subpack_fetch() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_subpack_fetch() {
  _has_bits_[1] |= 0x00020000u;
}
inline void CharacterDBBaseInfo::clear_has_subpack_fetch() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void CharacterDBBaseInfo::clear_subpack_fetch() {
  subpack_fetch_ = 0;
  clear_has_subpack_fetch();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::subpack_fetch() const {
  return subpack_fetch_;
}
inline void CharacterDBBaseInfo::set_subpack_fetch(::google::protobuf::int32 value) {
  set_has_subpack_fetch();
  subpack_fetch_ = value;
}

// optional int32 rechargeDiscountDate = 51;
inline bool CharacterDBBaseInfo::has_rechargediscountdate() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_rechargediscountdate() {
  _has_bits_[1] |= 0x00040000u;
}
inline void CharacterDBBaseInfo::clear_has_rechargediscountdate() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void CharacterDBBaseInfo::clear_rechargediscountdate() {
  rechargediscountdate_ = 0;
  clear_has_rechargediscountdate();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::rechargediscountdate() const {
  return rechargediscountdate_;
}
inline void CharacterDBBaseInfo::set_rechargediscountdate(::google::protobuf::int32 value) {
  set_has_rechargediscountdate();
  rechargediscountdate_ = value;
}

// optional int32 friendNum = 52;
inline bool CharacterDBBaseInfo::has_friendnum() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_friendnum() {
  _has_bits_[1] |= 0x00080000u;
}
inline void CharacterDBBaseInfo::clear_has_friendnum() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void CharacterDBBaseInfo::clear_friendnum() {
  friendnum_ = 0;
  clear_has_friendnum();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::friendnum() const {
  return friendnum_;
}
inline void CharacterDBBaseInfo::set_friendnum(::google::protobuf::int32 value) {
  set_has_friendnum();
  friendnum_ = value;
}

// optional string platid = 53;
inline bool CharacterDBBaseInfo::has_platid() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_platid() {
  _has_bits_[1] |= 0x00100000u;
}
inline void CharacterDBBaseInfo::clear_has_platid() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void CharacterDBBaseInfo::clear_platid() {
  if (platid_ != &::google::protobuf::internal::kEmptyString) {
    platid_->clear();
  }
  clear_has_platid();
}
inline const ::std::string& CharacterDBBaseInfo::platid() const {
  return *platid_;
}
inline void CharacterDBBaseInfo::set_platid(const ::std::string& value) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void CharacterDBBaseInfo::set_platid(const char* value) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void CharacterDBBaseInfo::set_platid(const char* value, size_t size) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterDBBaseInfo::mutable_platid() {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  return platid_;
}
inline ::std::string* CharacterDBBaseInfo::release_platid() {
  clear_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platid_;
    platid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterDBBaseInfo::set_allocated_platid(::std::string* platid) {
  if (platid_ != &::google::protobuf::internal::kEmptyString) {
    delete platid_;
  }
  if (platid) {
    set_has_platid();
    platid_ = platid;
  } else {
    clear_has_platid();
    platid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 solo_score = 54;
inline bool CharacterDBBaseInfo::has_solo_score() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_solo_score() {
  _has_bits_[1] |= 0x00200000u;
}
inline void CharacterDBBaseInfo::clear_has_solo_score() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void CharacterDBBaseInfo::clear_solo_score() {
  solo_score_ = 0;
  clear_has_solo_score();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::solo_score() const {
  return solo_score_;
}
inline void CharacterDBBaseInfo::set_solo_score(::google::protobuf::int32 value) {
  set_has_solo_score();
  solo_score_ = value;
}

// optional int32 solo_prv_score = 55;
inline bool CharacterDBBaseInfo::has_solo_prv_score() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_solo_prv_score() {
  _has_bits_[1] |= 0x00400000u;
}
inline void CharacterDBBaseInfo::clear_has_solo_prv_score() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void CharacterDBBaseInfo::clear_solo_prv_score() {
  solo_prv_score_ = 0;
  clear_has_solo_prv_score();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::solo_prv_score() const {
  return solo_prv_score_;
}
inline void CharacterDBBaseInfo::set_solo_prv_score(::google::protobuf::int32 value) {
  set_has_solo_prv_score();
  solo_prv_score_ = value;
}

// optional int32 dragons_num = 56;
inline bool CharacterDBBaseInfo::has_dragons_num() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_dragons_num() {
  _has_bits_[1] |= 0x00800000u;
}
inline void CharacterDBBaseInfo::clear_has_dragons_num() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void CharacterDBBaseInfo::clear_dragons_num() {
  dragons_num_ = 0;
  clear_has_dragons_num();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::dragons_num() const {
  return dragons_num_;
}
inline void CharacterDBBaseInfo::set_dragons_num(::google::protobuf::int32 value) {
  set_has_dragons_num();
  dragons_num_ = value;
}

// optional uint32 total_login_day = 57;
inline bool CharacterDBBaseInfo::has_total_login_day() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_total_login_day() {
  _has_bits_[1] |= 0x01000000u;
}
inline void CharacterDBBaseInfo::clear_has_total_login_day() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void CharacterDBBaseInfo::clear_total_login_day() {
  total_login_day_ = 0u;
  clear_has_total_login_day();
}
inline ::google::protobuf::uint32 CharacterDBBaseInfo::total_login_day() const {
  return total_login_day_;
}
inline void CharacterDBBaseInfo::set_total_login_day(::google::protobuf::uint32 value) {
  set_has_total_login_day();
  total_login_day_ = value;
}

// optional uint64 login_day_time = 58;
inline bool CharacterDBBaseInfo::has_login_day_time() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_login_day_time() {
  _has_bits_[1] |= 0x02000000u;
}
inline void CharacterDBBaseInfo::clear_has_login_day_time() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void CharacterDBBaseInfo::clear_login_day_time() {
  login_day_time_ = GOOGLE_ULONGLONG(0);
  clear_has_login_day_time();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::login_day_time() const {
  return login_day_time_;
}
inline void CharacterDBBaseInfo::set_login_day_time(::google::protobuf::uint64 value) {
  set_has_login_day_time();
  login_day_time_ = value;
}

// optional int32 login_gift = 59;
inline bool CharacterDBBaseInfo::has_login_gift() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_login_gift() {
  _has_bits_[1] |= 0x04000000u;
}
inline void CharacterDBBaseInfo::clear_has_login_gift() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void CharacterDBBaseInfo::clear_login_gift() {
  login_gift_ = 0;
  clear_has_login_gift();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::login_gift() const {
  return login_gift_;
}
inline void CharacterDBBaseInfo::set_login_gift(::google::protobuf::int32 value) {
  set_has_login_gift();
  login_gift_ = value;
}

// optional int64 vipCardDiamond = 60;
inline bool CharacterDBBaseInfo::has_vipcarddiamond() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_vipcarddiamond() {
  _has_bits_[1] |= 0x08000000u;
}
inline void CharacterDBBaseInfo::clear_has_vipcarddiamond() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void CharacterDBBaseInfo::clear_vipcarddiamond() {
  vipcarddiamond_ = GOOGLE_LONGLONG(0);
  clear_has_vipcarddiamond();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::vipcarddiamond() const {
  return vipcarddiamond_;
}
inline void CharacterDBBaseInfo::set_vipcarddiamond(::google::protobuf::int64 value) {
  set_has_vipcarddiamond();
  vipcarddiamond_ = value;
}

// optional uint64 holydia = 61;
inline bool CharacterDBBaseInfo::has_holydia() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_holydia() {
  _has_bits_[1] |= 0x10000000u;
}
inline void CharacterDBBaseInfo::clear_has_holydia() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void CharacterDBBaseInfo::clear_holydia() {
  holydia_ = GOOGLE_ULONGLONG(0);
  clear_has_holydia();
}
inline ::google::protobuf::uint64 CharacterDBBaseInfo::holydia() const {
  return holydia_;
}
inline void CharacterDBBaseInfo::set_holydia(::google::protobuf::uint64 value) {
  set_has_holydia();
  holydia_ = value;
}

// optional int32 relive_num = 62;
inline bool CharacterDBBaseInfo::has_relive_num() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_relive_num() {
  _has_bits_[1] |= 0x20000000u;
}
inline void CharacterDBBaseInfo::clear_has_relive_num() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void CharacterDBBaseInfo::clear_relive_num() {
  relive_num_ = 0;
  clear_has_relive_num();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::relive_num() const {
  return relive_num_;
}
inline void CharacterDBBaseInfo::set_relive_num(::google::protobuf::int32 value) {
  set_has_relive_num();
  relive_num_ = value;
}

// optional int64 last_relive_time = 63;
inline bool CharacterDBBaseInfo::has_last_relive_time() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_last_relive_time() {
  _has_bits_[1] |= 0x40000000u;
}
inline void CharacterDBBaseInfo::clear_has_last_relive_time() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void CharacterDBBaseInfo::clear_last_relive_time() {
  last_relive_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_relive_time();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::last_relive_time() const {
  return last_relive_time_;
}
inline void CharacterDBBaseInfo::set_last_relive_time(::google::protobuf::int64 value) {
  set_has_last_relive_time();
  last_relive_time_ = value;
}

// optional int64 dead_static_map_id = 64;
inline bool CharacterDBBaseInfo::has_dead_static_map_id() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void CharacterDBBaseInfo::set_has_dead_static_map_id() {
  _has_bits_[1] |= 0x80000000u;
}
inline void CharacterDBBaseInfo::clear_has_dead_static_map_id() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void CharacterDBBaseInfo::clear_dead_static_map_id() {
  dead_static_map_id_ = GOOGLE_LONGLONG(0);
  clear_has_dead_static_map_id();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::dead_static_map_id() const {
  return dead_static_map_id_;
}
inline void CharacterDBBaseInfo::set_dead_static_map_id(::google::protobuf::int64 value) {
  set_has_dead_static_map_id();
  dead_static_map_id_ = value;
}

// optional int32 dead_static_num = 65;
inline bool CharacterDBBaseInfo::has_dead_static_num() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void CharacterDBBaseInfo::set_has_dead_static_num() {
  _has_bits_[2] |= 0x00000001u;
}
inline void CharacterDBBaseInfo::clear_has_dead_static_num() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void CharacterDBBaseInfo::clear_dead_static_num() {
  dead_static_num_ = 0;
  clear_has_dead_static_num();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::dead_static_num() const {
  return dead_static_num_;
}
inline void CharacterDBBaseInfo::set_dead_static_num(::google::protobuf::int32 value) {
  set_has_dead_static_num();
  dead_static_num_ = value;
}

// optional int64 dead_static_cd = 66;
inline bool CharacterDBBaseInfo::has_dead_static_cd() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void CharacterDBBaseInfo::set_has_dead_static_cd() {
  _has_bits_[2] |= 0x00000002u;
}
inline void CharacterDBBaseInfo::clear_has_dead_static_cd() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void CharacterDBBaseInfo::clear_dead_static_cd() {
  dead_static_cd_ = GOOGLE_LONGLONG(0);
  clear_has_dead_static_cd();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::dead_static_cd() const {
  return dead_static_cd_;
}
inline void CharacterDBBaseInfo::set_dead_static_cd(::google::protobuf::int64 value) {
  set_has_dead_static_cd();
  dead_static_cd_ = value;
}

// optional int32 fushi_time = 67;
inline bool CharacterDBBaseInfo::has_fushi_time() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void CharacterDBBaseInfo::set_has_fushi_time() {
  _has_bits_[2] |= 0x00000004u;
}
inline void CharacterDBBaseInfo::clear_has_fushi_time() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void CharacterDBBaseInfo::clear_fushi_time() {
  fushi_time_ = 0;
  clear_has_fushi_time();
}
inline ::google::protobuf::int32 CharacterDBBaseInfo::fushi_time() const {
  return fushi_time_;
}
inline void CharacterDBBaseInfo::set_fushi_time(::google::protobuf::int32 value) {
  set_has_fushi_time();
  fushi_time_ = value;
}

// optional int64 starStone = 68;
inline bool CharacterDBBaseInfo::has_starstone() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void CharacterDBBaseInfo::set_has_starstone() {
  _has_bits_[2] |= 0x00000008u;
}
inline void CharacterDBBaseInfo::clear_has_starstone() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void CharacterDBBaseInfo::clear_starstone() {
  starstone_ = GOOGLE_LONGLONG(0);
  clear_has_starstone();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::starstone() const {
  return starstone_;
}
inline void CharacterDBBaseInfo::set_starstone(::google::protobuf::int64 value) {
  set_has_starstone();
  starstone_ = value;
}

// optional int64 voucher = 69;
inline bool CharacterDBBaseInfo::has_voucher() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void CharacterDBBaseInfo::set_has_voucher() {
  _has_bits_[2] |= 0x00000010u;
}
inline void CharacterDBBaseInfo::clear_has_voucher() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void CharacterDBBaseInfo::clear_voucher() {
  voucher_ = GOOGLE_LONGLONG(0);
  clear_has_voucher();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::voucher() const {
  return voucher_;
}
inline void CharacterDBBaseInfo::set_voucher(::google::protobuf::int64 value) {
  set_has_voucher();
  voucher_ = value;
}

// optional int64 waiguan = 70;
inline bool CharacterDBBaseInfo::has_waiguan() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
inline void CharacterDBBaseInfo::set_has_waiguan() {
  _has_bits_[2] |= 0x00000020u;
}
inline void CharacterDBBaseInfo::clear_has_waiguan() {
  _has_bits_[2] &= ~0x00000020u;
}
inline void CharacterDBBaseInfo::clear_waiguan() {
  waiguan_ = GOOGLE_LONGLONG(0);
  clear_has_waiguan();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::waiguan() const {
  return waiguan_;
}
inline void CharacterDBBaseInfo::set_waiguan(::google::protobuf::int64 value) {
  set_has_waiguan();
  waiguan_ = value;
}

// optional int64 gmpoint = 71;
inline bool CharacterDBBaseInfo::has_gmpoint() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
inline void CharacterDBBaseInfo::set_has_gmpoint() {
  _has_bits_[2] |= 0x00000040u;
}
inline void CharacterDBBaseInfo::clear_has_gmpoint() {
  _has_bits_[2] &= ~0x00000040u;
}
inline void CharacterDBBaseInfo::clear_gmpoint() {
  gmpoint_ = GOOGLE_LONGLONG(0);
  clear_has_gmpoint();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::gmpoint() const {
  return gmpoint_;
}
inline void CharacterDBBaseInfo::set_gmpoint(::google::protobuf::int64 value) {
  set_has_gmpoint();
  gmpoint_ = value;
}

// optional int64 gmpoint_limit = 72;
inline bool CharacterDBBaseInfo::has_gmpoint_limit() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
inline void CharacterDBBaseInfo::set_has_gmpoint_limit() {
  _has_bits_[2] |= 0x00000080u;
}
inline void CharacterDBBaseInfo::clear_has_gmpoint_limit() {
  _has_bits_[2] &= ~0x00000080u;
}
inline void CharacterDBBaseInfo::clear_gmpoint_limit() {
  gmpoint_limit_ = GOOGLE_LONGLONG(0);
  clear_has_gmpoint_limit();
}
inline ::google::protobuf::int64 CharacterDBBaseInfo::gmpoint_limit() const {
  return gmpoint_limit_;
}
inline void CharacterDBBaseInfo::set_gmpoint_limit(::google::protobuf::int64 value) {
  set_has_gmpoint_limit();
  gmpoint_limit_ = value;
}

// -------------------------------------------------------------------

// Attr

// optional uint32 AttrNum = 1;
inline bool Attr::has_attrnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr::set_has_attrnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr::clear_has_attrnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr::clear_attrnum() {
  attrnum_ = 0u;
  clear_has_attrnum();
}
inline ::google::protobuf::uint32 Attr::attrnum() const {
  return attrnum_;
}
inline void Attr::set_attrnum(::google::protobuf::uint32 value) {
  set_has_attrnum();
  attrnum_ = value;
}

// optional uint32 Attrvalue = 2;
inline bool Attr::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr::clear_attrvalue() {
  attrvalue_ = 0u;
  clear_has_attrvalue();
}
inline ::google::protobuf::uint32 Attr::attrvalue() const {
  return attrvalue_;
}
inline void Attr::set_attrvalue(::google::protobuf::uint32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
}

// -------------------------------------------------------------------

// Attr64

// optional uint32 AttrNum = 1;
inline bool Attr64::has_attrnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Attr64::set_has_attrnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Attr64::clear_has_attrnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Attr64::clear_attrnum() {
  attrnum_ = 0u;
  clear_has_attrnum();
}
inline ::google::protobuf::uint32 Attr64::attrnum() const {
  return attrnum_;
}
inline void Attr64::set_attrnum(::google::protobuf::uint32 value) {
  set_has_attrnum();
  attrnum_ = value;
}

// optional int64 Attrvalue = 2;
inline bool Attr64::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Attr64::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Attr64::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Attr64::clear_attrvalue() {
  attrvalue_ = GOOGLE_LONGLONG(0);
  clear_has_attrvalue();
}
inline ::google::protobuf::int64 Attr64::attrvalue() const {
  return attrvalue_;
}
inline void Attr64::set_attrvalue(::google::protobuf::int64 value) {
  set_has_attrvalue();
  attrvalue_ = value;
}

// -------------------------------------------------------------------

// AttrEx64

// optional uint32 AttrNum = 1;
inline bool AttrEx64::has_attrnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttrEx64::set_has_attrnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttrEx64::clear_has_attrnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttrEx64::clear_attrnum() {
  attrnum_ = 0u;
  clear_has_attrnum();
}
inline ::google::protobuf::uint32 AttrEx64::attrnum() const {
  return attrnum_;
}
inline void AttrEx64::set_attrnum(::google::protobuf::uint32 value) {
  set_has_attrnum();
  attrnum_ = value;
}

// optional uint64 Attrvalue = 2;
inline bool AttrEx64::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttrEx64::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttrEx64::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttrEx64::clear_attrvalue() {
  attrvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_attrvalue();
}
inline ::google::protobuf::uint64 AttrEx64::attrvalue() const {
  return attrvalue_;
}
inline void AttrEx64::set_attrvalue(::google::protobuf::uint64 value) {
  set_has_attrvalue();
  attrvalue_ = value;
}

// optional uint32 AttrIndex = 3;
inline bool AttrEx64::has_attrindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttrEx64::set_has_attrindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttrEx64::clear_has_attrindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttrEx64::clear_attrindex() {
  attrindex_ = 0u;
  clear_has_attrindex();
}
inline ::google::protobuf::uint32 AttrEx64::attrindex() const {
  return attrindex_;
}
inline void AttrEx64::set_attrindex(::google::protobuf::uint32 value) {
  set_has_attrindex();
  attrindex_ = value;
}

// -------------------------------------------------------------------

// FieldItemAttrInfo

// repeated .proto_ff.Attr base_attr = 1;
inline int FieldItemAttrInfo::base_attr_size() const {
  return base_attr_.size();
}
inline void FieldItemAttrInfo::clear_base_attr() {
  base_attr_.Clear();
}
inline const ::proto_ff::Attr& FieldItemAttrInfo::base_attr(int index) const {
  return base_attr_.Get(index);
}
inline ::proto_ff::Attr* FieldItemAttrInfo::mutable_base_attr(int index) {
  return base_attr_.Mutable(index);
}
inline ::proto_ff::Attr* FieldItemAttrInfo::add_base_attr() {
  return base_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
FieldItemAttrInfo::base_attr() const {
  return base_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
FieldItemAttrInfo::mutable_base_attr() {
  return &base_attr_;
}

// repeated .proto_ff.Attr star_attr = 2;
inline int FieldItemAttrInfo::star_attr_size() const {
  return star_attr_.size();
}
inline void FieldItemAttrInfo::clear_star_attr() {
  star_attr_.Clear();
}
inline const ::proto_ff::Attr& FieldItemAttrInfo::star_attr(int index) const {
  return star_attr_.Get(index);
}
inline ::proto_ff::Attr* FieldItemAttrInfo::mutable_star_attr(int index) {
  return star_attr_.Mutable(index);
}
inline ::proto_ff::Attr* FieldItemAttrInfo::add_star_attr() {
  return star_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
FieldItemAttrInfo::star_attr() const {
  return star_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
FieldItemAttrInfo::mutable_star_attr() {
  return &star_attr_;
}

// repeated .proto_ff.Attr blue_star_attr = 3;
inline int FieldItemAttrInfo::blue_star_attr_size() const {
  return blue_star_attr_.size();
}
inline void FieldItemAttrInfo::clear_blue_star_attr() {
  blue_star_attr_.Clear();
}
inline const ::proto_ff::Attr& FieldItemAttrInfo::blue_star_attr(int index) const {
  return blue_star_attr_.Get(index);
}
inline ::proto_ff::Attr* FieldItemAttrInfo::mutable_blue_star_attr(int index) {
  return blue_star_attr_.Mutable(index);
}
inline ::proto_ff::Attr* FieldItemAttrInfo::add_blue_star_attr() {
  return blue_star_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
FieldItemAttrInfo::blue_star_attr() const {
  return blue_star_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
FieldItemAttrInfo::mutable_blue_star_attr() {
  return &blue_star_attr_;
}

// optional int32 refine_level = 4;
inline bool FieldItemAttrInfo::has_refine_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FieldItemAttrInfo::set_has_refine_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FieldItemAttrInfo::clear_has_refine_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FieldItemAttrInfo::clear_refine_level() {
  refine_level_ = 0;
  clear_has_refine_level();
}
inline ::google::protobuf::int32 FieldItemAttrInfo::refine_level() const {
  return refine_level_;
}
inline void FieldItemAttrInfo::set_refine_level(::google::protobuf::int32 value) {
  set_has_refine_level();
  refine_level_ = value;
}

// -------------------------------------------------------------------

// MarryEquipInfo

// optional int32 strong_lv = 1;
inline bool MarryEquipInfo::has_strong_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarryEquipInfo::set_has_strong_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarryEquipInfo::clear_has_strong_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarryEquipInfo::clear_strong_lv() {
  strong_lv_ = 0;
  clear_has_strong_lv();
}
inline ::google::protobuf::int32 MarryEquipInfo::strong_lv() const {
  return strong_lv_;
}
inline void MarryEquipInfo::set_strong_lv(::google::protobuf::int32 value) {
  set_has_strong_lv();
  strong_lv_ = value;
}

// optional int32 strong_exp = 2;
inline bool MarryEquipInfo::has_strong_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarryEquipInfo::set_has_strong_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarryEquipInfo::clear_has_strong_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarryEquipInfo::clear_strong_exp() {
  strong_exp_ = 0;
  clear_has_strong_exp();
}
inline ::google::protobuf::int32 MarryEquipInfo::strong_exp() const {
  return strong_exp_;
}
inline void MarryEquipInfo::set_strong_exp(::google::protobuf::int32 value) {
  set_has_strong_exp();
  strong_exp_ = value;
}

// optional int32 stage_lv = 3;
inline bool MarryEquipInfo::has_stage_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarryEquipInfo::set_has_stage_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarryEquipInfo::clear_has_stage_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarryEquipInfo::clear_stage_lv() {
  stage_lv_ = 0;
  clear_has_stage_lv();
}
inline ::google::protobuf::int32 MarryEquipInfo::stage_lv() const {
  return stage_lv_;
}
inline void MarryEquipInfo::set_stage_lv(::google::protobuf::int32 value) {
  set_has_stage_lv();
  stage_lv_ = value;
}

// -------------------------------------------------------------------

// ComposeSingleCostProto

// optional uint64 itemid = 1;
inline bool ComposeSingleCostProto::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComposeSingleCostProto::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComposeSingleCostProto::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComposeSingleCostProto::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ComposeSingleCostProto::itemid() const {
  return itemid_;
}
inline void ComposeSingleCostProto::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 bind = 2;
inline bool ComposeSingleCostProto::has_bind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComposeSingleCostProto::set_has_bind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComposeSingleCostProto::clear_has_bind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComposeSingleCostProto::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ComposeSingleCostProto::bind() const {
  return bind_;
}
inline void ComposeSingleCostProto::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// -------------------------------------------------------------------

// ComposeCostProto

// repeated .proto_ff.ComposeSingleCostProto info = 1;
inline int ComposeCostProto::info_size() const {
  return info_.size();
}
inline void ComposeCostProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::ComposeSingleCostProto& ComposeCostProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::ComposeSingleCostProto* ComposeCostProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::ComposeSingleCostProto* ComposeCostProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComposeSingleCostProto >&
ComposeCostProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComposeSingleCostProto >*
ComposeCostProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// blustarAttr

// optional uint32 attrid = 1;
inline bool blustarAttr::has_attrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void blustarAttr::set_has_attrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void blustarAttr::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void blustarAttr::clear_attrid() {
  attrid_ = 0u;
  clear_has_attrid();
}
inline ::google::protobuf::uint32 blustarAttr::attrid() const {
  return attrid_;
}
inline void blustarAttr::set_attrid(::google::protobuf::uint32 value) {
  set_has_attrid();
  attrid_ = value;
}

// optional uint32 levelinterval = 2;
inline bool blustarAttr::has_levelinterval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void blustarAttr::set_has_levelinterval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void blustarAttr::clear_has_levelinterval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void blustarAttr::clear_levelinterval() {
  levelinterval_ = 0u;
  clear_has_levelinterval();
}
inline ::google::protobuf::uint32 blustarAttr::levelinterval() const {
  return levelinterval_;
}
inline void blustarAttr::set_levelinterval(::google::protobuf::uint32 value) {
  set_has_levelinterval();
  levelinterval_ = value;
}

// optional uint32 attrvalue = 3;
inline bool blustarAttr::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void blustarAttr::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void blustarAttr::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void blustarAttr::clear_attrvalue() {
  attrvalue_ = 0u;
  clear_has_attrvalue();
}
inline ::google::protobuf::uint32 blustarAttr::attrvalue() const {
  return attrvalue_;
}
inline void blustarAttr::set_attrvalue(::google::protobuf::uint32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
}

// -------------------------------------------------------------------

// ItemProtoInfo

// optional uint64 item_id = 1;
inline bool ItemProtoInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemProtoInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemProtoInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemProtoInfo::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 ItemProtoInfo::item_id() const {
  return item_id_;
}
inline void ItemProtoInfo::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int64 item_num = 2;
inline bool ItemProtoInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemProtoInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemProtoInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemProtoInfo::clear_item_num() {
  item_num_ = GOOGLE_LONGLONG(0);
  clear_has_item_num();
}
inline ::google::protobuf::int64 ItemProtoInfo::item_num() const {
  return item_num_;
}
inline void ItemProtoInfo::set_item_num(::google::protobuf::int64 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional int32 bind = 3;
inline bool ItemProtoInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemProtoInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemProtoInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemProtoInfo::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemProtoInfo::bind() const {
  return bind_;
}
inline void ItemProtoInfo::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
}

// repeated .proto_ff.Attr baseattr = 4;
inline int ItemProtoInfo::baseattr_size() const {
  return baseattr_.size();
}
inline void ItemProtoInfo::clear_baseattr() {
  baseattr_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::baseattr(int index) const {
  return baseattr_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_baseattr(int index) {
  return baseattr_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_baseattr() {
  return baseattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::baseattr() const {
  return baseattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_baseattr() {
  return &baseattr_;
}

// optional int32 index = 5;
inline bool ItemProtoInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemProtoInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemProtoInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemProtoInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ItemProtoInfo::index() const {
  return index_;
}
inline void ItemProtoInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 level = 6;
inline bool ItemProtoInfo::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemProtoInfo::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemProtoInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemProtoInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ItemProtoInfo::level() const {
  return level_;
}
inline void ItemProtoInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .proto_ff.Attr refineex = 8;
inline int ItemProtoInfo::refineex_size() const {
  return refineex_.size();
}
inline void ItemProtoInfo::clear_refineex() {
  refineex_.Clear();
}
inline const ::proto_ff::Attr& ItemProtoInfo::refineex(int index) const {
  return refineex_.Get(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::mutable_refineex(int index) {
  return refineex_.Mutable(index);
}
inline ::proto_ff::Attr* ItemProtoInfo::add_refineex() {
  return refineex_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
ItemProtoInfo::refineex() const {
  return refineex_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
ItemProtoInfo::mutable_refineex() {
  return &refineex_;
}

// repeated .proto_ff.blustarAttr con_attr = 9;
inline int ItemProtoInfo::con_attr_size() const {
  return con_attr_.size();
}
inline void ItemProtoInfo::clear_con_attr() {
  con_attr_.Clear();
}
inline const ::proto_ff::blustarAttr& ItemProtoInfo::con_attr(int index) const {
  return con_attr_.Get(index);
}
inline ::proto_ff::blustarAttr* ItemProtoInfo::mutable_con_attr(int index) {
  return con_attr_.Mutable(index);
}
inline ::proto_ff::blustarAttr* ItemProtoInfo::add_con_attr() {
  return con_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::blustarAttr >&
ItemProtoInfo::con_attr() const {
  return con_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::blustarAttr >*
ItemProtoInfo::mutable_con_attr() {
  return &con_attr_;
}

// optional uint64 expireTime = 10;
inline bool ItemProtoInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemProtoInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemProtoInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemProtoInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 ItemProtoInfo::expiretime() const {
  return expiretime_;
}
inline void ItemProtoInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// optional .proto_ff.FieldItemAttrInfo field_data = 11;
inline bool ItemProtoInfo::has_field_data() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemProtoInfo::set_has_field_data() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemProtoInfo::clear_has_field_data() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemProtoInfo::clear_field_data() {
  if (field_data_ != NULL) field_data_->::proto_ff::FieldItemAttrInfo::Clear();
  clear_has_field_data();
}
inline const ::proto_ff::FieldItemAttrInfo& ItemProtoInfo::field_data() const {
  return field_data_ != NULL ? *field_data_ : *default_instance_->field_data_;
}
inline ::proto_ff::FieldItemAttrInfo* ItemProtoInfo::mutable_field_data() {
  set_has_field_data();
  if (field_data_ == NULL) field_data_ = new ::proto_ff::FieldItemAttrInfo;
  return field_data_;
}
inline ::proto_ff::FieldItemAttrInfo* ItemProtoInfo::release_field_data() {
  clear_has_field_data();
  ::proto_ff::FieldItemAttrInfo* temp = field_data_;
  field_data_ = NULL;
  return temp;
}
inline void ItemProtoInfo::set_allocated_field_data(::proto_ff::FieldItemAttrInfo* field_data) {
  delete field_data_;
  field_data_ = field_data;
  if (field_data) {
    set_has_field_data();
  } else {
    clear_has_field_data();
  }
}

// optional .proto_ff.MarryEquipInfo marry_equip_data = 12;
inline bool ItemProtoInfo::has_marry_equip_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemProtoInfo::set_has_marry_equip_data() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemProtoInfo::clear_has_marry_equip_data() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemProtoInfo::clear_marry_equip_data() {
  if (marry_equip_data_ != NULL) marry_equip_data_->::proto_ff::MarryEquipInfo::Clear();
  clear_has_marry_equip_data();
}
inline const ::proto_ff::MarryEquipInfo& ItemProtoInfo::marry_equip_data() const {
  return marry_equip_data_ != NULL ? *marry_equip_data_ : *default_instance_->marry_equip_data_;
}
inline ::proto_ff::MarryEquipInfo* ItemProtoInfo::mutable_marry_equip_data() {
  set_has_marry_equip_data();
  if (marry_equip_data_ == NULL) marry_equip_data_ = new ::proto_ff::MarryEquipInfo;
  return marry_equip_data_;
}
inline ::proto_ff::MarryEquipInfo* ItemProtoInfo::release_marry_equip_data() {
  clear_has_marry_equip_data();
  ::proto_ff::MarryEquipInfo* temp = marry_equip_data_;
  marry_equip_data_ = NULL;
  return temp;
}
inline void ItemProtoInfo::set_allocated_marry_equip_data(::proto_ff::MarryEquipInfo* marry_equip_data) {
  delete marry_equip_data_;
  marry_equip_data_ = marry_equip_data;
  if (marry_equip_data) {
    set_has_marry_equip_data();
  } else {
    clear_has_marry_equip_data();
  }
}

// optional .proto_ff.ComposeCostProto compose = 13;
inline bool ItemProtoInfo::has_compose() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemProtoInfo::set_has_compose() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemProtoInfo::clear_has_compose() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemProtoInfo::clear_compose() {
  if (compose_ != NULL) compose_->::proto_ff::ComposeCostProto::Clear();
  clear_has_compose();
}
inline const ::proto_ff::ComposeCostProto& ItemProtoInfo::compose() const {
  return compose_ != NULL ? *compose_ : *default_instance_->compose_;
}
inline ::proto_ff::ComposeCostProto* ItemProtoInfo::mutable_compose() {
  set_has_compose();
  if (compose_ == NULL) compose_ = new ::proto_ff::ComposeCostProto;
  return compose_;
}
inline ::proto_ff::ComposeCostProto* ItemProtoInfo::release_compose() {
  clear_has_compose();
  ::proto_ff::ComposeCostProto* temp = compose_;
  compose_ = NULL;
  return temp;
}
inline void ItemProtoInfo::set_allocated_compose(::proto_ff::ComposeCostProto* compose) {
  delete compose_;
  compose_ = compose;
  if (compose) {
    set_has_compose();
  } else {
    clear_has_compose();
  }
}

// optional uint64 out_time = 14;
inline bool ItemProtoInfo::has_out_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemProtoInfo::set_has_out_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemProtoInfo::clear_has_out_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemProtoInfo::clear_out_time() {
  out_time_ = GOOGLE_ULONGLONG(0);
  clear_has_out_time();
}
inline ::google::protobuf::uint64 ItemProtoInfo::out_time() const {
  return out_time_;
}
inline void ItemProtoInfo::set_out_time(::google::protobuf::uint64 value) {
  set_has_out_time();
  out_time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBPackageBag

// optional uint32 package_type = 1;
inline bool CharacterDBPackageBag::has_package_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBPackageBag::set_has_package_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBPackageBag::clear_has_package_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBPackageBag::clear_package_type() {
  package_type_ = 0u;
  clear_has_package_type();
}
inline ::google::protobuf::uint32 CharacterDBPackageBag::package_type() const {
  return package_type_;
}
inline void CharacterDBPackageBag::set_package_type(::google::protobuf::uint32 value) {
  set_has_package_type();
  package_type_ = value;
}

// optional uint32 expand_num = 2;
inline bool CharacterDBPackageBag::has_expand_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBPackageBag::set_has_expand_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBPackageBag::clear_has_expand_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBPackageBag::clear_expand_num() {
  expand_num_ = 0u;
  clear_has_expand_num();
}
inline ::google::protobuf::uint32 CharacterDBPackageBag::expand_num() const {
  return expand_num_;
}
inline void CharacterDBPackageBag::set_expand_num(::google::protobuf::uint32 value) {
  set_has_expand_num();
  expand_num_ = value;
}

// repeated .proto_ff.ItemProtoInfo items = 3;
inline int CharacterDBPackageBag::items_size() const {
  return items_.size();
}
inline void CharacterDBPackageBag::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& CharacterDBPackageBag::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* CharacterDBPackageBag::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* CharacterDBPackageBag::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
CharacterDBPackageBag::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
CharacterDBPackageBag::mutable_items() {
  return &items_;
}

// optional int32 offset = 4;
inline bool CharacterDBPackageBag::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBPackageBag::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBPackageBag::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBPackageBag::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 CharacterDBPackageBag::offset() const {
  return offset_;
}
inline void CharacterDBPackageBag::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// -------------------------------------------------------------------

// CharacterDBPackageData

// repeated .proto_ff.CharacterDBPackageBag bags = 1;
inline int CharacterDBPackageData::bags_size() const {
  return bags_.size();
}
inline void CharacterDBPackageData::clear_bags() {
  bags_.Clear();
}
inline const ::proto_ff::CharacterDBPackageBag& CharacterDBPackageData::bags(int index) const {
  return bags_.Get(index);
}
inline ::proto_ff::CharacterDBPackageBag* CharacterDBPackageData::mutable_bags(int index) {
  return bags_.Mutable(index);
}
inline ::proto_ff::CharacterDBPackageBag* CharacterDBPackageData::add_bags() {
  return bags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBPackageBag >&
CharacterDBPackageData::bags() const {
  return bags_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBPackageBag >*
CharacterDBPackageData::mutable_bags() {
  return &bags_;
}

// -------------------------------------------------------------------

// CharacterDBMissionItemInfo

// optional uint32 type = 1;
inline bool CharacterDBMissionItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionItemInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::type() const {
  return type_;
}
inline void CharacterDBMissionItemInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 2;
inline bool CharacterDBMissionItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionItemInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::id() const {
  return id_;
}
inline void CharacterDBMissionItemInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 currentValue = 3;
inline bool CharacterDBMissionItemInfo::has_currentvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_currentvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_has_currentvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionItemInfo::clear_currentvalue() {
  currentvalue_ = 0u;
  clear_has_currentvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::currentvalue() const {
  return currentvalue_;
}
inline void CharacterDBMissionItemInfo::set_currentvalue(::google::protobuf::uint32 value) {
  set_has_currentvalue();
  currentvalue_ = value;
}

// optional uint32 finalValue = 4;
inline bool CharacterDBMissionItemInfo::has_finalvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_finalvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_has_finalvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionItemInfo::clear_finalvalue() {
  finalvalue_ = 0u;
  clear_has_finalvalue();
}
inline ::google::protobuf::uint32 CharacterDBMissionItemInfo::finalvalue() const {
  return finalvalue_;
}
inline void CharacterDBMissionItemInfo::set_finalvalue(::google::protobuf::uint32 value) {
  set_has_finalvalue();
  finalvalue_ = value;
}

// optional bool completedFlag = 5;
inline bool CharacterDBMissionItemInfo::has_completedflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_completedflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_has_completedflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBMissionItemInfo::clear_completedflag() {
  completedflag_ = false;
  clear_has_completedflag();
}
inline bool CharacterDBMissionItemInfo::completedflag() const {
  return completedflag_;
}
inline void CharacterDBMissionItemInfo::set_completedflag(bool value) {
  set_has_completedflag();
  completedflag_ = value;
}

// optional uint64 parma1 = 6;
inline bool CharacterDBMissionItemInfo::has_parma1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionItemInfo::clear_parma1() {
  parma1_ = GOOGLE_ULONGLONG(0);
  clear_has_parma1();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma1() const {
  return parma1_;
}
inline void CharacterDBMissionItemInfo::set_parma1(::google::protobuf::uint64 value) {
  set_has_parma1();
  parma1_ = value;
}

// optional uint64 parma2 = 7;
inline bool CharacterDBMissionItemInfo::has_parma2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBMissionItemInfo::clear_parma2() {
  parma2_ = GOOGLE_ULONGLONG(0);
  clear_has_parma2();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma2() const {
  return parma2_;
}
inline void CharacterDBMissionItemInfo::set_parma2(::google::protobuf::uint64 value) {
  set_has_parma2();
  parma2_ = value;
}

// optional uint64 parma3 = 8;
inline bool CharacterDBMissionItemInfo::has_parma3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBMissionItemInfo::set_has_parma3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_has_parma3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBMissionItemInfo::clear_parma3() {
  parma3_ = GOOGLE_ULONGLONG(0);
  clear_has_parma3();
}
inline ::google::protobuf::uint64 CharacterDBMissionItemInfo::parma3() const {
  return parma3_;
}
inline void CharacterDBMissionItemInfo::set_parma3(::google::protobuf::uint64 value) {
  set_has_parma3();
  parma3_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMissionTrack

// optional uint64 missionId = 1;
inline bool CharacterDBMissionTrack::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMissionTrack::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMissionTrack::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMissionTrack::clear_missionid() {
  missionid_ = GOOGLE_ULONGLONG(0);
  clear_has_missionid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::missionid() const {
  return missionid_;
}
inline void CharacterDBMissionTrack::set_missionid(::google::protobuf::uint64 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint64 dynamicid = 2;
inline bool CharacterDBMissionTrack::has_dynamicid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMissionTrack::set_has_dynamicid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMissionTrack::clear_has_dynamicid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMissionTrack::clear_dynamicid() {
  dynamicid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynamicid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::dynamicid() const {
  return dynamicid_;
}
inline void CharacterDBMissionTrack::set_dynamicid(::google::protobuf::uint64 value) {
  set_has_dynamicid();
  dynamicid_ = value;
}

// optional uint32 status = 3;
inline bool CharacterDBMissionTrack::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMissionTrack::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMissionTrack::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMissionTrack::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CharacterDBMissionTrack::status() const {
  return status_;
}
inline void CharacterDBMissionTrack::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint64 acceptMissionTime = 4;
inline bool CharacterDBMissionTrack::has_acceptmissiontime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMissionTrack::set_has_acceptmissiontime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMissionTrack::clear_has_acceptmissiontime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMissionTrack::clear_acceptmissiontime() {
  acceptmissiontime_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptmissiontime();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::acceptmissiontime() const {
  return acceptmissiontime_;
}
inline void CharacterDBMissionTrack::set_acceptmissiontime(::google::protobuf::uint64 value) {
  set_has_acceptmissiontime();
  acceptmissiontime_ = value;
}

// repeated .proto_ff.CharacterDBMissionItemInfo itemInfo = 5;
inline int CharacterDBMissionTrack::iteminfo_size() const {
  return iteminfo_.size();
}
inline void CharacterDBMissionTrack::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::proto_ff::CharacterDBMissionItemInfo& CharacterDBMissionTrack::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionItemInfo* CharacterDBMissionTrack::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >&
CharacterDBMissionTrack::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionItemInfo >*
CharacterDBMissionTrack::mutable_iteminfo() {
  return &iteminfo_;
}

// optional uint64 textid = 6;
inline bool CharacterDBMissionTrack::has_textid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBMissionTrack::set_has_textid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBMissionTrack::clear_has_textid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBMissionTrack::clear_textid() {
  textid_ = GOOGLE_ULONGLONG(0);
  clear_has_textid();
}
inline ::google::protobuf::uint64 CharacterDBMissionTrack::textid() const {
  return textid_;
}
inline void CharacterDBMissionTrack::set_textid(::google::protobuf::uint64 value) {
  set_has_textid();
  textid_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDyMissionInfo

// optional int32 mission_type = 1;
inline bool CharacterDBDyMissionInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDyMissionInfo::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::mission_type() const {
  return mission_type_;
}
inline void CharacterDBDyMissionInfo::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 lastfresh = 2;
inline bool CharacterDBDyMissionInfo::has_lastfresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_lastfresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_has_lastfresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDyMissionInfo::clear_lastfresh() {
  lastfresh_ = GOOGLE_ULONGLONG(0);
  clear_has_lastfresh();
}
inline ::google::protobuf::uint64 CharacterDBDyMissionInfo::lastfresh() const {
  return lastfresh_;
}
inline void CharacterDBDyMissionInfo::set_lastfresh(::google::protobuf::uint64 value) {
  set_has_lastfresh();
  lastfresh_ = value;
}

// optional int32 accept_num = 3;
inline bool CharacterDBDyMissionInfo::has_accept_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBDyMissionInfo::set_has_accept_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_has_accept_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBDyMissionInfo::clear_accept_num() {
  accept_num_ = 0;
  clear_has_accept_num();
}
inline ::google::protobuf::int32 CharacterDBDyMissionInfo::accept_num() const {
  return accept_num_;
}
inline void CharacterDBDyMissionInfo::set_accept_num(::google::protobuf::int32 value) {
  set_has_accept_num();
  accept_num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBRecentSubmitMission

// optional int32 mission_type = 1;
inline bool CharacterDBRecentSubmitMission::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_type() {
  mission_type_ = 0;
  clear_has_mission_type();
}
inline ::google::protobuf::int32 CharacterDBRecentSubmitMission::mission_type() const {
  return mission_type_;
}
inline void CharacterDBRecentSubmitMission::set_mission_type(::google::protobuf::int32 value) {
  set_has_mission_type();
  mission_type_ = value;
}

// optional uint64 mission_id = 2;
inline bool CharacterDBRecentSubmitMission::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBRecentSubmitMission::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBRecentSubmitMission::clear_mission_id() {
  mission_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mission_id();
}
inline ::google::protobuf::uint64 CharacterDBRecentSubmitMission::mission_id() const {
  return mission_id_;
}
inline void CharacterDBRecentSubmitMission::set_mission_id(::google::protobuf::uint64 value) {
  set_has_mission_id();
  mission_id_ = value;
}

// -------------------------------------------------------------------

// CharacterDBTaskData

// repeated .proto_ff.CharacterDBMissionTrack missionTrack = 1;
inline int CharacterDBTaskData::missiontrack_size() const {
  return missiontrack_.size();
}
inline void CharacterDBTaskData::clear_missiontrack() {
  missiontrack_.Clear();
}
inline const ::proto_ff::CharacterDBMissionTrack& CharacterDBTaskData::missiontrack(int index) const {
  return missiontrack_.Get(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::mutable_missiontrack(int index) {
  return missiontrack_.Mutable(index);
}
inline ::proto_ff::CharacterDBMissionTrack* CharacterDBTaskData::add_missiontrack() {
  return missiontrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >&
CharacterDBTaskData::missiontrack() const {
  return missiontrack_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBMissionTrack >*
CharacterDBTaskData::mutable_missiontrack() {
  return &missiontrack_;
}

// repeated .proto_ff.CharacterDBDyMissionInfo dyinfo = 2;
inline int CharacterDBTaskData::dyinfo_size() const {
  return dyinfo_.size();
}
inline void CharacterDBTaskData::clear_dyinfo() {
  dyinfo_.Clear();
}
inline const ::proto_ff::CharacterDBDyMissionInfo& CharacterDBTaskData::dyinfo(int index) const {
  return dyinfo_.Get(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::mutable_dyinfo(int index) {
  return dyinfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBDyMissionInfo* CharacterDBTaskData::add_dyinfo() {
  return dyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >&
CharacterDBTaskData::dyinfo() const {
  return dyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDyMissionInfo >*
CharacterDBTaskData::mutable_dyinfo() {
  return &dyinfo_;
}

// repeated uint64 already_submit = 3;
inline int CharacterDBTaskData::already_submit_size() const {
  return already_submit_.size();
}
inline void CharacterDBTaskData::clear_already_submit() {
  already_submit_.Clear();
}
inline ::google::protobuf::uint64 CharacterDBTaskData::already_submit(int index) const {
  return already_submit_.Get(index);
}
inline void CharacterDBTaskData::set_already_submit(int index, ::google::protobuf::uint64 value) {
  already_submit_.Set(index, value);
}
inline void CharacterDBTaskData::add_already_submit(::google::protobuf::uint64 value) {
  already_submit_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterDBTaskData::already_submit() const {
  return already_submit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterDBTaskData::mutable_already_submit() {
  return &already_submit_;
}

// repeated .proto_ff.CharacterDBRecentSubmitMission recent_submit = 4;
inline int CharacterDBTaskData::recent_submit_size() const {
  return recent_submit_.size();
}
inline void CharacterDBTaskData::clear_recent_submit() {
  recent_submit_.Clear();
}
inline const ::proto_ff::CharacterDBRecentSubmitMission& CharacterDBTaskData::recent_submit(int index) const {
  return recent_submit_.Get(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::mutable_recent_submit(int index) {
  return recent_submit_.Mutable(index);
}
inline ::proto_ff::CharacterDBRecentSubmitMission* CharacterDBTaskData::add_recent_submit() {
  return recent_submit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >&
CharacterDBTaskData::recent_submit() const {
  return recent_submit_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBRecentSubmitMission >*
CharacterDBTaskData::mutable_recent_submit() {
  return &recent_submit_;
}

// -------------------------------------------------------------------

// CharacterDBSkillItem

// optional int64 skillID = 1;
inline bool CharacterDBSkillItem::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBSkillItem::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBSkillItem::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBSkillItem::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 CharacterDBSkillItem::skillid() const {
  return skillid_;
}
inline void CharacterDBSkillItem::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 skillLevel = 2;
inline bool CharacterDBSkillItem::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBSkillItem::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBSkillItem::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBSkillItem::clear_skilllevel() {
  skilllevel_ = 0;
  clear_has_skilllevel();
}
inline ::google::protobuf::int32 CharacterDBSkillItem::skilllevel() const {
  return skilllevel_;
}
inline void CharacterDBSkillItem::set_skilllevel(::google::protobuf::int32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
}

// optional uint64 cd = 3;
inline bool CharacterDBSkillItem::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBSkillItem::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBSkillItem::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBSkillItem::clear_cd() {
  cd_ = GOOGLE_ULONGLONG(0);
  clear_has_cd();
}
inline ::google::protobuf::uint64 CharacterDBSkillItem::cd() const {
  return cd_;
}
inline void CharacterDBSkillItem::set_cd(::google::protobuf::uint64 value) {
  set_has_cd();
  cd_ = value;
}

// optional int32 unlock = 4;
inline bool CharacterDBSkillItem::has_unlock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBSkillItem::set_has_unlock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBSkillItem::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBSkillItem::clear_unlock() {
  unlock_ = 0;
  clear_has_unlock();
}
inline ::google::protobuf::int32 CharacterDBSkillItem::unlock() const {
  return unlock_;
}
inline void CharacterDBSkillItem::set_unlock(::google::protobuf::int32 value) {
  set_has_unlock();
  unlock_ = value;
}

// optional int64 replace_skillid = 5;
inline bool CharacterDBSkillItem::has_replace_skillid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBSkillItem::set_has_replace_skillid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBSkillItem::clear_has_replace_skillid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBSkillItem::clear_replace_skillid() {
  replace_skillid_ = GOOGLE_LONGLONG(0);
  clear_has_replace_skillid();
}
inline ::google::protobuf::int64 CharacterDBSkillItem::replace_skillid() const {
  return replace_skillid_;
}
inline void CharacterDBSkillItem::set_replace_skillid(::google::protobuf::int64 value) {
  set_has_replace_skillid();
  replace_skillid_ = value;
}

// -------------------------------------------------------------------

// CharacterDBSkillData

// repeated .proto_ff.CharacterDBSkillItem skillList = 1;
inline int CharacterDBSkillData::skilllist_size() const {
  return skilllist_.size();
}
inline void CharacterDBSkillData::clear_skilllist() {
  skilllist_.Clear();
}
inline const ::proto_ff::CharacterDBSkillItem& CharacterDBSkillData::skilllist(int index) const {
  return skilllist_.Get(index);
}
inline ::proto_ff::CharacterDBSkillItem* CharacterDBSkillData::mutable_skilllist(int index) {
  return skilllist_.Mutable(index);
}
inline ::proto_ff::CharacterDBSkillItem* CharacterDBSkillData::add_skilllist() {
  return skilllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSkillItem >&
CharacterDBSkillData::skilllist() const {
  return skilllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSkillItem >*
CharacterDBSkillData::mutable_skilllist() {
  return &skilllist_;
}

// repeated uint32 skillAttrs = 2;
inline int CharacterDBSkillData::skillattrs_size() const {
  return skillattrs_.size();
}
inline void CharacterDBSkillData::clear_skillattrs() {
  skillattrs_.Clear();
}
inline ::google::protobuf::uint32 CharacterDBSkillData::skillattrs(int index) const {
  return skillattrs_.Get(index);
}
inline void CharacterDBSkillData::set_skillattrs(int index, ::google::protobuf::uint32 value) {
  skillattrs_.Set(index, value);
}
inline void CharacterDBSkillData::add_skillattrs(::google::protobuf::uint32 value) {
  skillattrs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CharacterDBSkillData::skillattrs() const {
  return skillattrs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CharacterDBSkillData::mutable_skillattrs() {
  return &skillattrs_;
}

// repeated int64 skillslot = 3;
inline int CharacterDBSkillData::skillslot_size() const {
  return skillslot_.size();
}
inline void CharacterDBSkillData::clear_skillslot() {
  skillslot_.Clear();
}
inline ::google::protobuf::int64 CharacterDBSkillData::skillslot(int index) const {
  return skillslot_.Get(index);
}
inline void CharacterDBSkillData::set_skillslot(int index, ::google::protobuf::int64 value) {
  skillslot_.Set(index, value);
}
inline void CharacterDBSkillData::add_skillslot(::google::protobuf::int64 value) {
  skillslot_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CharacterDBSkillData::skillslot() const {
  return skillslot_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CharacterDBSkillData::mutable_skillslot() {
  return &skillslot_;
}

// -------------------------------------------------------------------

// CharacterDBAttrDetailInfo

// repeated .proto_ff.Attr64 attrs = 1;
inline int CharacterDBAttrDetailInfo::attrs_size() const {
  return attrs_.size();
}
inline void CharacterDBAttrDetailInfo::clear_attrs() {
  attrs_.Clear();
}
inline const ::proto_ff::Attr64& CharacterDBAttrDetailInfo::attrs(int index) const {
  return attrs_.Get(index);
}
inline ::proto_ff::Attr64* CharacterDBAttrDetailInfo::mutable_attrs(int index) {
  return attrs_.Mutable(index);
}
inline ::proto_ff::Attr64* CharacterDBAttrDetailInfo::add_attrs() {
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >&
CharacterDBAttrDetailInfo::attrs() const {
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr64 >*
CharacterDBAttrDetailInfo::mutable_attrs() {
  return &attrs_;
}

// optional .proto_ff.Vector3PB cur_pos = 2;
inline bool CharacterDBAttrDetailInfo::has_cur_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBAttrDetailInfo::set_has_cur_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBAttrDetailInfo::clear_has_cur_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBAttrDetailInfo::clear_cur_pos() {
  if (cur_pos_ != NULL) cur_pos_->::proto_ff::Vector3PB::Clear();
  clear_has_cur_pos();
}
inline const ::proto_ff::Vector3PB& CharacterDBAttrDetailInfo::cur_pos() const {
  return cur_pos_ != NULL ? *cur_pos_ : *default_instance_->cur_pos_;
}
inline ::proto_ff::Vector3PB* CharacterDBAttrDetailInfo::mutable_cur_pos() {
  set_has_cur_pos();
  if (cur_pos_ == NULL) cur_pos_ = new ::proto_ff::Vector3PB;
  return cur_pos_;
}
inline ::proto_ff::Vector3PB* CharacterDBAttrDetailInfo::release_cur_pos() {
  clear_has_cur_pos();
  ::proto_ff::Vector3PB* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
inline void CharacterDBAttrDetailInfo::set_allocated_cur_pos(::proto_ff::Vector3PB* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    set_has_cur_pos();
  } else {
    clear_has_cur_pos();
  }
}

// -------------------------------------------------------------------

// CharacterDBExtendData

// optional .proto_ff.CharacterDBAttrDetailInfo attr_detail = 1;
inline bool CharacterDBExtendData::has_attr_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBExtendData::set_has_attr_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBExtendData::clear_has_attr_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBExtendData::clear_attr_detail() {
  if (attr_detail_ != NULL) attr_detail_->::proto_ff::CharacterDBAttrDetailInfo::Clear();
  clear_has_attr_detail();
}
inline const ::proto_ff::CharacterDBAttrDetailInfo& CharacterDBExtendData::attr_detail() const {
  return attr_detail_ != NULL ? *attr_detail_ : *default_instance_->attr_detail_;
}
inline ::proto_ff::CharacterDBAttrDetailInfo* CharacterDBExtendData::mutable_attr_detail() {
  set_has_attr_detail();
  if (attr_detail_ == NULL) attr_detail_ = new ::proto_ff::CharacterDBAttrDetailInfo;
  return attr_detail_;
}
inline ::proto_ff::CharacterDBAttrDetailInfo* CharacterDBExtendData::release_attr_detail() {
  clear_has_attr_detail();
  ::proto_ff::CharacterDBAttrDetailInfo* temp = attr_detail_;
  attr_detail_ = NULL;
  return temp;
}
inline void CharacterDBExtendData::set_allocated_attr_detail(::proto_ff::CharacterDBAttrDetailInfo* attr_detail) {
  delete attr_detail_;
  attr_detail_ = attr_detail;
  if (attr_detail) {
    set_has_attr_detail();
  } else {
    clear_has_attr_detail();
  }
}

// -------------------------------------------------------------------

// EquipSlotProto

// optional int32 index = 1;
inline bool EquipSlotProto::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSlotProto::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSlotProto::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSlotProto::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 EquipSlotProto::index() const {
  return index_;
}
inline void EquipSlotProto::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 strenlv = 2;
inline bool EquipSlotProto::has_strenlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSlotProto::set_has_strenlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSlotProto::clear_has_strenlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSlotProto::clear_strenlv() {
  strenlv_ = 0;
  clear_has_strenlv();
}
inline ::google::protobuf::int32 EquipSlotProto::strenlv() const {
  return strenlv_;
}
inline void EquipSlotProto::set_strenlv(::google::protobuf::int32 value) {
  set_has_strenlv();
  strenlv_ = value;
}

// optional int32 refinelv = 3;
inline bool EquipSlotProto::has_refinelv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSlotProto::set_has_refinelv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSlotProto::clear_has_refinelv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSlotProto::clear_refinelv() {
  refinelv_ = 0;
  clear_has_refinelv();
}
inline ::google::protobuf::int32 EquipSlotProto::refinelv() const {
  return refinelv_;
}
inline void EquipSlotProto::set_refinelv(::google::protobuf::int32 value) {
  set_has_refinelv();
  refinelv_ = value;
}

// repeated uint64 inlay = 4;
inline int EquipSlotProto::inlay_size() const {
  return inlay_.size();
}
inline void EquipSlotProto::clear_inlay() {
  inlay_.Clear();
}
inline ::google::protobuf::uint64 EquipSlotProto::inlay(int index) const {
  return inlay_.Get(index);
}
inline void EquipSlotProto::set_inlay(int index, ::google::protobuf::uint64 value) {
  inlay_.Set(index, value);
}
inline void EquipSlotProto::add_inlay(::google::protobuf::uint64 value) {
  inlay_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
EquipSlotProto::inlay() const {
  return inlay_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
EquipSlotProto::mutable_inlay() {
  return &inlay_;
}

// optional int32 strenexp = 5;
inline bool EquipSlotProto::has_strenexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipSlotProto::set_has_strenexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipSlotProto::clear_has_strenexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipSlotProto::clear_strenexp() {
  strenexp_ = 0;
  clear_has_strenexp();
}
inline ::google::protobuf::int32 EquipSlotProto::strenexp() const {
  return strenexp_;
}
inline void EquipSlotProto::set_strenexp(::google::protobuf::int32 value) {
  set_has_strenexp();
  strenexp_ = value;
}

// optional int32 refineexp = 6;
inline bool EquipSlotProto::has_refineexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipSlotProto::set_has_refineexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipSlotProto::clear_has_refineexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipSlotProto::clear_refineexp() {
  refineexp_ = 0;
  clear_has_refineexp();
}
inline ::google::protobuf::int32 EquipSlotProto::refineexp() const {
  return refineexp_;
}
inline void EquipSlotProto::set_refineexp(::google::protobuf::int32 value) {
  set_has_refineexp();
  refineexp_ = value;
}

// repeated .proto_ff.Attr strenAttr = 7;
inline int EquipSlotProto::strenattr_size() const {
  return strenattr_.size();
}
inline void EquipSlotProto::clear_strenattr() {
  strenattr_.Clear();
}
inline const ::proto_ff::Attr& EquipSlotProto::strenattr(int index) const {
  return strenattr_.Get(index);
}
inline ::proto_ff::Attr* EquipSlotProto::mutable_strenattr(int index) {
  return strenattr_.Mutable(index);
}
inline ::proto_ff::Attr* EquipSlotProto::add_strenattr() {
  return strenattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >&
EquipSlotProto::strenattr() const {
  return strenattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::Attr >*
EquipSlotProto::mutable_strenattr() {
  return &strenattr_;
}

// optional int64 refinepecent = 8;
inline bool EquipSlotProto::has_refinepecent() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipSlotProto::set_has_refinepecent() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipSlotProto::clear_has_refinepecent() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipSlotProto::clear_refinepecent() {
  refinepecent_ = GOOGLE_LONGLONG(0);
  clear_has_refinepecent();
}
inline ::google::protobuf::int64 EquipSlotProto::refinepecent() const {
  return refinepecent_;
}
inline void EquipSlotProto::set_refinepecent(::google::protobuf::int64 value) {
  set_has_refinepecent();
  refinepecent_ = value;
}

// optional int32 scrutinyTrepanningNum = 9;
inline bool EquipSlotProto::has_scrutinytrepanningnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipSlotProto::set_has_scrutinytrepanningnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipSlotProto::clear_has_scrutinytrepanningnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipSlotProto::clear_scrutinytrepanningnum() {
  scrutinytrepanningnum_ = 0;
  clear_has_scrutinytrepanningnum();
}
inline ::google::protobuf::int32 EquipSlotProto::scrutinytrepanningnum() const {
  return scrutinytrepanningnum_;
}
inline void EquipSlotProto::set_scrutinytrepanningnum(::google::protobuf::int32 value) {
  set_has_scrutinytrepanningnum();
  scrutinytrepanningnum_ = value;
}

// repeated .proto_ff.AttrEx64 scrutinyAttr = 10;
inline int EquipSlotProto::scrutinyattr_size() const {
  return scrutinyattr_.size();
}
inline void EquipSlotProto::clear_scrutinyattr() {
  scrutinyattr_.Clear();
}
inline const ::proto_ff::AttrEx64& EquipSlotProto::scrutinyattr(int index) const {
  return scrutinyattr_.Get(index);
}
inline ::proto_ff::AttrEx64* EquipSlotProto::mutable_scrutinyattr(int index) {
  return scrutinyattr_.Mutable(index);
}
inline ::proto_ff::AttrEx64* EquipSlotProto::add_scrutinyattr() {
  return scrutinyattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::AttrEx64 >&
EquipSlotProto::scrutinyattr() const {
  return scrutinyattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::AttrEx64 >*
EquipSlotProto::mutable_scrutinyattr() {
  return &scrutinyattr_;
}

// optional int32 clearStep = 11;
inline bool EquipSlotProto::has_clearstep() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquipSlotProto::set_has_clearstep() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquipSlotProto::clear_has_clearstep() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquipSlotProto::clear_clearstep() {
  clearstep_ = 0;
  clear_has_clearstep();
}
inline ::google::protobuf::int32 EquipSlotProto::clearstep() const {
  return clearstep_;
}
inline void EquipSlotProto::set_clearstep(::google::protobuf::int32 value) {
  set_has_clearstep();
  clearstep_ = value;
}

// optional int64 clearCombat = 12;
inline bool EquipSlotProto::has_clearcombat() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EquipSlotProto::set_has_clearcombat() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EquipSlotProto::clear_has_clearcombat() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EquipSlotProto::clear_clearcombat() {
  clearcombat_ = GOOGLE_LONGLONG(0);
  clear_has_clearcombat();
}
inline ::google::protobuf::int64 EquipSlotProto::clearcombat() const {
  return clearcombat_;
}
inline void EquipSlotProto::set_clearcombat(::google::protobuf::int64 value) {
  set_has_clearcombat();
  clearcombat_ = value;
}

// optional int32 suitlv = 13;
inline bool EquipSlotProto::has_suitlv() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EquipSlotProto::set_has_suitlv() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EquipSlotProto::clear_has_suitlv() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EquipSlotProto::clear_suitlv() {
  suitlv_ = 0;
  clear_has_suitlv();
}
inline ::google::protobuf::int32 EquipSlotProto::suitlv() const {
  return suitlv_;
}
inline void EquipSlotProto::set_suitlv(::google::protobuf::int32 value) {
  set_has_suitlv();
  suitlv_ = value;
}

// optional int32 suit_record_max_lv = 14;
inline bool EquipSlotProto::has_suit_record_max_lv() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EquipSlotProto::set_has_suit_record_max_lv() {
  _has_bits_[0] |= 0x00002000u;
}
inline void EquipSlotProto::clear_has_suit_record_max_lv() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void EquipSlotProto::clear_suit_record_max_lv() {
  suit_record_max_lv_ = 0;
  clear_has_suit_record_max_lv();
}
inline ::google::protobuf::int32 EquipSlotProto::suit_record_max_lv() const {
  return suit_record_max_lv_;
}
inline void EquipSlotProto::set_suit_record_max_lv(::google::protobuf::int32 value) {
  set_has_suit_record_max_lv();
  suit_record_max_lv_ = value;
}

// optional int32 awaklv = 15;
inline bool EquipSlotProto::has_awaklv() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EquipSlotProto::set_has_awaklv() {
  _has_bits_[0] |= 0x00004000u;
}
inline void EquipSlotProto::clear_has_awaklv() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void EquipSlotProto::clear_awaklv() {
  awaklv_ = 0;
  clear_has_awaklv();
}
inline ::google::protobuf::int32 EquipSlotProto::awaklv() const {
  return awaklv_;
}
inline void EquipSlotProto::set_awaklv(::google::protobuf::int32 value) {
  set_has_awaklv();
  awaklv_ = value;
}

// optional int32 enchantinglv = 16;
inline bool EquipSlotProto::has_enchantinglv() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EquipSlotProto::set_has_enchantinglv() {
  _has_bits_[0] |= 0x00008000u;
}
inline void EquipSlotProto::clear_has_enchantinglv() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void EquipSlotProto::clear_enchantinglv() {
  enchantinglv_ = 0;
  clear_has_enchantinglv();
}
inline ::google::protobuf::int32 EquipSlotProto::enchantinglv() const {
  return enchantinglv_;
}
inline void EquipSlotProto::set_enchantinglv(::google::protobuf::int32 value) {
  set_has_enchantinglv();
  enchantinglv_ = value;
}

// -------------------------------------------------------------------

// CharacterDBEquipData

// repeated .proto_ff.ItemProtoInfo equip = 1;
inline int CharacterDBEquipData::equip_size() const {
  return equip_.size();
}
inline void CharacterDBEquipData::clear_equip() {
  equip_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& CharacterDBEquipData::equip(int index) const {
  return equip_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* CharacterDBEquipData::mutable_equip(int index) {
  return equip_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* CharacterDBEquipData::add_equip() {
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
CharacterDBEquipData::equip() const {
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
CharacterDBEquipData::mutable_equip() {
  return &equip_;
}

// repeated .proto_ff.EquipSlotProto equip_slot = 2;
inline int CharacterDBEquipData::equip_slot_size() const {
  return equip_slot_.size();
}
inline void CharacterDBEquipData::clear_equip_slot() {
  equip_slot_.Clear();
}
inline const ::proto_ff::EquipSlotProto& CharacterDBEquipData::equip_slot(int index) const {
  return equip_slot_.Get(index);
}
inline ::proto_ff::EquipSlotProto* CharacterDBEquipData::mutable_equip_slot(int index) {
  return equip_slot_.Mutable(index);
}
inline ::proto_ff::EquipSlotProto* CharacterDBEquipData::add_equip_slot() {
  return equip_slot_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotProto >&
CharacterDBEquipData::equip_slot() const {
  return equip_slot_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipSlotProto >*
CharacterDBEquipData::mutable_equip_slot() {
  return &equip_slot_;
}

// -------------------------------------------------------------------

// DuplicateSingleProto

// optional uint64 duplicate_id = 1;
inline bool DuplicateSingleProto::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuplicateSingleProto::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuplicateSingleProto::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuplicateSingleProto::clear_duplicate_id() {
  duplicate_id_ = GOOGLE_ULONGLONG(0);
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint64 DuplicateSingleProto::duplicate_id() const {
  return duplicate_id_;
}
inline void DuplicateSingleProto::set_duplicate_id(::google::protobuf::uint64 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// optional int32 star = 2;
inline bool DuplicateSingleProto::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuplicateSingleProto::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuplicateSingleProto::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuplicateSingleProto::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 DuplicateSingleProto::star() const {
  return star_;
}
inline void DuplicateSingleProto::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 cur_layer = 3;
inline bool DuplicateSingleProto::has_cur_layer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DuplicateSingleProto::set_has_cur_layer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DuplicateSingleProto::clear_has_cur_layer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DuplicateSingleProto::clear_cur_layer() {
  cur_layer_ = 0;
  clear_has_cur_layer();
}
inline ::google::protobuf::int32 DuplicateSingleProto::cur_layer() const {
  return cur_layer_;
}
inline void DuplicateSingleProto::set_cur_layer(::google::protobuf::int32 value) {
  set_has_cur_layer();
  cur_layer_ = value;
}

// -------------------------------------------------------------------

// DuplicateGroupProto

// optional uint64 group_id = 1;
inline bool DuplicateGroupProto::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuplicateGroupProto::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuplicateGroupProto::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuplicateGroupProto::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 DuplicateGroupProto::group_id() const {
  return group_id_;
}
inline void DuplicateGroupProto::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional int32 enter_num = 2;
inline bool DuplicateGroupProto::has_enter_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuplicateGroupProto::set_has_enter_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuplicateGroupProto::clear_has_enter_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuplicateGroupProto::clear_enter_num() {
  enter_num_ = 0;
  clear_has_enter_num();
}
inline ::google::protobuf::int32 DuplicateGroupProto::enter_num() const {
  return enter_num_;
}
inline void DuplicateGroupProto::set_enter_num(::google::protobuf::int32 value) {
  set_has_enter_num();
  enter_num_ = value;
}

// optional int32 total_num = 3;
inline bool DuplicateGroupProto::has_total_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DuplicateGroupProto::set_has_total_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DuplicateGroupProto::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DuplicateGroupProto::clear_total_num() {
  total_num_ = 0;
  clear_has_total_num();
}
inline ::google::protobuf::int32 DuplicateGroupProto::total_num() const {
  return total_num_;
}
inline void DuplicateGroupProto::set_total_num(::google::protobuf::int32 value) {
  set_has_total_num();
  total_num_ = value;
}

// optional int32 buy_num = 4;
inline bool DuplicateGroupProto::has_buy_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DuplicateGroupProto::set_has_buy_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DuplicateGroupProto::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DuplicateGroupProto::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 DuplicateGroupProto::buy_num() const {
  return buy_num_;
}
inline void DuplicateGroupProto::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional uint64 last_fresh = 5;
inline bool DuplicateGroupProto::has_last_fresh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DuplicateGroupProto::set_has_last_fresh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DuplicateGroupProto::clear_has_last_fresh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DuplicateGroupProto::clear_last_fresh() {
  last_fresh_ = GOOGLE_ULONGLONG(0);
  clear_has_last_fresh();
}
inline ::google::protobuf::uint64 DuplicateGroupProto::last_fresh() const {
  return last_fresh_;
}
inline void DuplicateGroupProto::set_last_fresh(::google::protobuf::uint64 value) {
  set_has_last_fresh();
  last_fresh_ = value;
}

// -------------------------------------------------------------------

// DuplicateLadderExProto

// optional int32 cur_layer = 1;
inline bool DuplicateLadderExProto::has_cur_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuplicateLadderExProto::set_has_cur_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuplicateLadderExProto::clear_has_cur_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuplicateLadderExProto::clear_cur_layer() {
  cur_layer_ = 0;
  clear_has_cur_layer();
}
inline ::google::protobuf::int32 DuplicateLadderExProto::cur_layer() const {
  return cur_layer_;
}
inline void DuplicateLadderExProto::set_cur_layer(::google::protobuf::int32 value) {
  set_has_cur_layer();
  cur_layer_ = value;
}

// optional uint64 last_mail_time = 2;
inline bool DuplicateLadderExProto::has_last_mail_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuplicateLadderExProto::set_has_last_mail_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuplicateLadderExProto::clear_has_last_mail_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuplicateLadderExProto::clear_last_mail_time() {
  last_mail_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_mail_time();
}
inline ::google::protobuf::uint64 DuplicateLadderExProto::last_mail_time() const {
  return last_mail_time_;
}
inline void DuplicateLadderExProto::set_last_mail_time(::google::protobuf::uint64 value) {
  set_has_last_mail_time();
  last_mail_time_ = value;
}

// -------------------------------------------------------------------

// DupHistoryExpProto

// optional uint64 duplicate_id = 1;
inline bool DupHistoryExpProto::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupHistoryExpProto::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupHistoryExpProto::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupHistoryExpProto::clear_duplicate_id() {
  duplicate_id_ = GOOGLE_ULONGLONG(0);
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint64 DupHistoryExpProto::duplicate_id() const {
  return duplicate_id_;
}
inline void DupHistoryExpProto::set_duplicate_id(::google::protobuf::uint64 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// optional uint64 exp = 2;
inline bool DupHistoryExpProto::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupHistoryExpProto::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupHistoryExpProto::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupHistoryExpProto::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 DupHistoryExpProto::exp() const {
  return exp_;
}
inline void DupHistoryExpProto::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// DupUnionBossDBProto

// repeated uint64 mutex_id = 1;
inline int DupUnionBossDBProto::mutex_id_size() const {
  return mutex_id_.size();
}
inline void DupUnionBossDBProto::clear_mutex_id() {
  mutex_id_.Clear();
}
inline ::google::protobuf::uint64 DupUnionBossDBProto::mutex_id(int index) const {
  return mutex_id_.Get(index);
}
inline void DupUnionBossDBProto::set_mutex_id(int index, ::google::protobuf::uint64 value) {
  mutex_id_.Set(index, value);
}
inline void DupUnionBossDBProto::add_mutex_id(::google::protobuf::uint64 value) {
  mutex_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DupUnionBossDBProto::mutex_id() const {
  return mutex_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DupUnionBossDBProto::mutable_mutex_id() {
  return &mutex_id_;
}

// optional uint64 last_pass = 2;
inline bool DupUnionBossDBProto::has_last_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupUnionBossDBProto::set_has_last_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupUnionBossDBProto::clear_has_last_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupUnionBossDBProto::clear_last_pass() {
  last_pass_ = GOOGLE_ULONGLONG(0);
  clear_has_last_pass();
}
inline ::google::protobuf::uint64 DupUnionBossDBProto::last_pass() const {
  return last_pass_;
}
inline void DupUnionBossDBProto::set_last_pass(::google::protobuf::uint64 value) {
  set_has_last_pass();
  last_pass_ = value;
}

// optional uint64 last_fail = 3;
inline bool DupUnionBossDBProto::has_last_fail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupUnionBossDBProto::set_has_last_fail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupUnionBossDBProto::clear_has_last_fail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupUnionBossDBProto::clear_last_fail() {
  last_fail_ = GOOGLE_ULONGLONG(0);
  clear_has_last_fail();
}
inline ::google::protobuf::uint64 DupUnionBossDBProto::last_fail() const {
  return last_fail_;
}
inline void DupUnionBossDBProto::set_last_fail(::google::protobuf::uint64 value) {
  set_has_last_fail();
  last_fail_ = value;
}

// -------------------------------------------------------------------

// DupPalaceFetchDBProto

// optional int32 layer = 1;
inline bool DupPalaceFetchDBProto::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupPalaceFetchDBProto::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupPalaceFetchDBProto::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupPalaceFetchDBProto::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 DupPalaceFetchDBProto::layer() const {
  return layer_;
}
inline void DupPalaceFetchDBProto::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 pass_num = 2;
inline bool DupPalaceFetchDBProto::has_pass_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupPalaceFetchDBProto::set_has_pass_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupPalaceFetchDBProto::clear_has_pass_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupPalaceFetchDBProto::clear_pass_num() {
  pass_num_ = 0;
  clear_has_pass_num();
}
inline ::google::protobuf::int32 DupPalaceFetchDBProto::pass_num() const {
  return pass_num_;
}
inline void DupPalaceFetchDBProto::set_pass_num(::google::protobuf::int32 value) {
  set_has_pass_num();
  pass_num_ = value;
}

// repeated uint32 num_lst = 3;
inline int DupPalaceFetchDBProto::num_lst_size() const {
  return num_lst_.size();
}
inline void DupPalaceFetchDBProto::clear_num_lst() {
  num_lst_.Clear();
}
inline ::google::protobuf::uint32 DupPalaceFetchDBProto::num_lst(int index) const {
  return num_lst_.Get(index);
}
inline void DupPalaceFetchDBProto::set_num_lst(int index, ::google::protobuf::uint32 value) {
  num_lst_.Set(index, value);
}
inline void DupPalaceFetchDBProto::add_num_lst(::google::protobuf::uint32 value) {
  num_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DupPalaceFetchDBProto::num_lst() const {
  return num_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DupPalaceFetchDBProto::mutable_num_lst() {
  return &num_lst_;
}

// -------------------------------------------------------------------

// DupPalaceMultFetchDBProto

// repeated .proto_ff.DupPalaceFetchDBProto fetch_progress = 1;
inline int DupPalaceMultFetchDBProto::fetch_progress_size() const {
  return fetch_progress_.size();
}
inline void DupPalaceMultFetchDBProto::clear_fetch_progress() {
  fetch_progress_.Clear();
}
inline const ::proto_ff::DupPalaceFetchDBProto& DupPalaceMultFetchDBProto::fetch_progress(int index) const {
  return fetch_progress_.Get(index);
}
inline ::proto_ff::DupPalaceFetchDBProto* DupPalaceMultFetchDBProto::mutable_fetch_progress(int index) {
  return fetch_progress_.Mutable(index);
}
inline ::proto_ff::DupPalaceFetchDBProto* DupPalaceMultFetchDBProto::add_fetch_progress() {
  return fetch_progress_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupPalaceFetchDBProto >&
DupPalaceMultFetchDBProto::fetch_progress() const {
  return fetch_progress_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupPalaceFetchDBProto >*
DupPalaceMultFetchDBProto::mutable_fetch_progress() {
  return &fetch_progress_;
}

// -------------------------------------------------------------------

// DupUnionPalaceDBProto

// optional int32 layer = 1;
inline bool DupUnionPalaceDBProto::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupUnionPalaceDBProto::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupUnionPalaceDBProto::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupUnionPalaceDBProto::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 DupUnionPalaceDBProto::layer() const {
  return layer_;
}
inline void DupUnionPalaceDBProto::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// repeated int32 fetched_lst = 2;
inline int DupUnionPalaceDBProto::fetched_lst_size() const {
  return fetched_lst_.size();
}
inline void DupUnionPalaceDBProto::clear_fetched_lst() {
  fetched_lst_.Clear();
}
inline ::google::protobuf::int32 DupUnionPalaceDBProto::fetched_lst(int index) const {
  return fetched_lst_.Get(index);
}
inline void DupUnionPalaceDBProto::set_fetched_lst(int index, ::google::protobuf::int32 value) {
  fetched_lst_.Set(index, value);
}
inline void DupUnionPalaceDBProto::add_fetched_lst(::google::protobuf::int32 value) {
  fetched_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DupUnionPalaceDBProto::fetched_lst() const {
  return fetched_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DupUnionPalaceDBProto::mutable_fetched_lst() {
  return &fetched_lst_;
}

// optional .proto_ff.DupPalaceMultFetchDBProto fetch = 3;
inline bool DupUnionPalaceDBProto::has_fetch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupUnionPalaceDBProto::set_has_fetch() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupUnionPalaceDBProto::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupUnionPalaceDBProto::clear_fetch() {
  if (fetch_ != NULL) fetch_->::proto_ff::DupPalaceMultFetchDBProto::Clear();
  clear_has_fetch();
}
inline const ::proto_ff::DupPalaceMultFetchDBProto& DupUnionPalaceDBProto::fetch() const {
  return fetch_ != NULL ? *fetch_ : *default_instance_->fetch_;
}
inline ::proto_ff::DupPalaceMultFetchDBProto* DupUnionPalaceDBProto::mutable_fetch() {
  set_has_fetch();
  if (fetch_ == NULL) fetch_ = new ::proto_ff::DupPalaceMultFetchDBProto;
  return fetch_;
}
inline ::proto_ff::DupPalaceMultFetchDBProto* DupUnionPalaceDBProto::release_fetch() {
  clear_has_fetch();
  ::proto_ff::DupPalaceMultFetchDBProto* temp = fetch_;
  fetch_ = NULL;
  return temp;
}
inline void DupUnionPalaceDBProto::set_allocated_fetch(::proto_ff::DupPalaceMultFetchDBProto* fetch) {
  delete fetch_;
  fetch_ = fetch;
  if (fetch) {
    set_has_fetch();
  } else {
    clear_has_fetch();
  }
}

// optional int32 break_count = 4;
inline bool DupUnionPalaceDBProto::has_break_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupUnionPalaceDBProto::set_has_break_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupUnionPalaceDBProto::clear_has_break_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupUnionPalaceDBProto::clear_break_count() {
  break_count_ = 0;
  clear_has_break_count();
}
inline ::google::protobuf::int32 DupUnionPalaceDBProto::break_count() const {
  return break_count_;
}
inline void DupUnionPalaceDBProto::set_break_count(::google::protobuf::int32 value) {
  set_has_break_count();
  break_count_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDuplicateData

// repeated .proto_ff.DuplicateSingleProto duplicate = 1;
inline int CharacterDBDuplicateData::duplicate_size() const {
  return duplicate_.size();
}
inline void CharacterDBDuplicateData::clear_duplicate() {
  duplicate_.Clear();
}
inline const ::proto_ff::DuplicateSingleProto& CharacterDBDuplicateData::duplicate(int index) const {
  return duplicate_.Get(index);
}
inline ::proto_ff::DuplicateSingleProto* CharacterDBDuplicateData::mutable_duplicate(int index) {
  return duplicate_.Mutable(index);
}
inline ::proto_ff::DuplicateSingleProto* CharacterDBDuplicateData::add_duplicate() {
  return duplicate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateSingleProto >&
CharacterDBDuplicateData::duplicate() const {
  return duplicate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateSingleProto >*
CharacterDBDuplicateData::mutable_duplicate() {
  return &duplicate_;
}

// repeated .proto_ff.DuplicateGroupProto group = 2;
inline int CharacterDBDuplicateData::group_size() const {
  return group_.size();
}
inline void CharacterDBDuplicateData::clear_group() {
  group_.Clear();
}
inline const ::proto_ff::DuplicateGroupProto& CharacterDBDuplicateData::group(int index) const {
  return group_.Get(index);
}
inline ::proto_ff::DuplicateGroupProto* CharacterDBDuplicateData::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::proto_ff::DuplicateGroupProto* CharacterDBDuplicateData::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateGroupProto >&
CharacterDBDuplicateData::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DuplicateGroupProto >*
CharacterDBDuplicateData::mutable_group() {
  return &group_;
}

// repeated uint32 open_dup = 3;
inline int CharacterDBDuplicateData::open_dup_size() const {
  return open_dup_.size();
}
inline void CharacterDBDuplicateData::clear_open_dup() {
  open_dup_.Clear();
}
inline ::google::protobuf::uint32 CharacterDBDuplicateData::open_dup(int index) const {
  return open_dup_.Get(index);
}
inline void CharacterDBDuplicateData::set_open_dup(int index, ::google::protobuf::uint32 value) {
  open_dup_.Set(index, value);
}
inline void CharacterDBDuplicateData::add_open_dup(::google::protobuf::uint32 value) {
  open_dup_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CharacterDBDuplicateData::open_dup() const {
  return open_dup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CharacterDBDuplicateData::mutable_open_dup() {
  return &open_dup_;
}

// optional .proto_ff.DuplicateLadderExProto ladder = 4;
inline bool CharacterDBDuplicateData::has_ladder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBDuplicateData::set_has_ladder() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBDuplicateData::clear_has_ladder() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBDuplicateData::clear_ladder() {
  if (ladder_ != NULL) ladder_->::proto_ff::DuplicateLadderExProto::Clear();
  clear_has_ladder();
}
inline const ::proto_ff::DuplicateLadderExProto& CharacterDBDuplicateData::ladder() const {
  return ladder_ != NULL ? *ladder_ : *default_instance_->ladder_;
}
inline ::proto_ff::DuplicateLadderExProto* CharacterDBDuplicateData::mutable_ladder() {
  set_has_ladder();
  if (ladder_ == NULL) ladder_ = new ::proto_ff::DuplicateLadderExProto;
  return ladder_;
}
inline ::proto_ff::DuplicateLadderExProto* CharacterDBDuplicateData::release_ladder() {
  clear_has_ladder();
  ::proto_ff::DuplicateLadderExProto* temp = ladder_;
  ladder_ = NULL;
  return temp;
}
inline void CharacterDBDuplicateData::set_allocated_ladder(::proto_ff::DuplicateLadderExProto* ladder) {
  delete ladder_;
  ladder_ = ladder;
  if (ladder) {
    set_has_ladder();
  } else {
    clear_has_ladder();
  }
}

// repeated .proto_ff.DupHistoryExpProto dup_exp = 5;
inline int CharacterDBDuplicateData::dup_exp_size() const {
  return dup_exp_.size();
}
inline void CharacterDBDuplicateData::clear_dup_exp() {
  dup_exp_.Clear();
}
inline const ::proto_ff::DupHistoryExpProto& CharacterDBDuplicateData::dup_exp(int index) const {
  return dup_exp_.Get(index);
}
inline ::proto_ff::DupHistoryExpProto* CharacterDBDuplicateData::mutable_dup_exp(int index) {
  return dup_exp_.Mutable(index);
}
inline ::proto_ff::DupHistoryExpProto* CharacterDBDuplicateData::add_dup_exp() {
  return dup_exp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupHistoryExpProto >&
CharacterDBDuplicateData::dup_exp() const {
  return dup_exp_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupHistoryExpProto >*
CharacterDBDuplicateData::mutable_dup_exp() {
  return &dup_exp_;
}

// optional .proto_ff.DupUnionBossDBProto union_boss = 6;
inline bool CharacterDBDuplicateData::has_union_boss() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBDuplicateData::set_has_union_boss() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBDuplicateData::clear_has_union_boss() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBDuplicateData::clear_union_boss() {
  if (union_boss_ != NULL) union_boss_->::proto_ff::DupUnionBossDBProto::Clear();
  clear_has_union_boss();
}
inline const ::proto_ff::DupUnionBossDBProto& CharacterDBDuplicateData::union_boss() const {
  return union_boss_ != NULL ? *union_boss_ : *default_instance_->union_boss_;
}
inline ::proto_ff::DupUnionBossDBProto* CharacterDBDuplicateData::mutable_union_boss() {
  set_has_union_boss();
  if (union_boss_ == NULL) union_boss_ = new ::proto_ff::DupUnionBossDBProto;
  return union_boss_;
}
inline ::proto_ff::DupUnionBossDBProto* CharacterDBDuplicateData::release_union_boss() {
  clear_has_union_boss();
  ::proto_ff::DupUnionBossDBProto* temp = union_boss_;
  union_boss_ = NULL;
  return temp;
}
inline void CharacterDBDuplicateData::set_allocated_union_boss(::proto_ff::DupUnionBossDBProto* union_boss) {
  delete union_boss_;
  union_boss_ = union_boss;
  if (union_boss) {
    set_has_union_boss();
  } else {
    clear_has_union_boss();
  }
}

// optional .proto_ff.DupUnionPalaceDBProto palace = 7;
inline bool CharacterDBDuplicateData::has_palace() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBDuplicateData::set_has_palace() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBDuplicateData::clear_has_palace() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBDuplicateData::clear_palace() {
  if (palace_ != NULL) palace_->::proto_ff::DupUnionPalaceDBProto::Clear();
  clear_has_palace();
}
inline const ::proto_ff::DupUnionPalaceDBProto& CharacterDBDuplicateData::palace() const {
  return palace_ != NULL ? *palace_ : *default_instance_->palace_;
}
inline ::proto_ff::DupUnionPalaceDBProto* CharacterDBDuplicateData::mutable_palace() {
  set_has_palace();
  if (palace_ == NULL) palace_ = new ::proto_ff::DupUnionPalaceDBProto;
  return palace_;
}
inline ::proto_ff::DupUnionPalaceDBProto* CharacterDBDuplicateData::release_palace() {
  clear_has_palace();
  ::proto_ff::DupUnionPalaceDBProto* temp = palace_;
  palace_ = NULL;
  return temp;
}
inline void CharacterDBDuplicateData::set_allocated_palace(::proto_ff::DupUnionPalaceDBProto* palace) {
  delete palace_;
  palace_ = palace;
  if (palace) {
    set_has_palace();
  } else {
    clear_has_palace();
  }
}

// -------------------------------------------------------------------

// SingleAchievementDBData

// optional uint64 id = 1;
inline bool SingleAchievementDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleAchievementDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleAchievementDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleAchievementDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 SingleAchievementDBData::id() const {
  return id_;
}
inline void SingleAchievementDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 status = 2;
inline bool SingleAchievementDBData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleAchievementDBData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleAchievementDBData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleAchievementDBData::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SingleAchievementDBData::status() const {
  return status_;
}
inline void SingleAchievementDBData::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 completeCount = 3;
inline bool SingleAchievementDBData::has_completecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleAchievementDBData::set_has_completecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleAchievementDBData::clear_has_completecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleAchievementDBData::clear_completecount() {
  completecount_ = 0u;
  clear_has_completecount();
}
inline ::google::protobuf::uint32 SingleAchievementDBData::completecount() const {
  return completecount_;
}
inline void SingleAchievementDBData::set_completecount(::google::protobuf::uint32 value) {
  set_has_completecount();
  completecount_ = value;
}

// -------------------------------------------------------------------

// GroupAchievementDBData

// optional uint32 sortType = 1;
inline bool GroupAchievementDBData::has_sorttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupAchievementDBData::set_has_sorttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupAchievementDBData::clear_has_sorttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupAchievementDBData::clear_sorttype() {
  sorttype_ = 0u;
  clear_has_sorttype();
}
inline ::google::protobuf::uint32 GroupAchievementDBData::sorttype() const {
  return sorttype_;
}
inline void GroupAchievementDBData::set_sorttype(::google::protobuf::uint32 value) {
  set_has_sorttype();
  sorttype_ = value;
}

// repeated .proto_ff.SingleAchievementDBData achievementInfoList = 2;
inline int GroupAchievementDBData::achievementinfolist_size() const {
  return achievementinfolist_.size();
}
inline void GroupAchievementDBData::clear_achievementinfolist() {
  achievementinfolist_.Clear();
}
inline const ::proto_ff::SingleAchievementDBData& GroupAchievementDBData::achievementinfolist(int index) const {
  return achievementinfolist_.Get(index);
}
inline ::proto_ff::SingleAchievementDBData* GroupAchievementDBData::mutable_achievementinfolist(int index) {
  return achievementinfolist_.Mutable(index);
}
inline ::proto_ff::SingleAchievementDBData* GroupAchievementDBData::add_achievementinfolist() {
  return achievementinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SingleAchievementDBData >&
GroupAchievementDBData::achievementinfolist() const {
  return achievementinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SingleAchievementDBData >*
GroupAchievementDBData::mutable_achievementinfolist() {
  return &achievementinfolist_;
}

// optional uint32 achievementReward = 3;
inline bool GroupAchievementDBData::has_achievementreward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupAchievementDBData::set_has_achievementreward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupAchievementDBData::clear_has_achievementreward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupAchievementDBData::clear_achievementreward() {
  achievementreward_ = 0u;
  clear_has_achievementreward();
}
inline ::google::protobuf::uint32 GroupAchievementDBData::achievementreward() const {
  return achievementreward_;
}
inline void GroupAchievementDBData::set_achievementreward(::google::protobuf::uint32 value) {
  set_has_achievementreward();
  achievementreward_ = value;
}

// -------------------------------------------------------------------

// CharacterAchievementDBData

// repeated .proto_ff.GroupAchievementDBData groupAchievementData = 1;
inline int CharacterAchievementDBData::groupachievementdata_size() const {
  return groupachievementdata_.size();
}
inline void CharacterAchievementDBData::clear_groupachievementdata() {
  groupachievementdata_.Clear();
}
inline const ::proto_ff::GroupAchievementDBData& CharacterAchievementDBData::groupachievementdata(int index) const {
  return groupachievementdata_.Get(index);
}
inline ::proto_ff::GroupAchievementDBData* CharacterAchievementDBData::mutable_groupachievementdata(int index) {
  return groupachievementdata_.Mutable(index);
}
inline ::proto_ff::GroupAchievementDBData* CharacterAchievementDBData::add_groupachievementdata() {
  return groupachievementdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GroupAchievementDBData >&
CharacterAchievementDBData::groupachievementdata() const {
  return groupachievementdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GroupAchievementDBData >*
CharacterAchievementDBData::mutable_groupachievementdata() {
  return &groupachievementdata_;
}

// -------------------------------------------------------------------

// EffectParamProto

// optional int64 param1 = 1;
inline bool EffectParamProto::has_param1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EffectParamProto::set_has_param1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EffectParamProto::clear_has_param1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EffectParamProto::clear_param1() {
  param1_ = GOOGLE_LONGLONG(0);
  clear_has_param1();
}
inline ::google::protobuf::int64 EffectParamProto::param1() const {
  return param1_;
}
inline void EffectParamProto::set_param1(::google::protobuf::int64 value) {
  set_has_param1();
  param1_ = value;
}

// optional int64 param2 = 2;
inline bool EffectParamProto::has_param2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EffectParamProto::set_has_param2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EffectParamProto::clear_has_param2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EffectParamProto::clear_param2() {
  param2_ = GOOGLE_LONGLONG(0);
  clear_has_param2();
}
inline ::google::protobuf::int64 EffectParamProto::param2() const {
  return param2_;
}
inline void EffectParamProto::set_param2(::google::protobuf::int64 value) {
  set_has_param2();
  param2_ = value;
}

// -------------------------------------------------------------------

// MultEffectParamProto

// repeated .proto_ff.EffectParamProto param_lst = 1;
inline int MultEffectParamProto::param_lst_size() const {
  return param_lst_.size();
}
inline void MultEffectParamProto::clear_param_lst() {
  param_lst_.Clear();
}
inline const ::proto_ff::EffectParamProto& MultEffectParamProto::param_lst(int index) const {
  return param_lst_.Get(index);
}
inline ::proto_ff::EffectParamProto* MultEffectParamProto::mutable_param_lst(int index) {
  return param_lst_.Mutable(index);
}
inline ::proto_ff::EffectParamProto* MultEffectParamProto::add_param_lst() {
  return param_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EffectParamProto >&
MultEffectParamProto::param_lst() const {
  return param_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EffectParamProto >*
MultEffectParamProto::mutable_param_lst() {
  return &param_lst_;
}

// -------------------------------------------------------------------

// BuffBagInfo

// optional uint32 buffBagInstId = 1;
inline bool BuffBagInfo::has_buffbaginstid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffBagInfo::set_has_buffbaginstid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffBagInfo::clear_has_buffbaginstid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffBagInfo::clear_buffbaginstid() {
  buffbaginstid_ = 0u;
  clear_has_buffbaginstid();
}
inline ::google::protobuf::uint32 BuffBagInfo::buffbaginstid() const {
  return buffbaginstid_;
}
inline void BuffBagInfo::set_buffbaginstid(::google::protobuf::uint32 value) {
  set_has_buffbaginstid();
  buffbaginstid_ = value;
}

// optional uint64 stateBagId = 2;
inline bool BuffBagInfo::has_statebagid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffBagInfo::set_has_statebagid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffBagInfo::clear_has_statebagid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffBagInfo::clear_statebagid() {
  statebagid_ = GOOGLE_ULONGLONG(0);
  clear_has_statebagid();
}
inline ::google::protobuf::uint64 BuffBagInfo::statebagid() const {
  return statebagid_;
}
inline void BuffBagInfo::set_statebagid(::google::protobuf::uint64 value) {
  set_has_statebagid();
  statebagid_ = value;
}

// optional uint32 stateBagTime = 3;
inline bool BuffBagInfo::has_statebagtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffBagInfo::set_has_statebagtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffBagInfo::clear_has_statebagtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffBagInfo::clear_statebagtime() {
  statebagtime_ = 0u;
  clear_has_statebagtime();
}
inline ::google::protobuf::uint32 BuffBagInfo::statebagtime() const {
  return statebagtime_;
}
inline void BuffBagInfo::set_statebagtime(::google::protobuf::uint32 value) {
  set_has_statebagtime();
  statebagtime_ = value;
}

// optional uint32 delayedTime = 4;
inline bool BuffBagInfo::has_delayedtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffBagInfo::set_has_delayedtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffBagInfo::clear_has_delayedtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffBagInfo::clear_delayedtime() {
  delayedtime_ = 0u;
  clear_has_delayedtime();
}
inline ::google::protobuf::uint32 BuffBagInfo::delayedtime() const {
  return delayedtime_;
}
inline void BuffBagInfo::set_delayedtime(::google::protobuf::uint32 value) {
  set_has_delayedtime();
  delayedtime_ = value;
}

// optional bool isForever = 6;
inline bool BuffBagInfo::has_isforever() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffBagInfo::set_has_isforever() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffBagInfo::clear_has_isforever() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffBagInfo::clear_isforever() {
  isforever_ = false;
  clear_has_isforever();
}
inline bool BuffBagInfo::isforever() const {
  return isforever_;
}
inline void BuffBagInfo::set_isforever(bool value) {
  set_has_isforever();
  isforever_ = value;
}

// optional uint64 skillId = 7;
inline bool BuffBagInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffBagInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffBagInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffBagInfo::clear_skillid() {
  skillid_ = GOOGLE_ULONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::uint64 BuffBagInfo::skillid() const {
  return skillid_;
}
inline void BuffBagInfo::set_skillid(::google::protobuf::uint64 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 skillLevel = 8;
inline bool BuffBagInfo::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffBagInfo::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffBagInfo::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffBagInfo::clear_skilllevel() {
  skilllevel_ = 0u;
  clear_has_skilllevel();
}
inline ::google::protobuf::uint32 BuffBagInfo::skilllevel() const {
  return skilllevel_;
}
inline void BuffBagInfo::set_skilllevel(::google::protobuf::uint32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
}

// optional uint64 senderCid = 10;
inline bool BuffBagInfo::has_sendercid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BuffBagInfo::set_has_sendercid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BuffBagInfo::clear_has_sendercid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BuffBagInfo::clear_sendercid() {
  sendercid_ = GOOGLE_ULONGLONG(0);
  clear_has_sendercid();
}
inline ::google::protobuf::uint64 BuffBagInfo::sendercid() const {
  return sendercid_;
}
inline void BuffBagInfo::set_sendercid(::google::protobuf::uint64 value) {
  set_has_sendercid();
  sendercid_ = value;
}

// repeated uint64 params = 11;
inline int BuffBagInfo::params_size() const {
  return params_.size();
}
inline void BuffBagInfo::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint64 BuffBagInfo::params(int index) const {
  return params_.Get(index);
}
inline void BuffBagInfo::set_params(int index, ::google::protobuf::uint64 value) {
  params_.Set(index, value);
}
inline void BuffBagInfo::add_params(::google::protobuf::uint64 value) {
  params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BuffBagInfo::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BuffBagInfo::mutable_params() {
  return &params_;
}

// optional uint32 status = 12;
inline bool BuffBagInfo::has_status() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BuffBagInfo::set_has_status() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BuffBagInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BuffBagInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 BuffBagInfo::status() const {
  return status_;
}
inline void BuffBagInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 targettype = 13;
inline bool BuffBagInfo::has_targettype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BuffBagInfo::set_has_targettype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BuffBagInfo::clear_has_targettype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BuffBagInfo::clear_targettype() {
  targettype_ = 0u;
  clear_has_targettype();
}
inline ::google::protobuf::uint32 BuffBagInfo::targettype() const {
  return targettype_;
}
inline void BuffBagInfo::set_targettype(::google::protobuf::uint32 value) {
  set_has_targettype();
  targettype_ = value;
}

// optional uint64 startTime = 14;
inline bool BuffBagInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BuffBagInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BuffBagInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BuffBagInfo::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 BuffBagInfo::starttime() const {
  return starttime_;
}
inline void BuffBagInfo::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional .proto_ff.MultEffectParamProto eparam = 15;
inline bool BuffBagInfo::has_eparam() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BuffBagInfo::set_has_eparam() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BuffBagInfo::clear_has_eparam() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BuffBagInfo::clear_eparam() {
  if (eparam_ != NULL) eparam_->::proto_ff::MultEffectParamProto::Clear();
  clear_has_eparam();
}
inline const ::proto_ff::MultEffectParamProto& BuffBagInfo::eparam() const {
  return eparam_ != NULL ? *eparam_ : *default_instance_->eparam_;
}
inline ::proto_ff::MultEffectParamProto* BuffBagInfo::mutable_eparam() {
  set_has_eparam();
  if (eparam_ == NULL) eparam_ = new ::proto_ff::MultEffectParamProto;
  return eparam_;
}
inline ::proto_ff::MultEffectParamProto* BuffBagInfo::release_eparam() {
  clear_has_eparam();
  ::proto_ff::MultEffectParamProto* temp = eparam_;
  eparam_ = NULL;
  return temp;
}
inline void BuffBagInfo::set_allocated_eparam(::proto_ff::MultEffectParamProto* eparam) {
  delete eparam_;
  eparam_ = eparam;
  if (eparam) {
    set_has_eparam();
  } else {
    clear_has_eparam();
  }
}

// -------------------------------------------------------------------

// CharacterBuffData

// repeated .proto_ff.BuffBagInfo delayedBag = 1;
inline int CharacterBuffData::delayedbag_size() const {
  return delayedbag_.size();
}
inline void CharacterBuffData::clear_delayedbag() {
  delayedbag_.Clear();
}
inline const ::proto_ff::BuffBagInfo& CharacterBuffData::delayedbag(int index) const {
  return delayedbag_.Get(index);
}
inline ::proto_ff::BuffBagInfo* CharacterBuffData::mutable_delayedbag(int index) {
  return delayedbag_.Mutable(index);
}
inline ::proto_ff::BuffBagInfo* CharacterBuffData::add_delayedbag() {
  return delayedbag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >&
CharacterBuffData::delayedbag() const {
  return delayedbag_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >*
CharacterBuffData::mutable_delayedbag() {
  return &delayedbag_;
}

// repeated .proto_ff.BuffBagInfo buffbagLst = 2;
inline int CharacterBuffData::buffbaglst_size() const {
  return buffbaglst_.size();
}
inline void CharacterBuffData::clear_buffbaglst() {
  buffbaglst_.Clear();
}
inline const ::proto_ff::BuffBagInfo& CharacterBuffData::buffbaglst(int index) const {
  return buffbaglst_.Get(index);
}
inline ::proto_ff::BuffBagInfo* CharacterBuffData::mutable_buffbaglst(int index) {
  return buffbaglst_.Mutable(index);
}
inline ::proto_ff::BuffBagInfo* CharacterBuffData::add_buffbaglst() {
  return buffbaglst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >&
CharacterBuffData::buffbaglst() const {
  return buffbaglst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffBagInfo >*
CharacterBuffData::mutable_buffbaglst() {
  return &buffbaglst_;
}

// -------------------------------------------------------------------

// CharacterArenaData

// optional uint32 challengeTimes = 1;
inline bool CharacterArenaData::has_challengetimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterArenaData::set_has_challengetimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterArenaData::clear_has_challengetimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterArenaData::clear_challengetimes() {
  challengetimes_ = 0u;
  clear_has_challengetimes();
}
inline ::google::protobuf::uint32 CharacterArenaData::challengetimes() const {
  return challengetimes_;
}
inline void CharacterArenaData::set_challengetimes(::google::protobuf::uint32 value) {
  set_has_challengetimes();
  challengetimes_ = value;
}

// optional uint64 updateTime = 2;
inline bool CharacterArenaData::has_updatetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterArenaData::set_has_updatetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterArenaData::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterArenaData::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 CharacterArenaData::updatetime() const {
  return updatetime_;
}
inline void CharacterArenaData::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
}

// optional uint32 historyRankId = 3 [default = 5001];
inline bool CharacterArenaData::has_historyrankid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterArenaData::set_has_historyrankid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterArenaData::clear_has_historyrankid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterArenaData::clear_historyrankid() {
  historyrankid_ = 5001u;
  clear_has_historyrankid();
}
inline ::google::protobuf::uint32 CharacterArenaData::historyrankid() const {
  return historyrankid_;
}
inline void CharacterArenaData::set_historyrankid(::google::protobuf::uint32 value) {
  set_has_historyrankid();
  historyrankid_ = value;
}

// optional uint32 buyChallengeTimes = 4;
inline bool CharacterArenaData::has_buychallengetimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterArenaData::set_has_buychallengetimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterArenaData::clear_has_buychallengetimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterArenaData::clear_buychallengetimes() {
  buychallengetimes_ = 0u;
  clear_has_buychallengetimes();
}
inline ::google::protobuf::uint32 CharacterArenaData::buychallengetimes() const {
  return buychallengetimes_;
}
inline void CharacterArenaData::set_buychallengetimes(::google::protobuf::uint32 value) {
  set_has_buychallengetimes();
  buychallengetimes_ = value;
}

// -------------------------------------------------------------------

// CharacterTitleInfo

// optional uint64 id = 1;
inline bool CharacterTitleInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterTitleInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterTitleInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterTitleInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CharacterTitleInfo::id() const {
  return id_;
}
inline void CharacterTitleInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 param = 2;
inline bool CharacterTitleInfo::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterTitleInfo::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterTitleInfo::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterTitleInfo::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 CharacterTitleInfo::param() const {
  return param_;
}
inline void CharacterTitleInfo::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// optional uint64 startTime = 3;
inline bool CharacterTitleInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterTitleInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterTitleInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterTitleInfo::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 CharacterTitleInfo::starttime() const {
  return starttime_;
}
inline void CharacterTitleInfo::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional string name = 4;
inline bool CharacterTitleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterTitleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterTitleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterTitleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CharacterTitleInfo::name() const {
  return *name_;
}
inline void CharacterTitleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharacterTitleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharacterTitleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterTitleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CharacterTitleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterTitleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CharacterTitleSaveData

// repeated .proto_ff.CharacterTitleInfo titelData = 1;
inline int CharacterTitleSaveData::titeldata_size() const {
  return titeldata_.size();
}
inline void CharacterTitleSaveData::clear_titeldata() {
  titeldata_.Clear();
}
inline const ::proto_ff::CharacterTitleInfo& CharacterTitleSaveData::titeldata(int index) const {
  return titeldata_.Get(index);
}
inline ::proto_ff::CharacterTitleInfo* CharacterTitleSaveData::mutable_titeldata(int index) {
  return titeldata_.Mutable(index);
}
inline ::proto_ff::CharacterTitleInfo* CharacterTitleSaveData::add_titeldata() {
  return titeldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterTitleInfo >&
CharacterTitleSaveData::titeldata() const {
  return titeldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterTitleInfo >*
CharacterTitleSaveData::mutable_titeldata() {
  return &titeldata_;
}

// -------------------------------------------------------------------

// CharacterDBSingleOperateLimitInfo

// optional uint32 type = 1;
inline bool CharacterDBSingleOperateLimitInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBSingleOperateLimitInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBSingleOperateLimitInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBSingleOperateLimitInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CharacterDBSingleOperateLimitInfo::type() const {
  return type_;
}
inline void CharacterDBSingleOperateLimitInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 value = 2;
inline bool CharacterDBSingleOperateLimitInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBSingleOperateLimitInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBSingleOperateLimitInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBSingleOperateLimitInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CharacterDBSingleOperateLimitInfo::value() const {
  return value_;
}
inline void CharacterDBSingleOperateLimitInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 lastTime = 3;
inline bool CharacterDBSingleOperateLimitInfo::has_lasttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBSingleOperateLimitInfo::set_has_lasttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBSingleOperateLimitInfo::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBSingleOperateLimitInfo::clear_lasttime() {
  lasttime_ = 0u;
  clear_has_lasttime();
}
inline ::google::protobuf::uint32 CharacterDBSingleOperateLimitInfo::lasttime() const {
  return lasttime_;
}
inline void CharacterDBSingleOperateLimitInfo::set_lasttime(::google::protobuf::uint32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// CharacterDBOperateProto

// optional uint32 id = 1;
inline bool CharacterDBOperateProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBOperateProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBOperateProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBOperateProto::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CharacterDBOperateProto::id() const {
  return id_;
}
inline void CharacterDBOperateProto::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 num = 2;
inline bool CharacterDBOperateProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBOperateProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBOperateProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBOperateProto::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::uint64 CharacterDBOperateProto::num() const {
  return num_;
}
inline void CharacterDBOperateProto::set_num(::google::protobuf::uint64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBOperateMutProto

// repeated .proto_ff.CharacterDBOperateProto operate_lst = 1;
inline int CharacterDBOperateMutProto::operate_lst_size() const {
  return operate_lst_.size();
}
inline void CharacterDBOperateMutProto::clear_operate_lst() {
  operate_lst_.Clear();
}
inline const ::proto_ff::CharacterDBOperateProto& CharacterDBOperateMutProto::operate_lst(int index) const {
  return operate_lst_.Get(index);
}
inline ::proto_ff::CharacterDBOperateProto* CharacterDBOperateMutProto::mutable_operate_lst(int index) {
  return operate_lst_.Mutable(index);
}
inline ::proto_ff::CharacterDBOperateProto* CharacterDBOperateMutProto::add_operate_lst() {
  return operate_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOperateProto >&
CharacterDBOperateMutProto::operate_lst() const {
  return operate_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOperateProto >*
CharacterDBOperateMutProto::mutable_operate_lst() {
  return &operate_lst_;
}

// -------------------------------------------------------------------

// CharacterDBOperateInfo

// optional .proto_ff.CharacterDBOperateMutProto kill_mons = 1;
inline bool CharacterDBOperateInfo::has_kill_mons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBOperateInfo::set_has_kill_mons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBOperateInfo::clear_has_kill_mons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBOperateInfo::clear_kill_mons() {
  if (kill_mons_ != NULL) kill_mons_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_kill_mons();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::kill_mons() const {
  return kill_mons_ != NULL ? *kill_mons_ : *default_instance_->kill_mons_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_kill_mons() {
  set_has_kill_mons();
  if (kill_mons_ == NULL) kill_mons_ = new ::proto_ff::CharacterDBOperateMutProto;
  return kill_mons_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_kill_mons() {
  clear_has_kill_mons();
  ::proto_ff::CharacterDBOperateMutProto* temp = kill_mons_;
  kill_mons_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_kill_mons(::proto_ff::CharacterDBOperateMutProto* kill_mons) {
  delete kill_mons_;
  kill_mons_ = kill_mons;
  if (kill_mons) {
    set_has_kill_mons();
  } else {
    clear_has_kill_mons();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto last_kill_mons = 2;
inline bool CharacterDBOperateInfo::has_last_kill_mons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBOperateInfo::set_has_last_kill_mons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBOperateInfo::clear_has_last_kill_mons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBOperateInfo::clear_last_kill_mons() {
  if (last_kill_mons_ != NULL) last_kill_mons_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_last_kill_mons();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::last_kill_mons() const {
  return last_kill_mons_ != NULL ? *last_kill_mons_ : *default_instance_->last_kill_mons_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_last_kill_mons() {
  set_has_last_kill_mons();
  if (last_kill_mons_ == NULL) last_kill_mons_ = new ::proto_ff::CharacterDBOperateMutProto;
  return last_kill_mons_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_last_kill_mons() {
  clear_has_last_kill_mons();
  ::proto_ff::CharacterDBOperateMutProto* temp = last_kill_mons_;
  last_kill_mons_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_last_kill_mons(::proto_ff::CharacterDBOperateMutProto* last_kill_mons) {
  delete last_kill_mons_;
  last_kill_mons_ = last_kill_mons;
  if (last_kill_mons) {
    set_has_last_kill_mons();
  } else {
    clear_has_last_kill_mons();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto attend_act = 3;
inline bool CharacterDBOperateInfo::has_attend_act() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBOperateInfo::set_has_attend_act() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBOperateInfo::clear_has_attend_act() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBOperateInfo::clear_attend_act() {
  if (attend_act_ != NULL) attend_act_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_attend_act();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::attend_act() const {
  return attend_act_ != NULL ? *attend_act_ : *default_instance_->attend_act_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_attend_act() {
  set_has_attend_act();
  if (attend_act_ == NULL) attend_act_ = new ::proto_ff::CharacterDBOperateMutProto;
  return attend_act_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_attend_act() {
  clear_has_attend_act();
  ::proto_ff::CharacterDBOperateMutProto* temp = attend_act_;
  attend_act_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_attend_act(::proto_ff::CharacterDBOperateMutProto* attend_act) {
  delete attend_act_;
  attend_act_ = attend_act;
  if (attend_act) {
    set_has_attend_act();
  } else {
    clear_has_attend_act();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto last_attend_act = 4;
inline bool CharacterDBOperateInfo::has_last_attend_act() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBOperateInfo::set_has_last_attend_act() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBOperateInfo::clear_has_last_attend_act() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBOperateInfo::clear_last_attend_act() {
  if (last_attend_act_ != NULL) last_attend_act_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_last_attend_act();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::last_attend_act() const {
  return last_attend_act_ != NULL ? *last_attend_act_ : *default_instance_->last_attend_act_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_last_attend_act() {
  set_has_last_attend_act();
  if (last_attend_act_ == NULL) last_attend_act_ = new ::proto_ff::CharacterDBOperateMutProto;
  return last_attend_act_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_last_attend_act() {
  clear_has_last_attend_act();
  ::proto_ff::CharacterDBOperateMutProto* temp = last_attend_act_;
  last_attend_act_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_last_attend_act(::proto_ff::CharacterDBOperateMutProto* last_attend_act) {
  delete last_attend_act_;
  last_attend_act_ = last_attend_act;
  if (last_attend_act) {
    set_has_last_attend_act();
  } else {
    clear_has_last_attend_act();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto finish_act = 5;
inline bool CharacterDBOperateInfo::has_finish_act() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBOperateInfo::set_has_finish_act() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBOperateInfo::clear_has_finish_act() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBOperateInfo::clear_finish_act() {
  if (finish_act_ != NULL) finish_act_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_finish_act();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::finish_act() const {
  return finish_act_ != NULL ? *finish_act_ : *default_instance_->finish_act_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_finish_act() {
  set_has_finish_act();
  if (finish_act_ == NULL) finish_act_ = new ::proto_ff::CharacterDBOperateMutProto;
  return finish_act_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_finish_act() {
  clear_has_finish_act();
  ::proto_ff::CharacterDBOperateMutProto* temp = finish_act_;
  finish_act_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_finish_act(::proto_ff::CharacterDBOperateMutProto* finish_act) {
  delete finish_act_;
  finish_act_ = finish_act;
  if (finish_act) {
    set_has_finish_act();
  } else {
    clear_has_finish_act();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto pass_dup = 6;
inline bool CharacterDBOperateInfo::has_pass_dup() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBOperateInfo::set_has_pass_dup() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBOperateInfo::clear_has_pass_dup() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBOperateInfo::clear_pass_dup() {
  if (pass_dup_ != NULL) pass_dup_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_pass_dup();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::pass_dup() const {
  return pass_dup_ != NULL ? *pass_dup_ : *default_instance_->pass_dup_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_pass_dup() {
  set_has_pass_dup();
  if (pass_dup_ == NULL) pass_dup_ = new ::proto_ff::CharacterDBOperateMutProto;
  return pass_dup_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_pass_dup() {
  clear_has_pass_dup();
  ::proto_ff::CharacterDBOperateMutProto* temp = pass_dup_;
  pass_dup_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_pass_dup(::proto_ff::CharacterDBOperateMutProto* pass_dup) {
  delete pass_dup_;
  pass_dup_ = pass_dup;
  if (pass_dup) {
    set_has_pass_dup();
  } else {
    clear_has_pass_dup();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto coll_action = 7;
inline bool CharacterDBOperateInfo::has_coll_action() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBOperateInfo::set_has_coll_action() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBOperateInfo::clear_has_coll_action() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBOperateInfo::clear_coll_action() {
  if (coll_action_ != NULL) coll_action_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_coll_action();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::coll_action() const {
  return coll_action_ != NULL ? *coll_action_ : *default_instance_->coll_action_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_coll_action() {
  set_has_coll_action();
  if (coll_action_ == NULL) coll_action_ = new ::proto_ff::CharacterDBOperateMutProto;
  return coll_action_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_coll_action() {
  clear_has_coll_action();
  ::proto_ff::CharacterDBOperateMutProto* temp = coll_action_;
  coll_action_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_coll_action(::proto_ff::CharacterDBOperateMutProto* coll_action) {
  delete coll_action_;
  coll_action_ = coll_action;
  if (coll_action) {
    set_has_coll_action();
  } else {
    clear_has_coll_action();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto make_action = 8;
inline bool CharacterDBOperateInfo::has_make_action() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBOperateInfo::set_has_make_action() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBOperateInfo::clear_has_make_action() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBOperateInfo::clear_make_action() {
  if (make_action_ != NULL) make_action_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_make_action();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::make_action() const {
  return make_action_ != NULL ? *make_action_ : *default_instance_->make_action_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_make_action() {
  set_has_make_action();
  if (make_action_ == NULL) make_action_ = new ::proto_ff::CharacterDBOperateMutProto;
  return make_action_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_make_action() {
  clear_has_make_action();
  ::proto_ff::CharacterDBOperateMutProto* temp = make_action_;
  make_action_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_make_action(::proto_ff::CharacterDBOperateMutProto* make_action) {
  delete make_action_;
  make_action_ = make_action;
  if (make_action) {
    set_has_make_action();
  } else {
    clear_has_make_action();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto collect = 9;
inline bool CharacterDBOperateInfo::has_collect() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBOperateInfo::set_has_collect() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBOperateInfo::clear_has_collect() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBOperateInfo::clear_collect() {
  if (collect_ != NULL) collect_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_collect();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::collect() const {
  return collect_ != NULL ? *collect_ : *default_instance_->collect_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_collect() {
  set_has_collect();
  if (collect_ == NULL) collect_ = new ::proto_ff::CharacterDBOperateMutProto;
  return collect_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_collect() {
  clear_has_collect();
  ::proto_ff::CharacterDBOperateMutProto* temp = collect_;
  collect_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_collect(::proto_ff::CharacterDBOperateMutProto* collect) {
  delete collect_;
  collect_ = collect;
  if (collect) {
    set_has_collect();
  } else {
    clear_has_collect();
  }
}

// optional .proto_ff.CharacterDBOperateMutProto make = 10;
inline bool CharacterDBOperateInfo::has_make() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterDBOperateInfo::set_has_make() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterDBOperateInfo::clear_has_make() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterDBOperateInfo::clear_make() {
  if (make_ != NULL) make_->::proto_ff::CharacterDBOperateMutProto::Clear();
  clear_has_make();
}
inline const ::proto_ff::CharacterDBOperateMutProto& CharacterDBOperateInfo::make() const {
  return make_ != NULL ? *make_ : *default_instance_->make_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::mutable_make() {
  set_has_make();
  if (make_ == NULL) make_ = new ::proto_ff::CharacterDBOperateMutProto;
  return make_;
}
inline ::proto_ff::CharacterDBOperateMutProto* CharacterDBOperateInfo::release_make() {
  clear_has_make();
  ::proto_ff::CharacterDBOperateMutProto* temp = make_;
  make_ = NULL;
  return temp;
}
inline void CharacterDBOperateInfo::set_allocated_make(::proto_ff::CharacterDBOperateMutProto* make) {
  delete make_;
  make_ = make;
  if (make) {
    set_has_make();
  } else {
    clear_has_make();
  }
}

// optional uint64 make_gold_quip = 11;
inline bool CharacterDBOperateInfo::has_make_gold_quip() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterDBOperateInfo::set_has_make_gold_quip() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterDBOperateInfo::clear_has_make_gold_quip() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterDBOperateInfo::clear_make_gold_quip() {
  make_gold_quip_ = GOOGLE_ULONGLONG(0);
  clear_has_make_gold_quip();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::make_gold_quip() const {
  return make_gold_quip_;
}
inline void CharacterDBOperateInfo::set_make_gold_quip(::google::protobuf::uint64 value) {
  set_has_make_gold_quip();
  make_gold_quip_ = value;
}

// optional uint64 identify = 12;
inline bool CharacterDBOperateInfo::has_identify() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterDBOperateInfo::set_has_identify() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterDBOperateInfo::clear_has_identify() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterDBOperateInfo::clear_identify() {
  identify_ = GOOGLE_ULONGLONG(0);
  clear_has_identify();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::identify() const {
  return identify_;
}
inline void CharacterDBOperateInfo::set_identify(::google::protobuf::uint64 value) {
  set_has_identify();
  identify_ = value;
}

// optional uint64 arena_success = 13;
inline bool CharacterDBOperateInfo::has_arena_success() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_arena_success() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterDBOperateInfo::clear_has_arena_success() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterDBOperateInfo::clear_arena_success() {
  arena_success_ = GOOGLE_ULONGLONG(0);
  clear_has_arena_success();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::arena_success() const {
  return arena_success_;
}
inline void CharacterDBOperateInfo::set_arena_success(::google::protobuf::uint64 value) {
  set_has_arena_success();
  arena_success_ = value;
}

// optional uint64 die = 14;
inline bool CharacterDBOperateInfo::has_die() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_die() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterDBOperateInfo::clear_has_die() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterDBOperateInfo::clear_die() {
  die_ = GOOGLE_ULONGLONG(0);
  clear_has_die();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::die() const {
  return die_;
}
inline void CharacterDBOperateInfo::set_die(::google::protobuf::uint64 value) {
  set_has_die();
  die_ = value;
}

// optional uint64 kill_enemy = 15;
inline bool CharacterDBOperateInfo::has_kill_enemy() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_kill_enemy() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharacterDBOperateInfo::clear_has_kill_enemy() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharacterDBOperateInfo::clear_kill_enemy() {
  kill_enemy_ = GOOGLE_ULONGLONG(0);
  clear_has_kill_enemy();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::kill_enemy() const {
  return kill_enemy_;
}
inline void CharacterDBOperateInfo::set_kill_enemy(::google::protobuf::uint64 value) {
  set_has_kill_enemy();
  kill_enemy_ = value;
}

// optional uint64 kill_enemy_camp = 16;
inline bool CharacterDBOperateInfo::has_kill_enemy_camp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_kill_enemy_camp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CharacterDBOperateInfo::clear_has_kill_enemy_camp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CharacterDBOperateInfo::clear_kill_enemy_camp() {
  kill_enemy_camp_ = GOOGLE_ULONGLONG(0);
  clear_has_kill_enemy_camp();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::kill_enemy_camp() const {
  return kill_enemy_camp_;
}
inline void CharacterDBOperateInfo::set_kill_enemy_camp(::google::protobuf::uint64 value) {
  set_has_kill_enemy_camp();
  kill_enemy_camp_ = value;
}

// optional uint64 charge = 17;
inline bool CharacterDBOperateInfo::has_charge() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_charge() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharacterDBOperateInfo::clear_has_charge() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharacterDBOperateInfo::clear_charge() {
  charge_ = GOOGLE_ULONGLONG(0);
  clear_has_charge();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::charge() const {
  return charge_;
}
inline void CharacterDBOperateInfo::set_charge(::google::protobuf::uint64 value) {
  set_has_charge();
  charge_ = value;
}

// optional uint64 gold = 18;
inline bool CharacterDBOperateInfo::has_gold() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_gold() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharacterDBOperateInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharacterDBOperateInfo::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::gold() const {
  return gold_;
}
inline void CharacterDBOperateInfo::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint64 treasure = 19;
inline bool CharacterDBOperateInfo::has_treasure() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_treasure() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharacterDBOperateInfo::clear_has_treasure() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharacterDBOperateInfo::clear_treasure() {
  treasure_ = GOOGLE_ULONGLONG(0);
  clear_has_treasure();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::treasure() const {
  return treasure_;
}
inline void CharacterDBOperateInfo::set_treasure(::google::protobuf::uint64 value) {
  set_has_treasure();
  treasure_ = value;
}

// optional uint64 pandos_trans = 20;
inline bool CharacterDBOperateInfo::has_pandos_trans() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_pandos_trans() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharacterDBOperateInfo::clear_has_pandos_trans() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharacterDBOperateInfo::clear_pandos_trans() {
  pandos_trans_ = GOOGLE_ULONGLONG(0);
  clear_has_pandos_trans();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::pandos_trans() const {
  return pandos_trans_;
}
inline void CharacterDBOperateInfo::set_pandos_trans(::google::protobuf::uint64 value) {
  set_has_pandos_trans();
  pandos_trans_ = value;
}

// optional uint64 world_chat = 21;
inline bool CharacterDBOperateInfo::has_world_chat() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_world_chat() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CharacterDBOperateInfo::clear_has_world_chat() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CharacterDBOperateInfo::clear_world_chat() {
  world_chat_ = GOOGLE_ULONGLONG(0);
  clear_has_world_chat();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::world_chat() const {
  return world_chat_;
}
inline void CharacterDBOperateInfo::set_world_chat(::google::protobuf::uint64 value) {
  set_has_world_chat();
  world_chat_ = value;
}

// optional uint64 refine_success = 22;
inline bool CharacterDBOperateInfo::has_refine_success() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_refine_success() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CharacterDBOperateInfo::clear_has_refine_success() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CharacterDBOperateInfo::clear_refine_success() {
  refine_success_ = GOOGLE_ULONGLONG(0);
  clear_has_refine_success();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::refine_success() const {
  return refine_success_;
}
inline void CharacterDBOperateInfo::set_refine_success(::google::protobuf::uint64 value) {
  set_has_refine_success();
  refine_success_ = value;
}

// optional uint64 refine_fail = 23;
inline bool CharacterDBOperateInfo::has_refine_fail() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CharacterDBOperateInfo::set_has_refine_fail() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CharacterDBOperateInfo::clear_has_refine_fail() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CharacterDBOperateInfo::clear_refine_fail() {
  refine_fail_ = GOOGLE_ULONGLONG(0);
  clear_has_refine_fail();
}
inline ::google::protobuf::uint64 CharacterDBOperateInfo::refine_fail() const {
  return refine_fail_;
}
inline void CharacterDBOperateInfo::set_refine_fail(::google::protobuf::uint64 value) {
  set_has_refine_fail();
  refine_fail_ = value;
}

// -------------------------------------------------------------------

// CharacterDBOperateLimitInfo

// repeated .proto_ff.CharacterDBSingleOperateLimitInfo operateLimitInfo = 1;
inline int CharacterDBOperateLimitInfo::operatelimitinfo_size() const {
  return operatelimitinfo_.size();
}
inline void CharacterDBOperateLimitInfo::clear_operatelimitinfo() {
  operatelimitinfo_.Clear();
}
inline const ::proto_ff::CharacterDBSingleOperateLimitInfo& CharacterDBOperateLimitInfo::operatelimitinfo(int index) const {
  return operatelimitinfo_.Get(index);
}
inline ::proto_ff::CharacterDBSingleOperateLimitInfo* CharacterDBOperateLimitInfo::mutable_operatelimitinfo(int index) {
  return operatelimitinfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBSingleOperateLimitInfo* CharacterDBOperateLimitInfo::add_operatelimitinfo() {
  return operatelimitinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleOperateLimitInfo >&
CharacterDBOperateLimitInfo::operatelimitinfo() const {
  return operatelimitinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleOperateLimitInfo >*
CharacterDBOperateLimitInfo::mutable_operatelimitinfo() {
  return &operatelimitinfo_;
}

// optional .proto_ff.CharacterDBOperateInfo operate_data = 2;
inline bool CharacterDBOperateLimitInfo::has_operate_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBOperateLimitInfo::set_has_operate_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBOperateLimitInfo::clear_has_operate_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBOperateLimitInfo::clear_operate_data() {
  if (operate_data_ != NULL) operate_data_->::proto_ff::CharacterDBOperateInfo::Clear();
  clear_has_operate_data();
}
inline const ::proto_ff::CharacterDBOperateInfo& CharacterDBOperateLimitInfo::operate_data() const {
  return operate_data_ != NULL ? *operate_data_ : *default_instance_->operate_data_;
}
inline ::proto_ff::CharacterDBOperateInfo* CharacterDBOperateLimitInfo::mutable_operate_data() {
  set_has_operate_data();
  if (operate_data_ == NULL) operate_data_ = new ::proto_ff::CharacterDBOperateInfo;
  return operate_data_;
}
inline ::proto_ff::CharacterDBOperateInfo* CharacterDBOperateLimitInfo::release_operate_data() {
  clear_has_operate_data();
  ::proto_ff::CharacterDBOperateInfo* temp = operate_data_;
  operate_data_ = NULL;
  return temp;
}
inline void CharacterDBOperateLimitInfo::set_allocated_operate_data(::proto_ff::CharacterDBOperateInfo* operate_data) {
  delete operate_data_;
  operate_data_ = operate_data;
  if (operate_data) {
    set_has_operate_data();
  } else {
    clear_has_operate_data();
  }
}

// -------------------------------------------------------------------

// CharacterDBSingleHuoYueDuInfoInfo

// optional uint32 type = 1;
inline bool CharacterDBSingleHuoYueDuInfoInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CharacterDBSingleHuoYueDuInfoInfo::type() const {
  return type_;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 value = 2;
inline bool CharacterDBSingleHuoYueDuInfoInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CharacterDBSingleHuoYueDuInfoInfo::value() const {
  return value_;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 time = 3;
inline bool CharacterDBSingleHuoYueDuInfoInfo::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CharacterDBSingleHuoYueDuInfoInfo::time() const {
  return time_;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 sin_process = 4;
inline bool CharacterDBSingleHuoYueDuInfoInfo::has_sin_process() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_has_sin_process() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_has_sin_process() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::clear_sin_process() {
  sin_process_ = 0u;
  clear_has_sin_process();
}
inline ::google::protobuf::uint32 CharacterDBSingleHuoYueDuInfoInfo::sin_process() const {
  return sin_process_;
}
inline void CharacterDBSingleHuoYueDuInfoInfo::set_sin_process(::google::protobuf::uint32 value) {
  set_has_sin_process();
  sin_process_ = value;
}

// -------------------------------------------------------------------

// CharacterDBHuoYueDuInfo

// repeated .proto_ff.CharacterDBSingleHuoYueDuInfoInfo huoYueDuInfo = 1;
inline int CharacterDBHuoYueDuInfo::huoyueduinfo_size() const {
  return huoyueduinfo_.size();
}
inline void CharacterDBHuoYueDuInfo::clear_huoyueduinfo() {
  huoyueduinfo_.Clear();
}
inline const ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo& CharacterDBHuoYueDuInfo::huoyueduinfo(int index) const {
  return huoyueduinfo_.Get(index);
}
inline ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo* CharacterDBHuoYueDuInfo::mutable_huoyueduinfo(int index) {
  return huoyueduinfo_.Mutable(index);
}
inline ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo* CharacterDBHuoYueDuInfo::add_huoyueduinfo() {
  return huoyueduinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo >&
CharacterDBHuoYueDuInfo::huoyueduinfo() const {
  return huoyueduinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBSingleHuoYueDuInfoInfo >*
CharacterDBHuoYueDuInfo::mutable_huoyueduinfo() {
  return &huoyueduinfo_;
}

// -------------------------------------------------------------------

// IndultTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool IndultTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndultTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndultTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndultTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 IndultTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void IndultTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool IndultTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndultTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndultTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndultTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 IndultTaskEntry::cur_num() const {
  return cur_num_;
}
inline void IndultTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool IndultTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndultTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndultTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndultTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 IndultTaskEntry::task_state() const {
  return task_state_;
}
inline void IndultTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// -------------------------------------------------------------------

// IndultTaskGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool IndultTaskGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndultTaskGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndultTaskGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndultTaskGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 IndultTaskGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void IndultTaskGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// repeated .proto_ff.IndultTaskEntry entrys = 2;
inline int IndultTaskGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void IndultTaskGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::IndultTaskEntry& IndultTaskGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::IndultTaskEntry* IndultTaskGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::IndultTaskEntry* IndultTaskGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskEntry >&
IndultTaskGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskEntry >*
IndultTaskGroupEntry::mutable_entrys() {
  return &entrys_;
}

// optional int32 normal_reward_state = 3;
inline bool IndultTaskGroupEntry::has_normal_reward_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndultTaskGroupEntry::set_has_normal_reward_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndultTaskGroupEntry::clear_has_normal_reward_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndultTaskGroupEntry::clear_normal_reward_state() {
  normal_reward_state_ = 0;
  clear_has_normal_reward_state();
}
inline ::google::protobuf::int32 IndultTaskGroupEntry::normal_reward_state() const {
  return normal_reward_state_;
}
inline void IndultTaskGroupEntry::set_normal_reward_state(::google::protobuf::int32 value) {
  set_has_normal_reward_state();
  normal_reward_state_ = value;
}

// -------------------------------------------------------------------

// ColPointsTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool ColPointsTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColPointsTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColPointsTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColPointsTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 ColPointsTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void ColPointsTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool ColPointsTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColPointsTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColPointsTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColPointsTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 ColPointsTaskEntry::cur_num() const {
  return cur_num_;
}
inline void ColPointsTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool ColPointsTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColPointsTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColPointsTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColPointsTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 ColPointsTaskEntry::task_state() const {
  return task_state_;
}
inline void ColPointsTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// -------------------------------------------------------------------

// ColPointsTaskGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool ColPointsTaskGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColPointsTaskGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColPointsTaskGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColPointsTaskGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 ColPointsTaskGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void ColPointsTaskGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// repeated .proto_ff.ColPointsTaskEntry entrys = 2;
inline int ColPointsTaskGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void ColPointsTaskGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::ColPointsTaskEntry& ColPointsTaskGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::ColPointsTaskEntry* ColPointsTaskGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::ColPointsTaskEntry* ColPointsTaskGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ColPointsTaskEntry >&
ColPointsTaskGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ColPointsTaskEntry >*
ColPointsTaskGroupEntry::mutable_entrys() {
  return &entrys_;
}

// optional int32 normal_reward_state = 3;
inline bool ColPointsTaskGroupEntry::has_normal_reward_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColPointsTaskGroupEntry::set_has_normal_reward_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColPointsTaskGroupEntry::clear_has_normal_reward_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColPointsTaskGroupEntry::clear_normal_reward_state() {
  normal_reward_state_ = 0;
  clear_has_normal_reward_state();
}
inline ::google::protobuf::int32 ColPointsTaskGroupEntry::normal_reward_state() const {
  return normal_reward_state_;
}
inline void ColPointsTaskGroupEntry::set_normal_reward_state(::google::protobuf::int32 value) {
  set_has_normal_reward_state();
  normal_reward_state_ = value;
}

// optional int32 cur_points = 4;
inline bool ColPointsTaskGroupEntry::has_cur_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ColPointsTaskGroupEntry::set_has_cur_points() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ColPointsTaskGroupEntry::clear_has_cur_points() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ColPointsTaskGroupEntry::clear_cur_points() {
  cur_points_ = 0;
  clear_has_cur_points();
}
inline ::google::protobuf::int32 ColPointsTaskGroupEntry::cur_points() const {
  return cur_points_;
}
inline void ColPointsTaskGroupEntry::set_cur_points(::google::protobuf::int32 value) {
  set_has_cur_points();
  cur_points_ = value;
}

// optional uint64 create_time = 5;
inline bool ColPointsTaskGroupEntry::has_create_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ColPointsTaskGroupEntry::set_has_create_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ColPointsTaskGroupEntry::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ColPointsTaskGroupEntry::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 ColPointsTaskGroupEntry::create_time() const {
  return create_time_;
}
inline void ColPointsTaskGroupEntry::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// -------------------------------------------------------------------

// ColPointsTaskData

// optional .proto_ff.ColPointsTaskGroupEntry data = 1;
inline bool ColPointsTaskData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColPointsTaskData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColPointsTaskData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColPointsTaskData::clear_data() {
  if (data_ != NULL) data_->::proto_ff::ColPointsTaskGroupEntry::Clear();
  clear_has_data();
}
inline const ::proto_ff::ColPointsTaskGroupEntry& ColPointsTaskData::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::ColPointsTaskGroupEntry* ColPointsTaskData::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::ColPointsTaskGroupEntry;
  return data_;
}
inline ::proto_ff::ColPointsTaskGroupEntry* ColPointsTaskData::release_data() {
  clear_has_data();
  ::proto_ff::ColPointsTaskGroupEntry* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ColPointsTaskData::set_allocated_data(::proto_ff::ColPointsTaskGroupEntry* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// optional uint64 last_refresh_time = 2;
inline bool ColPointsTaskData::has_last_refresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColPointsTaskData::set_has_last_refresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColPointsTaskData::clear_has_last_refresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColPointsTaskData::clear_last_refresh_time() {
  last_refresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_refresh_time();
}
inline ::google::protobuf::uint64 ColPointsTaskData::last_refresh_time() const {
  return last_refresh_time_;
}
inline void ColPointsTaskData::set_last_refresh_time(::google::protobuf::uint64 value) {
  set_has_last_refresh_time();
  last_refresh_time_ = value;
}

// optional uint64 online_time = 3;
inline bool ColPointsTaskData::has_online_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColPointsTaskData::set_has_online_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColPointsTaskData::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColPointsTaskData::clear_online_time() {
  online_time_ = GOOGLE_ULONGLONG(0);
  clear_has_online_time();
}
inline ::google::protobuf::uint64 ColPointsTaskData::online_time() const {
  return online_time_;
}
inline void ColPointsTaskData::set_online_time(::google::protobuf::uint64 value) {
  set_has_online_time();
  online_time_ = value;
}

// -------------------------------------------------------------------

// WelfareDailySignInDBData

// optional uint64 id = 1;
inline bool WelfareDailySignInDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareDailySignInDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareDailySignInDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareDailySignInDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WelfareDailySignInDBData::id() const {
  return id_;
}
inline void WelfareDailySignInDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 dayIndex = 2;
inline bool WelfareDailySignInDBData::has_dayindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareDailySignInDBData::set_has_dayindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareDailySignInDBData::clear_has_dayindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareDailySignInDBData::clear_dayindex() {
  dayindex_ = 0u;
  clear_has_dayindex();
}
inline ::google::protobuf::uint32 WelfareDailySignInDBData::dayindex() const {
  return dayindex_;
}
inline void WelfareDailySignInDBData::set_dayindex(::google::protobuf::uint32 value) {
  set_has_dayindex();
  dayindex_ = value;
}

// optional uint32 nState = 3;
inline bool WelfareDailySignInDBData::has_nstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareDailySignInDBData::set_has_nstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareDailySignInDBData::clear_has_nstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareDailySignInDBData::clear_nstate() {
  nstate_ = 0u;
  clear_has_nstate();
}
inline ::google::protobuf::uint32 WelfareDailySignInDBData::nstate() const {
  return nstate_;
}
inline void WelfareDailySignInDBData::set_nstate(::google::protobuf::uint32 value) {
  set_has_nstate();
  nstate_ = value;
}

// optional uint64 lastResetTime = 4;
inline bool WelfareDailySignInDBData::has_lastresettime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WelfareDailySignInDBData::set_has_lastresettime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WelfareDailySignInDBData::clear_has_lastresettime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WelfareDailySignInDBData::clear_lastresettime() {
  lastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastresettime();
}
inline ::google::protobuf::uint64 WelfareDailySignInDBData::lastresettime() const {
  return lastresettime_;
}
inline void WelfareDailySignInDBData::set_lastresettime(::google::protobuf::uint64 value) {
  set_has_lastresettime();
  lastresettime_ = value;
}

// optional bool bRecharge = 5;
inline bool WelfareDailySignInDBData::has_brecharge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WelfareDailySignInDBData::set_has_brecharge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WelfareDailySignInDBData::clear_has_brecharge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WelfareDailySignInDBData::clear_brecharge() {
  brecharge_ = false;
  clear_has_brecharge();
}
inline bool WelfareDailySignInDBData::brecharge() const {
  return brecharge_;
}
inline void WelfareDailySignInDBData::set_brecharge(bool value) {
  set_has_brecharge();
  brecharge_ = value;
}

// -------------------------------------------------------------------

// WelfareLoginGiftDBData

// optional uint64 id = 1;
inline bool WelfareLoginGiftDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareLoginGiftDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareLoginGiftDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareLoginGiftDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WelfareLoginGiftDBData::id() const {
  return id_;
}
inline void WelfareLoginGiftDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 LoninCount = 2;
inline bool WelfareLoginGiftDBData::has_lonincount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareLoginGiftDBData::set_has_lonincount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareLoginGiftDBData::clear_has_lonincount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareLoginGiftDBData::clear_lonincount() {
  lonincount_ = 0u;
  clear_has_lonincount();
}
inline ::google::protobuf::uint32 WelfareLoginGiftDBData::lonincount() const {
  return lonincount_;
}
inline void WelfareLoginGiftDBData::set_lonincount(::google::protobuf::uint32 value) {
  set_has_lonincount();
  lonincount_ = value;
}

// optional uint64 lastResetTime = 3;
inline bool WelfareLoginGiftDBData::has_lastresettime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareLoginGiftDBData::set_has_lastresettime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareLoginGiftDBData::clear_has_lastresettime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareLoginGiftDBData::clear_lastresettime() {
  lastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastresettime();
}
inline ::google::protobuf::uint64 WelfareLoginGiftDBData::lastresettime() const {
  return lastresettime_;
}
inline void WelfareLoginGiftDBData::set_lastresettime(::google::protobuf::uint64 value) {
  set_has_lastresettime();
  lastresettime_ = value;
}

// repeated .proto_ff.ComPair getState = 4;
inline int WelfareLoginGiftDBData::getstate_size() const {
  return getstate_.size();
}
inline void WelfareLoginGiftDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& WelfareLoginGiftDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* WelfareLoginGiftDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* WelfareLoginGiftDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
WelfareLoginGiftDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
WelfareLoginGiftDBData::mutable_getstate() {
  return &getstate_;
}

// optional uint32 nState = 5;
inline bool WelfareLoginGiftDBData::has_nstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WelfareLoginGiftDBData::set_has_nstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WelfareLoginGiftDBData::clear_has_nstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WelfareLoginGiftDBData::clear_nstate() {
  nstate_ = 0u;
  clear_has_nstate();
}
inline ::google::protobuf::uint32 WelfareLoginGiftDBData::nstate() const {
  return nstate_;
}
inline void WelfareLoginGiftDBData::set_nstate(::google::protobuf::uint32 value) {
  set_has_nstate();
  nstate_ = value;
}

// -------------------------------------------------------------------

// WelfareLevelGiftDBData

// optional uint64 id = 1;
inline bool WelfareLevelGiftDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareLevelGiftDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareLevelGiftDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareLevelGiftDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WelfareLevelGiftDBData::id() const {
  return id_;
}
inline void WelfareLevelGiftDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.ComPair getState = 2;
inline int WelfareLevelGiftDBData::getstate_size() const {
  return getstate_.size();
}
inline void WelfareLevelGiftDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& WelfareLevelGiftDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* WelfareLevelGiftDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* WelfareLevelGiftDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
WelfareLevelGiftDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
WelfareLevelGiftDBData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// CommodityEntry

// optional uint64 commodity_id = 1;
inline bool CommodityEntry::has_commodity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommodityEntry::set_has_commodity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommodityEntry::clear_has_commodity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommodityEntry::clear_commodity_id() {
  commodity_id_ = GOOGLE_ULONGLONG(0);
  clear_has_commodity_id();
}
inline ::google::protobuf::uint64 CommodityEntry::commodity_id() const {
  return commodity_id_;
}
inline void CommodityEntry::set_commodity_id(::google::protobuf::uint64 value) {
  set_has_commodity_id();
  commodity_id_ = value;
}

// optional int32 cur_buy_num = 2;
inline bool CommodityEntry::has_cur_buy_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommodityEntry::set_has_cur_buy_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommodityEntry::clear_has_cur_buy_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommodityEntry::clear_cur_buy_num() {
  cur_buy_num_ = 0;
  clear_has_cur_buy_num();
}
inline ::google::protobuf::int32 CommodityEntry::cur_buy_num() const {
  return cur_buy_num_;
}
inline void CommodityEntry::set_cur_buy_num(::google::protobuf::int32 value) {
  set_has_cur_buy_num();
  cur_buy_num_ = value;
}

// -------------------------------------------------------------------

// LimitShopGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool LimitShopGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitShopGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitShopGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitShopGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 LimitShopGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void LimitShopGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// optional int32 open_time = 2;
inline bool LimitShopGroupEntry::has_open_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitShopGroupEntry::set_has_open_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitShopGroupEntry::clear_has_open_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitShopGroupEntry::clear_open_time() {
  open_time_ = 0;
  clear_has_open_time();
}
inline ::google::protobuf::int32 LimitShopGroupEntry::open_time() const {
  return open_time_;
}
inline void LimitShopGroupEntry::set_open_time(::google::protobuf::int32 value) {
  set_has_open_time();
  open_time_ = value;
}

// repeated .proto_ff.CommodityEntry entrys = 3;
inline int LimitShopGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void LimitShopGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::CommodityEntry& LimitShopGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::CommodityEntry* LimitShopGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::CommodityEntry* LimitShopGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CommodityEntry >&
LimitShopGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CommodityEntry >*
LimitShopGroupEntry::mutable_entrys() {
  return &entrys_;
}

// -------------------------------------------------------------------

// LimitShopData

// optional uint64 id = 1;
inline bool LimitShopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitShopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitShopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitShopData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 LimitShopData::id() const {
  return id_;
}
inline void LimitShopData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.LimitShopGroupEntry groups = 2;
inline int LimitShopData::groups_size() const {
  return groups_.size();
}
inline void LimitShopData::clear_groups() {
  groups_.Clear();
}
inline const ::proto_ff::LimitShopGroupEntry& LimitShopData::groups(int index) const {
  return groups_.Get(index);
}
inline ::proto_ff::LimitShopGroupEntry* LimitShopData::mutable_groups(int index) {
  return groups_.Mutable(index);
}
inline ::proto_ff::LimitShopGroupEntry* LimitShopData::add_groups() {
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopGroupEntry >&
LimitShopData::groups() const {
  return groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopGroupEntry >*
LimitShopData::mutable_groups() {
  return &groups_;
}

// -------------------------------------------------------------------

// LimitTaskEntry

// optional uint64 task_cfg_id = 1;
inline bool LimitTaskEntry::has_task_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitTaskEntry::set_has_task_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitTaskEntry::clear_has_task_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitTaskEntry::clear_task_cfg_id() {
  task_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_cfg_id();
}
inline ::google::protobuf::uint64 LimitTaskEntry::task_cfg_id() const {
  return task_cfg_id_;
}
inline void LimitTaskEntry::set_task_cfg_id(::google::protobuf::uint64 value) {
  set_has_task_cfg_id();
  task_cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool LimitTaskEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitTaskEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitTaskEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitTaskEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 LimitTaskEntry::cur_num() const {
  return cur_num_;
}
inline void LimitTaskEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 task_state = 3;
inline bool LimitTaskEntry::has_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LimitTaskEntry::set_has_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LimitTaskEntry::clear_has_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LimitTaskEntry::clear_task_state() {
  task_state_ = 0;
  clear_has_task_state();
}
inline ::google::protobuf::int32 LimitTaskEntry::task_state() const {
  return task_state_;
}
inline void LimitTaskEntry::set_task_state(::google::protobuf::int32 value) {
  set_has_task_state();
  task_state_ = value;
}

// -------------------------------------------------------------------

// LimitTaskGroupEntry

// optional uint64 group_cfg_id = 1;
inline bool LimitTaskGroupEntry::has_group_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitTaskGroupEntry::set_has_group_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitTaskGroupEntry::clear_has_group_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitTaskGroupEntry::clear_group_cfg_id() {
  group_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_cfg_id();
}
inline ::google::protobuf::uint64 LimitTaskGroupEntry::group_cfg_id() const {
  return group_cfg_id_;
}
inline void LimitTaskGroupEntry::set_group_cfg_id(::google::protobuf::uint64 value) {
  set_has_group_cfg_id();
  group_cfg_id_ = value;
}

// optional int32 open_time = 2;
inline bool LimitTaskGroupEntry::has_open_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitTaskGroupEntry::set_has_open_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitTaskGroupEntry::clear_has_open_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitTaskGroupEntry::clear_open_time() {
  open_time_ = 0;
  clear_has_open_time();
}
inline ::google::protobuf::int32 LimitTaskGroupEntry::open_time() const {
  return open_time_;
}
inline void LimitTaskGroupEntry::set_open_time(::google::protobuf::int32 value) {
  set_has_open_time();
  open_time_ = value;
}

// repeated .proto_ff.LimitTaskEntry entrys = 3;
inline int LimitTaskGroupEntry::entrys_size() const {
  return entrys_.size();
}
inline void LimitTaskGroupEntry::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::LimitTaskEntry& LimitTaskGroupEntry::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::LimitTaskEntry* LimitTaskGroupEntry::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::LimitTaskEntry* LimitTaskGroupEntry::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskEntry >&
LimitTaskGroupEntry::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskEntry >*
LimitTaskGroupEntry::mutable_entrys() {
  return &entrys_;
}

// optional int32 normal_reward_state = 4;
inline bool LimitTaskGroupEntry::has_normal_reward_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LimitTaskGroupEntry::set_has_normal_reward_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LimitTaskGroupEntry::clear_has_normal_reward_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LimitTaskGroupEntry::clear_normal_reward_state() {
  normal_reward_state_ = 0;
  clear_has_normal_reward_state();
}
inline ::google::protobuf::int32 LimitTaskGroupEntry::normal_reward_state() const {
  return normal_reward_state_;
}
inline void LimitTaskGroupEntry::set_normal_reward_state(::google::protobuf::int32 value) {
  set_has_normal_reward_state();
  normal_reward_state_ = value;
}

// optional int32 senior_reward_state = 5;
inline bool LimitTaskGroupEntry::has_senior_reward_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LimitTaskGroupEntry::set_has_senior_reward_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LimitTaskGroupEntry::clear_has_senior_reward_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LimitTaskGroupEntry::clear_senior_reward_state() {
  senior_reward_state_ = 0;
  clear_has_senior_reward_state();
}
inline ::google::protobuf::int32 LimitTaskGroupEntry::senior_reward_state() const {
  return senior_reward_state_;
}
inline void LimitTaskGroupEntry::set_senior_reward_state(::google::protobuf::int32 value) {
  set_has_senior_reward_state();
  senior_reward_state_ = value;
}

// -------------------------------------------------------------------

// LimitTaskData

// optional uint64 id = 1;
inline bool LimitTaskData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitTaskData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitTaskData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitTaskData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 LimitTaskData::id() const {
  return id_;
}
inline void LimitTaskData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.LimitTaskGroupEntry groups = 2;
inline int LimitTaskData::groups_size() const {
  return groups_.size();
}
inline void LimitTaskData::clear_groups() {
  groups_.Clear();
}
inline const ::proto_ff::LimitTaskGroupEntry& LimitTaskData::groups(int index) const {
  return groups_.Get(index);
}
inline ::proto_ff::LimitTaskGroupEntry* LimitTaskData::mutable_groups(int index) {
  return groups_.Mutable(index);
}
inline ::proto_ff::LimitTaskGroupEntry* LimitTaskData::add_groups() {
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskGroupEntry >&
LimitTaskData::groups() const {
  return groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskGroupEntry >*
LimitTaskData::mutable_groups() {
  return &groups_;
}

// -------------------------------------------------------------------

// WishDBTypeEntry

// optional int32 wish_type = 1;
inline bool WishDBTypeEntry::has_wish_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WishDBTypeEntry::set_has_wish_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WishDBTypeEntry::clear_has_wish_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WishDBTypeEntry::clear_wish_type() {
  wish_type_ = 0;
  clear_has_wish_type();
}
inline ::google::protobuf::int32 WishDBTypeEntry::wish_type() const {
  return wish_type_;
}
inline void WishDBTypeEntry::set_wish_type(::google::protobuf::int32 value) {
  set_has_wish_type();
  wish_type_ = value;
}

// optional int32 wished_num = 2;
inline bool WishDBTypeEntry::has_wished_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WishDBTypeEntry::set_has_wished_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WishDBTypeEntry::clear_has_wished_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WishDBTypeEntry::clear_wished_num() {
  wished_num_ = 0;
  clear_has_wished_num();
}
inline ::google::protobuf::int32 WishDBTypeEntry::wished_num() const {
  return wished_num_;
}
inline void WishDBTypeEntry::set_wished_num(::google::protobuf::int32 value) {
  set_has_wished_num();
  wished_num_ = value;
}

// optional uint64 refresh_time = 3;
inline bool WishDBTypeEntry::has_refresh_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WishDBTypeEntry::set_has_refresh_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WishDBTypeEntry::clear_has_refresh_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WishDBTypeEntry::clear_refresh_time() {
  refresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_refresh_time();
}
inline ::google::protobuf::uint64 WishDBTypeEntry::refresh_time() const {
  return refresh_time_;
}
inline void WishDBTypeEntry::set_refresh_time(::google::protobuf::uint64 value) {
  set_has_refresh_time();
  refresh_time_ = value;
}

// optional uint64 last_time = 4;
inline bool WishDBTypeEntry::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WishDBTypeEntry::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WishDBTypeEntry::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WishDBTypeEntry::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 WishDBTypeEntry::last_time() const {
  return last_time_;
}
inline void WishDBTypeEntry::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// WishDBData

// optional uint64 id = 1;
inline bool WishDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WishDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WishDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WishDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WishDBData::id() const {
  return id_;
}
inline void WishDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.WishDBTypeEntry type_entry = 2;
inline int WishDBData::type_entry_size() const {
  return type_entry_.size();
}
inline void WishDBData::clear_type_entry() {
  type_entry_.Clear();
}
inline const ::proto_ff::WishDBTypeEntry& WishDBData::type_entry(int index) const {
  return type_entry_.Get(index);
}
inline ::proto_ff::WishDBTypeEntry* WishDBData::mutable_type_entry(int index) {
  return type_entry_.Mutable(index);
}
inline ::proto_ff::WishDBTypeEntry* WishDBData::add_type_entry() {
  return type_entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBTypeEntry >&
WishDBData::type_entry() const {
  return type_entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBTypeEntry >*
WishDBData::mutable_type_entry() {
  return &type_entry_;
}

// -------------------------------------------------------------------

// FestivalInvestDBData

// optional uint64 nActiveId = 1;
inline bool FestivalInvestDBData::has_nactiveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalInvestDBData::set_has_nactiveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalInvestDBData::clear_has_nactiveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalInvestDBData::clear_nactiveid() {
  nactiveid_ = GOOGLE_ULONGLONG(0);
  clear_has_nactiveid();
}
inline ::google::protobuf::uint64 FestivalInvestDBData::nactiveid() const {
  return nactiveid_;
}
inline void FestivalInvestDBData::set_nactiveid(::google::protobuf::uint64 value) {
  set_has_nactiveid();
  nactiveid_ = value;
}

// optional bool bInvest = 2;
inline bool FestivalInvestDBData::has_binvest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalInvestDBData::set_has_binvest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalInvestDBData::clear_has_binvest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalInvestDBData::clear_binvest() {
  binvest_ = false;
  clear_has_binvest();
}
inline bool FestivalInvestDBData::binvest() const {
  return binvest_;
}
inline void FestivalInvestDBData::set_binvest(bool value) {
  set_has_binvest();
  binvest_ = value;
}

// optional uint64 nLastResetTime = 3;
inline bool FestivalInvestDBData::has_nlastresettime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestivalInvestDBData::set_has_nlastresettime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestivalInvestDBData::clear_has_nlastresettime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestivalInvestDBData::clear_nlastresettime() {
  nlastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_nlastresettime();
}
inline ::google::protobuf::uint64 FestivalInvestDBData::nlastresettime() const {
  return nlastresettime_;
}
inline void FestivalInvestDBData::set_nlastresettime(::google::protobuf::uint64 value) {
  set_has_nlastresettime();
  nlastresettime_ = value;
}

// optional int32 nLoninCount = 4;
inline bool FestivalInvestDBData::has_nlonincount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestivalInvestDBData::set_has_nlonincount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestivalInvestDBData::clear_has_nlonincount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestivalInvestDBData::clear_nlonincount() {
  nlonincount_ = 0;
  clear_has_nlonincount();
}
inline ::google::protobuf::int32 FestivalInvestDBData::nlonincount() const {
  return nlonincount_;
}
inline void FestivalInvestDBData::set_nlonincount(::google::protobuf::int32 value) {
  set_has_nlonincount();
  nlonincount_ = value;
}

// repeated .proto_ff.ComPair getState = 5;
inline int FestivalInvestDBData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalInvestDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalInvestDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalInvestDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalInvestDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalInvestDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalInvestDBData::mutable_getstate() {
  return &getstate_;
}

// repeated .proto_ff.ComPair params = 6;
inline int FestivalInvestDBData::params_size() const {
  return params_.size();
}
inline void FestivalInvestDBData::clear_params() {
  params_.Clear();
}
inline const ::proto_ff::ComPair& FestivalInvestDBData::params(int index) const {
  return params_.Get(index);
}
inline ::proto_ff::ComPair* FestivalInvestDBData::mutable_params(int index) {
  return params_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalInvestDBData::add_params() {
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalInvestDBData::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalInvestDBData::mutable_params() {
  return &params_;
}

// optional int64 investTime = 7;
inline bool FestivalInvestDBData::has_investtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FestivalInvestDBData::set_has_investtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FestivalInvestDBData::clear_has_investtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FestivalInvestDBData::clear_investtime() {
  investtime_ = GOOGLE_LONGLONG(0);
  clear_has_investtime();
}
inline ::google::protobuf::int64 FestivalInvestDBData::investtime() const {
  return investtime_;
}
inline void FestivalInvestDBData::set_investtime(::google::protobuf::int64 value) {
  set_has_investtime();
  investtime_ = value;
}

// -------------------------------------------------------------------

// FestivalExchangeDBData

// optional uint64 nActiveId = 1;
inline bool FestivalExchangeDBData::has_nactiveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalExchangeDBData::set_has_nactiveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalExchangeDBData::clear_has_nactiveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalExchangeDBData::clear_nactiveid() {
  nactiveid_ = GOOGLE_ULONGLONG(0);
  clear_has_nactiveid();
}
inline ::google::protobuf::uint64 FestivalExchangeDBData::nactiveid() const {
  return nactiveid_;
}
inline void FestivalExchangeDBData::set_nactiveid(::google::protobuf::uint64 value) {
  set_has_nactiveid();
  nactiveid_ = value;
}

// repeated .proto_ff.ComPair exchangeCount = 2;
inline int FestivalExchangeDBData::exchangecount_size() const {
  return exchangecount_.size();
}
inline void FestivalExchangeDBData::clear_exchangecount() {
  exchangecount_.Clear();
}
inline const ::proto_ff::ComPair& FestivalExchangeDBData::exchangecount(int index) const {
  return exchangecount_.Get(index);
}
inline ::proto_ff::ComPair* FestivalExchangeDBData::mutable_exchangecount(int index) {
  return exchangecount_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalExchangeDBData::add_exchangecount() {
  return exchangecount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalExchangeDBData::exchangecount() const {
  return exchangecount_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalExchangeDBData::mutable_exchangecount() {
  return &exchangecount_;
}

// -------------------------------------------------------------------

// FestivalLoginDBData

// optional uint64 activeId = 1;
inline bool FestivalLoginDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalLoginDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalLoginDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalLoginDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalLoginDBData::activeid() const {
  return activeid_;
}
inline void FestivalLoginDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 nLastResetTime = 2;
inline bool FestivalLoginDBData::has_nlastresettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalLoginDBData::set_has_nlastresettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalLoginDBData::clear_has_nlastresettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalLoginDBData::clear_nlastresettime() {
  nlastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_nlastresettime();
}
inline ::google::protobuf::uint64 FestivalLoginDBData::nlastresettime() const {
  return nlastresettime_;
}
inline void FestivalLoginDBData::set_nlastresettime(::google::protobuf::uint64 value) {
  set_has_nlastresettime();
  nlastresettime_ = value;
}

// optional uint32 nLoninCount = 3;
inline bool FestivalLoginDBData::has_nlonincount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestivalLoginDBData::set_has_nlonincount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestivalLoginDBData::clear_has_nlonincount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestivalLoginDBData::clear_nlonincount() {
  nlonincount_ = 0u;
  clear_has_nlonincount();
}
inline ::google::protobuf::uint32 FestivalLoginDBData::nlonincount() const {
  return nlonincount_;
}
inline void FestivalLoginDBData::set_nlonincount(::google::protobuf::uint32 value) {
  set_has_nlonincount();
  nlonincount_ = value;
}

// repeated .proto_ff.ComPair getState = 4;
inline int FestivalLoginDBData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalLoginDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalLoginDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalLoginDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalLoginDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalLoginDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalLoginDBData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// FestivalTotalRechargeDBData

// optional uint64 activeId = 1;
inline bool FestivalTotalRechargeDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalTotalRechargeDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalTotalRechargeDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalTotalRechargeDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalTotalRechargeDBData::activeid() const {
  return activeid_;
}
inline void FestivalTotalRechargeDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 nRechargeCount = 2;
inline bool FestivalTotalRechargeDBData::has_nrechargecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalTotalRechargeDBData::set_has_nrechargecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalTotalRechargeDBData::clear_has_nrechargecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalTotalRechargeDBData::clear_nrechargecount() {
  nrechargecount_ = 0u;
  clear_has_nrechargecount();
}
inline ::google::protobuf::uint32 FestivalTotalRechargeDBData::nrechargecount() const {
  return nrechargecount_;
}
inline void FestivalTotalRechargeDBData::set_nrechargecount(::google::protobuf::uint32 value) {
  set_has_nrechargecount();
  nrechargecount_ = value;
}

// repeated .proto_ff.ComPair getState = 3;
inline int FestivalTotalRechargeDBData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalTotalRechargeDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalTotalRechargeDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalTotalRechargeDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalTotalRechargeDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalTotalRechargeDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalTotalRechargeDBData::mutable_getstate() {
  return &getstate_;
}

// optional uint32 nRechargeHoly = 4;
inline bool FestivalTotalRechargeDBData::has_nrechargeholy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestivalTotalRechargeDBData::set_has_nrechargeholy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestivalTotalRechargeDBData::clear_has_nrechargeholy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestivalTotalRechargeDBData::clear_nrechargeholy() {
  nrechargeholy_ = 0u;
  clear_has_nrechargeholy();
}
inline ::google::protobuf::uint32 FestivalTotalRechargeDBData::nrechargeholy() const {
  return nrechargeholy_;
}
inline void FestivalTotalRechargeDBData::set_nrechargeholy(::google::protobuf::uint32 value) {
  set_has_nrechargeholy();
  nrechargeholy_ = value;
}

// -------------------------------------------------------------------

// FestivalConsumptionDBData

// optional uint64 activeId = 1;
inline bool FestivalConsumptionDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalConsumptionDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalConsumptionDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalConsumptionDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalConsumptionDBData::activeid() const {
  return activeid_;
}
inline void FestivalConsumptionDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 nConsumptionValue = 2;
inline bool FestivalConsumptionDBData::has_nconsumptionvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalConsumptionDBData::set_has_nconsumptionvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalConsumptionDBData::clear_has_nconsumptionvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalConsumptionDBData::clear_nconsumptionvalue() {
  nconsumptionvalue_ = 0u;
  clear_has_nconsumptionvalue();
}
inline ::google::protobuf::uint32 FestivalConsumptionDBData::nconsumptionvalue() const {
  return nconsumptionvalue_;
}
inline void FestivalConsumptionDBData::set_nconsumptionvalue(::google::protobuf::uint32 value) {
  set_has_nconsumptionvalue();
  nconsumptionvalue_ = value;
}

// repeated .proto_ff.ComPair getState = 3;
inline int FestivalConsumptionDBData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalConsumptionDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalConsumptionDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalConsumptionDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalConsumptionDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalConsumptionDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalConsumptionDBData::mutable_getstate() {
  return &getstate_;
}

// optional uint32 nConsumptionHoly = 4;
inline bool FestivalConsumptionDBData::has_nconsumptionholy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestivalConsumptionDBData::set_has_nconsumptionholy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestivalConsumptionDBData::clear_has_nconsumptionholy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestivalConsumptionDBData::clear_nconsumptionholy() {
  nconsumptionholy_ = 0u;
  clear_has_nconsumptionholy();
}
inline ::google::protobuf::uint32 FestivalConsumptionDBData::nconsumptionholy() const {
  return nconsumptionholy_;
}
inline void FestivalConsumptionDBData::set_nconsumptionholy(::google::protobuf::uint32 value) {
  set_has_nconsumptionholy();
  nconsumptionholy_ = value;
}

// optional uint32 nConsumptionVoucher = 5;
inline bool FestivalConsumptionDBData::has_nconsumptionvoucher() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FestivalConsumptionDBData::set_has_nconsumptionvoucher() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FestivalConsumptionDBData::clear_has_nconsumptionvoucher() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FestivalConsumptionDBData::clear_nconsumptionvoucher() {
  nconsumptionvoucher_ = 0u;
  clear_has_nconsumptionvoucher();
}
inline ::google::protobuf::uint32 FestivalConsumptionDBData::nconsumptionvoucher() const {
  return nconsumptionvoucher_;
}
inline void FestivalConsumptionDBData::set_nconsumptionvoucher(::google::protobuf::uint32 value) {
  set_has_nconsumptionvoucher();
  nconsumptionvoucher_ = value;
}

// -------------------------------------------------------------------

// FestivalKillBossData

// optional uint64 activeId = 1;
inline bool FestivalKillBossData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalKillBossData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalKillBossData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalKillBossData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalKillBossData::activeid() const {
  return activeid_;
}
inline void FestivalKillBossData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.ComPair getState = 2;
inline int FestivalKillBossData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalKillBossData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalKillBossData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalKillBossData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalKillBossData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalKillBossData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalKillBossData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// FestivalZhiChongData

// optional uint64 activeId = 1;
inline bool FestivalZhiChongData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalZhiChongData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalZhiChongData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalZhiChongData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalZhiChongData::activeid() const {
  return activeid_;
}
inline void FestivalZhiChongData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.ComPair getState = 2;
inline int FestivalZhiChongData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalZhiChongData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalZhiChongData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalZhiChongData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalZhiChongData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalZhiChongData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalZhiChongData::mutable_getstate() {
  return &getstate_;
}

// repeated int64 pointList = 3;
inline int FestivalZhiChongData::pointlist_size() const {
  return pointlist_.size();
}
inline void FestivalZhiChongData::clear_pointlist() {
  pointlist_.Clear();
}
inline ::google::protobuf::int64 FestivalZhiChongData::pointlist(int index) const {
  return pointlist_.Get(index);
}
inline void FestivalZhiChongData::set_pointlist(int index, ::google::protobuf::int64 value) {
  pointlist_.Set(index, value);
}
inline void FestivalZhiChongData::add_pointlist(::google::protobuf::int64 value) {
  pointlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
FestivalZhiChongData::pointlist() const {
  return pointlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
FestivalZhiChongData::mutable_pointlist() {
  return &pointlist_;
}

// -------------------------------------------------------------------

// FestivalPreRechargeData

// optional uint64 activeId = 1;
inline bool FestivalPreRechargeData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalPreRechargeData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalPreRechargeData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalPreRechargeData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalPreRechargeData::activeid() const {
  return activeid_;
}
inline void FestivalPreRechargeData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.ComPair buy = 2;
inline int FestivalPreRechargeData::buy_size() const {
  return buy_.size();
}
inline void FestivalPreRechargeData::clear_buy() {
  buy_.Clear();
}
inline const ::proto_ff::ComPair& FestivalPreRechargeData::buy(int index) const {
  return buy_.Get(index);
}
inline ::proto_ff::ComPair* FestivalPreRechargeData::mutable_buy(int index) {
  return buy_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalPreRechargeData::add_buy() {
  return buy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalPreRechargeData::buy() const {
  return buy_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalPreRechargeData::mutable_buy() {
  return &buy_;
}

// repeated int64 pointList = 3;
inline int FestivalPreRechargeData::pointlist_size() const {
  return pointlist_.size();
}
inline void FestivalPreRechargeData::clear_pointlist() {
  pointlist_.Clear();
}
inline ::google::protobuf::int64 FestivalPreRechargeData::pointlist(int index) const {
  return pointlist_.Get(index);
}
inline void FestivalPreRechargeData::set_pointlist(int index, ::google::protobuf::int64 value) {
  pointlist_.Set(index, value);
}
inline void FestivalPreRechargeData::add_pointlist(::google::protobuf::int64 value) {
  pointlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
FestivalPreRechargeData::pointlist() const {
  return pointlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
FestivalPreRechargeData::mutable_pointlist() {
  return &pointlist_;
}

// -------------------------------------------------------------------

// FestivalSuperDBData

// optional uint64 activeId = 1;
inline bool FestivalSuperDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalSuperDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalSuperDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalSuperDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalSuperDBData::activeid() const {
  return activeid_;
}
inline void FestivalSuperDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 nLastResetTime = 2;
inline bool FestivalSuperDBData::has_nlastresettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalSuperDBData::set_has_nlastresettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalSuperDBData::clear_has_nlastresettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalSuperDBData::clear_nlastresettime() {
  nlastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_nlastresettime();
}
inline ::google::protobuf::uint64 FestivalSuperDBData::nlastresettime() const {
  return nlastresettime_;
}
inline void FestivalSuperDBData::set_nlastresettime(::google::protobuf::uint64 value) {
  set_has_nlastresettime();
  nlastresettime_ = value;
}

// optional uint32 nLoninCount = 3;
inline bool FestivalSuperDBData::has_nlonincount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestivalSuperDBData::set_has_nlonincount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestivalSuperDBData::clear_has_nlonincount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestivalSuperDBData::clear_nlonincount() {
  nlonincount_ = 0u;
  clear_has_nlonincount();
}
inline ::google::protobuf::uint32 FestivalSuperDBData::nlonincount() const {
  return nlonincount_;
}
inline void FestivalSuperDBData::set_nlonincount(::google::protobuf::uint32 value) {
  set_has_nlonincount();
  nlonincount_ = value;
}

// optional int32 getId = 4;
inline bool FestivalSuperDBData::has_getid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestivalSuperDBData::set_has_getid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestivalSuperDBData::clear_has_getid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestivalSuperDBData::clear_getid() {
  getid_ = 0;
  clear_has_getid();
}
inline ::google::protobuf::int32 FestivalSuperDBData::getid() const {
  return getid_;
}
inline void FestivalSuperDBData::set_getid(::google::protobuf::int32 value) {
  set_has_getid();
  getid_ = value;
}

// optional int32 active_state = 5;
inline bool FestivalSuperDBData::has_active_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FestivalSuperDBData::set_has_active_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FestivalSuperDBData::clear_has_active_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FestivalSuperDBData::clear_active_state() {
  active_state_ = 0;
  clear_has_active_state();
}
inline ::google::protobuf::int32 FestivalSuperDBData::active_state() const {
  return active_state_;
}
inline void FestivalSuperDBData::set_active_state(::google::protobuf::int32 value) {
  set_has_active_state();
  active_state_ = value;
}

// -------------------------------------------------------------------

// FestivalSuperDoubleDBData

// optional uint64 activeId = 1;
inline bool FestivalSuperDoubleDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalSuperDoubleDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalSuperDoubleDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalSuperDoubleDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalSuperDoubleDBData::activeid() const {
  return activeid_;
}
inline void FestivalSuperDoubleDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 nLastResetTime = 2;
inline bool FestivalSuperDoubleDBData::has_nlastresettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalSuperDoubleDBData::set_has_nlastresettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalSuperDoubleDBData::clear_has_nlastresettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalSuperDoubleDBData::clear_nlastresettime() {
  nlastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_nlastresettime();
}
inline ::google::protobuf::uint64 FestivalSuperDoubleDBData::nlastresettime() const {
  return nlastresettime_;
}
inline void FestivalSuperDoubleDBData::set_nlastresettime(::google::protobuf::uint64 value) {
  set_has_nlastresettime();
  nlastresettime_ = value;
}

// optional uint32 curGiftId = 3;
inline bool FestivalSuperDoubleDBData::has_curgiftid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestivalSuperDoubleDBData::set_has_curgiftid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestivalSuperDoubleDBData::clear_has_curgiftid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestivalSuperDoubleDBData::clear_curgiftid() {
  curgiftid_ = 0u;
  clear_has_curgiftid();
}
inline ::google::protobuf::uint32 FestivalSuperDoubleDBData::curgiftid() const {
  return curgiftid_;
}
inline void FestivalSuperDoubleDBData::set_curgiftid(::google::protobuf::uint32 value) {
  set_has_curgiftid();
  curgiftid_ = value;
}

// optional int32 curGiftState = 4;
inline bool FestivalSuperDoubleDBData::has_curgiftstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestivalSuperDoubleDBData::set_has_curgiftstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestivalSuperDoubleDBData::clear_has_curgiftstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestivalSuperDoubleDBData::clear_curgiftstate() {
  curgiftstate_ = 0;
  clear_has_curgiftstate();
}
inline ::google::protobuf::int32 FestivalSuperDoubleDBData::curgiftstate() const {
  return curgiftstate_;
}
inline void FestivalSuperDoubleDBData::set_curgiftstate(::google::protobuf::int32 value) {
  set_has_curgiftstate();
  curgiftstate_ = value;
}

// optional int32 curDailyState = 5;
inline bool FestivalSuperDoubleDBData::has_curdailystate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FestivalSuperDoubleDBData::set_has_curdailystate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FestivalSuperDoubleDBData::clear_has_curdailystate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FestivalSuperDoubleDBData::clear_curdailystate() {
  curdailystate_ = 0;
  clear_has_curdailystate();
}
inline ::google::protobuf::int32 FestivalSuperDoubleDBData::curdailystate() const {
  return curdailystate_;
}
inline void FestivalSuperDoubleDBData::set_curdailystate(::google::protobuf::int32 value) {
  set_has_curdailystate();
  curdailystate_ = value;
}

// -------------------------------------------------------------------

// FestivalHuoYueDuDBData

// optional uint64 activeId = 1;
inline bool FestivalHuoYueDuDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalHuoYueDuDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalHuoYueDuDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalHuoYueDuDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalHuoYueDuDBData::activeid() const {
  return activeid_;
}
inline void FestivalHuoYueDuDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 nHuoYueDu = 2;
inline bool FestivalHuoYueDuDBData::has_nhuoyuedu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalHuoYueDuDBData::set_has_nhuoyuedu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalHuoYueDuDBData::clear_has_nhuoyuedu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalHuoYueDuDBData::clear_nhuoyuedu() {
  nhuoyuedu_ = 0u;
  clear_has_nhuoyuedu();
}
inline ::google::protobuf::uint32 FestivalHuoYueDuDBData::nhuoyuedu() const {
  return nhuoyuedu_;
}
inline void FestivalHuoYueDuDBData::set_nhuoyuedu(::google::protobuf::uint32 value) {
  set_has_nhuoyuedu();
  nhuoyuedu_ = value;
}

// repeated .proto_ff.ComPair getState = 3;
inline int FestivalHuoYueDuDBData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalHuoYueDuDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalHuoYueDuDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalHuoYueDuDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalHuoYueDuDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalHuoYueDuDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalHuoYueDuDBData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// FestivalFirstRechargeDBData

// optional uint64 activeId = 1;
inline bool FestivalFirstRechargeDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalFirstRechargeDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalFirstRechargeDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalFirstRechargeDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalFirstRechargeDBData::activeid() const {
  return activeid_;
}
inline void FestivalFirstRechargeDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 rechargeTime = 2;
inline bool FestivalFirstRechargeDBData::has_rechargetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalFirstRechargeDBData::set_has_rechargetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalFirstRechargeDBData::clear_has_rechargetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalFirstRechargeDBData::clear_rechargetime() {
  rechargetime_ = 0u;
  clear_has_rechargetime();
}
inline ::google::protobuf::uint32 FestivalFirstRechargeDBData::rechargetime() const {
  return rechargetime_;
}
inline void FestivalFirstRechargeDBData::set_rechargetime(::google::protobuf::uint32 value) {
  set_has_rechargetime();
  rechargetime_ = value;
}

// repeated .proto_ff.ComPair getState = 3;
inline int FestivalFirstRechargeDBData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalFirstRechargeDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalFirstRechargeDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalFirstRechargeDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalFirstRechargeDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalFirstRechargeDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalFirstRechargeDBData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// FestivalYanHuaDBData

// optional uint64 activeId = 1;
inline bool FestivalYanHuaDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalYanHuaDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalYanHuaDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalYanHuaDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalYanHuaDBData::activeid() const {
  return activeid_;
}
inline void FestivalYanHuaDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated uint64 getItems = 2;
inline int FestivalYanHuaDBData::getitems_size() const {
  return getitems_.size();
}
inline void FestivalYanHuaDBData::clear_getitems() {
  getitems_.Clear();
}
inline ::google::protobuf::uint64 FestivalYanHuaDBData::getitems(int index) const {
  return getitems_.Get(index);
}
inline void FestivalYanHuaDBData::set_getitems(int index, ::google::protobuf::uint64 value) {
  getitems_.Set(index, value);
}
inline void FestivalYanHuaDBData::add_getitems(::google::protobuf::uint64 value) {
  getitems_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FestivalYanHuaDBData::getitems() const {
  return getitems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FestivalYanHuaDBData::mutable_getitems() {
  return &getitems_;
}

// -------------------------------------------------------------------

// FestivalBigYanHuaDBData

// optional uint64 activeId = 1;
inline bool FestivalBigYanHuaDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalBigYanHuaDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalBigYanHuaDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalBigYanHuaDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalBigYanHuaDBData::activeid() const {
  return activeid_;
}
inline void FestivalBigYanHuaDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated uint64 getItems = 2;
inline int FestivalBigYanHuaDBData::getitems_size() const {
  return getitems_.size();
}
inline void FestivalBigYanHuaDBData::clear_getitems() {
  getitems_.Clear();
}
inline ::google::protobuf::uint64 FestivalBigYanHuaDBData::getitems(int index) const {
  return getitems_.Get(index);
}
inline void FestivalBigYanHuaDBData::set_getitems(int index, ::google::protobuf::uint64 value) {
  getitems_.Set(index, value);
}
inline void FestivalBigYanHuaDBData::add_getitems(::google::protobuf::uint64 value) {
  getitems_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FestivalBigYanHuaDBData::getitems() const {
  return getitems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FestivalBigYanHuaDBData::mutable_getitems() {
  return &getitems_;
}

// -------------------------------------------------------------------

// FestivalShopDBData

// optional uint64 activeId = 1;
inline bool FestivalShopDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalShopDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalShopDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalShopDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalShopDBData::activeid() const {
  return activeid_;
}
inline void FestivalShopDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.ComPair64 buyCount = 2;
inline int FestivalShopDBData::buycount_size() const {
  return buycount_.size();
}
inline void FestivalShopDBData::clear_buycount() {
  buycount_.Clear();
}
inline const ::proto_ff::ComPair64& FestivalShopDBData::buycount(int index) const {
  return buycount_.Get(index);
}
inline ::proto_ff::ComPair64* FestivalShopDBData::mutable_buycount(int index) {
  return buycount_.Mutable(index);
}
inline ::proto_ff::ComPair64* FestivalShopDBData::add_buycount() {
  return buycount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
FestivalShopDBData::buycount() const {
  return buycount_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
FestivalShopDBData::mutable_buycount() {
  return &buycount_;
}

// -------------------------------------------------------------------

// LimitGiftDBData

// optional uint32 giftId = 1;
inline bool LimitGiftDBData::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitGiftDBData::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitGiftDBData::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitGiftDBData::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 LimitGiftDBData::giftid() const {
  return giftid_;
}
inline void LimitGiftDBData::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
}

// optional uint64 buyTime = 2;
inline bool LimitGiftDBData::has_buytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitGiftDBData::set_has_buytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitGiftDBData::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitGiftDBData::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 LimitGiftDBData::buytime() const {
  return buytime_;
}
inline void LimitGiftDBData::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
}

// optional uint32 getState = 3;
inline bool LimitGiftDBData::has_getstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LimitGiftDBData::set_has_getstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LimitGiftDBData::clear_has_getstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LimitGiftDBData::clear_getstate() {
  getstate_ = 0u;
  clear_has_getstate();
}
inline ::google::protobuf::uint32 LimitGiftDBData::getstate() const {
  return getstate_;
}
inline void LimitGiftDBData::set_getstate(::google::protobuf::uint32 value) {
  set_has_getstate();
  getstate_ = value;
}

// optional uint32 totalBack = 4;
inline bool LimitGiftDBData::has_totalback() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LimitGiftDBData::set_has_totalback() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LimitGiftDBData::clear_has_totalback() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LimitGiftDBData::clear_totalback() {
  totalback_ = 0u;
  clear_has_totalback();
}
inline ::google::protobuf::uint32 LimitGiftDBData::totalback() const {
  return totalback_;
}
inline void LimitGiftDBData::set_totalback(::google::protobuf::uint32 value) {
  set_has_totalback();
  totalback_ = value;
}

// optional uint32 openTime = 5;
inline bool LimitGiftDBData::has_opentime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LimitGiftDBData::set_has_opentime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LimitGiftDBData::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LimitGiftDBData::clear_opentime() {
  opentime_ = 0u;
  clear_has_opentime();
}
inline ::google::protobuf::uint32 LimitGiftDBData::opentime() const {
  return opentime_;
}
inline void LimitGiftDBData::set_opentime(::google::protobuf::uint32 value) {
  set_has_opentime();
  opentime_ = value;
}

// optional uint64 lastResetTime = 6;
inline bool LimitGiftDBData::has_lastresettime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LimitGiftDBData::set_has_lastresettime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LimitGiftDBData::clear_has_lastresettime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LimitGiftDBData::clear_lastresettime() {
  lastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastresettime();
}
inline ::google::protobuf::uint64 LimitGiftDBData::lastresettime() const {
  return lastresettime_;
}
inline void LimitGiftDBData::set_lastresettime(::google::protobuf::uint64 value) {
  set_has_lastresettime();
  lastresettime_ = value;
}

// -------------------------------------------------------------------

// LimitGiftActiveDBData

// optional uint64 activeId = 1;
inline bool LimitGiftActiveDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitGiftActiveDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitGiftActiveDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitGiftActiveDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 LimitGiftActiveDBData::activeid() const {
  return activeid_;
}
inline void LimitGiftActiveDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional bool isFinish = 2;
inline bool LimitGiftActiveDBData::has_isfinish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitGiftActiveDBData::set_has_isfinish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitGiftActiveDBData::clear_has_isfinish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitGiftActiveDBData::clear_isfinish() {
  isfinish_ = false;
  clear_has_isfinish();
}
inline bool LimitGiftActiveDBData::isfinish() const {
  return isfinish_;
}
inline void LimitGiftActiveDBData::set_isfinish(bool value) {
  set_has_isfinish();
  isfinish_ = value;
}

// repeated .proto_ff.LimitGiftDBData giftList = 3;
inline int LimitGiftActiveDBData::giftlist_size() const {
  return giftlist_.size();
}
inline void LimitGiftActiveDBData::clear_giftlist() {
  giftlist_.Clear();
}
inline const ::proto_ff::LimitGiftDBData& LimitGiftActiveDBData::giftlist(int index) const {
  return giftlist_.Get(index);
}
inline ::proto_ff::LimitGiftDBData* LimitGiftActiveDBData::mutable_giftlist(int index) {
  return giftlist_.Mutable(index);
}
inline ::proto_ff::LimitGiftDBData* LimitGiftActiveDBData::add_giftlist() {
  return giftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftDBData >&
LimitGiftActiveDBData::giftlist() const {
  return giftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftDBData >*
LimitGiftActiveDBData::mutable_giftlist() {
  return &giftlist_;
}

// -------------------------------------------------------------------

// FRechargeDBData

// optional uint64 pointId = 1;
inline bool FRechargeDBData::has_pointid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FRechargeDBData::set_has_pointid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FRechargeDBData::clear_has_pointid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FRechargeDBData::clear_pointid() {
  pointid_ = GOOGLE_ULONGLONG(0);
  clear_has_pointid();
}
inline ::google::protobuf::uint64 FRechargeDBData::pointid() const {
  return pointid_;
}
inline void FRechargeDBData::set_pointid(::google::protobuf::uint64 value) {
  set_has_pointid();
  pointid_ = value;
}

// optional uint32 state = 2;
inline bool FRechargeDBData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FRechargeDBData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FRechargeDBData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FRechargeDBData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 FRechargeDBData::state() const {
  return state_;
}
inline void FRechargeDBData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// FRechargeActiveDBData

// optional uint64 activeId = 1;
inline bool FRechargeActiveDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FRechargeActiveDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FRechargeActiveDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FRechargeActiveDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FRechargeActiveDBData::activeid() const {
  return activeid_;
}
inline void FRechargeActiveDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.FRechargeDBData dataList = 2;
inline int FRechargeActiveDBData::datalist_size() const {
  return datalist_.size();
}
inline void FRechargeActiveDBData::clear_datalist() {
  datalist_.Clear();
}
inline const ::proto_ff::FRechargeDBData& FRechargeActiveDBData::datalist(int index) const {
  return datalist_.Get(index);
}
inline ::proto_ff::FRechargeDBData* FRechargeActiveDBData::mutable_datalist(int index) {
  return datalist_.Mutable(index);
}
inline ::proto_ff::FRechargeDBData* FRechargeActiveDBData::add_datalist() {
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeDBData >&
FRechargeActiveDBData::datalist() const {
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeDBData >*
FRechargeActiveDBData::mutable_datalist() {
  return &datalist_;
}

// -------------------------------------------------------------------

// FSmashEggDBData

// optional uint64 itemId = 1;
inline bool FSmashEggDBData::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FSmashEggDBData::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FSmashEggDBData::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FSmashEggDBData::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 FSmashEggDBData::itemid() const {
  return itemid_;
}
inline void FSmashEggDBData::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 position = 2;
inline bool FSmashEggDBData::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FSmashEggDBData::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FSmashEggDBData::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FSmashEggDBData::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 FSmashEggDBData::position() const {
  return position_;
}
inline void FSmashEggDBData::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// optional uint32 quality = 3;
inline bool FSmashEggDBData::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FSmashEggDBData::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FSmashEggDBData::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FSmashEggDBData::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 FSmashEggDBData::quality() const {
  return quality_;
}
inline void FSmashEggDBData::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// optional uint32 itemNum = 4;
inline bool FSmashEggDBData::has_itemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FSmashEggDBData::set_has_itemnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FSmashEggDBData::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FSmashEggDBData::clear_itemnum() {
  itemnum_ = 0u;
  clear_has_itemnum();
}
inline ::google::protobuf::uint32 FSmashEggDBData::itemnum() const {
  return itemnum_;
}
inline void FSmashEggDBData::set_itemnum(::google::protobuf::uint32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// -------------------------------------------------------------------

// FestivalSmashEggDBData

// optional uint64 activeId = 1;
inline bool FestivalSmashEggDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalSmashEggDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalSmashEggDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalSmashEggDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalSmashEggDBData::activeid() const {
  return activeid_;
}
inline void FestivalSmashEggDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 smashCount = 2;
inline bool FestivalSmashEggDBData::has_smashcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FestivalSmashEggDBData::set_has_smashcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FestivalSmashEggDBData::clear_has_smashcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FestivalSmashEggDBData::clear_smashcount() {
  smashcount_ = GOOGLE_ULONGLONG(0);
  clear_has_smashcount();
}
inline ::google::protobuf::uint64 FestivalSmashEggDBData::smashcount() const {
  return smashcount_;
}
inline void FestivalSmashEggDBData::set_smashcount(::google::protobuf::uint64 value) {
  set_has_smashcount();
  smashcount_ = value;
}

// optional uint64 smashCountToday = 3;
inline bool FestivalSmashEggDBData::has_smashcounttoday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FestivalSmashEggDBData::set_has_smashcounttoday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FestivalSmashEggDBData::clear_has_smashcounttoday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FestivalSmashEggDBData::clear_smashcounttoday() {
  smashcounttoday_ = GOOGLE_ULONGLONG(0);
  clear_has_smashcounttoday();
}
inline ::google::protobuf::uint64 FestivalSmashEggDBData::smashcounttoday() const {
  return smashcounttoday_;
}
inline void FestivalSmashEggDBData::set_smashcounttoday(::google::protobuf::uint64 value) {
  set_has_smashcounttoday();
  smashcounttoday_ = value;
}

// optional uint64 freeTimeDeadLine = 4;
inline bool FestivalSmashEggDBData::has_freetimedeadline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FestivalSmashEggDBData::set_has_freetimedeadline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FestivalSmashEggDBData::clear_has_freetimedeadline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FestivalSmashEggDBData::clear_freetimedeadline() {
  freetimedeadline_ = GOOGLE_ULONGLONG(0);
  clear_has_freetimedeadline();
}
inline ::google::protobuf::uint64 FestivalSmashEggDBData::freetimedeadline() const {
  return freetimedeadline_;
}
inline void FestivalSmashEggDBData::set_freetimedeadline(::google::protobuf::uint64 value) {
  set_has_freetimedeadline();
  freetimedeadline_ = value;
}

// optional uint32 addRateCount = 5;
inline bool FestivalSmashEggDBData::has_addratecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FestivalSmashEggDBData::set_has_addratecount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FestivalSmashEggDBData::clear_has_addratecount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FestivalSmashEggDBData::clear_addratecount() {
  addratecount_ = 0u;
  clear_has_addratecount();
}
inline ::google::protobuf::uint32 FestivalSmashEggDBData::addratecount() const {
  return addratecount_;
}
inline void FestivalSmashEggDBData::set_addratecount(::google::protobuf::uint32 value) {
  set_has_addratecount();
  addratecount_ = value;
}

// optional uint32 resetRewardTime = 6;
inline bool FestivalSmashEggDBData::has_resetrewardtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FestivalSmashEggDBData::set_has_resetrewardtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FestivalSmashEggDBData::clear_has_resetrewardtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FestivalSmashEggDBData::clear_resetrewardtime() {
  resetrewardtime_ = 0u;
  clear_has_resetrewardtime();
}
inline ::google::protobuf::uint32 FestivalSmashEggDBData::resetrewardtime() const {
  return resetrewardtime_;
}
inline void FestivalSmashEggDBData::set_resetrewardtime(::google::protobuf::uint32 value) {
  set_has_resetrewardtime();
  resetrewardtime_ = value;
}

// repeated .proto_ff.FSmashEggDBData eggData = 7;
inline int FestivalSmashEggDBData::eggdata_size() const {
  return eggdata_.size();
}
inline void FestivalSmashEggDBData::clear_eggdata() {
  eggdata_.Clear();
}
inline const ::proto_ff::FSmashEggDBData& FestivalSmashEggDBData::eggdata(int index) const {
  return eggdata_.Get(index);
}
inline ::proto_ff::FSmashEggDBData* FestivalSmashEggDBData::mutable_eggdata(int index) {
  return eggdata_.Mutable(index);
}
inline ::proto_ff::FSmashEggDBData* FestivalSmashEggDBData::add_eggdata() {
  return eggdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FSmashEggDBData >&
FestivalSmashEggDBData::eggdata() const {
  return eggdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FSmashEggDBData >*
FestivalSmashEggDBData::mutable_eggdata() {
  return &eggdata_;
}

// repeated .proto_ff.ComPair rewardGetState = 8;
inline int FestivalSmashEggDBData::rewardgetstate_size() const {
  return rewardgetstate_.size();
}
inline void FestivalSmashEggDBData::clear_rewardgetstate() {
  rewardgetstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalSmashEggDBData::rewardgetstate(int index) const {
  return rewardgetstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalSmashEggDBData::mutable_rewardgetstate(int index) {
  return rewardgetstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalSmashEggDBData::add_rewardgetstate() {
  return rewardgetstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalSmashEggDBData::rewardgetstate() const {
  return rewardgetstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalSmashEggDBData::mutable_rewardgetstate() {
  return &rewardgetstate_;
}

// optional int32 daynum = 9;
inline bool FestivalSmashEggDBData::has_daynum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FestivalSmashEggDBData::set_has_daynum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FestivalSmashEggDBData::clear_has_daynum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FestivalSmashEggDBData::clear_daynum() {
  daynum_ = 0;
  clear_has_daynum();
}
inline ::google::protobuf::int32 FestivalSmashEggDBData::daynum() const {
  return daynum_;
}
inline void FestivalSmashEggDBData::set_daynum(::google::protobuf::int32 value) {
  set_has_daynum();
  daynum_ = value;
}

// optional int64 lastTime = 10;
inline bool FestivalSmashEggDBData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FestivalSmashEggDBData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FestivalSmashEggDBData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FestivalSmashEggDBData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 FestivalSmashEggDBData::lasttime() const {
  return lasttime_;
}
inline void FestivalSmashEggDBData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// OperateReward

// optional uint64 key_id = 1;
inline bool OperateReward::has_key_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateReward::set_has_key_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateReward::clear_has_key_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateReward::clear_key_id() {
  key_id_ = GOOGLE_ULONGLONG(0);
  clear_has_key_id();
}
inline ::google::protobuf::uint64 OperateReward::key_id() const {
  return key_id_;
}
inline void OperateReward::set_key_id(::google::protobuf::uint64 value) {
  set_has_key_id();
  key_id_ = value;
}

// optional bool isFinish = 2;
inline bool OperateReward::has_isfinish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateReward::set_has_isfinish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateReward::clear_has_isfinish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateReward::clear_isfinish() {
  isfinish_ = false;
  clear_has_isfinish();
}
inline bool OperateReward::isfinish() const {
  return isfinish_;
}
inline void OperateReward::set_isfinish(bool value) {
  set_has_isfinish();
  isfinish_ = value;
}

// optional bool isReceiveReward = 3;
inline bool OperateReward::has_isreceivereward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateReward::set_has_isreceivereward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateReward::clear_has_isreceivereward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateReward::clear_isreceivereward() {
  isreceivereward_ = false;
  clear_has_isreceivereward();
}
inline bool OperateReward::isreceivereward() const {
  return isreceivereward_;
}
inline void OperateReward::set_isreceivereward(bool value) {
  set_has_isreceivereward();
  isreceivereward_ = value;
}

// optional .proto_ff.ComPair rechargeDays = 4;
inline bool OperateReward::has_rechargedays() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperateReward::set_has_rechargedays() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperateReward::clear_has_rechargedays() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperateReward::clear_rechargedays() {
  if (rechargedays_ != NULL) rechargedays_->::proto_ff::ComPair::Clear();
  clear_has_rechargedays();
}
inline const ::proto_ff::ComPair& OperateReward::rechargedays() const {
  return rechargedays_ != NULL ? *rechargedays_ : *default_instance_->rechargedays_;
}
inline ::proto_ff::ComPair* OperateReward::mutable_rechargedays() {
  set_has_rechargedays();
  if (rechargedays_ == NULL) rechargedays_ = new ::proto_ff::ComPair;
  return rechargedays_;
}
inline ::proto_ff::ComPair* OperateReward::release_rechargedays() {
  clear_has_rechargedays();
  ::proto_ff::ComPair* temp = rechargedays_;
  rechargedays_ = NULL;
  return temp;
}
inline void OperateReward::set_allocated_rechargedays(::proto_ff::ComPair* rechargedays) {
  delete rechargedays_;
  rechargedays_ = rechargedays;
  if (rechargedays) {
    set_has_rechargedays();
  } else {
    clear_has_rechargedays();
  }
}

// -------------------------------------------------------------------

// OperateDailyRechargeData

// optional uint64 id = 1;
inline bool OperateDailyRechargeData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateDailyRechargeData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateDailyRechargeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateDailyRechargeData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OperateDailyRechargeData::id() const {
  return id_;
}
inline void OperateDailyRechargeData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 rmbToday = 2;
inline bool OperateDailyRechargeData::has_rmbtoday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateDailyRechargeData::set_has_rmbtoday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateDailyRechargeData::clear_has_rmbtoday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateDailyRechargeData::clear_rmbtoday() {
  rmbtoday_ = 0u;
  clear_has_rmbtoday();
}
inline ::google::protobuf::uint32 OperateDailyRechargeData::rmbtoday() const {
  return rmbtoday_;
}
inline void OperateDailyRechargeData::set_rmbtoday(::google::protobuf::uint32 value) {
  set_has_rmbtoday();
  rmbtoday_ = value;
}

// optional uint32 rmbTotal = 3;
inline bool OperateDailyRechargeData::has_rmbtotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateDailyRechargeData::set_has_rmbtotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateDailyRechargeData::clear_has_rmbtotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateDailyRechargeData::clear_rmbtotal() {
  rmbtotal_ = 0u;
  clear_has_rmbtotal();
}
inline ::google::protobuf::uint32 OperateDailyRechargeData::rmbtotal() const {
  return rmbtotal_;
}
inline void OperateDailyRechargeData::set_rmbtotal(::google::protobuf::uint32 value) {
  set_has_rmbtotal();
  rmbtotal_ = value;
}

// optional uint32 lastRechargeDate = 4;
inline bool OperateDailyRechargeData::has_lastrechargedate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperateDailyRechargeData::set_has_lastrechargedate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperateDailyRechargeData::clear_has_lastrechargedate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperateDailyRechargeData::clear_lastrechargedate() {
  lastrechargedate_ = 0u;
  clear_has_lastrechargedate();
}
inline ::google::protobuf::uint32 OperateDailyRechargeData::lastrechargedate() const {
  return lastrechargedate_;
}
inline void OperateDailyRechargeData::set_lastrechargedate(::google::protobuf::uint32 value) {
  set_has_lastrechargedate();
  lastrechargedate_ = value;
}

// repeated .proto_ff.OperateReward list = 5;
inline int OperateDailyRechargeData::list_size() const {
  return list_.size();
}
inline void OperateDailyRechargeData::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::OperateReward& OperateDailyRechargeData::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::OperateReward* OperateDailyRechargeData::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::OperateReward* OperateDailyRechargeData::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
OperateDailyRechargeData::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
OperateDailyRechargeData::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// OperateMoonCardData

// optional uint64 id = 1;
inline bool OperateMoonCardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateMoonCardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateMoonCardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateMoonCardData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OperateMoonCardData::id() const {
  return id_;
}
inline void OperateMoonCardData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 buyDate = 2;
inline bool OperateMoonCardData::has_buydate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateMoonCardData::set_has_buydate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateMoonCardData::clear_has_buydate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateMoonCardData::clear_buydate() {
  buydate_ = 0u;
  clear_has_buydate();
}
inline ::google::protobuf::uint32 OperateMoonCardData::buydate() const {
  return buydate_;
}
inline void OperateMoonCardData::set_buydate(::google::protobuf::uint32 value) {
  set_has_buydate();
  buydate_ = value;
}

// repeated .proto_ff.OperateReward list = 3;
inline int OperateMoonCardData::list_size() const {
  return list_.size();
}
inline void OperateMoonCardData::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::OperateReward& OperateMoonCardData::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::OperateReward* OperateMoonCardData::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::OperateReward* OperateMoonCardData::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
OperateMoonCardData::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
OperateMoonCardData::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// OperateFundData

// optional uint64 id = 1;
inline bool OperateFundData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateFundData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateFundData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateFundData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OperateFundData::id() const {
  return id_;
}
inline void OperateFundData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 level = 2;
inline bool OperateFundData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateFundData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateFundData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateFundData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 OperateFundData::level() const {
  return level_;
}
inline void OperateFundData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 buyDate = 3;
inline bool OperateFundData::has_buydate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateFundData::set_has_buydate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateFundData::clear_has_buydate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateFundData::clear_buydate() {
  buydate_ = 0u;
  clear_has_buydate();
}
inline ::google::protobuf::uint32 OperateFundData::buydate() const {
  return buydate_;
}
inline void OperateFundData::set_buydate(::google::protobuf::uint32 value) {
  set_has_buydate();
  buydate_ = value;
}

// repeated .proto_ff.OperateReward list = 4;
inline int OperateFundData::list_size() const {
  return list_.size();
}
inline void OperateFundData::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::OperateReward& OperateFundData::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::OperateReward* OperateFundData::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::OperateReward* OperateFundData::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
OperateFundData::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
OperateFundData::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// OperateFirstRechargeType

// optional int32 type = 1;
inline bool OperateFirstRechargeType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateFirstRechargeType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateFirstRechargeType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateFirstRechargeType::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 OperateFirstRechargeType::type() const {
  return type_;
}
inline void OperateFirstRechargeType::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 updateTime = 2;
inline bool OperateFirstRechargeType::has_updatetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateFirstRechargeType::set_has_updatetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateFirstRechargeType::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateFirstRechargeType::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  clear_has_updatetime();
}
inline ::google::protobuf::uint64 OperateFirstRechargeType::updatetime() const {
  return updatetime_;
}
inline void OperateFirstRechargeType::set_updatetime(::google::protobuf::uint64 value) {
  set_has_updatetime();
  updatetime_ = value;
}

// optional int32 loginDay = 3;
inline bool OperateFirstRechargeType::has_loginday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateFirstRechargeType::set_has_loginday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateFirstRechargeType::clear_has_loginday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateFirstRechargeType::clear_loginday() {
  loginday_ = 0;
  clear_has_loginday();
}
inline ::google::protobuf::int32 OperateFirstRechargeType::loginday() const {
  return loginday_;
}
inline void OperateFirstRechargeType::set_loginday(::google::protobuf::int32 value) {
  set_has_loginday();
  loginday_ = value;
}

// -------------------------------------------------------------------

// OperateFirstRechargeData

// optional uint64 id = 1;
inline bool OperateFirstRechargeData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateFirstRechargeData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateFirstRechargeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateFirstRechargeData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OperateFirstRechargeData::id() const {
  return id_;
}
inline void OperateFirstRechargeData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.OperateReward list = 2;
inline int OperateFirstRechargeData::list_size() const {
  return list_.size();
}
inline void OperateFirstRechargeData::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::OperateReward& OperateFirstRechargeData::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::OperateReward* OperateFirstRechargeData::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::OperateReward* OperateFirstRechargeData::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >&
OperateFirstRechargeData::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateReward >*
OperateFirstRechargeData::mutable_list() {
  return &list_;
}

// repeated .proto_ff.OperateFirstRechargeType firstType = 3;
inline int OperateFirstRechargeData::firsttype_size() const {
  return firsttype_.size();
}
inline void OperateFirstRechargeData::clear_firsttype() {
  firsttype_.Clear();
}
inline const ::proto_ff::OperateFirstRechargeType& OperateFirstRechargeData::firsttype(int index) const {
  return firsttype_.Get(index);
}
inline ::proto_ff::OperateFirstRechargeType* OperateFirstRechargeData::mutable_firsttype(int index) {
  return firsttype_.Mutable(index);
}
inline ::proto_ff::OperateFirstRechargeType* OperateFirstRechargeData::add_firsttype() {
  return firsttype_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateFirstRechargeType >&
OperateFirstRechargeData::firsttype() const {
  return firsttype_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateFirstRechargeType >*
OperateFirstRechargeData::mutable_firsttype() {
  return &firsttype_;
}

// optional int32 rmb = 4;
inline bool OperateFirstRechargeData::has_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperateFirstRechargeData::set_has_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperateFirstRechargeData::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperateFirstRechargeData::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 OperateFirstRechargeData::rmb() const {
  return rmb_;
}
inline void OperateFirstRechargeData::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// -------------------------------------------------------------------

// WelfareVipGiftDBData

// optional uint64 id = 1;
inline bool WelfareVipGiftDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareVipGiftDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareVipGiftDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareVipGiftDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WelfareVipGiftDBData::id() const {
  return id_;
}
inline void WelfareVipGiftDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.ComPair getState = 2;
inline int WelfareVipGiftDBData::getstate_size() const {
  return getstate_.size();
}
inline void WelfareVipGiftDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& WelfareVipGiftDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* WelfareVipGiftDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* WelfareVipGiftDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
WelfareVipGiftDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
WelfareVipGiftDBData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// HoroscopeJackpotDBData

// optional uint32 id = 1;
inline bool HoroscopeJackpotDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HoroscopeJackpotDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HoroscopeJackpotDBData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HoroscopeJackpotDBData::id() const {
  return id_;
}
inline void HoroscopeJackpotDBData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional bool bOpen = 2;
inline bool HoroscopeJackpotDBData::has_bopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_bopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HoroscopeJackpotDBData::clear_has_bopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HoroscopeJackpotDBData::clear_bopen() {
  bopen_ = false;
  clear_has_bopen();
}
inline bool HoroscopeJackpotDBData::bopen() const {
  return bopen_;
}
inline void HoroscopeJackpotDBData::set_bopen(bool value) {
  set_has_bopen();
  bopen_ = value;
}

// optional uint32 nNeedLevel = 3;
inline bool HoroscopeJackpotDBData::has_nneedlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_nneedlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HoroscopeJackpotDBData::clear_has_nneedlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HoroscopeJackpotDBData::clear_nneedlevel() {
  nneedlevel_ = 0u;
  clear_has_nneedlevel();
}
inline ::google::protobuf::uint32 HoroscopeJackpotDBData::nneedlevel() const {
  return nneedlevel_;
}
inline void HoroscopeJackpotDBData::set_nneedlevel(::google::protobuf::uint32 value) {
  set_has_nneedlevel();
  nneedlevel_ = value;
}

// optional uint32 luckyValue = 4;
inline bool HoroscopeJackpotDBData::has_luckyvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_luckyvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HoroscopeJackpotDBData::clear_has_luckyvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HoroscopeJackpotDBData::clear_luckyvalue() {
  luckyvalue_ = 0u;
  clear_has_luckyvalue();
}
inline ::google::protobuf::uint32 HoroscopeJackpotDBData::luckyvalue() const {
  return luckyvalue_;
}
inline void HoroscopeJackpotDBData::set_luckyvalue(::google::protobuf::uint32 value) {
  set_has_luckyvalue();
  luckyvalue_ = value;
}

// optional uint32 welfareValue = 5;
inline bool HoroscopeJackpotDBData::has_welfarevalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_welfarevalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HoroscopeJackpotDBData::clear_has_welfarevalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HoroscopeJackpotDBData::clear_welfarevalue() {
  welfarevalue_ = 0u;
  clear_has_welfarevalue();
}
inline ::google::protobuf::uint32 HoroscopeJackpotDBData::welfarevalue() const {
  return welfarevalue_;
}
inline void HoroscopeJackpotDBData::set_welfarevalue(::google::protobuf::uint32 value) {
  set_has_welfarevalue();
  welfarevalue_ = value;
}

// optional uint32 getLuckyCount = 6;
inline bool HoroscopeJackpotDBData::has_getluckycount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_getluckycount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HoroscopeJackpotDBData::clear_has_getluckycount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HoroscopeJackpotDBData::clear_getluckycount() {
  getluckycount_ = 0u;
  clear_has_getluckycount();
}
inline ::google::protobuf::uint32 HoroscopeJackpotDBData::getluckycount() const {
  return getluckycount_;
}
inline void HoroscopeJackpotDBData::set_getluckycount(::google::protobuf::uint32 value) {
  set_has_getluckycount();
  getluckycount_ = value;
}

// repeated .proto_ff.ComPair welfareGetState = 7;
inline int HoroscopeJackpotDBData::welfaregetstate_size() const {
  return welfaregetstate_.size();
}
inline void HoroscopeJackpotDBData::clear_welfaregetstate() {
  welfaregetstate_.Clear();
}
inline const ::proto_ff::ComPair& HoroscopeJackpotDBData::welfaregetstate(int index) const {
  return welfaregetstate_.Get(index);
}
inline ::proto_ff::ComPair* HoroscopeJackpotDBData::mutable_welfaregetstate(int index) {
  return welfaregetstate_.Mutable(index);
}
inline ::proto_ff::ComPair* HoroscopeJackpotDBData::add_welfaregetstate() {
  return welfaregetstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
HoroscopeJackpotDBData::welfaregetstate() const {
  return welfaregetstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
HoroscopeJackpotDBData::mutable_welfaregetstate() {
  return &welfaregetstate_;
}

// optional int64 lastTime = 8;
inline bool HoroscopeJackpotDBData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HoroscopeJackpotDBData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HoroscopeJackpotDBData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 HoroscopeJackpotDBData::lasttime() const {
  return lasttime_;
}
inline void HoroscopeJackpotDBData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 curNum = 9;
inline bool HoroscopeJackpotDBData::has_curnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HoroscopeJackpotDBData::set_has_curnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HoroscopeJackpotDBData::clear_has_curnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HoroscopeJackpotDBData::clear_curnum() {
  curnum_ = 0;
  clear_has_curnum();
}
inline ::google::protobuf::int32 HoroscopeJackpotDBData::curnum() const {
  return curnum_;
}
inline void HoroscopeJackpotDBData::set_curnum(::google::protobuf::int32 value) {
  set_has_curnum();
  curnum_ = value;
}

// -------------------------------------------------------------------

// HoroscopeActiveDBData

// optional uint64 activeId = 1;
inline bool HoroscopeActiveDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HoroscopeActiveDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HoroscopeActiveDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HoroscopeActiveDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 HoroscopeActiveDBData::activeid() const {
  return activeid_;
}
inline void HoroscopeActiveDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 drawCount = 2;
inline bool HoroscopeActiveDBData::has_drawcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HoroscopeActiveDBData::set_has_drawcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HoroscopeActiveDBData::clear_has_drawcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HoroscopeActiveDBData::clear_drawcount() {
  drawcount_ = GOOGLE_ULONGLONG(0);
  clear_has_drawcount();
}
inline ::google::protobuf::uint64 HoroscopeActiveDBData::drawcount() const {
  return drawcount_;
}
inline void HoroscopeActiveDBData::set_drawcount(::google::protobuf::uint64 value) {
  set_has_drawcount();
  drawcount_ = value;
}

// optional uint32 freeOpId = 3;
inline bool HoroscopeActiveDBData::has_freeopid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HoroscopeActiveDBData::set_has_freeopid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HoroscopeActiveDBData::clear_has_freeopid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HoroscopeActiveDBData::clear_freeopid() {
  freeopid_ = 0u;
  clear_has_freeopid();
}
inline ::google::protobuf::uint32 HoroscopeActiveDBData::freeopid() const {
  return freeopid_;
}
inline void HoroscopeActiveDBData::set_freeopid(::google::protobuf::uint32 value) {
  set_has_freeopid();
  freeopid_ = value;
}

// optional uint64 lastFreeGetTime = 4;
inline bool HoroscopeActiveDBData::has_lastfreegettime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HoroscopeActiveDBData::set_has_lastfreegettime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HoroscopeActiveDBData::clear_has_lastfreegettime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HoroscopeActiveDBData::clear_lastfreegettime() {
  lastfreegettime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastfreegettime();
}
inline ::google::protobuf::uint64 HoroscopeActiveDBData::lastfreegettime() const {
  return lastfreegettime_;
}
inline void HoroscopeActiveDBData::set_lastfreegettime(::google::protobuf::uint64 value) {
  set_has_lastfreegettime();
  lastfreegettime_ = value;
}

// repeated .proto_ff.HoroscopeJackpotDBData jackpotList = 5;
inline int HoroscopeActiveDBData::jackpotlist_size() const {
  return jackpotlist_.size();
}
inline void HoroscopeActiveDBData::clear_jackpotlist() {
  jackpotlist_.Clear();
}
inline const ::proto_ff::HoroscopeJackpotDBData& HoroscopeActiveDBData::jackpotlist(int index) const {
  return jackpotlist_.Get(index);
}
inline ::proto_ff::HoroscopeJackpotDBData* HoroscopeActiveDBData::mutable_jackpotlist(int index) {
  return jackpotlist_.Mutable(index);
}
inline ::proto_ff::HoroscopeJackpotDBData* HoroscopeActiveDBData::add_jackpotlist() {
  return jackpotlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeJackpotDBData >&
HoroscopeActiveDBData::jackpotlist() const {
  return jackpotlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeJackpotDBData >*
HoroscopeActiveDBData::mutable_jackpotlist() {
  return &jackpotlist_;
}

// -------------------------------------------------------------------

// WelfareOnlineGiftDBData

// optional uint64 id = 1;
inline bool WelfareOnlineGiftDBData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareOnlineGiftDBData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareOnlineGiftDBData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareOnlineGiftDBData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 WelfareOnlineGiftDBData::id() const {
  return id_;
}
inline void WelfareOnlineGiftDBData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 lastRefreshTime = 2;
inline bool WelfareOnlineGiftDBData::has_lastrefreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareOnlineGiftDBData::set_has_lastrefreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareOnlineGiftDBData::clear_has_lastrefreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareOnlineGiftDBData::clear_lastrefreshtime() {
  lastrefreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastrefreshtime();
}
inline ::google::protobuf::uint64 WelfareOnlineGiftDBData::lastrefreshtime() const {
  return lastrefreshtime_;
}
inline void WelfareOnlineGiftDBData::set_lastrefreshtime(::google::protobuf::uint64 value) {
  set_has_lastrefreshtime();
  lastrefreshtime_ = value;
}

// optional uint64 OnlineTime = 3;
inline bool WelfareOnlineGiftDBData::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareOnlineGiftDBData::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareOnlineGiftDBData::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareOnlineGiftDBData::clear_onlinetime() {
  onlinetime_ = GOOGLE_ULONGLONG(0);
  clear_has_onlinetime();
}
inline ::google::protobuf::uint64 WelfareOnlineGiftDBData::onlinetime() const {
  return onlinetime_;
}
inline void WelfareOnlineGiftDBData::set_onlinetime(::google::protobuf::uint64 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// repeated .proto_ff.ComPair getState = 4;
inline int WelfareOnlineGiftDBData::getstate_size() const {
  return getstate_.size();
}
inline void WelfareOnlineGiftDBData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& WelfareOnlineGiftDBData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* WelfareOnlineGiftDBData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* WelfareOnlineGiftDBData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
WelfareOnlineGiftDBData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
WelfareOnlineGiftDBData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// OperationTurntableTaskDBData

// optional uint64 taskId = 1;
inline bool OperationTurntableTaskDBData::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperationTurntableTaskDBData::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperationTurntableTaskDBData::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperationTurntableTaskDBData::clear_taskid() {
  taskid_ = GOOGLE_ULONGLONG(0);
  clear_has_taskid();
}
inline ::google::protobuf::uint64 OperationTurntableTaskDBData::taskid() const {
  return taskid_;
}
inline void OperationTurntableTaskDBData::set_taskid(::google::protobuf::uint64 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional uint64 progress = 2;
inline bool OperationTurntableTaskDBData::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationTurntableTaskDBData::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationTurntableTaskDBData::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationTurntableTaskDBData::clear_progress() {
  progress_ = GOOGLE_ULONGLONG(0);
  clear_has_progress();
}
inline ::google::protobuf::uint64 OperationTurntableTaskDBData::progress() const {
  return progress_;
}
inline void OperationTurntableTaskDBData::set_progress(::google::protobuf::uint64 value) {
  set_has_progress();
  progress_ = value;
}

// optional uint32 state = 3;
inline bool OperationTurntableTaskDBData::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperationTurntableTaskDBData::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperationTurntableTaskDBData::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperationTurntableTaskDBData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 OperationTurntableTaskDBData::state() const {
  return state_;
}
inline void OperationTurntableTaskDBData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// OperationTurntableDBData

// optional uint64 activeId = 1;
inline bool OperationTurntableDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperationTurntableDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperationTurntableDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperationTurntableDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 OperationTurntableDBData::activeid() const {
  return activeid_;
}
inline void OperationTurntableDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 lastRefreshTime = 2;
inline bool OperationTurntableDBData::has_lastrefreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationTurntableDBData::set_has_lastrefreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationTurntableDBData::clear_has_lastrefreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationTurntableDBData::clear_lastrefreshtime() {
  lastrefreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastrefreshtime();
}
inline ::google::protobuf::uint64 OperationTurntableDBData::lastrefreshtime() const {
  return lastrefreshtime_;
}
inline void OperationTurntableDBData::set_lastrefreshtime(::google::protobuf::uint64 value) {
  set_has_lastrefreshtime();
  lastrefreshtime_ = value;
}

// repeated .proto_ff.OperationTurntableTaskDBData tasklist = 3;
inline int OperationTurntableDBData::tasklist_size() const {
  return tasklist_.size();
}
inline void OperationTurntableDBData::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::proto_ff::OperationTurntableTaskDBData& OperationTurntableDBData::tasklist(int index) const {
  return tasklist_.Get(index);
}
inline ::proto_ff::OperationTurntableTaskDBData* OperationTurntableDBData::mutable_tasklist(int index) {
  return tasklist_.Mutable(index);
}
inline ::proto_ff::OperationTurntableTaskDBData* OperationTurntableDBData::add_tasklist() {
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableTaskDBData >&
OperationTurntableDBData::tasklist() const {
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableTaskDBData >*
OperationTurntableDBData::mutable_tasklist() {
  return &tasklist_;
}

// -------------------------------------------------------------------

// OperationTutoraskDBData

// optional uint64 taskId = 1;
inline bool OperationTutoraskDBData::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperationTutoraskDBData::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperationTutoraskDBData::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperationTutoraskDBData::clear_taskid() {
  taskid_ = GOOGLE_ULONGLONG(0);
  clear_has_taskid();
}
inline ::google::protobuf::uint64 OperationTutoraskDBData::taskid() const {
  return taskid_;
}
inline void OperationTutoraskDBData::set_taskid(::google::protobuf::uint64 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional uint64 progress = 2;
inline bool OperationTutoraskDBData::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationTutoraskDBData::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationTutoraskDBData::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationTutoraskDBData::clear_progress() {
  progress_ = GOOGLE_ULONGLONG(0);
  clear_has_progress();
}
inline ::google::protobuf::uint64 OperationTutoraskDBData::progress() const {
  return progress_;
}
inline void OperationTutoraskDBData::set_progress(::google::protobuf::uint64 value) {
  set_has_progress();
  progress_ = value;
}

// optional uint32 state = 3;
inline bool OperationTutoraskDBData::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperationTutoraskDBData::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperationTutoraskDBData::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperationTutoraskDBData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 OperationTutoraskDBData::state() const {
  return state_;
}
inline void OperationTutoraskDBData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// OperationTutorDBData

// optional uint64 activeId = 1;
inline bool OperationTutorDBData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperationTutorDBData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperationTutorDBData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperationTutorDBData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 OperationTutorDBData::activeid() const {
  return activeid_;
}
inline void OperationTutorDBData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint64 lastRefreshTime = 2;
inline bool OperationTutorDBData::has_lastrefreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationTutorDBData::set_has_lastrefreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationTutorDBData::clear_has_lastrefreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationTutorDBData::clear_lastrefreshtime() {
  lastrefreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastrefreshtime();
}
inline ::google::protobuf::uint64 OperationTutorDBData::lastrefreshtime() const {
  return lastrefreshtime_;
}
inline void OperationTutorDBData::set_lastrefreshtime(::google::protobuf::uint64 value) {
  set_has_lastrefreshtime();
  lastrefreshtime_ = value;
}

// optional uint64 diligentValue = 3;
inline bool OperationTutorDBData::has_diligentvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperationTutorDBData::set_has_diligentvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperationTutorDBData::clear_has_diligentvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperationTutorDBData::clear_diligentvalue() {
  diligentvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_diligentvalue();
}
inline ::google::protobuf::uint64 OperationTutorDBData::diligentvalue() const {
  return diligentvalue_;
}
inline void OperationTutorDBData::set_diligentvalue(::google::protobuf::uint64 value) {
  set_has_diligentvalue();
  diligentvalue_ = value;
}

// repeated .proto_ff.OperationTutoraskDBData tasklist = 4;
inline int OperationTutorDBData::tasklist_size() const {
  return tasklist_.size();
}
inline void OperationTutorDBData::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::proto_ff::OperationTutoraskDBData& OperationTutorDBData::tasklist(int index) const {
  return tasklist_.Get(index);
}
inline ::proto_ff::OperationTutoraskDBData* OperationTutorDBData::mutable_tasklist(int index) {
  return tasklist_.Mutable(index);
}
inline ::proto_ff::OperationTutoraskDBData* OperationTutorDBData::add_tasklist() {
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutoraskDBData >&
OperationTutorDBData::tasklist() const {
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutoraskDBData >*
OperationTutorDBData::mutable_tasklist() {
  return &tasklist_;
}

// -------------------------------------------------------------------

// limitInfo

// optional uint64 id = 1;
inline bool limitInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void limitInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void limitInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void limitInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 limitInfo::id() const {
  return id_;
}
inline void limitInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.ComPair64 infos = 2;
inline int limitInfo::infos_size() const {
  return infos_.size();
}
inline void limitInfo::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::ComPair64& limitInfo::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::ComPair64* limitInfo::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::ComPair64* limitInfo::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
limitInfo::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
limitInfo::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// FestivalWorldBossData

// optional uint64 activeId = 1;
inline bool FestivalWorldBossData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FestivalWorldBossData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FestivalWorldBossData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FestivalWorldBossData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 FestivalWorldBossData::activeid() const {
  return activeid_;
}
inline void FestivalWorldBossData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.ComPair getState = 2;
inline int FestivalWorldBossData::getstate_size() const {
  return getstate_.size();
}
inline void FestivalWorldBossData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& FestivalWorldBossData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* FestivalWorldBossData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* FestivalWorldBossData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
FestivalWorldBossData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
FestivalWorldBossData::mutable_getstate() {
  return &getstate_;
}

// -------------------------------------------------------------------

// OperateCommonEntryData

// optional uint64 id = 1;
inline bool OperateCommonEntryData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateCommonEntryData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateCommonEntryData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateCommonEntryData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OperateCommonEntryData::id() const {
  return id_;
}
inline void OperateCommonEntryData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 state = 2;
inline bool OperateCommonEntryData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateCommonEntryData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateCommonEntryData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateCommonEntryData::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 OperateCommonEntryData::state() const {
  return state_;
}
inline void OperateCommonEntryData::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int64 value = 3;
inline bool OperateCommonEntryData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateCommonEntryData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateCommonEntryData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateCommonEntryData::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 OperateCommonEntryData::value() const {
  return value_;
}
inline void OperateCommonEntryData::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// OperateWingGiftData

// optional uint64 activeId = 1;
inline bool OperateWingGiftData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateWingGiftData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateWingGiftData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateWingGiftData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 OperateWingGiftData::activeid() const {
  return activeid_;
}
inline void OperateWingGiftData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.OperateCommonEntryData entrys = 2;
inline int OperateWingGiftData::entrys_size() const {
  return entrys_.size();
}
inline void OperateWingGiftData::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::OperateCommonEntryData& OperateWingGiftData::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::OperateCommonEntryData* OperateWingGiftData::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::OperateCommonEntryData* OperateWingGiftData::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >&
OperateWingGiftData::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >*
OperateWingGiftData::mutable_entrys() {
  return &entrys_;
}

// optional int64 refreshTime = 3;
inline bool OperateWingGiftData::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateWingGiftData::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateWingGiftData::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateWingGiftData::clear_refreshtime() {
  refreshtime_ = GOOGLE_LONGLONG(0);
  clear_has_refreshtime();
}
inline ::google::protobuf::int64 OperateWingGiftData::refreshtime() const {
  return refreshtime_;
}
inline void OperateWingGiftData::set_refreshtime(::google::protobuf::int64 value) {
  set_has_refreshtime();
  refreshtime_ = value;
}

// optional int32 loginDay = 4;
inline bool OperateWingGiftData::has_loginday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperateWingGiftData::set_has_loginday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperateWingGiftData::clear_has_loginday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperateWingGiftData::clear_loginday() {
  loginday_ = 0;
  clear_has_loginday();
}
inline ::google::protobuf::int32 OperateWingGiftData::loginday() const {
  return loginday_;
}
inline void OperateWingGiftData::set_loginday(::google::protobuf::int32 value) {
  set_has_loginday();
  loginday_ = value;
}

// -------------------------------------------------------------------

// OperateRechargeGiftData

// optional uint64 activeId = 1;
inline bool OperateRechargeGiftData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateRechargeGiftData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateRechargeGiftData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateRechargeGiftData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 OperateRechargeGiftData::activeid() const {
  return activeid_;
}
inline void OperateRechargeGiftData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// repeated .proto_ff.OperateCommonEntryData entrys = 2;
inline int OperateRechargeGiftData::entrys_size() const {
  return entrys_.size();
}
inline void OperateRechargeGiftData::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::OperateCommonEntryData& OperateRechargeGiftData::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::OperateCommonEntryData* OperateRechargeGiftData::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::OperateCommonEntryData* OperateRechargeGiftData::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >&
OperateRechargeGiftData::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperateCommonEntryData >*
OperateRechargeGiftData::mutable_entrys() {
  return &entrys_;
}

// optional int32 rechargeRmb = 3;
inline bool OperateRechargeGiftData::has_rechargermb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateRechargeGiftData::set_has_rechargermb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateRechargeGiftData::clear_has_rechargermb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateRechargeGiftData::clear_rechargermb() {
  rechargermb_ = 0;
  clear_has_rechargermb();
}
inline ::google::protobuf::int32 OperateRechargeGiftData::rechargermb() const {
  return rechargermb_;
}
inline void OperateRechargeGiftData::set_rechargermb(::google::protobuf::int32 value) {
  set_has_rechargermb();
  rechargermb_ = value;
}

// -------------------------------------------------------------------

// CharacterDBOperateData

// repeated .proto_ff.WelfareDailySignInDBData signInData = 1;
inline int CharacterDBOperateData::signindata_size() const {
  return signindata_.size();
}
inline void CharacterDBOperateData::clear_signindata() {
  signindata_.Clear();
}
inline const ::proto_ff::WelfareDailySignInDBData& CharacterDBOperateData::signindata(int index) const {
  return signindata_.Get(index);
}
inline ::proto_ff::WelfareDailySignInDBData* CharacterDBOperateData::mutable_signindata(int index) {
  return signindata_.Mutable(index);
}
inline ::proto_ff::WelfareDailySignInDBData* CharacterDBOperateData::add_signindata() {
  return signindata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareDailySignInDBData >&
CharacterDBOperateData::signindata() const {
  return signindata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareDailySignInDBData >*
CharacterDBOperateData::mutable_signindata() {
  return &signindata_;
}

// repeated .proto_ff.WelfareLoginGiftDBData loginGiftData = 2;
inline int CharacterDBOperateData::logingiftdata_size() const {
  return logingiftdata_.size();
}
inline void CharacterDBOperateData::clear_logingiftdata() {
  logingiftdata_.Clear();
}
inline const ::proto_ff::WelfareLoginGiftDBData& CharacterDBOperateData::logingiftdata(int index) const {
  return logingiftdata_.Get(index);
}
inline ::proto_ff::WelfareLoginGiftDBData* CharacterDBOperateData::mutable_logingiftdata(int index) {
  return logingiftdata_.Mutable(index);
}
inline ::proto_ff::WelfareLoginGiftDBData* CharacterDBOperateData::add_logingiftdata() {
  return logingiftdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLoginGiftDBData >&
CharacterDBOperateData::logingiftdata() const {
  return logingiftdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLoginGiftDBData >*
CharacterDBOperateData::mutable_logingiftdata() {
  return &logingiftdata_;
}

// repeated .proto_ff.WelfareLevelGiftDBData levelGiftData = 3;
inline int CharacterDBOperateData::levelgiftdata_size() const {
  return levelgiftdata_.size();
}
inline void CharacterDBOperateData::clear_levelgiftdata() {
  levelgiftdata_.Clear();
}
inline const ::proto_ff::WelfareLevelGiftDBData& CharacterDBOperateData::levelgiftdata(int index) const {
  return levelgiftdata_.Get(index);
}
inline ::proto_ff::WelfareLevelGiftDBData* CharacterDBOperateData::mutable_levelgiftdata(int index) {
  return levelgiftdata_.Mutable(index);
}
inline ::proto_ff::WelfareLevelGiftDBData* CharacterDBOperateData::add_levelgiftdata() {
  return levelgiftdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLevelGiftDBData >&
CharacterDBOperateData::levelgiftdata() const {
  return levelgiftdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareLevelGiftDBData >*
CharacterDBOperateData::mutable_levelgiftdata() {
  return &levelgiftdata_;
}

// repeated .proto_ff.LimitShopData shopData = 4;
inline int CharacterDBOperateData::shopdata_size() const {
  return shopdata_.size();
}
inline void CharacterDBOperateData::clear_shopdata() {
  shopdata_.Clear();
}
inline const ::proto_ff::LimitShopData& CharacterDBOperateData::shopdata(int index) const {
  return shopdata_.Get(index);
}
inline ::proto_ff::LimitShopData* CharacterDBOperateData::mutable_shopdata(int index) {
  return shopdata_.Mutable(index);
}
inline ::proto_ff::LimitShopData* CharacterDBOperateData::add_shopdata() {
  return shopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopData >&
CharacterDBOperateData::shopdata() const {
  return shopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitShopData >*
CharacterDBOperateData::mutable_shopdata() {
  return &shopdata_;
}

// repeated .proto_ff.LimitTaskData taskData = 5;
inline int CharacterDBOperateData::taskdata_size() const {
  return taskdata_.size();
}
inline void CharacterDBOperateData::clear_taskdata() {
  taskdata_.Clear();
}
inline const ::proto_ff::LimitTaskData& CharacterDBOperateData::taskdata(int index) const {
  return taskdata_.Get(index);
}
inline ::proto_ff::LimitTaskData* CharacterDBOperateData::mutable_taskdata(int index) {
  return taskdata_.Mutable(index);
}
inline ::proto_ff::LimitTaskData* CharacterDBOperateData::add_taskdata() {
  return taskdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskData >&
CharacterDBOperateData::taskdata() const {
  return taskdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitTaskData >*
CharacterDBOperateData::mutable_taskdata() {
  return &taskdata_;
}

// repeated .proto_ff.WishDBData wishData = 6;
inline int CharacterDBOperateData::wishdata_size() const {
  return wishdata_.size();
}
inline void CharacterDBOperateData::clear_wishdata() {
  wishdata_.Clear();
}
inline const ::proto_ff::WishDBData& CharacterDBOperateData::wishdata(int index) const {
  return wishdata_.Get(index);
}
inline ::proto_ff::WishDBData* CharacterDBOperateData::mutable_wishdata(int index) {
  return wishdata_.Mutable(index);
}
inline ::proto_ff::WishDBData* CharacterDBOperateData::add_wishdata() {
  return wishdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBData >&
CharacterDBOperateData::wishdata() const {
  return wishdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WishDBData >*
CharacterDBOperateData::mutable_wishdata() {
  return &wishdata_;
}

// optional .proto_ff.OperateDailyRechargeData dailyRecharge = 7;
inline bool CharacterDBOperateData::has_dailyrecharge() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBOperateData::set_has_dailyrecharge() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBOperateData::clear_has_dailyrecharge() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBOperateData::clear_dailyrecharge() {
  if (dailyrecharge_ != NULL) dailyrecharge_->::proto_ff::OperateDailyRechargeData::Clear();
  clear_has_dailyrecharge();
}
inline const ::proto_ff::OperateDailyRechargeData& CharacterDBOperateData::dailyrecharge() const {
  return dailyrecharge_ != NULL ? *dailyrecharge_ : *default_instance_->dailyrecharge_;
}
inline ::proto_ff::OperateDailyRechargeData* CharacterDBOperateData::mutable_dailyrecharge() {
  set_has_dailyrecharge();
  if (dailyrecharge_ == NULL) dailyrecharge_ = new ::proto_ff::OperateDailyRechargeData;
  return dailyrecharge_;
}
inline ::proto_ff::OperateDailyRechargeData* CharacterDBOperateData::release_dailyrecharge() {
  clear_has_dailyrecharge();
  ::proto_ff::OperateDailyRechargeData* temp = dailyrecharge_;
  dailyrecharge_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_dailyrecharge(::proto_ff::OperateDailyRechargeData* dailyrecharge) {
  delete dailyrecharge_;
  dailyrecharge_ = dailyrecharge;
  if (dailyrecharge) {
    set_has_dailyrecharge();
  } else {
    clear_has_dailyrecharge();
  }
}

// optional .proto_ff.OperateFirstRechargeData firstRecharge = 8;
inline bool CharacterDBOperateData::has_firstrecharge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBOperateData::set_has_firstrecharge() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBOperateData::clear_has_firstrecharge() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBOperateData::clear_firstrecharge() {
  if (firstrecharge_ != NULL) firstrecharge_->::proto_ff::OperateFirstRechargeData::Clear();
  clear_has_firstrecharge();
}
inline const ::proto_ff::OperateFirstRechargeData& CharacterDBOperateData::firstrecharge() const {
  return firstrecharge_ != NULL ? *firstrecharge_ : *default_instance_->firstrecharge_;
}
inline ::proto_ff::OperateFirstRechargeData* CharacterDBOperateData::mutable_firstrecharge() {
  set_has_firstrecharge();
  if (firstrecharge_ == NULL) firstrecharge_ = new ::proto_ff::OperateFirstRechargeData;
  return firstrecharge_;
}
inline ::proto_ff::OperateFirstRechargeData* CharacterDBOperateData::release_firstrecharge() {
  clear_has_firstrecharge();
  ::proto_ff::OperateFirstRechargeData* temp = firstrecharge_;
  firstrecharge_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_firstrecharge(::proto_ff::OperateFirstRechargeData* firstrecharge) {
  delete firstrecharge_;
  firstrecharge_ = firstrecharge;
  if (firstrecharge) {
    set_has_firstrecharge();
  } else {
    clear_has_firstrecharge();
  }
}

// optional .proto_ff.OperateMoonCardData moonCard = 9;
inline bool CharacterDBOperateData::has_mooncard() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBOperateData::set_has_mooncard() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBOperateData::clear_has_mooncard() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBOperateData::clear_mooncard() {
  if (mooncard_ != NULL) mooncard_->::proto_ff::OperateMoonCardData::Clear();
  clear_has_mooncard();
}
inline const ::proto_ff::OperateMoonCardData& CharacterDBOperateData::mooncard() const {
  return mooncard_ != NULL ? *mooncard_ : *default_instance_->mooncard_;
}
inline ::proto_ff::OperateMoonCardData* CharacterDBOperateData::mutable_mooncard() {
  set_has_mooncard();
  if (mooncard_ == NULL) mooncard_ = new ::proto_ff::OperateMoonCardData;
  return mooncard_;
}
inline ::proto_ff::OperateMoonCardData* CharacterDBOperateData::release_mooncard() {
  clear_has_mooncard();
  ::proto_ff::OperateMoonCardData* temp = mooncard_;
  mooncard_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_mooncard(::proto_ff::OperateMoonCardData* mooncard) {
  delete mooncard_;
  mooncard_ = mooncard;
  if (mooncard) {
    set_has_mooncard();
  } else {
    clear_has_mooncard();
  }
}

// optional .proto_ff.OperateFundData noviceFund = 10;
inline bool CharacterDBOperateData::has_novicefund() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterDBOperateData::set_has_novicefund() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterDBOperateData::clear_has_novicefund() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterDBOperateData::clear_novicefund() {
  if (novicefund_ != NULL) novicefund_->::proto_ff::OperateFundData::Clear();
  clear_has_novicefund();
}
inline const ::proto_ff::OperateFundData& CharacterDBOperateData::novicefund() const {
  return novicefund_ != NULL ? *novicefund_ : *default_instance_->novicefund_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::mutable_novicefund() {
  set_has_novicefund();
  if (novicefund_ == NULL) novicefund_ = new ::proto_ff::OperateFundData;
  return novicefund_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::release_novicefund() {
  clear_has_novicefund();
  ::proto_ff::OperateFundData* temp = novicefund_;
  novicefund_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_novicefund(::proto_ff::OperateFundData* novicefund) {
  delete novicefund_;
  novicefund_ = novicefund;
  if (novicefund) {
    set_has_novicefund();
  } else {
    clear_has_novicefund();
  }
}

// optional .proto_ff.OperateFundData growthFund = 11;
inline bool CharacterDBOperateData::has_growthfund() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterDBOperateData::set_has_growthfund() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterDBOperateData::clear_has_growthfund() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterDBOperateData::clear_growthfund() {
  if (growthfund_ != NULL) growthfund_->::proto_ff::OperateFundData::Clear();
  clear_has_growthfund();
}
inline const ::proto_ff::OperateFundData& CharacterDBOperateData::growthfund() const {
  return growthfund_ != NULL ? *growthfund_ : *default_instance_->growthfund_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::mutable_growthfund() {
  set_has_growthfund();
  if (growthfund_ == NULL) growthfund_ = new ::proto_ff::OperateFundData;
  return growthfund_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::release_growthfund() {
  clear_has_growthfund();
  ::proto_ff::OperateFundData* temp = growthfund_;
  growthfund_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_growthfund(::proto_ff::OperateFundData* growthfund) {
  delete growthfund_;
  growthfund_ = growthfund;
  if (growthfund) {
    set_has_growthfund();
  } else {
    clear_has_growthfund();
  }
}

// optional .proto_ff.OperateFundData dreamFund = 12;
inline bool CharacterDBOperateData::has_dreamfund() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterDBOperateData::set_has_dreamfund() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterDBOperateData::clear_has_dreamfund() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterDBOperateData::clear_dreamfund() {
  if (dreamfund_ != NULL) dreamfund_->::proto_ff::OperateFundData::Clear();
  clear_has_dreamfund();
}
inline const ::proto_ff::OperateFundData& CharacterDBOperateData::dreamfund() const {
  return dreamfund_ != NULL ? *dreamfund_ : *default_instance_->dreamfund_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::mutable_dreamfund() {
  set_has_dreamfund();
  if (dreamfund_ == NULL) dreamfund_ = new ::proto_ff::OperateFundData;
  return dreamfund_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::release_dreamfund() {
  clear_has_dreamfund();
  ::proto_ff::OperateFundData* temp = dreamfund_;
  dreamfund_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_dreamfund(::proto_ff::OperateFundData* dreamfund) {
  delete dreamfund_;
  dreamfund_ = dreamfund;
  if (dreamfund) {
    set_has_dreamfund();
  } else {
    clear_has_dreamfund();
  }
}

// optional .proto_ff.OperateFundData noviceFundHigh = 13;
inline bool CharacterDBOperateData::has_novicefundhigh() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterDBOperateData::set_has_novicefundhigh() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterDBOperateData::clear_has_novicefundhigh() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterDBOperateData::clear_novicefundhigh() {
  if (novicefundhigh_ != NULL) novicefundhigh_->::proto_ff::OperateFundData::Clear();
  clear_has_novicefundhigh();
}
inline const ::proto_ff::OperateFundData& CharacterDBOperateData::novicefundhigh() const {
  return novicefundhigh_ != NULL ? *novicefundhigh_ : *default_instance_->novicefundhigh_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::mutable_novicefundhigh() {
  set_has_novicefundhigh();
  if (novicefundhigh_ == NULL) novicefundhigh_ = new ::proto_ff::OperateFundData;
  return novicefundhigh_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::release_novicefundhigh() {
  clear_has_novicefundhigh();
  ::proto_ff::OperateFundData* temp = novicefundhigh_;
  novicefundhigh_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_novicefundhigh(::proto_ff::OperateFundData* novicefundhigh) {
  delete novicefundhigh_;
  novicefundhigh_ = novicefundhigh;
  if (novicefundhigh) {
    set_has_novicefundhigh();
  } else {
    clear_has_novicefundhigh();
  }
}

// optional .proto_ff.OperateFundData growthFundHigh = 14;
inline bool CharacterDBOperateData::has_growthfundhigh() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterDBOperateData::set_has_growthfundhigh() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterDBOperateData::clear_has_growthfundhigh() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterDBOperateData::clear_growthfundhigh() {
  if (growthfundhigh_ != NULL) growthfundhigh_->::proto_ff::OperateFundData::Clear();
  clear_has_growthfundhigh();
}
inline const ::proto_ff::OperateFundData& CharacterDBOperateData::growthfundhigh() const {
  return growthfundhigh_ != NULL ? *growthfundhigh_ : *default_instance_->growthfundhigh_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::mutable_growthfundhigh() {
  set_has_growthfundhigh();
  if (growthfundhigh_ == NULL) growthfundhigh_ = new ::proto_ff::OperateFundData;
  return growthfundhigh_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::release_growthfundhigh() {
  clear_has_growthfundhigh();
  ::proto_ff::OperateFundData* temp = growthfundhigh_;
  growthfundhigh_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_growthfundhigh(::proto_ff::OperateFundData* growthfundhigh) {
  delete growthfundhigh_;
  growthfundhigh_ = growthfundhigh;
  if (growthfundhigh) {
    set_has_growthfundhigh();
  } else {
    clear_has_growthfundhigh();
  }
}

// optional .proto_ff.OperateFundData dreamFundHigh = 15;
inline bool CharacterDBOperateData::has_dreamfundhigh() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharacterDBOperateData::set_has_dreamfundhigh() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharacterDBOperateData::clear_has_dreamfundhigh() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharacterDBOperateData::clear_dreamfundhigh() {
  if (dreamfundhigh_ != NULL) dreamfundhigh_->::proto_ff::OperateFundData::Clear();
  clear_has_dreamfundhigh();
}
inline const ::proto_ff::OperateFundData& CharacterDBOperateData::dreamfundhigh() const {
  return dreamfundhigh_ != NULL ? *dreamfundhigh_ : *default_instance_->dreamfundhigh_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::mutable_dreamfundhigh() {
  set_has_dreamfundhigh();
  if (dreamfundhigh_ == NULL) dreamfundhigh_ = new ::proto_ff::OperateFundData;
  return dreamfundhigh_;
}
inline ::proto_ff::OperateFundData* CharacterDBOperateData::release_dreamfundhigh() {
  clear_has_dreamfundhigh();
  ::proto_ff::OperateFundData* temp = dreamfundhigh_;
  dreamfundhigh_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_dreamfundhigh(::proto_ff::OperateFundData* dreamfundhigh) {
  delete dreamfundhigh_;
  dreamfundhigh_ = dreamfundhigh;
  if (dreamfundhigh) {
    set_has_dreamfundhigh();
  } else {
    clear_has_dreamfundhigh();
  }
}

// repeated .proto_ff.FestivalInvestDBData fInvestDBData = 16;
inline int CharacterDBOperateData::finvestdbdata_size() const {
  return finvestdbdata_.size();
}
inline void CharacterDBOperateData::clear_finvestdbdata() {
  finvestdbdata_.Clear();
}
inline const ::proto_ff::FestivalInvestDBData& CharacterDBOperateData::finvestdbdata(int index) const {
  return finvestdbdata_.Get(index);
}
inline ::proto_ff::FestivalInvestDBData* CharacterDBOperateData::mutable_finvestdbdata(int index) {
  return finvestdbdata_.Mutable(index);
}
inline ::proto_ff::FestivalInvestDBData* CharacterDBOperateData::add_finvestdbdata() {
  return finvestdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalInvestDBData >&
CharacterDBOperateData::finvestdbdata() const {
  return finvestdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalInvestDBData >*
CharacterDBOperateData::mutable_finvestdbdata() {
  return &finvestdbdata_;
}

// repeated .proto_ff.FestivalExchangeDBData fExchangeDBData = 17;
inline int CharacterDBOperateData::fexchangedbdata_size() const {
  return fexchangedbdata_.size();
}
inline void CharacterDBOperateData::clear_fexchangedbdata() {
  fexchangedbdata_.Clear();
}
inline const ::proto_ff::FestivalExchangeDBData& CharacterDBOperateData::fexchangedbdata(int index) const {
  return fexchangedbdata_.Get(index);
}
inline ::proto_ff::FestivalExchangeDBData* CharacterDBOperateData::mutable_fexchangedbdata(int index) {
  return fexchangedbdata_.Mutable(index);
}
inline ::proto_ff::FestivalExchangeDBData* CharacterDBOperateData::add_fexchangedbdata() {
  return fexchangedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalExchangeDBData >&
CharacterDBOperateData::fexchangedbdata() const {
  return fexchangedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalExchangeDBData >*
CharacterDBOperateData::mutable_fexchangedbdata() {
  return &fexchangedbdata_;
}

// repeated .proto_ff.FestivalLoginDBData fLoginDBData = 18;
inline int CharacterDBOperateData::flogindbdata_size() const {
  return flogindbdata_.size();
}
inline void CharacterDBOperateData::clear_flogindbdata() {
  flogindbdata_.Clear();
}
inline const ::proto_ff::FestivalLoginDBData& CharacterDBOperateData::flogindbdata(int index) const {
  return flogindbdata_.Get(index);
}
inline ::proto_ff::FestivalLoginDBData* CharacterDBOperateData::mutable_flogindbdata(int index) {
  return flogindbdata_.Mutable(index);
}
inline ::proto_ff::FestivalLoginDBData* CharacterDBOperateData::add_flogindbdata() {
  return flogindbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalLoginDBData >&
CharacterDBOperateData::flogindbdata() const {
  return flogindbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalLoginDBData >*
CharacterDBOperateData::mutable_flogindbdata() {
  return &flogindbdata_;
}

// repeated .proto_ff.FestivalTotalRechargeDBData fRechargeDBData = 19;
inline int CharacterDBOperateData::frechargedbdata_size() const {
  return frechargedbdata_.size();
}
inline void CharacterDBOperateData::clear_frechargedbdata() {
  frechargedbdata_.Clear();
}
inline const ::proto_ff::FestivalTotalRechargeDBData& CharacterDBOperateData::frechargedbdata(int index) const {
  return frechargedbdata_.Get(index);
}
inline ::proto_ff::FestivalTotalRechargeDBData* CharacterDBOperateData::mutable_frechargedbdata(int index) {
  return frechargedbdata_.Mutable(index);
}
inline ::proto_ff::FestivalTotalRechargeDBData* CharacterDBOperateData::add_frechargedbdata() {
  return frechargedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalTotalRechargeDBData >&
CharacterDBOperateData::frechargedbdata() const {
  return frechargedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalTotalRechargeDBData >*
CharacterDBOperateData::mutable_frechargedbdata() {
  return &frechargedbdata_;
}

// repeated .proto_ff.FestivalConsumptionDBData fConsumptionDBData = 20;
inline int CharacterDBOperateData::fconsumptiondbdata_size() const {
  return fconsumptiondbdata_.size();
}
inline void CharacterDBOperateData::clear_fconsumptiondbdata() {
  fconsumptiondbdata_.Clear();
}
inline const ::proto_ff::FestivalConsumptionDBData& CharacterDBOperateData::fconsumptiondbdata(int index) const {
  return fconsumptiondbdata_.Get(index);
}
inline ::proto_ff::FestivalConsumptionDBData* CharacterDBOperateData::mutable_fconsumptiondbdata(int index) {
  return fconsumptiondbdata_.Mutable(index);
}
inline ::proto_ff::FestivalConsumptionDBData* CharacterDBOperateData::add_fconsumptiondbdata() {
  return fconsumptiondbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalConsumptionDBData >&
CharacterDBOperateData::fconsumptiondbdata() const {
  return fconsumptiondbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalConsumptionDBData >*
CharacterDBOperateData::mutable_fconsumptiondbdata() {
  return &fconsumptiondbdata_;
}

// repeated .proto_ff.FestivalFirstRechargeDBData fFirstRechargeDBData = 21;
inline int CharacterDBOperateData::ffirstrechargedbdata_size() const {
  return ffirstrechargedbdata_.size();
}
inline void CharacterDBOperateData::clear_ffirstrechargedbdata() {
  ffirstrechargedbdata_.Clear();
}
inline const ::proto_ff::FestivalFirstRechargeDBData& CharacterDBOperateData::ffirstrechargedbdata(int index) const {
  return ffirstrechargedbdata_.Get(index);
}
inline ::proto_ff::FestivalFirstRechargeDBData* CharacterDBOperateData::mutable_ffirstrechargedbdata(int index) {
  return ffirstrechargedbdata_.Mutable(index);
}
inline ::proto_ff::FestivalFirstRechargeDBData* CharacterDBOperateData::add_ffirstrechargedbdata() {
  return ffirstrechargedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalFirstRechargeDBData >&
CharacterDBOperateData::ffirstrechargedbdata() const {
  return ffirstrechargedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalFirstRechargeDBData >*
CharacterDBOperateData::mutable_ffirstrechargedbdata() {
  return &ffirstrechargedbdata_;
}

// repeated .proto_ff.FestivalYanHuaDBData fYanHuaDBData = 22;
inline int CharacterDBOperateData::fyanhuadbdata_size() const {
  return fyanhuadbdata_.size();
}
inline void CharacterDBOperateData::clear_fyanhuadbdata() {
  fyanhuadbdata_.Clear();
}
inline const ::proto_ff::FestivalYanHuaDBData& CharacterDBOperateData::fyanhuadbdata(int index) const {
  return fyanhuadbdata_.Get(index);
}
inline ::proto_ff::FestivalYanHuaDBData* CharacterDBOperateData::mutable_fyanhuadbdata(int index) {
  return fyanhuadbdata_.Mutable(index);
}
inline ::proto_ff::FestivalYanHuaDBData* CharacterDBOperateData::add_fyanhuadbdata() {
  return fyanhuadbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalYanHuaDBData >&
CharacterDBOperateData::fyanhuadbdata() const {
  return fyanhuadbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalYanHuaDBData >*
CharacterDBOperateData::mutable_fyanhuadbdata() {
  return &fyanhuadbdata_;
}

// repeated .proto_ff.FestivalShopDBData fShopDBData = 23;
inline int CharacterDBOperateData::fshopdbdata_size() const {
  return fshopdbdata_.size();
}
inline void CharacterDBOperateData::clear_fshopdbdata() {
  fshopdbdata_.Clear();
}
inline const ::proto_ff::FestivalShopDBData& CharacterDBOperateData::fshopdbdata(int index) const {
  return fshopdbdata_.Get(index);
}
inline ::proto_ff::FestivalShopDBData* CharacterDBOperateData::mutable_fshopdbdata(int index) {
  return fshopdbdata_.Mutable(index);
}
inline ::proto_ff::FestivalShopDBData* CharacterDBOperateData::add_fshopdbdata() {
  return fshopdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalShopDBData >&
CharacterDBOperateData::fshopdbdata() const {
  return fshopdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalShopDBData >*
CharacterDBOperateData::mutable_fshopdbdata() {
  return &fshopdbdata_;
}

// repeated .proto_ff.LimitGiftActiveDBData limitGiftDBData = 24;
inline int CharacterDBOperateData::limitgiftdbdata_size() const {
  return limitgiftdbdata_.size();
}
inline void CharacterDBOperateData::clear_limitgiftdbdata() {
  limitgiftdbdata_.Clear();
}
inline const ::proto_ff::LimitGiftActiveDBData& CharacterDBOperateData::limitgiftdbdata(int index) const {
  return limitgiftdbdata_.Get(index);
}
inline ::proto_ff::LimitGiftActiveDBData* CharacterDBOperateData::mutable_limitgiftdbdata(int index) {
  return limitgiftdbdata_.Mutable(index);
}
inline ::proto_ff::LimitGiftActiveDBData* CharacterDBOperateData::add_limitgiftdbdata() {
  return limitgiftdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftActiveDBData >&
CharacterDBOperateData::limitgiftdbdata() const {
  return limitgiftdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::LimitGiftActiveDBData >*
CharacterDBOperateData::mutable_limitgiftdbdata() {
  return &limitgiftdbdata_;
}

// repeated .proto_ff.HoroscopeActiveDBData horoscopeDBData = 25;
inline int CharacterDBOperateData::horoscopedbdata_size() const {
  return horoscopedbdata_.size();
}
inline void CharacterDBOperateData::clear_horoscopedbdata() {
  horoscopedbdata_.Clear();
}
inline const ::proto_ff::HoroscopeActiveDBData& CharacterDBOperateData::horoscopedbdata(int index) const {
  return horoscopedbdata_.Get(index);
}
inline ::proto_ff::HoroscopeActiveDBData* CharacterDBOperateData::mutable_horoscopedbdata(int index) {
  return horoscopedbdata_.Mutable(index);
}
inline ::proto_ff::HoroscopeActiveDBData* CharacterDBOperateData::add_horoscopedbdata() {
  return horoscopedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeActiveDBData >&
CharacterDBOperateData::horoscopedbdata() const {
  return horoscopedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HoroscopeActiveDBData >*
CharacterDBOperateData::mutable_horoscopedbdata() {
  return &horoscopedbdata_;
}

// repeated .proto_ff.FRechargeActiveDBData festivalRechargeDBData = 26;
inline int CharacterDBOperateData::festivalrechargedbdata_size() const {
  return festivalrechargedbdata_.size();
}
inline void CharacterDBOperateData::clear_festivalrechargedbdata() {
  festivalrechargedbdata_.Clear();
}
inline const ::proto_ff::FRechargeActiveDBData& CharacterDBOperateData::festivalrechargedbdata(int index) const {
  return festivalrechargedbdata_.Get(index);
}
inline ::proto_ff::FRechargeActiveDBData* CharacterDBOperateData::mutable_festivalrechargedbdata(int index) {
  return festivalrechargedbdata_.Mutable(index);
}
inline ::proto_ff::FRechargeActiveDBData* CharacterDBOperateData::add_festivalrechargedbdata() {
  return festivalrechargedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeActiveDBData >&
CharacterDBOperateData::festivalrechargedbdata() const {
  return festivalrechargedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FRechargeActiveDBData >*
CharacterDBOperateData::mutable_festivalrechargedbdata() {
  return &festivalrechargedbdata_;
}

// repeated .proto_ff.FestivalSmashEggDBData fSmashEggDBData = 27;
inline int CharacterDBOperateData::fsmasheggdbdata_size() const {
  return fsmasheggdbdata_.size();
}
inline void CharacterDBOperateData::clear_fsmasheggdbdata() {
  fsmasheggdbdata_.Clear();
}
inline const ::proto_ff::FestivalSmashEggDBData& CharacterDBOperateData::fsmasheggdbdata(int index) const {
  return fsmasheggdbdata_.Get(index);
}
inline ::proto_ff::FestivalSmashEggDBData* CharacterDBOperateData::mutable_fsmasheggdbdata(int index) {
  return fsmasheggdbdata_.Mutable(index);
}
inline ::proto_ff::FestivalSmashEggDBData* CharacterDBOperateData::add_fsmasheggdbdata() {
  return fsmasheggdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSmashEggDBData >&
CharacterDBOperateData::fsmasheggdbdata() const {
  return fsmasheggdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSmashEggDBData >*
CharacterDBOperateData::mutable_fsmasheggdbdata() {
  return &fsmasheggdbdata_;
}

// repeated .proto_ff.ComPair64 redPointClickData = 28;
inline int CharacterDBOperateData::redpointclickdata_size() const {
  return redpointclickdata_.size();
}
inline void CharacterDBOperateData::clear_redpointclickdata() {
  redpointclickdata_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBOperateData::redpointclickdata(int index) const {
  return redpointclickdata_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBOperateData::mutable_redpointclickdata(int index) {
  return redpointclickdata_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBOperateData::add_redpointclickdata() {
  return redpointclickdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBOperateData::redpointclickdata() const {
  return redpointclickdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBOperateData::mutable_redpointclickdata() {
  return &redpointclickdata_;
}

// repeated .proto_ff.WelfareVipGiftDBData wVipDBData = 29;
inline int CharacterDBOperateData::wvipdbdata_size() const {
  return wvipdbdata_.size();
}
inline void CharacterDBOperateData::clear_wvipdbdata() {
  wvipdbdata_.Clear();
}
inline const ::proto_ff::WelfareVipGiftDBData& CharacterDBOperateData::wvipdbdata(int index) const {
  return wvipdbdata_.Get(index);
}
inline ::proto_ff::WelfareVipGiftDBData* CharacterDBOperateData::mutable_wvipdbdata(int index) {
  return wvipdbdata_.Mutable(index);
}
inline ::proto_ff::WelfareVipGiftDBData* CharacterDBOperateData::add_wvipdbdata() {
  return wvipdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareVipGiftDBData >&
CharacterDBOperateData::wvipdbdata() const {
  return wvipdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareVipGiftDBData >*
CharacterDBOperateData::mutable_wvipdbdata() {
  return &wvipdbdata_;
}

// repeated .proto_ff.WelfareOnlineGiftDBData wOnlineDBData = 30;
inline int CharacterDBOperateData::wonlinedbdata_size() const {
  return wonlinedbdata_.size();
}
inline void CharacterDBOperateData::clear_wonlinedbdata() {
  wonlinedbdata_.Clear();
}
inline const ::proto_ff::WelfareOnlineGiftDBData& CharacterDBOperateData::wonlinedbdata(int index) const {
  return wonlinedbdata_.Get(index);
}
inline ::proto_ff::WelfareOnlineGiftDBData* CharacterDBOperateData::mutable_wonlinedbdata(int index) {
  return wonlinedbdata_.Mutable(index);
}
inline ::proto_ff::WelfareOnlineGiftDBData* CharacterDBOperateData::add_wonlinedbdata() {
  return wonlinedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineGiftDBData >&
CharacterDBOperateData::wonlinedbdata() const {
  return wonlinedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WelfareOnlineGiftDBData >*
CharacterDBOperateData::mutable_wonlinedbdata() {
  return &wonlinedbdata_;
}

// repeated .proto_ff.FestivalKillBossData fBossDBData = 31;
inline int CharacterDBOperateData::fbossdbdata_size() const {
  return fbossdbdata_.size();
}
inline void CharacterDBOperateData::clear_fbossdbdata() {
  fbossdbdata_.Clear();
}
inline const ::proto_ff::FestivalKillBossData& CharacterDBOperateData::fbossdbdata(int index) const {
  return fbossdbdata_.Get(index);
}
inline ::proto_ff::FestivalKillBossData* CharacterDBOperateData::mutable_fbossdbdata(int index) {
  return fbossdbdata_.Mutable(index);
}
inline ::proto_ff::FestivalKillBossData* CharacterDBOperateData::add_fbossdbdata() {
  return fbossdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalKillBossData >&
CharacterDBOperateData::fbossdbdata() const {
  return fbossdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalKillBossData >*
CharacterDBOperateData::mutable_fbossdbdata() {
  return &fbossdbdata_;
}

// repeated .proto_ff.FestivalHuoYueDuDBData fHuoYueDuDBData = 32;
inline int CharacterDBOperateData::fhuoyuedudbdata_size() const {
  return fhuoyuedudbdata_.size();
}
inline void CharacterDBOperateData::clear_fhuoyuedudbdata() {
  fhuoyuedudbdata_.Clear();
}
inline const ::proto_ff::FestivalHuoYueDuDBData& CharacterDBOperateData::fhuoyuedudbdata(int index) const {
  return fhuoyuedudbdata_.Get(index);
}
inline ::proto_ff::FestivalHuoYueDuDBData* CharacterDBOperateData::mutable_fhuoyuedudbdata(int index) {
  return fhuoyuedudbdata_.Mutable(index);
}
inline ::proto_ff::FestivalHuoYueDuDBData* CharacterDBOperateData::add_fhuoyuedudbdata() {
  return fhuoyuedudbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalHuoYueDuDBData >&
CharacterDBOperateData::fhuoyuedudbdata() const {
  return fhuoyuedudbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalHuoYueDuDBData >*
CharacterDBOperateData::mutable_fhuoyuedudbdata() {
  return &fhuoyuedudbdata_;
}

// repeated .proto_ff.OperationTurntableDBData fTurntableDBData = 33;
inline int CharacterDBOperateData::fturntabledbdata_size() const {
  return fturntabledbdata_.size();
}
inline void CharacterDBOperateData::clear_fturntabledbdata() {
  fturntabledbdata_.Clear();
}
inline const ::proto_ff::OperationTurntableDBData& CharacterDBOperateData::fturntabledbdata(int index) const {
  return fturntabledbdata_.Get(index);
}
inline ::proto_ff::OperationTurntableDBData* CharacterDBOperateData::mutable_fturntabledbdata(int index) {
  return fturntabledbdata_.Mutable(index);
}
inline ::proto_ff::OperationTurntableDBData* CharacterDBOperateData::add_fturntabledbdata() {
  return fturntabledbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableDBData >&
CharacterDBOperateData::fturntabledbdata() const {
  return fturntabledbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTurntableDBData >*
CharacterDBOperateData::mutable_fturntabledbdata() {
  return &fturntabledbdata_;
}

// repeated .proto_ff.OperationTutorDBData TutorDBData = 34;
inline int CharacterDBOperateData::tutordbdata_size() const {
  return tutordbdata_.size();
}
inline void CharacterDBOperateData::clear_tutordbdata() {
  tutordbdata_.Clear();
}
inline const ::proto_ff::OperationTutorDBData& CharacterDBOperateData::tutordbdata(int index) const {
  return tutordbdata_.Get(index);
}
inline ::proto_ff::OperationTutorDBData* CharacterDBOperateData::mutable_tutordbdata(int index) {
  return tutordbdata_.Mutable(index);
}
inline ::proto_ff::OperationTutorDBData* CharacterDBOperateData::add_tutordbdata() {
  return tutordbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutorDBData >&
CharacterDBOperateData::tutordbdata() const {
  return tutordbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OperationTutorDBData >*
CharacterDBOperateData::mutable_tutordbdata() {
  return &tutordbdata_;
}

// repeated .proto_ff.FestivalZhiChongData zhiChongData = 35;
inline int CharacterDBOperateData::zhichongdata_size() const {
  return zhichongdata_.size();
}
inline void CharacterDBOperateData::clear_zhichongdata() {
  zhichongdata_.Clear();
}
inline const ::proto_ff::FestivalZhiChongData& CharacterDBOperateData::zhichongdata(int index) const {
  return zhichongdata_.Get(index);
}
inline ::proto_ff::FestivalZhiChongData* CharacterDBOperateData::mutable_zhichongdata(int index) {
  return zhichongdata_.Mutable(index);
}
inline ::proto_ff::FestivalZhiChongData* CharacterDBOperateData::add_zhichongdata() {
  return zhichongdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalZhiChongData >&
CharacterDBOperateData::zhichongdata() const {
  return zhichongdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalZhiChongData >*
CharacterDBOperateData::mutable_zhichongdata() {
  return &zhichongdata_;
}

// repeated .proto_ff.limitInfo limitData = 36;
inline int CharacterDBOperateData::limitdata_size() const {
  return limitdata_.size();
}
inline void CharacterDBOperateData::clear_limitdata() {
  limitdata_.Clear();
}
inline const ::proto_ff::limitInfo& CharacterDBOperateData::limitdata(int index) const {
  return limitdata_.Get(index);
}
inline ::proto_ff::limitInfo* CharacterDBOperateData::mutable_limitdata(int index) {
  return limitdata_.Mutable(index);
}
inline ::proto_ff::limitInfo* CharacterDBOperateData::add_limitdata() {
  return limitdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::limitInfo >&
CharacterDBOperateData::limitdata() const {
  return limitdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::limitInfo >*
CharacterDBOperateData::mutable_limitdata() {
  return &limitdata_;
}

// repeated .proto_ff.FestivalSuperDBData superData = 37;
inline int CharacterDBOperateData::superdata_size() const {
  return superdata_.size();
}
inline void CharacterDBOperateData::clear_superdata() {
  superdata_.Clear();
}
inline const ::proto_ff::FestivalSuperDBData& CharacterDBOperateData::superdata(int index) const {
  return superdata_.Get(index);
}
inline ::proto_ff::FestivalSuperDBData* CharacterDBOperateData::mutable_superdata(int index) {
  return superdata_.Mutable(index);
}
inline ::proto_ff::FestivalSuperDBData* CharacterDBOperateData::add_superdata() {
  return superdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDBData >&
CharacterDBOperateData::superdata() const {
  return superdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDBData >*
CharacterDBOperateData::mutable_superdata() {
  return &superdata_;
}

// repeated .proto_ff.FestivalBigYanHuaDBData fBigYanHuaDBData = 38;
inline int CharacterDBOperateData::fbigyanhuadbdata_size() const {
  return fbigyanhuadbdata_.size();
}
inline void CharacterDBOperateData::clear_fbigyanhuadbdata() {
  fbigyanhuadbdata_.Clear();
}
inline const ::proto_ff::FestivalBigYanHuaDBData& CharacterDBOperateData::fbigyanhuadbdata(int index) const {
  return fbigyanhuadbdata_.Get(index);
}
inline ::proto_ff::FestivalBigYanHuaDBData* CharacterDBOperateData::mutable_fbigyanhuadbdata(int index) {
  return fbigyanhuadbdata_.Mutable(index);
}
inline ::proto_ff::FestivalBigYanHuaDBData* CharacterDBOperateData::add_fbigyanhuadbdata() {
  return fbigyanhuadbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalBigYanHuaDBData >&
CharacterDBOperateData::fbigyanhuadbdata() const {
  return fbigyanhuadbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalBigYanHuaDBData >*
CharacterDBOperateData::mutable_fbigyanhuadbdata() {
  return &fbigyanhuadbdata_;
}

// repeated .proto_ff.FestivalWorldBossData worldBossData = 39;
inline int CharacterDBOperateData::worldbossdata_size() const {
  return worldbossdata_.size();
}
inline void CharacterDBOperateData::clear_worldbossdata() {
  worldbossdata_.Clear();
}
inline const ::proto_ff::FestivalWorldBossData& CharacterDBOperateData::worldbossdata(int index) const {
  return worldbossdata_.Get(index);
}
inline ::proto_ff::FestivalWorldBossData* CharacterDBOperateData::mutable_worldbossdata(int index) {
  return worldbossdata_.Mutable(index);
}
inline ::proto_ff::FestivalWorldBossData* CharacterDBOperateData::add_worldbossdata() {
  return worldbossdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalWorldBossData >&
CharacterDBOperateData::worldbossdata() const {
  return worldbossdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalWorldBossData >*
CharacterDBOperateData::mutable_worldbossdata() {
  return &worldbossdata_;
}

// repeated .proto_ff.FestivalPreRechargeData prerechargedata = 40;
inline int CharacterDBOperateData::prerechargedata_size() const {
  return prerechargedata_.size();
}
inline void CharacterDBOperateData::clear_prerechargedata() {
  prerechargedata_.Clear();
}
inline const ::proto_ff::FestivalPreRechargeData& CharacterDBOperateData::prerechargedata(int index) const {
  return prerechargedata_.Get(index);
}
inline ::proto_ff::FestivalPreRechargeData* CharacterDBOperateData::mutable_prerechargedata(int index) {
  return prerechargedata_.Mutable(index);
}
inline ::proto_ff::FestivalPreRechargeData* CharacterDBOperateData::add_prerechargedata() {
  return prerechargedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalPreRechargeData >&
CharacterDBOperateData::prerechargedata() const {
  return prerechargedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalPreRechargeData >*
CharacterDBOperateData::mutable_prerechargedata() {
  return &prerechargedata_;
}

// optional .proto_ff.OperateWingGiftData winggiftdata = 41;
inline bool CharacterDBOperateData::has_winggiftdata() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CharacterDBOperateData::set_has_winggiftdata() {
  _has_bits_[1] |= 0x00000100u;
}
inline void CharacterDBOperateData::clear_has_winggiftdata() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void CharacterDBOperateData::clear_winggiftdata() {
  if (winggiftdata_ != NULL) winggiftdata_->::proto_ff::OperateWingGiftData::Clear();
  clear_has_winggiftdata();
}
inline const ::proto_ff::OperateWingGiftData& CharacterDBOperateData::winggiftdata() const {
  return winggiftdata_ != NULL ? *winggiftdata_ : *default_instance_->winggiftdata_;
}
inline ::proto_ff::OperateWingGiftData* CharacterDBOperateData::mutable_winggiftdata() {
  set_has_winggiftdata();
  if (winggiftdata_ == NULL) winggiftdata_ = new ::proto_ff::OperateWingGiftData;
  return winggiftdata_;
}
inline ::proto_ff::OperateWingGiftData* CharacterDBOperateData::release_winggiftdata() {
  clear_has_winggiftdata();
  ::proto_ff::OperateWingGiftData* temp = winggiftdata_;
  winggiftdata_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_winggiftdata(::proto_ff::OperateWingGiftData* winggiftdata) {
  delete winggiftdata_;
  winggiftdata_ = winggiftdata;
  if (winggiftdata) {
    set_has_winggiftdata();
  } else {
    clear_has_winggiftdata();
  }
}

// optional .proto_ff.OperateRechargeGiftData rechargegiftdata = 42;
inline bool CharacterDBOperateData::has_rechargegiftdata() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CharacterDBOperateData::set_has_rechargegiftdata() {
  _has_bits_[1] |= 0x00000200u;
}
inline void CharacterDBOperateData::clear_has_rechargegiftdata() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void CharacterDBOperateData::clear_rechargegiftdata() {
  if (rechargegiftdata_ != NULL) rechargegiftdata_->::proto_ff::OperateRechargeGiftData::Clear();
  clear_has_rechargegiftdata();
}
inline const ::proto_ff::OperateRechargeGiftData& CharacterDBOperateData::rechargegiftdata() const {
  return rechargegiftdata_ != NULL ? *rechargegiftdata_ : *default_instance_->rechargegiftdata_;
}
inline ::proto_ff::OperateRechargeGiftData* CharacterDBOperateData::mutable_rechargegiftdata() {
  set_has_rechargegiftdata();
  if (rechargegiftdata_ == NULL) rechargegiftdata_ = new ::proto_ff::OperateRechargeGiftData;
  return rechargegiftdata_;
}
inline ::proto_ff::OperateRechargeGiftData* CharacterDBOperateData::release_rechargegiftdata() {
  clear_has_rechargegiftdata();
  ::proto_ff::OperateRechargeGiftData* temp = rechargegiftdata_;
  rechargegiftdata_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_rechargegiftdata(::proto_ff::OperateRechargeGiftData* rechargegiftdata) {
  delete rechargegiftdata_;
  rechargegiftdata_ = rechargegiftdata;
  if (rechargegiftdata) {
    set_has_rechargegiftdata();
  } else {
    clear_has_rechargegiftdata();
  }
}

// repeated .proto_ff.FestivalSuperDoubleDBData superDoubleData = 43;
inline int CharacterDBOperateData::superdoubledata_size() const {
  return superdoubledata_.size();
}
inline void CharacterDBOperateData::clear_superdoubledata() {
  superdoubledata_.Clear();
}
inline const ::proto_ff::FestivalSuperDoubleDBData& CharacterDBOperateData::superdoubledata(int index) const {
  return superdoubledata_.Get(index);
}
inline ::proto_ff::FestivalSuperDoubleDBData* CharacterDBOperateData::mutable_superdoubledata(int index) {
  return superdoubledata_.Mutable(index);
}
inline ::proto_ff::FestivalSuperDoubleDBData* CharacterDBOperateData::add_superdoubledata() {
  return superdoubledata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDoubleDBData >&
CharacterDBOperateData::superdoubledata() const {
  return superdoubledata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FestivalSuperDoubleDBData >*
CharacterDBOperateData::mutable_superdoubledata() {
  return &superdoubledata_;
}

// repeated .proto_ff.IndultTaskGroupEntry IndultTaskDBData = 44;
inline int CharacterDBOperateData::indulttaskdbdata_size() const {
  return indulttaskdbdata_.size();
}
inline void CharacterDBOperateData::clear_indulttaskdbdata() {
  indulttaskdbdata_.Clear();
}
inline const ::proto_ff::IndultTaskGroupEntry& CharacterDBOperateData::indulttaskdbdata(int index) const {
  return indulttaskdbdata_.Get(index);
}
inline ::proto_ff::IndultTaskGroupEntry* CharacterDBOperateData::mutable_indulttaskdbdata(int index) {
  return indulttaskdbdata_.Mutable(index);
}
inline ::proto_ff::IndultTaskGroupEntry* CharacterDBOperateData::add_indulttaskdbdata() {
  return indulttaskdbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskGroupEntry >&
CharacterDBOperateData::indulttaskdbdata() const {
  return indulttaskdbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::IndultTaskGroupEntry >*
CharacterDBOperateData::mutable_indulttaskdbdata() {
  return &indulttaskdbdata_;
}

// optional .proto_ff.ColPointsTaskData ColPointsTaskData = 45;
inline bool CharacterDBOperateData::has_colpointstaskdata() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void CharacterDBOperateData::set_has_colpointstaskdata() {
  _has_bits_[1] |= 0x00001000u;
}
inline void CharacterDBOperateData::clear_has_colpointstaskdata() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void CharacterDBOperateData::clear_colpointstaskdata() {
  if (colpointstaskdata_ != NULL) colpointstaskdata_->::proto_ff::ColPointsTaskData::Clear();
  clear_has_colpointstaskdata();
}
inline const ::proto_ff::ColPointsTaskData& CharacterDBOperateData::colpointstaskdata() const {
  return colpointstaskdata_ != NULL ? *colpointstaskdata_ : *default_instance_->colpointstaskdata_;
}
inline ::proto_ff::ColPointsTaskData* CharacterDBOperateData::mutable_colpointstaskdata() {
  set_has_colpointstaskdata();
  if (colpointstaskdata_ == NULL) colpointstaskdata_ = new ::proto_ff::ColPointsTaskData;
  return colpointstaskdata_;
}
inline ::proto_ff::ColPointsTaskData* CharacterDBOperateData::release_colpointstaskdata() {
  clear_has_colpointstaskdata();
  ::proto_ff::ColPointsTaskData* temp = colpointstaskdata_;
  colpointstaskdata_ = NULL;
  return temp;
}
inline void CharacterDBOperateData::set_allocated_colpointstaskdata(::proto_ff::ColPointsTaskData* colpointstaskdata) {
  delete colpointstaskdata_;
  colpointstaskdata_ = colpointstaskdata;
  if (colpointstaskdata) {
    set_has_colpointstaskdata();
  } else {
    clear_has_colpointstaskdata();
  }
}

// -------------------------------------------------------------------

// PlayerActiveAnswerData

// optional uint32 answerIndex = 1;
inline bool PlayerActiveAnswerData::has_answerindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerActiveAnswerData::set_has_answerindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerActiveAnswerData::clear_has_answerindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerActiveAnswerData::clear_answerindex() {
  answerindex_ = 0u;
  clear_has_answerindex();
}
inline ::google::protobuf::uint32 PlayerActiveAnswerData::answerindex() const {
  return answerindex_;
}
inline void PlayerActiveAnswerData::set_answerindex(::google::protobuf::uint32 value) {
  set_has_answerindex();
  answerindex_ = value;
}

// repeated uint32 answerList = 2;
inline int PlayerActiveAnswerData::answerlist_size() const {
  return answerlist_.size();
}
inline void PlayerActiveAnswerData::clear_answerlist() {
  answerlist_.Clear();
}
inline ::google::protobuf::uint32 PlayerActiveAnswerData::answerlist(int index) const {
  return answerlist_.Get(index);
}
inline void PlayerActiveAnswerData::set_answerlist(int index, ::google::protobuf::uint32 value) {
  answerlist_.Set(index, value);
}
inline void PlayerActiveAnswerData::add_answerlist(::google::protobuf::uint32 value) {
  answerlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerActiveAnswerData::answerlist() const {
  return answerlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerActiveAnswerData::mutable_answerlist() {
  return &answerlist_;
}

// optional uint32 allexp = 3;
inline bool PlayerActiveAnswerData::has_allexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerActiveAnswerData::set_has_allexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerActiveAnswerData::clear_has_allexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerActiveAnswerData::clear_allexp() {
  allexp_ = 0u;
  clear_has_allexp();
}
inline ::google::protobuf::uint32 PlayerActiveAnswerData::allexp() const {
  return allexp_;
}
inline void PlayerActiveAnswerData::set_allexp(::google::protobuf::uint32 value) {
  set_has_allexp();
  allexp_ = value;
}

// optional uint32 allmoney = 4;
inline bool PlayerActiveAnswerData::has_allmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerActiveAnswerData::set_has_allmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerActiveAnswerData::clear_has_allmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerActiveAnswerData::clear_allmoney() {
  allmoney_ = 0u;
  clear_has_allmoney();
}
inline ::google::protobuf::uint32 PlayerActiveAnswerData::allmoney() const {
  return allmoney_;
}
inline void PlayerActiveAnswerData::set_allmoney(::google::protobuf::uint32 value) {
  set_has_allmoney();
  allmoney_ = value;
}

// optional uint32 correctnum = 5;
inline bool PlayerActiveAnswerData::has_correctnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerActiveAnswerData::set_has_correctnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerActiveAnswerData::clear_has_correctnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerActiveAnswerData::clear_correctnum() {
  correctnum_ = 0u;
  clear_has_correctnum();
}
inline ::google::protobuf::uint32 PlayerActiveAnswerData::correctnum() const {
  return correctnum_;
}
inline void PlayerActiveAnswerData::set_correctnum(::google::protobuf::uint32 value) {
  set_has_correctnum();
  correctnum_ = value;
}

// optional uint32 isGetReward = 6;
inline bool PlayerActiveAnswerData::has_isgetreward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerActiveAnswerData::set_has_isgetreward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerActiveAnswerData::clear_has_isgetreward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerActiveAnswerData::clear_isgetreward() {
  isgetreward_ = 0u;
  clear_has_isgetreward();
}
inline ::google::protobuf::uint32 PlayerActiveAnswerData::isgetreward() const {
  return isgetreward_;
}
inline void PlayerActiveAnswerData::set_isgetreward(::google::protobuf::uint32 value) {
  set_has_isgetreward();
  isgetreward_ = value;
}

// optional uint64 lastAnswerTime = 7;
inline bool PlayerActiveAnswerData::has_lastanswertime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerActiveAnswerData::set_has_lastanswertime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerActiveAnswerData::clear_has_lastanswertime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerActiveAnswerData::clear_lastanswertime() {
  lastanswertime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastanswertime();
}
inline ::google::protobuf::uint64 PlayerActiveAnswerData::lastanswertime() const {
  return lastanswertime_;
}
inline void PlayerActiveAnswerData::set_lastanswertime(::google::protobuf::uint64 value) {
  set_has_lastanswertime();
  lastanswertime_ = value;
}

// -------------------------------------------------------------------

// CharacterDBActiveInfo

// optional .proto_ff.PlayerActiveAnswerData playerActiveAnswerInfo = 1;
inline bool CharacterDBActiveInfo::has_playeractiveanswerinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBActiveInfo::set_has_playeractiveanswerinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBActiveInfo::clear_has_playeractiveanswerinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBActiveInfo::clear_playeractiveanswerinfo() {
  if (playeractiveanswerinfo_ != NULL) playeractiveanswerinfo_->::proto_ff::PlayerActiveAnswerData::Clear();
  clear_has_playeractiveanswerinfo();
}
inline const ::proto_ff::PlayerActiveAnswerData& CharacterDBActiveInfo::playeractiveanswerinfo() const {
  return playeractiveanswerinfo_ != NULL ? *playeractiveanswerinfo_ : *default_instance_->playeractiveanswerinfo_;
}
inline ::proto_ff::PlayerActiveAnswerData* CharacterDBActiveInfo::mutable_playeractiveanswerinfo() {
  set_has_playeractiveanswerinfo();
  if (playeractiveanswerinfo_ == NULL) playeractiveanswerinfo_ = new ::proto_ff::PlayerActiveAnswerData;
  return playeractiveanswerinfo_;
}
inline ::proto_ff::PlayerActiveAnswerData* CharacterDBActiveInfo::release_playeractiveanswerinfo() {
  clear_has_playeractiveanswerinfo();
  ::proto_ff::PlayerActiveAnswerData* temp = playeractiveanswerinfo_;
  playeractiveanswerinfo_ = NULL;
  return temp;
}
inline void CharacterDBActiveInfo::set_allocated_playeractiveanswerinfo(::proto_ff::PlayerActiveAnswerData* playeractiveanswerinfo) {
  delete playeractiveanswerinfo_;
  playeractiveanswerinfo_ = playeractiveanswerinfo;
  if (playeractiveanswerinfo) {
    set_has_playeractiveanswerinfo();
  } else {
    clear_has_playeractiveanswerinfo();
  }
}

// optional .proto_ff.PlayerActiveAnswerData playerActiveDailyAnswerInfo = 2;
inline bool CharacterDBActiveInfo::has_playeractivedailyanswerinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBActiveInfo::set_has_playeractivedailyanswerinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBActiveInfo::clear_has_playeractivedailyanswerinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBActiveInfo::clear_playeractivedailyanswerinfo() {
  if (playeractivedailyanswerinfo_ != NULL) playeractivedailyanswerinfo_->::proto_ff::PlayerActiveAnswerData::Clear();
  clear_has_playeractivedailyanswerinfo();
}
inline const ::proto_ff::PlayerActiveAnswerData& CharacterDBActiveInfo::playeractivedailyanswerinfo() const {
  return playeractivedailyanswerinfo_ != NULL ? *playeractivedailyanswerinfo_ : *default_instance_->playeractivedailyanswerinfo_;
}
inline ::proto_ff::PlayerActiveAnswerData* CharacterDBActiveInfo::mutable_playeractivedailyanswerinfo() {
  set_has_playeractivedailyanswerinfo();
  if (playeractivedailyanswerinfo_ == NULL) playeractivedailyanswerinfo_ = new ::proto_ff::PlayerActiveAnswerData;
  return playeractivedailyanswerinfo_;
}
inline ::proto_ff::PlayerActiveAnswerData* CharacterDBActiveInfo::release_playeractivedailyanswerinfo() {
  clear_has_playeractivedailyanswerinfo();
  ::proto_ff::PlayerActiveAnswerData* temp = playeractivedailyanswerinfo_;
  playeractivedailyanswerinfo_ = NULL;
  return temp;
}
inline void CharacterDBActiveInfo::set_allocated_playeractivedailyanswerinfo(::proto_ff::PlayerActiveAnswerData* playeractivedailyanswerinfo) {
  delete playeractivedailyanswerinfo_;
  playeractivedailyanswerinfo_ = playeractivedailyanswerinfo;
  if (playeractivedailyanswerinfo) {
    set_has_playeractivedailyanswerinfo();
  } else {
    clear_has_playeractivedailyanswerinfo();
  }
}

// -------------------------------------------------------------------

// PayCountDBProto

// optional int32 charge_id = 1;
inline bool PayCountDBProto::has_charge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PayCountDBProto::set_has_charge_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PayCountDBProto::clear_has_charge_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PayCountDBProto::clear_charge_id() {
  charge_id_ = 0;
  clear_has_charge_id();
}
inline ::google::protobuf::int32 PayCountDBProto::charge_id() const {
  return charge_id_;
}
inline void PayCountDBProto::set_charge_id(::google::protobuf::int32 value) {
  set_has_charge_id();
  charge_id_ = value;
}

// optional uint32 count = 2;
inline bool PayCountDBProto::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PayCountDBProto::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PayCountDBProto::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PayCountDBProto::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PayCountDBProto::count() const {
  return count_;
}
inline void PayCountDBProto::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// OfflineRetDBProto

// optional int64 diamond = 1;
inline bool OfflineRetDBProto::has_diamond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfflineRetDBProto::set_has_diamond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfflineRetDBProto::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfflineRetDBProto::clear_diamond() {
  diamond_ = GOOGLE_LONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::int64 OfflineRetDBProto::diamond() const {
  return diamond_;
}
inline void OfflineRetDBProto::set_diamond(::google::protobuf::int64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 time = 2;
inline bool OfflineRetDBProto::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfflineRetDBProto::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfflineRetDBProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfflineRetDBProto::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 OfflineRetDBProto::time() const {
  return time_;
}
inline void OfflineRetDBProto::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// optional uint64 freshtime = 3;
inline bool OfflineRetDBProto::has_freshtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OfflineRetDBProto::set_has_freshtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OfflineRetDBProto::clear_has_freshtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OfflineRetDBProto::clear_freshtime() {
  freshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_freshtime();
}
inline ::google::protobuf::uint64 OfflineRetDBProto::freshtime() const {
  return freshtime_;
}
inline void OfflineRetDBProto::set_freshtime(::google::protobuf::uint64 value) {
  set_has_freshtime();
  freshtime_ = value;
}

// -------------------------------------------------------------------

// CharacterPayData

// optional uint32 rmb = 1;
inline bool CharacterPayData::has_rmb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterPayData::set_has_rmb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterPayData::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterPayData::clear_rmb() {
  rmb_ = 0u;
  clear_has_rmb();
}
inline ::google::protobuf::uint32 CharacterPayData::rmb() const {
  return rmb_;
}
inline void CharacterPayData::set_rmb(::google::protobuf::uint32 value) {
  set_has_rmb();
  rmb_ = value;
}

// optional uint32 maxPayId = 2;
inline bool CharacterPayData::has_maxpayid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterPayData::set_has_maxpayid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterPayData::clear_has_maxpayid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterPayData::clear_maxpayid() {
  maxpayid_ = 0u;
  clear_has_maxpayid();
}
inline ::google::protobuf::uint32 CharacterPayData::maxpayid() const {
  return maxpayid_;
}
inline void CharacterPayData::set_maxpayid(::google::protobuf::uint32 value) {
  set_has_maxpayid();
  maxpayid_ = value;
}

// repeated string payedProducts = 3;
inline int CharacterPayData::payedproducts_size() const {
  return payedproducts_.size();
}
inline void CharacterPayData::clear_payedproducts() {
  payedproducts_.Clear();
}
inline const ::std::string& CharacterPayData::payedproducts(int index) const {
  return payedproducts_.Get(index);
}
inline ::std::string* CharacterPayData::mutable_payedproducts(int index) {
  return payedproducts_.Mutable(index);
}
inline void CharacterPayData::set_payedproducts(int index, const ::std::string& value) {
  payedproducts_.Mutable(index)->assign(value);
}
inline void CharacterPayData::set_payedproducts(int index, const char* value) {
  payedproducts_.Mutable(index)->assign(value);
}
inline void CharacterPayData::set_payedproducts(int index, const char* value, size_t size) {
  payedproducts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterPayData::add_payedproducts() {
  return payedproducts_.Add();
}
inline void CharacterPayData::add_payedproducts(const ::std::string& value) {
  payedproducts_.Add()->assign(value);
}
inline void CharacterPayData::add_payedproducts(const char* value) {
  payedproducts_.Add()->assign(value);
}
inline void CharacterPayData::add_payedproducts(const char* value, size_t size) {
  payedproducts_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CharacterPayData::payedproducts() const {
  return payedproducts_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CharacterPayData::mutable_payedproducts() {
  return &payedproducts_;
}

// optional uint32 today_rmb = 4;
inline bool CharacterPayData::has_today_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterPayData::set_has_today_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterPayData::clear_has_today_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterPayData::clear_today_rmb() {
  today_rmb_ = 0u;
  clear_has_today_rmb();
}
inline ::google::protobuf::uint32 CharacterPayData::today_rmb() const {
  return today_rmb_;
}
inline void CharacterPayData::set_today_rmb(::google::protobuf::uint32 value) {
  set_has_today_rmb();
  today_rmb_ = value;
}

// optional uint64 last_time = 5;
inline bool CharacterPayData::has_last_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterPayData::set_has_last_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterPayData::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterPayData::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 CharacterPayData::last_time() const {
  return last_time_;
}
inline void CharacterPayData::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// repeated .proto_ff.PayCountDBProto pay_count = 6;
inline int CharacterPayData::pay_count_size() const {
  return pay_count_.size();
}
inline void CharacterPayData::clear_pay_count() {
  pay_count_.Clear();
}
inline const ::proto_ff::PayCountDBProto& CharacterPayData::pay_count(int index) const {
  return pay_count_.Get(index);
}
inline ::proto_ff::PayCountDBProto* CharacterPayData::mutable_pay_count(int index) {
  return pay_count_.Mutable(index);
}
inline ::proto_ff::PayCountDBProto* CharacterPayData::add_pay_count() {
  return pay_count_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PayCountDBProto >&
CharacterPayData::pay_count() const {
  return pay_count_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PayCountDBProto >*
CharacterPayData::mutable_pay_count() {
  return &pay_count_;
}

// optional uint64 pay_count_time = 7;
inline bool CharacterPayData::has_pay_count_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterPayData::set_has_pay_count_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterPayData::clear_has_pay_count_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterPayData::clear_pay_count_time() {
  pay_count_time_ = GOOGLE_ULONGLONG(0);
  clear_has_pay_count_time();
}
inline ::google::protobuf::uint64 CharacterPayData::pay_count_time() const {
  return pay_count_time_;
}
inline void CharacterPayData::set_pay_count_time(::google::protobuf::uint64 value) {
  set_has_pay_count_time();
  pay_count_time_ = value;
}

// optional int64 diamond = 8;
inline bool CharacterPayData::has_diamond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterPayData::set_has_diamond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterPayData::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterPayData::clear_diamond() {
  diamond_ = GOOGLE_LONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::int64 CharacterPayData::diamond() const {
  return diamond_;
}
inline void CharacterPayData::set_diamond(::google::protobuf::int64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint64 real_rmb = 9;
inline bool CharacterPayData::has_real_rmb() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterPayData::set_has_real_rmb() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterPayData::clear_has_real_rmb() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterPayData::clear_real_rmb() {
  real_rmb_ = GOOGLE_ULONGLONG(0);
  clear_has_real_rmb();
}
inline ::google::protobuf::uint64 CharacterPayData::real_rmb() const {
  return real_rmb_;
}
inline void CharacterPayData::set_real_rmb(::google::protobuf::uint64 value) {
  set_has_real_rmb();
  real_rmb_ = value;
}

// optional int64 freshtime = 10;
inline bool CharacterPayData::has_freshtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterPayData::set_has_freshtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterPayData::clear_has_freshtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterPayData::clear_freshtime() {
  freshtime_ = GOOGLE_LONGLONG(0);
  clear_has_freshtime();
}
inline ::google::protobuf::int64 CharacterPayData::freshtime() const {
  return freshtime_;
}
inline void CharacterPayData::set_freshtime(::google::protobuf::int64 value) {
  set_has_freshtime();
  freshtime_ = value;
}

// optional int32 openwindow = 11;
inline bool CharacterPayData::has_openwindow() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterPayData::set_has_openwindow() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterPayData::clear_has_openwindow() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterPayData::clear_openwindow() {
  openwindow_ = 0;
  clear_has_openwindow();
}
inline ::google::protobuf::int32 CharacterPayData::openwindow() const {
  return openwindow_;
}
inline void CharacterPayData::set_openwindow(::google::protobuf::int32 value) {
  set_has_openwindow();
  openwindow_ = value;
}

// optional .proto_ff.OfflineRetDBProto offline_ret = 12;
inline bool CharacterPayData::has_offline_ret() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterPayData::set_has_offline_ret() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterPayData::clear_has_offline_ret() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterPayData::clear_offline_ret() {
  if (offline_ret_ != NULL) offline_ret_->::proto_ff::OfflineRetDBProto::Clear();
  clear_has_offline_ret();
}
inline const ::proto_ff::OfflineRetDBProto& CharacterPayData::offline_ret() const {
  return offline_ret_ != NULL ? *offline_ret_ : *default_instance_->offline_ret_;
}
inline ::proto_ff::OfflineRetDBProto* CharacterPayData::mutable_offline_ret() {
  set_has_offline_ret();
  if (offline_ret_ == NULL) offline_ret_ = new ::proto_ff::OfflineRetDBProto;
  return offline_ret_;
}
inline ::proto_ff::OfflineRetDBProto* CharacterPayData::release_offline_ret() {
  clear_has_offline_ret();
  ::proto_ff::OfflineRetDBProto* temp = offline_ret_;
  offline_ret_ = NULL;
  return temp;
}
inline void CharacterPayData::set_allocated_offline_ret(::proto_ff::OfflineRetDBProto* offline_ret) {
  delete offline_ret_;
  offline_ret_ = offline_ret;
  if (offline_ret) {
    set_has_offline_ret();
  } else {
    clear_has_offline_ret();
  }
}

// -------------------------------------------------------------------

// FunctionUnlockInfo

// repeated uint64 unlockIds = 1;
inline int FunctionUnlockInfo::unlockids_size() const {
  return unlockids_.size();
}
inline void FunctionUnlockInfo::clear_unlockids() {
  unlockids_.Clear();
}
inline ::google::protobuf::uint64 FunctionUnlockInfo::unlockids(int index) const {
  return unlockids_.Get(index);
}
inline void FunctionUnlockInfo::set_unlockids(int index, ::google::protobuf::uint64 value) {
  unlockids_.Set(index, value);
}
inline void FunctionUnlockInfo::add_unlockids(::google::protobuf::uint64 value) {
  unlockids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FunctionUnlockInfo::unlockids() const {
  return unlockids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FunctionUnlockInfo::mutable_unlockids() {
  return &unlockids_;
}

// -------------------------------------------------------------------

// EmblemSlot

// optional uint32 slotId = 1;
inline bool EmblemSlot::has_slotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmblemSlot::set_has_slotid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmblemSlot::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmblemSlot::clear_slotid() {
  slotid_ = 0u;
  clear_has_slotid();
}
inline ::google::protobuf::uint32 EmblemSlot::slotid() const {
  return slotid_;
}
inline void EmblemSlot::set_slotid(::google::protobuf::uint32 value) {
  set_has_slotid();
  slotid_ = value;
}

// optional uint32 groupId = 2;
inline bool EmblemSlot::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmblemSlot::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmblemSlot::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmblemSlot::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 EmblemSlot::groupid() const {
  return groupid_;
}
inline void EmblemSlot::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional uint32 posId = 3;
inline bool EmblemSlot::has_posid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EmblemSlot::set_has_posid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EmblemSlot::clear_has_posid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EmblemSlot::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 EmblemSlot::posid() const {
  return posid_;
}
inline void EmblemSlot::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
}

// optional uint32 attrType = 4;
inline bool EmblemSlot::has_attrtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EmblemSlot::set_has_attrtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EmblemSlot::clear_has_attrtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EmblemSlot::clear_attrtype() {
  attrtype_ = 0u;
  clear_has_attrtype();
}
inline ::google::protobuf::uint32 EmblemSlot::attrtype() const {
  return attrtype_;
}
inline void EmblemSlot::set_attrtype(::google::protobuf::uint32 value) {
  set_has_attrtype();
  attrtype_ = value;
}

// optional bool open = 5;
inline bool EmblemSlot::has_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EmblemSlot::set_has_open() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EmblemSlot::clear_has_open() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EmblemSlot::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool EmblemSlot::open() const {
  return open_;
}
inline void EmblemSlot::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// optional uint64 itemId = 6;
inline bool EmblemSlot::has_itemid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EmblemSlot::set_has_itemid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EmblemSlot::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EmblemSlot::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 EmblemSlot::itemid() const {
  return itemid_;
}
inline void EmblemSlot::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 bind = 7;
inline bool EmblemSlot::has_bind() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EmblemSlot::set_has_bind() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EmblemSlot::clear_has_bind() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EmblemSlot::clear_bind() {
  bind_ = 0u;
  clear_has_bind();
}
inline ::google::protobuf::uint32 EmblemSlot::bind() const {
  return bind_;
}
inline void EmblemSlot::set_bind(::google::protobuf::uint32 value) {
  set_has_bind();
  bind_ = value;
}

// -------------------------------------------------------------------

// CharacterDBEmblemData

// repeated .proto_ff.EmblemSlot slots = 1;
inline int CharacterDBEmblemData::slots_size() const {
  return slots_.size();
}
inline void CharacterDBEmblemData::clear_slots() {
  slots_.Clear();
}
inline const ::proto_ff::EmblemSlot& CharacterDBEmblemData::slots(int index) const {
  return slots_.Get(index);
}
inline ::proto_ff::EmblemSlot* CharacterDBEmblemData::mutable_slots(int index) {
  return slots_.Mutable(index);
}
inline ::proto_ff::EmblemSlot* CharacterDBEmblemData::add_slots() {
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EmblemSlot >&
CharacterDBEmblemData::slots() const {
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EmblemSlot >*
CharacterDBEmblemData::mutable_slots() {
  return &slots_;
}

// repeated .proto_ff.ComPair groupSuitIds = 2;
inline int CharacterDBEmblemData::groupsuitids_size() const {
  return groupsuitids_.size();
}
inline void CharacterDBEmblemData::clear_groupsuitids() {
  groupsuitids_.Clear();
}
inline const ::proto_ff::ComPair& CharacterDBEmblemData::groupsuitids(int index) const {
  return groupsuitids_.Get(index);
}
inline ::proto_ff::ComPair* CharacterDBEmblemData::mutable_groupsuitids(int index) {
  return groupsuitids_.Mutable(index);
}
inline ::proto_ff::ComPair* CharacterDBEmblemData::add_groupsuitids() {
  return groupsuitids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
CharacterDBEmblemData::groupsuitids() const {
  return groupsuitids_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
CharacterDBEmblemData::mutable_groupsuitids() {
  return &groupsuitids_;
}

// repeated .proto_ff.ComPair suitSkillId = 3;
inline int CharacterDBEmblemData::suitskillid_size() const {
  return suitskillid_.size();
}
inline void CharacterDBEmblemData::clear_suitskillid() {
  suitskillid_.Clear();
}
inline const ::proto_ff::ComPair& CharacterDBEmblemData::suitskillid(int index) const {
  return suitskillid_.Get(index);
}
inline ::proto_ff::ComPair* CharacterDBEmblemData::mutable_suitskillid(int index) {
  return suitskillid_.Mutable(index);
}
inline ::proto_ff::ComPair* CharacterDBEmblemData::add_suitskillid() {
  return suitskillid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
CharacterDBEmblemData::suitskillid() const {
  return suitskillid_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
CharacterDBEmblemData::mutable_suitskillid() {
  return &suitskillid_;
}

// -------------------------------------------------------------------

// CharacterDBIdentifyData

// repeated .proto_ff.ComPair64 identifys = 1;
inline int CharacterDBIdentifyData::identifys_size() const {
  return identifys_.size();
}
inline void CharacterDBIdentifyData::clear_identifys() {
  identifys_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBIdentifyData::identifys(int index) const {
  return identifys_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBIdentifyData::mutable_identifys(int index) {
  return identifys_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBIdentifyData::add_identifys() {
  return identifys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBIdentifyData::identifys() const {
  return identifys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBIdentifyData::mutable_identifys() {
  return &identifys_;
}

// repeated .proto_ff.ComPair64 identifyfates = 2;
inline int CharacterDBIdentifyData::identifyfates_size() const {
  return identifyfates_.size();
}
inline void CharacterDBIdentifyData::clear_identifyfates() {
  identifyfates_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBIdentifyData::identifyfates(int index) const {
  return identifyfates_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBIdentifyData::mutable_identifyfates(int index) {
  return identifyfates_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBIdentifyData::add_identifyfates() {
  return identifyfates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBIdentifyData::identifyfates() const {
  return identifyfates_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBIdentifyData::mutable_identifyfates() {
  return &identifyfates_;
}

// -------------------------------------------------------------------

// ElementInfoData

// optional uint32 type = 1;
inline bool ElementInfoData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ElementInfoData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ElementInfoData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ElementInfoData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ElementInfoData::type() const {
  return type_;
}
inline void ElementInfoData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 level = 2;
inline bool ElementInfoData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ElementInfoData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ElementInfoData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ElementInfoData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ElementInfoData::level() const {
  return level_;
}
inline void ElementInfoData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint64 exp = 3;
inline bool ElementInfoData::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ElementInfoData::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ElementInfoData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ElementInfoData::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 ElementInfoData::exp() const {
  return exp_;
}
inline void ElementInfoData::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// CharacterDBElementData

// repeated .proto_ff.ElementInfoData elements = 1;
inline int CharacterDBElementData::elements_size() const {
  return elements_.size();
}
inline void CharacterDBElementData::clear_elements() {
  elements_.Clear();
}
inline const ::proto_ff::ElementInfoData& CharacterDBElementData::elements(int index) const {
  return elements_.Get(index);
}
inline ::proto_ff::ElementInfoData* CharacterDBElementData::mutable_elements(int index) {
  return elements_.Mutable(index);
}
inline ::proto_ff::ElementInfoData* CharacterDBElementData::add_elements() {
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ElementInfoData >&
CharacterDBElementData::elements() const {
  return elements_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ElementInfoData >*
CharacterDBElementData::mutable_elements() {
  return &elements_;
}

// repeated .proto_ff.ComPair64 fragments = 2;
inline int CharacterDBElementData::fragments_size() const {
  return fragments_.size();
}
inline void CharacterDBElementData::clear_fragments() {
  fragments_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBElementData::fragments(int index) const {
  return fragments_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBElementData::mutable_fragments(int index) {
  return fragments_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBElementData::add_fragments() {
  return fragments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBElementData::fragments() const {
  return fragments_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBElementData::mutable_fragments() {
  return &fragments_;
}

// -------------------------------------------------------------------

// CharacterDBFashionData

// repeated .proto_ff.ComPair64 fashions = 1;
inline int CharacterDBFashionData::fashions_size() const {
  return fashions_.size();
}
inline void CharacterDBFashionData::clear_fashions() {
  fashions_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBFashionData::fashions(int index) const {
  return fashions_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBFashionData::mutable_fashions(int index) {
  return fashions_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBFashionData::add_fashions() {
  return fashions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBFashionData::fashions() const {
  return fashions_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBFashionData::mutable_fashions() {
  return &fashions_;
}

// optional uint64 dressClothesFashionID = 2;
inline bool CharacterDBFashionData::has_dressclothesfashionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBFashionData::set_has_dressclothesfashionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBFashionData::clear_has_dressclothesfashionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBFashionData::clear_dressclothesfashionid() {
  dressclothesfashionid_ = GOOGLE_ULONGLONG(0);
  clear_has_dressclothesfashionid();
}
inline ::google::protobuf::uint64 CharacterDBFashionData::dressclothesfashionid() const {
  return dressclothesfashionid_;
}
inline void CharacterDBFashionData::set_dressclothesfashionid(::google::protobuf::uint64 value) {
  set_has_dressclothesfashionid();
  dressclothesfashionid_ = value;
}

// optional uint64 dressWeaponFashionID = 3;
inline bool CharacterDBFashionData::has_dressweaponfashionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBFashionData::set_has_dressweaponfashionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBFashionData::clear_has_dressweaponfashionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBFashionData::clear_dressweaponfashionid() {
  dressweaponfashionid_ = GOOGLE_ULONGLONG(0);
  clear_has_dressweaponfashionid();
}
inline ::google::protobuf::uint64 CharacterDBFashionData::dressweaponfashionid() const {
  return dressweaponfashionid_;
}
inline void CharacterDBFashionData::set_dressweaponfashionid(::google::protobuf::uint64 value) {
  set_has_dressweaponfashionid();
  dressweaponfashionid_ = value;
}

// -------------------------------------------------------------------

// CharacterDBWingData

// optional uint64 advanceWingExp = 1;
inline bool CharacterDBWingData::has_advancewingexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBWingData::set_has_advancewingexp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBWingData::clear_has_advancewingexp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBWingData::clear_advancewingexp() {
  advancewingexp_ = GOOGLE_ULONGLONG(0);
  clear_has_advancewingexp();
}
inline ::google::protobuf::uint64 CharacterDBWingData::advancewingexp() const {
  return advancewingexp_;
}
inline void CharacterDBWingData::set_advancewingexp(::google::protobuf::uint64 value) {
  set_has_advancewingexp();
  advancewingexp_ = value;
}

// optional uint32 advanceWingLev = 2;
inline bool CharacterDBWingData::has_advancewinglev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBWingData::set_has_advancewinglev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBWingData::clear_has_advancewinglev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBWingData::clear_advancewinglev() {
  advancewinglev_ = 0u;
  clear_has_advancewinglev();
}
inline ::google::protobuf::uint32 CharacterDBWingData::advancewinglev() const {
  return advancewinglev_;
}
inline void CharacterDBWingData::set_advancewinglev(::google::protobuf::uint32 value) {
  set_has_advancewinglev();
  advancewinglev_ = value;
}

// optional uint64 equipWingID = 3;
inline bool CharacterDBWingData::has_equipwingid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBWingData::set_has_equipwingid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBWingData::clear_has_equipwingid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBWingData::clear_equipwingid() {
  equipwingid_ = GOOGLE_ULONGLONG(0);
  clear_has_equipwingid();
}
inline ::google::protobuf::uint64 CharacterDBWingData::equipwingid() const {
  return equipwingid_;
}
inline void CharacterDBWingData::set_equipwingid(::google::protobuf::uint64 value) {
  set_has_equipwingid();
  equipwingid_ = value;
}

// repeated .proto_ff.ComPair64 fantasyWings = 4;
inline int CharacterDBWingData::fantasywings_size() const {
  return fantasywings_.size();
}
inline void CharacterDBWingData::clear_fantasywings() {
  fantasywings_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBWingData::fantasywings(int index) const {
  return fantasywings_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBWingData::mutable_fantasywings(int index) {
  return fantasywings_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBWingData::add_fantasywings() {
  return fantasywings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBWingData::fantasywings() const {
  return fantasywings_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBWingData::mutable_fantasywings() {
  return &fantasywings_;
}

// repeated .proto_ff.ComPair64 fragments = 5;
inline int CharacterDBWingData::fragments_size() const {
  return fragments_.size();
}
inline void CharacterDBWingData::clear_fragments() {
  fragments_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBWingData::fragments(int index) const {
  return fragments_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBWingData::mutable_fragments(int index) {
  return fragments_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBWingData::add_fragments() {
  return fragments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBWingData::fragments() const {
  return fragments_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBWingData::mutable_fragments() {
  return &fragments_;
}

// optional int32 isbreak = 6;
inline bool CharacterDBWingData::has_isbreak() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBWingData::set_has_isbreak() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBWingData::clear_has_isbreak() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBWingData::clear_isbreak() {
  isbreak_ = 0;
  clear_has_isbreak();
}
inline ::google::protobuf::int32 CharacterDBWingData::isbreak() const {
  return isbreak_;
}
inline void CharacterDBWingData::set_isbreak(::google::protobuf::int32 value) {
  set_has_isbreak();
  isbreak_ = value;
}

// -------------------------------------------------------------------

// CharacterDBPartnerData

// optional uint64 advancePartnerExp = 1;
inline bool CharacterDBPartnerData::has_advancepartnerexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBPartnerData::set_has_advancepartnerexp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBPartnerData::clear_has_advancepartnerexp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBPartnerData::clear_advancepartnerexp() {
  advancepartnerexp_ = GOOGLE_ULONGLONG(0);
  clear_has_advancepartnerexp();
}
inline ::google::protobuf::uint64 CharacterDBPartnerData::advancepartnerexp() const {
  return advancepartnerexp_;
}
inline void CharacterDBPartnerData::set_advancepartnerexp(::google::protobuf::uint64 value) {
  set_has_advancepartnerexp();
  advancepartnerexp_ = value;
}

// optional uint32 advancePartnerLev = 2;
inline bool CharacterDBPartnerData::has_advancepartnerlev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBPartnerData::set_has_advancepartnerlev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBPartnerData::clear_has_advancepartnerlev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBPartnerData::clear_advancepartnerlev() {
  advancepartnerlev_ = 0u;
  clear_has_advancepartnerlev();
}
inline ::google::protobuf::uint32 CharacterDBPartnerData::advancepartnerlev() const {
  return advancepartnerlev_;
}
inline void CharacterDBPartnerData::set_advancepartnerlev(::google::protobuf::uint32 value) {
  set_has_advancepartnerlev();
  advancepartnerlev_ = value;
}

// optional uint64 equipPartnerID = 3;
inline bool CharacterDBPartnerData::has_equippartnerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBPartnerData::set_has_equippartnerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBPartnerData::clear_has_equippartnerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBPartnerData::clear_equippartnerid() {
  equippartnerid_ = GOOGLE_ULONGLONG(0);
  clear_has_equippartnerid();
}
inline ::google::protobuf::uint64 CharacterDBPartnerData::equippartnerid() const {
  return equippartnerid_;
}
inline void CharacterDBPartnerData::set_equippartnerid(::google::protobuf::uint64 value) {
  set_has_equippartnerid();
  equippartnerid_ = value;
}

// repeated .proto_ff.ComPair64 fantasyPartners = 4;
inline int CharacterDBPartnerData::fantasypartners_size() const {
  return fantasypartners_.size();
}
inline void CharacterDBPartnerData::clear_fantasypartners() {
  fantasypartners_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBPartnerData::fantasypartners(int index) const {
  return fantasypartners_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBPartnerData::mutable_fantasypartners(int index) {
  return fantasypartners_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBPartnerData::add_fantasypartners() {
  return fantasypartners_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBPartnerData::fantasypartners() const {
  return fantasypartners_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBPartnerData::mutable_fantasypartners() {
  return &fantasypartners_;
}

// repeated .proto_ff.ComPair64 fragments = 5;
inline int CharacterDBPartnerData::fragments_size() const {
  return fragments_.size();
}
inline void CharacterDBPartnerData::clear_fragments() {
  fragments_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBPartnerData::fragments(int index) const {
  return fragments_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBPartnerData::mutable_fragments(int index) {
  return fragments_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBPartnerData::add_fragments() {
  return fragments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBPartnerData::fragments() const {
  return fragments_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBPartnerData::mutable_fragments() {
  return &fragments_;
}

// optional uint64 commonPartnerExp = 6;
inline bool CharacterDBPartnerData::has_commonpartnerexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBPartnerData::set_has_commonpartnerexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBPartnerData::clear_has_commonpartnerexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBPartnerData::clear_commonpartnerexp() {
  commonpartnerexp_ = GOOGLE_ULONGLONG(0);
  clear_has_commonpartnerexp();
}
inline ::google::protobuf::uint64 CharacterDBPartnerData::commonpartnerexp() const {
  return commonpartnerexp_;
}
inline void CharacterDBPartnerData::set_commonpartnerexp(::google::protobuf::uint64 value) {
  set_has_commonpartnerexp();
  commonpartnerexp_ = value;
}

// optional uint32 autoSwallowFlag = 7;
inline bool CharacterDBPartnerData::has_autoswallowflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBPartnerData::set_has_autoswallowflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBPartnerData::clear_has_autoswallowflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBPartnerData::clear_autoswallowflag() {
  autoswallowflag_ = 0u;
  clear_has_autoswallowflag();
}
inline ::google::protobuf::uint32 CharacterDBPartnerData::autoswallowflag() const {
  return autoswallowflag_;
}
inline void CharacterDBPartnerData::set_autoswallowflag(::google::protobuf::uint32 value) {
  set_has_autoswallowflag();
  autoswallowflag_ = value;
}

// optional uint64 autoSwallowClass = 8;
inline bool CharacterDBPartnerData::has_autoswallowclass() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBPartnerData::set_has_autoswallowclass() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBPartnerData::clear_has_autoswallowclass() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBPartnerData::clear_autoswallowclass() {
  autoswallowclass_ = GOOGLE_ULONGLONG(0);
  clear_has_autoswallowclass();
}
inline ::google::protobuf::uint64 CharacterDBPartnerData::autoswallowclass() const {
  return autoswallowclass_;
}
inline void CharacterDBPartnerData::set_autoswallowclass(::google::protobuf::uint64 value) {
  set_has_autoswallowclass();
  autoswallowclass_ = value;
}

// optional int32 isbreak = 9;
inline bool CharacterDBPartnerData::has_isbreak() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBPartnerData::set_has_isbreak() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBPartnerData::clear_has_isbreak() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBPartnerData::clear_isbreak() {
  isbreak_ = 0;
  clear_has_isbreak();
}
inline ::google::protobuf::int32 CharacterDBPartnerData::isbreak() const {
  return isbreak_;
}
inline void CharacterDBPartnerData::set_isbreak(::google::protobuf::int32 value) {
  set_has_isbreak();
  isbreak_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMountData

// repeated .proto_ff.ComPair64 mounts = 1;
inline int CharacterDBMountData::mounts_size() const {
  return mounts_.size();
}
inline void CharacterDBMountData::clear_mounts() {
  mounts_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBMountData::mounts(int index) const {
  return mounts_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBMountData::mutable_mounts(int index) {
  return mounts_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBMountData::add_mounts() {
  return mounts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBMountData::mounts() const {
  return mounts_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBMountData::mutable_mounts() {
  return &mounts_;
}

// optional uint64 mountID = 2;
inline bool CharacterDBMountData::has_mountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBMountData::set_has_mountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBMountData::clear_has_mountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBMountData::clear_mountid() {
  mountid_ = GOOGLE_ULONGLONG(0);
  clear_has_mountid();
}
inline ::google::protobuf::uint64 CharacterDBMountData::mountid() const {
  return mountid_;
}
inline void CharacterDBMountData::set_mountid(::google::protobuf::uint64 value) {
  set_has_mountid();
  mountid_ = value;
}

// optional uint32 rideState = 3;
inline bool CharacterDBMountData::has_ridestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMountData::set_has_ridestate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMountData::clear_has_ridestate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMountData::clear_ridestate() {
  ridestate_ = 0u;
  clear_has_ridestate();
}
inline ::google::protobuf::uint32 CharacterDBMountData::ridestate() const {
  return ridestate_;
}
inline void CharacterDBMountData::set_ridestate(::google::protobuf::uint32 value) {
  set_has_ridestate();
  ridestate_ = value;
}

// -------------------------------------------------------------------

// PlayerBossDataInfo

// optional int32 group_type = 1;
inline bool PlayerBossDataInfo::has_group_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBossDataInfo::set_has_group_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBossDataInfo::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBossDataInfo::clear_group_type() {
  group_type_ = 0;
  clear_has_group_type();
}
inline ::google::protobuf::int32 PlayerBossDataInfo::group_type() const {
  return group_type_;
}
inline void PlayerBossDataInfo::set_group_type(::google::protobuf::int32 value) {
  set_has_group_type();
  group_type_ = value;
}

// optional int32 cur_num = 2;
inline bool PlayerBossDataInfo::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBossDataInfo::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBossDataInfo::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBossDataInfo::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 PlayerBossDataInfo::cur_num() const {
  return cur_num_;
}
inline void PlayerBossDataInfo::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 max_num = 3;
inline bool PlayerBossDataInfo::has_max_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerBossDataInfo::set_has_max_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerBossDataInfo::clear_has_max_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerBossDataInfo::clear_max_num() {
  max_num_ = 0;
  clear_has_max_num();
}
inline ::google::protobuf::int32 PlayerBossDataInfo::max_num() const {
  return max_num_;
}
inline void PlayerBossDataInfo::set_max_num(::google::protobuf::int32 value) {
  set_has_max_num();
  max_num_ = value;
}

// optional int32 vip_buy_num = 4;
inline bool PlayerBossDataInfo::has_vip_buy_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerBossDataInfo::set_has_vip_buy_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerBossDataInfo::clear_has_vip_buy_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerBossDataInfo::clear_vip_buy_num() {
  vip_buy_num_ = 0;
  clear_has_vip_buy_num();
}
inline ::google::protobuf::int32 PlayerBossDataInfo::vip_buy_num() const {
  return vip_buy_num_;
}
inline void PlayerBossDataInfo::set_vip_buy_num(::google::protobuf::int32 value) {
  set_has_vip_buy_num();
  vip_buy_num_ = value;
}

// optional int32 boss_type = 5;
inline bool PlayerBossDataInfo::has_boss_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerBossDataInfo::set_has_boss_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerBossDataInfo::clear_has_boss_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerBossDataInfo::clear_boss_type() {
  boss_type_ = 0;
  clear_has_boss_type();
}
inline ::google::protobuf::int32 PlayerBossDataInfo::boss_type() const {
  return boss_type_;
}
inline void PlayerBossDataInfo::set_boss_type(::google::protobuf::int32 value) {
  set_has_boss_type();
  boss_type_ = value;
}

// -------------------------------------------------------------------

// CharacterDBBossAttentInfo

// optional uint64 id = 1;
inline bool CharacterDBBossAttentInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBBossAttentInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBBossAttentInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBBossAttentInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CharacterDBBossAttentInfo::id() const {
  return id_;
}
inline void CharacterDBBossAttentInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool CharacterDBBossAttentInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBBossAttentInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBBossAttentInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBBossAttentInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CharacterDBBossAttentInfo::type() const {
  return type_;
}
inline void CharacterDBBossAttentInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CharacterDBBossData

// repeated .proto_ff.PlayerBossDataInfo infos = 1;
inline int CharacterDBBossData::infos_size() const {
  return infos_.size();
}
inline void CharacterDBBossData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::PlayerBossDataInfo& CharacterDBBossData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::PlayerBossDataInfo* CharacterDBBossData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::PlayerBossDataInfo* CharacterDBBossData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PlayerBossDataInfo >&
CharacterDBBossData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PlayerBossDataInfo >*
CharacterDBBossData::mutable_infos() {
  return &infos_;
}

// optional uint64 lastTime = 2;
inline bool CharacterDBBossData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBBossData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBBossData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBBossData::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 CharacterDBBossData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBBossData::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// repeated int64 attent_list = 3;
inline int CharacterDBBossData::attent_list_size() const {
  return attent_list_.size();
}
inline void CharacterDBBossData::clear_attent_list() {
  attent_list_.Clear();
}
inline ::google::protobuf::int64 CharacterDBBossData::attent_list(int index) const {
  return attent_list_.Get(index);
}
inline void CharacterDBBossData::set_attent_list(int index, ::google::protobuf::int64 value) {
  attent_list_.Set(index, value);
}
inline void CharacterDBBossData::add_attent_list(::google::protobuf::int64 value) {
  attent_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CharacterDBBossData::attent_list() const {
  return attent_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CharacterDBBossData::mutable_attent_list() {
  return &attent_list_;
}

// -------------------------------------------------------------------

// RedPlayerInfo

// optional uint64 cid = 1;
inline bool RedPlayerInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedPlayerInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedPlayerInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedPlayerInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RedPlayerInfo::cid() const {
  return cid_;
}
inline void RedPlayerInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 time = 2;
inline bool RedPlayerInfo::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RedPlayerInfo::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RedPlayerInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RedPlayerInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RedPlayerInfo::time() const {
  return time_;
}
inline void RedPlayerInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBPvpData

// optional uint32 pk_mode = 1;
inline bool CharacterDBPvpData::has_pk_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBPvpData::set_has_pk_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBPvpData::clear_has_pk_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBPvpData::clear_pk_mode() {
  pk_mode_ = 0u;
  clear_has_pk_mode();
}
inline ::google::protobuf::uint32 CharacterDBPvpData::pk_mode() const {
  return pk_mode_;
}
inline void CharacterDBPvpData::set_pk_mode(::google::protobuf::uint32 value) {
  set_has_pk_mode();
  pk_mode_ = value;
}

// optional uint32 pk_killing_value = 2;
inline bool CharacterDBPvpData::has_pk_killing_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBPvpData::set_has_pk_killing_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBPvpData::clear_has_pk_killing_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBPvpData::clear_pk_killing_value() {
  pk_killing_value_ = 0u;
  clear_has_pk_killing_value();
}
inline ::google::protobuf::uint32 CharacterDBPvpData::pk_killing_value() const {
  return pk_killing_value_;
}
inline void CharacterDBPvpData::set_pk_killing_value(::google::protobuf::uint32 value) {
  set_has_pk_killing_value();
  pk_killing_value_ = value;
}

// repeated .proto_ff.RedPlayerInfo red_player = 3;
inline int CharacterDBPvpData::red_player_size() const {
  return red_player_.size();
}
inline void CharacterDBPvpData::clear_red_player() {
  red_player_.Clear();
}
inline const ::proto_ff::RedPlayerInfo& CharacterDBPvpData::red_player(int index) const {
  return red_player_.Get(index);
}
inline ::proto_ff::RedPlayerInfo* CharacterDBPvpData::mutable_red_player(int index) {
  return red_player_.Mutable(index);
}
inline ::proto_ff::RedPlayerInfo* CharacterDBPvpData::add_red_player() {
  return red_player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RedPlayerInfo >&
CharacterDBPvpData::red_player() const {
  return red_player_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RedPlayerInfo >*
CharacterDBPvpData::mutable_red_player() {
  return &red_player_;
}

// optional uint64 online_time = 4;
inline bool CharacterDBPvpData::has_online_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBPvpData::set_has_online_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBPvpData::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBPvpData::clear_online_time() {
  online_time_ = GOOGLE_ULONGLONG(0);
  clear_has_online_time();
}
inline ::google::protobuf::uint64 CharacterDBPvpData::online_time() const {
  return online_time_;
}
inline void CharacterDBPvpData::set_online_time(::google::protobuf::uint64 value) {
  set_has_online_time();
  online_time_ = value;
}

// optional int32 kill_num = 5;
inline bool CharacterDBPvpData::has_kill_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBPvpData::set_has_kill_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBPvpData::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBPvpData::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
}
inline ::google::protobuf::int32 CharacterDBPvpData::kill_num() const {
  return kill_num_;
}
inline void CharacterDBPvpData::set_kill_num(::google::protobuf::int32 value) {
  set_has_kill_num();
  kill_num_ = value;
}

// optional int32 be_kill_num = 6;
inline bool CharacterDBPvpData::has_be_kill_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBPvpData::set_has_be_kill_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBPvpData::clear_has_be_kill_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBPvpData::clear_be_kill_num() {
  be_kill_num_ = 0;
  clear_has_be_kill_num();
}
inline ::google::protobuf::int32 CharacterDBPvpData::be_kill_num() const {
  return be_kill_num_;
}
inline void CharacterDBPvpData::set_be_kill_num(::google::protobuf::int32 value) {
  set_has_be_kill_num();
  be_kill_num_ = value;
}

// optional int64 lastTime = 7;
inline bool CharacterDBPvpData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBPvpData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBPvpData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBPvpData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 CharacterDBPvpData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBPvpData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional string be_kill_name = 8;
inline bool CharacterDBPvpData::has_be_kill_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBPvpData::set_has_be_kill_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBPvpData::clear_has_be_kill_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBPvpData::clear_be_kill_name() {
  if (be_kill_name_ != &::google::protobuf::internal::kEmptyString) {
    be_kill_name_->clear();
  }
  clear_has_be_kill_name();
}
inline const ::std::string& CharacterDBPvpData::be_kill_name() const {
  return *be_kill_name_;
}
inline void CharacterDBPvpData::set_be_kill_name(const ::std::string& value) {
  set_has_be_kill_name();
  if (be_kill_name_ == &::google::protobuf::internal::kEmptyString) {
    be_kill_name_ = new ::std::string;
  }
  be_kill_name_->assign(value);
}
inline void CharacterDBPvpData::set_be_kill_name(const char* value) {
  set_has_be_kill_name();
  if (be_kill_name_ == &::google::protobuf::internal::kEmptyString) {
    be_kill_name_ = new ::std::string;
  }
  be_kill_name_->assign(value);
}
inline void CharacterDBPvpData::set_be_kill_name(const char* value, size_t size) {
  set_has_be_kill_name();
  if (be_kill_name_ == &::google::protobuf::internal::kEmptyString) {
    be_kill_name_ = new ::std::string;
  }
  be_kill_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterDBPvpData::mutable_be_kill_name() {
  set_has_be_kill_name();
  if (be_kill_name_ == &::google::protobuf::internal::kEmptyString) {
    be_kill_name_ = new ::std::string;
  }
  return be_kill_name_;
}
inline ::std::string* CharacterDBPvpData::release_be_kill_name() {
  clear_has_be_kill_name();
  if (be_kill_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = be_kill_name_;
    be_kill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterDBPvpData::set_allocated_be_kill_name(::std::string* be_kill_name) {
  if (be_kill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete be_kill_name_;
  }
  if (be_kill_name) {
    set_has_be_kill_name();
    be_kill_name_ = be_kill_name;
  } else {
    clear_has_be_kill_name();
    be_kill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CharacterDBTreasureData

// optional uint64 advanceTreasureExp = 1;
inline bool CharacterDBTreasureData::has_advancetreasureexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBTreasureData::set_has_advancetreasureexp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBTreasureData::clear_has_advancetreasureexp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBTreasureData::clear_advancetreasureexp() {
  advancetreasureexp_ = GOOGLE_ULONGLONG(0);
  clear_has_advancetreasureexp();
}
inline ::google::protobuf::uint64 CharacterDBTreasureData::advancetreasureexp() const {
  return advancetreasureexp_;
}
inline void CharacterDBTreasureData::set_advancetreasureexp(::google::protobuf::uint64 value) {
  set_has_advancetreasureexp();
  advancetreasureexp_ = value;
}

// optional uint32 advanceTreasureLev = 2;
inline bool CharacterDBTreasureData::has_advancetreasurelev() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBTreasureData::set_has_advancetreasurelev() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBTreasureData::clear_has_advancetreasurelev() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBTreasureData::clear_advancetreasurelev() {
  advancetreasurelev_ = 0u;
  clear_has_advancetreasurelev();
}
inline ::google::protobuf::uint32 CharacterDBTreasureData::advancetreasurelev() const {
  return advancetreasurelev_;
}
inline void CharacterDBTreasureData::set_advancetreasurelev(::google::protobuf::uint32 value) {
  set_has_advancetreasurelev();
  advancetreasurelev_ = value;
}

// optional uint64 equipTreasureID = 3;
inline bool CharacterDBTreasureData::has_equiptreasureid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBTreasureData::set_has_equiptreasureid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBTreasureData::clear_has_equiptreasureid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBTreasureData::clear_equiptreasureid() {
  equiptreasureid_ = GOOGLE_ULONGLONG(0);
  clear_has_equiptreasureid();
}
inline ::google::protobuf::uint64 CharacterDBTreasureData::equiptreasureid() const {
  return equiptreasureid_;
}
inline void CharacterDBTreasureData::set_equiptreasureid(::google::protobuf::uint64 value) {
  set_has_equiptreasureid();
  equiptreasureid_ = value;
}

// repeated .proto_ff.ComPair64 fantasyTreasures = 4;
inline int CharacterDBTreasureData::fantasytreasures_size() const {
  return fantasytreasures_.size();
}
inline void CharacterDBTreasureData::clear_fantasytreasures() {
  fantasytreasures_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBTreasureData::fantasytreasures(int index) const {
  return fantasytreasures_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBTreasureData::mutable_fantasytreasures(int index) {
  return fantasytreasures_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBTreasureData::add_fantasytreasures() {
  return fantasytreasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBTreasureData::fantasytreasures() const {
  return fantasytreasures_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBTreasureData::mutable_fantasytreasures() {
  return &fantasytreasures_;
}

// repeated .proto_ff.ComPair64 fragments = 5;
inline int CharacterDBTreasureData::fragments_size() const {
  return fragments_.size();
}
inline void CharacterDBTreasureData::clear_fragments() {
  fragments_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBTreasureData::fragments(int index) const {
  return fragments_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBTreasureData::mutable_fragments(int index) {
  return fragments_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBTreasureData::add_fragments() {
  return fragments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBTreasureData::fragments() const {
  return fragments_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBTreasureData::mutable_fragments() {
  return &fragments_;
}

// optional uint64 skillTreasureID = 6;
inline bool CharacterDBTreasureData::has_skilltreasureid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBTreasureData::set_has_skilltreasureid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBTreasureData::clear_has_skilltreasureid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBTreasureData::clear_skilltreasureid() {
  skilltreasureid_ = GOOGLE_ULONGLONG(0);
  clear_has_skilltreasureid();
}
inline ::google::protobuf::uint64 CharacterDBTreasureData::skilltreasureid() const {
  return skilltreasureid_;
}
inline void CharacterDBTreasureData::set_skilltreasureid(::google::protobuf::uint64 value) {
  set_has_skilltreasureid();
  skilltreasureid_ = value;
}

// optional int32 isbreak = 7;
inline bool CharacterDBTreasureData::has_isbreak() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBTreasureData::set_has_isbreak() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBTreasureData::clear_has_isbreak() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBTreasureData::clear_isbreak() {
  isbreak_ = 0;
  clear_has_isbreak();
}
inline ::google::protobuf::int32 CharacterDBTreasureData::isbreak() const {
  return isbreak_;
}
inline void CharacterDBTreasureData::set_isbreak(::google::protobuf::int32 value) {
  set_has_isbreak();
  isbreak_ = value;
}

// -------------------------------------------------------------------

// ArtifactInfo

// optional uint64 id = 1;
inline bool ArtifactInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArtifactInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArtifactInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArtifactInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 ArtifactInfo::id() const {
  return id_;
}
inline void ArtifactInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 star_lv = 2;
inline bool ArtifactInfo::has_star_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArtifactInfo::set_has_star_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArtifactInfo::clear_has_star_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArtifactInfo::clear_star_lv() {
  star_lv_ = 0;
  clear_has_star_lv();
}
inline ::google::protobuf::int32 ArtifactInfo::star_lv() const {
  return star_lv_;
}
inline void ArtifactInfo::set_star_lv(::google::protobuf::int32 value) {
  set_has_star_lv();
  star_lv_ = value;
}

// -------------------------------------------------------------------

// CharacterDBArtifactData

// repeated .proto_ff.ArtifactInfo infos = 1;
inline int CharacterDBArtifactData::infos_size() const {
  return infos_.size();
}
inline void CharacterDBArtifactData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::ArtifactInfo& CharacterDBArtifactData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::ArtifactInfo* CharacterDBArtifactData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::ArtifactInfo* CharacterDBArtifactData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ArtifactInfo >&
CharacterDBArtifactData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ArtifactInfo >*
CharacterDBArtifactData::mutable_infos() {
  return &infos_;
}

// optional uint64 dress_id = 2;
inline bool CharacterDBArtifactData::has_dress_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBArtifactData::set_has_dress_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBArtifactData::clear_has_dress_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBArtifactData::clear_dress_id() {
  dress_id_ = GOOGLE_ULONGLONG(0);
  clear_has_dress_id();
}
inline ::google::protobuf::uint64 CharacterDBArtifactData::dress_id() const {
  return dress_id_;
}
inline void CharacterDBArtifactData::set_dress_id(::google::protobuf::uint64 value) {
  set_has_dress_id();
  dress_id_ = value;
}

// -------------------------------------------------------------------

// CharacterDBFateStarData

// optional uint64 freeTime = 1;
inline bool CharacterDBFateStarData::has_freetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBFateStarData::set_has_freetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBFateStarData::clear_has_freetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBFateStarData::clear_freetime() {
  freetime_ = GOOGLE_ULONGLONG(0);
  clear_has_freetime();
}
inline ::google::protobuf::uint64 CharacterDBFateStarData::freetime() const {
  return freetime_;
}
inline void CharacterDBFateStarData::set_freetime(::google::protobuf::uint64 value) {
  set_has_freetime();
  freetime_ = value;
}

// optional uint32 towerLevel = 2;
inline bool CharacterDBFateStarData::has_towerlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBFateStarData::set_has_towerlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBFateStarData::clear_has_towerlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBFateStarData::clear_towerlevel() {
  towerlevel_ = 0u;
  clear_has_towerlevel();
}
inline ::google::protobuf::uint32 CharacterDBFateStarData::towerlevel() const {
  return towerlevel_;
}
inline void CharacterDBFateStarData::set_towerlevel(::google::protobuf::uint32 value) {
  set_has_towerlevel();
  towerlevel_ = value;
}

// optional uint32 nbless = 3;
inline bool CharacterDBFateStarData::has_nbless() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBFateStarData::set_has_nbless() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBFateStarData::clear_has_nbless() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBFateStarData::clear_nbless() {
  nbless_ = 0u;
  clear_has_nbless();
}
inline ::google::protobuf::uint32 CharacterDBFateStarData::nbless() const {
  return nbless_;
}
inline void CharacterDBFateStarData::set_nbless(::google::protobuf::uint32 value) {
  set_has_nbless();
  nbless_ = value;
}

// repeated .proto_ff.ComPair soltData = 4;
inline int CharacterDBFateStarData::soltdata_size() const {
  return soltdata_.size();
}
inline void CharacterDBFateStarData::clear_soltdata() {
  soltdata_.Clear();
}
inline const ::proto_ff::ComPair& CharacterDBFateStarData::soltdata(int index) const {
  return soltdata_.Get(index);
}
inline ::proto_ff::ComPair* CharacterDBFateStarData::mutable_soltdata(int index) {
  return soltdata_.Mutable(index);
}
inline ::proto_ff::ComPair* CharacterDBFateStarData::add_soltdata() {
  return soltdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
CharacterDBFateStarData::soltdata() const {
  return soltdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
CharacterDBFateStarData::mutable_soltdata() {
  return &soltdata_;
}

// repeated .proto_ff.ItemProtoInfo equipStars = 5;
inline int CharacterDBFateStarData::equipstars_size() const {
  return equipstars_.size();
}
inline void CharacterDBFateStarData::clear_equipstars() {
  equipstars_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& CharacterDBFateStarData::equipstars(int index) const {
  return equipstars_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* CharacterDBFateStarData::mutable_equipstars(int index) {
  return equipstars_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* CharacterDBFateStarData::add_equipstars() {
  return equipstars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
CharacterDBFateStarData::equipstars() const {
  return equipstars_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
CharacterDBFateStarData::mutable_equipstars() {
  return &equipstars_;
}

// optional uint32 curnum = 6;
inline bool CharacterDBFateStarData::has_curnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBFateStarData::set_has_curnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBFateStarData::clear_has_curnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBFateStarData::clear_curnum() {
  curnum_ = 0u;
  clear_has_curnum();
}
inline ::google::protobuf::uint32 CharacterDBFateStarData::curnum() const {
  return curnum_;
}
inline void CharacterDBFateStarData::set_curnum(::google::protobuf::uint32 value) {
  set_has_curnum();
  curnum_ = value;
}

// optional uint64 lasttime = 7;
inline bool CharacterDBFateStarData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBFateStarData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBFateStarData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBFateStarData::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 CharacterDBFateStarData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBFateStarData::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// CharacterDBConvoyData

// optional uint32 doTimes = 1;
inline bool CharacterDBConvoyData::has_dotimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBConvoyData::set_has_dotimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBConvoyData::clear_has_dotimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBConvoyData::clear_dotimes() {
  dotimes_ = 0u;
  clear_has_dotimes();
}
inline ::google::protobuf::uint32 CharacterDBConvoyData::dotimes() const {
  return dotimes_;
}
inline void CharacterDBConvoyData::set_dotimes(::google::protobuf::uint32 value) {
  set_has_dotimes();
  dotimes_ = value;
}

// optional uint32 convoyDate = 2;
inline bool CharacterDBConvoyData::has_convoydate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBConvoyData::set_has_convoydate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBConvoyData::clear_has_convoydate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBConvoyData::clear_convoydate() {
  convoydate_ = 0u;
  clear_has_convoydate();
}
inline ::google::protobuf::uint32 CharacterDBConvoyData::convoydate() const {
  return convoydate_;
}
inline void CharacterDBConvoyData::set_convoydate(::google::protobuf::uint32 value) {
  set_has_convoydate();
  convoydate_ = value;
}

// optional uint64 escortid = 3;
inline bool CharacterDBConvoyData::has_escortid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBConvoyData::set_has_escortid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBConvoyData::clear_has_escortid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBConvoyData::clear_escortid() {
  escortid_ = GOOGLE_ULONGLONG(0);
  clear_has_escortid();
}
inline ::google::protobuf::uint64 CharacterDBConvoyData::escortid() const {
  return escortid_;
}
inline void CharacterDBConvoyData::set_escortid(::google::protobuf::uint64 value) {
  set_has_escortid();
  escortid_ = value;
}

// optional uint64 acceptTime = 4;
inline bool CharacterDBConvoyData::has_accepttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBConvoyData::set_has_accepttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBConvoyData::clear_has_accepttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBConvoyData::clear_accepttime() {
  accepttime_ = GOOGLE_ULONGLONG(0);
  clear_has_accepttime();
}
inline ::google::protobuf::uint64 CharacterDBConvoyData::accepttime() const {
  return accepttime_;
}
inline void CharacterDBConvoyData::set_accepttime(::google::protobuf::uint64 value) {
  set_has_accepttime();
  accepttime_ = value;
}

// optional uint32 refreshTimes = 5;
inline bool CharacterDBConvoyData::has_refreshtimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBConvoyData::set_has_refreshtimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBConvoyData::clear_has_refreshtimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBConvoyData::clear_refreshtimes() {
  refreshtimes_ = 0u;
  clear_has_refreshtimes();
}
inline ::google::protobuf::uint32 CharacterDBConvoyData::refreshtimes() const {
  return refreshtimes_;
}
inline void CharacterDBConvoyData::set_refreshtimes(::google::protobuf::uint32 value) {
  set_has_refreshtimes();
  refreshtimes_ = value;
}

// optional uint64 selectEscortId = 6;
inline bool CharacterDBConvoyData::has_selectescortid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBConvoyData::set_has_selectescortid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBConvoyData::clear_has_selectescortid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBConvoyData::clear_selectescortid() {
  selectescortid_ = GOOGLE_ULONGLONG(0);
  clear_has_selectescortid();
}
inline ::google::protobuf::uint64 CharacterDBConvoyData::selectescortid() const {
  return selectescortid_;
}
inline void CharacterDBConvoyData::set_selectescortid(::google::protobuf::uint64 value) {
  set_has_selectescortid();
  selectescortid_ = value;
}

// optional uint64 refreshTimeStamp = 7;
inline bool CharacterDBConvoyData::has_refreshtimestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBConvoyData::set_has_refreshtimestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBConvoyData::clear_has_refreshtimestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBConvoyData::clear_refreshtimestamp() {
  refreshtimestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_refreshtimestamp();
}
inline ::google::protobuf::uint64 CharacterDBConvoyData::refreshtimestamp() const {
  return refreshtimestamp_;
}
inline void CharacterDBConvoyData::set_refreshtimestamp(::google::protobuf::uint64 value) {
  set_has_refreshtimestamp();
  refreshtimestamp_ = value;
}

// optional uint64 LastResetTime = 8;
inline bool CharacterDBConvoyData::has_lastresettime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBConvoyData::set_has_lastresettime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBConvoyData::clear_has_lastresettime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBConvoyData::clear_lastresettime() {
  lastresettime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastresettime();
}
inline ::google::protobuf::uint64 CharacterDBConvoyData::lastresettime() const {
  return lastresettime_;
}
inline void CharacterDBConvoyData::set_lastresettime(::google::protobuf::uint64 value) {
  set_has_lastresettime();
  lastresettime_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDailyEntry

// optional uint64 cfg_id = 1;
inline bool CharacterDBDailyEntry::has_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDailyEntry::set_has_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDailyEntry::clear_has_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDailyEntry::clear_cfg_id() {
  cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cfg_id();
}
inline ::google::protobuf::uint64 CharacterDBDailyEntry::cfg_id() const {
  return cfg_id_;
}
inline void CharacterDBDailyEntry::set_cfg_id(::google::protobuf::uint64 value) {
  set_has_cfg_id();
  cfg_id_ = value;
}

// optional int32 cur_num = 2;
inline bool CharacterDBDailyEntry::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBDailyEntry::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBDailyEntry::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBDailyEntry::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 CharacterDBDailyEntry::cur_num() const {
  return cur_num_;
}
inline void CharacterDBDailyEntry::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBDailyData

// repeated .proto_ff.CharacterDBDailyEntry daily_entry = 1;
inline int CharacterDBDailyData::daily_entry_size() const {
  return daily_entry_.size();
}
inline void CharacterDBDailyData::clear_daily_entry() {
  daily_entry_.Clear();
}
inline const ::proto_ff::CharacterDBDailyEntry& CharacterDBDailyData::daily_entry(int index) const {
  return daily_entry_.Get(index);
}
inline ::proto_ff::CharacterDBDailyEntry* CharacterDBDailyData::mutable_daily_entry(int index) {
  return daily_entry_.Mutable(index);
}
inline ::proto_ff::CharacterDBDailyEntry* CharacterDBDailyData::add_daily_entry() {
  return daily_entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDailyEntry >&
CharacterDBDailyData::daily_entry() const {
  return daily_entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBDailyEntry >*
CharacterDBDailyData::mutable_daily_entry() {
  return &daily_entry_;
}

// repeated uint64 rewards = 2;
inline int CharacterDBDailyData::rewards_size() const {
  return rewards_.size();
}
inline void CharacterDBDailyData::clear_rewards() {
  rewards_.Clear();
}
inline ::google::protobuf::uint64 CharacterDBDailyData::rewards(int index) const {
  return rewards_.Get(index);
}
inline void CharacterDBDailyData::set_rewards(int index, ::google::protobuf::uint64 value) {
  rewards_.Set(index, value);
}
inline void CharacterDBDailyData::add_rewards(::google::protobuf::uint64 value) {
  rewards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterDBDailyData::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterDBDailyData::mutable_rewards() {
  return &rewards_;
}

// optional uint64 lasttime = 3;
inline bool CharacterDBDailyData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBDailyData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBDailyData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBDailyData::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 CharacterDBDailyData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBDailyData::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// FieldCylstalInfo

// optional int32 slotIndex = 1;
inline bool FieldCylstalInfo::has_slotindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldCylstalInfo::set_has_slotindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldCylstalInfo::clear_has_slotindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldCylstalInfo::clear_slotindex() {
  slotindex_ = 0;
  clear_has_slotindex();
}
inline ::google::protobuf::int32 FieldCylstalInfo::slotindex() const {
  return slotindex_;
}
inline void FieldCylstalInfo::set_slotindex(::google::protobuf::int32 value) {
  set_has_slotindex();
  slotindex_ = value;
}

// optional int64 itemid = 2;
inline bool FieldCylstalInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FieldCylstalInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FieldCylstalInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FieldCylstalInfo::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 FieldCylstalInfo::itemid() const {
  return itemid_;
}
inline void FieldCylstalInfo::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// FieldExInfo

// optional int32 actived = 1;
inline bool FieldExInfo::has_actived() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldExInfo::set_has_actived() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldExInfo::clear_has_actived() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldExInfo::clear_actived() {
  actived_ = 0;
  clear_has_actived();
}
inline ::google::protobuf::int32 FieldExInfo::actived() const {
  return actived_;
}
inline void FieldExInfo::set_actived(::google::protobuf::int32 value) {
  set_has_actived();
  actived_ = value;
}

// repeated .proto_ff.ItemProtoInfo slotInfos = 2;
inline int FieldExInfo::slotinfos_size() const {
  return slotinfos_.size();
}
inline void FieldExInfo::clear_slotinfos() {
  slotinfos_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& FieldExInfo::slotinfos(int index) const {
  return slotinfos_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* FieldExInfo::mutable_slotinfos(int index) {
  return slotinfos_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* FieldExInfo::add_slotinfos() {
  return slotinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
FieldExInfo::slotinfos() const {
  return slotinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
FieldExInfo::mutable_slotinfos() {
  return &slotinfos_;
}

// optional uint64 fieldId = 3;
inline bool FieldExInfo::has_fieldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FieldExInfo::set_has_fieldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FieldExInfo::clear_has_fieldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FieldExInfo::clear_fieldid() {
  fieldid_ = GOOGLE_ULONGLONG(0);
  clear_has_fieldid();
}
inline ::google::protobuf::uint64 FieldExInfo::fieldid() const {
  return fieldid_;
}
inline void FieldExInfo::set_fieldid(::google::protobuf::uint64 value) {
  set_has_fieldid();
  fieldid_ = value;
}

// optional uint64 fightNum = 4;
inline bool FieldExInfo::has_fightnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FieldExInfo::set_has_fightnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FieldExInfo::clear_has_fightnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FieldExInfo::clear_fightnum() {
  fightnum_ = GOOGLE_ULONGLONG(0);
  clear_has_fightnum();
}
inline ::google::protobuf::uint64 FieldExInfo::fightnum() const {
  return fightnum_;
}
inline void FieldExInfo::set_fightnum(::google::protobuf::uint64 value) {
  set_has_fightnum();
  fightnum_ = value;
}

// repeated .proto_ff.FieldCylstalInfo cylstalInfos = 5;
inline int FieldExInfo::cylstalinfos_size() const {
  return cylstalinfos_.size();
}
inline void FieldExInfo::clear_cylstalinfos() {
  cylstalinfos_.Clear();
}
inline const ::proto_ff::FieldCylstalInfo& FieldExInfo::cylstalinfos(int index) const {
  return cylstalinfos_.Get(index);
}
inline ::proto_ff::FieldCylstalInfo* FieldExInfo::mutable_cylstalinfos(int index) {
  return cylstalinfos_.Mutable(index);
}
inline ::proto_ff::FieldCylstalInfo* FieldExInfo::add_cylstalinfos() {
  return cylstalinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldCylstalInfo >&
FieldExInfo::cylstalinfos() const {
  return cylstalinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldCylstalInfo >*
FieldExInfo::mutable_cylstalinfos() {
  return &cylstalinfos_;
}

// optional bool first_active = 6;
inline bool FieldExInfo::has_first_active() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FieldExInfo::set_has_first_active() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FieldExInfo::clear_has_first_active() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FieldExInfo::clear_first_active() {
  first_active_ = false;
  clear_has_first_active();
}
inline bool FieldExInfo::first_active() const {
  return first_active_;
}
inline void FieldExInfo::set_first_active(bool value) {
  set_has_first_active();
  first_active_ = value;
}

// -------------------------------------------------------------------

// CharacterDBFieldData

// repeated .proto_ff.FieldExInfo fieldInfos = 1;
inline int CharacterDBFieldData::fieldinfos_size() const {
  return fieldinfos_.size();
}
inline void CharacterDBFieldData::clear_fieldinfos() {
  fieldinfos_.Clear();
}
inline const ::proto_ff::FieldExInfo& CharacterDBFieldData::fieldinfos(int index) const {
  return fieldinfos_.Get(index);
}
inline ::proto_ff::FieldExInfo* CharacterDBFieldData::mutable_fieldinfos(int index) {
  return fieldinfos_.Mutable(index);
}
inline ::proto_ff::FieldExInfo* CharacterDBFieldData::add_fieldinfos() {
  return fieldinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldExInfo >&
CharacterDBFieldData::fieldinfos() const {
  return fieldinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FieldExInfo >*
CharacterDBFieldData::mutable_fieldinfos() {
  return &fieldinfos_;
}

// optional uint64 curExp = 2;
inline bool CharacterDBFieldData::has_curexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBFieldData::set_has_curexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBFieldData::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBFieldData::clear_curexp() {
  curexp_ = GOOGLE_ULONGLONG(0);
  clear_has_curexp();
}
inline ::google::protobuf::uint64 CharacterDBFieldData::curexp() const {
  return curexp_;
}
inline void CharacterDBFieldData::set_curexp(::google::protobuf::uint64 value) {
  set_has_curexp();
  curexp_ = value;
}

// optional int32 maxNum = 3;
inline bool CharacterDBFieldData::has_maxnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBFieldData::set_has_maxnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBFieldData::clear_has_maxnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBFieldData::clear_maxnum() {
  maxnum_ = 0;
  clear_has_maxnum();
}
inline ::google::protobuf::int32 CharacterDBFieldData::maxnum() const {
  return maxnum_;
}
inline void CharacterDBFieldData::set_maxnum(::google::protobuf::int32 value) {
  set_has_maxnum();
  maxnum_ = value;
}

// -------------------------------------------------------------------

// vipGiftDBData

// optional uint64 giftId = 1;
inline bool vipGiftDBData::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void vipGiftDBData::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void vipGiftDBData::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void vipGiftDBData::clear_giftid() {
  giftid_ = GOOGLE_ULONGLONG(0);
  clear_has_giftid();
}
inline ::google::protobuf::uint64 vipGiftDBData::giftid() const {
  return giftid_;
}
inline void vipGiftDBData::set_giftid(::google::protobuf::uint64 value) {
  set_has_giftid();
  giftid_ = value;
}

// optional uint64 activeTime = 2;
inline bool vipGiftDBData::has_activetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void vipGiftDBData::set_has_activetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void vipGiftDBData::clear_has_activetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void vipGiftDBData::clear_activetime() {
  activetime_ = GOOGLE_ULONGLONG(0);
  clear_has_activetime();
}
inline ::google::protobuf::uint64 vipGiftDBData::activetime() const {
  return activetime_;
}
inline void vipGiftDBData::set_activetime(::google::protobuf::uint64 value) {
  set_has_activetime();
  activetime_ = value;
}

// optional uint64 lastGetTime = 3;
inline bool vipGiftDBData::has_lastgettime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void vipGiftDBData::set_has_lastgettime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void vipGiftDBData::clear_has_lastgettime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void vipGiftDBData::clear_lastgettime() {
  lastgettime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastgettime();
}
inline ::google::protobuf::uint64 vipGiftDBData::lastgettime() const {
  return lastgettime_;
}
inline void vipGiftDBData::set_lastgettime(::google::protobuf::uint64 value) {
  set_has_lastgettime();
  lastgettime_ = value;
}

// -------------------------------------------------------------------

// VipTCardInfo

// optional int32 id = 1;
inline bool VipTCardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipTCardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipTCardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipTCardInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 VipTCardInfo::id() const {
  return id_;
}
inline void VipTCardInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 endTime = 2;
inline bool VipTCardInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipTCardInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipTCardInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipTCardInfo::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 VipTCardInfo::endtime() const {
  return endtime_;
}
inline void VipTCardInfo::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int32 state = 3;
inline bool VipTCardInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipTCardInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipTCardInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipTCardInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 VipTCardInfo::state() const {
  return state_;
}
inline void VipTCardInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 rewardState = 4;
inline bool VipTCardInfo::has_rewardstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VipTCardInfo::set_has_rewardstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VipTCardInfo::clear_has_rewardstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VipTCardInfo::clear_rewardstate() {
  rewardstate_ = 0;
  clear_has_rewardstate();
}
inline ::google::protobuf::int32 VipTCardInfo::rewardstate() const {
  return rewardstate_;
}
inline void VipTCardInfo::set_rewardstate(::google::protobuf::int32 value) {
  set_has_rewardstate();
  rewardstate_ = value;
}

// -------------------------------------------------------------------

// VipTCardData

// repeated .proto_ff.VipTCardInfo cardInfo = 1;
inline int VipTCardData::cardinfo_size() const {
  return cardinfo_.size();
}
inline void VipTCardData::clear_cardinfo() {
  cardinfo_.Clear();
}
inline const ::proto_ff::VipTCardInfo& VipTCardData::cardinfo(int index) const {
  return cardinfo_.Get(index);
}
inline ::proto_ff::VipTCardInfo* VipTCardData::mutable_cardinfo(int index) {
  return cardinfo_.Mutable(index);
}
inline ::proto_ff::VipTCardInfo* VipTCardData::add_cardinfo() {
  return cardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::VipTCardInfo >&
VipTCardData::cardinfo() const {
  return cardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::VipTCardInfo >*
VipTCardData::mutable_cardinfo() {
  return &cardinfo_;
}

// optional int32 giftState = 2;
inline bool VipTCardData::has_giftstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipTCardData::set_has_giftstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipTCardData::clear_has_giftstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipTCardData::clear_giftstate() {
  giftstate_ = 0;
  clear_has_giftstate();
}
inline ::google::protobuf::int32 VipTCardData::giftstate() const {
  return giftstate_;
}
inline void VipTCardData::set_giftstate(::google::protobuf::int32 value) {
  set_has_giftstate();
  giftstate_ = value;
}

// optional int32 point = 3;
inline bool VipTCardData::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipTCardData::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipTCardData::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipTCardData::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 VipTCardData::point() const {
  return point_;
}
inline void VipTCardData::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// CharacterDBVipData

// optional uint32 vipState = 1;
inline bool CharacterDBVipData::has_vipstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBVipData::set_has_vipstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBVipData::clear_has_vipstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBVipData::clear_vipstate() {
  vipstate_ = 0u;
  clear_has_vipstate();
}
inline ::google::protobuf::uint32 CharacterDBVipData::vipstate() const {
  return vipstate_;
}
inline void CharacterDBVipData::set_vipstate(::google::protobuf::uint32 value) {
  set_has_vipstate();
  vipstate_ = value;
}

// optional uint64 vipExp = 2;
inline bool CharacterDBVipData::has_vipexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBVipData::set_has_vipexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBVipData::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBVipData::clear_vipexp() {
  vipexp_ = GOOGLE_ULONGLONG(0);
  clear_has_vipexp();
}
inline ::google::protobuf::uint64 CharacterDBVipData::vipexp() const {
  return vipexp_;
}
inline void CharacterDBVipData::set_vipexp(::google::protobuf::uint64 value) {
  set_has_vipexp();
  vipexp_ = value;
}

// optional uint64 getRewardTime = 3;
inline bool CharacterDBVipData::has_getrewardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBVipData::set_has_getrewardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBVipData::clear_has_getrewardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBVipData::clear_getrewardtime() {
  getrewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_getrewardtime();
}
inline ::google::protobuf::uint64 CharacterDBVipData::getrewardtime() const {
  return getrewardtime_;
}
inline void CharacterDBVipData::set_getrewardtime(::google::protobuf::uint64 value) {
  set_has_getrewardtime();
  getrewardtime_ = value;
}

// optional uint64 expDiamond = 4;
inline bool CharacterDBVipData::has_expdiamond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBVipData::set_has_expdiamond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBVipData::clear_has_expdiamond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBVipData::clear_expdiamond() {
  expdiamond_ = GOOGLE_ULONGLONG(0);
  clear_has_expdiamond();
}
inline ::google::protobuf::uint64 CharacterDBVipData::expdiamond() const {
  return expdiamond_;
}
inline void CharacterDBVipData::set_expdiamond(::google::protobuf::uint64 value) {
  set_has_expdiamond();
  expdiamond_ = value;
}

// repeated .proto_ff.ComPair64 timeLimitExp = 5;
inline int CharacterDBVipData::timelimitexp_size() const {
  return timelimitexp_.size();
}
inline void CharacterDBVipData::clear_timelimitexp() {
  timelimitexp_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBVipData::timelimitexp(int index) const {
  return timelimitexp_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBVipData::mutable_timelimitexp(int index) {
  return timelimitexp_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBVipData::add_timelimitexp() {
  return timelimitexp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBVipData::timelimitexp() const {
  return timelimitexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBVipData::mutable_timelimitexp() {
  return &timelimitexp_;
}

// repeated .proto_ff.vipGiftDBData vipGift = 6;
inline int CharacterDBVipData::vipgift_size() const {
  return vipgift_.size();
}
inline void CharacterDBVipData::clear_vipgift() {
  vipgift_.Clear();
}
inline const ::proto_ff::vipGiftDBData& CharacterDBVipData::vipgift(int index) const {
  return vipgift_.Get(index);
}
inline ::proto_ff::vipGiftDBData* CharacterDBVipData::mutable_vipgift(int index) {
  return vipgift_.Mutable(index);
}
inline ::proto_ff::vipGiftDBData* CharacterDBVipData::add_vipgift() {
  return vipgift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::vipGiftDBData >&
CharacterDBVipData::vipgift() const {
  return vipgift_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::vipGiftDBData >*
CharacterDBVipData::mutable_vipgift() {
  return &vipgift_;
}

// optional .proto_ff.VipTCardData cardData = 7;
inline bool CharacterDBVipData::has_carddata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBVipData::set_has_carddata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBVipData::clear_has_carddata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBVipData::clear_carddata() {
  if (carddata_ != NULL) carddata_->::proto_ff::VipTCardData::Clear();
  clear_has_carddata();
}
inline const ::proto_ff::VipTCardData& CharacterDBVipData::carddata() const {
  return carddata_ != NULL ? *carddata_ : *default_instance_->carddata_;
}
inline ::proto_ff::VipTCardData* CharacterDBVipData::mutable_carddata() {
  set_has_carddata();
  if (carddata_ == NULL) carddata_ = new ::proto_ff::VipTCardData;
  return carddata_;
}
inline ::proto_ff::VipTCardData* CharacterDBVipData::release_carddata() {
  clear_has_carddata();
  ::proto_ff::VipTCardData* temp = carddata_;
  carddata_ = NULL;
  return temp;
}
inline void CharacterDBVipData::set_allocated_carddata(::proto_ff::VipTCardData* carddata) {
  delete carddata_;
  carddata_ = carddata;
  if (carddata) {
    set_has_carddata();
  } else {
    clear_has_carddata();
  }
}

// optional int64 cardLastTime = 8;
inline bool CharacterDBVipData::has_cardlasttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBVipData::set_has_cardlasttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBVipData::clear_has_cardlasttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBVipData::clear_cardlasttime() {
  cardlasttime_ = GOOGLE_LONGLONG(0);
  clear_has_cardlasttime();
}
inline ::google::protobuf::int64 CharacterDBVipData::cardlasttime() const {
  return cardlasttime_;
}
inline void CharacterDBVipData::set_cardlasttime(::google::protobuf::int64 value) {
  set_has_cardlasttime();
  cardlasttime_ = value;
}

// optional int64 curAddVipExp = 9;
inline bool CharacterDBVipData::has_curaddvipexp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBVipData::set_has_curaddvipexp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBVipData::clear_has_curaddvipexp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBVipData::clear_curaddvipexp() {
  curaddvipexp_ = GOOGLE_LONGLONG(0);
  clear_has_curaddvipexp();
}
inline ::google::protobuf::int64 CharacterDBVipData::curaddvipexp() const {
  return curaddvipexp_;
}
inline void CharacterDBVipData::set_curaddvipexp(::google::protobuf::int64 value) {
  set_has_curaddvipexp();
  curaddvipexp_ = value;
}

// optional int32 point = 10;
inline bool CharacterDBVipData::has_point() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterDBVipData::set_has_point() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterDBVipData::clear_has_point() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterDBVipData::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 CharacterDBVipData::point() const {
  return point_;
}
inline void CharacterDBVipData::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMallData

// optional uint64 refreshTime = 1;
inline bool CharacterDBMallData::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBMallData::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBMallData::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBMallData::clear_refreshtime() {
  refreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_refreshtime();
}
inline ::google::protobuf::uint64 CharacterDBMallData::refreshtime() const {
  return refreshtime_;
}
inline void CharacterDBMallData::set_refreshtime(::google::protobuf::uint64 value) {
  set_has_refreshtime();
  refreshtime_ = value;
}

// repeated .proto_ff.ComPair64 goodsInfo = 2;
inline int CharacterDBMallData::goodsinfo_size() const {
  return goodsinfo_.size();
}
inline void CharacterDBMallData::clear_goodsinfo() {
  goodsinfo_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBMallData::goodsinfo(int index) const {
  return goodsinfo_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBMallData::mutable_goodsinfo(int index) {
  return goodsinfo_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBMallData::add_goodsinfo() {
  return goodsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBMallData::goodsinfo() const {
  return goodsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBMallData::mutable_goodsinfo() {
  return &goodsinfo_;
}

// optional uint64 dailyRefreshTime = 3;
inline bool CharacterDBMallData::has_dailyrefreshtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBMallData::set_has_dailyrefreshtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBMallData::clear_has_dailyrefreshtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBMallData::clear_dailyrefreshtime() {
  dailyrefreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_dailyrefreshtime();
}
inline ::google::protobuf::uint64 CharacterDBMallData::dailyrefreshtime() const {
  return dailyrefreshtime_;
}
inline void CharacterDBMallData::set_dailyrefreshtime(::google::protobuf::uint64 value) {
  set_has_dailyrefreshtime();
  dailyrefreshtime_ = value;
}

// optional int32 refreshNum = 4;
inline bool CharacterDBMallData::has_refreshnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBMallData::set_has_refreshnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBMallData::clear_has_refreshnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBMallData::clear_refreshnum() {
  refreshnum_ = 0;
  clear_has_refreshnum();
}
inline ::google::protobuf::int32 CharacterDBMallData::refreshnum() const {
  return refreshnum_;
}
inline void CharacterDBMallData::set_refreshnum(::google::protobuf::int32 value) {
  set_has_refreshnum();
  refreshnum_ = value;
}

// -------------------------------------------------------------------

// GodhoodSlot

// optional uint32 idx = 1;
inline bool GodhoodSlot::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodhoodSlot::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodhoodSlot::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodhoodSlot::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 GodhoodSlot::idx() const {
  return idx_;
}
inline void GodhoodSlot::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// optional bool open = 2;
inline bool GodhoodSlot::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodhoodSlot::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodhoodSlot::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodhoodSlot::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool GodhoodSlot::open() const {
  return open_;
}
inline void GodhoodSlot::set_open(bool value) {
  set_has_open();
  open_ = value;
}

// optional .proto_ff.ItemProtoInfo item = 3;
inline bool GodhoodSlot::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodhoodSlot::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodhoodSlot::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodhoodSlot::clear_item() {
  if (item_ != NULL) item_->::proto_ff::ItemProtoInfo::Clear();
  clear_has_item();
}
inline const ::proto_ff::ItemProtoInfo& GodhoodSlot::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::proto_ff::ItemProtoInfo* GodhoodSlot::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::proto_ff::ItemProtoInfo;
  return item_;
}
inline ::proto_ff::ItemProtoInfo* GodhoodSlot::release_item() {
  clear_has_item();
  ::proto_ff::ItemProtoInfo* temp = item_;
  item_ = NULL;
  return temp;
}
inline void GodhoodSlot::set_allocated_item(::proto_ff::ItemProtoInfo* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// CharacterDBGodhoodData

// repeated .proto_ff.GodhoodSlot godhoodSlot = 1;
inline int CharacterDBGodhoodData::godhoodslot_size() const {
  return godhoodslot_.size();
}
inline void CharacterDBGodhoodData::clear_godhoodslot() {
  godhoodslot_.Clear();
}
inline const ::proto_ff::GodhoodSlot& CharacterDBGodhoodData::godhoodslot(int index) const {
  return godhoodslot_.Get(index);
}
inline ::proto_ff::GodhoodSlot* CharacterDBGodhoodData::mutable_godhoodslot(int index) {
  return godhoodslot_.Mutable(index);
}
inline ::proto_ff::GodhoodSlot* CharacterDBGodhoodData::add_godhoodslot() {
  return godhoodslot_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodhoodSlot >&
CharacterDBGodhoodData::godhoodslot() const {
  return godhoodslot_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodhoodSlot >*
CharacterDBGodhoodData::mutable_godhoodslot() {
  return &godhoodslot_;
}

// -------------------------------------------------------------------

// RecoveryCompleteDBData

// optional uint32 level = 1;
inline bool RecoveryCompleteDBData::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecoveryCompleteDBData::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecoveryCompleteDBData::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecoveryCompleteDBData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RecoveryCompleteDBData::level() const {
  return level_;
}
inline void RecoveryCompleteDBData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 vipLevel = 2;
inline bool RecoveryCompleteDBData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecoveryCompleteDBData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecoveryCompleteDBData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecoveryCompleteDBData::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 RecoveryCompleteDBData::viplevel() const {
  return viplevel_;
}
inline void RecoveryCompleteDBData::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional uint64 time = 3;
inline bool RecoveryCompleteDBData::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecoveryCompleteDBData::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecoveryCompleteDBData::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecoveryCompleteDBData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RecoveryCompleteDBData::time() const {
  return time_;
}
inline void RecoveryCompleteDBData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// repeated .proto_ff.ComPair completeList = 4;
inline int RecoveryCompleteDBData::completelist_size() const {
  return completelist_.size();
}
inline void RecoveryCompleteDBData::clear_completelist() {
  completelist_.Clear();
}
inline const ::proto_ff::ComPair& RecoveryCompleteDBData::completelist(int index) const {
  return completelist_.Get(index);
}
inline ::proto_ff::ComPair* RecoveryCompleteDBData::mutable_completelist(int index) {
  return completelist_.Mutable(index);
}
inline ::proto_ff::ComPair* RecoveryCompleteDBData::add_completelist() {
  return completelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
RecoveryCompleteDBData::completelist() const {
  return completelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
RecoveryCompleteDBData::mutable_completelist() {
  return &completelist_;
}

// repeated .proto_ff.ComPairBool funUnlock = 5;
inline int RecoveryCompleteDBData::fununlock_size() const {
  return fununlock_.size();
}
inline void RecoveryCompleteDBData::clear_fununlock() {
  fununlock_.Clear();
}
inline const ::proto_ff::ComPairBool& RecoveryCompleteDBData::fununlock(int index) const {
  return fununlock_.Get(index);
}
inline ::proto_ff::ComPairBool* RecoveryCompleteDBData::mutable_fununlock(int index) {
  return fununlock_.Mutable(index);
}
inline ::proto_ff::ComPairBool* RecoveryCompleteDBData::add_fununlock() {
  return fununlock_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPairBool >&
RecoveryCompleteDBData::fununlock() const {
  return fununlock_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPairBool >*
RecoveryCompleteDBData::mutable_fununlock() {
  return &fununlock_;
}

// -------------------------------------------------------------------

// RecoveryDBReward

// optional uint32 groupid = 1;
inline bool RecoveryDBReward::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecoveryDBReward::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecoveryDBReward::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecoveryDBReward::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 RecoveryDBReward::groupid() const {
  return groupid_;
}
inline void RecoveryDBReward::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional uint32 day1CountMax = 2;
inline bool RecoveryDBReward::has_day1countmax() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecoveryDBReward::set_has_day1countmax() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecoveryDBReward::clear_has_day1countmax() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecoveryDBReward::clear_day1countmax() {
  day1countmax_ = 0u;
  clear_has_day1countmax();
}
inline ::google::protobuf::uint32 RecoveryDBReward::day1countmax() const {
  return day1countmax_;
}
inline void RecoveryDBReward::set_day1countmax(::google::protobuf::uint32 value) {
  set_has_day1countmax();
  day1countmax_ = value;
}

// optional uint32 day2CountMax = 3;
inline bool RecoveryDBReward::has_day2countmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecoveryDBReward::set_has_day2countmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecoveryDBReward::clear_has_day2countmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecoveryDBReward::clear_day2countmax() {
  day2countmax_ = 0u;
  clear_has_day2countmax();
}
inline ::google::protobuf::uint32 RecoveryDBReward::day2countmax() const {
  return day2countmax_;
}
inline void RecoveryDBReward::set_day2countmax(::google::protobuf::uint32 value) {
  set_has_day2countmax();
  day2countmax_ = value;
}

// optional uint32 day1VipCountMax = 4;
inline bool RecoveryDBReward::has_day1vipcountmax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RecoveryDBReward::set_has_day1vipcountmax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RecoveryDBReward::clear_has_day1vipcountmax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RecoveryDBReward::clear_day1vipcountmax() {
  day1vipcountmax_ = 0u;
  clear_has_day1vipcountmax();
}
inline ::google::protobuf::uint32 RecoveryDBReward::day1vipcountmax() const {
  return day1vipcountmax_;
}
inline void RecoveryDBReward::set_day1vipcountmax(::google::protobuf::uint32 value) {
  set_has_day1vipcountmax();
  day1vipcountmax_ = value;
}

// optional uint32 day2VipCountMax = 5;
inline bool RecoveryDBReward::has_day2vipcountmax() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RecoveryDBReward::set_has_day2vipcountmax() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RecoveryDBReward::clear_has_day2vipcountmax() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RecoveryDBReward::clear_day2vipcountmax() {
  day2vipcountmax_ = 0u;
  clear_has_day2vipcountmax();
}
inline ::google::protobuf::uint32 RecoveryDBReward::day2vipcountmax() const {
  return day2vipcountmax_;
}
inline void RecoveryDBReward::set_day2vipcountmax(::google::protobuf::uint32 value) {
  set_has_day2vipcountmax();
  day2vipcountmax_ = value;
}

// optional uint32 commonCount = 6;
inline bool RecoveryDBReward::has_commoncount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RecoveryDBReward::set_has_commoncount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RecoveryDBReward::clear_has_commoncount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RecoveryDBReward::clear_commoncount() {
  commoncount_ = 0u;
  clear_has_commoncount();
}
inline ::google::protobuf::uint32 RecoveryDBReward::commoncount() const {
  return commoncount_;
}
inline void RecoveryDBReward::set_commoncount(::google::protobuf::uint32 value) {
  set_has_commoncount();
  commoncount_ = value;
}

// optional uint32 vipCount = 7;
inline bool RecoveryDBReward::has_vipcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RecoveryDBReward::set_has_vipcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RecoveryDBReward::clear_has_vipcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RecoveryDBReward::clear_vipcount() {
  vipcount_ = 0u;
  clear_has_vipcount();
}
inline ::google::protobuf::uint32 RecoveryDBReward::vipcount() const {
  return vipcount_;
}
inline void RecoveryDBReward::set_vipcount(::google::protobuf::uint32 value) {
  set_has_vipcount();
  vipcount_ = value;
}

// optional uint32 goldExp = 8;
inline bool RecoveryDBReward::has_goldexp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RecoveryDBReward::set_has_goldexp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RecoveryDBReward::clear_has_goldexp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RecoveryDBReward::clear_goldexp() {
  goldexp_ = 0u;
  clear_has_goldexp();
}
inline ::google::protobuf::uint32 RecoveryDBReward::goldexp() const {
  return goldexp_;
}
inline void RecoveryDBReward::set_goldexp(::google::protobuf::uint32 value) {
  set_has_goldexp();
  goldexp_ = value;
}

// optional uint32 diamondsExp = 9;
inline bool RecoveryDBReward::has_diamondsexp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RecoveryDBReward::set_has_diamondsexp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RecoveryDBReward::clear_has_diamondsexp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RecoveryDBReward::clear_diamondsexp() {
  diamondsexp_ = 0u;
  clear_has_diamondsexp();
}
inline ::google::protobuf::uint32 RecoveryDBReward::diamondsexp() const {
  return diamondsexp_;
}
inline void RecoveryDBReward::set_diamondsexp(::google::protobuf::uint32 value) {
  set_has_diamondsexp();
  diamondsexp_ = value;
}

// optional uint32 goldItemCount = 10;
inline bool RecoveryDBReward::has_golditemcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RecoveryDBReward::set_has_golditemcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RecoveryDBReward::clear_has_golditemcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RecoveryDBReward::clear_golditemcount() {
  golditemcount_ = 0u;
  clear_has_golditemcount();
}
inline ::google::protobuf::uint32 RecoveryDBReward::golditemcount() const {
  return golditemcount_;
}
inline void RecoveryDBReward::set_golditemcount(::google::protobuf::uint32 value) {
  set_has_golditemcount();
  golditemcount_ = value;
}

// optional uint32 diamondsItemCount = 11;
inline bool RecoveryDBReward::has_diamondsitemcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RecoveryDBReward::set_has_diamondsitemcount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RecoveryDBReward::clear_has_diamondsitemcount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RecoveryDBReward::clear_diamondsitemcount() {
  diamondsitemcount_ = 0u;
  clear_has_diamondsitemcount();
}
inline ::google::protobuf::uint32 RecoveryDBReward::diamondsitemcount() const {
  return diamondsitemcount_;
}
inline void RecoveryDBReward::set_diamondsitemcount(::google::protobuf::uint32 value) {
  set_has_diamondsitemcount();
  diamondsitemcount_ = value;
}

// optional uint32 needGold = 12;
inline bool RecoveryDBReward::has_needgold() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RecoveryDBReward::set_has_needgold() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RecoveryDBReward::clear_has_needgold() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RecoveryDBReward::clear_needgold() {
  needgold_ = 0u;
  clear_has_needgold();
}
inline ::google::protobuf::uint32 RecoveryDBReward::needgold() const {
  return needgold_;
}
inline void RecoveryDBReward::set_needgold(::google::protobuf::uint32 value) {
  set_has_needgold();
  needgold_ = value;
}

// optional uint32 needDiamonds = 13;
inline bool RecoveryDBReward::has_needdiamonds() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RecoveryDBReward::set_has_needdiamonds() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RecoveryDBReward::clear_has_needdiamonds() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RecoveryDBReward::clear_needdiamonds() {
  needdiamonds_ = 0u;
  clear_has_needdiamonds();
}
inline ::google::protobuf::uint32 RecoveryDBReward::needdiamonds() const {
  return needdiamonds_;
}
inline void RecoveryDBReward::set_needdiamonds(::google::protobuf::uint32 value) {
  set_has_needdiamonds();
  needdiamonds_ = value;
}

// optional uint64 ItemId = 14;
inline bool RecoveryDBReward::has_itemid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RecoveryDBReward::set_has_itemid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RecoveryDBReward::clear_has_itemid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RecoveryDBReward::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 RecoveryDBReward::itemid() const {
  return itemid_;
}
inline void RecoveryDBReward::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 confid = 15;
inline bool RecoveryDBReward::has_confid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RecoveryDBReward::set_has_confid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RecoveryDBReward::clear_has_confid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RecoveryDBReward::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 RecoveryDBReward::confid() const {
  return confid_;
}
inline void RecoveryDBReward::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
}

// -------------------------------------------------------------------

// RecoveryDBData

// optional uint64 time = 1;
inline bool RecoveryDBData::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecoveryDBData::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecoveryDBData::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecoveryDBData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RecoveryDBData::time() const {
  return time_;
}
inline void RecoveryDBData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// repeated .proto_ff.RecoveryDBReward list = 2;
inline int RecoveryDBData::list_size() const {
  return list_.size();
}
inline void RecoveryDBData::clear_list() {
  list_.Clear();
}
inline const ::proto_ff::RecoveryDBReward& RecoveryDBData::list(int index) const {
  return list_.Get(index);
}
inline ::proto_ff::RecoveryDBReward* RecoveryDBData::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::proto_ff::RecoveryDBReward* RecoveryDBData::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryDBReward >&
RecoveryDBData::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryDBReward >*
RecoveryDBData::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// CharacterDBRecoveryData

// repeated .proto_ff.RecoveryCompleteDBData completeDBData = 1;
inline int CharacterDBRecoveryData::completedbdata_size() const {
  return completedbdata_.size();
}
inline void CharacterDBRecoveryData::clear_completedbdata() {
  completedbdata_.Clear();
}
inline const ::proto_ff::RecoveryCompleteDBData& CharacterDBRecoveryData::completedbdata(int index) const {
  return completedbdata_.Get(index);
}
inline ::proto_ff::RecoveryCompleteDBData* CharacterDBRecoveryData::mutable_completedbdata(int index) {
  return completedbdata_.Mutable(index);
}
inline ::proto_ff::RecoveryCompleteDBData* CharacterDBRecoveryData::add_completedbdata() {
  return completedbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryCompleteDBData >&
CharacterDBRecoveryData::completedbdata() const {
  return completedbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RecoveryCompleteDBData >*
CharacterDBRecoveryData::mutable_completedbdata() {
  return &completedbdata_;
}

// optional .proto_ff.RecoveryDBData recoveryDBData = 2;
inline bool CharacterDBRecoveryData::has_recoverydbdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBRecoveryData::set_has_recoverydbdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBRecoveryData::clear_has_recoverydbdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBRecoveryData::clear_recoverydbdata() {
  if (recoverydbdata_ != NULL) recoverydbdata_->::proto_ff::RecoveryDBData::Clear();
  clear_has_recoverydbdata();
}
inline const ::proto_ff::RecoveryDBData& CharacterDBRecoveryData::recoverydbdata() const {
  return recoverydbdata_ != NULL ? *recoverydbdata_ : *default_instance_->recoverydbdata_;
}
inline ::proto_ff::RecoveryDBData* CharacterDBRecoveryData::mutable_recoverydbdata() {
  set_has_recoverydbdata();
  if (recoverydbdata_ == NULL) recoverydbdata_ = new ::proto_ff::RecoveryDBData;
  return recoverydbdata_;
}
inline ::proto_ff::RecoveryDBData* CharacterDBRecoveryData::release_recoverydbdata() {
  clear_has_recoverydbdata();
  ::proto_ff::RecoveryDBData* temp = recoverydbdata_;
  recoverydbdata_ = NULL;
  return temp;
}
inline void CharacterDBRecoveryData::set_allocated_recoverydbdata(::proto_ff::RecoveryDBData* recoverydbdata) {
  delete recoverydbdata_;
  recoverydbdata_ = recoverydbdata;
  if (recoverydbdata) {
    set_has_recoverydbdata();
  } else {
    clear_has_recoverydbdata();
  }
}

// -------------------------------------------------------------------

// CharacterDBActivityScuffleData

// optional uint64 cur_cfg_id = 1;
inline bool CharacterDBActivityScuffleData::has_cur_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_cur_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBActivityScuffleData::clear_has_cur_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBActivityScuffleData::clear_cur_cfg_id() {
  cur_cfg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_cfg_id();
}
inline ::google::protobuf::uint64 CharacterDBActivityScuffleData::cur_cfg_id() const {
  return cur_cfg_id_;
}
inline void CharacterDBActivityScuffleData::set_cur_cfg_id(::google::protobuf::uint64 value) {
  set_has_cur_cfg_id();
  cur_cfg_id_ = value;
}

// optional int32 cur_points = 2;
inline bool CharacterDBActivityScuffleData::has_cur_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_cur_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBActivityScuffleData::clear_has_cur_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBActivityScuffleData::clear_cur_points() {
  cur_points_ = 0;
  clear_has_cur_points();
}
inline ::google::protobuf::int32 CharacterDBActivityScuffleData::cur_points() const {
  return cur_points_;
}
inline void CharacterDBActivityScuffleData::set_cur_points(::google::protobuf::int32 value) {
  set_has_cur_points();
  cur_points_ = value;
}

// optional uint64 activity_id = 3;
inline bool CharacterDBActivityScuffleData::has_activity_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_activity_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBActivityScuffleData::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBActivityScuffleData::clear_activity_id() {
  activity_id_ = GOOGLE_ULONGLONG(0);
  clear_has_activity_id();
}
inline ::google::protobuf::uint64 CharacterDBActivityScuffleData::activity_id() const {
  return activity_id_;
}
inline void CharacterDBActivityScuffleData::set_activity_id(::google::protobuf::uint64 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// optional uint64 before_map_id = 4;
inline bool CharacterDBActivityScuffleData::has_before_map_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_before_map_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBActivityScuffleData::clear_has_before_map_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBActivityScuffleData::clear_before_map_id() {
  before_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_before_map_id();
}
inline ::google::protobuf::uint64 CharacterDBActivityScuffleData::before_map_id() const {
  return before_map_id_;
}
inline void CharacterDBActivityScuffleData::set_before_map_id(::google::protobuf::uint64 value) {
  set_has_before_map_id();
  before_map_id_ = value;
}

// optional .proto_ff.Vector3PB before_map_point = 5;
inline bool CharacterDBActivityScuffleData::has_before_map_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_before_map_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBActivityScuffleData::clear_has_before_map_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBActivityScuffleData::clear_before_map_point() {
  if (before_map_point_ != NULL) before_map_point_->::proto_ff::Vector3PB::Clear();
  clear_has_before_map_point();
}
inline const ::proto_ff::Vector3PB& CharacterDBActivityScuffleData::before_map_point() const {
  return before_map_point_ != NULL ? *before_map_point_ : *default_instance_->before_map_point_;
}
inline ::proto_ff::Vector3PB* CharacterDBActivityScuffleData::mutable_before_map_point() {
  set_has_before_map_point();
  if (before_map_point_ == NULL) before_map_point_ = new ::proto_ff::Vector3PB;
  return before_map_point_;
}
inline ::proto_ff::Vector3PB* CharacterDBActivityScuffleData::release_before_map_point() {
  clear_has_before_map_point();
  ::proto_ff::Vector3PB* temp = before_map_point_;
  before_map_point_ = NULL;
  return temp;
}
inline void CharacterDBActivityScuffleData::set_allocated_before_map_point(::proto_ff::Vector3PB* before_map_point) {
  delete before_map_point_;
  before_map_point_ = before_map_point;
  if (before_map_point) {
    set_has_before_map_point();
  } else {
    clear_has_before_map_point();
  }
}

// optional int32 last_time = 6;
inline bool CharacterDBActivityScuffleData::has_last_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_last_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBActivityScuffleData::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBActivityScuffleData::clear_last_time() {
  last_time_ = 0;
  clear_has_last_time();
}
inline ::google::protobuf::int32 CharacterDBActivityScuffleData::last_time() const {
  return last_time_;
}
inline void CharacterDBActivityScuffleData::set_last_time(::google::protobuf::int32 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 end_time = 7;
inline bool CharacterDBActivityScuffleData::has_end_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_end_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBActivityScuffleData::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBActivityScuffleData::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 CharacterDBActivityScuffleData::end_time() const {
  return end_time_;
}
inline void CharacterDBActivityScuffleData::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 kill_num = 8;
inline bool CharacterDBActivityScuffleData::has_kill_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_kill_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBActivityScuffleData::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBActivityScuffleData::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
}
inline ::google::protobuf::int32 CharacterDBActivityScuffleData::kill_num() const {
  return kill_num_;
}
inline void CharacterDBActivityScuffleData::set_kill_num(::google::protobuf::int32 value) {
  set_has_kill_num();
  kill_num_ = value;
}

// optional int32 last_kill_num = 9;
inline bool CharacterDBActivityScuffleData::has_last_kill_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBActivityScuffleData::set_has_last_kill_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBActivityScuffleData::clear_has_last_kill_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBActivityScuffleData::clear_last_kill_num() {
  last_kill_num_ = 0;
  clear_has_last_kill_num();
}
inline ::google::protobuf::int32 CharacterDBActivityScuffleData::last_kill_num() const {
  return last_kill_num_;
}
inline void CharacterDBActivityScuffleData::set_last_kill_num(::google::protobuf::int32 value) {
  set_has_last_kill_num();
  last_kill_num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBActivityChaosDragonsData

// optional uint64 before_map_id = 1;
inline bool CharacterDBActivityChaosDragonsData::has_before_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBActivityChaosDragonsData::set_has_before_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBActivityChaosDragonsData::clear_has_before_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBActivityChaosDragonsData::clear_before_map_id() {
  before_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_before_map_id();
}
inline ::google::protobuf::uint64 CharacterDBActivityChaosDragonsData::before_map_id() const {
  return before_map_id_;
}
inline void CharacterDBActivityChaosDragonsData::set_before_map_id(::google::protobuf::uint64 value) {
  set_has_before_map_id();
  before_map_id_ = value;
}

// optional .proto_ff.Vector3PB before_map_point = 2;
inline bool CharacterDBActivityChaosDragonsData::has_before_map_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBActivityChaosDragonsData::set_has_before_map_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBActivityChaosDragonsData::clear_has_before_map_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBActivityChaosDragonsData::clear_before_map_point() {
  if (before_map_point_ != NULL) before_map_point_->::proto_ff::Vector3PB::Clear();
  clear_has_before_map_point();
}
inline const ::proto_ff::Vector3PB& CharacterDBActivityChaosDragonsData::before_map_point() const {
  return before_map_point_ != NULL ? *before_map_point_ : *default_instance_->before_map_point_;
}
inline ::proto_ff::Vector3PB* CharacterDBActivityChaosDragonsData::mutable_before_map_point() {
  set_has_before_map_point();
  if (before_map_point_ == NULL) before_map_point_ = new ::proto_ff::Vector3PB;
  return before_map_point_;
}
inline ::proto_ff::Vector3PB* CharacterDBActivityChaosDragonsData::release_before_map_point() {
  clear_has_before_map_point();
  ::proto_ff::Vector3PB* temp = before_map_point_;
  before_map_point_ = NULL;
  return temp;
}
inline void CharacterDBActivityChaosDragonsData::set_allocated_before_map_point(::proto_ff::Vector3PB* before_map_point) {
  delete before_map_point_;
  before_map_point_ = before_map_point;
  if (before_map_point) {
    set_has_before_map_point();
  } else {
    clear_has_before_map_point();
  }
}

// -------------------------------------------------------------------

// CharacterDBActivityAsharmData

// optional int32 step = 1;
inline bool CharacterDBActivityAsharmData::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBActivityAsharmData::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBActivityAsharmData::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBActivityAsharmData::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 CharacterDBActivityAsharmData::step() const {
  return step_;
}
inline void CharacterDBActivityAsharmData::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// optional uint64 end_time = 2;
inline bool CharacterDBActivityAsharmData::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBActivityAsharmData::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBActivityAsharmData::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBActivityAsharmData::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 CharacterDBActivityAsharmData::end_time() const {
  return end_time_;
}
inline void CharacterDBActivityAsharmData::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional uint64 last_time = 3;
inline bool CharacterDBActivityAsharmData::has_last_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBActivityAsharmData::set_has_last_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBActivityAsharmData::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBActivityAsharmData::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 CharacterDBActivityAsharmData::last_time() const {
  return last_time_;
}
inline void CharacterDBActivityAsharmData::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 cur_num = 4;
inline bool CharacterDBActivityAsharmData::has_cur_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBActivityAsharmData::set_has_cur_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBActivityAsharmData::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBActivityAsharmData::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 CharacterDBActivityAsharmData::cur_num() const {
  return cur_num_;
}
inline void CharacterDBActivityAsharmData::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBCombatTeamData

// optional int32 team_id = 1;
inline bool CharacterDBCombatTeamData::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBCombatTeamData::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBCombatTeamData::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBCombatTeamData::clear_team_id() {
  team_id_ = 0;
  clear_has_team_id();
}
inline ::google::protobuf::int32 CharacterDBCombatTeamData::team_id() const {
  return team_id_;
}
inline void CharacterDBCombatTeamData::set_team_id(::google::protobuf::int32 value) {
  set_has_team_id();
  team_id_ = value;
}

// optional uint64 team_end_time = 2;
inline bool CharacterDBCombatTeamData::has_team_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBCombatTeamData::set_has_team_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBCombatTeamData::clear_has_team_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBCombatTeamData::clear_team_end_time() {
  team_end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_team_end_time();
}
inline ::google::protobuf::uint64 CharacterDBCombatTeamData::team_end_time() const {
  return team_end_time_;
}
inline void CharacterDBCombatTeamData::set_team_end_time(::google::protobuf::uint64 value) {
  set_has_team_end_time();
  team_end_time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBSoloData

// repeated int32 rewarded_join_index = 1;
inline int CharacterDBSoloData::rewarded_join_index_size() const {
  return rewarded_join_index_.size();
}
inline void CharacterDBSoloData::clear_rewarded_join_index() {
  rewarded_join_index_.Clear();
}
inline ::google::protobuf::int32 CharacterDBSoloData::rewarded_join_index(int index) const {
  return rewarded_join_index_.Get(index);
}
inline void CharacterDBSoloData::set_rewarded_join_index(int index, ::google::protobuf::int32 value) {
  rewarded_join_index_.Set(index, value);
}
inline void CharacterDBSoloData::add_rewarded_join_index(::google::protobuf::int32 value) {
  rewarded_join_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterDBSoloData::rewarded_join_index() const {
  return rewarded_join_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterDBSoloData::mutable_rewarded_join_index() {
  return &rewarded_join_index_;
}

// optional int32 my_solo_num = 2;
inline bool CharacterDBSoloData::has_my_solo_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBSoloData::set_has_my_solo_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBSoloData::clear_has_my_solo_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBSoloData::clear_my_solo_num() {
  my_solo_num_ = 0;
  clear_has_my_solo_num();
}
inline ::google::protobuf::int32 CharacterDBSoloData::my_solo_num() const {
  return my_solo_num_;
}
inline void CharacterDBSoloData::set_my_solo_num(::google::protobuf::int32 value) {
  set_has_my_solo_num();
  my_solo_num_ = value;
}

// repeated int32 rewarded_stage_index = 3;
inline int CharacterDBSoloData::rewarded_stage_index_size() const {
  return rewarded_stage_index_.size();
}
inline void CharacterDBSoloData::clear_rewarded_stage_index() {
  rewarded_stage_index_.Clear();
}
inline ::google::protobuf::int32 CharacterDBSoloData::rewarded_stage_index(int index) const {
  return rewarded_stage_index_.Get(index);
}
inline void CharacterDBSoloData::set_rewarded_stage_index(int index, ::google::protobuf::int32 value) {
  rewarded_stage_index_.Set(index, value);
}
inline void CharacterDBSoloData::add_rewarded_stage_index(::google::protobuf::int32 value) {
  rewarded_stage_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterDBSoloData::rewarded_stage_index() const {
  return rewarded_stage_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterDBSoloData::mutable_rewarded_stage_index() {
  return &rewarded_stage_index_;
}

// repeated int32 rewarded_day_stage_index = 4;
inline int CharacterDBSoloData::rewarded_day_stage_index_size() const {
  return rewarded_day_stage_index_.size();
}
inline void CharacterDBSoloData::clear_rewarded_day_stage_index() {
  rewarded_day_stage_index_.Clear();
}
inline ::google::protobuf::int32 CharacterDBSoloData::rewarded_day_stage_index(int index) const {
  return rewarded_day_stage_index_.Get(index);
}
inline void CharacterDBSoloData::set_rewarded_day_stage_index(int index, ::google::protobuf::int32 value) {
  rewarded_day_stage_index_.Set(index, value);
}
inline void CharacterDBSoloData::add_rewarded_day_stage_index(::google::protobuf::int32 value) {
  rewarded_day_stage_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterDBSoloData::rewarded_day_stage_index() const {
  return rewarded_day_stage_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterDBSoloData::mutable_rewarded_day_stage_index() {
  return &rewarded_day_stage_index_;
}

// optional uint64 solo_time_end = 5;
inline bool CharacterDBSoloData::has_solo_time_end() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBSoloData::set_has_solo_time_end() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBSoloData::clear_has_solo_time_end() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBSoloData::clear_solo_time_end() {
  solo_time_end_ = GOOGLE_ULONGLONG(0);
  clear_has_solo_time_end();
}
inline ::google::protobuf::uint64 CharacterDBSoloData::solo_time_end() const {
  return solo_time_end_;
}
inline void CharacterDBSoloData::set_solo_time_end(::google::protobuf::uint64 value) {
  set_has_solo_time_end();
  solo_time_end_ = value;
}

// optional int32 solo_season = 6;
inline bool CharacterDBSoloData::has_solo_season() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBSoloData::set_has_solo_season() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBSoloData::clear_has_solo_season() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBSoloData::clear_solo_season() {
  solo_season_ = 0;
  clear_has_solo_season();
}
inline ::google::protobuf::int32 CharacterDBSoloData::solo_season() const {
  return solo_season_;
}
inline void CharacterDBSoloData::set_solo_season(::google::protobuf::int32 value) {
  set_has_solo_season();
  solo_season_ = value;
}

// optional int32 cur_buy_num = 7;
inline bool CharacterDBSoloData::has_cur_buy_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBSoloData::set_has_cur_buy_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBSoloData::clear_has_cur_buy_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBSoloData::clear_cur_buy_num() {
  cur_buy_num_ = 0;
  clear_has_cur_buy_num();
}
inline ::google::protobuf::int32 CharacterDBSoloData::cur_buy_num() const {
  return cur_buy_num_;
}
inline void CharacterDBSoloData::set_cur_buy_num(::google::protobuf::int32 value) {
  set_has_cur_buy_num();
  cur_buy_num_ = value;
}

// optional uint64 last_time = 8;
inline bool CharacterDBSoloData::has_last_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBSoloData::set_has_last_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBSoloData::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBSoloData::clear_last_time() {
  last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::uint64 CharacterDBSoloData::last_time() const {
  return last_time_;
}
inline void CharacterDBSoloData::set_last_time(::google::protobuf::uint64 value) {
  set_has_last_time();
  last_time_ = value;
}

// optional int32 lose_num = 9;
inline bool CharacterDBSoloData::has_lose_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBSoloData::set_has_lose_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBSoloData::clear_has_lose_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBSoloData::clear_lose_num() {
  lose_num_ = 0;
  clear_has_lose_num();
}
inline ::google::protobuf::int32 CharacterDBSoloData::lose_num() const {
  return lose_num_;
}
inline void CharacterDBSoloData::set_lose_num(::google::protobuf::int32 value) {
  set_has_lose_num();
  lose_num_ = value;
}

// -------------------------------------------------------------------

// CharacterDBAtBoxData

// optional int32 use_count = 1;
inline bool CharacterDBAtBoxData::has_use_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBAtBoxData::set_has_use_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBAtBoxData::clear_has_use_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBAtBoxData::clear_use_count() {
  use_count_ = 0;
  clear_has_use_count();
}
inline ::google::protobuf::int32 CharacterDBAtBoxData::use_count() const {
  return use_count_;
}
inline void CharacterDBAtBoxData::set_use_count(::google::protobuf::int32 value) {
  set_has_use_count();
  use_count_ = value;
}

// optional uint64 time = 2;
inline bool CharacterDBAtBoxData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBAtBoxData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBAtBoxData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBAtBoxData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 CharacterDBAtBoxData::time() const {
  return time_;
}
inline void CharacterDBAtBoxData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CharDBAncientShopProto

// optional int32 idx = 1;
inline bool CharDBAncientShopProto::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharDBAncientShopProto::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharDBAncientShopProto::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharDBAncientShopProto::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 CharDBAncientShopProto::idx() const {
  return idx_;
}
inline void CharDBAncientShopProto::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
}

// optional int32 exchge = 4;
inline bool CharDBAncientShopProto::has_exchge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharDBAncientShopProto::set_has_exchge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharDBAncientShopProto::clear_has_exchge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharDBAncientShopProto::clear_exchge() {
  exchge_ = 0;
  clear_has_exchge();
}
inline ::google::protobuf::int32 CharDBAncientShopProto::exchge() const {
  return exchge_;
}
inline void CharDBAncientShopProto::set_exchge(::google::protobuf::int32 value) {
  set_has_exchge();
  exchge_ = value;
}

// -------------------------------------------------------------------

// CharDBAncientShopData

// repeated .proto_ff.CharDBAncientShopProto info = 1;
inline int CharDBAncientShopData::info_size() const {
  return info_.size();
}
inline void CharDBAncientShopData::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::CharDBAncientShopProto& CharDBAncientShopData::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::CharDBAncientShopProto* CharDBAncientShopData::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::CharDBAncientShopProto* CharDBAncientShopData::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDBAncientShopProto >&
CharDBAncientShopData::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDBAncientShopProto >*
CharDBAncientShopData::mutable_info() {
  return &info_;
}

// optional int64 score = 2;
inline bool CharDBAncientShopData::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharDBAncientShopData::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharDBAncientShopData::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharDBAncientShopData::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 CharDBAncientShopData::score() const {
  return score_;
}
inline void CharDBAncientShopData::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
}

// optional int32 score_cnt = 3;
inline bool CharDBAncientShopData::has_score_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharDBAncientShopData::set_has_score_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharDBAncientShopData::clear_has_score_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharDBAncientShopData::clear_score_cnt() {
  score_cnt_ = 0;
  clear_has_score_cnt();
}
inline ::google::protobuf::int32 CharDBAncientShopData::score_cnt() const {
  return score_cnt_;
}
inline void CharDBAncientShopData::set_score_cnt(::google::protobuf::int32 value) {
  set_has_score_cnt();
  score_cnt_ = value;
}

// optional int32 dia_cnt = 4;
inline bool CharDBAncientShopData::has_dia_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharDBAncientShopData::set_has_dia_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharDBAncientShopData::clear_has_dia_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharDBAncientShopData::clear_dia_cnt() {
  dia_cnt_ = 0;
  clear_has_dia_cnt();
}
inline ::google::protobuf::int32 CharDBAncientShopData::dia_cnt() const {
  return dia_cnt_;
}
inline void CharDBAncientShopData::set_dia_cnt(::google::protobuf::int32 value) {
  set_has_dia_cnt();
  dia_cnt_ = value;
}

// optional int32 free_cnt = 5;
inline bool CharDBAncientShopData::has_free_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharDBAncientShopData::set_has_free_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharDBAncientShopData::clear_has_free_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharDBAncientShopData::clear_free_cnt() {
  free_cnt_ = 0;
  clear_has_free_cnt();
}
inline ::google::protobuf::int32 CharDBAncientShopData::free_cnt() const {
  return free_cnt_;
}
inline void CharDBAncientShopData::set_free_cnt(::google::protobuf::int32 value) {
  set_has_free_cnt();
  free_cnt_ = value;
}

// optional uint64 fresh_time = 6;
inline bool CharDBAncientShopData::has_fresh_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharDBAncientShopData::set_has_fresh_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharDBAncientShopData::clear_has_fresh_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharDBAncientShopData::clear_fresh_time() {
  fresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_fresh_time();
}
inline ::google::protobuf::uint64 CharDBAncientShopData::fresh_time() const {
  return fresh_time_;
}
inline void CharDBAncientShopData::set_fresh_time(::google::protobuf::uint64 value) {
  set_has_fresh_time();
  fresh_time_ = value;
}

// optional uint64 reset_time = 7;
inline bool CharDBAncientShopData::has_reset_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharDBAncientShopData::set_has_reset_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharDBAncientShopData::clear_has_reset_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharDBAncientShopData::clear_reset_time() {
  reset_time_ = GOOGLE_ULONGLONG(0);
  clear_has_reset_time();
}
inline ::google::protobuf::uint64 CharDBAncientShopData::reset_time() const {
  return reset_time_;
}
inline void CharDBAncientShopData::set_reset_time(::google::protobuf::uint64 value) {
  set_has_reset_time();
  reset_time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBAncientData

// optional int64 bless_value = 1;
inline bool CharacterDBAncientData::has_bless_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBAncientData::set_has_bless_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBAncientData::clear_has_bless_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBAncientData::clear_bless_value() {
  bless_value_ = GOOGLE_LONGLONG(0);
  clear_has_bless_value();
}
inline ::google::protobuf::int64 CharacterDBAncientData::bless_value() const {
  return bless_value_;
}
inline void CharacterDBAncientData::set_bless_value(::google::protobuf::int64 value) {
  set_has_bless_value();
  bless_value_ = value;
}

// optional int64 score_incr = 2;
inline bool CharacterDBAncientData::has_score_incr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBAncientData::set_has_score_incr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBAncientData::clear_has_score_incr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBAncientData::clear_score_incr() {
  score_incr_ = GOOGLE_LONGLONG(0);
  clear_has_score_incr();
}
inline ::google::protobuf::int64 CharacterDBAncientData::score_incr() const {
  return score_incr_;
}
inline void CharacterDBAncientData::set_score_incr(::google::protobuf::int64 value) {
  set_has_score_incr();
  score_incr_ = value;
}

// optional .proto_ff.CharDBAncientShopData shop = 3;
inline bool CharacterDBAncientData::has_shop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBAncientData::set_has_shop() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBAncientData::clear_has_shop() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBAncientData::clear_shop() {
  if (shop_ != NULL) shop_->::proto_ff::CharDBAncientShopData::Clear();
  clear_has_shop();
}
inline const ::proto_ff::CharDBAncientShopData& CharacterDBAncientData::shop() const {
  return shop_ != NULL ? *shop_ : *default_instance_->shop_;
}
inline ::proto_ff::CharDBAncientShopData* CharacterDBAncientData::mutable_shop() {
  set_has_shop();
  if (shop_ == NULL) shop_ = new ::proto_ff::CharDBAncientShopData;
  return shop_;
}
inline ::proto_ff::CharDBAncientShopData* CharacterDBAncientData::release_shop() {
  clear_has_shop();
  ::proto_ff::CharDBAncientShopData* temp = shop_;
  shop_ = NULL;
  return temp;
}
inline void CharacterDBAncientData::set_allocated_shop(::proto_ff::CharDBAncientShopData* shop) {
  delete shop_;
  shop_ = shop;
  if (shop) {
    set_has_shop();
  } else {
    clear_has_shop();
  }
}

// optional uint64 bless_reset_time = 4;
inline bool CharacterDBAncientData::has_bless_reset_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBAncientData::set_has_bless_reset_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBAncientData::clear_has_bless_reset_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBAncientData::clear_bless_reset_time() {
  bless_reset_time_ = GOOGLE_ULONGLONG(0);
  clear_has_bless_reset_time();
}
inline ::google::protobuf::uint64 CharacterDBAncientData::bless_reset_time() const {
  return bless_reset_time_;
}
inline void CharacterDBAncientData::set_bless_reset_time(::google::protobuf::uint64 value) {
  set_has_bless_reset_time();
  bless_reset_time_ = value;
}

// -------------------------------------------------------------------

// ChooseGiftData

// optional uint64 activeTime = 1;
inline bool ChooseGiftData::has_activetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChooseGiftData::set_has_activetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChooseGiftData::clear_has_activetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChooseGiftData::clear_activetime() {
  activetime_ = GOOGLE_ULONGLONG(0);
  clear_has_activetime();
}
inline ::google::protobuf::uint64 ChooseGiftData::activetime() const {
  return activetime_;
}
inline void ChooseGiftData::set_activetime(::google::protobuf::uint64 value) {
  set_has_activetime();
  activetime_ = value;
}

// optional int32 headState = 2;
inline bool ChooseGiftData::has_headstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChooseGiftData::set_has_headstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChooseGiftData::clear_has_headstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChooseGiftData::clear_headstate() {
  headstate_ = 0;
  clear_has_headstate();
}
inline ::google::protobuf::int32 ChooseGiftData::headstate() const {
  return headstate_;
}
inline void ChooseGiftData::set_headstate(::google::protobuf::int32 value) {
  set_has_headstate();
  headstate_ = value;
}

// optional int32 rechargeIndex = 3;
inline bool ChooseGiftData::has_rechargeindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChooseGiftData::set_has_rechargeindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChooseGiftData::clear_has_rechargeindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChooseGiftData::clear_rechargeindex() {
  rechargeindex_ = 0;
  clear_has_rechargeindex();
}
inline ::google::protobuf::int32 ChooseGiftData::rechargeindex() const {
  return rechargeindex_;
}
inline void ChooseGiftData::set_rechargeindex(::google::protobuf::int32 value) {
  set_has_rechargeindex();
  rechargeindex_ = value;
}

// optional int32 rechargeIndexState = 4;
inline bool ChooseGiftData::has_rechargeindexstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChooseGiftData::set_has_rechargeindexstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChooseGiftData::clear_has_rechargeindexstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChooseGiftData::clear_rechargeindexstate() {
  rechargeindexstate_ = 0;
  clear_has_rechargeindexstate();
}
inline ::google::protobuf::int32 ChooseGiftData::rechargeindexstate() const {
  return rechargeindexstate_;
}
inline void ChooseGiftData::set_rechargeindexstate(::google::protobuf::int32 value) {
  set_has_rechargeindexstate();
  rechargeindexstate_ = value;
}

// -------------------------------------------------------------------

// CharacterDBActivityData

// optional .proto_ff.CharacterDBActivityScuffleData scuffle_cross_data = 1;
inline bool CharacterDBActivityData::has_scuffle_cross_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBActivityData::set_has_scuffle_cross_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBActivityData::clear_has_scuffle_cross_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBActivityData::clear_scuffle_cross_data() {
  if (scuffle_cross_data_ != NULL) scuffle_cross_data_->::proto_ff::CharacterDBActivityScuffleData::Clear();
  clear_has_scuffle_cross_data();
}
inline const ::proto_ff::CharacterDBActivityScuffleData& CharacterDBActivityData::scuffle_cross_data() const {
  return scuffle_cross_data_ != NULL ? *scuffle_cross_data_ : *default_instance_->scuffle_cross_data_;
}
inline ::proto_ff::CharacterDBActivityScuffleData* CharacterDBActivityData::mutable_scuffle_cross_data() {
  set_has_scuffle_cross_data();
  if (scuffle_cross_data_ == NULL) scuffle_cross_data_ = new ::proto_ff::CharacterDBActivityScuffleData;
  return scuffle_cross_data_;
}
inline ::proto_ff::CharacterDBActivityScuffleData* CharacterDBActivityData::release_scuffle_cross_data() {
  clear_has_scuffle_cross_data();
  ::proto_ff::CharacterDBActivityScuffleData* temp = scuffle_cross_data_;
  scuffle_cross_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_scuffle_cross_data(::proto_ff::CharacterDBActivityScuffleData* scuffle_cross_data) {
  delete scuffle_cross_data_;
  scuffle_cross_data_ = scuffle_cross_data;
  if (scuffle_cross_data) {
    set_has_scuffle_cross_data();
  } else {
    clear_has_scuffle_cross_data();
  }
}

// optional .proto_ff.CharacterDBActivityScuffleData scuffle_local_data = 2;
inline bool CharacterDBActivityData::has_scuffle_local_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBActivityData::set_has_scuffle_local_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBActivityData::clear_has_scuffle_local_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBActivityData::clear_scuffle_local_data() {
  if (scuffle_local_data_ != NULL) scuffle_local_data_->::proto_ff::CharacterDBActivityScuffleData::Clear();
  clear_has_scuffle_local_data();
}
inline const ::proto_ff::CharacterDBActivityScuffleData& CharacterDBActivityData::scuffle_local_data() const {
  return scuffle_local_data_ != NULL ? *scuffle_local_data_ : *default_instance_->scuffle_local_data_;
}
inline ::proto_ff::CharacterDBActivityScuffleData* CharacterDBActivityData::mutable_scuffle_local_data() {
  set_has_scuffle_local_data();
  if (scuffle_local_data_ == NULL) scuffle_local_data_ = new ::proto_ff::CharacterDBActivityScuffleData;
  return scuffle_local_data_;
}
inline ::proto_ff::CharacterDBActivityScuffleData* CharacterDBActivityData::release_scuffle_local_data() {
  clear_has_scuffle_local_data();
  ::proto_ff::CharacterDBActivityScuffleData* temp = scuffle_local_data_;
  scuffle_local_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_scuffle_local_data(::proto_ff::CharacterDBActivityScuffleData* scuffle_local_data) {
  delete scuffle_local_data_;
  scuffle_local_data_ = scuffle_local_data;
  if (scuffle_local_data) {
    set_has_scuffle_local_data();
  } else {
    clear_has_scuffle_local_data();
  }
}

// optional .proto_ff.CharacterDBActivityChaosDragonsData chaos_dragons_data = 3;
inline bool CharacterDBActivityData::has_chaos_dragons_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBActivityData::set_has_chaos_dragons_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBActivityData::clear_has_chaos_dragons_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBActivityData::clear_chaos_dragons_data() {
  if (chaos_dragons_data_ != NULL) chaos_dragons_data_->::proto_ff::CharacterDBActivityChaosDragonsData::Clear();
  clear_has_chaos_dragons_data();
}
inline const ::proto_ff::CharacterDBActivityChaosDragonsData& CharacterDBActivityData::chaos_dragons_data() const {
  return chaos_dragons_data_ != NULL ? *chaos_dragons_data_ : *default_instance_->chaos_dragons_data_;
}
inline ::proto_ff::CharacterDBActivityChaosDragonsData* CharacterDBActivityData::mutable_chaos_dragons_data() {
  set_has_chaos_dragons_data();
  if (chaos_dragons_data_ == NULL) chaos_dragons_data_ = new ::proto_ff::CharacterDBActivityChaosDragonsData;
  return chaos_dragons_data_;
}
inline ::proto_ff::CharacterDBActivityChaosDragonsData* CharacterDBActivityData::release_chaos_dragons_data() {
  clear_has_chaos_dragons_data();
  ::proto_ff::CharacterDBActivityChaosDragonsData* temp = chaos_dragons_data_;
  chaos_dragons_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_chaos_dragons_data(::proto_ff::CharacterDBActivityChaosDragonsData* chaos_dragons_data) {
  delete chaos_dragons_data_;
  chaos_dragons_data_ = chaos_dragons_data;
  if (chaos_dragons_data) {
    set_has_chaos_dragons_data();
  } else {
    clear_has_chaos_dragons_data();
  }
}

// optional .proto_ff.CharacterDBActivityAsharmData asharm_data = 4;
inline bool CharacterDBActivityData::has_asharm_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBActivityData::set_has_asharm_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBActivityData::clear_has_asharm_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBActivityData::clear_asharm_data() {
  if (asharm_data_ != NULL) asharm_data_->::proto_ff::CharacterDBActivityAsharmData::Clear();
  clear_has_asharm_data();
}
inline const ::proto_ff::CharacterDBActivityAsharmData& CharacterDBActivityData::asharm_data() const {
  return asharm_data_ != NULL ? *asharm_data_ : *default_instance_->asharm_data_;
}
inline ::proto_ff::CharacterDBActivityAsharmData* CharacterDBActivityData::mutable_asharm_data() {
  set_has_asharm_data();
  if (asharm_data_ == NULL) asharm_data_ = new ::proto_ff::CharacterDBActivityAsharmData;
  return asharm_data_;
}
inline ::proto_ff::CharacterDBActivityAsharmData* CharacterDBActivityData::release_asharm_data() {
  clear_has_asharm_data();
  ::proto_ff::CharacterDBActivityAsharmData* temp = asharm_data_;
  asharm_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_asharm_data(::proto_ff::CharacterDBActivityAsharmData* asharm_data) {
  delete asharm_data_;
  asharm_data_ = asharm_data;
  if (asharm_data) {
    set_has_asharm_data();
  } else {
    clear_has_asharm_data();
  }
}

// optional .proto_ff.CharacterDBSoloData solo_data = 5;
inline bool CharacterDBActivityData::has_solo_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBActivityData::set_has_solo_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBActivityData::clear_has_solo_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBActivityData::clear_solo_data() {
  if (solo_data_ != NULL) solo_data_->::proto_ff::CharacterDBSoloData::Clear();
  clear_has_solo_data();
}
inline const ::proto_ff::CharacterDBSoloData& CharacterDBActivityData::solo_data() const {
  return solo_data_ != NULL ? *solo_data_ : *default_instance_->solo_data_;
}
inline ::proto_ff::CharacterDBSoloData* CharacterDBActivityData::mutable_solo_data() {
  set_has_solo_data();
  if (solo_data_ == NULL) solo_data_ = new ::proto_ff::CharacterDBSoloData;
  return solo_data_;
}
inline ::proto_ff::CharacterDBSoloData* CharacterDBActivityData::release_solo_data() {
  clear_has_solo_data();
  ::proto_ff::CharacterDBSoloData* temp = solo_data_;
  solo_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_solo_data(::proto_ff::CharacterDBSoloData* solo_data) {
  delete solo_data_;
  solo_data_ = solo_data;
  if (solo_data) {
    set_has_solo_data();
  } else {
    clear_has_solo_data();
  }
}

// optional .proto_ff.CharacterDBAtBoxData box_data = 6;
inline bool CharacterDBActivityData::has_box_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBActivityData::set_has_box_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBActivityData::clear_has_box_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBActivityData::clear_box_data() {
  if (box_data_ != NULL) box_data_->::proto_ff::CharacterDBAtBoxData::Clear();
  clear_has_box_data();
}
inline const ::proto_ff::CharacterDBAtBoxData& CharacterDBActivityData::box_data() const {
  return box_data_ != NULL ? *box_data_ : *default_instance_->box_data_;
}
inline ::proto_ff::CharacterDBAtBoxData* CharacterDBActivityData::mutable_box_data() {
  set_has_box_data();
  if (box_data_ == NULL) box_data_ = new ::proto_ff::CharacterDBAtBoxData;
  return box_data_;
}
inline ::proto_ff::CharacterDBAtBoxData* CharacterDBActivityData::release_box_data() {
  clear_has_box_data();
  ::proto_ff::CharacterDBAtBoxData* temp = box_data_;
  box_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_box_data(::proto_ff::CharacterDBAtBoxData* box_data) {
  delete box_data_;
  box_data_ = box_data;
  if (box_data) {
    set_has_box_data();
  } else {
    clear_has_box_data();
  }
}

// optional .proto_ff.CharacterDBAncientData ancient_data = 7;
inline bool CharacterDBActivityData::has_ancient_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBActivityData::set_has_ancient_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBActivityData::clear_has_ancient_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBActivityData::clear_ancient_data() {
  if (ancient_data_ != NULL) ancient_data_->::proto_ff::CharacterDBAncientData::Clear();
  clear_has_ancient_data();
}
inline const ::proto_ff::CharacterDBAncientData& CharacterDBActivityData::ancient_data() const {
  return ancient_data_ != NULL ? *ancient_data_ : *default_instance_->ancient_data_;
}
inline ::proto_ff::CharacterDBAncientData* CharacterDBActivityData::mutable_ancient_data() {
  set_has_ancient_data();
  if (ancient_data_ == NULL) ancient_data_ = new ::proto_ff::CharacterDBAncientData;
  return ancient_data_;
}
inline ::proto_ff::CharacterDBAncientData* CharacterDBActivityData::release_ancient_data() {
  clear_has_ancient_data();
  ::proto_ff::CharacterDBAncientData* temp = ancient_data_;
  ancient_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_ancient_data(::proto_ff::CharacterDBAncientData* ancient_data) {
  delete ancient_data_;
  ancient_data_ = ancient_data;
  if (ancient_data) {
    set_has_ancient_data();
  } else {
    clear_has_ancient_data();
  }
}

// optional .proto_ff.ChooseGiftData choosegift_data = 8;
inline bool CharacterDBActivityData::has_choosegift_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBActivityData::set_has_choosegift_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBActivityData::clear_has_choosegift_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBActivityData::clear_choosegift_data() {
  if (choosegift_data_ != NULL) choosegift_data_->::proto_ff::ChooseGiftData::Clear();
  clear_has_choosegift_data();
}
inline const ::proto_ff::ChooseGiftData& CharacterDBActivityData::choosegift_data() const {
  return choosegift_data_ != NULL ? *choosegift_data_ : *default_instance_->choosegift_data_;
}
inline ::proto_ff::ChooseGiftData* CharacterDBActivityData::mutable_choosegift_data() {
  set_has_choosegift_data();
  if (choosegift_data_ == NULL) choosegift_data_ = new ::proto_ff::ChooseGiftData;
  return choosegift_data_;
}
inline ::proto_ff::ChooseGiftData* CharacterDBActivityData::release_choosegift_data() {
  clear_has_choosegift_data();
  ::proto_ff::ChooseGiftData* temp = choosegift_data_;
  choosegift_data_ = NULL;
  return temp;
}
inline void CharacterDBActivityData::set_allocated_choosegift_data(::proto_ff::ChooseGiftData* choosegift_data) {
  delete choosegift_data_;
  choosegift_data_ = choosegift_data;
  if (choosegift_data) {
    set_has_choosegift_data();
  } else {
    clear_has_choosegift_data();
  }
}

// -------------------------------------------------------------------

// SOAcitveTotalRechargeData

// optional uint64 activeId = 1;
inline bool SOAcitveTotalRechargeData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SOAcitveTotalRechargeData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SOAcitveTotalRechargeData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SOAcitveTotalRechargeData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 SOAcitveTotalRechargeData::activeid() const {
  return activeid_;
}
inline void SOAcitveTotalRechargeData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 pageId = 2;
inline bool SOAcitveTotalRechargeData::has_pageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SOAcitveTotalRechargeData::set_has_pageid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SOAcitveTotalRechargeData::clear_has_pageid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SOAcitveTotalRechargeData::clear_pageid() {
  pageid_ = 0u;
  clear_has_pageid();
}
inline ::google::protobuf::uint32 SOAcitveTotalRechargeData::pageid() const {
  return pageid_;
}
inline void SOAcitveTotalRechargeData::set_pageid(::google::protobuf::uint32 value) {
  set_has_pageid();
  pageid_ = value;
}

// optional uint64 rechargeValue = 3;
inline bool SOAcitveTotalRechargeData::has_rechargevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SOAcitveTotalRechargeData::set_has_rechargevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SOAcitveTotalRechargeData::clear_has_rechargevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SOAcitveTotalRechargeData::clear_rechargevalue() {
  rechargevalue_ = GOOGLE_ULONGLONG(0);
  clear_has_rechargevalue();
}
inline ::google::protobuf::uint64 SOAcitveTotalRechargeData::rechargevalue() const {
  return rechargevalue_;
}
inline void SOAcitveTotalRechargeData::set_rechargevalue(::google::protobuf::uint64 value) {
  set_has_rechargevalue();
  rechargevalue_ = value;
}

// repeated .proto_ff.ComPair getState = 4;
inline int SOAcitveTotalRechargeData::getstate_size() const {
  return getstate_.size();
}
inline void SOAcitveTotalRechargeData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& SOAcitveTotalRechargeData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* SOAcitveTotalRechargeData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* SOAcitveTotalRechargeData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
SOAcitveTotalRechargeData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
SOAcitveTotalRechargeData::mutable_getstate() {
  return &getstate_;
}

// optional uint64 rechargeholy = 5;
inline bool SOAcitveTotalRechargeData::has_rechargeholy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SOAcitveTotalRechargeData::set_has_rechargeholy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SOAcitveTotalRechargeData::clear_has_rechargeholy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SOAcitveTotalRechargeData::clear_rechargeholy() {
  rechargeholy_ = GOOGLE_ULONGLONG(0);
  clear_has_rechargeholy();
}
inline ::google::protobuf::uint64 SOAcitveTotalRechargeData::rechargeholy() const {
  return rechargeholy_;
}
inline void SOAcitveTotalRechargeData::set_rechargeholy(::google::protobuf::uint64 value) {
  set_has_rechargeholy();
  rechargeholy_ = value;
}

// -------------------------------------------------------------------

// SOAcitveAdvanceData

// optional uint64 activeId = 1;
inline bool SOAcitveAdvanceData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SOAcitveAdvanceData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SOAcitveAdvanceData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SOAcitveAdvanceData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 SOAcitveAdvanceData::activeid() const {
  return activeid_;
}
inline void SOAcitveAdvanceData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 pageId = 2;
inline bool SOAcitveAdvanceData::has_pageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SOAcitveAdvanceData::set_has_pageid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SOAcitveAdvanceData::clear_has_pageid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SOAcitveAdvanceData::clear_pageid() {
  pageid_ = 0u;
  clear_has_pageid();
}
inline ::google::protobuf::uint32 SOAcitveAdvanceData::pageid() const {
  return pageid_;
}
inline void SOAcitveAdvanceData::set_pageid(::google::protobuf::uint32 value) {
  set_has_pageid();
  pageid_ = value;
}

// optional uint64 advanceValue = 3;
inline bool SOAcitveAdvanceData::has_advancevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SOAcitveAdvanceData::set_has_advancevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SOAcitveAdvanceData::clear_has_advancevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SOAcitveAdvanceData::clear_advancevalue() {
  advancevalue_ = GOOGLE_ULONGLONG(0);
  clear_has_advancevalue();
}
inline ::google::protobuf::uint64 SOAcitveAdvanceData::advancevalue() const {
  return advancevalue_;
}
inline void SOAcitveAdvanceData::set_advancevalue(::google::protobuf::uint64 value) {
  set_has_advancevalue();
  advancevalue_ = value;
}

// repeated .proto_ff.ComPair getState = 4;
inline int SOAcitveAdvanceData::getstate_size() const {
  return getstate_.size();
}
inline void SOAcitveAdvanceData::clear_getstate() {
  getstate_.Clear();
}
inline const ::proto_ff::ComPair& SOAcitveAdvanceData::getstate(int index) const {
  return getstate_.Get(index);
}
inline ::proto_ff::ComPair* SOAcitveAdvanceData::mutable_getstate(int index) {
  return getstate_.Mutable(index);
}
inline ::proto_ff::ComPair* SOAcitveAdvanceData::add_getstate() {
  return getstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
SOAcitveAdvanceData::getstate() const {
  return getstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
SOAcitveAdvanceData::mutable_getstate() {
  return &getstate_;
}

// repeated .proto_ff.ComPair64 advanceValueMap = 5;
inline int SOAcitveAdvanceData::advancevaluemap_size() const {
  return advancevaluemap_.size();
}
inline void SOAcitveAdvanceData::clear_advancevaluemap() {
  advancevaluemap_.Clear();
}
inline const ::proto_ff::ComPair64& SOAcitveAdvanceData::advancevaluemap(int index) const {
  return advancevaluemap_.Get(index);
}
inline ::proto_ff::ComPair64* SOAcitveAdvanceData::mutable_advancevaluemap(int index) {
  return advancevaluemap_.Mutable(index);
}
inline ::proto_ff::ComPair64* SOAcitveAdvanceData::add_advancevaluemap() {
  return advancevaluemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
SOAcitveAdvanceData::advancevaluemap() const {
  return advancevaluemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
SOAcitveAdvanceData::mutable_advancevaluemap() {
  return &advancevaluemap_;
}

// -------------------------------------------------------------------

// SOAcitveGoodsData

// optional uint64 activeId = 1;
inline bool SOAcitveGoodsData::has_activeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SOAcitveGoodsData::set_has_activeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SOAcitveGoodsData::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SOAcitveGoodsData::clear_activeid() {
  activeid_ = GOOGLE_ULONGLONG(0);
  clear_has_activeid();
}
inline ::google::protobuf::uint64 SOAcitveGoodsData::activeid() const {
  return activeid_;
}
inline void SOAcitveGoodsData::set_activeid(::google::protobuf::uint64 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional uint32 pageId = 2;
inline bool SOAcitveGoodsData::has_pageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SOAcitveGoodsData::set_has_pageid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SOAcitveGoodsData::clear_has_pageid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SOAcitveGoodsData::clear_pageid() {
  pageid_ = 0u;
  clear_has_pageid();
}
inline ::google::protobuf::uint32 SOAcitveGoodsData::pageid() const {
  return pageid_;
}
inline void SOAcitveGoodsData::set_pageid(::google::protobuf::uint32 value) {
  set_has_pageid();
  pageid_ = value;
}

// repeated .proto_ff.ComPair64 buyCount = 3;
inline int SOAcitveGoodsData::buycount_size() const {
  return buycount_.size();
}
inline void SOAcitveGoodsData::clear_buycount() {
  buycount_.Clear();
}
inline const ::proto_ff::ComPair64& SOAcitveGoodsData::buycount(int index) const {
  return buycount_.Get(index);
}
inline ::proto_ff::ComPair64* SOAcitveGoodsData::mutable_buycount(int index) {
  return buycount_.Mutable(index);
}
inline ::proto_ff::ComPair64* SOAcitveGoodsData::add_buycount() {
  return buycount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
SOAcitveGoodsData::buycount() const {
  return buycount_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
SOAcitveGoodsData::mutable_buycount() {
  return &buycount_;
}

// -------------------------------------------------------------------

// CharacterDBSOAcitveData

// repeated .proto_ff.SOAcitveTotalRechargeData totalRecharge = 1;
inline int CharacterDBSOAcitveData::totalrecharge_size() const {
  return totalrecharge_.size();
}
inline void CharacterDBSOAcitveData::clear_totalrecharge() {
  totalrecharge_.Clear();
}
inline const ::proto_ff::SOAcitveTotalRechargeData& CharacterDBSOAcitveData::totalrecharge(int index) const {
  return totalrecharge_.Get(index);
}
inline ::proto_ff::SOAcitveTotalRechargeData* CharacterDBSOAcitveData::mutable_totalrecharge(int index) {
  return totalrecharge_.Mutable(index);
}
inline ::proto_ff::SOAcitveTotalRechargeData* CharacterDBSOAcitveData::add_totalrecharge() {
  return totalrecharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveTotalRechargeData >&
CharacterDBSOAcitveData::totalrecharge() const {
  return totalrecharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveTotalRechargeData >*
CharacterDBSOAcitveData::mutable_totalrecharge() {
  return &totalrecharge_;
}

// repeated .proto_ff.SOAcitveAdvanceData advance = 2;
inline int CharacterDBSOAcitveData::advance_size() const {
  return advance_.size();
}
inline void CharacterDBSOAcitveData::clear_advance() {
  advance_.Clear();
}
inline const ::proto_ff::SOAcitveAdvanceData& CharacterDBSOAcitveData::advance(int index) const {
  return advance_.Get(index);
}
inline ::proto_ff::SOAcitveAdvanceData* CharacterDBSOAcitveData::mutable_advance(int index) {
  return advance_.Mutable(index);
}
inline ::proto_ff::SOAcitveAdvanceData* CharacterDBSOAcitveData::add_advance() {
  return advance_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveAdvanceData >&
CharacterDBSOAcitveData::advance() const {
  return advance_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveAdvanceData >*
CharacterDBSOAcitveData::mutable_advance() {
  return &advance_;
}

// repeated .proto_ff.SOAcitveGoodsData goods = 3;
inline int CharacterDBSOAcitveData::goods_size() const {
  return goods_.size();
}
inline void CharacterDBSOAcitveData::clear_goods() {
  goods_.Clear();
}
inline const ::proto_ff::SOAcitveGoodsData& CharacterDBSOAcitveData::goods(int index) const {
  return goods_.Get(index);
}
inline ::proto_ff::SOAcitveGoodsData* CharacterDBSOAcitveData::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::proto_ff::SOAcitveGoodsData* CharacterDBSOAcitveData::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveGoodsData >&
CharacterDBSOAcitveData::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SOAcitveGoodsData >*
CharacterDBSOAcitveData::mutable_goods() {
  return &goods_;
}

// repeated .proto_ff.ComPair64 redPointClickData = 4;
inline int CharacterDBSOAcitveData::redpointclickdata_size() const {
  return redpointclickdata_.size();
}
inline void CharacterDBSOAcitveData::clear_redpointclickdata() {
  redpointclickdata_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBSOAcitveData::redpointclickdata(int index) const {
  return redpointclickdata_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBSOAcitveData::mutable_redpointclickdata(int index) {
  return redpointclickdata_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBSOAcitveData::add_redpointclickdata() {
  return redpointclickdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBSOAcitveData::redpointclickdata() const {
  return redpointclickdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBSOAcitveData::mutable_redpointclickdata() {
  return &redpointclickdata_;
}

// -------------------------------------------------------------------

// CharacterDBUseItemData

// repeated .proto_ff.ComPair64 itemUseTimes = 1;
inline int CharacterDBUseItemData::itemusetimes_size() const {
  return itemusetimes_.size();
}
inline void CharacterDBUseItemData::clear_itemusetimes() {
  itemusetimes_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBUseItemData::itemusetimes(int index) const {
  return itemusetimes_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBUseItemData::mutable_itemusetimes(int index) {
  return itemusetimes_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBUseItemData::add_itemusetimes() {
  return itemusetimes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBUseItemData::itemusetimes() const {
  return itemusetimes_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBUseItemData::mutable_itemusetimes() {
  return &itemusetimes_;
}

// -------------------------------------------------------------------

// CharacterDBDayUseItemData

// optional uint64 day = 1;
inline bool CharacterDBDayUseItemData::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBDayUseItemData::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBDayUseItemData::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBDayUseItemData::clear_day() {
  day_ = GOOGLE_ULONGLONG(0);
  clear_has_day();
}
inline ::google::protobuf::uint64 CharacterDBDayUseItemData::day() const {
  return day_;
}
inline void CharacterDBDayUseItemData::set_day(::google::protobuf::uint64 value) {
  set_has_day();
  day_ = value;
}

// repeated .proto_ff.ComPair64 itemUseTimes = 2;
inline int CharacterDBDayUseItemData::itemusetimes_size() const {
  return itemusetimes_.size();
}
inline void CharacterDBDayUseItemData::clear_itemusetimes() {
  itemusetimes_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBDayUseItemData::itemusetimes(int index) const {
  return itemusetimes_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBDayUseItemData::mutable_itemusetimes(int index) {
  return itemusetimes_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBDayUseItemData::add_itemusetimes() {
  return itemusetimes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBDayUseItemData::itemusetimes() const {
  return itemusetimes_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBDayUseItemData::mutable_itemusetimes() {
  return &itemusetimes_;
}

// -------------------------------------------------------------------

// MysteryShopDBData

// optional uint32 nId = 1;
inline bool MysteryShopDBData::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MysteryShopDBData::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MysteryShopDBData::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MysteryShopDBData::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 MysteryShopDBData::nid() const {
  return nid_;
}
inline void MysteryShopDBData::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// optional uint64 nStartTime = 2;
inline bool MysteryShopDBData::has_nstarttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MysteryShopDBData::set_has_nstarttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MysteryShopDBData::clear_has_nstarttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MysteryShopDBData::clear_nstarttime() {
  nstarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_nstarttime();
}
inline ::google::protobuf::uint64 MysteryShopDBData::nstarttime() const {
  return nstarttime_;
}
inline void MysteryShopDBData::set_nstarttime(::google::protobuf::uint64 value) {
  set_has_nstarttime();
  nstarttime_ = value;
}

// optional uint64 nFinishTime = 3;
inline bool MysteryShopDBData::has_nfinishtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MysteryShopDBData::set_has_nfinishtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MysteryShopDBData::clear_has_nfinishtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MysteryShopDBData::clear_nfinishtime() {
  nfinishtime_ = GOOGLE_ULONGLONG(0);
  clear_has_nfinishtime();
}
inline ::google::protobuf::uint64 MysteryShopDBData::nfinishtime() const {
  return nfinishtime_;
}
inline void MysteryShopDBData::set_nfinishtime(::google::protobuf::uint64 value) {
  set_has_nfinishtime();
  nfinishtime_ = value;
}

// optional uint32 nState = 4;
inline bool MysteryShopDBData::has_nstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MysteryShopDBData::set_has_nstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MysteryShopDBData::clear_has_nstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MysteryShopDBData::clear_nstate() {
  nstate_ = 0u;
  clear_has_nstate();
}
inline ::google::protobuf::uint32 MysteryShopDBData::nstate() const {
  return nstate_;
}
inline void MysteryShopDBData::set_nstate(::google::protobuf::uint32 value) {
  set_has_nstate();
  nstate_ = value;
}

// -------------------------------------------------------------------

// CharacterDBMysteryShopData

// repeated .proto_ff.MysteryShopDBData dataList = 1;
inline int CharacterDBMysteryShopData::datalist_size() const {
  return datalist_.size();
}
inline void CharacterDBMysteryShopData::clear_datalist() {
  datalist_.Clear();
}
inline const ::proto_ff::MysteryShopDBData& CharacterDBMysteryShopData::datalist(int index) const {
  return datalist_.Get(index);
}
inline ::proto_ff::MysteryShopDBData* CharacterDBMysteryShopData::mutable_datalist(int index) {
  return datalist_.Mutable(index);
}
inline ::proto_ff::MysteryShopDBData* CharacterDBMysteryShopData::add_datalist() {
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MysteryShopDBData >&
CharacterDBMysteryShopData::datalist() const {
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MysteryShopDBData >*
CharacterDBMysteryShopData::mutable_datalist() {
  return &datalist_;
}

// -------------------------------------------------------------------

// CharacterDBPackageTestRebateData

// optional bool bChecked = 1;
inline bool CharacterDBPackageTestRebateData::has_bchecked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBPackageTestRebateData::set_has_bchecked() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBPackageTestRebateData::clear_has_bchecked() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBPackageTestRebateData::clear_bchecked() {
  bchecked_ = false;
  clear_has_bchecked();
}
inline bool CharacterDBPackageTestRebateData::bchecked() const {
  return bchecked_;
}
inline void CharacterDBPackageTestRebateData::set_bchecked(bool value) {
  set_has_bchecked();
  bchecked_ = value;
}

// optional uint32 state = 2;
inline bool CharacterDBPackageTestRebateData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBPackageTestRebateData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBPackageTestRebateData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBPackageTestRebateData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CharacterDBPackageTestRebateData::state() const {
  return state_;
}
inline void CharacterDBPackageTestRebateData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional uint32 rechargeValue = 3;
inline bool CharacterDBPackageTestRebateData::has_rechargevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBPackageTestRebateData::set_has_rechargevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBPackageTestRebateData::clear_has_rechargevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBPackageTestRebateData::clear_rechargevalue() {
  rechargevalue_ = 0u;
  clear_has_rechargevalue();
}
inline ::google::protobuf::uint32 CharacterDBPackageTestRebateData::rechargevalue() const {
  return rechargevalue_;
}
inline void CharacterDBPackageTestRebateData::set_rechargevalue(::google::protobuf::uint32 value) {
  set_has_rechargevalue();
  rechargevalue_ = value;
}

// optional uint32 powerRank = 4;
inline bool CharacterDBPackageTestRebateData::has_powerrank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBPackageTestRebateData::set_has_powerrank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBPackageTestRebateData::clear_has_powerrank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBPackageTestRebateData::clear_powerrank() {
  powerrank_ = 0u;
  clear_has_powerrank();
}
inline ::google::protobuf::uint32 CharacterDBPackageTestRebateData::powerrank() const {
  return powerrank_;
}
inline void CharacterDBPackageTestRebateData::set_powerrank(::google::protobuf::uint32 value) {
  set_has_powerrank();
  powerrank_ = value;
}

// optional uint64 deadline = 5;
inline bool CharacterDBPackageTestRebateData::has_deadline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBPackageTestRebateData::set_has_deadline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBPackageTestRebateData::clear_has_deadline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBPackageTestRebateData::clear_deadline() {
  deadline_ = GOOGLE_ULONGLONG(0);
  clear_has_deadline();
}
inline ::google::protobuf::uint64 CharacterDBPackageTestRebateData::deadline() const {
  return deadline_;
}
inline void CharacterDBPackageTestRebateData::set_deadline(::google::protobuf::uint64 value) {
  set_has_deadline();
  deadline_ = value;
}

// repeated .proto_ff.ComPair64 rewardStateMap = 6;
inline int CharacterDBPackageTestRebateData::rewardstatemap_size() const {
  return rewardstatemap_.size();
}
inline void CharacterDBPackageTestRebateData::clear_rewardstatemap() {
  rewardstatemap_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBPackageTestRebateData::rewardstatemap(int index) const {
  return rewardstatemap_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBPackageTestRebateData::mutable_rewardstatemap(int index) {
  return rewardstatemap_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBPackageTestRebateData::add_rewardstatemap() {
  return rewardstatemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBPackageTestRebateData::rewardstatemap() const {
  return rewardstatemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBPackageTestRebateData::mutable_rewardstatemap() {
  return &rewardstatemap_;
}

// repeated .proto_ff.ComPair64 backStateMap = 7;
inline int CharacterDBPackageTestRebateData::backstatemap_size() const {
  return backstatemap_.size();
}
inline void CharacterDBPackageTestRebateData::clear_backstatemap() {
  backstatemap_.Clear();
}
inline const ::proto_ff::ComPair64& CharacterDBPackageTestRebateData::backstatemap(int index) const {
  return backstatemap_.Get(index);
}
inline ::proto_ff::ComPair64* CharacterDBPackageTestRebateData::mutable_backstatemap(int index) {
  return backstatemap_.Mutable(index);
}
inline ::proto_ff::ComPair64* CharacterDBPackageTestRebateData::add_backstatemap() {
  return backstatemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
CharacterDBPackageTestRebateData::backstatemap() const {
  return backstatemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
CharacterDBPackageTestRebateData::mutable_backstatemap() {
  return &backstatemap_;
}

// -------------------------------------------------------------------

// FuncFightDBData

// optional int64 equip_total = 1;
inline bool FuncFightDBData::has_equip_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FuncFightDBData::set_has_equip_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FuncFightDBData::clear_has_equip_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FuncFightDBData::clear_equip_total() {
  equip_total_ = GOOGLE_LONGLONG(0);
  clear_has_equip_total();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_total() const {
  return equip_total_;
}
inline void FuncFightDBData::set_equip_total(::google::protobuf::int64 value) {
  set_has_equip_total();
  equip_total_ = value;
}

// optional int64 equip_base = 2;
inline bool FuncFightDBData::has_equip_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FuncFightDBData::set_has_equip_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FuncFightDBData::clear_has_equip_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FuncFightDBData::clear_equip_base() {
  equip_base_ = GOOGLE_LONGLONG(0);
  clear_has_equip_base();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_base() const {
  return equip_base_;
}
inline void FuncFightDBData::set_equip_base(::google::protobuf::int64 value) {
  set_has_equip_base();
  equip_base_ = value;
}

// optional int64 equip_strong = 3;
inline bool FuncFightDBData::has_equip_strong() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FuncFightDBData::set_has_equip_strong() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FuncFightDBData::clear_has_equip_strong() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FuncFightDBData::clear_equip_strong() {
  equip_strong_ = GOOGLE_LONGLONG(0);
  clear_has_equip_strong();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_strong() const {
  return equip_strong_;
}
inline void FuncFightDBData::set_equip_strong(::google::protobuf::int64 value) {
  set_has_equip_strong();
  equip_strong_ = value;
}

// optional int64 stone = 4;
inline bool FuncFightDBData::has_stone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FuncFightDBData::set_has_stone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FuncFightDBData::clear_has_stone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FuncFightDBData::clear_stone() {
  stone_ = GOOGLE_LONGLONG(0);
  clear_has_stone();
}
inline ::google::protobuf::int64 FuncFightDBData::stone() const {
  return stone_;
}
inline void FuncFightDBData::set_stone(::google::protobuf::int64 value) {
  set_has_stone();
  stone_ = value;
}

// optional int64 equip_scrutiny = 5;
inline bool FuncFightDBData::has_equip_scrutiny() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FuncFightDBData::set_has_equip_scrutiny() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FuncFightDBData::clear_has_equip_scrutiny() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FuncFightDBData::clear_equip_scrutiny() {
  equip_scrutiny_ = GOOGLE_LONGLONG(0);
  clear_has_equip_scrutiny();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_scrutiny() const {
  return equip_scrutiny_;
}
inline void FuncFightDBData::set_equip_scrutiny(::google::protobuf::int64 value) {
  set_has_equip_scrutiny();
  equip_scrutiny_ = value;
}

// optional int64 equip_suit = 6;
inline bool FuncFightDBData::has_equip_suit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FuncFightDBData::set_has_equip_suit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FuncFightDBData::clear_has_equip_suit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FuncFightDBData::clear_equip_suit() {
  equip_suit_ = GOOGLE_LONGLONG(0);
  clear_has_equip_suit();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_suit() const {
  return equip_suit_;
}
inline void FuncFightDBData::set_equip_suit(::google::protobuf::int64 value) {
  set_has_equip_suit();
  equip_suit_ = value;
}

// optional int64 equip_awake = 7;
inline bool FuncFightDBData::has_equip_awake() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FuncFightDBData::set_has_equip_awake() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FuncFightDBData::clear_has_equip_awake() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FuncFightDBData::clear_equip_awake() {
  equip_awake_ = GOOGLE_LONGLONG(0);
  clear_has_equip_awake();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_awake() const {
  return equip_awake_;
}
inline void FuncFightDBData::set_equip_awake(::google::protobuf::int64 value) {
  set_has_equip_awake();
  equip_awake_ = value;
}

// optional int64 equip_enchant = 8;
inline bool FuncFightDBData::has_equip_enchant() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FuncFightDBData::set_has_equip_enchant() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FuncFightDBData::clear_has_equip_enchant() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FuncFightDBData::clear_equip_enchant() {
  equip_enchant_ = GOOGLE_LONGLONG(0);
  clear_has_equip_enchant();
}
inline ::google::protobuf::int64 FuncFightDBData::equip_enchant() const {
  return equip_enchant_;
}
inline void FuncFightDBData::set_equip_enchant(::google::protobuf::int64 value) {
  set_has_equip_enchant();
  equip_enchant_ = value;
}

// optional int64 fatestar = 9;
inline bool FuncFightDBData::has_fatestar() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FuncFightDBData::set_has_fatestar() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FuncFightDBData::clear_has_fatestar() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FuncFightDBData::clear_fatestar() {
  fatestar_ = GOOGLE_LONGLONG(0);
  clear_has_fatestar();
}
inline ::google::protobuf::int64 FuncFightDBData::fatestar() const {
  return fatestar_;
}
inline void FuncFightDBData::set_fatestar(::google::protobuf::int64 value) {
  set_has_fatestar();
  fatestar_ = value;
}

// optional int64 godhood = 10;
inline bool FuncFightDBData::has_godhood() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FuncFightDBData::set_has_godhood() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FuncFightDBData::clear_has_godhood() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FuncFightDBData::clear_godhood() {
  godhood_ = GOOGLE_LONGLONG(0);
  clear_has_godhood();
}
inline ::google::protobuf::int64 FuncFightDBData::godhood() const {
  return godhood_;
}
inline void FuncFightDBData::set_godhood(::google::protobuf::int64 value) {
  set_has_godhood();
  godhood_ = value;
}

// optional int64 identify = 11;
inline bool FuncFightDBData::has_identify() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FuncFightDBData::set_has_identify() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FuncFightDBData::clear_has_identify() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FuncFightDBData::clear_identify() {
  identify_ = GOOGLE_LONGLONG(0);
  clear_has_identify();
}
inline ::google::protobuf::int64 FuncFightDBData::identify() const {
  return identify_;
}
inline void FuncFightDBData::set_identify(::google::protobuf::int64 value) {
  set_has_identify();
  identify_ = value;
}

// optional int64 partner = 12;
inline bool FuncFightDBData::has_partner() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FuncFightDBData::set_has_partner() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FuncFightDBData::clear_has_partner() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FuncFightDBData::clear_partner() {
  partner_ = GOOGLE_LONGLONG(0);
  clear_has_partner();
}
inline ::google::protobuf::int64 FuncFightDBData::partner() const {
  return partner_;
}
inline void FuncFightDBData::set_partner(::google::protobuf::int64 value) {
  set_has_partner();
  partner_ = value;
}

// optional int64 field = 13;
inline bool FuncFightDBData::has_field() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FuncFightDBData::set_has_field() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FuncFightDBData::clear_has_field() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FuncFightDBData::clear_field() {
  field_ = GOOGLE_LONGLONG(0);
  clear_has_field();
}
inline ::google::protobuf::int64 FuncFightDBData::field() const {
  return field_;
}
inline void FuncFightDBData::set_field(::google::protobuf::int64 value) {
  set_has_field();
  field_ = value;
}

// optional int64 element = 14;
inline bool FuncFightDBData::has_element() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FuncFightDBData::set_has_element() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FuncFightDBData::clear_has_element() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FuncFightDBData::clear_element() {
  element_ = GOOGLE_LONGLONG(0);
  clear_has_element();
}
inline ::google::protobuf::int64 FuncFightDBData::element() const {
  return element_;
}
inline void FuncFightDBData::set_element(::google::protobuf::int64 value) {
  set_has_element();
  element_ = value;
}

// optional int64 wing = 15;
inline bool FuncFightDBData::has_wing() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FuncFightDBData::set_has_wing() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FuncFightDBData::clear_has_wing() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FuncFightDBData::clear_wing() {
  wing_ = GOOGLE_LONGLONG(0);
  clear_has_wing();
}
inline ::google::protobuf::int64 FuncFightDBData::wing() const {
  return wing_;
}
inline void FuncFightDBData::set_wing(::google::protobuf::int64 value) {
  set_has_wing();
  wing_ = value;
}

// optional int64 treasure = 16;
inline bool FuncFightDBData::has_treasure() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FuncFightDBData::set_has_treasure() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FuncFightDBData::clear_has_treasure() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FuncFightDBData::clear_treasure() {
  treasure_ = GOOGLE_LONGLONG(0);
  clear_has_treasure();
}
inline ::google::protobuf::int64 FuncFightDBData::treasure() const {
  return treasure_;
}
inline void FuncFightDBData::set_treasure(::google::protobuf::int64 value) {
  set_has_treasure();
  treasure_ = value;
}

// optional int64 fantasty_total = 17;
inline bool FuncFightDBData::has_fantasty_total() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FuncFightDBData::set_has_fantasty_total() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FuncFightDBData::clear_has_fantasty_total() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FuncFightDBData::clear_fantasty_total() {
  fantasty_total_ = GOOGLE_LONGLONG(0);
  clear_has_fantasty_total();
}
inline ::google::protobuf::int64 FuncFightDBData::fantasty_total() const {
  return fantasty_total_;
}
inline void FuncFightDBData::set_fantasty_total(::google::protobuf::int64 value) {
  set_has_fantasty_total();
  fantasty_total_ = value;
}

// optional int64 artifact_fantasty = 18;
inline bool FuncFightDBData::has_artifact_fantasty() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FuncFightDBData::set_has_artifact_fantasty() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FuncFightDBData::clear_has_artifact_fantasty() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FuncFightDBData::clear_artifact_fantasty() {
  artifact_fantasty_ = GOOGLE_LONGLONG(0);
  clear_has_artifact_fantasty();
}
inline ::google::protobuf::int64 FuncFightDBData::artifact_fantasty() const {
  return artifact_fantasty_;
}
inline void FuncFightDBData::set_artifact_fantasty(::google::protobuf::int64 value) {
  set_has_artifact_fantasty();
  artifact_fantasty_ = value;
}

// optional int64 horse_fantasty = 19;
inline bool FuncFightDBData::has_horse_fantasty() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FuncFightDBData::set_has_horse_fantasty() {
  _has_bits_[0] |= 0x00040000u;
}
inline void FuncFightDBData::clear_has_horse_fantasty() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void FuncFightDBData::clear_horse_fantasty() {
  horse_fantasty_ = GOOGLE_LONGLONG(0);
  clear_has_horse_fantasty();
}
inline ::google::protobuf::int64 FuncFightDBData::horse_fantasty() const {
  return horse_fantasty_;
}
inline void FuncFightDBData::set_horse_fantasty(::google::protobuf::int64 value) {
  set_has_horse_fantasty();
  horse_fantasty_ = value;
}

// optional int64 wing_fantasty = 20;
inline bool FuncFightDBData::has_wing_fantasty() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FuncFightDBData::set_has_wing_fantasty() {
  _has_bits_[0] |= 0x00080000u;
}
inline void FuncFightDBData::clear_has_wing_fantasty() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void FuncFightDBData::clear_wing_fantasty() {
  wing_fantasty_ = GOOGLE_LONGLONG(0);
  clear_has_wing_fantasty();
}
inline ::google::protobuf::int64 FuncFightDBData::wing_fantasty() const {
  return wing_fantasty_;
}
inline void FuncFightDBData::set_wing_fantasty(::google::protobuf::int64 value) {
  set_has_wing_fantasty();
  wing_fantasty_ = value;
}

// optional int64 fashion_fantasty = 21;
inline bool FuncFightDBData::has_fashion_fantasty() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FuncFightDBData::set_has_fashion_fantasty() {
  _has_bits_[0] |= 0x00100000u;
}
inline void FuncFightDBData::clear_has_fashion_fantasty() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void FuncFightDBData::clear_fashion_fantasty() {
  fashion_fantasty_ = GOOGLE_LONGLONG(0);
  clear_has_fashion_fantasty();
}
inline ::google::protobuf::int64 FuncFightDBData::fashion_fantasty() const {
  return fashion_fantasty_;
}
inline void FuncFightDBData::set_fashion_fantasty(::google::protobuf::int64 value) {
  set_has_fashion_fantasty();
  fashion_fantasty_ = value;
}

// optional int64 partner_fantasty = 22;
inline bool FuncFightDBData::has_partner_fantasty() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void FuncFightDBData::set_has_partner_fantasty() {
  _has_bits_[0] |= 0x00200000u;
}
inline void FuncFightDBData::clear_has_partner_fantasty() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void FuncFightDBData::clear_partner_fantasty() {
  partner_fantasty_ = GOOGLE_LONGLONG(0);
  clear_has_partner_fantasty();
}
inline ::google::protobuf::int64 FuncFightDBData::partner_fantasty() const {
  return partner_fantasty_;
}
inline void FuncFightDBData::set_partner_fantasty(::google::protobuf::int64 value) {
  set_has_partner_fantasty();
  partner_fantasty_ = value;
}

// optional int64 treasure_fantasty = 23;
inline bool FuncFightDBData::has_treasure_fantasty() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void FuncFightDBData::set_has_treasure_fantasty() {
  _has_bits_[0] |= 0x00400000u;
}
inline void FuncFightDBData::clear_has_treasure_fantasty() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void FuncFightDBData::clear_treasure_fantasty() {
  treasure_fantasty_ = GOOGLE_LONGLONG(0);
  clear_has_treasure_fantasty();
}
inline ::google::protobuf::int64 FuncFightDBData::treasure_fantasty() const {
  return treasure_fantasty_;
}
inline void FuncFightDBData::set_treasure_fantasty(::google::protobuf::int64 value) {
  set_has_treasure_fantasty();
  treasure_fantasty_ = value;
}

// -------------------------------------------------------------------

// PowerInfo

// optional int32 titleId = 1;
inline bool PowerInfo::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerInfo::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerInfo::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerInfo::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 PowerInfo::titleid() const {
  return titleid_;
}
inline void PowerInfo::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional int32 curBuyNum = 2;
inline bool PowerInfo::has_curbuynum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerInfo::set_has_curbuynum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PowerInfo::clear_has_curbuynum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PowerInfo::clear_curbuynum() {
  curbuynum_ = 0;
  clear_has_curbuynum();
}
inline ::google::protobuf::int32 PowerInfo::curbuynum() const {
  return curbuynum_;
}
inline void PowerInfo::set_curbuynum(::google::protobuf::int32 value) {
  set_has_curbuynum();
  curbuynum_ = value;
}

// optional int32 skillUpdateId = 3;
inline bool PowerInfo::has_skillupdateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PowerInfo::set_has_skillupdateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PowerInfo::clear_has_skillupdateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PowerInfo::clear_skillupdateid() {
  skillupdateid_ = 0;
  clear_has_skillupdateid();
}
inline ::google::protobuf::int32 PowerInfo::skillupdateid() const {
  return skillupdateid_;
}
inline void PowerInfo::set_skillupdateid(::google::protobuf::int32 value) {
  set_has_skillupdateid();
  skillupdateid_ = value;
}

// -------------------------------------------------------------------

// PowerInfoDBList

// repeated .proto_ff.PowerInfo infos = 1;
inline int PowerInfoDBList::infos_size() const {
  return infos_.size();
}
inline void PowerInfoDBList::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::PowerInfo& PowerInfoDBList::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::PowerInfo* PowerInfoDBList::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::PowerInfo* PowerInfoDBList::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PowerInfo >&
PowerInfoDBList::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PowerInfo >*
PowerInfoDBList::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// OccupationTaskInfo

// optional int32 taskID = 1;
inline bool OccupationTaskInfo::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupationTaskInfo::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupationTaskInfo::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupationTaskInfo::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 OccupationTaskInfo::taskid() const {
  return taskid_;
}
inline void OccupationTaskInfo::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional int32 curValue = 2;
inline bool OccupationTaskInfo::has_curvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupationTaskInfo::set_has_curvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupationTaskInfo::clear_has_curvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupationTaskInfo::clear_curvalue() {
  curvalue_ = 0;
  clear_has_curvalue();
}
inline ::google::protobuf::int32 OccupationTaskInfo::curvalue() const {
  return curvalue_;
}
inline void OccupationTaskInfo::set_curvalue(::google::protobuf::int32 value) {
  set_has_curvalue();
  curvalue_ = value;
}

// optional int32 taskState = 3;
inline bool OccupationTaskInfo::has_taskstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupationTaskInfo::set_has_taskstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OccupationTaskInfo::clear_has_taskstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OccupationTaskInfo::clear_taskstate() {
  taskstate_ = 0;
  clear_has_taskstate();
}
inline ::google::protobuf::int32 OccupationTaskInfo::taskstate() const {
  return taskstate_;
}
inline void OccupationTaskInfo::set_taskstate(::google::protobuf::int32 value) {
  set_has_taskstate();
  taskstate_ = value;
}

// -------------------------------------------------------------------

// OccupationTakeList

// repeated .proto_ff.OccupationTaskInfo tasks = 1;
inline int OccupationTakeList::tasks_size() const {
  return tasks_.size();
}
inline void OccupationTakeList::clear_tasks() {
  tasks_.Clear();
}
inline const ::proto_ff::OccupationTaskInfo& OccupationTakeList::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::proto_ff::OccupationTaskInfo* OccupationTakeList::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::proto_ff::OccupationTaskInfo* OccupationTakeList::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationTaskInfo >&
OccupationTakeList::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OccupationTaskInfo >*
OccupationTakeList::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// ComStarInfo

// optional uint64 id = 1;
inline bool ComStarInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComStarInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComStarInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComStarInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 ComStarInfo::id() const {
  return id_;
}
inline void ComStarInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 star_lv = 2;
inline bool ComStarInfo::has_star_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComStarInfo::set_has_star_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComStarInfo::clear_has_star_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComStarInfo::clear_star_lv() {
  star_lv_ = 0;
  clear_has_star_lv();
}
inline ::google::protobuf::int32 ComStarInfo::star_lv() const {
  return star_lv_;
}
inline void ComStarInfo::set_star_lv(::google::protobuf::int32 value) {
  set_has_star_lv();
  star_lv_ = value;
}

// -------------------------------------------------------------------

// CharacterDBHeadSetData

// repeated .proto_ff.ComStarInfo headList = 1;
inline int CharacterDBHeadSetData::headlist_size() const {
  return headlist_.size();
}
inline void CharacterDBHeadSetData::clear_headlist() {
  headlist_.Clear();
}
inline const ::proto_ff::ComStarInfo& CharacterDBHeadSetData::headlist(int index) const {
  return headlist_.Get(index);
}
inline ::proto_ff::ComStarInfo* CharacterDBHeadSetData::mutable_headlist(int index) {
  return headlist_.Mutable(index);
}
inline ::proto_ff::ComStarInfo* CharacterDBHeadSetData::add_headlist() {
  return headlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >&
CharacterDBHeadSetData::headlist() const {
  return headlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >*
CharacterDBHeadSetData::mutable_headlist() {
  return &headlist_;
}

// optional uint64 cur_head_id = 2;
inline bool CharacterDBHeadSetData::has_cur_head_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBHeadSetData::set_has_cur_head_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBHeadSetData::clear_has_cur_head_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBHeadSetData::clear_cur_head_id() {
  cur_head_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_head_id();
}
inline ::google::protobuf::uint64 CharacterDBHeadSetData::cur_head_id() const {
  return cur_head_id_;
}
inline void CharacterDBHeadSetData::set_cur_head_id(::google::protobuf::uint64 value) {
  set_has_cur_head_id();
  cur_head_id_ = value;
}

// repeated .proto_ff.ComStarInfo frameList = 3;
inline int CharacterDBHeadSetData::framelist_size() const {
  return framelist_.size();
}
inline void CharacterDBHeadSetData::clear_framelist() {
  framelist_.Clear();
}
inline const ::proto_ff::ComStarInfo& CharacterDBHeadSetData::framelist(int index) const {
  return framelist_.Get(index);
}
inline ::proto_ff::ComStarInfo* CharacterDBHeadSetData::mutable_framelist(int index) {
  return framelist_.Mutable(index);
}
inline ::proto_ff::ComStarInfo* CharacterDBHeadSetData::add_framelist() {
  return framelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >&
CharacterDBHeadSetData::framelist() const {
  return framelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >*
CharacterDBHeadSetData::mutable_framelist() {
  return &framelist_;
}

// optional uint64 cur_frame_id = 4;
inline bool CharacterDBHeadSetData::has_cur_frame_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBHeadSetData::set_has_cur_frame_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBHeadSetData::clear_has_cur_frame_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBHeadSetData::clear_cur_frame_id() {
  cur_frame_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_frame_id();
}
inline ::google::protobuf::uint64 CharacterDBHeadSetData::cur_frame_id() const {
  return cur_frame_id_;
}
inline void CharacterDBHeadSetData::set_cur_frame_id(::google::protobuf::uint64 value) {
  set_has_cur_frame_id();
  cur_frame_id_ = value;
}

// repeated .proto_ff.ComStarInfo bubbleList = 5;
inline int CharacterDBHeadSetData::bubblelist_size() const {
  return bubblelist_.size();
}
inline void CharacterDBHeadSetData::clear_bubblelist() {
  bubblelist_.Clear();
}
inline const ::proto_ff::ComStarInfo& CharacterDBHeadSetData::bubblelist(int index) const {
  return bubblelist_.Get(index);
}
inline ::proto_ff::ComStarInfo* CharacterDBHeadSetData::mutable_bubblelist(int index) {
  return bubblelist_.Mutable(index);
}
inline ::proto_ff::ComStarInfo* CharacterDBHeadSetData::add_bubblelist() {
  return bubblelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >&
CharacterDBHeadSetData::bubblelist() const {
  return bubblelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComStarInfo >*
CharacterDBHeadSetData::mutable_bubblelist() {
  return &bubblelist_;
}

// optional uint64 cur_bubble_id = 6;
inline bool CharacterDBHeadSetData::has_cur_bubble_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBHeadSetData::set_has_cur_bubble_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBHeadSetData::clear_has_cur_bubble_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBHeadSetData::clear_cur_bubble_id() {
  cur_bubble_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_bubble_id();
}
inline ::google::protobuf::uint64 CharacterDBHeadSetData::cur_bubble_id() const {
  return cur_bubble_id_;
}
inline void CharacterDBHeadSetData::set_cur_bubble_id(::google::protobuf::uint64 value) {
  set_has_cur_bubble_id();
  cur_bubble_id_ = value;
}

// -------------------------------------------------------------------

// CharacterDBOnlineGiftInfo

// optional int32 id = 1;
inline bool CharacterDBOnlineGiftInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBOnlineGiftInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBOnlineGiftInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBOnlineGiftInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CharacterDBOnlineGiftInfo::id() const {
  return id_;
}
inline void CharacterDBOnlineGiftInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 state = 2;
inline bool CharacterDBOnlineGiftInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBOnlineGiftInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBOnlineGiftInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBOnlineGiftInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CharacterDBOnlineGiftInfo::state() const {
  return state_;
}
inline void CharacterDBOnlineGiftInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// CharacterDBOnlineGiftData

// optional int32 online_time = 1;
inline bool CharacterDBOnlineGiftData::has_online_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBOnlineGiftData::set_has_online_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBOnlineGiftData::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBOnlineGiftData::clear_online_time() {
  online_time_ = 0;
  clear_has_online_time();
}
inline ::google::protobuf::int32 CharacterDBOnlineGiftData::online_time() const {
  return online_time_;
}
inline void CharacterDBOnlineGiftData::set_online_time(::google::protobuf::int32 value) {
  set_has_online_time();
  online_time_ = value;
}

// repeated .proto_ff.CharacterDBOnlineGiftInfo infos = 2;
inline int CharacterDBOnlineGiftData::infos_size() const {
  return infos_.size();
}
inline void CharacterDBOnlineGiftData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::CharacterDBOnlineGiftInfo& CharacterDBOnlineGiftData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::CharacterDBOnlineGiftInfo* CharacterDBOnlineGiftData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::CharacterDBOnlineGiftInfo* CharacterDBOnlineGiftData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOnlineGiftInfo >&
CharacterDBOnlineGiftData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharacterDBOnlineGiftInfo >*
CharacterDBOnlineGiftData::mutable_infos() {
  return &infos_;
}

// optional int32 reset_day = 3;
inline bool CharacterDBOnlineGiftData::has_reset_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBOnlineGiftData::set_has_reset_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBOnlineGiftData::clear_has_reset_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBOnlineGiftData::clear_reset_day() {
  reset_day_ = 0;
  clear_has_reset_day();
}
inline ::google::protobuf::int32 CharacterDBOnlineGiftData::reset_day() const {
  return reset_day_;
}
inline void CharacterDBOnlineGiftData::set_reset_day(::google::protobuf::int32 value) {
  set_has_reset_day();
  reset_day_ = value;
}

// optional int64 lasttime = 4;
inline bool CharacterDBOnlineGiftData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBOnlineGiftData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBOnlineGiftData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBOnlineGiftData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 CharacterDBOnlineGiftData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBOnlineGiftData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// CharDropItemDBProto

// optional uint64 itemid = 1;
inline bool CharDropItemDBProto::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharDropItemDBProto::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharDropItemDBProto::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharDropItemDBProto::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 CharDropItemDBProto::itemid() const {
  return itemid_;
}
inline void CharDropItemDBProto::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int64 num = 2;
inline bool CharDropItemDBProto::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharDropItemDBProto::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharDropItemDBProto::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharDropItemDBProto::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 CharDropItemDBProto::num() const {
  return num_;
}
inline void CharDropItemDBProto::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CharDropMultItemDBProto

// repeated .proto_ff.CharDropItemDBProto info = 1;
inline int CharDropMultItemDBProto::info_size() const {
  return info_.size();
}
inline void CharDropMultItemDBProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::CharDropItemDBProto& CharDropMultItemDBProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::CharDropItemDBProto* CharDropMultItemDBProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::CharDropItemDBProto* CharDropMultItemDBProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDropItemDBProto >&
CharDropMultItemDBProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CharDropItemDBProto >*
CharDropMultItemDBProto::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// CharDropLimitDBData

// optional .proto_ff.CharDropMultItemDBProto limit = 1;
inline bool CharDropLimitDBData::has_limit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharDropLimitDBData::set_has_limit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharDropLimitDBData::clear_has_limit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharDropLimitDBData::clear_limit() {
  if (limit_ != NULL) limit_->::proto_ff::CharDropMultItemDBProto::Clear();
  clear_has_limit();
}
inline const ::proto_ff::CharDropMultItemDBProto& CharDropLimitDBData::limit() const {
  return limit_ != NULL ? *limit_ : *default_instance_->limit_;
}
inline ::proto_ff::CharDropMultItemDBProto* CharDropLimitDBData::mutable_limit() {
  set_has_limit();
  if (limit_ == NULL) limit_ = new ::proto_ff::CharDropMultItemDBProto;
  return limit_;
}
inline ::proto_ff::CharDropMultItemDBProto* CharDropLimitDBData::release_limit() {
  clear_has_limit();
  ::proto_ff::CharDropMultItemDBProto* temp = limit_;
  limit_ = NULL;
  return temp;
}
inline void CharDropLimitDBData::set_allocated_limit(::proto_ff::CharDropMultItemDBProto* limit) {
  delete limit_;
  limit_ = limit;
  if (limit) {
    set_has_limit();
  } else {
    clear_has_limit();
  }
}

// optional uint64 fresh_time = 2;
inline bool CharDropLimitDBData::has_fresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharDropLimitDBData::set_has_fresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharDropLimitDBData::clear_has_fresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharDropLimitDBData::clear_fresh_time() {
  fresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_fresh_time();
}
inline ::google::protobuf::uint64 CharDropLimitDBData::fresh_time() const {
  return fresh_time_;
}
inline void CharDropLimitDBData::set_fresh_time(::google::protobuf::uint64 value) {
  set_has_fresh_time();
  fresh_time_ = value;
}

// -------------------------------------------------------------------

// CharacterDBGmHelpData

// optional int64 timeEnd = 1;
inline bool CharacterDBGmHelpData::has_timeend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBGmHelpData::set_has_timeend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBGmHelpData::clear_has_timeend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBGmHelpData::clear_timeend() {
  timeend_ = GOOGLE_LONGLONG(0);
  clear_has_timeend();
}
inline ::google::protobuf::int64 CharacterDBGmHelpData::timeend() const {
  return timeend_;
}
inline void CharacterDBGmHelpData::set_timeend(::google::protobuf::int64 value) {
  set_has_timeend();
  timeend_ = value;
}

// optional int64 helpTime = 2;
inline bool CharacterDBGmHelpData::has_helptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBGmHelpData::set_has_helptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBGmHelpData::clear_has_helptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBGmHelpData::clear_helptime() {
  helptime_ = GOOGLE_LONGLONG(0);
  clear_has_helptime();
}
inline ::google::protobuf::int64 CharacterDBGmHelpData::helptime() const {
  return helptime_;
}
inline void CharacterDBGmHelpData::set_helptime(::google::protobuf::int64 value) {
  set_has_helptime();
  helptime_ = value;
}

// optional int32 helpDay = 3;
inline bool CharacterDBGmHelpData::has_helpday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBGmHelpData::set_has_helpday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBGmHelpData::clear_has_helpday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBGmHelpData::clear_helpday() {
  helpday_ = 0;
  clear_has_helpday();
}
inline ::google::protobuf::int32 CharacterDBGmHelpData::helpday() const {
  return helpday_;
}
inline void CharacterDBGmHelpData::set_helpday(::google::protobuf::int32 value) {
  set_has_helpday();
  helpday_ = value;
}

// optional int64 applyTime = 4;
inline bool CharacterDBGmHelpData::has_applytime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBGmHelpData::set_has_applytime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBGmHelpData::clear_has_applytime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBGmHelpData::clear_applytime() {
  applytime_ = GOOGLE_LONGLONG(0);
  clear_has_applytime();
}
inline ::google::protobuf::int64 CharacterDBGmHelpData::applytime() const {
  return applytime_;
}
inline void CharacterDBGmHelpData::set_applytime(::google::protobuf::int64 value) {
  set_has_applytime();
  applytime_ = value;
}

// optional int32 applyDay = 5;
inline bool CharacterDBGmHelpData::has_applyday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBGmHelpData::set_has_applyday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBGmHelpData::clear_has_applyday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBGmHelpData::clear_applyday() {
  applyday_ = 0;
  clear_has_applyday();
}
inline ::google::protobuf::int32 CharacterDBGmHelpData::applyday() const {
  return applyday_;
}
inline void CharacterDBGmHelpData::set_applyday(::google::protobuf::int32 value) {
  set_has_applyday();
  applyday_ = value;
}

// optional int64 helpcid = 6;
inline bool CharacterDBGmHelpData::has_helpcid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBGmHelpData::set_has_helpcid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBGmHelpData::clear_has_helpcid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBGmHelpData::clear_helpcid() {
  helpcid_ = GOOGLE_LONGLONG(0);
  clear_has_helpcid();
}
inline ::google::protobuf::int64 CharacterDBGmHelpData::helpcid() const {
  return helpcid_;
}
inline void CharacterDBGmHelpData::set_helpcid(::google::protobuf::int64 value) {
  set_has_helpcid();
  helpcid_ = value;
}

// repeated .proto_ff.ComPair helpState = 7;
inline int CharacterDBGmHelpData::helpstate_size() const {
  return helpstate_.size();
}
inline void CharacterDBGmHelpData::clear_helpstate() {
  helpstate_.Clear();
}
inline const ::proto_ff::ComPair& CharacterDBGmHelpData::helpstate(int index) const {
  return helpstate_.Get(index);
}
inline ::proto_ff::ComPair* CharacterDBGmHelpData::mutable_helpstate(int index) {
  return helpstate_.Mutable(index);
}
inline ::proto_ff::ComPair* CharacterDBGmHelpData::add_helpstate() {
  return helpstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
CharacterDBGmHelpData::helpstate() const {
  return helpstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
CharacterDBGmHelpData::mutable_helpstate() {
  return &helpstate_;
}

// optional int32 applyResult = 8;
inline bool CharacterDBGmHelpData::has_applyresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBGmHelpData::set_has_applyresult() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBGmHelpData::clear_has_applyresult() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBGmHelpData::clear_applyresult() {
  applyresult_ = 0;
  clear_has_applyresult();
}
inline ::google::protobuf::int32 CharacterDBGmHelpData::applyresult() const {
  return applyresult_;
}
inline void CharacterDBGmHelpData::set_applyresult(::google::protobuf::int32 value) {
  set_has_applyresult();
  applyresult_ = value;
}

// -------------------------------------------------------------------

// GMToolsDB

// repeated int32 gifts = 1;
inline int GMToolsDB::gifts_size() const {
  return gifts_.size();
}
inline void GMToolsDB::clear_gifts() {
  gifts_.Clear();
}
inline ::google::protobuf::int32 GMToolsDB::gifts(int index) const {
  return gifts_.Get(index);
}
inline void GMToolsDB::set_gifts(int index, ::google::protobuf::int32 value) {
  gifts_.Set(index, value);
}
inline void GMToolsDB::add_gifts(::google::protobuf::int32 value) {
  gifts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GMToolsDB::gifts() const {
  return gifts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GMToolsDB::mutable_gifts() {
  return &gifts_;
}

// repeated .proto_ff.ComPair unlimits = 2;
inline int GMToolsDB::unlimits_size() const {
  return unlimits_.size();
}
inline void GMToolsDB::clear_unlimits() {
  unlimits_.Clear();
}
inline const ::proto_ff::ComPair& GMToolsDB::unlimits(int index) const {
  return unlimits_.Get(index);
}
inline ::proto_ff::ComPair* GMToolsDB::mutable_unlimits(int index) {
  return unlimits_.Mutable(index);
}
inline ::proto_ff::ComPair* GMToolsDB::add_unlimits() {
  return unlimits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
GMToolsDB::unlimits() const {
  return unlimits_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
GMToolsDB::mutable_unlimits() {
  return &unlimits_;
}

// optional uint64 refresh_time = 3;
inline bool GMToolsDB::has_refresh_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMToolsDB::set_has_refresh_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMToolsDB::clear_has_refresh_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMToolsDB::clear_refresh_time() {
  refresh_time_ = GOOGLE_ULONGLONG(0);
  clear_has_refresh_time();
}
inline ::google::protobuf::uint64 GMToolsDB::refresh_time() const {
  return refresh_time_;
}
inline void GMToolsDB::set_refresh_time(::google::protobuf::uint64 value) {
  set_has_refresh_time();
  refresh_time_ = value;
}

// optional uint64 cur_use = 4;
inline bool GMToolsDB::has_cur_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMToolsDB::set_has_cur_use() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMToolsDB::clear_has_cur_use() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMToolsDB::clear_cur_use() {
  cur_use_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_use();
}
inline ::google::protobuf::uint64 GMToolsDB::cur_use() const {
  return cur_use_;
}
inline void GMToolsDB::set_cur_use(::google::protobuf::uint64 value) {
  set_has_cur_use();
  cur_use_ = value;
}

// -------------------------------------------------------------------

// CharacterDBGodGMData

// optional int32 curType = 1;
inline bool CharacterDBGodGMData::has_curtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBGodGMData::set_has_curtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBGodGMData::clear_has_curtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBGodGMData::clear_curtype() {
  curtype_ = 0;
  clear_has_curtype();
}
inline ::google::protobuf::int32 CharacterDBGodGMData::curtype() const {
  return curtype_;
}
inline void CharacterDBGodGMData::set_curtype(::google::protobuf::int32 value) {
  set_has_curtype();
  curtype_ = value;
}

// optional int64 timeEnd = 2;
inline bool CharacterDBGodGMData::has_timeend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBGodGMData::set_has_timeend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBGodGMData::clear_has_timeend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBGodGMData::clear_timeend() {
  timeend_ = GOOGLE_LONGLONG(0);
  clear_has_timeend();
}
inline ::google::protobuf::int64 CharacterDBGodGMData::timeend() const {
  return timeend_;
}
inline void CharacterDBGodGMData::set_timeend(::google::protobuf::int64 value) {
  set_has_timeend();
  timeend_ = value;
}

// optional int32 curExchangeNum = 3;
inline bool CharacterDBGodGMData::has_curexchangenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBGodGMData::set_has_curexchangenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBGodGMData::clear_has_curexchangenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBGodGMData::clear_curexchangenum() {
  curexchangenum_ = 0;
  clear_has_curexchangenum();
}
inline ::google::protobuf::int32 CharacterDBGodGMData::curexchangenum() const {
  return curexchangenum_;
}
inline void CharacterDBGodGMData::set_curexchangenum(::google::protobuf::int32 value) {
  set_has_curexchangenum();
  curexchangenum_ = value;
}

// optional int32 normalGiftState = 4;
inline bool CharacterDBGodGMData::has_normalgiftstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBGodGMData::set_has_normalgiftstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBGodGMData::clear_has_normalgiftstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBGodGMData::clear_normalgiftstate() {
  normalgiftstate_ = 0;
  clear_has_normalgiftstate();
}
inline ::google::protobuf::int32 CharacterDBGodGMData::normalgiftstate() const {
  return normalgiftstate_;
}
inline void CharacterDBGodGMData::set_normalgiftstate(::google::protobuf::int32 value) {
  set_has_normalgiftstate();
  normalgiftstate_ = value;
}

// optional int32 seniorGiftState = 5;
inline bool CharacterDBGodGMData::has_seniorgiftstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBGodGMData::set_has_seniorgiftstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBGodGMData::clear_has_seniorgiftstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBGodGMData::clear_seniorgiftstate() {
  seniorgiftstate_ = 0;
  clear_has_seniorgiftstate();
}
inline ::google::protobuf::int32 CharacterDBGodGMData::seniorgiftstate() const {
  return seniorgiftstate_;
}
inline void CharacterDBGodGMData::set_seniorgiftstate(::google::protobuf::int32 value) {
  set_has_seniorgiftstate();
  seniorgiftstate_ = value;
}

// optional int64 lastTime = 6;
inline bool CharacterDBGodGMData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBGodGMData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBGodGMData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBGodGMData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 CharacterDBGodGMData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBGodGMData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 unlock = 7;
inline bool CharacterDBGodGMData::has_unlock() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBGodGMData::set_has_unlock() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBGodGMData::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBGodGMData::clear_unlock() {
  unlock_ = 0;
  clear_has_unlock();
}
inline ::google::protobuf::int32 CharacterDBGodGMData::unlock() const {
  return unlock_;
}
inline void CharacterDBGodGMData::set_unlock(::google::protobuf::int32 value) {
  set_has_unlock();
  unlock_ = value;
}

// optional .proto_ff.GMToolsDB gmtool = 8;
inline bool CharacterDBGodGMData::has_gmtool() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBGodGMData::set_has_gmtool() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBGodGMData::clear_has_gmtool() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBGodGMData::clear_gmtool() {
  if (gmtool_ != NULL) gmtool_->::proto_ff::GMToolsDB::Clear();
  clear_has_gmtool();
}
inline const ::proto_ff::GMToolsDB& CharacterDBGodGMData::gmtool() const {
  return gmtool_ != NULL ? *gmtool_ : *default_instance_->gmtool_;
}
inline ::proto_ff::GMToolsDB* CharacterDBGodGMData::mutable_gmtool() {
  set_has_gmtool();
  if (gmtool_ == NULL) gmtool_ = new ::proto_ff::GMToolsDB;
  return gmtool_;
}
inline ::proto_ff::GMToolsDB* CharacterDBGodGMData::release_gmtool() {
  clear_has_gmtool();
  ::proto_ff::GMToolsDB* temp = gmtool_;
  gmtool_ = NULL;
  return temp;
}
inline void CharacterDBGodGMData::set_allocated_gmtool(::proto_ff::GMToolsDB* gmtool) {
  delete gmtool_;
  gmtool_ = gmtool;
  if (gmtool) {
    set_has_gmtool();
  } else {
    clear_has_gmtool();
  }
}

// -------------------------------------------------------------------

// BowlDBRewardProto

// optional uint32 recharge_id = 1;
inline bool BowlDBRewardProto::has_recharge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BowlDBRewardProto::set_has_recharge_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BowlDBRewardProto::clear_has_recharge_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BowlDBRewardProto::clear_recharge_id() {
  recharge_id_ = 0u;
  clear_has_recharge_id();
}
inline ::google::protobuf::uint32 BowlDBRewardProto::recharge_id() const {
  return recharge_id_;
}
inline void BowlDBRewardProto::set_recharge_id(::google::protobuf::uint32 value) {
  set_has_recharge_id();
  recharge_id_ = value;
}

// optional uint32 count = 2;
inline bool BowlDBRewardProto::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BowlDBRewardProto::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BowlDBRewardProto::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BowlDBRewardProto::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BowlDBRewardProto::count() const {
  return count_;
}
inline void BowlDBRewardProto::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// BowlDBData

// optional uint32 level = 1;
inline bool BowlDBData::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BowlDBData::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BowlDBData::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BowlDBData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BowlDBData::level() const {
  return level_;
}
inline void BowlDBData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 active = 2;
inline bool BowlDBData::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BowlDBData::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BowlDBData::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BowlDBData::clear_active() {
  active_ = 0;
  clear_has_active();
}
inline ::google::protobuf::int32 BowlDBData::active() const {
  return active_;
}
inline void BowlDBData::set_active(::google::protobuf::int32 value) {
  set_has_active();
  active_ = value;
}

// repeated .proto_ff.BowlDBRewardProto info = 3;
inline int BowlDBData::info_size() const {
  return info_.size();
}
inline void BowlDBData::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::BowlDBRewardProto& BowlDBData::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::BowlDBRewardProto* BowlDBData::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::BowlDBRewardProto* BowlDBData::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BowlDBRewardProto >&
BowlDBData::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BowlDBRewardProto >*
BowlDBData::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// HidePeriodDBProto

// optional int32 id = 1;
inline bool HidePeriodDBProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HidePeriodDBProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HidePeriodDBProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HidePeriodDBProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 HidePeriodDBProto::id() const {
  return id_;
}
inline void HidePeriodDBProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 total = 2;
inline bool HidePeriodDBProto::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HidePeriodDBProto::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HidePeriodDBProto::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HidePeriodDBProto::clear_total() {
  total_ = GOOGLE_ULONGLONG(0);
  clear_has_total();
}
inline ::google::protobuf::uint64 HidePeriodDBProto::total() const {
  return total_;
}
inline void HidePeriodDBProto::set_total(::google::protobuf::uint64 value) {
  set_has_total();
  total_ = value;
}

// optional int32 reward = 3;
inline bool HidePeriodDBProto::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HidePeriodDBProto::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HidePeriodDBProto::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HidePeriodDBProto::clear_reward() {
  reward_ = 0;
  clear_has_reward();
}
inline ::google::protobuf::int32 HidePeriodDBProto::reward() const {
  return reward_;
}
inline void HidePeriodDBProto::set_reward(::google::protobuf::int32 value) {
  set_has_reward();
  reward_ = value;
}

// optional uint64 lasttime = 4;
inline bool HidePeriodDBProto::has_lasttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HidePeriodDBProto::set_has_lasttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HidePeriodDBProto::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HidePeriodDBProto::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 HidePeriodDBProto::lasttime() const {
  return lasttime_;
}
inline void HidePeriodDBProto::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// CharacterDBHideData

// optional int32 forever_quota = 1;
inline bool CharacterDBHideData::has_forever_quota() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBHideData::set_has_forever_quota() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBHideData::clear_has_forever_quota() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBHideData::clear_forever_quota() {
  forever_quota_ = 0;
  clear_has_forever_quota();
}
inline ::google::protobuf::int32 CharacterDBHideData::forever_quota() const {
  return forever_quota_;
}
inline void CharacterDBHideData::set_forever_quota(::google::protobuf::int32 value) {
  set_has_forever_quota();
  forever_quota_ = value;
}

// optional int64 lastTime = 2;
inline bool CharacterDBHideData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBHideData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBHideData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBHideData::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::int64 CharacterDBHideData::lasttime() const {
  return lasttime_;
}
inline void CharacterDBHideData::set_lasttime(::google::protobuf::int64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 unit_quota = 3;
inline bool CharacterDBHideData::has_unit_quota() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBHideData::set_has_unit_quota() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBHideData::clear_has_unit_quota() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBHideData::clear_unit_quota() {
  unit_quota_ = 0;
  clear_has_unit_quota();
}
inline ::google::protobuf::int32 CharacterDBHideData::unit_quota() const {
  return unit_quota_;
}
inline void CharacterDBHideData::set_unit_quota(::google::protobuf::int32 value) {
  set_has_unit_quota();
  unit_quota_ = value;
}

// repeated int32 unit_ids = 4;
inline int CharacterDBHideData::unit_ids_size() const {
  return unit_ids_.size();
}
inline void CharacterDBHideData::clear_unit_ids() {
  unit_ids_.Clear();
}
inline ::google::protobuf::int32 CharacterDBHideData::unit_ids(int index) const {
  return unit_ids_.Get(index);
}
inline void CharacterDBHideData::set_unit_ids(int index, ::google::protobuf::int32 value) {
  unit_ids_.Set(index, value);
}
inline void CharacterDBHideData::add_unit_ids(::google::protobuf::int32 value) {
  unit_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterDBHideData::unit_ids() const {
  return unit_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterDBHideData::mutable_unit_ids() {
  return &unit_ids_;
}

// repeated int32 unit_once_ids = 5;
inline int CharacterDBHideData::unit_once_ids_size() const {
  return unit_once_ids_.size();
}
inline void CharacterDBHideData::clear_unit_once_ids() {
  unit_once_ids_.Clear();
}
inline ::google::protobuf::int32 CharacterDBHideData::unit_once_ids(int index) const {
  return unit_once_ids_.Get(index);
}
inline void CharacterDBHideData::set_unit_once_ids(int index, ::google::protobuf::int32 value) {
  unit_once_ids_.Set(index, value);
}
inline void CharacterDBHideData::add_unit_once_ids(::google::protobuf::int32 value) {
  unit_once_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterDBHideData::unit_once_ids() const {
  return unit_once_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterDBHideData::mutable_unit_once_ids() {
  return &unit_once_ids_;
}

// repeated int32 f_ids = 6;
inline int CharacterDBHideData::f_ids_size() const {
  return f_ids_.size();
}
inline void CharacterDBHideData::clear_f_ids() {
  f_ids_.Clear();
}
inline ::google::protobuf::int32 CharacterDBHideData::f_ids(int index) const {
  return f_ids_.Get(index);
}
inline void CharacterDBHideData::set_f_ids(int index, ::google::protobuf::int32 value) {
  f_ids_.Set(index, value);
}
inline void CharacterDBHideData::add_f_ids(::google::protobuf::int32 value) {
  f_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterDBHideData::f_ids() const {
  return f_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterDBHideData::mutable_f_ids() {
  return &f_ids_;
}

// optional int64 ctime = 7;
inline bool CharacterDBHideData::has_ctime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBHideData::set_has_ctime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBHideData::clear_has_ctime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBHideData::clear_ctime() {
  ctime_ = GOOGLE_LONGLONG(0);
  clear_has_ctime();
}
inline ::google::protobuf::int64 CharacterDBHideData::ctime() const {
  return ctime_;
}
inline void CharacterDBHideData::set_ctime(::google::protobuf::int64 value) {
  set_has_ctime();
  ctime_ = value;
}

// optional int32 days = 8;
inline bool CharacterDBHideData::has_days() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBHideData::set_has_days() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBHideData::clear_has_days() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBHideData::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 CharacterDBHideData::days() const {
  return days_;
}
inline void CharacterDBHideData::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
}

// repeated .proto_ff.HidePeriodDBProto period = 9;
inline int CharacterDBHideData::period_size() const {
  return period_.size();
}
inline void CharacterDBHideData::clear_period() {
  period_.Clear();
}
inline const ::proto_ff::HidePeriodDBProto& CharacterDBHideData::period(int index) const {
  return period_.Get(index);
}
inline ::proto_ff::HidePeriodDBProto* CharacterDBHideData::mutable_period(int index) {
  return period_.Mutable(index);
}
inline ::proto_ff::HidePeriodDBProto* CharacterDBHideData::add_period() {
  return period_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::HidePeriodDBProto >&
CharacterDBHideData::period() const {
  return period_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::HidePeriodDBProto >*
CharacterDBHideData::mutable_period() {
  return &period_;
}

// -------------------------------------------------------------------

// tbRoleInfo

// optional uint64 charId = 1;
inline bool tbRoleInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbRoleInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbRoleInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbRoleInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 tbRoleInfo::charid() const {
  return charid_;
}
inline void tbRoleInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint64 playerId = 2;
inline bool tbRoleInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbRoleInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbRoleInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbRoleInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 tbRoleInfo::playerid() const {
  return playerid_;
}
inline void tbRoleInfo::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 bornZoneId = 3;
inline bool tbRoleInfo::has_bornzoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tbRoleInfo::set_has_bornzoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tbRoleInfo::clear_has_bornzoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tbRoleInfo::clear_bornzoneid() {
  bornzoneid_ = GOOGLE_ULONGLONG(0);
  clear_has_bornzoneid();
}
inline ::google::protobuf::uint64 tbRoleInfo::bornzoneid() const {
  return bornzoneid_;
}
inline void tbRoleInfo::set_bornzoneid(::google::protobuf::uint64 value) {
  set_has_bornzoneid();
  bornzoneid_ = value;
}

// optional string charName = 4;
inline bool tbRoleInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tbRoleInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tbRoleInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tbRoleInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& tbRoleInfo::charname() const {
  return *charname_;
}
inline void tbRoleInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void tbRoleInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void tbRoleInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* tbRoleInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* tbRoleInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void tbRoleInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string platId = 5;
inline bool tbRoleInfo::has_platid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tbRoleInfo::set_has_platid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tbRoleInfo::clear_has_platid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tbRoleInfo::clear_platid() {
  if (platid_ != &::google::protobuf::internal::kEmptyString) {
    platid_->clear();
  }
  clear_has_platid();
}
inline const ::std::string& tbRoleInfo::platid() const {
  return *platid_;
}
inline void tbRoleInfo::set_platid(const ::std::string& value) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void tbRoleInfo::set_platid(const char* value) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void tbRoleInfo::set_platid(const char* value, size_t size) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* tbRoleInfo::mutable_platid() {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  return platid_;
}
inline ::std::string* tbRoleInfo::release_platid() {
  clear_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platid_;
    platid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void tbRoleInfo::set_allocated_platid(::std::string* platid) {
  if (platid_ != &::google::protobuf::internal::kEmptyString) {
    delete platid_;
  }
  if (platid) {
    set_has_platid();
    platid_ = platid;
  } else {
    clear_has_platid();
    platid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 deletechartime = 6;
inline bool tbRoleInfo::has_deletechartime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tbRoleInfo::set_has_deletechartime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tbRoleInfo::clear_has_deletechartime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tbRoleInfo::clear_deletechartime() {
  deletechartime_ = GOOGLE_ULONGLONG(0);
  clear_has_deletechartime();
}
inline ::google::protobuf::uint64 tbRoleInfo::deletechartime() const {
  return deletechartime_;
}
inline void tbRoleInfo::set_deletechartime(::google::protobuf::uint64 value) {
  set_has_deletechartime();
  deletechartime_ = value;
}

// optional int32 dirty = 7;
inline bool tbRoleInfo::has_dirty() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tbRoleInfo::set_has_dirty() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tbRoleInfo::clear_has_dirty() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tbRoleInfo::clear_dirty() {
  dirty_ = 0;
  clear_has_dirty();
}
inline ::google::protobuf::int32 tbRoleInfo::dirty() const {
  return dirty_;
}
inline void tbRoleInfo::set_dirty(::google::protobuf::int32 value) {
  set_has_dirty();
  dirty_ = value;
}

// optional .proto_ff.CharacterDBBaseInfo baseData = 20;
inline bool tbRoleInfo::has_basedata() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void tbRoleInfo::set_has_basedata() {
  _has_bits_[0] |= 0x00000080u;
}
inline void tbRoleInfo::clear_has_basedata() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void tbRoleInfo::clear_basedata() {
  if (basedata_ != NULL) basedata_->::proto_ff::CharacterDBBaseInfo::Clear();
  clear_has_basedata();
}
inline const ::proto_ff::CharacterDBBaseInfo& tbRoleInfo::basedata() const {
  return basedata_ != NULL ? *basedata_ : *default_instance_->basedata_;
}
inline ::proto_ff::CharacterDBBaseInfo* tbRoleInfo::mutable_basedata() {
  set_has_basedata();
  if (basedata_ == NULL) basedata_ = new ::proto_ff::CharacterDBBaseInfo;
  return basedata_;
}
inline ::proto_ff::CharacterDBBaseInfo* tbRoleInfo::release_basedata() {
  clear_has_basedata();
  ::proto_ff::CharacterDBBaseInfo* temp = basedata_;
  basedata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_basedata(::proto_ff::CharacterDBBaseInfo* basedata) {
  delete basedata_;
  basedata_ = basedata;
  if (basedata) {
    set_has_basedata();
  } else {
    clear_has_basedata();
  }
}

// optional .proto_ff.CharacterDBPackageData itemData = 21;
inline bool tbRoleInfo::has_itemdata() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void tbRoleInfo::set_has_itemdata() {
  _has_bits_[0] |= 0x00000100u;
}
inline void tbRoleInfo::clear_has_itemdata() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void tbRoleInfo::clear_itemdata() {
  if (itemdata_ != NULL) itemdata_->::proto_ff::CharacterDBPackageData::Clear();
  clear_has_itemdata();
}
inline const ::proto_ff::CharacterDBPackageData& tbRoleInfo::itemdata() const {
  return itemdata_ != NULL ? *itemdata_ : *default_instance_->itemdata_;
}
inline ::proto_ff::CharacterDBPackageData* tbRoleInfo::mutable_itemdata() {
  set_has_itemdata();
  if (itemdata_ == NULL) itemdata_ = new ::proto_ff::CharacterDBPackageData;
  return itemdata_;
}
inline ::proto_ff::CharacterDBPackageData* tbRoleInfo::release_itemdata() {
  clear_has_itemdata();
  ::proto_ff::CharacterDBPackageData* temp = itemdata_;
  itemdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_itemdata(::proto_ff::CharacterDBPackageData* itemdata) {
  delete itemdata_;
  itemdata_ = itemdata;
  if (itemdata) {
    set_has_itemdata();
  } else {
    clear_has_itemdata();
  }
}

// optional .proto_ff.CharacterDBTaskData taskData = 22;
inline bool tbRoleInfo::has_taskdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void tbRoleInfo::set_has_taskdata() {
  _has_bits_[0] |= 0x00000200u;
}
inline void tbRoleInfo::clear_has_taskdata() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void tbRoleInfo::clear_taskdata() {
  if (taskdata_ != NULL) taskdata_->::proto_ff::CharacterDBTaskData::Clear();
  clear_has_taskdata();
}
inline const ::proto_ff::CharacterDBTaskData& tbRoleInfo::taskdata() const {
  return taskdata_ != NULL ? *taskdata_ : *default_instance_->taskdata_;
}
inline ::proto_ff::CharacterDBTaskData* tbRoleInfo::mutable_taskdata() {
  set_has_taskdata();
  if (taskdata_ == NULL) taskdata_ = new ::proto_ff::CharacterDBTaskData;
  return taskdata_;
}
inline ::proto_ff::CharacterDBTaskData* tbRoleInfo::release_taskdata() {
  clear_has_taskdata();
  ::proto_ff::CharacterDBTaskData* temp = taskdata_;
  taskdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_taskdata(::proto_ff::CharacterDBTaskData* taskdata) {
  delete taskdata_;
  taskdata_ = taskdata;
  if (taskdata) {
    set_has_taskdata();
  } else {
    clear_has_taskdata();
  }
}

// optional .proto_ff.CharacterDBSkillData skillData = 23;
inline bool tbRoleInfo::has_skilldata() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void tbRoleInfo::set_has_skilldata() {
  _has_bits_[0] |= 0x00000400u;
}
inline void tbRoleInfo::clear_has_skilldata() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void tbRoleInfo::clear_skilldata() {
  if (skilldata_ != NULL) skilldata_->::proto_ff::CharacterDBSkillData::Clear();
  clear_has_skilldata();
}
inline const ::proto_ff::CharacterDBSkillData& tbRoleInfo::skilldata() const {
  return skilldata_ != NULL ? *skilldata_ : *default_instance_->skilldata_;
}
inline ::proto_ff::CharacterDBSkillData* tbRoleInfo::mutable_skilldata() {
  set_has_skilldata();
  if (skilldata_ == NULL) skilldata_ = new ::proto_ff::CharacterDBSkillData;
  return skilldata_;
}
inline ::proto_ff::CharacterDBSkillData* tbRoleInfo::release_skilldata() {
  clear_has_skilldata();
  ::proto_ff::CharacterDBSkillData* temp = skilldata_;
  skilldata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_skilldata(::proto_ff::CharacterDBSkillData* skilldata) {
  delete skilldata_;
  skilldata_ = skilldata;
  if (skilldata) {
    set_has_skilldata();
  } else {
    clear_has_skilldata();
  }
}

// optional .proto_ff.CharacterDBExtendData extendData = 24;
inline bool tbRoleInfo::has_extenddata() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void tbRoleInfo::set_has_extenddata() {
  _has_bits_[0] |= 0x00000800u;
}
inline void tbRoleInfo::clear_has_extenddata() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void tbRoleInfo::clear_extenddata() {
  if (extenddata_ != NULL) extenddata_->::proto_ff::CharacterDBExtendData::Clear();
  clear_has_extenddata();
}
inline const ::proto_ff::CharacterDBExtendData& tbRoleInfo::extenddata() const {
  return extenddata_ != NULL ? *extenddata_ : *default_instance_->extenddata_;
}
inline ::proto_ff::CharacterDBExtendData* tbRoleInfo::mutable_extenddata() {
  set_has_extenddata();
  if (extenddata_ == NULL) extenddata_ = new ::proto_ff::CharacterDBExtendData;
  return extenddata_;
}
inline ::proto_ff::CharacterDBExtendData* tbRoleInfo::release_extenddata() {
  clear_has_extenddata();
  ::proto_ff::CharacterDBExtendData* temp = extenddata_;
  extenddata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_extenddata(::proto_ff::CharacterDBExtendData* extenddata) {
  delete extenddata_;
  extenddata_ = extenddata;
  if (extenddata) {
    set_has_extenddata();
  } else {
    clear_has_extenddata();
  }
}

// optional .proto_ff.CharacterDBEquipData equipData = 25;
inline bool tbRoleInfo::has_equipdata() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void tbRoleInfo::set_has_equipdata() {
  _has_bits_[0] |= 0x00001000u;
}
inline void tbRoleInfo::clear_has_equipdata() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void tbRoleInfo::clear_equipdata() {
  if (equipdata_ != NULL) equipdata_->::proto_ff::CharacterDBEquipData::Clear();
  clear_has_equipdata();
}
inline const ::proto_ff::CharacterDBEquipData& tbRoleInfo::equipdata() const {
  return equipdata_ != NULL ? *equipdata_ : *default_instance_->equipdata_;
}
inline ::proto_ff::CharacterDBEquipData* tbRoleInfo::mutable_equipdata() {
  set_has_equipdata();
  if (equipdata_ == NULL) equipdata_ = new ::proto_ff::CharacterDBEquipData;
  return equipdata_;
}
inline ::proto_ff::CharacterDBEquipData* tbRoleInfo::release_equipdata() {
  clear_has_equipdata();
  ::proto_ff::CharacterDBEquipData* temp = equipdata_;
  equipdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_equipdata(::proto_ff::CharacterDBEquipData* equipdata) {
  delete equipdata_;
  equipdata_ = equipdata;
  if (equipdata) {
    set_has_equipdata();
  } else {
    clear_has_equipdata();
  }
}

// optional .proto_ff.CharacterDBDuplicateData duplicateData = 26;
inline bool tbRoleInfo::has_duplicatedata() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void tbRoleInfo::set_has_duplicatedata() {
  _has_bits_[0] |= 0x00002000u;
}
inline void tbRoleInfo::clear_has_duplicatedata() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void tbRoleInfo::clear_duplicatedata() {
  if (duplicatedata_ != NULL) duplicatedata_->::proto_ff::CharacterDBDuplicateData::Clear();
  clear_has_duplicatedata();
}
inline const ::proto_ff::CharacterDBDuplicateData& tbRoleInfo::duplicatedata() const {
  return duplicatedata_ != NULL ? *duplicatedata_ : *default_instance_->duplicatedata_;
}
inline ::proto_ff::CharacterDBDuplicateData* tbRoleInfo::mutable_duplicatedata() {
  set_has_duplicatedata();
  if (duplicatedata_ == NULL) duplicatedata_ = new ::proto_ff::CharacterDBDuplicateData;
  return duplicatedata_;
}
inline ::proto_ff::CharacterDBDuplicateData* tbRoleInfo::release_duplicatedata() {
  clear_has_duplicatedata();
  ::proto_ff::CharacterDBDuplicateData* temp = duplicatedata_;
  duplicatedata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_duplicatedata(::proto_ff::CharacterDBDuplicateData* duplicatedata) {
  delete duplicatedata_;
  duplicatedata_ = duplicatedata;
  if (duplicatedata) {
    set_has_duplicatedata();
  } else {
    clear_has_duplicatedata();
  }
}

// optional .proto_ff.CharacterAchievementDBData achievementData = 27;
inline bool tbRoleInfo::has_achievementdata() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void tbRoleInfo::set_has_achievementdata() {
  _has_bits_[0] |= 0x00004000u;
}
inline void tbRoleInfo::clear_has_achievementdata() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void tbRoleInfo::clear_achievementdata() {
  if (achievementdata_ != NULL) achievementdata_->::proto_ff::CharacterAchievementDBData::Clear();
  clear_has_achievementdata();
}
inline const ::proto_ff::CharacterAchievementDBData& tbRoleInfo::achievementdata() const {
  return achievementdata_ != NULL ? *achievementdata_ : *default_instance_->achievementdata_;
}
inline ::proto_ff::CharacterAchievementDBData* tbRoleInfo::mutable_achievementdata() {
  set_has_achievementdata();
  if (achievementdata_ == NULL) achievementdata_ = new ::proto_ff::CharacterAchievementDBData;
  return achievementdata_;
}
inline ::proto_ff::CharacterAchievementDBData* tbRoleInfo::release_achievementdata() {
  clear_has_achievementdata();
  ::proto_ff::CharacterAchievementDBData* temp = achievementdata_;
  achievementdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_achievementdata(::proto_ff::CharacterAchievementDBData* achievementdata) {
  delete achievementdata_;
  achievementdata_ = achievementdata;
  if (achievementdata) {
    set_has_achievementdata();
  } else {
    clear_has_achievementdata();
  }
}

// optional .proto_ff.CharacterBuffData buffData = 28;
inline bool tbRoleInfo::has_buffdata() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void tbRoleInfo::set_has_buffdata() {
  _has_bits_[0] |= 0x00008000u;
}
inline void tbRoleInfo::clear_has_buffdata() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void tbRoleInfo::clear_buffdata() {
  if (buffdata_ != NULL) buffdata_->::proto_ff::CharacterBuffData::Clear();
  clear_has_buffdata();
}
inline const ::proto_ff::CharacterBuffData& tbRoleInfo::buffdata() const {
  return buffdata_ != NULL ? *buffdata_ : *default_instance_->buffdata_;
}
inline ::proto_ff::CharacterBuffData* tbRoleInfo::mutable_buffdata() {
  set_has_buffdata();
  if (buffdata_ == NULL) buffdata_ = new ::proto_ff::CharacterBuffData;
  return buffdata_;
}
inline ::proto_ff::CharacterBuffData* tbRoleInfo::release_buffdata() {
  clear_has_buffdata();
  ::proto_ff::CharacterBuffData* temp = buffdata_;
  buffdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_buffdata(::proto_ff::CharacterBuffData* buffdata) {
  delete buffdata_;
  buffdata_ = buffdata;
  if (buffdata) {
    set_has_buffdata();
  } else {
    clear_has_buffdata();
  }
}

// optional .proto_ff.CharacterArenaData arenaData = 29;
inline bool tbRoleInfo::has_arenadata() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void tbRoleInfo::set_has_arenadata() {
  _has_bits_[0] |= 0x00010000u;
}
inline void tbRoleInfo::clear_has_arenadata() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void tbRoleInfo::clear_arenadata() {
  if (arenadata_ != NULL) arenadata_->::proto_ff::CharacterArenaData::Clear();
  clear_has_arenadata();
}
inline const ::proto_ff::CharacterArenaData& tbRoleInfo::arenadata() const {
  return arenadata_ != NULL ? *arenadata_ : *default_instance_->arenadata_;
}
inline ::proto_ff::CharacterArenaData* tbRoleInfo::mutable_arenadata() {
  set_has_arenadata();
  if (arenadata_ == NULL) arenadata_ = new ::proto_ff::CharacterArenaData;
  return arenadata_;
}
inline ::proto_ff::CharacterArenaData* tbRoleInfo::release_arenadata() {
  clear_has_arenadata();
  ::proto_ff::CharacterArenaData* temp = arenadata_;
  arenadata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_arenadata(::proto_ff::CharacterArenaData* arenadata) {
  delete arenadata_;
  arenadata_ = arenadata;
  if (arenadata) {
    set_has_arenadata();
  } else {
    clear_has_arenadata();
  }
}

// optional .proto_ff.CharacterTitleSaveData titleData = 30;
inline bool tbRoleInfo::has_titledata() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void tbRoleInfo::set_has_titledata() {
  _has_bits_[0] |= 0x00020000u;
}
inline void tbRoleInfo::clear_has_titledata() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void tbRoleInfo::clear_titledata() {
  if (titledata_ != NULL) titledata_->::proto_ff::CharacterTitleSaveData::Clear();
  clear_has_titledata();
}
inline const ::proto_ff::CharacterTitleSaveData& tbRoleInfo::titledata() const {
  return titledata_ != NULL ? *titledata_ : *default_instance_->titledata_;
}
inline ::proto_ff::CharacterTitleSaveData* tbRoleInfo::mutable_titledata() {
  set_has_titledata();
  if (titledata_ == NULL) titledata_ = new ::proto_ff::CharacterTitleSaveData;
  return titledata_;
}
inline ::proto_ff::CharacterTitleSaveData* tbRoleInfo::release_titledata() {
  clear_has_titledata();
  ::proto_ff::CharacterTitleSaveData* temp = titledata_;
  titledata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_titledata(::proto_ff::CharacterTitleSaveData* titledata) {
  delete titledata_;
  titledata_ = titledata;
  if (titledata) {
    set_has_titledata();
  } else {
    clear_has_titledata();
  }
}

// optional .proto_ff.CharacterDBOperateLimitInfo operateLimitData = 31;
inline bool tbRoleInfo::has_operatelimitdata() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void tbRoleInfo::set_has_operatelimitdata() {
  _has_bits_[0] |= 0x00040000u;
}
inline void tbRoleInfo::clear_has_operatelimitdata() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void tbRoleInfo::clear_operatelimitdata() {
  if (operatelimitdata_ != NULL) operatelimitdata_->::proto_ff::CharacterDBOperateLimitInfo::Clear();
  clear_has_operatelimitdata();
}
inline const ::proto_ff::CharacterDBOperateLimitInfo& tbRoleInfo::operatelimitdata() const {
  return operatelimitdata_ != NULL ? *operatelimitdata_ : *default_instance_->operatelimitdata_;
}
inline ::proto_ff::CharacterDBOperateLimitInfo* tbRoleInfo::mutable_operatelimitdata() {
  set_has_operatelimitdata();
  if (operatelimitdata_ == NULL) operatelimitdata_ = new ::proto_ff::CharacterDBOperateLimitInfo;
  return operatelimitdata_;
}
inline ::proto_ff::CharacterDBOperateLimitInfo* tbRoleInfo::release_operatelimitdata() {
  clear_has_operatelimitdata();
  ::proto_ff::CharacterDBOperateLimitInfo* temp = operatelimitdata_;
  operatelimitdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_operatelimitdata(::proto_ff::CharacterDBOperateLimitInfo* operatelimitdata) {
  delete operatelimitdata_;
  operatelimitdata_ = operatelimitdata;
  if (operatelimitdata) {
    set_has_operatelimitdata();
  } else {
    clear_has_operatelimitdata();
  }
}

// optional .proto_ff.CharacterDBHuoYueDuInfo huoYueDuData = 32;
inline bool tbRoleInfo::has_huoyuedudata() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void tbRoleInfo::set_has_huoyuedudata() {
  _has_bits_[0] |= 0x00080000u;
}
inline void tbRoleInfo::clear_has_huoyuedudata() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void tbRoleInfo::clear_huoyuedudata() {
  if (huoyuedudata_ != NULL) huoyuedudata_->::proto_ff::CharacterDBHuoYueDuInfo::Clear();
  clear_has_huoyuedudata();
}
inline const ::proto_ff::CharacterDBHuoYueDuInfo& tbRoleInfo::huoyuedudata() const {
  return huoyuedudata_ != NULL ? *huoyuedudata_ : *default_instance_->huoyuedudata_;
}
inline ::proto_ff::CharacterDBHuoYueDuInfo* tbRoleInfo::mutable_huoyuedudata() {
  set_has_huoyuedudata();
  if (huoyuedudata_ == NULL) huoyuedudata_ = new ::proto_ff::CharacterDBHuoYueDuInfo;
  return huoyuedudata_;
}
inline ::proto_ff::CharacterDBHuoYueDuInfo* tbRoleInfo::release_huoyuedudata() {
  clear_has_huoyuedudata();
  ::proto_ff::CharacterDBHuoYueDuInfo* temp = huoyuedudata_;
  huoyuedudata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_huoyuedudata(::proto_ff::CharacterDBHuoYueDuInfo* huoyuedudata) {
  delete huoyuedudata_;
  huoyuedudata_ = huoyuedudata;
  if (huoyuedudata) {
    set_has_huoyuedudata();
  } else {
    clear_has_huoyuedudata();
  }
}

// optional .proto_ff.CharacterDBOperateData operateData = 33;
inline bool tbRoleInfo::has_operatedata() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void tbRoleInfo::set_has_operatedata() {
  _has_bits_[0] |= 0x00100000u;
}
inline void tbRoleInfo::clear_has_operatedata() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void tbRoleInfo::clear_operatedata() {
  if (operatedata_ != NULL) operatedata_->::proto_ff::CharacterDBOperateData::Clear();
  clear_has_operatedata();
}
inline const ::proto_ff::CharacterDBOperateData& tbRoleInfo::operatedata() const {
  return operatedata_ != NULL ? *operatedata_ : *default_instance_->operatedata_;
}
inline ::proto_ff::CharacterDBOperateData* tbRoleInfo::mutable_operatedata() {
  set_has_operatedata();
  if (operatedata_ == NULL) operatedata_ = new ::proto_ff::CharacterDBOperateData;
  return operatedata_;
}
inline ::proto_ff::CharacterDBOperateData* tbRoleInfo::release_operatedata() {
  clear_has_operatedata();
  ::proto_ff::CharacterDBOperateData* temp = operatedata_;
  operatedata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_operatedata(::proto_ff::CharacterDBOperateData* operatedata) {
  delete operatedata_;
  operatedata_ = operatedata;
  if (operatedata) {
    set_has_operatedata();
  } else {
    clear_has_operatedata();
  }
}

// optional .proto_ff.CharacterDBActiveInfo playerActiveInfo = 34;
inline bool tbRoleInfo::has_playeractiveinfo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void tbRoleInfo::set_has_playeractiveinfo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void tbRoleInfo::clear_has_playeractiveinfo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void tbRoleInfo::clear_playeractiveinfo() {
  if (playeractiveinfo_ != NULL) playeractiveinfo_->::proto_ff::CharacterDBActiveInfo::Clear();
  clear_has_playeractiveinfo();
}
inline const ::proto_ff::CharacterDBActiveInfo& tbRoleInfo::playeractiveinfo() const {
  return playeractiveinfo_ != NULL ? *playeractiveinfo_ : *default_instance_->playeractiveinfo_;
}
inline ::proto_ff::CharacterDBActiveInfo* tbRoleInfo::mutable_playeractiveinfo() {
  set_has_playeractiveinfo();
  if (playeractiveinfo_ == NULL) playeractiveinfo_ = new ::proto_ff::CharacterDBActiveInfo;
  return playeractiveinfo_;
}
inline ::proto_ff::CharacterDBActiveInfo* tbRoleInfo::release_playeractiveinfo() {
  clear_has_playeractiveinfo();
  ::proto_ff::CharacterDBActiveInfo* temp = playeractiveinfo_;
  playeractiveinfo_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_playeractiveinfo(::proto_ff::CharacterDBActiveInfo* playeractiveinfo) {
  delete playeractiveinfo_;
  playeractiveinfo_ = playeractiveinfo;
  if (playeractiveinfo) {
    set_has_playeractiveinfo();
  } else {
    clear_has_playeractiveinfo();
  }
}

// optional .proto_ff.CharacterPayData cPayData = 35;
inline bool tbRoleInfo::has_cpaydata() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void tbRoleInfo::set_has_cpaydata() {
  _has_bits_[0] |= 0x00400000u;
}
inline void tbRoleInfo::clear_has_cpaydata() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void tbRoleInfo::clear_cpaydata() {
  if (cpaydata_ != NULL) cpaydata_->::proto_ff::CharacterPayData::Clear();
  clear_has_cpaydata();
}
inline const ::proto_ff::CharacterPayData& tbRoleInfo::cpaydata() const {
  return cpaydata_ != NULL ? *cpaydata_ : *default_instance_->cpaydata_;
}
inline ::proto_ff::CharacterPayData* tbRoleInfo::mutable_cpaydata() {
  set_has_cpaydata();
  if (cpaydata_ == NULL) cpaydata_ = new ::proto_ff::CharacterPayData;
  return cpaydata_;
}
inline ::proto_ff::CharacterPayData* tbRoleInfo::release_cpaydata() {
  clear_has_cpaydata();
  ::proto_ff::CharacterPayData* temp = cpaydata_;
  cpaydata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_cpaydata(::proto_ff::CharacterPayData* cpaydata) {
  delete cpaydata_;
  cpaydata_ = cpaydata;
  if (cpaydata) {
    set_has_cpaydata();
  } else {
    clear_has_cpaydata();
  }
}

// optional .proto_ff.FunctionUnlockInfo unlockInfo = 36;
inline bool tbRoleInfo::has_unlockinfo() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void tbRoleInfo::set_has_unlockinfo() {
  _has_bits_[0] |= 0x00800000u;
}
inline void tbRoleInfo::clear_has_unlockinfo() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void tbRoleInfo::clear_unlockinfo() {
  if (unlockinfo_ != NULL) unlockinfo_->::proto_ff::FunctionUnlockInfo::Clear();
  clear_has_unlockinfo();
}
inline const ::proto_ff::FunctionUnlockInfo& tbRoleInfo::unlockinfo() const {
  return unlockinfo_ != NULL ? *unlockinfo_ : *default_instance_->unlockinfo_;
}
inline ::proto_ff::FunctionUnlockInfo* tbRoleInfo::mutable_unlockinfo() {
  set_has_unlockinfo();
  if (unlockinfo_ == NULL) unlockinfo_ = new ::proto_ff::FunctionUnlockInfo;
  return unlockinfo_;
}
inline ::proto_ff::FunctionUnlockInfo* tbRoleInfo::release_unlockinfo() {
  clear_has_unlockinfo();
  ::proto_ff::FunctionUnlockInfo* temp = unlockinfo_;
  unlockinfo_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_unlockinfo(::proto_ff::FunctionUnlockInfo* unlockinfo) {
  delete unlockinfo_;
  unlockinfo_ = unlockinfo;
  if (unlockinfo) {
    set_has_unlockinfo();
  } else {
    clear_has_unlockinfo();
  }
}

// optional .proto_ff.CharacterDBEmblemData emblemData = 37;
inline bool tbRoleInfo::has_emblemdata() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void tbRoleInfo::set_has_emblemdata() {
  _has_bits_[0] |= 0x01000000u;
}
inline void tbRoleInfo::clear_has_emblemdata() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void tbRoleInfo::clear_emblemdata() {
  if (emblemdata_ != NULL) emblemdata_->::proto_ff::CharacterDBEmblemData::Clear();
  clear_has_emblemdata();
}
inline const ::proto_ff::CharacterDBEmblemData& tbRoleInfo::emblemdata() const {
  return emblemdata_ != NULL ? *emblemdata_ : *default_instance_->emblemdata_;
}
inline ::proto_ff::CharacterDBEmblemData* tbRoleInfo::mutable_emblemdata() {
  set_has_emblemdata();
  if (emblemdata_ == NULL) emblemdata_ = new ::proto_ff::CharacterDBEmblemData;
  return emblemdata_;
}
inline ::proto_ff::CharacterDBEmblemData* tbRoleInfo::release_emblemdata() {
  clear_has_emblemdata();
  ::proto_ff::CharacterDBEmblemData* temp = emblemdata_;
  emblemdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_emblemdata(::proto_ff::CharacterDBEmblemData* emblemdata) {
  delete emblemdata_;
  emblemdata_ = emblemdata;
  if (emblemdata) {
    set_has_emblemdata();
  } else {
    clear_has_emblemdata();
  }
}

// optional .proto_ff.CharacterDBIdentifyData identifyData = 38;
inline bool tbRoleInfo::has_identifydata() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void tbRoleInfo::set_has_identifydata() {
  _has_bits_[0] |= 0x02000000u;
}
inline void tbRoleInfo::clear_has_identifydata() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void tbRoleInfo::clear_identifydata() {
  if (identifydata_ != NULL) identifydata_->::proto_ff::CharacterDBIdentifyData::Clear();
  clear_has_identifydata();
}
inline const ::proto_ff::CharacterDBIdentifyData& tbRoleInfo::identifydata() const {
  return identifydata_ != NULL ? *identifydata_ : *default_instance_->identifydata_;
}
inline ::proto_ff::CharacterDBIdentifyData* tbRoleInfo::mutable_identifydata() {
  set_has_identifydata();
  if (identifydata_ == NULL) identifydata_ = new ::proto_ff::CharacterDBIdentifyData;
  return identifydata_;
}
inline ::proto_ff::CharacterDBIdentifyData* tbRoleInfo::release_identifydata() {
  clear_has_identifydata();
  ::proto_ff::CharacterDBIdentifyData* temp = identifydata_;
  identifydata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_identifydata(::proto_ff::CharacterDBIdentifyData* identifydata) {
  delete identifydata_;
  identifydata_ = identifydata;
  if (identifydata) {
    set_has_identifydata();
  } else {
    clear_has_identifydata();
  }
}

// optional .proto_ff.CharacterDBElementData elementData = 39;
inline bool tbRoleInfo::has_elementdata() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void tbRoleInfo::set_has_elementdata() {
  _has_bits_[0] |= 0x04000000u;
}
inline void tbRoleInfo::clear_has_elementdata() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void tbRoleInfo::clear_elementdata() {
  if (elementdata_ != NULL) elementdata_->::proto_ff::CharacterDBElementData::Clear();
  clear_has_elementdata();
}
inline const ::proto_ff::CharacterDBElementData& tbRoleInfo::elementdata() const {
  return elementdata_ != NULL ? *elementdata_ : *default_instance_->elementdata_;
}
inline ::proto_ff::CharacterDBElementData* tbRoleInfo::mutable_elementdata() {
  set_has_elementdata();
  if (elementdata_ == NULL) elementdata_ = new ::proto_ff::CharacterDBElementData;
  return elementdata_;
}
inline ::proto_ff::CharacterDBElementData* tbRoleInfo::release_elementdata() {
  clear_has_elementdata();
  ::proto_ff::CharacterDBElementData* temp = elementdata_;
  elementdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_elementdata(::proto_ff::CharacterDBElementData* elementdata) {
  delete elementdata_;
  elementdata_ = elementdata;
  if (elementdata) {
    set_has_elementdata();
  } else {
    clear_has_elementdata();
  }
}

// optional .proto_ff.CharacterDBFashionData fashionData = 40;
inline bool tbRoleInfo::has_fashiondata() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void tbRoleInfo::set_has_fashiondata() {
  _has_bits_[0] |= 0x08000000u;
}
inline void tbRoleInfo::clear_has_fashiondata() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void tbRoleInfo::clear_fashiondata() {
  if (fashiondata_ != NULL) fashiondata_->::proto_ff::CharacterDBFashionData::Clear();
  clear_has_fashiondata();
}
inline const ::proto_ff::CharacterDBFashionData& tbRoleInfo::fashiondata() const {
  return fashiondata_ != NULL ? *fashiondata_ : *default_instance_->fashiondata_;
}
inline ::proto_ff::CharacterDBFashionData* tbRoleInfo::mutable_fashiondata() {
  set_has_fashiondata();
  if (fashiondata_ == NULL) fashiondata_ = new ::proto_ff::CharacterDBFashionData;
  return fashiondata_;
}
inline ::proto_ff::CharacterDBFashionData* tbRoleInfo::release_fashiondata() {
  clear_has_fashiondata();
  ::proto_ff::CharacterDBFashionData* temp = fashiondata_;
  fashiondata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_fashiondata(::proto_ff::CharacterDBFashionData* fashiondata) {
  delete fashiondata_;
  fashiondata_ = fashiondata;
  if (fashiondata) {
    set_has_fashiondata();
  } else {
    clear_has_fashiondata();
  }
}

// optional .proto_ff.CharacterDBWingData wingData = 41;
inline bool tbRoleInfo::has_wingdata() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void tbRoleInfo::set_has_wingdata() {
  _has_bits_[0] |= 0x10000000u;
}
inline void tbRoleInfo::clear_has_wingdata() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void tbRoleInfo::clear_wingdata() {
  if (wingdata_ != NULL) wingdata_->::proto_ff::CharacterDBWingData::Clear();
  clear_has_wingdata();
}
inline const ::proto_ff::CharacterDBWingData& tbRoleInfo::wingdata() const {
  return wingdata_ != NULL ? *wingdata_ : *default_instance_->wingdata_;
}
inline ::proto_ff::CharacterDBWingData* tbRoleInfo::mutable_wingdata() {
  set_has_wingdata();
  if (wingdata_ == NULL) wingdata_ = new ::proto_ff::CharacterDBWingData;
  return wingdata_;
}
inline ::proto_ff::CharacterDBWingData* tbRoleInfo::release_wingdata() {
  clear_has_wingdata();
  ::proto_ff::CharacterDBWingData* temp = wingdata_;
  wingdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_wingdata(::proto_ff::CharacterDBWingData* wingdata) {
  delete wingdata_;
  wingdata_ = wingdata;
  if (wingdata) {
    set_has_wingdata();
  } else {
    clear_has_wingdata();
  }
}

// optional .proto_ff.CharacterDBMountData mountData = 42;
inline bool tbRoleInfo::has_mountdata() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void tbRoleInfo::set_has_mountdata() {
  _has_bits_[0] |= 0x20000000u;
}
inline void tbRoleInfo::clear_has_mountdata() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void tbRoleInfo::clear_mountdata() {
  if (mountdata_ != NULL) mountdata_->::proto_ff::CharacterDBMountData::Clear();
  clear_has_mountdata();
}
inline const ::proto_ff::CharacterDBMountData& tbRoleInfo::mountdata() const {
  return mountdata_ != NULL ? *mountdata_ : *default_instance_->mountdata_;
}
inline ::proto_ff::CharacterDBMountData* tbRoleInfo::mutable_mountdata() {
  set_has_mountdata();
  if (mountdata_ == NULL) mountdata_ = new ::proto_ff::CharacterDBMountData;
  return mountdata_;
}
inline ::proto_ff::CharacterDBMountData* tbRoleInfo::release_mountdata() {
  clear_has_mountdata();
  ::proto_ff::CharacterDBMountData* temp = mountdata_;
  mountdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_mountdata(::proto_ff::CharacterDBMountData* mountdata) {
  delete mountdata_;
  mountdata_ = mountdata;
  if (mountdata) {
    set_has_mountdata();
  } else {
    clear_has_mountdata();
  }
}

// optional .proto_ff.CharacterDBBossData bossData = 43;
inline bool tbRoleInfo::has_bossdata() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void tbRoleInfo::set_has_bossdata() {
  _has_bits_[0] |= 0x40000000u;
}
inline void tbRoleInfo::clear_has_bossdata() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void tbRoleInfo::clear_bossdata() {
  if (bossdata_ != NULL) bossdata_->::proto_ff::CharacterDBBossData::Clear();
  clear_has_bossdata();
}
inline const ::proto_ff::CharacterDBBossData& tbRoleInfo::bossdata() const {
  return bossdata_ != NULL ? *bossdata_ : *default_instance_->bossdata_;
}
inline ::proto_ff::CharacterDBBossData* tbRoleInfo::mutable_bossdata() {
  set_has_bossdata();
  if (bossdata_ == NULL) bossdata_ = new ::proto_ff::CharacterDBBossData;
  return bossdata_;
}
inline ::proto_ff::CharacterDBBossData* tbRoleInfo::release_bossdata() {
  clear_has_bossdata();
  ::proto_ff::CharacterDBBossData* temp = bossdata_;
  bossdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_bossdata(::proto_ff::CharacterDBBossData* bossdata) {
  delete bossdata_;
  bossdata_ = bossdata;
  if (bossdata) {
    set_has_bossdata();
  } else {
    clear_has_bossdata();
  }
}

// optional .proto_ff.CharacterDBPvpData pvpData = 44;
inline bool tbRoleInfo::has_pvpdata() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void tbRoleInfo::set_has_pvpdata() {
  _has_bits_[0] |= 0x80000000u;
}
inline void tbRoleInfo::clear_has_pvpdata() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void tbRoleInfo::clear_pvpdata() {
  if (pvpdata_ != NULL) pvpdata_->::proto_ff::CharacterDBPvpData::Clear();
  clear_has_pvpdata();
}
inline const ::proto_ff::CharacterDBPvpData& tbRoleInfo::pvpdata() const {
  return pvpdata_ != NULL ? *pvpdata_ : *default_instance_->pvpdata_;
}
inline ::proto_ff::CharacterDBPvpData* tbRoleInfo::mutable_pvpdata() {
  set_has_pvpdata();
  if (pvpdata_ == NULL) pvpdata_ = new ::proto_ff::CharacterDBPvpData;
  return pvpdata_;
}
inline ::proto_ff::CharacterDBPvpData* tbRoleInfo::release_pvpdata() {
  clear_has_pvpdata();
  ::proto_ff::CharacterDBPvpData* temp = pvpdata_;
  pvpdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_pvpdata(::proto_ff::CharacterDBPvpData* pvpdata) {
  delete pvpdata_;
  pvpdata_ = pvpdata;
  if (pvpdata) {
    set_has_pvpdata();
  } else {
    clear_has_pvpdata();
  }
}

// optional .proto_ff.CharacterDBTreasureData treasure_data = 45;
inline bool tbRoleInfo::has_treasure_data() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void tbRoleInfo::set_has_treasure_data() {
  _has_bits_[1] |= 0x00000001u;
}
inline void tbRoleInfo::clear_has_treasure_data() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void tbRoleInfo::clear_treasure_data() {
  if (treasure_data_ != NULL) treasure_data_->::proto_ff::CharacterDBTreasureData::Clear();
  clear_has_treasure_data();
}
inline const ::proto_ff::CharacterDBTreasureData& tbRoleInfo::treasure_data() const {
  return treasure_data_ != NULL ? *treasure_data_ : *default_instance_->treasure_data_;
}
inline ::proto_ff::CharacterDBTreasureData* tbRoleInfo::mutable_treasure_data() {
  set_has_treasure_data();
  if (treasure_data_ == NULL) treasure_data_ = new ::proto_ff::CharacterDBTreasureData;
  return treasure_data_;
}
inline ::proto_ff::CharacterDBTreasureData* tbRoleInfo::release_treasure_data() {
  clear_has_treasure_data();
  ::proto_ff::CharacterDBTreasureData* temp = treasure_data_;
  treasure_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_treasure_data(::proto_ff::CharacterDBTreasureData* treasure_data) {
  delete treasure_data_;
  treasure_data_ = treasure_data;
  if (treasure_data) {
    set_has_treasure_data();
  } else {
    clear_has_treasure_data();
  }
}

// optional .proto_ff.CharacterDBArtifactData artifact_data = 46;
inline bool tbRoleInfo::has_artifact_data() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void tbRoleInfo::set_has_artifact_data() {
  _has_bits_[1] |= 0x00000002u;
}
inline void tbRoleInfo::clear_has_artifact_data() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void tbRoleInfo::clear_artifact_data() {
  if (artifact_data_ != NULL) artifact_data_->::proto_ff::CharacterDBArtifactData::Clear();
  clear_has_artifact_data();
}
inline const ::proto_ff::CharacterDBArtifactData& tbRoleInfo::artifact_data() const {
  return artifact_data_ != NULL ? *artifact_data_ : *default_instance_->artifact_data_;
}
inline ::proto_ff::CharacterDBArtifactData* tbRoleInfo::mutable_artifact_data() {
  set_has_artifact_data();
  if (artifact_data_ == NULL) artifact_data_ = new ::proto_ff::CharacterDBArtifactData;
  return artifact_data_;
}
inline ::proto_ff::CharacterDBArtifactData* tbRoleInfo::release_artifact_data() {
  clear_has_artifact_data();
  ::proto_ff::CharacterDBArtifactData* temp = artifact_data_;
  artifact_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_artifact_data(::proto_ff::CharacterDBArtifactData* artifact_data) {
  delete artifact_data_;
  artifact_data_ = artifact_data;
  if (artifact_data) {
    set_has_artifact_data();
  } else {
    clear_has_artifact_data();
  }
}

// optional .proto_ff.CharacterDBFateStarData fateStarData = 47;
inline bool tbRoleInfo::has_fatestardata() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void tbRoleInfo::set_has_fatestardata() {
  _has_bits_[1] |= 0x00000004u;
}
inline void tbRoleInfo::clear_has_fatestardata() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void tbRoleInfo::clear_fatestardata() {
  if (fatestardata_ != NULL) fatestardata_->::proto_ff::CharacterDBFateStarData::Clear();
  clear_has_fatestardata();
}
inline const ::proto_ff::CharacterDBFateStarData& tbRoleInfo::fatestardata() const {
  return fatestardata_ != NULL ? *fatestardata_ : *default_instance_->fatestardata_;
}
inline ::proto_ff::CharacterDBFateStarData* tbRoleInfo::mutable_fatestardata() {
  set_has_fatestardata();
  if (fatestardata_ == NULL) fatestardata_ = new ::proto_ff::CharacterDBFateStarData;
  return fatestardata_;
}
inline ::proto_ff::CharacterDBFateStarData* tbRoleInfo::release_fatestardata() {
  clear_has_fatestardata();
  ::proto_ff::CharacterDBFateStarData* temp = fatestardata_;
  fatestardata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_fatestardata(::proto_ff::CharacterDBFateStarData* fatestardata) {
  delete fatestardata_;
  fatestardata_ = fatestardata;
  if (fatestardata) {
    set_has_fatestardata();
  } else {
    clear_has_fatestardata();
  }
}

// optional .proto_ff.CharacterDBConvoyData convoyData = 48;
inline bool tbRoleInfo::has_convoydata() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void tbRoleInfo::set_has_convoydata() {
  _has_bits_[1] |= 0x00000008u;
}
inline void tbRoleInfo::clear_has_convoydata() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void tbRoleInfo::clear_convoydata() {
  if (convoydata_ != NULL) convoydata_->::proto_ff::CharacterDBConvoyData::Clear();
  clear_has_convoydata();
}
inline const ::proto_ff::CharacterDBConvoyData& tbRoleInfo::convoydata() const {
  return convoydata_ != NULL ? *convoydata_ : *default_instance_->convoydata_;
}
inline ::proto_ff::CharacterDBConvoyData* tbRoleInfo::mutable_convoydata() {
  set_has_convoydata();
  if (convoydata_ == NULL) convoydata_ = new ::proto_ff::CharacterDBConvoyData;
  return convoydata_;
}
inline ::proto_ff::CharacterDBConvoyData* tbRoleInfo::release_convoydata() {
  clear_has_convoydata();
  ::proto_ff::CharacterDBConvoyData* temp = convoydata_;
  convoydata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_convoydata(::proto_ff::CharacterDBConvoyData* convoydata) {
  delete convoydata_;
  convoydata_ = convoydata;
  if (convoydata) {
    set_has_convoydata();
  } else {
    clear_has_convoydata();
  }
}

// optional .proto_ff.CharacterDBDailyData daily_data = 49;
inline bool tbRoleInfo::has_daily_data() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void tbRoleInfo::set_has_daily_data() {
  _has_bits_[1] |= 0x00000010u;
}
inline void tbRoleInfo::clear_has_daily_data() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void tbRoleInfo::clear_daily_data() {
  if (daily_data_ != NULL) daily_data_->::proto_ff::CharacterDBDailyData::Clear();
  clear_has_daily_data();
}
inline const ::proto_ff::CharacterDBDailyData& tbRoleInfo::daily_data() const {
  return daily_data_ != NULL ? *daily_data_ : *default_instance_->daily_data_;
}
inline ::proto_ff::CharacterDBDailyData* tbRoleInfo::mutable_daily_data() {
  set_has_daily_data();
  if (daily_data_ == NULL) daily_data_ = new ::proto_ff::CharacterDBDailyData;
  return daily_data_;
}
inline ::proto_ff::CharacterDBDailyData* tbRoleInfo::release_daily_data() {
  clear_has_daily_data();
  ::proto_ff::CharacterDBDailyData* temp = daily_data_;
  daily_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_daily_data(::proto_ff::CharacterDBDailyData* daily_data) {
  delete daily_data_;
  daily_data_ = daily_data;
  if (daily_data) {
    set_has_daily_data();
  } else {
    clear_has_daily_data();
  }
}

// optional .proto_ff.CharacterDBFieldData field_data = 50;
inline bool tbRoleInfo::has_field_data() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void tbRoleInfo::set_has_field_data() {
  _has_bits_[1] |= 0x00000020u;
}
inline void tbRoleInfo::clear_has_field_data() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void tbRoleInfo::clear_field_data() {
  if (field_data_ != NULL) field_data_->::proto_ff::CharacterDBFieldData::Clear();
  clear_has_field_data();
}
inline const ::proto_ff::CharacterDBFieldData& tbRoleInfo::field_data() const {
  return field_data_ != NULL ? *field_data_ : *default_instance_->field_data_;
}
inline ::proto_ff::CharacterDBFieldData* tbRoleInfo::mutable_field_data() {
  set_has_field_data();
  if (field_data_ == NULL) field_data_ = new ::proto_ff::CharacterDBFieldData;
  return field_data_;
}
inline ::proto_ff::CharacterDBFieldData* tbRoleInfo::release_field_data() {
  clear_has_field_data();
  ::proto_ff::CharacterDBFieldData* temp = field_data_;
  field_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_field_data(::proto_ff::CharacterDBFieldData* field_data) {
  delete field_data_;
  field_data_ = field_data;
  if (field_data) {
    set_has_field_data();
  } else {
    clear_has_field_data();
  }
}

// optional .proto_ff.CharacterDBVipData vipData = 51;
inline bool tbRoleInfo::has_vipdata() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void tbRoleInfo::set_has_vipdata() {
  _has_bits_[1] |= 0x00000040u;
}
inline void tbRoleInfo::clear_has_vipdata() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void tbRoleInfo::clear_vipdata() {
  if (vipdata_ != NULL) vipdata_->::proto_ff::CharacterDBVipData::Clear();
  clear_has_vipdata();
}
inline const ::proto_ff::CharacterDBVipData& tbRoleInfo::vipdata() const {
  return vipdata_ != NULL ? *vipdata_ : *default_instance_->vipdata_;
}
inline ::proto_ff::CharacterDBVipData* tbRoleInfo::mutable_vipdata() {
  set_has_vipdata();
  if (vipdata_ == NULL) vipdata_ = new ::proto_ff::CharacterDBVipData;
  return vipdata_;
}
inline ::proto_ff::CharacterDBVipData* tbRoleInfo::release_vipdata() {
  clear_has_vipdata();
  ::proto_ff::CharacterDBVipData* temp = vipdata_;
  vipdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_vipdata(::proto_ff::CharacterDBVipData* vipdata) {
  delete vipdata_;
  vipdata_ = vipdata;
  if (vipdata) {
    set_has_vipdata();
  } else {
    clear_has_vipdata();
  }
}

// optional .proto_ff.CharacterDBPartnerData partnerData = 52;
inline bool tbRoleInfo::has_partnerdata() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void tbRoleInfo::set_has_partnerdata() {
  _has_bits_[1] |= 0x00000080u;
}
inline void tbRoleInfo::clear_has_partnerdata() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void tbRoleInfo::clear_partnerdata() {
  if (partnerdata_ != NULL) partnerdata_->::proto_ff::CharacterDBPartnerData::Clear();
  clear_has_partnerdata();
}
inline const ::proto_ff::CharacterDBPartnerData& tbRoleInfo::partnerdata() const {
  return partnerdata_ != NULL ? *partnerdata_ : *default_instance_->partnerdata_;
}
inline ::proto_ff::CharacterDBPartnerData* tbRoleInfo::mutable_partnerdata() {
  set_has_partnerdata();
  if (partnerdata_ == NULL) partnerdata_ = new ::proto_ff::CharacterDBPartnerData;
  return partnerdata_;
}
inline ::proto_ff::CharacterDBPartnerData* tbRoleInfo::release_partnerdata() {
  clear_has_partnerdata();
  ::proto_ff::CharacterDBPartnerData* temp = partnerdata_;
  partnerdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_partnerdata(::proto_ff::CharacterDBPartnerData* partnerdata) {
  delete partnerdata_;
  partnerdata_ = partnerdata;
  if (partnerdata) {
    set_has_partnerdata();
  } else {
    clear_has_partnerdata();
  }
}

// optional .proto_ff.CharacterDBMallData mallData = 53;
inline bool tbRoleInfo::has_malldata() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void tbRoleInfo::set_has_malldata() {
  _has_bits_[1] |= 0x00000100u;
}
inline void tbRoleInfo::clear_has_malldata() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void tbRoleInfo::clear_malldata() {
  if (malldata_ != NULL) malldata_->::proto_ff::CharacterDBMallData::Clear();
  clear_has_malldata();
}
inline const ::proto_ff::CharacterDBMallData& tbRoleInfo::malldata() const {
  return malldata_ != NULL ? *malldata_ : *default_instance_->malldata_;
}
inline ::proto_ff::CharacterDBMallData* tbRoleInfo::mutable_malldata() {
  set_has_malldata();
  if (malldata_ == NULL) malldata_ = new ::proto_ff::CharacterDBMallData;
  return malldata_;
}
inline ::proto_ff::CharacterDBMallData* tbRoleInfo::release_malldata() {
  clear_has_malldata();
  ::proto_ff::CharacterDBMallData* temp = malldata_;
  malldata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_malldata(::proto_ff::CharacterDBMallData* malldata) {
  delete malldata_;
  malldata_ = malldata;
  if (malldata) {
    set_has_malldata();
  } else {
    clear_has_malldata();
  }
}

// optional .proto_ff.CharacterDBGodhoodData godhoodData = 54;
inline bool tbRoleInfo::has_godhooddata() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void tbRoleInfo::set_has_godhooddata() {
  _has_bits_[1] |= 0x00000200u;
}
inline void tbRoleInfo::clear_has_godhooddata() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void tbRoleInfo::clear_godhooddata() {
  if (godhooddata_ != NULL) godhooddata_->::proto_ff::CharacterDBGodhoodData::Clear();
  clear_has_godhooddata();
}
inline const ::proto_ff::CharacterDBGodhoodData& tbRoleInfo::godhooddata() const {
  return godhooddata_ != NULL ? *godhooddata_ : *default_instance_->godhooddata_;
}
inline ::proto_ff::CharacterDBGodhoodData* tbRoleInfo::mutable_godhooddata() {
  set_has_godhooddata();
  if (godhooddata_ == NULL) godhooddata_ = new ::proto_ff::CharacterDBGodhoodData;
  return godhooddata_;
}
inline ::proto_ff::CharacterDBGodhoodData* tbRoleInfo::release_godhooddata() {
  clear_has_godhooddata();
  ::proto_ff::CharacterDBGodhoodData* temp = godhooddata_;
  godhooddata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_godhooddata(::proto_ff::CharacterDBGodhoodData* godhooddata) {
  delete godhooddata_;
  godhooddata_ = godhooddata;
  if (godhooddata) {
    set_has_godhooddata();
  } else {
    clear_has_godhooddata();
  }
}

// optional .proto_ff.CharacterDBRecoveryData recoveryData = 55;
inline bool tbRoleInfo::has_recoverydata() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void tbRoleInfo::set_has_recoverydata() {
  _has_bits_[1] |= 0x00000400u;
}
inline void tbRoleInfo::clear_has_recoverydata() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void tbRoleInfo::clear_recoverydata() {
  if (recoverydata_ != NULL) recoverydata_->::proto_ff::CharacterDBRecoveryData::Clear();
  clear_has_recoverydata();
}
inline const ::proto_ff::CharacterDBRecoveryData& tbRoleInfo::recoverydata() const {
  return recoverydata_ != NULL ? *recoverydata_ : *default_instance_->recoverydata_;
}
inline ::proto_ff::CharacterDBRecoveryData* tbRoleInfo::mutable_recoverydata() {
  set_has_recoverydata();
  if (recoverydata_ == NULL) recoverydata_ = new ::proto_ff::CharacterDBRecoveryData;
  return recoverydata_;
}
inline ::proto_ff::CharacterDBRecoveryData* tbRoleInfo::release_recoverydata() {
  clear_has_recoverydata();
  ::proto_ff::CharacterDBRecoveryData* temp = recoverydata_;
  recoverydata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_recoverydata(::proto_ff::CharacterDBRecoveryData* recoverydata) {
  delete recoverydata_;
  recoverydata_ = recoverydata;
  if (recoverydata) {
    set_has_recoverydata();
  } else {
    clear_has_recoverydata();
  }
}

// optional .proto_ff.CharacterDBActivityData activityData = 56;
inline bool tbRoleInfo::has_activitydata() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void tbRoleInfo::set_has_activitydata() {
  _has_bits_[1] |= 0x00000800u;
}
inline void tbRoleInfo::clear_has_activitydata() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void tbRoleInfo::clear_activitydata() {
  if (activitydata_ != NULL) activitydata_->::proto_ff::CharacterDBActivityData::Clear();
  clear_has_activitydata();
}
inline const ::proto_ff::CharacterDBActivityData& tbRoleInfo::activitydata() const {
  return activitydata_ != NULL ? *activitydata_ : *default_instance_->activitydata_;
}
inline ::proto_ff::CharacterDBActivityData* tbRoleInfo::mutable_activitydata() {
  set_has_activitydata();
  if (activitydata_ == NULL) activitydata_ = new ::proto_ff::CharacterDBActivityData;
  return activitydata_;
}
inline ::proto_ff::CharacterDBActivityData* tbRoleInfo::release_activitydata() {
  clear_has_activitydata();
  ::proto_ff::CharacterDBActivityData* temp = activitydata_;
  activitydata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_activitydata(::proto_ff::CharacterDBActivityData* activitydata) {
  delete activitydata_;
  activitydata_ = activitydata;
  if (activitydata) {
    set_has_activitydata();
  } else {
    clear_has_activitydata();
  }
}

// optional .proto_ff.CharacterDBSOAcitveData soActivityData = 57;
inline bool tbRoleInfo::has_soactivitydata() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void tbRoleInfo::set_has_soactivitydata() {
  _has_bits_[1] |= 0x00001000u;
}
inline void tbRoleInfo::clear_has_soactivitydata() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void tbRoleInfo::clear_soactivitydata() {
  if (soactivitydata_ != NULL) soactivitydata_->::proto_ff::CharacterDBSOAcitveData::Clear();
  clear_has_soactivitydata();
}
inline const ::proto_ff::CharacterDBSOAcitveData& tbRoleInfo::soactivitydata() const {
  return soactivitydata_ != NULL ? *soactivitydata_ : *default_instance_->soactivitydata_;
}
inline ::proto_ff::CharacterDBSOAcitveData* tbRoleInfo::mutable_soactivitydata() {
  set_has_soactivitydata();
  if (soactivitydata_ == NULL) soactivitydata_ = new ::proto_ff::CharacterDBSOAcitveData;
  return soactivitydata_;
}
inline ::proto_ff::CharacterDBSOAcitveData* tbRoleInfo::release_soactivitydata() {
  clear_has_soactivitydata();
  ::proto_ff::CharacterDBSOAcitveData* temp = soactivitydata_;
  soactivitydata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_soactivitydata(::proto_ff::CharacterDBSOAcitveData* soactivitydata) {
  delete soactivitydata_;
  soactivitydata_ = soactivitydata;
  if (soactivitydata) {
    set_has_soactivitydata();
  } else {
    clear_has_soactivitydata();
  }
}

// optional .proto_ff.CharacterDBUseItemData useitemData = 58;
inline bool tbRoleInfo::has_useitemdata() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void tbRoleInfo::set_has_useitemdata() {
  _has_bits_[1] |= 0x00002000u;
}
inline void tbRoleInfo::clear_has_useitemdata() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void tbRoleInfo::clear_useitemdata() {
  if (useitemdata_ != NULL) useitemdata_->::proto_ff::CharacterDBUseItemData::Clear();
  clear_has_useitemdata();
}
inline const ::proto_ff::CharacterDBUseItemData& tbRoleInfo::useitemdata() const {
  return useitemdata_ != NULL ? *useitemdata_ : *default_instance_->useitemdata_;
}
inline ::proto_ff::CharacterDBUseItemData* tbRoleInfo::mutable_useitemdata() {
  set_has_useitemdata();
  if (useitemdata_ == NULL) useitemdata_ = new ::proto_ff::CharacterDBUseItemData;
  return useitemdata_;
}
inline ::proto_ff::CharacterDBUseItemData* tbRoleInfo::release_useitemdata() {
  clear_has_useitemdata();
  ::proto_ff::CharacterDBUseItemData* temp = useitemdata_;
  useitemdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_useitemdata(::proto_ff::CharacterDBUseItemData* useitemdata) {
  delete useitemdata_;
  useitemdata_ = useitemdata;
  if (useitemdata) {
    set_has_useitemdata();
  } else {
    clear_has_useitemdata();
  }
}

// optional .proto_ff.CharacterDBDayUseItemData dayUseItemData = 59;
inline bool tbRoleInfo::has_dayuseitemdata() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void tbRoleInfo::set_has_dayuseitemdata() {
  _has_bits_[1] |= 0x00004000u;
}
inline void tbRoleInfo::clear_has_dayuseitemdata() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void tbRoleInfo::clear_dayuseitemdata() {
  if (dayuseitemdata_ != NULL) dayuseitemdata_->::proto_ff::CharacterDBDayUseItemData::Clear();
  clear_has_dayuseitemdata();
}
inline const ::proto_ff::CharacterDBDayUseItemData& tbRoleInfo::dayuseitemdata() const {
  return dayuseitemdata_ != NULL ? *dayuseitemdata_ : *default_instance_->dayuseitemdata_;
}
inline ::proto_ff::CharacterDBDayUseItemData* tbRoleInfo::mutable_dayuseitemdata() {
  set_has_dayuseitemdata();
  if (dayuseitemdata_ == NULL) dayuseitemdata_ = new ::proto_ff::CharacterDBDayUseItemData;
  return dayuseitemdata_;
}
inline ::proto_ff::CharacterDBDayUseItemData* tbRoleInfo::release_dayuseitemdata() {
  clear_has_dayuseitemdata();
  ::proto_ff::CharacterDBDayUseItemData* temp = dayuseitemdata_;
  dayuseitemdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_dayuseitemdata(::proto_ff::CharacterDBDayUseItemData* dayuseitemdata) {
  delete dayuseitemdata_;
  dayuseitemdata_ = dayuseitemdata;
  if (dayuseitemdata) {
    set_has_dayuseitemdata();
  } else {
    clear_has_dayuseitemdata();
  }
}

// optional .proto_ff.CharacterDBMysteryShopData mysteryshop_data = 60;
inline bool tbRoleInfo::has_mysteryshop_data() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void tbRoleInfo::set_has_mysteryshop_data() {
  _has_bits_[1] |= 0x00008000u;
}
inline void tbRoleInfo::clear_has_mysteryshop_data() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void tbRoleInfo::clear_mysteryshop_data() {
  if (mysteryshop_data_ != NULL) mysteryshop_data_->::proto_ff::CharacterDBMysteryShopData::Clear();
  clear_has_mysteryshop_data();
}
inline const ::proto_ff::CharacterDBMysteryShopData& tbRoleInfo::mysteryshop_data() const {
  return mysteryshop_data_ != NULL ? *mysteryshop_data_ : *default_instance_->mysteryshop_data_;
}
inline ::proto_ff::CharacterDBMysteryShopData* tbRoleInfo::mutable_mysteryshop_data() {
  set_has_mysteryshop_data();
  if (mysteryshop_data_ == NULL) mysteryshop_data_ = new ::proto_ff::CharacterDBMysteryShopData;
  return mysteryshop_data_;
}
inline ::proto_ff::CharacterDBMysteryShopData* tbRoleInfo::release_mysteryshop_data() {
  clear_has_mysteryshop_data();
  ::proto_ff::CharacterDBMysteryShopData* temp = mysteryshop_data_;
  mysteryshop_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_mysteryshop_data(::proto_ff::CharacterDBMysteryShopData* mysteryshop_data) {
  delete mysteryshop_data_;
  mysteryshop_data_ = mysteryshop_data;
  if (mysteryshop_data) {
    set_has_mysteryshop_data();
  } else {
    clear_has_mysteryshop_data();
  }
}

// optional .proto_ff.CharacterDBPackageTestRebateData packagetestrebate_data = 61;
inline bool tbRoleInfo::has_packagetestrebate_data() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void tbRoleInfo::set_has_packagetestrebate_data() {
  _has_bits_[1] |= 0x00010000u;
}
inline void tbRoleInfo::clear_has_packagetestrebate_data() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void tbRoleInfo::clear_packagetestrebate_data() {
  if (packagetestrebate_data_ != NULL) packagetestrebate_data_->::proto_ff::CharacterDBPackageTestRebateData::Clear();
  clear_has_packagetestrebate_data();
}
inline const ::proto_ff::CharacterDBPackageTestRebateData& tbRoleInfo::packagetestrebate_data() const {
  return packagetestrebate_data_ != NULL ? *packagetestrebate_data_ : *default_instance_->packagetestrebate_data_;
}
inline ::proto_ff::CharacterDBPackageTestRebateData* tbRoleInfo::mutable_packagetestrebate_data() {
  set_has_packagetestrebate_data();
  if (packagetestrebate_data_ == NULL) packagetestrebate_data_ = new ::proto_ff::CharacterDBPackageTestRebateData;
  return packagetestrebate_data_;
}
inline ::proto_ff::CharacterDBPackageTestRebateData* tbRoleInfo::release_packagetestrebate_data() {
  clear_has_packagetestrebate_data();
  ::proto_ff::CharacterDBPackageTestRebateData* temp = packagetestrebate_data_;
  packagetestrebate_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_packagetestrebate_data(::proto_ff::CharacterDBPackageTestRebateData* packagetestrebate_data) {
  delete packagetestrebate_data_;
  packagetestrebate_data_ = packagetestrebate_data;
  if (packagetestrebate_data) {
    set_has_packagetestrebate_data();
  } else {
    clear_has_packagetestrebate_data();
  }
}

// optional .proto_ff.FuncFightDBData fight_data = 62;
inline bool tbRoleInfo::has_fight_data() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void tbRoleInfo::set_has_fight_data() {
  _has_bits_[1] |= 0x00020000u;
}
inline void tbRoleInfo::clear_has_fight_data() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void tbRoleInfo::clear_fight_data() {
  if (fight_data_ != NULL) fight_data_->::proto_ff::FuncFightDBData::Clear();
  clear_has_fight_data();
}
inline const ::proto_ff::FuncFightDBData& tbRoleInfo::fight_data() const {
  return fight_data_ != NULL ? *fight_data_ : *default_instance_->fight_data_;
}
inline ::proto_ff::FuncFightDBData* tbRoleInfo::mutable_fight_data() {
  set_has_fight_data();
  if (fight_data_ == NULL) fight_data_ = new ::proto_ff::FuncFightDBData;
  return fight_data_;
}
inline ::proto_ff::FuncFightDBData* tbRoleInfo::release_fight_data() {
  clear_has_fight_data();
  ::proto_ff::FuncFightDBData* temp = fight_data_;
  fight_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_fight_data(::proto_ff::FuncFightDBData* fight_data) {
  delete fight_data_;
  fight_data_ = fight_data;
  if (fight_data) {
    set_has_fight_data();
  } else {
    clear_has_fight_data();
  }
}

// optional .proto_ff.PowerInfoDBList power_data = 63;
inline bool tbRoleInfo::has_power_data() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void tbRoleInfo::set_has_power_data() {
  _has_bits_[1] |= 0x00040000u;
}
inline void tbRoleInfo::clear_has_power_data() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void tbRoleInfo::clear_power_data() {
  if (power_data_ != NULL) power_data_->::proto_ff::PowerInfoDBList::Clear();
  clear_has_power_data();
}
inline const ::proto_ff::PowerInfoDBList& tbRoleInfo::power_data() const {
  return power_data_ != NULL ? *power_data_ : *default_instance_->power_data_;
}
inline ::proto_ff::PowerInfoDBList* tbRoleInfo::mutable_power_data() {
  set_has_power_data();
  if (power_data_ == NULL) power_data_ = new ::proto_ff::PowerInfoDBList;
  return power_data_;
}
inline ::proto_ff::PowerInfoDBList* tbRoleInfo::release_power_data() {
  clear_has_power_data();
  ::proto_ff::PowerInfoDBList* temp = power_data_;
  power_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_power_data(::proto_ff::PowerInfoDBList* power_data) {
  delete power_data_;
  power_data_ = power_data;
  if (power_data) {
    set_has_power_data();
  } else {
    clear_has_power_data();
  }
}

// optional .proto_ff.OccupationTakeList occupation_data = 64;
inline bool tbRoleInfo::has_occupation_data() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void tbRoleInfo::set_has_occupation_data() {
  _has_bits_[1] |= 0x00080000u;
}
inline void tbRoleInfo::clear_has_occupation_data() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void tbRoleInfo::clear_occupation_data() {
  if (occupation_data_ != NULL) occupation_data_->::proto_ff::OccupationTakeList::Clear();
  clear_has_occupation_data();
}
inline const ::proto_ff::OccupationTakeList& tbRoleInfo::occupation_data() const {
  return occupation_data_ != NULL ? *occupation_data_ : *default_instance_->occupation_data_;
}
inline ::proto_ff::OccupationTakeList* tbRoleInfo::mutable_occupation_data() {
  set_has_occupation_data();
  if (occupation_data_ == NULL) occupation_data_ = new ::proto_ff::OccupationTakeList;
  return occupation_data_;
}
inline ::proto_ff::OccupationTakeList* tbRoleInfo::release_occupation_data() {
  clear_has_occupation_data();
  ::proto_ff::OccupationTakeList* temp = occupation_data_;
  occupation_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_occupation_data(::proto_ff::OccupationTakeList* occupation_data) {
  delete occupation_data_;
  occupation_data_ = occupation_data;
  if (occupation_data) {
    set_has_occupation_data();
  } else {
    clear_has_occupation_data();
  }
}

// optional .proto_ff.CharacterDBHeadSetData headset_data = 65;
inline bool tbRoleInfo::has_headset_data() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void tbRoleInfo::set_has_headset_data() {
  _has_bits_[1] |= 0x00100000u;
}
inline void tbRoleInfo::clear_has_headset_data() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void tbRoleInfo::clear_headset_data() {
  if (headset_data_ != NULL) headset_data_->::proto_ff::CharacterDBHeadSetData::Clear();
  clear_has_headset_data();
}
inline const ::proto_ff::CharacterDBHeadSetData& tbRoleInfo::headset_data() const {
  return headset_data_ != NULL ? *headset_data_ : *default_instance_->headset_data_;
}
inline ::proto_ff::CharacterDBHeadSetData* tbRoleInfo::mutable_headset_data() {
  set_has_headset_data();
  if (headset_data_ == NULL) headset_data_ = new ::proto_ff::CharacterDBHeadSetData;
  return headset_data_;
}
inline ::proto_ff::CharacterDBHeadSetData* tbRoleInfo::release_headset_data() {
  clear_has_headset_data();
  ::proto_ff::CharacterDBHeadSetData* temp = headset_data_;
  headset_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_headset_data(::proto_ff::CharacterDBHeadSetData* headset_data) {
  delete headset_data_;
  headset_data_ = headset_data;
  if (headset_data) {
    set_has_headset_data();
  } else {
    clear_has_headset_data();
  }
}

// optional .proto_ff.CharacterDBOnlineGiftData online_gift_data = 66;
inline bool tbRoleInfo::has_online_gift_data() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void tbRoleInfo::set_has_online_gift_data() {
  _has_bits_[1] |= 0x00200000u;
}
inline void tbRoleInfo::clear_has_online_gift_data() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void tbRoleInfo::clear_online_gift_data() {
  if (online_gift_data_ != NULL) online_gift_data_->::proto_ff::CharacterDBOnlineGiftData::Clear();
  clear_has_online_gift_data();
}
inline const ::proto_ff::CharacterDBOnlineGiftData& tbRoleInfo::online_gift_data() const {
  return online_gift_data_ != NULL ? *online_gift_data_ : *default_instance_->online_gift_data_;
}
inline ::proto_ff::CharacterDBOnlineGiftData* tbRoleInfo::mutable_online_gift_data() {
  set_has_online_gift_data();
  if (online_gift_data_ == NULL) online_gift_data_ = new ::proto_ff::CharacterDBOnlineGiftData;
  return online_gift_data_;
}
inline ::proto_ff::CharacterDBOnlineGiftData* tbRoleInfo::release_online_gift_data() {
  clear_has_online_gift_data();
  ::proto_ff::CharacterDBOnlineGiftData* temp = online_gift_data_;
  online_gift_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_online_gift_data(::proto_ff::CharacterDBOnlineGiftData* online_gift_data) {
  delete online_gift_data_;
  online_gift_data_ = online_gift_data;
  if (online_gift_data) {
    set_has_online_gift_data();
  } else {
    clear_has_online_gift_data();
  }
}

// optional .proto_ff.CharDropLimitDBData droplimit_data = 67;
inline bool tbRoleInfo::has_droplimit_data() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void tbRoleInfo::set_has_droplimit_data() {
  _has_bits_[1] |= 0x00400000u;
}
inline void tbRoleInfo::clear_has_droplimit_data() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void tbRoleInfo::clear_droplimit_data() {
  if (droplimit_data_ != NULL) droplimit_data_->::proto_ff::CharDropLimitDBData::Clear();
  clear_has_droplimit_data();
}
inline const ::proto_ff::CharDropLimitDBData& tbRoleInfo::droplimit_data() const {
  return droplimit_data_ != NULL ? *droplimit_data_ : *default_instance_->droplimit_data_;
}
inline ::proto_ff::CharDropLimitDBData* tbRoleInfo::mutable_droplimit_data() {
  set_has_droplimit_data();
  if (droplimit_data_ == NULL) droplimit_data_ = new ::proto_ff::CharDropLimitDBData;
  return droplimit_data_;
}
inline ::proto_ff::CharDropLimitDBData* tbRoleInfo::release_droplimit_data() {
  clear_has_droplimit_data();
  ::proto_ff::CharDropLimitDBData* temp = droplimit_data_;
  droplimit_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_droplimit_data(::proto_ff::CharDropLimitDBData* droplimit_data) {
  delete droplimit_data_;
  droplimit_data_ = droplimit_data;
  if (droplimit_data) {
    set_has_droplimit_data();
  } else {
    clear_has_droplimit_data();
  }
}

// optional .proto_ff.CharacterDBGmHelpData gmhelp_data = 68;
inline bool tbRoleInfo::has_gmhelp_data() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void tbRoleInfo::set_has_gmhelp_data() {
  _has_bits_[1] |= 0x00800000u;
}
inline void tbRoleInfo::clear_has_gmhelp_data() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void tbRoleInfo::clear_gmhelp_data() {
  if (gmhelp_data_ != NULL) gmhelp_data_->::proto_ff::CharacterDBGmHelpData::Clear();
  clear_has_gmhelp_data();
}
inline const ::proto_ff::CharacterDBGmHelpData& tbRoleInfo::gmhelp_data() const {
  return gmhelp_data_ != NULL ? *gmhelp_data_ : *default_instance_->gmhelp_data_;
}
inline ::proto_ff::CharacterDBGmHelpData* tbRoleInfo::mutable_gmhelp_data() {
  set_has_gmhelp_data();
  if (gmhelp_data_ == NULL) gmhelp_data_ = new ::proto_ff::CharacterDBGmHelpData;
  return gmhelp_data_;
}
inline ::proto_ff::CharacterDBGmHelpData* tbRoleInfo::release_gmhelp_data() {
  clear_has_gmhelp_data();
  ::proto_ff::CharacterDBGmHelpData* temp = gmhelp_data_;
  gmhelp_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_gmhelp_data(::proto_ff::CharacterDBGmHelpData* gmhelp_data) {
  delete gmhelp_data_;
  gmhelp_data_ = gmhelp_data;
  if (gmhelp_data) {
    set_has_gmhelp_data();
  } else {
    clear_has_gmhelp_data();
  }
}

// optional .proto_ff.CharacterDBGodGMData godgm_data = 69;
inline bool tbRoleInfo::has_godgm_data() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void tbRoleInfo::set_has_godgm_data() {
  _has_bits_[1] |= 0x01000000u;
}
inline void tbRoleInfo::clear_has_godgm_data() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void tbRoleInfo::clear_godgm_data() {
  if (godgm_data_ != NULL) godgm_data_->::proto_ff::CharacterDBGodGMData::Clear();
  clear_has_godgm_data();
}
inline const ::proto_ff::CharacterDBGodGMData& tbRoleInfo::godgm_data() const {
  return godgm_data_ != NULL ? *godgm_data_ : *default_instance_->godgm_data_;
}
inline ::proto_ff::CharacterDBGodGMData* tbRoleInfo::mutable_godgm_data() {
  set_has_godgm_data();
  if (godgm_data_ == NULL) godgm_data_ = new ::proto_ff::CharacterDBGodGMData;
  return godgm_data_;
}
inline ::proto_ff::CharacterDBGodGMData* tbRoleInfo::release_godgm_data() {
  clear_has_godgm_data();
  ::proto_ff::CharacterDBGodGMData* temp = godgm_data_;
  godgm_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_godgm_data(::proto_ff::CharacterDBGodGMData* godgm_data) {
  delete godgm_data_;
  godgm_data_ = godgm_data;
  if (godgm_data) {
    set_has_godgm_data();
  } else {
    clear_has_godgm_data();
  }
}

// optional .proto_ff.BowlDBData bowl_data = 70;
inline bool tbRoleInfo::has_bowl_data() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void tbRoleInfo::set_has_bowl_data() {
  _has_bits_[1] |= 0x02000000u;
}
inline void tbRoleInfo::clear_has_bowl_data() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void tbRoleInfo::clear_bowl_data() {
  if (bowl_data_ != NULL) bowl_data_->::proto_ff::BowlDBData::Clear();
  clear_has_bowl_data();
}
inline const ::proto_ff::BowlDBData& tbRoleInfo::bowl_data() const {
  return bowl_data_ != NULL ? *bowl_data_ : *default_instance_->bowl_data_;
}
inline ::proto_ff::BowlDBData* tbRoleInfo::mutable_bowl_data() {
  set_has_bowl_data();
  if (bowl_data_ == NULL) bowl_data_ = new ::proto_ff::BowlDBData;
  return bowl_data_;
}
inline ::proto_ff::BowlDBData* tbRoleInfo::release_bowl_data() {
  clear_has_bowl_data();
  ::proto_ff::BowlDBData* temp = bowl_data_;
  bowl_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_bowl_data(::proto_ff::BowlDBData* bowl_data) {
  delete bowl_data_;
  bowl_data_ = bowl_data;
  if (bowl_data) {
    set_has_bowl_data();
  } else {
    clear_has_bowl_data();
  }
}

// optional .proto_ff.CharacterDBPackageData bagitemData = 71;
inline bool tbRoleInfo::has_bagitemdata() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void tbRoleInfo::set_has_bagitemdata() {
  _has_bits_[1] |= 0x04000000u;
}
inline void tbRoleInfo::clear_has_bagitemdata() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void tbRoleInfo::clear_bagitemdata() {
  if (bagitemdata_ != NULL) bagitemdata_->::proto_ff::CharacterDBPackageData::Clear();
  clear_has_bagitemdata();
}
inline const ::proto_ff::CharacterDBPackageData& tbRoleInfo::bagitemdata() const {
  return bagitemdata_ != NULL ? *bagitemdata_ : *default_instance_->bagitemdata_;
}
inline ::proto_ff::CharacterDBPackageData* tbRoleInfo::mutable_bagitemdata() {
  set_has_bagitemdata();
  if (bagitemdata_ == NULL) bagitemdata_ = new ::proto_ff::CharacterDBPackageData;
  return bagitemdata_;
}
inline ::proto_ff::CharacterDBPackageData* tbRoleInfo::release_bagitemdata() {
  clear_has_bagitemdata();
  ::proto_ff::CharacterDBPackageData* temp = bagitemdata_;
  bagitemdata_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_bagitemdata(::proto_ff::CharacterDBPackageData* bagitemdata) {
  delete bagitemdata_;
  bagitemdata_ = bagitemdata;
  if (bagitemdata) {
    set_has_bagitemdata();
  } else {
    clear_has_bagitemdata();
  }
}

// optional .proto_ff.CharacterDBHideData hide_data = 72;
inline bool tbRoleInfo::has_hide_data() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void tbRoleInfo::set_has_hide_data() {
  _has_bits_[1] |= 0x08000000u;
}
inline void tbRoleInfo::clear_has_hide_data() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void tbRoleInfo::clear_hide_data() {
  if (hide_data_ != NULL) hide_data_->::proto_ff::CharacterDBHideData::Clear();
  clear_has_hide_data();
}
inline const ::proto_ff::CharacterDBHideData& tbRoleInfo::hide_data() const {
  return hide_data_ != NULL ? *hide_data_ : *default_instance_->hide_data_;
}
inline ::proto_ff::CharacterDBHideData* tbRoleInfo::mutable_hide_data() {
  set_has_hide_data();
  if (hide_data_ == NULL) hide_data_ = new ::proto_ff::CharacterDBHideData;
  return hide_data_;
}
inline ::proto_ff::CharacterDBHideData* tbRoleInfo::release_hide_data() {
  clear_has_hide_data();
  ::proto_ff::CharacterDBHideData* temp = hide_data_;
  hide_data_ = NULL;
  return temp;
}
inline void tbRoleInfo::set_allocated_hide_data(::proto_ff::CharacterDBHideData* hide_data) {
  delete hide_data_;
  hide_data_ = hide_data;
  if (hide_data) {
    set_has_hide_data();
  } else {
    clear_has_hide_data();
  }
}

// -------------------------------------------------------------------

// CharacterDBSimpleInfo

// optional uint64 charId = 1;
inline bool CharacterDBSimpleInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterDBSimpleInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterDBSimpleInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::charid() const {
  return charid_;
}
inline void CharacterDBSimpleInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 2;
inline bool CharacterDBSimpleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterDBSimpleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterDBSimpleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CharacterDBSimpleInfo::name() const {
  return *name_;
}
inline void CharacterDBSimpleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharacterDBSimpleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharacterDBSimpleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterDBSimpleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CharacterDBSimpleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterDBSimpleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 sex = 3;
inline bool CharacterDBSimpleInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterDBSimpleInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterDBSimpleInfo::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 CharacterDBSimpleInfo::sex() const {
  return sex_;
}
inline void CharacterDBSimpleInfo::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// optional uint32 prof = 4;
inline bool CharacterDBSimpleInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterDBSimpleInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterDBSimpleInfo::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 CharacterDBSimpleInfo::prof() const {
  return prof_;
}
inline void CharacterDBSimpleInfo::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 5;
inline bool CharacterDBSimpleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterDBSimpleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterDBSimpleInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CharacterDBSimpleInfo::level() const {
  return level_;
}
inline void CharacterDBSimpleInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int64 exp = 6;
inline bool CharacterDBSimpleInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterDBSimpleInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterDBSimpleInfo::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 CharacterDBSimpleInfo::exp() const {
  return exp_;
}
inline void CharacterDBSimpleInfo::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint64 hp = 7;
inline bool CharacterDBSimpleInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharacterDBSimpleInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharacterDBSimpleInfo::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::hp() const {
  return hp_;
}
inline void CharacterDBSimpleInfo::set_hp(::google::protobuf::uint64 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint64 fightPower = 8;
inline bool CharacterDBSimpleInfo::has_fightpower() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_fightpower() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterDBSimpleInfo::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterDBSimpleInfo::clear_fightpower() {
  fightpower_ = GOOGLE_ULONGLONG(0);
  clear_has_fightpower();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::fightpower() const {
  return fightpower_;
}
inline void CharacterDBSimpleInfo::set_fightpower(::google::protobuf::uint64 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint64 enter_scene_id = 9;
inline bool CharacterDBSimpleInfo::has_enter_scene_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_enter_scene_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterDBSimpleInfo::clear_has_enter_scene_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterDBSimpleInfo::clear_enter_scene_id() {
  enter_scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_scene_id();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::enter_scene_id() const {
  return enter_scene_id_;
}
inline void CharacterDBSimpleInfo::set_enter_scene_id(::google::protobuf::uint64 value) {
  set_has_enter_scene_id();
  enter_scene_id_ = value;
}

// optional uint64 enter_map_id = 10;
inline bool CharacterDBSimpleInfo::has_enter_map_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_enter_map_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterDBSimpleInfo::clear_has_enter_map_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterDBSimpleInfo::clear_enter_map_id() {
  enter_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_map_id();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::enter_map_id() const {
  return enter_map_id_;
}
inline void CharacterDBSimpleInfo::set_enter_map_id(::google::protobuf::uint64 value) {
  set_has_enter_map_id();
  enter_map_id_ = value;
}

// optional float enterPosX = 11;
inline bool CharacterDBSimpleInfo::has_enterposx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_enterposx() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterDBSimpleInfo::clear_has_enterposx() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterDBSimpleInfo::clear_enterposx() {
  enterposx_ = 0;
  clear_has_enterposx();
}
inline float CharacterDBSimpleInfo::enterposx() const {
  return enterposx_;
}
inline void CharacterDBSimpleInfo::set_enterposx(float value) {
  set_has_enterposx();
  enterposx_ = value;
}

// optional float enterPosY = 12;
inline bool CharacterDBSimpleInfo::has_enterposy() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_enterposy() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterDBSimpleInfo::clear_has_enterposy() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterDBSimpleInfo::clear_enterposy() {
  enterposy_ = 0;
  clear_has_enterposy();
}
inline float CharacterDBSimpleInfo::enterposy() const {
  return enterposy_;
}
inline void CharacterDBSimpleInfo::set_enterposy(float value) {
  set_has_enterposy();
  enterposy_ = value;
}

// optional float enterPosZ = 13;
inline bool CharacterDBSimpleInfo::has_enterposz() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_enterposz() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterDBSimpleInfo::clear_has_enterposz() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterDBSimpleInfo::clear_enterposz() {
  enterposz_ = 0;
  clear_has_enterposz();
}
inline float CharacterDBSimpleInfo::enterposz() const {
  return enterposz_;
}
inline void CharacterDBSimpleInfo::set_enterposz(float value) {
  set_has_enterposz();
  enterposz_ = value;
}

// optional uint64 lastSceneId = 14;
inline bool CharacterDBSimpleInfo::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterDBSimpleInfo::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterDBSimpleInfo::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::lastsceneid() const {
  return lastsceneid_;
}
inline void CharacterDBSimpleInfo::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastMapId = 15;
inline bool CharacterDBSimpleInfo::has_lastmapid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_lastmapid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharacterDBSimpleInfo::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharacterDBSimpleInfo::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::lastmapid() const {
  return lastmapid_;
}
inline void CharacterDBSimpleInfo::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional float lastPosX = 16;
inline bool CharacterDBSimpleInfo::has_lastposx() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_lastposx() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CharacterDBSimpleInfo::clear_has_lastposx() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CharacterDBSimpleInfo::clear_lastposx() {
  lastposx_ = 0;
  clear_has_lastposx();
}
inline float CharacterDBSimpleInfo::lastposx() const {
  return lastposx_;
}
inline void CharacterDBSimpleInfo::set_lastposx(float value) {
  set_has_lastposx();
  lastposx_ = value;
}

// optional float lastPosY = 17;
inline bool CharacterDBSimpleInfo::has_lastposy() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_lastposy() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharacterDBSimpleInfo::clear_has_lastposy() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharacterDBSimpleInfo::clear_lastposy() {
  lastposy_ = 0;
  clear_has_lastposy();
}
inline float CharacterDBSimpleInfo::lastposy() const {
  return lastposy_;
}
inline void CharacterDBSimpleInfo::set_lastposy(float value) {
  set_has_lastposy();
  lastposy_ = value;
}

// optional float lastPosZ = 18;
inline bool CharacterDBSimpleInfo::has_lastposz() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_lastposz() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharacterDBSimpleInfo::clear_has_lastposz() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharacterDBSimpleInfo::clear_lastposz() {
  lastposz_ = 0;
  clear_has_lastposz();
}
inline float CharacterDBSimpleInfo::lastposz() const {
  return lastposz_;
}
inline void CharacterDBSimpleInfo::set_lastposz(float value) {
  set_has_lastposz();
  lastposz_ = value;
}

// optional .proto_ff.CharFacadeProto facade = 19;
inline bool CharacterDBSimpleInfo::has_facade() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_facade() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharacterDBSimpleInfo::clear_has_facade() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharacterDBSimpleInfo::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::CharFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::CharFacadeProto& CharacterDBSimpleInfo::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::CharFacadeProto* CharacterDBSimpleInfo::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::CharFacadeProto;
  return facade_;
}
inline ::proto_ff::CharFacadeProto* CharacterDBSimpleInfo::release_facade() {
  clear_has_facade();
  ::proto_ff::CharFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void CharacterDBSimpleInfo::set_allocated_facade(::proto_ff::CharFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional int32 curstate = 20;
inline bool CharacterDBSimpleInfo::has_curstate() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_curstate() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharacterDBSimpleInfo::clear_has_curstate() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharacterDBSimpleInfo::clear_curstate() {
  curstate_ = 0;
  clear_has_curstate();
}
inline ::google::protobuf::int32 CharacterDBSimpleInfo::curstate() const {
  return curstate_;
}
inline void CharacterDBSimpleInfo::set_curstate(::google::protobuf::int32 value) {
  set_has_curstate();
  curstate_ = value;
}

// optional uint64 deletechartime = 21;
inline bool CharacterDBSimpleInfo::has_deletechartime() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_deletechartime() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CharacterDBSimpleInfo::clear_has_deletechartime() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CharacterDBSimpleInfo::clear_deletechartime() {
  deletechartime_ = GOOGLE_ULONGLONG(0);
  clear_has_deletechartime();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::deletechartime() const {
  return deletechartime_;
}
inline void CharacterDBSimpleInfo::set_deletechartime(::google::protobuf::uint64 value) {
  set_has_deletechartime();
  deletechartime_ = value;
}

// optional uint64 createTime = 22;
inline bool CharacterDBSimpleInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CharacterDBSimpleInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CharacterDBSimpleInfo::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::createtime() const {
  return createtime_;
}
inline void CharacterDBSimpleInfo::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint32 totalpay = 23;
inline bool CharacterDBSimpleInfo::has_totalpay() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_totalpay() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CharacterDBSimpleInfo::clear_has_totalpay() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CharacterDBSimpleInfo::clear_totalpay() {
  totalpay_ = 0u;
  clear_has_totalpay();
}
inline ::google::protobuf::uint32 CharacterDBSimpleInfo::totalpay() const {
  return totalpay_;
}
inline void CharacterDBSimpleInfo::set_totalpay(::google::protobuf::uint32 value) {
  set_has_totalpay();
  totalpay_ = value;
}

// optional float clx = 24;
inline bool CharacterDBSimpleInfo::has_clx() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_clx() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CharacterDBSimpleInfo::clear_has_clx() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CharacterDBSimpleInfo::clear_clx() {
  clx_ = 0;
  clear_has_clx();
}
inline float CharacterDBSimpleInfo::clx() const {
  return clx_;
}
inline void CharacterDBSimpleInfo::set_clx(float value) {
  set_has_clx();
  clx_ = value;
}

// optional float cly = 25;
inline bool CharacterDBSimpleInfo::has_cly() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_cly() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CharacterDBSimpleInfo::clear_has_cly() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CharacterDBSimpleInfo::clear_cly() {
  cly_ = 0;
  clear_has_cly();
}
inline float CharacterDBSimpleInfo::cly() const {
  return cly_;
}
inline void CharacterDBSimpleInfo::set_cly(float value) {
  set_has_cly();
  cly_ = value;
}

// optional float clz = 26;
inline bool CharacterDBSimpleInfo::has_clz() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_clz() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CharacterDBSimpleInfo::clear_has_clz() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CharacterDBSimpleInfo::clear_clz() {
  clz_ = 0;
  clear_has_clz();
}
inline float CharacterDBSimpleInfo::clz() const {
  return clz_;
}
inline void CharacterDBSimpleInfo::set_clz(float value) {
  set_has_clz();
  clz_ = value;
}

// optional uint64 occupation = 27;
inline bool CharacterDBSimpleInfo::has_occupation() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_occupation() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CharacterDBSimpleInfo::clear_has_occupation() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CharacterDBSimpleInfo::clear_occupation() {
  occupation_ = GOOGLE_ULONGLONG(0);
  clear_has_occupation();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::occupation() const {
  return occupation_;
}
inline void CharacterDBSimpleInfo::set_occupation(::google::protobuf::uint64 value) {
  set_has_occupation();
  occupation_ = value;
}

// optional uint64 aptitude = 28;
inline bool CharacterDBSimpleInfo::has_aptitude() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_aptitude() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CharacterDBSimpleInfo::clear_has_aptitude() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CharacterDBSimpleInfo::clear_aptitude() {
  aptitude_ = GOOGLE_ULONGLONG(0);
  clear_has_aptitude();
}
inline ::google::protobuf::uint64 CharacterDBSimpleInfo::aptitude() const {
  return aptitude_;
}
inline void CharacterDBSimpleInfo::set_aptitude(::google::protobuf::uint64 value) {
  set_has_aptitude();
  aptitude_ = value;
}

// optional int32 finish_flag = 29;
inline bool CharacterDBSimpleInfo::has_finish_flag() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_finish_flag() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CharacterDBSimpleInfo::clear_has_finish_flag() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CharacterDBSimpleInfo::clear_finish_flag() {
  finish_flag_ = 0;
  clear_has_finish_flag();
}
inline ::google::protobuf::int32 CharacterDBSimpleInfo::finish_flag() const {
  return finish_flag_;
}
inline void CharacterDBSimpleInfo::set_finish_flag(::google::protobuf::int32 value) {
  set_has_finish_flag();
  finish_flag_ = value;
}

// optional string platid = 30;
inline bool CharacterDBSimpleInfo::has_platid() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_platid() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CharacterDBSimpleInfo::clear_has_platid() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CharacterDBSimpleInfo::clear_platid() {
  if (platid_ != &::google::protobuf::internal::kEmptyString) {
    platid_->clear();
  }
  clear_has_platid();
}
inline const ::std::string& CharacterDBSimpleInfo::platid() const {
  return *platid_;
}
inline void CharacterDBSimpleInfo::set_platid(const ::std::string& value) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void CharacterDBSimpleInfo::set_platid(const char* value) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void CharacterDBSimpleInfo::set_platid(const char* value, size_t size) {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  platid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharacterDBSimpleInfo::mutable_platid() {
  set_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    platid_ = new ::std::string;
  }
  return platid_;
}
inline ::std::string* CharacterDBSimpleInfo::release_platid() {
  clear_has_platid();
  if (platid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platid_;
    platid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CharacterDBSimpleInfo::set_allocated_platid(::std::string* platid) {
  if (platid_ != &::google::protobuf::internal::kEmptyString) {
    delete platid_;
  }
  if (platid) {
    set_has_platid();
    platid_ = platid;
  } else {
    clear_has_platid();
    platid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 palace_layer = 31;
inline bool CharacterDBSimpleInfo::has_palace_layer() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_palace_layer() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CharacterDBSimpleInfo::clear_has_palace_layer() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CharacterDBSimpleInfo::clear_palace_layer() {
  palace_layer_ = 0;
  clear_has_palace_layer();
}
inline ::google::protobuf::int32 CharacterDBSimpleInfo::palace_layer() const {
  return palace_layer_;
}
inline void CharacterDBSimpleInfo::set_palace_layer(::google::protobuf::int32 value) {
  set_has_palace_layer();
  palace_layer_ = value;
}

// optional int32 palace_break_count = 32;
inline bool CharacterDBSimpleInfo::has_palace_break_count() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_palace_break_count() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CharacterDBSimpleInfo::clear_has_palace_break_count() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CharacterDBSimpleInfo::clear_palace_break_count() {
  palace_break_count_ = 0;
  clear_has_palace_break_count();
}
inline ::google::protobuf::int32 CharacterDBSimpleInfo::palace_break_count() const {
  return palace_break_count_;
}
inline void CharacterDBSimpleInfo::set_palace_break_count(::google::protobuf::int32 value) {
  set_has_palace_break_count();
  palace_break_count_ = value;
}

// optional int32 dirty = 33;
inline bool CharacterDBSimpleInfo::has_dirty() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CharacterDBSimpleInfo::set_has_dirty() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CharacterDBSimpleInfo::clear_has_dirty() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CharacterDBSimpleInfo::clear_dirty() {
  dirty_ = 0;
  clear_has_dirty();
}
inline ::google::protobuf::int32 CharacterDBSimpleInfo::dirty() const {
  return dirty_;
}
inline void CharacterDBSimpleInfo::set_dirty(::google::protobuf::int32 value) {
  set_has_dirty();
  dirty_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_5flogic_2eproto__INCLUDED
