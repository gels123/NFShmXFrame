// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerInternal.proto

#ifndef PROTOBUF_ServerInternal_2eproto__INCLUDED
#define PROTOBUF_ServerInternal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerInternal_2eproto();
void protobuf_AssignDesc_ServerInternal_2eproto();
void protobuf_ShutdownFile_ServerInternal_2eproto();

class Proto_PTWUserLoginReq;
class Proto_WTPPlayerLoginRsp;
class Proto_WorldToLogicLoginReq;
class Proto_LogicToWorldLoginRsp;
class Proto_WTSLoginReq;
class Proto_STWLoginRsp;
class NotifyPlayerDisconnect;
class PTWPlayerReconnectReq;
class WTPPlayerReconnctRsp;
class WTLPlayerReconnectReq;
class LTWPlayerReconnectRsp;
class WTGPlayerReconnectReq;
class GTWPlayerReconnectRsp;
class WTSPlayerReconnectReq;
class STWPlayerReconnectRsp;
class Proto_LTWLogoutNotify;
class Proto_WTLLogoutNotify;
class Proto_WTSLogoutNotify;

enum Proto_AccountState {
  E_ACCOUNTSTATE_OK = 0,
  E_ACCOUNTSTATE_FREEZE = 1,
  E_ACCOUNTSTATE_FORBIT = 2
};
bool Proto_AccountState_IsValid(int value);
const Proto_AccountState Proto_AccountState_MIN = E_ACCOUNTSTATE_OK;
const Proto_AccountState Proto_AccountState_MAX = E_ACCOUNTSTATE_FORBIT;
const int Proto_AccountState_ARRAYSIZE = Proto_AccountState_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_AccountState_descriptor();
inline const ::std::string& Proto_AccountState_Name(Proto_AccountState value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_AccountState_descriptor(), value);
}
inline bool Proto_AccountState_Parse(
    const ::std::string& name, Proto_AccountState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto_AccountState>(
    Proto_AccountState_descriptor(), name, value);
}
// ===================================================================

class Proto_PTWUserLoginReq : public ::google::protobuf::Message {
 public:
  Proto_PTWUserLoginReq();
  virtual ~Proto_PTWUserLoginReq();

  Proto_PTWUserLoginReq(const Proto_PTWUserLoginReq& from);

  inline Proto_PTWUserLoginReq& operator=(const Proto_PTWUserLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_PTWUserLoginReq& default_instance();

  void Swap(Proto_PTWUserLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_PTWUserLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_PTWUserLoginReq& from);
  void MergeFrom(const Proto_PTWUserLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 proxy_bus_id = 3;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional string client_ip = 4;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 4;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // optional .proto_ff.Proto_UserLoginExternalData ext_data = 5;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 5;
  inline const ::proto_ff::Proto_UserLoginExternalData& ext_data() const;
  inline ::proto_ff::Proto_UserLoginExternalData* mutable_ext_data();
  inline ::proto_ff::Proto_UserLoginExternalData* release_ext_data();
  inline void set_allocated_ext_data(::proto_ff::Proto_UserLoginExternalData* ext_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_PTWUserLoginReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_client_ip();
  inline void clear_has_client_ip();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* account_;
  ::std::string* client_ip_;
  ::proto_ff::Proto_UserLoginExternalData* ext_data_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_PTWUserLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WTPPlayerLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_WTPPlayerLoginRsp();
  virtual ~Proto_WTPPlayerLoginRsp();

  Proto_WTPPlayerLoginRsp(const Proto_WTPPlayerLoginRsp& from);

  inline Proto_WTPPlayerLoginRsp& operator=(const Proto_WTPPlayerLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WTPPlayerLoginRsp& default_instance();

  void Swap(Proto_WTPPlayerLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_WTPPlayerLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WTPPlayerLoginRsp& from);
  void MergeFrom(const Proto_WTPPlayerLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 5;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 logic_bus_id = 6;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // optional .proto_ff.Proto_UserDetailCommonData detail_data = 7;
  inline bool has_detail_data() const;
  inline void clear_detail_data();
  static const int kDetailDataFieldNumber = 7;
  inline const ::proto_ff::Proto_UserDetailCommonData& detail_data() const;
  inline ::proto_ff::Proto_UserDetailCommonData* mutable_detail_data();
  inline ::proto_ff::Proto_UserDetailCommonData* release_detail_data();
  inline void set_allocated_detail_data(::proto_ff::Proto_UserDetailCommonData* detail_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WTPPlayerLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();
  inline void set_has_detail_data();
  inline void clear_has_detail_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::proto_ff::Proto_UserDetailCommonData* detail_data_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_WTPPlayerLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WorldToLogicLoginReq : public ::google::protobuf::Message {
 public:
  Proto_WorldToLogicLoginReq();
  virtual ~Proto_WorldToLogicLoginReq();

  Proto_WorldToLogicLoginReq(const Proto_WorldToLogicLoginReq& from);

  inline Proto_WorldToLogicLoginReq& operator=(const Proto_WorldToLogicLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WorldToLogicLoginReq& default_instance();

  void Swap(Proto_WorldToLogicLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_WorldToLogicLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WorldToLogicLoginReq& from);
  void MergeFrom(const Proto_WorldToLogicLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_bus_id = 5;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional string client_ip = 7;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 7;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // optional .proto_ff.Proto_UserLoginExternalData ext_data = 8;
  inline bool has_ext_data() const;
  inline void clear_ext_data();
  static const int kExtDataFieldNumber = 8;
  inline const ::proto_ff::Proto_UserLoginExternalData& ext_data() const;
  inline ::proto_ff::Proto_UserLoginExternalData* mutable_ext_data();
  inline ::proto_ff::Proto_UserLoginExternalData* release_ext_data();
  inline void set_allocated_ext_data(::proto_ff::Proto_UserLoginExternalData* ext_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WorldToLogicLoginReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_client_ip();
  inline void clear_has_client_ip();
  inline void set_has_ext_data();
  inline void clear_has_ext_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 proxy_bus_id_;
  ::std::string* client_ip_;
  ::proto_ff::Proto_UserLoginExternalData* ext_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_WorldToLogicLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LogicToWorldLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_LogicToWorldLoginRsp();
  virtual ~Proto_LogicToWorldLoginRsp();

  Proto_LogicToWorldLoginRsp(const Proto_LogicToWorldLoginRsp& from);

  inline Proto_LogicToWorldLoginRsp& operator=(const Proto_LogicToWorldLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LogicToWorldLoginRsp& default_instance();

  void Swap(Proto_LogicToWorldLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_LogicToWorldLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LogicToWorldLoginRsp& from);
  void MergeFrom(const Proto_LogicToWorldLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Proto_LTSSyncData sns_sync = 3;
  inline bool has_sns_sync() const;
  inline void clear_sns_sync();
  static const int kSnsSyncFieldNumber = 3;
  inline const ::proto_ff::Proto_LTSSyncData& sns_sync() const;
  inline ::proto_ff::Proto_LTSSyncData* mutable_sns_sync();
  inline ::proto_ff::Proto_LTSSyncData* release_sns_sync();
  inline void set_allocated_sns_sync(::proto_ff::Proto_LTSSyncData* sns_sync);

  // optional .proto_ff.Proto_UserDetailCommonData detail_data = 4;
  inline bool has_detail_data() const;
  inline void clear_detail_data();
  static const int kDetailDataFieldNumber = 4;
  inline const ::proto_ff::Proto_UserDetailCommonData& detail_data() const;
  inline ::proto_ff::Proto_UserDetailCommonData* mutable_detail_data();
  inline ::proto_ff::Proto_UserDetailCommonData* release_detail_data();
  inline void set_allocated_detail_data(::proto_ff::Proto_UserDetailCommonData* detail_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LogicToWorldLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_sns_sync();
  inline void clear_has_sns_sync();
  inline void set_has_detail_data();
  inline void clear_has_detail_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::proto_ff::Proto_LTSSyncData* sns_sync_;
  ::proto_ff::Proto_UserDetailCommonData* detail_data_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_LogicToWorldLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WTSLoginReq : public ::google::protobuf::Message {
 public:
  Proto_WTSLoginReq();
  virtual ~Proto_WTSLoginReq();

  Proto_WTSLoginReq(const Proto_WTSLoginReq& from);

  inline Proto_WTSLoginReq& operator=(const Proto_WTSLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WTSLoginReq& default_instance();

  void Swap(Proto_WTSLoginReq* other);

  // implements Message ----------------------------------------------

  Proto_WTSLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WTSLoginReq& from);
  void MergeFrom(const Proto_WTSLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_bus_id = 5;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional string client_ip = 7;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 7;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // optional uint32 logic_bus_id = 8;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 8;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // optional .proto_ff.Proto_LTSSyncData sns_sync = 9;
  inline bool has_sns_sync() const;
  inline void clear_sns_sync();
  static const int kSnsSyncFieldNumber = 9;
  inline const ::proto_ff::Proto_LTSSyncData& sns_sync() const;
  inline ::proto_ff::Proto_LTSSyncData* mutable_sns_sync();
  inline ::proto_ff::Proto_LTSSyncData* release_sns_sync();
  inline void set_allocated_sns_sync(::proto_ff::Proto_LTSSyncData* sns_sync);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WTSLoginReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_client_ip();
  inline void clear_has_client_ip();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();
  inline void set_has_sns_sync();
  inline void clear_has_sns_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 proxy_bus_id_;
  ::std::string* client_ip_;
  ::proto_ff::Proto_LTSSyncData* sns_sync_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_WTSLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_STWLoginRsp : public ::google::protobuf::Message {
 public:
  Proto_STWLoginRsp();
  virtual ~Proto_STWLoginRsp();

  Proto_STWLoginRsp(const Proto_STWLoginRsp& from);

  inline Proto_STWLoginRsp& operator=(const Proto_STWLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_STWLoginRsp& default_instance();

  void Swap(Proto_STWLoginRsp* other);

  // implements Message ----------------------------------------------

  Proto_STWLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_STWLoginRsp& from);
  void MergeFrom(const Proto_STWLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_STWLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_STWLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPlayerDisconnect : public ::google::protobuf::Message {
 public:
  NotifyPlayerDisconnect();
  virtual ~NotifyPlayerDisconnect();

  NotifyPlayerDisconnect(const NotifyPlayerDisconnect& from);

  inline NotifyPlayerDisconnect& operator=(const NotifyPlayerDisconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPlayerDisconnect& default_instance();

  void Swap(NotifyPlayerDisconnect* other);

  // implements Message ----------------------------------------------

  NotifyPlayerDisconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPlayerDisconnect& from);
  void MergeFrom(const NotifyPlayerDisconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyPlayerDisconnect)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static NotifyPlayerDisconnect* default_instance_;
};
// -------------------------------------------------------------------

class PTWPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  PTWPlayerReconnectReq();
  virtual ~PTWPlayerReconnectReq();

  PTWPlayerReconnectReq(const PTWPlayerReconnectReq& from);

  inline PTWPlayerReconnectReq& operator=(const PTWPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PTWPlayerReconnectReq& default_instance();

  void Swap(PTWPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  PTWPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PTWPlayerReconnectReq& from);
  void MergeFrom(const PTWPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 proxy_bus_id = 2;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PTWPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static PTWPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class WTPPlayerReconnctRsp : public ::google::protobuf::Message {
 public:
  WTPPlayerReconnctRsp();
  virtual ~WTPPlayerReconnctRsp();

  WTPPlayerReconnctRsp(const WTPPlayerReconnctRsp& from);

  inline WTPPlayerReconnctRsp& operator=(const WTPPlayerReconnctRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WTPPlayerReconnctRsp& default_instance();

  void Swap(WTPPlayerReconnctRsp* other);

  // implements Message ----------------------------------------------

  WTPPlayerReconnctRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WTPPlayerReconnctRsp& from);
  void MergeFrom(const WTPPlayerReconnctRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 5;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 5;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 logic_bus_id = 6;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WTPPlayerReconnctRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static WTPPlayerReconnctRsp* default_instance_;
};
// -------------------------------------------------------------------

class WTLPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  WTLPlayerReconnectReq();
  virtual ~WTLPlayerReconnectReq();

  WTLPlayerReconnectReq(const WTLPlayerReconnectReq& from);

  inline WTLPlayerReconnectReq& operator=(const WTLPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WTLPlayerReconnectReq& default_instance();

  void Swap(WTLPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  WTLPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WTLPlayerReconnectReq& from);
  void MergeFrom(const WTLPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_bus_id = 6;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WTLPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static WTLPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class LTWPlayerReconnectRsp : public ::google::protobuf::Message {
 public:
  LTWPlayerReconnectRsp();
  virtual ~LTWPlayerReconnectRsp();

  LTWPlayerReconnectRsp(const LTWPlayerReconnectRsp& from);

  inline LTWPlayerReconnectRsp& operator=(const LTWPlayerReconnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTWPlayerReconnectRsp& default_instance();

  void Swap(LTWPlayerReconnectRsp* other);

  // implements Message ----------------------------------------------

  LTWPlayerReconnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTWPlayerReconnectRsp& from);
  void MergeFrom(const LTWPlayerReconnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LTWPlayerReconnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static LTWPlayerReconnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class WTGPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  WTGPlayerReconnectReq();
  virtual ~WTGPlayerReconnectReq();

  WTGPlayerReconnectReq(const WTGPlayerReconnectReq& from);

  inline WTGPlayerReconnectReq& operator=(const WTGPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WTGPlayerReconnectReq& default_instance();

  void Swap(WTGPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  WTGPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WTGPlayerReconnectReq& from);
  void MergeFrom(const WTGPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 proxy_bus_id = 2;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // optional uint32 logic_bus_id = 3;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WTGPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 proxy_bus_id_;
  ::google::protobuf::uint32 logic_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static WTGPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class GTWPlayerReconnectRsp : public ::google::protobuf::Message {
 public:
  GTWPlayerReconnectRsp();
  virtual ~GTWPlayerReconnectRsp();

  GTWPlayerReconnectRsp(const GTWPlayerReconnectRsp& from);

  inline GTWPlayerReconnectRsp& operator=(const GTWPlayerReconnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTWPlayerReconnectRsp& default_instance();

  void Swap(GTWPlayerReconnectRsp* other);

  // implements Message ----------------------------------------------

  GTWPlayerReconnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTWPlayerReconnectRsp& from);
  void MergeFrom(const GTWPlayerReconnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GTWPlayerReconnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static GTWPlayerReconnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class WTSPlayerReconnectReq : public ::google::protobuf::Message {
 public:
  WTSPlayerReconnectReq();
  virtual ~WTSPlayerReconnectReq();

  WTSPlayerReconnectReq(const WTSPlayerReconnectReq& from);

  inline WTSPlayerReconnectReq& operator=(const WTSPlayerReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WTSPlayerReconnectReq& default_instance();

  void Swap(WTSPlayerReconnectReq* other);

  // implements Message ----------------------------------------------

  WTSPlayerReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WTSPlayerReconnectReq& from);
  void MergeFrom(const WTSPlayerReconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 logic_bus_id = 2;
  inline bool has_logic_bus_id() const;
  inline void clear_logic_bus_id();
  static const int kLogicBusIdFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_bus_id() const;
  inline void set_logic_bus_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 3;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_bus_id = 4;
  inline bool has_proxy_bus_id() const;
  inline void clear_proxy_bus_id();
  static const int kProxyBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 proxy_bus_id() const;
  inline void set_proxy_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WTSPlayerReconnectReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_logic_bus_id();
  inline void clear_has_logic_bus_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_proxy_bus_id();
  inline void clear_has_proxy_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 logic_bus_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint32 proxy_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static WTSPlayerReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class STWPlayerReconnectRsp : public ::google::protobuf::Message {
 public:
  STWPlayerReconnectRsp();
  virtual ~STWPlayerReconnectRsp();

  STWPlayerReconnectRsp(const STWPlayerReconnectRsp& from);

  inline STWPlayerReconnectRsp& operator=(const STWPlayerReconnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STWPlayerReconnectRsp& default_instance();

  void Swap(STWPlayerReconnectRsp* other);

  // implements Message ----------------------------------------------

  STWPlayerReconnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STWPlayerReconnectRsp& from);
  void MergeFrom(const STWPlayerReconnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.STWPlayerReconnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static STWPlayerReconnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LTWLogoutNotify : public ::google::protobuf::Message {
 public:
  Proto_LTWLogoutNotify();
  virtual ~Proto_LTWLogoutNotify();

  Proto_LTWLogoutNotify(const Proto_LTWLogoutNotify& from);

  inline Proto_LTWLogoutNotify& operator=(const Proto_LTWLogoutNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LTWLogoutNotify& default_instance();

  void Swap(Proto_LTWLogoutNotify* other);

  // implements Message ----------------------------------------------

  Proto_LTWLogoutNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LTWLogoutNotify& from);
  void MergeFrom(const Proto_LTWLogoutNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LTWLogoutNotify)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_LTWLogoutNotify* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WTLLogoutNotify : public ::google::protobuf::Message {
 public:
  Proto_WTLLogoutNotify();
  virtual ~Proto_WTLLogoutNotify();

  Proto_WTLLogoutNotify(const Proto_WTLLogoutNotify& from);

  inline Proto_WTLLogoutNotify& operator=(const Proto_WTLLogoutNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WTLLogoutNotify& default_instance();

  void Swap(Proto_WTLLogoutNotify* other);

  // implements Message ----------------------------------------------

  Proto_WTLLogoutNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WTLLogoutNotify& from);
  void MergeFrom(const Proto_WTLLogoutNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WTLLogoutNotify)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_WTLLogoutNotify* default_instance_;
};
// -------------------------------------------------------------------

class Proto_WTSLogoutNotify : public ::google::protobuf::Message {
 public:
  Proto_WTSLogoutNotify();
  virtual ~Proto_WTSLogoutNotify();

  Proto_WTSLogoutNotify(const Proto_WTSLogoutNotify& from);

  inline Proto_WTSLogoutNotify& operator=(const Proto_WTSLogoutNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_WTSLogoutNotify& default_instance();

  void Swap(Proto_WTSLogoutNotify* other);

  // implements Message ----------------------------------------------

  Proto_WTSLogoutNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_WTSLogoutNotify& from);
  void MergeFrom(const Proto_WTSLogoutNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_WTSLogoutNotify)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ServerInternal_2eproto();
  friend void protobuf_AssignDesc_ServerInternal_2eproto();
  friend void protobuf_ShutdownFile_ServerInternal_2eproto();

  void InitAsDefaultInstance();
  static Proto_WTSLogoutNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// Proto_PTWUserLoginReq

// optional uint64 user_id = 1;
inline bool Proto_PTWUserLoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_PTWUserLoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_PTWUserLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_PTWUserLoginReq::user_id() const {
  return user_id_;
}
inline void Proto_PTWUserLoginReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string account = 2;
inline bool Proto_PTWUserLoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_PTWUserLoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_PTWUserLoginReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto_PTWUserLoginReq::account() const {
  return *account_;
}
inline void Proto_PTWUserLoginReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_PTWUserLoginReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto_PTWUserLoginReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_PTWUserLoginReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 proxy_bus_id = 3;
inline bool Proto_PTWUserLoginReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_PTWUserLoginReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_PTWUserLoginReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 Proto_PTWUserLoginReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void Proto_PTWUserLoginReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional string client_ip = 4;
inline bool Proto_PTWUserLoginReq::has_client_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_client_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_PTWUserLoginReq::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_PTWUserLoginReq::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& Proto_PTWUserLoginReq::client_ip() const {
  return *client_ip_;
}
inline void Proto_PTWUserLoginReq::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_PTWUserLoginReq::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_PTWUserLoginReq::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  return client_ip_;
}
inline ::std::string* Proto_PTWUserLoginReq::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_PTWUserLoginReq::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.Proto_UserLoginExternalData ext_data = 5;
inline bool Proto_PTWUserLoginReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_PTWUserLoginReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_PTWUserLoginReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_PTWUserLoginReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_ff::Proto_UserLoginExternalData::Clear();
  clear_has_ext_data();
}
inline const ::proto_ff::Proto_UserLoginExternalData& Proto_PTWUserLoginReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_ff::Proto_UserLoginExternalData* Proto_PTWUserLoginReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_ff::Proto_UserLoginExternalData;
  return ext_data_;
}
inline ::proto_ff::Proto_UserLoginExternalData* Proto_PTWUserLoginReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_ff::Proto_UserLoginExternalData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_PTWUserLoginReq::set_allocated_ext_data(::proto_ff::Proto_UserLoginExternalData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// -------------------------------------------------------------------

// Proto_WTPPlayerLoginRsp

// optional int32 result = 1;
inline bool Proto_WTPPlayerLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WTPPlayerLoginRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_WTPPlayerLoginRsp::result() const {
  return result_;
}
inline void Proto_WTPPlayerLoginRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_WTPPlayerLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_WTPPlayerLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_WTPPlayerLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 game_id = 3;
inline bool Proto_WTPPlayerLoginRsp::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_WTPPlayerLoginRsp::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::game_id() const {
  return game_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 4;
inline bool Proto_WTPPlayerLoginRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_WTPPlayerLoginRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::room_id() const {
  return room_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 5;
inline bool Proto_WTPPlayerLoginRsp::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_WTPPlayerLoginRsp::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::game_bus_id() const {
  return game_bus_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 logic_bus_id = 6;
inline bool Proto_WTPPlayerLoginRsp::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_WTPPlayerLoginRsp::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTPPlayerLoginRsp::logic_bus_id() const {
  return logic_bus_id_;
}
inline void Proto_WTPPlayerLoginRsp::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// optional .proto_ff.Proto_UserDetailCommonData detail_data = 7;
inline bool Proto_WTPPlayerLoginRsp::has_detail_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_WTPPlayerLoginRsp::set_has_detail_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_WTPPlayerLoginRsp::clear_has_detail_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_WTPPlayerLoginRsp::clear_detail_data() {
  if (detail_data_ != NULL) detail_data_->::proto_ff::Proto_UserDetailCommonData::Clear();
  clear_has_detail_data();
}
inline const ::proto_ff::Proto_UserDetailCommonData& Proto_WTPPlayerLoginRsp::detail_data() const {
  return detail_data_ != NULL ? *detail_data_ : *default_instance_->detail_data_;
}
inline ::proto_ff::Proto_UserDetailCommonData* Proto_WTPPlayerLoginRsp::mutable_detail_data() {
  set_has_detail_data();
  if (detail_data_ == NULL) detail_data_ = new ::proto_ff::Proto_UserDetailCommonData;
  return detail_data_;
}
inline ::proto_ff::Proto_UserDetailCommonData* Proto_WTPPlayerLoginRsp::release_detail_data() {
  clear_has_detail_data();
  ::proto_ff::Proto_UserDetailCommonData* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void Proto_WTPPlayerLoginRsp::set_allocated_detail_data(::proto_ff::Proto_UserDetailCommonData* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    set_has_detail_data();
  } else {
    clear_has_detail_data();
  }
}

// -------------------------------------------------------------------

// Proto_WorldToLogicLoginReq

// optional uint64 user_id = 1;
inline bool Proto_WorldToLogicLoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WorldToLogicLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_WorldToLogicLoginReq::user_id() const {
  return user_id_;
}
inline void Proto_WorldToLogicLoginReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 game_id = 2;
inline bool Proto_WorldToLogicLoginReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_WorldToLogicLoginReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::game_id() const {
  return game_id_;
}
inline void Proto_WorldToLogicLoginReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool Proto_WorldToLogicLoginReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_WorldToLogicLoginReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::room_id() const {
  return room_id_;
}
inline void Proto_WorldToLogicLoginReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool Proto_WorldToLogicLoginReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_WorldToLogicLoginReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::game_bus_id() const {
  return game_bus_id_;
}
inline void Proto_WorldToLogicLoginReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 proxy_bus_id = 5;
inline bool Proto_WorldToLogicLoginReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_WorldToLogicLoginReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 Proto_WorldToLogicLoginReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void Proto_WorldToLogicLoginReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional string client_ip = 7;
inline bool Proto_WorldToLogicLoginReq::has_client_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_client_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_WorldToLogicLoginReq::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& Proto_WorldToLogicLoginReq::client_ip() const {
  return *client_ip_;
}
inline void Proto_WorldToLogicLoginReq::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_WorldToLogicLoginReq::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_WorldToLogicLoginReq::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_WorldToLogicLoginReq::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  return client_ip_;
}
inline ::std::string* Proto_WorldToLogicLoginReq::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_WorldToLogicLoginReq::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.Proto_UserLoginExternalData ext_data = 8;
inline bool Proto_WorldToLogicLoginReq::has_ext_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_WorldToLogicLoginReq::set_has_ext_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_WorldToLogicLoginReq::clear_has_ext_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_WorldToLogicLoginReq::clear_ext_data() {
  if (ext_data_ != NULL) ext_data_->::proto_ff::Proto_UserLoginExternalData::Clear();
  clear_has_ext_data();
}
inline const ::proto_ff::Proto_UserLoginExternalData& Proto_WorldToLogicLoginReq::ext_data() const {
  return ext_data_ != NULL ? *ext_data_ : *default_instance_->ext_data_;
}
inline ::proto_ff::Proto_UserLoginExternalData* Proto_WorldToLogicLoginReq::mutable_ext_data() {
  set_has_ext_data();
  if (ext_data_ == NULL) ext_data_ = new ::proto_ff::Proto_UserLoginExternalData;
  return ext_data_;
}
inline ::proto_ff::Proto_UserLoginExternalData* Proto_WorldToLogicLoginReq::release_ext_data() {
  clear_has_ext_data();
  ::proto_ff::Proto_UserLoginExternalData* temp = ext_data_;
  ext_data_ = NULL;
  return temp;
}
inline void Proto_WorldToLogicLoginReq::set_allocated_ext_data(::proto_ff::Proto_UserLoginExternalData* ext_data) {
  delete ext_data_;
  ext_data_ = ext_data;
  if (ext_data) {
    set_has_ext_data();
  } else {
    clear_has_ext_data();
  }
}

// -------------------------------------------------------------------

// Proto_LogicToWorldLoginRsp

// optional uint32 result = 1;
inline bool Proto_LogicToWorldLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LogicToWorldLoginRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_LogicToWorldLoginRsp::result() const {
  return result_;
}
inline void Proto_LogicToWorldLoginRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_LogicToWorldLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LogicToWorldLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_LogicToWorldLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_LogicToWorldLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .proto_ff.Proto_LTSSyncData sns_sync = 3;
inline bool Proto_LogicToWorldLoginRsp::has_sns_sync() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_sns_sync() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_sns_sync() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_LogicToWorldLoginRsp::clear_sns_sync() {
  if (sns_sync_ != NULL) sns_sync_->::proto_ff::Proto_LTSSyncData::Clear();
  clear_has_sns_sync();
}
inline const ::proto_ff::Proto_LTSSyncData& Proto_LogicToWorldLoginRsp::sns_sync() const {
  return sns_sync_ != NULL ? *sns_sync_ : *default_instance_->sns_sync_;
}
inline ::proto_ff::Proto_LTSSyncData* Proto_LogicToWorldLoginRsp::mutable_sns_sync() {
  set_has_sns_sync();
  if (sns_sync_ == NULL) sns_sync_ = new ::proto_ff::Proto_LTSSyncData;
  return sns_sync_;
}
inline ::proto_ff::Proto_LTSSyncData* Proto_LogicToWorldLoginRsp::release_sns_sync() {
  clear_has_sns_sync();
  ::proto_ff::Proto_LTSSyncData* temp = sns_sync_;
  sns_sync_ = NULL;
  return temp;
}
inline void Proto_LogicToWorldLoginRsp::set_allocated_sns_sync(::proto_ff::Proto_LTSSyncData* sns_sync) {
  delete sns_sync_;
  sns_sync_ = sns_sync;
  if (sns_sync) {
    set_has_sns_sync();
  } else {
    clear_has_sns_sync();
  }
}

// optional .proto_ff.Proto_UserDetailCommonData detail_data = 4;
inline bool Proto_LogicToWorldLoginRsp::has_detail_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_LogicToWorldLoginRsp::set_has_detail_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_LogicToWorldLoginRsp::clear_has_detail_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_LogicToWorldLoginRsp::clear_detail_data() {
  if (detail_data_ != NULL) detail_data_->::proto_ff::Proto_UserDetailCommonData::Clear();
  clear_has_detail_data();
}
inline const ::proto_ff::Proto_UserDetailCommonData& Proto_LogicToWorldLoginRsp::detail_data() const {
  return detail_data_ != NULL ? *detail_data_ : *default_instance_->detail_data_;
}
inline ::proto_ff::Proto_UserDetailCommonData* Proto_LogicToWorldLoginRsp::mutable_detail_data() {
  set_has_detail_data();
  if (detail_data_ == NULL) detail_data_ = new ::proto_ff::Proto_UserDetailCommonData;
  return detail_data_;
}
inline ::proto_ff::Proto_UserDetailCommonData* Proto_LogicToWorldLoginRsp::release_detail_data() {
  clear_has_detail_data();
  ::proto_ff::Proto_UserDetailCommonData* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void Proto_LogicToWorldLoginRsp::set_allocated_detail_data(::proto_ff::Proto_UserDetailCommonData* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    set_has_detail_data();
  } else {
    clear_has_detail_data();
  }
}

// -------------------------------------------------------------------

// Proto_WTSLoginReq

// optional uint64 user_id = 1;
inline bool Proto_WTSLoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WTSLoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WTSLoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WTSLoginReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_WTSLoginReq::user_id() const {
  return user_id_;
}
inline void Proto_WTSLoginReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 game_id = 2;
inline bool Proto_WTSLoginReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_WTSLoginReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_WTSLoginReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_WTSLoginReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_WTSLoginReq::game_id() const {
  return game_id_;
}
inline void Proto_WTSLoginReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool Proto_WTSLoginReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_WTSLoginReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_WTSLoginReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_WTSLoginReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_WTSLoginReq::room_id() const {
  return room_id_;
}
inline void Proto_WTSLoginReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool Proto_WTSLoginReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_WTSLoginReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_WTSLoginReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_WTSLoginReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTSLoginReq::game_bus_id() const {
  return game_bus_id_;
}
inline void Proto_WTSLoginReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 proxy_bus_id = 5;
inline bool Proto_WTSLoginReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_WTSLoginReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_WTSLoginReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_WTSLoginReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTSLoginReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void Proto_WTSLoginReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional string client_ip = 7;
inline bool Proto_WTSLoginReq::has_client_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_WTSLoginReq::set_has_client_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_WTSLoginReq::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_WTSLoginReq::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& Proto_WTSLoginReq::client_ip() const {
  return *client_ip_;
}
inline void Proto_WTSLoginReq::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_WTSLoginReq::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
}
inline void Proto_WTSLoginReq::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_WTSLoginReq::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    client_ip_ = new ::std::string;
  }
  return client_ip_;
}
inline ::std::string* Proto_WTSLoginReq::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_WTSLoginReq::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 logic_bus_id = 8;
inline bool Proto_WTSLoginReq::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_WTSLoginReq::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_WTSLoginReq::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_WTSLoginReq::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 Proto_WTSLoginReq::logic_bus_id() const {
  return logic_bus_id_;
}
inline void Proto_WTSLoginReq::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// optional .proto_ff.Proto_LTSSyncData sns_sync = 9;
inline bool Proto_WTSLoginReq::has_sns_sync() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto_WTSLoginReq::set_has_sns_sync() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto_WTSLoginReq::clear_has_sns_sync() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto_WTSLoginReq::clear_sns_sync() {
  if (sns_sync_ != NULL) sns_sync_->::proto_ff::Proto_LTSSyncData::Clear();
  clear_has_sns_sync();
}
inline const ::proto_ff::Proto_LTSSyncData& Proto_WTSLoginReq::sns_sync() const {
  return sns_sync_ != NULL ? *sns_sync_ : *default_instance_->sns_sync_;
}
inline ::proto_ff::Proto_LTSSyncData* Proto_WTSLoginReq::mutable_sns_sync() {
  set_has_sns_sync();
  if (sns_sync_ == NULL) sns_sync_ = new ::proto_ff::Proto_LTSSyncData;
  return sns_sync_;
}
inline ::proto_ff::Proto_LTSSyncData* Proto_WTSLoginReq::release_sns_sync() {
  clear_has_sns_sync();
  ::proto_ff::Proto_LTSSyncData* temp = sns_sync_;
  sns_sync_ = NULL;
  return temp;
}
inline void Proto_WTSLoginReq::set_allocated_sns_sync(::proto_ff::Proto_LTSSyncData* sns_sync) {
  delete sns_sync_;
  sns_sync_ = sns_sync;
  if (sns_sync) {
    set_has_sns_sync();
  } else {
    clear_has_sns_sync();
  }
}

// -------------------------------------------------------------------

// Proto_STWLoginRsp

// optional uint32 result = 1;
inline bool Proto_STWLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_STWLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_STWLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_STWLoginRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_STWLoginRsp::result() const {
  return result_;
}
inline void Proto_STWLoginRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_STWLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_STWLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_STWLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_STWLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_STWLoginRsp::user_id() const {
  return user_id_;
}
inline void Proto_STWLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// NotifyPlayerDisconnect

// optional uint64 player_id = 1;
inline bool NotifyPlayerDisconnect::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPlayerDisconnect::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPlayerDisconnect::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPlayerDisconnect::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyPlayerDisconnect::player_id() const {
  return player_id_;
}
inline void NotifyPlayerDisconnect::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// PTWPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool PTWPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTWPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTWPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTWPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PTWPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void PTWPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 proxy_bus_id = 2;
inline bool PTWPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTWPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTWPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTWPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 PTWPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void PTWPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// -------------------------------------------------------------------

// WTPPlayerReconnctRsp

// optional int32 result = 1;
inline bool WTPPlayerReconnctRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WTPPlayerReconnctRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WTPPlayerReconnctRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WTPPlayerReconnctRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WTPPlayerReconnctRsp::result() const {
  return result_;
}
inline void WTPPlayerReconnctRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool WTPPlayerReconnctRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WTPPlayerReconnctRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WTPPlayerReconnctRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WTPPlayerReconnctRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 WTPPlayerReconnctRsp::player_id() const {
  return player_id_;
}
inline void WTPPlayerReconnctRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 3;
inline bool WTPPlayerReconnctRsp::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WTPPlayerReconnctRsp::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WTPPlayerReconnctRsp::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WTPPlayerReconnctRsp::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 WTPPlayerReconnctRsp::game_id() const {
  return game_id_;
}
inline void WTPPlayerReconnctRsp::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 4;
inline bool WTPPlayerReconnctRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WTPPlayerReconnctRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WTPPlayerReconnctRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WTPPlayerReconnctRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 WTPPlayerReconnctRsp::room_id() const {
  return room_id_;
}
inline void WTPPlayerReconnctRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 5;
inline bool WTPPlayerReconnctRsp::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WTPPlayerReconnctRsp::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WTPPlayerReconnctRsp::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WTPPlayerReconnctRsp::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 WTPPlayerReconnctRsp::game_bus_id() const {
  return game_bus_id_;
}
inline void WTPPlayerReconnctRsp::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 logic_bus_id = 6;
inline bool WTPPlayerReconnctRsp::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WTPPlayerReconnctRsp::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WTPPlayerReconnctRsp::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WTPPlayerReconnctRsp::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 WTPPlayerReconnctRsp::logic_bus_id() const {
  return logic_bus_id_;
}
inline void WTPPlayerReconnctRsp::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// -------------------------------------------------------------------

// WTLPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool WTLPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WTLPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WTLPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WTLPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 WTLPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void WTLPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool WTLPlayerReconnectReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WTLPlayerReconnectReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WTLPlayerReconnectReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WTLPlayerReconnectReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 WTLPlayerReconnectReq::game_id() const {
  return game_id_;
}
inline void WTLPlayerReconnectReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool WTLPlayerReconnectReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WTLPlayerReconnectReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WTLPlayerReconnectReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WTLPlayerReconnectReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 WTLPlayerReconnectReq::room_id() const {
  return room_id_;
}
inline void WTLPlayerReconnectReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool WTLPlayerReconnectReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WTLPlayerReconnectReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WTLPlayerReconnectReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WTLPlayerReconnectReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 WTLPlayerReconnectReq::game_bus_id() const {
  return game_bus_id_;
}
inline void WTLPlayerReconnectReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 proxy_bus_id = 6;
inline bool WTLPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WTLPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WTLPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WTLPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 WTLPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void WTLPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// -------------------------------------------------------------------

// LTWPlayerReconnectRsp

// optional int32 result = 1;
inline bool LTWPlayerReconnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTWPlayerReconnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTWPlayerReconnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTWPlayerReconnectRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LTWPlayerReconnectRsp::result() const {
  return result_;
}
inline void LTWPlayerReconnectRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool LTWPlayerReconnectRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTWPlayerReconnectRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTWPlayerReconnectRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTWPlayerReconnectRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 LTWPlayerReconnectRsp::player_id() const {
  return player_id_;
}
inline void LTWPlayerReconnectRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// WTGPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool WTGPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WTGPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WTGPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WTGPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 WTGPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void WTGPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 proxy_bus_id = 2;
inline bool WTGPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WTGPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WTGPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WTGPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 WTGPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void WTGPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// optional uint32 logic_bus_id = 3;
inline bool WTGPlayerReconnectReq::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WTGPlayerReconnectReq::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WTGPlayerReconnectReq::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WTGPlayerReconnectReq::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 WTGPlayerReconnectReq::logic_bus_id() const {
  return logic_bus_id_;
}
inline void WTGPlayerReconnectReq::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// -------------------------------------------------------------------

// GTWPlayerReconnectRsp

// optional int32 result = 1;
inline bool GTWPlayerReconnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTWPlayerReconnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTWPlayerReconnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTWPlayerReconnectRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GTWPlayerReconnectRsp::result() const {
  return result_;
}
inline void GTWPlayerReconnectRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool GTWPlayerReconnectRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTWPlayerReconnectRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTWPlayerReconnectRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTWPlayerReconnectRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 GTWPlayerReconnectRsp::player_id() const {
  return player_id_;
}
inline void GTWPlayerReconnectRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// WTSPlayerReconnectReq

// optional uint64 player_id = 1;
inline bool WTSPlayerReconnectReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WTSPlayerReconnectReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WTSPlayerReconnectReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WTSPlayerReconnectReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 WTSPlayerReconnectReq::player_id() const {
  return player_id_;
}
inline void WTSPlayerReconnectReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 logic_bus_id = 2;
inline bool WTSPlayerReconnectReq::has_logic_bus_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WTSPlayerReconnectReq::set_has_logic_bus_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WTSPlayerReconnectReq::clear_has_logic_bus_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WTSPlayerReconnectReq::clear_logic_bus_id() {
  logic_bus_id_ = 0u;
  clear_has_logic_bus_id();
}
inline ::google::protobuf::uint32 WTSPlayerReconnectReq::logic_bus_id() const {
  return logic_bus_id_;
}
inline void WTSPlayerReconnectReq::set_logic_bus_id(::google::protobuf::uint32 value) {
  set_has_logic_bus_id();
  logic_bus_id_ = value;
}

// optional uint32 game_bus_id = 3;
inline bool WTSPlayerReconnectReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WTSPlayerReconnectReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WTSPlayerReconnectReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WTSPlayerReconnectReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 WTSPlayerReconnectReq::game_bus_id() const {
  return game_bus_id_;
}
inline void WTSPlayerReconnectReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint32 proxy_bus_id = 4;
inline bool WTSPlayerReconnectReq::has_proxy_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WTSPlayerReconnectReq::set_has_proxy_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WTSPlayerReconnectReq::clear_has_proxy_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WTSPlayerReconnectReq::clear_proxy_bus_id() {
  proxy_bus_id_ = 0u;
  clear_has_proxy_bus_id();
}
inline ::google::protobuf::uint32 WTSPlayerReconnectReq::proxy_bus_id() const {
  return proxy_bus_id_;
}
inline void WTSPlayerReconnectReq::set_proxy_bus_id(::google::protobuf::uint32 value) {
  set_has_proxy_bus_id();
  proxy_bus_id_ = value;
}

// -------------------------------------------------------------------

// STWPlayerReconnectRsp

// optional int32 result = 1;
inline bool STWPlayerReconnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STWPlayerReconnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STWPlayerReconnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STWPlayerReconnectRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 STWPlayerReconnectRsp::result() const {
  return result_;
}
inline void STWPlayerReconnectRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool STWPlayerReconnectRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STWPlayerReconnectRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STWPlayerReconnectRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STWPlayerReconnectRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 STWPlayerReconnectRsp::player_id() const {
  return player_id_;
}
inline void STWPlayerReconnectRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// Proto_LTWLogoutNotify

// optional uint64 player_id = 1;
inline bool Proto_LTWLogoutNotify::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LTWLogoutNotify::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LTWLogoutNotify::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LTWLogoutNotify::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_LTWLogoutNotify::player_id() const {
  return player_id_;
}
inline void Proto_LTWLogoutNotify::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// Proto_WTLLogoutNotify

// optional uint64 player_id = 1;
inline bool Proto_WTLLogoutNotify::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WTLLogoutNotify::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WTLLogoutNotify::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WTLLogoutNotify::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_WTLLogoutNotify::player_id() const {
  return player_id_;
}
inline void Proto_WTLLogoutNotify::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// Proto_WTSLogoutNotify

// optional uint64 player_id = 1;
inline bool Proto_WTSLogoutNotify::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_WTSLogoutNotify::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_WTSLogoutNotify::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_WTSLogoutNotify::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_WTSLogoutNotify::player_id() const {
  return player_id_;
}
inline void Proto_WTSLogoutNotify::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::Proto_AccountState>() {
  return ::proto_ff::Proto_AccountState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerInternal_2eproto__INCLUDED
