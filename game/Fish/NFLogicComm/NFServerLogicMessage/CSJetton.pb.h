// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSJetton.proto

#ifndef PROTOBUF_CSJetton_2eproto__INCLUDED
#define PROTOBUF_CSJetton_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSJetton_2eproto();
void protobuf_AssignDesc_CSJetton_2eproto();
void protobuf_ShutdownFile_CSJetton_2eproto();

class tbGiveBankJetton;
class Proto_CSBankGetDataReq;
class Proto_SCBankGetDataRsp;
class Proto_CSBankSaveMoneyReq;
class Proto_SCBankSaveMoneyRsp;
class Proto_CSBankGetMoneyReq;
class Proto_SCBankGetMoneyRsp;
class Proto_CSBankSetPasswordReq;
class Proto_SCBankSetPasswordRsp;
class Proto_CSBankGiveMoneyReq;
class Proto_CSBankGiveMoneyRsp;
class Proto_SCBankGiveJettonAutoPushRsp;
class Proto_CSBankGetRecordReq;
class Proto_SCBankGetRecordRsp;

// ===================================================================

class tbGiveBankJetton : public ::google::protobuf::Message {
 public:
  tbGiveBankJetton();
  virtual ~tbGiveBankJetton();

  tbGiveBankJetton(const tbGiveBankJetton& from);

  inline tbGiveBankJetton& operator=(const tbGiveBankJetton& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbGiveBankJetton& default_instance();

  void Swap(tbGiveBankJetton* other);

  // implements Message ----------------------------------------------

  tbGiveBankJetton* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbGiveBankJetton& from);
  void MergeFrom(const tbGiveBankJetton& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional uint64 give_user_id = 4;
  inline bool has_give_user_id() const;
  inline void clear_give_user_id();
  static const int kGiveUserIdFieldNumber = 4;
  inline ::google::protobuf::uint64 give_user_id() const;
  inline void set_give_user_id(::google::protobuf::uint64 value);

  // optional string give_user_name = 5;
  inline bool has_give_user_name() const;
  inline void clear_give_user_name();
  static const int kGiveUserNameFieldNumber = 5;
  inline const ::std::string& give_user_name() const;
  inline void set_give_user_name(const ::std::string& value);
  inline void set_give_user_name(const char* value);
  inline void set_give_user_name(const char* value, size_t size);
  inline ::std::string* mutable_give_user_name();
  inline ::std::string* release_give_user_name();
  inline void set_allocated_give_user_name(::std::string* give_user_name);

  // optional uint64 give_jetton = 6;
  inline bool has_give_jetton() const;
  inline void clear_give_jetton();
  static const int kGiveJettonFieldNumber = 6;
  inline ::google::protobuf::uint64 give_jetton() const;
  inline void set_give_jetton(::google::protobuf::uint64 value);

  // optional uint64 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 create_time() const;
  inline void set_create_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.tbGiveBankJetton)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_give_user_id();
  inline void clear_has_give_user_id();
  inline void set_has_give_user_name();
  inline void clear_has_give_user_name();
  inline void set_has_give_jetton();
  inline void clear_has_give_jetton();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* user_name_;
  ::google::protobuf::uint64 give_user_id_;
  ::std::string* give_user_name_;
  ::google::protobuf::uint64 give_jetton_;
  ::google::protobuf::uint64 create_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static tbGiveBankJetton* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankGetDataReq : public ::google::protobuf::Message {
 public:
  Proto_CSBankGetDataReq();
  virtual ~Proto_CSBankGetDataReq();

  Proto_CSBankGetDataReq(const Proto_CSBankGetDataReq& from);

  inline Proto_CSBankGetDataReq& operator=(const Proto_CSBankGetDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankGetDataReq& default_instance();

  void Swap(Proto_CSBankGetDataReq* other);

  // implements Message ----------------------------------------------

  Proto_CSBankGetDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankGetDataReq& from);
  void MergeFrom(const Proto_CSBankGetDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bank_password = 1;
  inline bool has_bank_password() const;
  inline void clear_bank_password();
  static const int kBankPasswordFieldNumber = 1;
  inline const ::std::string& bank_password() const;
  inline void set_bank_password(const ::std::string& value);
  inline void set_bank_password(const char* value);
  inline void set_bank_password(const char* value, size_t size);
  inline ::std::string* mutable_bank_password();
  inline ::std::string* release_bank_password();
  inline void set_allocated_bank_password(::std::string* bank_password);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankGetDataReq)
 private:
  inline void set_has_bank_password();
  inline void clear_has_bank_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* bank_password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankGetDataReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCBankGetDataRsp : public ::google::protobuf::Message {
 public:
  Proto_SCBankGetDataRsp();
  virtual ~Proto_SCBankGetDataRsp();

  Proto_SCBankGetDataRsp(const Proto_SCBankGetDataRsp& from);

  inline Proto_SCBankGetDataRsp& operator=(const Proto_SCBankGetDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCBankGetDataRsp& default_instance();

  void Swap(Proto_SCBankGetDataRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCBankGetDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCBankGetDataRsp& from);
  void MergeFrom(const Proto_SCBankGetDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 jetton = 2;
  inline bool has_jetton() const;
  inline void clear_jetton();
  static const int kJettonFieldNumber = 2;
  inline ::google::protobuf::uint64 jetton() const;
  inline void set_jetton(::google::protobuf::uint64 value);

  // optional uint64 bank_jetton = 3;
  inline bool has_bank_jetton() const;
  inline void clear_bank_jetton();
  static const int kBankJettonFieldNumber = 3;
  inline ::google::protobuf::uint64 bank_jetton() const;
  inline void set_bank_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCBankGetDataRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_jetton();
  inline void clear_has_jetton();
  inline void set_has_bank_jetton();
  inline void clear_has_bank_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 jetton_;
  ::google::protobuf::uint64 bank_jetton_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCBankGetDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankSaveMoneyReq : public ::google::protobuf::Message {
 public:
  Proto_CSBankSaveMoneyReq();
  virtual ~Proto_CSBankSaveMoneyReq();

  Proto_CSBankSaveMoneyReq(const Proto_CSBankSaveMoneyReq& from);

  inline Proto_CSBankSaveMoneyReq& operator=(const Proto_CSBankSaveMoneyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankSaveMoneyReq& default_instance();

  void Swap(Proto_CSBankSaveMoneyReq* other);

  // implements Message ----------------------------------------------

  Proto_CSBankSaveMoneyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankSaveMoneyReq& from);
  void MergeFrom(const Proto_CSBankSaveMoneyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 save_jetton = 1;
  inline bool has_save_jetton() const;
  inline void clear_save_jetton();
  static const int kSaveJettonFieldNumber = 1;
  inline ::google::protobuf::uint64 save_jetton() const;
  inline void set_save_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankSaveMoneyReq)
 private:
  inline void set_has_save_jetton();
  inline void clear_has_save_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 save_jetton_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankSaveMoneyReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCBankSaveMoneyRsp : public ::google::protobuf::Message {
 public:
  Proto_SCBankSaveMoneyRsp();
  virtual ~Proto_SCBankSaveMoneyRsp();

  Proto_SCBankSaveMoneyRsp(const Proto_SCBankSaveMoneyRsp& from);

  inline Proto_SCBankSaveMoneyRsp& operator=(const Proto_SCBankSaveMoneyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCBankSaveMoneyRsp& default_instance();

  void Swap(Proto_SCBankSaveMoneyRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCBankSaveMoneyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCBankSaveMoneyRsp& from);
  void MergeFrom(const Proto_SCBankSaveMoneyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 jetton = 2;
  inline bool has_jetton() const;
  inline void clear_jetton();
  static const int kJettonFieldNumber = 2;
  inline ::google::protobuf::uint64 jetton() const;
  inline void set_jetton(::google::protobuf::uint64 value);

  // optional uint64 bank_jetton = 3;
  inline bool has_bank_jetton() const;
  inline void clear_bank_jetton();
  static const int kBankJettonFieldNumber = 3;
  inline ::google::protobuf::uint64 bank_jetton() const;
  inline void set_bank_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCBankSaveMoneyRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_jetton();
  inline void clear_has_jetton();
  inline void set_has_bank_jetton();
  inline void clear_has_bank_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 jetton_;
  ::google::protobuf::uint64 bank_jetton_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCBankSaveMoneyRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankGetMoneyReq : public ::google::protobuf::Message {
 public:
  Proto_CSBankGetMoneyReq();
  virtual ~Proto_CSBankGetMoneyReq();

  Proto_CSBankGetMoneyReq(const Proto_CSBankGetMoneyReq& from);

  inline Proto_CSBankGetMoneyReq& operator=(const Proto_CSBankGetMoneyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankGetMoneyReq& default_instance();

  void Swap(Proto_CSBankGetMoneyReq* other);

  // implements Message ----------------------------------------------

  Proto_CSBankGetMoneyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankGetMoneyReq& from);
  void MergeFrom(const Proto_CSBankGetMoneyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 get_jetton = 1;
  inline bool has_get_jetton() const;
  inline void clear_get_jetton();
  static const int kGetJettonFieldNumber = 1;
  inline ::google::protobuf::uint64 get_jetton() const;
  inline void set_get_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankGetMoneyReq)
 private:
  inline void set_has_get_jetton();
  inline void clear_has_get_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 get_jetton_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankGetMoneyReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCBankGetMoneyRsp : public ::google::protobuf::Message {
 public:
  Proto_SCBankGetMoneyRsp();
  virtual ~Proto_SCBankGetMoneyRsp();

  Proto_SCBankGetMoneyRsp(const Proto_SCBankGetMoneyRsp& from);

  inline Proto_SCBankGetMoneyRsp& operator=(const Proto_SCBankGetMoneyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCBankGetMoneyRsp& default_instance();

  void Swap(Proto_SCBankGetMoneyRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCBankGetMoneyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCBankGetMoneyRsp& from);
  void MergeFrom(const Proto_SCBankGetMoneyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 jetton = 2;
  inline bool has_jetton() const;
  inline void clear_jetton();
  static const int kJettonFieldNumber = 2;
  inline ::google::protobuf::uint64 jetton() const;
  inline void set_jetton(::google::protobuf::uint64 value);

  // optional uint64 bank_jetton = 3;
  inline bool has_bank_jetton() const;
  inline void clear_bank_jetton();
  static const int kBankJettonFieldNumber = 3;
  inline ::google::protobuf::uint64 bank_jetton() const;
  inline void set_bank_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCBankGetMoneyRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_jetton();
  inline void clear_has_jetton();
  inline void set_has_bank_jetton();
  inline void clear_has_bank_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 jetton_;
  ::google::protobuf::uint64 bank_jetton_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCBankGetMoneyRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankSetPasswordReq : public ::google::protobuf::Message {
 public:
  Proto_CSBankSetPasswordReq();
  virtual ~Proto_CSBankSetPasswordReq();

  Proto_CSBankSetPasswordReq(const Proto_CSBankSetPasswordReq& from);

  inline Proto_CSBankSetPasswordReq& operator=(const Proto_CSBankSetPasswordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankSetPasswordReq& default_instance();

  void Swap(Proto_CSBankSetPasswordReq* other);

  // implements Message ----------------------------------------------

  Proto_CSBankSetPasswordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankSetPasswordReq& from);
  void MergeFrom(const Proto_CSBankSetPasswordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string old_password = 1;
  inline bool has_old_password() const;
  inline void clear_old_password();
  static const int kOldPasswordFieldNumber = 1;
  inline const ::std::string& old_password() const;
  inline void set_old_password(const ::std::string& value);
  inline void set_old_password(const char* value);
  inline void set_old_password(const char* value, size_t size);
  inline ::std::string* mutable_old_password();
  inline ::std::string* release_old_password();
  inline void set_allocated_old_password(::std::string* old_password);

  // optional string new_password = 2;
  inline bool has_new_password() const;
  inline void clear_new_password();
  static const int kNewPasswordFieldNumber = 2;
  inline const ::std::string& new_password() const;
  inline void set_new_password(const ::std::string& value);
  inline void set_new_password(const char* value);
  inline void set_new_password(const char* value, size_t size);
  inline ::std::string* mutable_new_password();
  inline ::std::string* release_new_password();
  inline void set_allocated_new_password(::std::string* new_password);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankSetPasswordReq)
 private:
  inline void set_has_old_password();
  inline void clear_has_old_password();
  inline void set_has_new_password();
  inline void clear_has_new_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* old_password_;
  ::std::string* new_password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankSetPasswordReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCBankSetPasswordRsp : public ::google::protobuf::Message {
 public:
  Proto_SCBankSetPasswordRsp();
  virtual ~Proto_SCBankSetPasswordRsp();

  Proto_SCBankSetPasswordRsp(const Proto_SCBankSetPasswordRsp& from);

  inline Proto_SCBankSetPasswordRsp& operator=(const Proto_SCBankSetPasswordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCBankSetPasswordRsp& default_instance();

  void Swap(Proto_SCBankSetPasswordRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCBankSetPasswordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCBankSetPasswordRsp& from);
  void MergeFrom(const Proto_SCBankSetPasswordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCBankSetPasswordRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCBankSetPasswordRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankGiveMoneyReq : public ::google::protobuf::Message {
 public:
  Proto_CSBankGiveMoneyReq();
  virtual ~Proto_CSBankGiveMoneyReq();

  Proto_CSBankGiveMoneyReq(const Proto_CSBankGiveMoneyReq& from);

  inline Proto_CSBankGiveMoneyReq& operator=(const Proto_CSBankGiveMoneyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankGiveMoneyReq& default_instance();

  void Swap(Proto_CSBankGiveMoneyReq* other);

  // implements Message ----------------------------------------------

  Proto_CSBankGiveMoneyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankGiveMoneyReq& from);
  void MergeFrom(const Proto_CSBankGiveMoneyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 give_user_id = 1;
  inline bool has_give_user_id() const;
  inline void clear_give_user_id();
  static const int kGiveUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 give_user_id() const;
  inline void set_give_user_id(::google::protobuf::uint64 value);

  // optional uint64 give_jetton = 2;
  inline bool has_give_jetton() const;
  inline void clear_give_jetton();
  static const int kGiveJettonFieldNumber = 2;
  inline ::google::protobuf::uint64 give_jetton() const;
  inline void set_give_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankGiveMoneyReq)
 private:
  inline void set_has_give_user_id();
  inline void clear_has_give_user_id();
  inline void set_has_give_jetton();
  inline void clear_has_give_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 give_user_id_;
  ::google::protobuf::uint64 give_jetton_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankGiveMoneyReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankGiveMoneyRsp : public ::google::protobuf::Message {
 public:
  Proto_CSBankGiveMoneyRsp();
  virtual ~Proto_CSBankGiveMoneyRsp();

  Proto_CSBankGiveMoneyRsp(const Proto_CSBankGiveMoneyRsp& from);

  inline Proto_CSBankGiveMoneyRsp& operator=(const Proto_CSBankGiveMoneyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankGiveMoneyRsp& default_instance();

  void Swap(Proto_CSBankGiveMoneyRsp* other);

  // implements Message ----------------------------------------------

  Proto_CSBankGiveMoneyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankGiveMoneyRsp& from);
  void MergeFrom(const Proto_CSBankGiveMoneyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto_ff.tbGiveBankJetton record = 2;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::proto_ff::tbGiveBankJetton& record() const;
  inline ::proto_ff::tbGiveBankJetton* mutable_record();
  inline ::proto_ff::tbGiveBankJetton* release_record();
  inline void set_allocated_record(::proto_ff::tbGiveBankJetton* record);

  // optional uint64 jetton = 3;
  inline bool has_jetton() const;
  inline void clear_jetton();
  static const int kJettonFieldNumber = 3;
  inline ::google::protobuf::uint64 jetton() const;
  inline void set_jetton(::google::protobuf::uint64 value);

  // optional uint64 bank_jetton = 4;
  inline bool has_bank_jetton() const;
  inline void clear_bank_jetton();
  static const int kBankJettonFieldNumber = 4;
  inline ::google::protobuf::uint64 bank_jetton() const;
  inline void set_bank_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankGiveMoneyRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_jetton();
  inline void clear_has_jetton();
  inline void set_has_bank_jetton();
  inline void clear_has_bank_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::tbGiveBankJetton* record_;
  ::google::protobuf::uint64 jetton_;
  ::google::protobuf::uint64 bank_jetton_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankGiveMoneyRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCBankGiveJettonAutoPushRsp : public ::google::protobuf::Message {
 public:
  Proto_SCBankGiveJettonAutoPushRsp();
  virtual ~Proto_SCBankGiveJettonAutoPushRsp();

  Proto_SCBankGiveJettonAutoPushRsp(const Proto_SCBankGiveJettonAutoPushRsp& from);

  inline Proto_SCBankGiveJettonAutoPushRsp& operator=(const Proto_SCBankGiveJettonAutoPushRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCBankGiveJettonAutoPushRsp& default_instance();

  void Swap(Proto_SCBankGiveJettonAutoPushRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCBankGiveJettonAutoPushRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCBankGiveJettonAutoPushRsp& from);
  void MergeFrom(const Proto_SCBankGiveJettonAutoPushRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.tbGiveBankJetton record = 2;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::proto_ff::tbGiveBankJetton& record() const;
  inline ::proto_ff::tbGiveBankJetton* mutable_record();
  inline ::proto_ff::tbGiveBankJetton* release_record();
  inline void set_allocated_record(::proto_ff::tbGiveBankJetton* record);

  // optional uint64 jetton = 3;
  inline bool has_jetton() const;
  inline void clear_jetton();
  static const int kJettonFieldNumber = 3;
  inline ::google::protobuf::uint64 jetton() const;
  inline void set_jetton(::google::protobuf::uint64 value);

  // optional uint64 bank_jetton = 4;
  inline bool has_bank_jetton() const;
  inline void clear_bank_jetton();
  static const int kBankJettonFieldNumber = 4;
  inline ::google::protobuf::uint64 bank_jetton() const;
  inline void set_bank_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCBankGiveJettonAutoPushRsp)
 private:
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_jetton();
  inline void clear_has_jetton();
  inline void set_has_bank_jetton();
  inline void clear_has_bank_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::tbGiveBankJetton* record_;
  ::google::protobuf::uint64 jetton_;
  ::google::protobuf::uint64 bank_jetton_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCBankGiveJettonAutoPushRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSBankGetRecordReq : public ::google::protobuf::Message {
 public:
  Proto_CSBankGetRecordReq();
  virtual ~Proto_CSBankGetRecordReq();

  Proto_CSBankGetRecordReq(const Proto_CSBankGetRecordReq& from);

  inline Proto_CSBankGetRecordReq& operator=(const Proto_CSBankGetRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSBankGetRecordReq& default_instance();

  void Swap(Proto_CSBankGetRecordReq* other);

  // implements Message ----------------------------------------------

  Proto_CSBankGetRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSBankGetRecordReq& from);
  void MergeFrom(const Proto_CSBankGetRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::uint32 begin() const;
  inline void set_begin(::google::protobuf::uint32 value);

  // optional uint32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::uint32 end() const;
  inline void set_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSBankGetRecordReq)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 begin_;
  ::google::protobuf::uint32 end_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSBankGetRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCBankGetRecordRsp : public ::google::protobuf::Message {
 public:
  Proto_SCBankGetRecordRsp();
  virtual ~Proto_SCBankGetRecordRsp();

  Proto_SCBankGetRecordRsp(const Proto_SCBankGetRecordRsp& from);

  inline Proto_SCBankGetRecordRsp& operator=(const Proto_SCBankGetRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCBankGetRecordRsp& default_instance();

  void Swap(Proto_SCBankGetRecordRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCBankGetRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCBankGetRecordRsp& from);
  void MergeFrom(const Proto_SCBankGetRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto_ff.tbGiveBankJetton record = 2;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::proto_ff::tbGiveBankJetton& record(int index) const;
  inline ::proto_ff::tbGiveBankJetton* mutable_record(int index);
  inline ::proto_ff::tbGiveBankJetton* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::tbGiveBankJetton >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::tbGiveBankJetton >*
      mutable_record();

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCBankGetRecordRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::tbGiveBankJetton > record_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSJetton_2eproto();
  friend void protobuf_AssignDesc_CSJetton_2eproto();
  friend void protobuf_ShutdownFile_CSJetton_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCBankGetRecordRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// tbGiveBankJetton

// required uint64 id = 1;
inline bool tbGiveBankJetton::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbGiveBankJetton::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbGiveBankJetton::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbGiveBankJetton::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 tbGiveBankJetton::id() const {
  return id_;
}
inline void tbGiveBankJetton::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 user_id = 2;
inline bool tbGiveBankJetton::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbGiveBankJetton::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbGiveBankJetton::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbGiveBankJetton::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 tbGiveBankJetton::user_id() const {
  return user_id_;
}
inline void tbGiveBankJetton::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string user_name = 3;
inline bool tbGiveBankJetton::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tbGiveBankJetton::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tbGiveBankJetton::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tbGiveBankJetton::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& tbGiveBankJetton::user_name() const {
  return *user_name_;
}
inline void tbGiveBankJetton::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void tbGiveBankJetton::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void tbGiveBankJetton::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* tbGiveBankJetton::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* tbGiveBankJetton::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void tbGiveBankJetton::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 give_user_id = 4;
inline bool tbGiveBankJetton::has_give_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tbGiveBankJetton::set_has_give_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tbGiveBankJetton::clear_has_give_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tbGiveBankJetton::clear_give_user_id() {
  give_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_give_user_id();
}
inline ::google::protobuf::uint64 tbGiveBankJetton::give_user_id() const {
  return give_user_id_;
}
inline void tbGiveBankJetton::set_give_user_id(::google::protobuf::uint64 value) {
  set_has_give_user_id();
  give_user_id_ = value;
}

// optional string give_user_name = 5;
inline bool tbGiveBankJetton::has_give_user_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tbGiveBankJetton::set_has_give_user_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tbGiveBankJetton::clear_has_give_user_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tbGiveBankJetton::clear_give_user_name() {
  if (give_user_name_ != &::google::protobuf::internal::kEmptyString) {
    give_user_name_->clear();
  }
  clear_has_give_user_name();
}
inline const ::std::string& tbGiveBankJetton::give_user_name() const {
  return *give_user_name_;
}
inline void tbGiveBankJetton::set_give_user_name(const ::std::string& value) {
  set_has_give_user_name();
  if (give_user_name_ == &::google::protobuf::internal::kEmptyString) {
    give_user_name_ = new ::std::string;
  }
  give_user_name_->assign(value);
}
inline void tbGiveBankJetton::set_give_user_name(const char* value) {
  set_has_give_user_name();
  if (give_user_name_ == &::google::protobuf::internal::kEmptyString) {
    give_user_name_ = new ::std::string;
  }
  give_user_name_->assign(value);
}
inline void tbGiveBankJetton::set_give_user_name(const char* value, size_t size) {
  set_has_give_user_name();
  if (give_user_name_ == &::google::protobuf::internal::kEmptyString) {
    give_user_name_ = new ::std::string;
  }
  give_user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* tbGiveBankJetton::mutable_give_user_name() {
  set_has_give_user_name();
  if (give_user_name_ == &::google::protobuf::internal::kEmptyString) {
    give_user_name_ = new ::std::string;
  }
  return give_user_name_;
}
inline ::std::string* tbGiveBankJetton::release_give_user_name() {
  clear_has_give_user_name();
  if (give_user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = give_user_name_;
    give_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void tbGiveBankJetton::set_allocated_give_user_name(::std::string* give_user_name) {
  if (give_user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete give_user_name_;
  }
  if (give_user_name) {
    set_has_give_user_name();
    give_user_name_ = give_user_name;
  } else {
    clear_has_give_user_name();
    give_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 give_jetton = 6;
inline bool tbGiveBankJetton::has_give_jetton() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tbGiveBankJetton::set_has_give_jetton() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tbGiveBankJetton::clear_has_give_jetton() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tbGiveBankJetton::clear_give_jetton() {
  give_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_give_jetton();
}
inline ::google::protobuf::uint64 tbGiveBankJetton::give_jetton() const {
  return give_jetton_;
}
inline void tbGiveBankJetton::set_give_jetton(::google::protobuf::uint64 value) {
  set_has_give_jetton();
  give_jetton_ = value;
}

// optional uint64 create_time = 7;
inline bool tbGiveBankJetton::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tbGiveBankJetton::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tbGiveBankJetton::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tbGiveBankJetton::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 tbGiveBankJetton::create_time() const {
  return create_time_;
}
inline void tbGiveBankJetton::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankGetDataReq

// optional string bank_password = 1;
inline bool Proto_CSBankGetDataReq::has_bank_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankGetDataReq::set_has_bank_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankGetDataReq::clear_has_bank_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankGetDataReq::clear_bank_password() {
  if (bank_password_ != &::google::protobuf::internal::kEmptyString) {
    bank_password_->clear();
  }
  clear_has_bank_password();
}
inline const ::std::string& Proto_CSBankGetDataReq::bank_password() const {
  return *bank_password_;
}
inline void Proto_CSBankGetDataReq::set_bank_password(const ::std::string& value) {
  set_has_bank_password();
  if (bank_password_ == &::google::protobuf::internal::kEmptyString) {
    bank_password_ = new ::std::string;
  }
  bank_password_->assign(value);
}
inline void Proto_CSBankGetDataReq::set_bank_password(const char* value) {
  set_has_bank_password();
  if (bank_password_ == &::google::protobuf::internal::kEmptyString) {
    bank_password_ = new ::std::string;
  }
  bank_password_->assign(value);
}
inline void Proto_CSBankGetDataReq::set_bank_password(const char* value, size_t size) {
  set_has_bank_password();
  if (bank_password_ == &::google::protobuf::internal::kEmptyString) {
    bank_password_ = new ::std::string;
  }
  bank_password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSBankGetDataReq::mutable_bank_password() {
  set_has_bank_password();
  if (bank_password_ == &::google::protobuf::internal::kEmptyString) {
    bank_password_ = new ::std::string;
  }
  return bank_password_;
}
inline ::std::string* Proto_CSBankGetDataReq::release_bank_password() {
  clear_has_bank_password();
  if (bank_password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bank_password_;
    bank_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSBankGetDataReq::set_allocated_bank_password(::std::string* bank_password) {
  if (bank_password_ != &::google::protobuf::internal::kEmptyString) {
    delete bank_password_;
  }
  if (bank_password) {
    set_has_bank_password();
    bank_password_ = bank_password;
  } else {
    clear_has_bank_password();
    bank_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCBankGetDataRsp

// optional int32 result = 1;
inline bool Proto_SCBankGetDataRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCBankGetDataRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCBankGetDataRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCBankGetDataRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCBankGetDataRsp::result() const {
  return result_;
}
inline void Proto_SCBankGetDataRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 jetton = 2;
inline bool Proto_SCBankGetDataRsp::has_jetton() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCBankGetDataRsp::set_has_jetton() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCBankGetDataRsp::clear_has_jetton() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCBankGetDataRsp::clear_jetton() {
  jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankGetDataRsp::jetton() const {
  return jetton_;
}
inline void Proto_SCBankGetDataRsp::set_jetton(::google::protobuf::uint64 value) {
  set_has_jetton();
  jetton_ = value;
}

// optional uint64 bank_jetton = 3;
inline bool Proto_SCBankGetDataRsp::has_bank_jetton() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCBankGetDataRsp::set_has_bank_jetton() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCBankGetDataRsp::clear_has_bank_jetton() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCBankGetDataRsp::clear_bank_jetton() {
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankGetDataRsp::bank_jetton() const {
  return bank_jetton_;
}
inline void Proto_SCBankGetDataRsp::set_bank_jetton(::google::protobuf::uint64 value) {
  set_has_bank_jetton();
  bank_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankSaveMoneyReq

// optional uint64 save_jetton = 1;
inline bool Proto_CSBankSaveMoneyReq::has_save_jetton() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankSaveMoneyReq::set_has_save_jetton() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankSaveMoneyReq::clear_has_save_jetton() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankSaveMoneyReq::clear_save_jetton() {
  save_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_save_jetton();
}
inline ::google::protobuf::uint64 Proto_CSBankSaveMoneyReq::save_jetton() const {
  return save_jetton_;
}
inline void Proto_CSBankSaveMoneyReq::set_save_jetton(::google::protobuf::uint64 value) {
  set_has_save_jetton();
  save_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_SCBankSaveMoneyRsp

// optional int32 result = 1;
inline bool Proto_SCBankSaveMoneyRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCBankSaveMoneyRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCBankSaveMoneyRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCBankSaveMoneyRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCBankSaveMoneyRsp::result() const {
  return result_;
}
inline void Proto_SCBankSaveMoneyRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 jetton = 2;
inline bool Proto_SCBankSaveMoneyRsp::has_jetton() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCBankSaveMoneyRsp::set_has_jetton() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCBankSaveMoneyRsp::clear_has_jetton() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCBankSaveMoneyRsp::clear_jetton() {
  jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankSaveMoneyRsp::jetton() const {
  return jetton_;
}
inline void Proto_SCBankSaveMoneyRsp::set_jetton(::google::protobuf::uint64 value) {
  set_has_jetton();
  jetton_ = value;
}

// optional uint64 bank_jetton = 3;
inline bool Proto_SCBankSaveMoneyRsp::has_bank_jetton() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCBankSaveMoneyRsp::set_has_bank_jetton() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCBankSaveMoneyRsp::clear_has_bank_jetton() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCBankSaveMoneyRsp::clear_bank_jetton() {
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankSaveMoneyRsp::bank_jetton() const {
  return bank_jetton_;
}
inline void Proto_SCBankSaveMoneyRsp::set_bank_jetton(::google::protobuf::uint64 value) {
  set_has_bank_jetton();
  bank_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankGetMoneyReq

// optional uint64 get_jetton = 1;
inline bool Proto_CSBankGetMoneyReq::has_get_jetton() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankGetMoneyReq::set_has_get_jetton() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankGetMoneyReq::clear_has_get_jetton() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankGetMoneyReq::clear_get_jetton() {
  get_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_get_jetton();
}
inline ::google::protobuf::uint64 Proto_CSBankGetMoneyReq::get_jetton() const {
  return get_jetton_;
}
inline void Proto_CSBankGetMoneyReq::set_get_jetton(::google::protobuf::uint64 value) {
  set_has_get_jetton();
  get_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_SCBankGetMoneyRsp

// optional int32 result = 1;
inline bool Proto_SCBankGetMoneyRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCBankGetMoneyRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCBankGetMoneyRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCBankGetMoneyRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCBankGetMoneyRsp::result() const {
  return result_;
}
inline void Proto_SCBankGetMoneyRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 jetton = 2;
inline bool Proto_SCBankGetMoneyRsp::has_jetton() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCBankGetMoneyRsp::set_has_jetton() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCBankGetMoneyRsp::clear_has_jetton() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCBankGetMoneyRsp::clear_jetton() {
  jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankGetMoneyRsp::jetton() const {
  return jetton_;
}
inline void Proto_SCBankGetMoneyRsp::set_jetton(::google::protobuf::uint64 value) {
  set_has_jetton();
  jetton_ = value;
}

// optional uint64 bank_jetton = 3;
inline bool Proto_SCBankGetMoneyRsp::has_bank_jetton() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCBankGetMoneyRsp::set_has_bank_jetton() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCBankGetMoneyRsp::clear_has_bank_jetton() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCBankGetMoneyRsp::clear_bank_jetton() {
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankGetMoneyRsp::bank_jetton() const {
  return bank_jetton_;
}
inline void Proto_SCBankGetMoneyRsp::set_bank_jetton(::google::protobuf::uint64 value) {
  set_has_bank_jetton();
  bank_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankSetPasswordReq

// optional string old_password = 1;
inline bool Proto_CSBankSetPasswordReq::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankSetPasswordReq::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankSetPasswordReq::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankSetPasswordReq::clear_old_password() {
  if (old_password_ != &::google::protobuf::internal::kEmptyString) {
    old_password_->clear();
  }
  clear_has_old_password();
}
inline const ::std::string& Proto_CSBankSetPasswordReq::old_password() const {
  return *old_password_;
}
inline void Proto_CSBankSetPasswordReq::set_old_password(const ::std::string& value) {
  set_has_old_password();
  if (old_password_ == &::google::protobuf::internal::kEmptyString) {
    old_password_ = new ::std::string;
  }
  old_password_->assign(value);
}
inline void Proto_CSBankSetPasswordReq::set_old_password(const char* value) {
  set_has_old_password();
  if (old_password_ == &::google::protobuf::internal::kEmptyString) {
    old_password_ = new ::std::string;
  }
  old_password_->assign(value);
}
inline void Proto_CSBankSetPasswordReq::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  if (old_password_ == &::google::protobuf::internal::kEmptyString) {
    old_password_ = new ::std::string;
  }
  old_password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSBankSetPasswordReq::mutable_old_password() {
  set_has_old_password();
  if (old_password_ == &::google::protobuf::internal::kEmptyString) {
    old_password_ = new ::std::string;
  }
  return old_password_;
}
inline ::std::string* Proto_CSBankSetPasswordReq::release_old_password() {
  clear_has_old_password();
  if (old_password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = old_password_;
    old_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSBankSetPasswordReq::set_allocated_old_password(::std::string* old_password) {
  if (old_password_ != &::google::protobuf::internal::kEmptyString) {
    delete old_password_;
  }
  if (old_password) {
    set_has_old_password();
    old_password_ = old_password;
  } else {
    clear_has_old_password();
    old_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string new_password = 2;
inline bool Proto_CSBankSetPasswordReq::has_new_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSBankSetPasswordReq::set_has_new_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSBankSetPasswordReq::clear_has_new_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSBankSetPasswordReq::clear_new_password() {
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    new_password_->clear();
  }
  clear_has_new_password();
}
inline const ::std::string& Proto_CSBankSetPasswordReq::new_password() const {
  return *new_password_;
}
inline void Proto_CSBankSetPasswordReq::set_new_password(const ::std::string& value) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(value);
}
inline void Proto_CSBankSetPasswordReq::set_new_password(const char* value) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(value);
}
inline void Proto_CSBankSetPasswordReq::set_new_password(const char* value, size_t size) {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  new_password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSBankSetPasswordReq::mutable_new_password() {
  set_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    new_password_ = new ::std::string;
  }
  return new_password_;
}
inline ::std::string* Proto_CSBankSetPasswordReq::release_new_password() {
  clear_has_new_password();
  if (new_password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_password_;
    new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSBankSetPasswordReq::set_allocated_new_password(::std::string* new_password) {
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    delete new_password_;
  }
  if (new_password) {
    set_has_new_password();
    new_password_ = new_password;
  } else {
    clear_has_new_password();
    new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCBankSetPasswordRsp

// optional int32 result = 1;
inline bool Proto_SCBankSetPasswordRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCBankSetPasswordRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCBankSetPasswordRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCBankSetPasswordRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCBankSetPasswordRsp::result() const {
  return result_;
}
inline void Proto_SCBankSetPasswordRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankGiveMoneyReq

// optional uint64 give_user_id = 1;
inline bool Proto_CSBankGiveMoneyReq::has_give_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankGiveMoneyReq::set_has_give_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankGiveMoneyReq::clear_has_give_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankGiveMoneyReq::clear_give_user_id() {
  give_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_give_user_id();
}
inline ::google::protobuf::uint64 Proto_CSBankGiveMoneyReq::give_user_id() const {
  return give_user_id_;
}
inline void Proto_CSBankGiveMoneyReq::set_give_user_id(::google::protobuf::uint64 value) {
  set_has_give_user_id();
  give_user_id_ = value;
}

// optional uint64 give_jetton = 2;
inline bool Proto_CSBankGiveMoneyReq::has_give_jetton() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSBankGiveMoneyReq::set_has_give_jetton() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSBankGiveMoneyReq::clear_has_give_jetton() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSBankGiveMoneyReq::clear_give_jetton() {
  give_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_give_jetton();
}
inline ::google::protobuf::uint64 Proto_CSBankGiveMoneyReq::give_jetton() const {
  return give_jetton_;
}
inline void Proto_CSBankGiveMoneyReq::set_give_jetton(::google::protobuf::uint64 value) {
  set_has_give_jetton();
  give_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankGiveMoneyRsp

// optional int32 result = 1;
inline bool Proto_CSBankGiveMoneyRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankGiveMoneyRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_CSBankGiveMoneyRsp::result() const {
  return result_;
}
inline void Proto_CSBankGiveMoneyRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto_ff.tbGiveBankJetton record = 2;
inline bool Proto_CSBankGiveMoneyRsp::has_record() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSBankGiveMoneyRsp::set_has_record() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_has_record() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_record() {
  if (record_ != NULL) record_->::proto_ff::tbGiveBankJetton::Clear();
  clear_has_record();
}
inline const ::proto_ff::tbGiveBankJetton& Proto_CSBankGiveMoneyRsp::record() const {
  return record_ != NULL ? *record_ : *default_instance_->record_;
}
inline ::proto_ff::tbGiveBankJetton* Proto_CSBankGiveMoneyRsp::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::proto_ff::tbGiveBankJetton;
  return record_;
}
inline ::proto_ff::tbGiveBankJetton* Proto_CSBankGiveMoneyRsp::release_record() {
  clear_has_record();
  ::proto_ff::tbGiveBankJetton* temp = record_;
  record_ = NULL;
  return temp;
}
inline void Proto_CSBankGiveMoneyRsp::set_allocated_record(::proto_ff::tbGiveBankJetton* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
}

// optional uint64 jetton = 3;
inline bool Proto_CSBankGiveMoneyRsp::has_jetton() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_CSBankGiveMoneyRsp::set_has_jetton() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_has_jetton() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_jetton() {
  jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_jetton();
}
inline ::google::protobuf::uint64 Proto_CSBankGiveMoneyRsp::jetton() const {
  return jetton_;
}
inline void Proto_CSBankGiveMoneyRsp::set_jetton(::google::protobuf::uint64 value) {
  set_has_jetton();
  jetton_ = value;
}

// optional uint64 bank_jetton = 4;
inline bool Proto_CSBankGiveMoneyRsp::has_bank_jetton() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_CSBankGiveMoneyRsp::set_has_bank_jetton() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_has_bank_jetton() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_CSBankGiveMoneyRsp::clear_bank_jetton() {
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_jetton();
}
inline ::google::protobuf::uint64 Proto_CSBankGiveMoneyRsp::bank_jetton() const {
  return bank_jetton_;
}
inline void Proto_CSBankGiveMoneyRsp::set_bank_jetton(::google::protobuf::uint64 value) {
  set_has_bank_jetton();
  bank_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_SCBankGiveJettonAutoPushRsp

// optional .proto_ff.tbGiveBankJetton record = 2;
inline bool Proto_SCBankGiveJettonAutoPushRsp::has_record() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::set_has_record() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::clear_has_record() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::clear_record() {
  if (record_ != NULL) record_->::proto_ff::tbGiveBankJetton::Clear();
  clear_has_record();
}
inline const ::proto_ff::tbGiveBankJetton& Proto_SCBankGiveJettonAutoPushRsp::record() const {
  return record_ != NULL ? *record_ : *default_instance_->record_;
}
inline ::proto_ff::tbGiveBankJetton* Proto_SCBankGiveJettonAutoPushRsp::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::proto_ff::tbGiveBankJetton;
  return record_;
}
inline ::proto_ff::tbGiveBankJetton* Proto_SCBankGiveJettonAutoPushRsp::release_record() {
  clear_has_record();
  ::proto_ff::tbGiveBankJetton* temp = record_;
  record_ = NULL;
  return temp;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::set_allocated_record(::proto_ff::tbGiveBankJetton* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
}

// optional uint64 jetton = 3;
inline bool Proto_SCBankGiveJettonAutoPushRsp::has_jetton() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::set_has_jetton() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::clear_has_jetton() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::clear_jetton() {
  jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankGiveJettonAutoPushRsp::jetton() const {
  return jetton_;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::set_jetton(::google::protobuf::uint64 value) {
  set_has_jetton();
  jetton_ = value;
}

// optional uint64 bank_jetton = 4;
inline bool Proto_SCBankGiveJettonAutoPushRsp::has_bank_jetton() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::set_has_bank_jetton() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::clear_has_bank_jetton() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::clear_bank_jetton() {
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_jetton();
}
inline ::google::protobuf::uint64 Proto_SCBankGiveJettonAutoPushRsp::bank_jetton() const {
  return bank_jetton_;
}
inline void Proto_SCBankGiveJettonAutoPushRsp::set_bank_jetton(::google::protobuf::uint64 value) {
  set_has_bank_jetton();
  bank_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_CSBankGetRecordReq

// optional uint32 begin = 1;
inline bool Proto_CSBankGetRecordReq::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSBankGetRecordReq::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSBankGetRecordReq::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSBankGetRecordReq::clear_begin() {
  begin_ = 0u;
  clear_has_begin();
}
inline ::google::protobuf::uint32 Proto_CSBankGetRecordReq::begin() const {
  return begin_;
}
inline void Proto_CSBankGetRecordReq::set_begin(::google::protobuf::uint32 value) {
  set_has_begin();
  begin_ = value;
}

// optional uint32 end = 2;
inline bool Proto_CSBankGetRecordReq::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_CSBankGetRecordReq::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_CSBankGetRecordReq::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_CSBankGetRecordReq::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 Proto_CSBankGetRecordReq::end() const {
  return end_;
}
inline void Proto_CSBankGetRecordReq::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// Proto_SCBankGetRecordRsp

// optional int32 result = 1;
inline bool Proto_SCBankGetRecordRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCBankGetRecordRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCBankGetRecordRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCBankGetRecordRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCBankGetRecordRsp::result() const {
  return result_;
}
inline void Proto_SCBankGetRecordRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto_ff.tbGiveBankJetton record = 2;
inline int Proto_SCBankGetRecordRsp::record_size() const {
  return record_.size();
}
inline void Proto_SCBankGetRecordRsp::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::tbGiveBankJetton& Proto_SCBankGetRecordRsp::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::tbGiveBankJetton* Proto_SCBankGetRecordRsp::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::tbGiveBankJetton* Proto_SCBankGetRecordRsp::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::tbGiveBankJetton >&
Proto_SCBankGetRecordRsp::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::tbGiveBankJetton >*
Proto_SCBankGetRecordRsp::mutable_record() {
  return &record_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSJetton_2eproto__INCLUDED
