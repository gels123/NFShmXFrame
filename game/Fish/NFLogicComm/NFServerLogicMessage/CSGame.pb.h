// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSGame.proto

#ifndef PROTOBUF_CSGame_2eproto__INCLUDED
#define PROTOBUF_CSGame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSGame_2eproto();
void protobuf_AssignDesc_CSGame_2eproto();
void protobuf_ShutdownFile_CSGame_2eproto();

class RoomStatusInfo;
class GetRoomInfoReq;
class GetRoomInfoRsp;
class EnterGameAutoJoinReq;
class EnterGameAutoJoinRsp;
class EnterGameReq;
class EnterGameRsp;
class UserRecomeReq;
class UserRecomeRsp;
class GameChairInfo;
class GameDeskInfo;
class DeskListReq;
class DeskListRsp;
class ChairCheckReq;
class ChairCheckRsp;
class ExitRoomReq;
class ExitRoomRsp;
class ExitGameReq;
class ExitGameRsp;
class GameRoomInfo_1;
class GameChairInfo_1;
class GameDeskInfo_1;
class GetRoomListReq_1;
class GetRoomListRsp_1;
class GetDeskListReq_1;
class GetDeskListRsp_1;
class NotifyPlayerLeaveGame;
class MoneyChangeNotify;
class OnePaoMaDengInfo;
class Proto_SCPaoMaDengNotify;
class Proto_CSRedeemCodeReq;
class Proto_SCRedeemCodeRsp;

// ===================================================================

class RoomStatusInfo : public ::google::protobuf::Message {
 public:
  RoomStatusInfo();
  virtual ~RoomStatusInfo();

  RoomStatusInfo(const RoomStatusInfo& from);

  inline RoomStatusInfo& operator=(const RoomStatusInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomStatusInfo& default_instance();

  void Swap(RoomStatusInfo* other);

  // implements Message ----------------------------------------------

  RoomStatusInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomStatusInfo& from);
  void MergeFrom(const RoomStatusInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional string room_name = 3;
  inline bool has_room_name() const;
  inline void clear_room_name();
  static const int kRoomNameFieldNumber = 3;
  inline const ::std::string& room_name() const;
  inline void set_room_name(const ::std::string& value);
  inline void set_room_name(const char* value);
  inline void set_room_name(const char* value, size_t size);
  inline ::std::string* mutable_room_name();
  inline ::std::string* release_room_name();
  inline void set_allocated_room_name(::std::string* room_name);

  // optional uint64 enter_min = 4;
  inline bool has_enter_min() const;
  inline void clear_enter_min();
  static const int kEnterMinFieldNumber = 4;
  inline ::google::protobuf::uint64 enter_min() const;
  inline void set_enter_min(::google::protobuf::uint64 value);

  // optional uint64 enter_max = 5;
  inline bool has_enter_max() const;
  inline void clear_enter_max();
  static const int kEnterMaxFieldNumber = 5;
  inline ::google::protobuf::uint64 enter_max() const;
  inline void set_enter_max(::google::protobuf::uint64 value);

  // optional uint32 status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoomStatusInfo)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_name();
  inline void clear_has_room_name();
  inline void set_has_enter_min();
  inline void clear_has_enter_min();
  inline void set_has_enter_max();
  inline void clear_has_enter_max();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::std::string* room_name_;
  ::google::protobuf::uint64 enter_min_;
  ::google::protobuf::uint64 enter_max_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static RoomStatusInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomInfoReq : public ::google::protobuf::Message {
 public:
  GetRoomInfoReq();
  virtual ~GetRoomInfoReq();

  GetRoomInfoReq(const GetRoomInfoReq& from);

  inline GetRoomInfoReq& operator=(const GetRoomInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomInfoReq& default_instance();

  void Swap(GetRoomInfoReq* other);

  // implements Message ----------------------------------------------

  GetRoomInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomInfoReq& from);
  void MergeFrom(const GetRoomInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GetRoomInfoReq)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GetRoomInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomInfoRsp : public ::google::protobuf::Message {
 public:
  GetRoomInfoRsp();
  virtual ~GetRoomInfoRsp();

  GetRoomInfoRsp(const GetRoomInfoRsp& from);

  inline GetRoomInfoRsp& operator=(const GetRoomInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomInfoRsp& default_instance();

  void Swap(GetRoomInfoRsp* other);

  // implements Message ----------------------------------------------

  GetRoomInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomInfoRsp& from);
  void MergeFrom(const GetRoomInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto_ff.RoomStatusInfo rooms = 2;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 2;
  inline const ::proto_ff::RoomStatusInfo& rooms(int index) const;
  inline ::proto_ff::RoomStatusInfo* mutable_rooms(int index);
  inline ::proto_ff::RoomStatusInfo* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoomStatusInfo >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoomStatusInfo >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:proto_ff.GetRoomInfoRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RoomStatusInfo > rooms_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GetRoomInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class EnterGameAutoJoinReq : public ::google::protobuf::Message {
 public:
  EnterGameAutoJoinReq();
  virtual ~EnterGameAutoJoinReq();

  EnterGameAutoJoinReq(const EnterGameAutoJoinReq& from);

  inline EnterGameAutoJoinReq& operator=(const EnterGameAutoJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGameAutoJoinReq& default_instance();

  void Swap(EnterGameAutoJoinReq* other);

  // implements Message ----------------------------------------------

  EnterGameAutoJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGameAutoJoinReq& from);
  void MergeFrom(const EnterGameAutoJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 3;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 3;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional uint64 player_id = 4;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 proxy_id = 5;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 5;
  inline ::google::protobuf::uint32 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterGameAutoJoinReq)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint32 proxy_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static EnterGameAutoJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterGameAutoJoinRsp : public ::google::protobuf::Message {
 public:
  EnterGameAutoJoinRsp();
  virtual ~EnterGameAutoJoinRsp();

  EnterGameAutoJoinRsp(const EnterGameAutoJoinRsp& from);

  inline EnterGameAutoJoinRsp& operator=(const EnterGameAutoJoinRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGameAutoJoinRsp& default_instance();

  void Swap(EnterGameAutoJoinRsp* other);

  // implements Message ----------------------------------------------

  EnterGameAutoJoinRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGameAutoJoinRsp& from);
  void MergeFrom(const EnterGameAutoJoinRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 4;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 4;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional uint32 chair_id = 5;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 5;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional uint64 player_id = 6;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 6;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_bus_id = 7;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 7;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterGameAutoJoinRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 chair_id_;
  ::google::protobuf::uint32 game_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static EnterGameAutoJoinRsp* default_instance_;
};
// -------------------------------------------------------------------

class EnterGameReq : public ::google::protobuf::Message {
 public:
  EnterGameReq();
  virtual ~EnterGameReq();

  EnterGameReq(const EnterGameReq& from);

  inline EnterGameReq& operator=(const EnterGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGameReq& default_instance();

  void Swap(EnterGameReq* other);

  // implements Message ----------------------------------------------

  EnterGameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGameReq& from);
  void MergeFrom(const EnterGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 3;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 3;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional uint32 chair_id = 4;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 4;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional uint32 proxy_id = 5;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 5;
  inline ::google::protobuf::uint32 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint32 value);

  // optional uint32 logic_id = 6;
  inline bool has_logic_id() const;
  inline void clear_logic_id();
  static const int kLogicIdFieldNumber = 6;
  inline ::google::protobuf::uint32 logic_id() const;
  inline void set_logic_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterGameReq)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();
  inline void set_has_logic_id();
  inline void clear_has_logic_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint32 chair_id_;
  ::google::protobuf::uint32 proxy_id_;
  ::google::protobuf::uint32 logic_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static EnterGameReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterGameRsp : public ::google::protobuf::Message {
 public:
  EnterGameRsp();
  virtual ~EnterGameRsp();

  EnterGameRsp(const EnterGameRsp& from);

  inline EnterGameRsp& operator=(const EnterGameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGameRsp& default_instance();

  void Swap(EnterGameRsp* other);

  // implements Message ----------------------------------------------

  EnterGameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGameRsp& from);
  void MergeFrom(const EnterGameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint32 chair_count = 2;
  inline bool has_chair_count() const;
  inline void clear_chair_count();
  static const int kChairCountFieldNumber = 2;
  inline ::google::protobuf::uint32 chair_count() const;
  inline void set_chair_count(::google::protobuf::uint32 value);

  // optional uint32 my_chair_id = 3;
  inline bool has_my_chair_id() const;
  inline void clear_my_chair_id();
  static const int kMyChairIdFieldNumber = 3;
  inline ::google::protobuf::uint32 my_chair_id() const;
  inline void set_my_chair_id(::google::protobuf::uint32 value);

  // optional uint32 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 5;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 5;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 6;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 6;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // optional uint64 player_id = 7;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 7;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterGameRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_chair_count();
  inline void clear_has_chair_count();
  inline void set_has_my_chair_id();
  inline void clear_has_my_chair_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 chair_count_;
  ::google::protobuf::uint32 my_chair_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;
  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static EnterGameRsp* default_instance_;
};
// -------------------------------------------------------------------

class UserRecomeReq : public ::google::protobuf::Message {
 public:
  UserRecomeReq();
  virtual ~UserRecomeReq();

  UserRecomeReq(const UserRecomeReq& from);

  inline UserRecomeReq& operator=(const UserRecomeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRecomeReq& default_instance();

  void Swap(UserRecomeReq* other);

  // implements Message ----------------------------------------------

  UserRecomeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRecomeReq& from);
  void MergeFrom(const UserRecomeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reserved = 1;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 1;
  inline ::google::protobuf::uint32 reserved() const;
  inline void set_reserved(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.UserRecomeReq)
 private:
  inline void set_has_reserved();
  inline void clear_has_reserved();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reserved_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static UserRecomeReq* default_instance_;
};
// -------------------------------------------------------------------

class UserRecomeRsp : public ::google::protobuf::Message {
 public:
  UserRecomeRsp();
  virtual ~UserRecomeRsp();

  UserRecomeRsp(const UserRecomeRsp& from);

  inline UserRecomeRsp& operator=(const UserRecomeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRecomeRsp& default_instance();

  void Swap(UserRecomeRsp* other);

  // implements Message ----------------------------------------------

  UserRecomeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserRecomeRsp& from);
  void MergeFrom(const UserRecomeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.UserRecomeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static UserRecomeRsp* default_instance_;
};
// -------------------------------------------------------------------

class GameChairInfo : public ::google::protobuf::Message {
 public:
  GameChairInfo();
  virtual ~GameChairInfo();

  GameChairInfo(const GameChairInfo& from);

  inline GameChairInfo& operator=(const GameChairInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameChairInfo& default_instance();

  void Swap(GameChairInfo* other);

  // implements Message ----------------------------------------------

  GameChairInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameChairInfo& from);
  void MergeFrom(const GameChairInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional uint32 chair_status = 2;
  inline bool has_chair_status() const;
  inline void clear_chair_status();
  static const int kChairStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 chair_status() const;
  inline void set_chair_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GameChairInfo)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_chair_status();
  inline void clear_has_chair_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chair_id_;
  ::google::protobuf::uint32 chair_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GameChairInfo* default_instance_;
};
// -------------------------------------------------------------------

class GameDeskInfo : public ::google::protobuf::Message {
 public:
  GameDeskInfo();
  virtual ~GameDeskInfo();

  GameDeskInfo(const GameDeskInfo& from);

  inline GameDeskInfo& operator=(const GameDeskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameDeskInfo& default_instance();

  void Swap(GameDeskInfo* other);

  // implements Message ----------------------------------------------

  GameDeskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameDeskInfo& from);
  void MergeFrom(const GameDeskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 desk_id = 1;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional string desk_name = 2;
  inline bool has_desk_name() const;
  inline void clear_desk_name();
  static const int kDeskNameFieldNumber = 2;
  inline const ::std::string& desk_name() const;
  inline void set_desk_name(const ::std::string& value);
  inline void set_desk_name(const char* value);
  inline void set_desk_name(const char* value, size_t size);
  inline ::std::string* mutable_desk_name();
  inline ::std::string* release_desk_name();
  inline void set_allocated_desk_name(::std::string* desk_name);

  // optional uint32 desk_status = 3;
  inline bool has_desk_status() const;
  inline void clear_desk_status();
  static const int kDeskStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 desk_status() const;
  inline void set_desk_status(::google::protobuf::uint32 value);

  // optional uint32 chair_count = 4;
  inline bool has_chair_count() const;
  inline void clear_chair_count();
  static const int kChairCountFieldNumber = 4;
  inline ::google::protobuf::uint32 chair_count() const;
  inline void set_chair_count(::google::protobuf::uint32 value);

  // repeated .proto_ff.GameChairInfo chairs = 5;
  inline int chairs_size() const;
  inline void clear_chairs();
  static const int kChairsFieldNumber = 5;
  inline const ::proto_ff::GameChairInfo& chairs(int index) const;
  inline ::proto_ff::GameChairInfo* mutable_chairs(int index);
  inline ::proto_ff::GameChairInfo* add_chairs();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo >&
      chairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo >*
      mutable_chairs();

  // @@protoc_insertion_point(class_scope:proto_ff.GameDeskInfo)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_desk_name();
  inline void clear_has_desk_name();
  inline void set_has_desk_status();
  inline void clear_has_desk_status();
  inline void set_has_chair_count();
  inline void clear_has_chair_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* desk_name_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint32 desk_status_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo > chairs_;
  ::google::protobuf::uint32 chair_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GameDeskInfo* default_instance_;
};
// -------------------------------------------------------------------

class DeskListReq : public ::google::protobuf::Message {
 public:
  DeskListReq();
  virtual ~DeskListReq();

  DeskListReq(const DeskListReq& from);

  inline DeskListReq& operator=(const DeskListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeskListReq& default_instance();

  void Swap(DeskListReq* other);

  // implements Message ----------------------------------------------

  DeskListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeskListReq& from);
  void MergeFrom(const DeskListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint64 cur_money = 3;
  inline bool has_cur_money() const;
  inline void clear_cur_money();
  static const int kCurMoneyFieldNumber = 3;
  inline ::google::protobuf::uint64 cur_money() const;
  inline void set_cur_money(::google::protobuf::uint64 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeskListReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_cur_money();
  inline void clear_has_cur_money();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint64 cur_money_;
  ::google::protobuf::uint32 game_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static DeskListReq* default_instance_;
};
// -------------------------------------------------------------------

class DeskListRsp : public ::google::protobuf::Message {
 public:
  DeskListRsp();
  virtual ~DeskListRsp();

  DeskListRsp(const DeskListRsp& from);

  inline DeskListRsp& operator=(const DeskListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeskListRsp& default_instance();

  void Swap(DeskListRsp* other);

  // implements Message ----------------------------------------------

  DeskListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeskListRsp& from);
  void MergeFrom(const DeskListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .proto_ff.GameDeskInfo desks = 2;
  inline int desks_size() const;
  inline void clear_desks();
  static const int kDesksFieldNumber = 2;
  inline const ::proto_ff::GameDeskInfo& desks(int index) const;
  inline ::proto_ff::GameDeskInfo* mutable_desks(int index);
  inline ::proto_ff::GameDeskInfo* add_desks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo >&
      desks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo >*
      mutable_desks();

  // @@protoc_insertion_point(class_scope:proto_ff.DeskListRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo > desks_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static DeskListRsp* default_instance_;
};
// -------------------------------------------------------------------

class ChairCheckReq : public ::google::protobuf::Message {
 public:
  ChairCheckReq();
  virtual ~ChairCheckReq();

  ChairCheckReq(const ChairCheckReq& from);

  inline ChairCheckReq& operator=(const ChairCheckReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChairCheckReq& default_instance();

  void Swap(ChairCheckReq* other);

  // implements Message ----------------------------------------------

  ChairCheckReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChairCheckReq& from);
  void MergeFrom(const ChairCheckReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 3;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 3;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional uint32 chair_id = 4;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 4;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChairCheckReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static ChairCheckReq* default_instance_;
};
// -------------------------------------------------------------------

class ChairCheckRsp : public ::google::protobuf::Message {
 public:
  ChairCheckRsp();
  virtual ~ChairCheckRsp();

  ChairCheckRsp(const ChairCheckRsp& from);

  inline ChairCheckRsp& operator=(const ChairCheckRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChairCheckRsp& default_instance();

  void Swap(ChairCheckRsp* other);

  // implements Message ----------------------------------------------

  ChairCheckRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChairCheckRsp& from);
  void MergeFrom(const ChairCheckRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChairCheckRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static ChairCheckRsp* default_instance_;
};
// -------------------------------------------------------------------

class ExitRoomReq : public ::google::protobuf::Message {
 public:
  ExitRoomReq();
  virtual ~ExitRoomReq();

  ExitRoomReq(const ExitRoomReq& from);

  inline ExitRoomReq& operator=(const ExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRoomReq& default_instance();

  void Swap(ExitRoomReq* other);

  // implements Message ----------------------------------------------

  ExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitRoomReq& from);
  void MergeFrom(const ExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExitRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static ExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class ExitRoomRsp : public ::google::protobuf::Message {
 public:
  ExitRoomRsp();
  virtual ~ExitRoomRsp();

  ExitRoomRsp(const ExitRoomRsp& from);

  inline ExitRoomRsp& operator=(const ExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRoomRsp& default_instance();

  void Swap(ExitRoomRsp* other);

  // implements Message ----------------------------------------------

  ExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitRoomRsp& from);
  void MergeFrom(const ExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExitRoomRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static ExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class ExitGameReq : public ::google::protobuf::Message {
 public:
  ExitGameReq();
  virtual ~ExitGameReq();

  ExitGameReq(const ExitGameReq& from);

  inline ExitGameReq& operator=(const ExitGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGameReq& default_instance();

  void Swap(ExitGameReq* other);

  // implements Message ----------------------------------------------

  ExitGameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGameReq& from);
  void MergeFrom(const ExitGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reserved = 1;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 1;
  inline ::google::protobuf::uint32 reserved() const;
  inline void set_reserved(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExitGameReq)
 private:
  inline void set_has_reserved();
  inline void clear_has_reserved();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reserved_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static ExitGameReq* default_instance_;
};
// -------------------------------------------------------------------

class ExitGameRsp : public ::google::protobuf::Message {
 public:
  ExitGameRsp();
  virtual ~ExitGameRsp();

  ExitGameRsp(const ExitGameRsp& from);

  inline ExitGameRsp& operator=(const ExitGameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGameRsp& default_instance();

  void Swap(ExitGameRsp* other);

  // implements Message ----------------------------------------------

  ExitGameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGameRsp& from);
  void MergeFrom(const ExitGameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 exit_type = 1;
  inline bool has_exit_type() const;
  inline void clear_exit_type();
  static const int kExitTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 exit_type() const;
  inline void set_exit_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ExitGameRsp)
 private:
  inline void set_has_exit_type();
  inline void clear_has_exit_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 exit_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static ExitGameRsp* default_instance_;
};
// -------------------------------------------------------------------

class GameRoomInfo_1 : public ::google::protobuf::Message {
 public:
  GameRoomInfo_1();
  virtual ~GameRoomInfo_1();

  GameRoomInfo_1(const GameRoomInfo_1& from);

  inline GameRoomInfo_1& operator=(const GameRoomInfo_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRoomInfo_1& default_instance();

  void Swap(GameRoomInfo_1* other);

  // implements Message ----------------------------------------------

  GameRoomInfo_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRoomInfo_1& from);
  void MergeFrom(const GameRoomInfo_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional string room_name = 2;
  inline bool has_room_name() const;
  inline void clear_room_name();
  static const int kRoomNameFieldNumber = 2;
  inline const ::std::string& room_name() const;
  inline void set_room_name(const ::std::string& value);
  inline void set_room_name(const char* value);
  inline void set_room_name(const char* value, size_t size);
  inline ::std::string* mutable_room_name();
  inline ::std::string* release_room_name();
  inline void set_allocated_room_name(::std::string* room_name);

  // optional uint32 min_coins = 3;
  inline bool has_min_coins() const;
  inline void clear_min_coins();
  static const int kMinCoinsFieldNumber = 3;
  inline ::google::protobuf::uint32 min_coins() const;
  inline void set_min_coins(::google::protobuf::uint32 value);

  // optional uint32 online_count = 4;
  inline bool has_online_count() const;
  inline void clear_online_count();
  static const int kOnlineCountFieldNumber = 4;
  inline ::google::protobuf::uint32 online_count() const;
  inline void set_online_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GameRoomInfo_1)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_name();
  inline void clear_has_room_name();
  inline void set_has_min_coins();
  inline void clear_has_min_coins();
  inline void set_has_online_count();
  inline void clear_has_online_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* room_name_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 min_coins_;
  ::google::protobuf::uint32 online_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GameRoomInfo_1* default_instance_;
};
// -------------------------------------------------------------------

class GameChairInfo_1 : public ::google::protobuf::Message {
 public:
  GameChairInfo_1();
  virtual ~GameChairInfo_1();

  GameChairInfo_1(const GameChairInfo_1& from);

  inline GameChairInfo_1& operator=(const GameChairInfo_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameChairInfo_1& default_instance();

  void Swap(GameChairInfo_1* other);

  // implements Message ----------------------------------------------

  GameChairInfo_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameChairInfo_1& from);
  void MergeFrom(const GameChairInfo_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GameChairInfo_1)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GameChairInfo_1* default_instance_;
};
// -------------------------------------------------------------------

class GameDeskInfo_1 : public ::google::protobuf::Message {
 public:
  GameDeskInfo_1();
  virtual ~GameDeskInfo_1();

  GameDeskInfo_1(const GameDeskInfo_1& from);

  inline GameDeskInfo_1& operator=(const GameDeskInfo_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameDeskInfo_1& default_instance();

  void Swap(GameDeskInfo_1* other);

  // implements Message ----------------------------------------------

  GameDeskInfo_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameDeskInfo_1& from);
  void MergeFrom(const GameDeskInfo_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 desk_id = 1;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional string desk_name = 2;
  inline bool has_desk_name() const;
  inline void clear_desk_name();
  static const int kDeskNameFieldNumber = 2;
  inline const ::std::string& desk_name() const;
  inline void set_desk_name(const ::std::string& value);
  inline void set_desk_name(const char* value);
  inline void set_desk_name(const char* value, size_t size);
  inline ::std::string* mutable_desk_name();
  inline ::std::string* release_desk_name();
  inline void set_allocated_desk_name(::std::string* desk_name);

  // optional uint32 chair_count = 3;
  inline bool has_chair_count() const;
  inline void clear_chair_count();
  static const int kChairCountFieldNumber = 3;
  inline ::google::protobuf::uint32 chair_count() const;
  inline void set_chair_count(::google::protobuf::uint32 value);

  // repeated .proto_ff.GameChairInfo_1 chars = 4;
  inline int chars_size() const;
  inline void clear_chars();
  static const int kCharsFieldNumber = 4;
  inline const ::proto_ff::GameChairInfo_1& chars(int index) const;
  inline ::proto_ff::GameChairInfo_1* mutable_chars(int index);
  inline ::proto_ff::GameChairInfo_1* add_chars();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo_1 >&
      chars() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo_1 >*
      mutable_chars();

  // @@protoc_insertion_point(class_scope:proto_ff.GameDeskInfo_1)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_desk_name();
  inline void clear_has_desk_name();
  inline void set_has_chair_count();
  inline void clear_has_chair_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* desk_name_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint32 chair_count_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo_1 > chars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GameDeskInfo_1* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomListReq_1 : public ::google::protobuf::Message {
 public:
  GetRoomListReq_1();
  virtual ~GetRoomListReq_1();

  GetRoomListReq_1(const GetRoomListReq_1& from);

  inline GetRoomListReq_1& operator=(const GetRoomListReq_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomListReq_1& default_instance();

  void Swap(GetRoomListReq_1* other);

  // implements Message ----------------------------------------------

  GetRoomListReq_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomListReq_1& from);
  void MergeFrom(const GetRoomListReq_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GetRoomListReq_1)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GetRoomListReq_1* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomListRsp_1 : public ::google::protobuf::Message {
 public:
  GetRoomListRsp_1();
  virtual ~GetRoomListRsp_1();

  GetRoomListRsp_1(const GetRoomListRsp_1& from);

  inline GetRoomListRsp_1& operator=(const GetRoomListRsp_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomListRsp_1& default_instance();

  void Swap(GetRoomListRsp_1* other);

  // implements Message ----------------------------------------------

  GetRoomListRsp_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomListRsp_1& from);
  void MergeFrom(const GetRoomListRsp_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GameRoomInfo_1 rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::proto_ff::GameRoomInfo_1& rooms(int index) const;
  inline ::proto_ff::GameRoomInfo_1* mutable_rooms(int index);
  inline ::proto_ff::GameRoomInfo_1* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameRoomInfo_1 >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameRoomInfo_1 >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:proto_ff.GetRoomListRsp_1)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GameRoomInfo_1 > rooms_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GetRoomListRsp_1* default_instance_;
};
// -------------------------------------------------------------------

class GetDeskListReq_1 : public ::google::protobuf::Message {
 public:
  GetDeskListReq_1();
  virtual ~GetDeskListReq_1();

  GetDeskListReq_1(const GetDeskListReq_1& from);

  inline GetDeskListReq_1& operator=(const GetDeskListReq_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDeskListReq_1& default_instance();

  void Swap(GetDeskListReq_1* other);

  // implements Message ----------------------------------------------

  GetDeskListReq_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDeskListReq_1& from);
  void MergeFrom(const GetDeskListReq_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GetDeskListReq_1)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GetDeskListReq_1* default_instance_;
};
// -------------------------------------------------------------------

class GetDeskListRsp_1 : public ::google::protobuf::Message {
 public:
  GetDeskListRsp_1();
  virtual ~GetDeskListRsp_1();

  GetDeskListRsp_1(const GetDeskListRsp_1& from);

  inline GetDeskListRsp_1& operator=(const GetDeskListRsp_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDeskListRsp_1& default_instance();

  void Swap(GetDeskListRsp_1* other);

  // implements Message ----------------------------------------------

  GetDeskListRsp_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDeskListRsp_1& from);
  void MergeFrom(const GetDeskListRsp_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GameDeskInfo_1 desks = 1;
  inline int desks_size() const;
  inline void clear_desks();
  static const int kDesksFieldNumber = 1;
  inline const ::proto_ff::GameDeskInfo_1& desks(int index) const;
  inline ::proto_ff::GameDeskInfo_1* mutable_desks(int index);
  inline ::proto_ff::GameDeskInfo_1* add_desks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo_1 >&
      desks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo_1 >*
      mutable_desks();

  // @@protoc_insertion_point(class_scope:proto_ff.GetDeskListRsp_1)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo_1 > desks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static GetDeskListRsp_1* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPlayerLeaveGame : public ::google::protobuf::Message {
 public:
  NotifyPlayerLeaveGame();
  virtual ~NotifyPlayerLeaveGame();

  NotifyPlayerLeaveGame(const NotifyPlayerLeaveGame& from);

  inline NotifyPlayerLeaveGame& operator=(const NotifyPlayerLeaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPlayerLeaveGame& default_instance();

  void Swap(NotifyPlayerLeaveGame* other);

  // implements Message ----------------------------------------------

  NotifyPlayerLeaveGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPlayerLeaveGame& from);
  void MergeFrom(const NotifyPlayerLeaveGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 4;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 4;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyPlayerLeaveGame)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 desk_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static NotifyPlayerLeaveGame* default_instance_;
};
// -------------------------------------------------------------------

class MoneyChangeNotify : public ::google::protobuf::Message {
 public:
  MoneyChangeNotify();
  virtual ~MoneyChangeNotify();

  MoneyChangeNotify(const MoneyChangeNotify& from);

  inline MoneyChangeNotify& operator=(const MoneyChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyChangeNotify& default_instance();

  void Swap(MoneyChangeNotify* other);

  // implements Message ----------------------------------------------

  MoneyChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyChangeNotify& from);
  void MergeFrom(const MoneyChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cur_money = 1;
  inline bool has_cur_money() const;
  inline void clear_cur_money();
  static const int kCurMoneyFieldNumber = 1;
  inline ::google::protobuf::uint64 cur_money() const;
  inline void set_cur_money(::google::protobuf::uint64 value);

  // optional uint64 cur_bank_money = 2;
  inline bool has_cur_bank_money() const;
  inline void clear_cur_bank_money();
  static const int kCurBankMoneyFieldNumber = 2;
  inline ::google::protobuf::uint64 cur_bank_money() const;
  inline void set_cur_bank_money(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MoneyChangeNotify)
 private:
  inline void set_has_cur_money();
  inline void clear_has_cur_money();
  inline void set_has_cur_bank_money();
  inline void clear_has_cur_bank_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cur_money_;
  ::google::protobuf::uint64 cur_bank_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static MoneyChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class OnePaoMaDengInfo : public ::google::protobuf::Message {
 public:
  OnePaoMaDengInfo();
  virtual ~OnePaoMaDengInfo();

  OnePaoMaDengInfo(const OnePaoMaDengInfo& from);

  inline OnePaoMaDengInfo& operator=(const OnePaoMaDengInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnePaoMaDengInfo& default_instance();

  void Swap(OnePaoMaDengInfo* other);

  // implements Message ----------------------------------------------

  OnePaoMaDengInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnePaoMaDengInfo& from);
  void MergeFrom(const OnePaoMaDengInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional string game_name = 3;
  inline bool has_game_name() const;
  inline void clear_game_name();
  static const int kGameNameFieldNumber = 3;
  inline const ::std::string& game_name() const;
  inline void set_game_name(const ::std::string& value);
  inline void set_game_name(const char* value);
  inline void set_game_name(const char* value, size_t size);
  inline ::std::string* mutable_game_name();
  inline ::std::string* release_game_name();
  inline void set_allocated_game_name(::std::string* game_name);

  // optional uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional string room_name = 5;
  inline bool has_room_name() const;
  inline void clear_room_name();
  static const int kRoomNameFieldNumber = 5;
  inline const ::std::string& room_name() const;
  inline void set_room_name(const ::std::string& value);
  inline void set_room_name(const char* value);
  inline void set_room_name(const char* value, size_t size);
  inline ::std::string* mutable_room_name();
  inline ::std::string* release_room_name();
  inline void set_allocated_room_name(::std::string* room_name);

  // optional uint64 win_jetton = 6;
  inline bool has_win_jetton() const;
  inline void clear_win_jetton();
  static const int kWinJettonFieldNumber = 6;
  inline ::google::protobuf::uint64 win_jetton() const;
  inline void set_win_jetton(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.OnePaoMaDengInfo)
 private:
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_game_name();
  inline void clear_has_game_name();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_name();
  inline void clear_has_room_name();
  inline void set_has_win_jetton();
  inline void clear_has_win_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_name_;
  ::std::string* game_name_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::std::string* room_name_;
  ::google::protobuf::uint64 win_jetton_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static OnePaoMaDengInfo* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCPaoMaDengNotify : public ::google::protobuf::Message {
 public:
  Proto_SCPaoMaDengNotify();
  virtual ~Proto_SCPaoMaDengNotify();

  Proto_SCPaoMaDengNotify(const Proto_SCPaoMaDengNotify& from);

  inline Proto_SCPaoMaDengNotify& operator=(const Proto_SCPaoMaDengNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCPaoMaDengNotify& default_instance();

  void Swap(Proto_SCPaoMaDengNotify* other);

  // implements Message ----------------------------------------------

  Proto_SCPaoMaDengNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCPaoMaDengNotify& from);
  void MergeFrom(const Proto_SCPaoMaDengNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.OnePaoMaDengInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::OnePaoMaDengInfo& info(int index) const;
  inline ::proto_ff::OnePaoMaDengInfo* mutable_info(int index);
  inline ::proto_ff::OnePaoMaDengInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OnePaoMaDengInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OnePaoMaDengInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCPaoMaDengNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::OnePaoMaDengInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCPaoMaDengNotify* default_instance_;
};
// -------------------------------------------------------------------

class Proto_CSRedeemCodeReq : public ::google::protobuf::Message {
 public:
  Proto_CSRedeemCodeReq();
  virtual ~Proto_CSRedeemCodeReq();

  Proto_CSRedeemCodeReq(const Proto_CSRedeemCodeReq& from);

  inline Proto_CSRedeemCodeReq& operator=(const Proto_CSRedeemCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_CSRedeemCodeReq& default_instance();

  void Swap(Proto_CSRedeemCodeReq* other);

  // implements Message ----------------------------------------------

  Proto_CSRedeemCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_CSRedeemCodeReq& from);
  void MergeFrom(const Proto_CSRedeemCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_CSRedeemCodeReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static Proto_CSRedeemCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SCRedeemCodeRsp : public ::google::protobuf::Message {
 public:
  Proto_SCRedeemCodeRsp();
  virtual ~Proto_SCRedeemCodeRsp();

  Proto_SCRedeemCodeRsp(const Proto_SCRedeemCodeRsp& from);

  inline Proto_SCRedeemCodeRsp& operator=(const Proto_SCRedeemCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SCRedeemCodeRsp& default_instance();

  void Swap(Proto_SCRedeemCodeRsp* other);

  // implements Message ----------------------------------------------

  Proto_SCRedeemCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SCRedeemCodeRsp& from);
  void MergeFrom(const Proto_SCRedeemCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SCRedeemCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSGame_2eproto();
  friend void protobuf_AssignDesc_CSGame_2eproto();
  friend void protobuf_ShutdownFile_CSGame_2eproto();

  void InitAsDefaultInstance();
  static Proto_SCRedeemCodeRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// RoomStatusInfo

// optional uint32 game_id = 1;
inline bool RoomStatusInfo::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomStatusInfo::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomStatusInfo::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomStatusInfo::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 RoomStatusInfo::game_id() const {
  return game_id_;
}
inline void RoomStatusInfo::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 2;
inline bool RoomStatusInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomStatusInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomStatusInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomStatusInfo::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 RoomStatusInfo::room_id() const {
  return room_id_;
}
inline void RoomStatusInfo::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional string room_name = 3;
inline bool RoomStatusInfo::has_room_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomStatusInfo::set_has_room_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomStatusInfo::clear_has_room_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomStatusInfo::clear_room_name() {
  if (room_name_ != &::google::protobuf::internal::kEmptyString) {
    room_name_->clear();
  }
  clear_has_room_name();
}
inline const ::std::string& RoomStatusInfo::room_name() const {
  return *room_name_;
}
inline void RoomStatusInfo::set_room_name(const ::std::string& value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
}
inline void RoomStatusInfo::set_room_name(const char* value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
}
inline void RoomStatusInfo::set_room_name(const char* value, size_t size) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoomStatusInfo::mutable_room_name() {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  return room_name_;
}
inline ::std::string* RoomStatusInfo::release_room_name() {
  clear_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = room_name_;
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoomStatusInfo::set_allocated_room_name(::std::string* room_name) {
  if (room_name_ != &::google::protobuf::internal::kEmptyString) {
    delete room_name_;
  }
  if (room_name) {
    set_has_room_name();
    room_name_ = room_name;
  } else {
    clear_has_room_name();
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 enter_min = 4;
inline bool RoomStatusInfo::has_enter_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomStatusInfo::set_has_enter_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomStatusInfo::clear_has_enter_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomStatusInfo::clear_enter_min() {
  enter_min_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_min();
}
inline ::google::protobuf::uint64 RoomStatusInfo::enter_min() const {
  return enter_min_;
}
inline void RoomStatusInfo::set_enter_min(::google::protobuf::uint64 value) {
  set_has_enter_min();
  enter_min_ = value;
}

// optional uint64 enter_max = 5;
inline bool RoomStatusInfo::has_enter_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomStatusInfo::set_has_enter_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomStatusInfo::clear_has_enter_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomStatusInfo::clear_enter_max() {
  enter_max_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_max();
}
inline ::google::protobuf::uint64 RoomStatusInfo::enter_max() const {
  return enter_max_;
}
inline void RoomStatusInfo::set_enter_max(::google::protobuf::uint64 value) {
  set_has_enter_max();
  enter_max_ = value;
}

// optional uint32 status = 6;
inline bool RoomStatusInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomStatusInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomStatusInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomStatusInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 RoomStatusInfo::status() const {
  return status_;
}
inline void RoomStatusInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// GetRoomInfoReq

// optional uint32 game_id = 1;
inline bool GetRoomInfoReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomInfoReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomInfoReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomInfoReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 GetRoomInfoReq::game_id() const {
  return game_id_;
}
inline void GetRoomInfoReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// -------------------------------------------------------------------

// GetRoomInfoRsp

// optional int32 result = 1;
inline bool GetRoomInfoRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomInfoRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomInfoRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomInfoRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GetRoomInfoRsp::result() const {
  return result_;
}
inline void GetRoomInfoRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto_ff.RoomStatusInfo rooms = 2;
inline int GetRoomInfoRsp::rooms_size() const {
  return rooms_.size();
}
inline void GetRoomInfoRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::proto_ff::RoomStatusInfo& GetRoomInfoRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::proto_ff::RoomStatusInfo* GetRoomInfoRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::proto_ff::RoomStatusInfo* GetRoomInfoRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoomStatusInfo >&
GetRoomInfoRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoomStatusInfo >*
GetRoomInfoRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// EnterGameAutoJoinReq

// optional uint32 game_id = 1;
inline bool EnterGameAutoJoinReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGameAutoJoinReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGameAutoJoinReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGameAutoJoinReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinReq::game_id() const {
  return game_id_;
}
inline void EnterGameAutoJoinReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 2;
inline bool EnterGameAutoJoinReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGameAutoJoinReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGameAutoJoinReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGameAutoJoinReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinReq::room_id() const {
  return room_id_;
}
inline void EnterGameAutoJoinReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 desk_id = 3;
inline bool EnterGameAutoJoinReq::has_desk_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGameAutoJoinReq::set_has_desk_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGameAutoJoinReq::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGameAutoJoinReq::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinReq::desk_id() const {
  return desk_id_;
}
inline void EnterGameAutoJoinReq::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional uint64 player_id = 4;
inline bool EnterGameAutoJoinReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGameAutoJoinReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGameAutoJoinReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGameAutoJoinReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 EnterGameAutoJoinReq::player_id() const {
  return player_id_;
}
inline void EnterGameAutoJoinReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 proxy_id = 5;
inline bool EnterGameAutoJoinReq::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterGameAutoJoinReq::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterGameAutoJoinReq::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterGameAutoJoinReq::clear_proxy_id() {
  proxy_id_ = 0u;
  clear_has_proxy_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinReq::proxy_id() const {
  return proxy_id_;
}
inline void EnterGameAutoJoinReq::set_proxy_id(::google::protobuf::uint32 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// -------------------------------------------------------------------

// EnterGameAutoJoinRsp

// optional int32 result = 1;
inline bool EnterGameAutoJoinRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGameAutoJoinRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGameAutoJoinRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 EnterGameAutoJoinRsp::result() const {
  return result_;
}
inline void EnterGameAutoJoinRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 game_id = 2;
inline bool EnterGameAutoJoinRsp::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGameAutoJoinRsp::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGameAutoJoinRsp::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinRsp::game_id() const {
  return game_id_;
}
inline void EnterGameAutoJoinRsp::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool EnterGameAutoJoinRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGameAutoJoinRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGameAutoJoinRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinRsp::room_id() const {
  return room_id_;
}
inline void EnterGameAutoJoinRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 desk_id = 4;
inline bool EnterGameAutoJoinRsp::has_desk_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_desk_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGameAutoJoinRsp::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGameAutoJoinRsp::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinRsp::desk_id() const {
  return desk_id_;
}
inline void EnterGameAutoJoinRsp::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional uint32 chair_id = 5;
inline bool EnterGameAutoJoinRsp::has_chair_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_chair_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterGameAutoJoinRsp::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterGameAutoJoinRsp::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinRsp::chair_id() const {
  return chair_id_;
}
inline void EnterGameAutoJoinRsp::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional uint64 player_id = 6;
inline bool EnterGameAutoJoinRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnterGameAutoJoinRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnterGameAutoJoinRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 EnterGameAutoJoinRsp::player_id() const {
  return player_id_;
}
inline void EnterGameAutoJoinRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_bus_id = 7;
inline bool EnterGameAutoJoinRsp::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnterGameAutoJoinRsp::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnterGameAutoJoinRsp::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnterGameAutoJoinRsp::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 EnterGameAutoJoinRsp::game_bus_id() const {
  return game_bus_id_;
}
inline void EnterGameAutoJoinRsp::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// -------------------------------------------------------------------

// EnterGameReq

// optional uint32 game_id = 1;
inline bool EnterGameReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGameReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGameReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGameReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 EnterGameReq::game_id() const {
  return game_id_;
}
inline void EnterGameReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 2;
inline bool EnterGameReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGameReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGameReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGameReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 EnterGameReq::room_id() const {
  return room_id_;
}
inline void EnterGameReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 desk_id = 3;
inline bool EnterGameReq::has_desk_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGameReq::set_has_desk_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGameReq::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGameReq::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 EnterGameReq::desk_id() const {
  return desk_id_;
}
inline void EnterGameReq::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional uint32 chair_id = 4;
inline bool EnterGameReq::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGameReq::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGameReq::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGameReq::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 EnterGameReq::chair_id() const {
  return chair_id_;
}
inline void EnterGameReq::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional uint32 proxy_id = 5;
inline bool EnterGameReq::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterGameReq::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterGameReq::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterGameReq::clear_proxy_id() {
  proxy_id_ = 0u;
  clear_has_proxy_id();
}
inline ::google::protobuf::uint32 EnterGameReq::proxy_id() const {
  return proxy_id_;
}
inline void EnterGameReq::set_proxy_id(::google::protobuf::uint32 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// optional uint32 logic_id = 6;
inline bool EnterGameReq::has_logic_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnterGameReq::set_has_logic_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnterGameReq::clear_has_logic_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnterGameReq::clear_logic_id() {
  logic_id_ = 0u;
  clear_has_logic_id();
}
inline ::google::protobuf::uint32 EnterGameReq::logic_id() const {
  return logic_id_;
}
inline void EnterGameReq::set_logic_id(::google::protobuf::uint32 value) {
  set_has_logic_id();
  logic_id_ = value;
}

// -------------------------------------------------------------------

// EnterGameRsp

// optional int32 result = 1;
inline bool EnterGameRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGameRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGameRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGameRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 EnterGameRsp::result() const {
  return result_;
}
inline void EnterGameRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 chair_count = 2;
inline bool EnterGameRsp::has_chair_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGameRsp::set_has_chair_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGameRsp::clear_has_chair_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGameRsp::clear_chair_count() {
  chair_count_ = 0u;
  clear_has_chair_count();
}
inline ::google::protobuf::uint32 EnterGameRsp::chair_count() const {
  return chair_count_;
}
inline void EnterGameRsp::set_chair_count(::google::protobuf::uint32 value) {
  set_has_chair_count();
  chair_count_ = value;
}

// optional uint32 my_chair_id = 3;
inline bool EnterGameRsp::has_my_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGameRsp::set_has_my_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGameRsp::clear_has_my_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGameRsp::clear_my_chair_id() {
  my_chair_id_ = 0u;
  clear_has_my_chair_id();
}
inline ::google::protobuf::uint32 EnterGameRsp::my_chair_id() const {
  return my_chair_id_;
}
inline void EnterGameRsp::set_my_chair_id(::google::protobuf::uint32 value) {
  set_has_my_chair_id();
  my_chair_id_ = value;
}

// optional uint32 game_id = 4;
inline bool EnterGameRsp::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGameRsp::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGameRsp::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGameRsp::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 EnterGameRsp::game_id() const {
  return game_id_;
}
inline void EnterGameRsp::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 5;
inline bool EnterGameRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterGameRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterGameRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterGameRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 EnterGameRsp::room_id() const {
  return room_id_;
}
inline void EnterGameRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 6;
inline bool EnterGameRsp::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnterGameRsp::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnterGameRsp::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnterGameRsp::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 EnterGameRsp::game_bus_id() const {
  return game_bus_id_;
}
inline void EnterGameRsp::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// optional uint64 player_id = 7;
inline bool EnterGameRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnterGameRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnterGameRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnterGameRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 EnterGameRsp::player_id() const {
  return player_id_;
}
inline void EnterGameRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// UserRecomeReq

// optional uint32 reserved = 1;
inline bool UserRecomeReq::has_reserved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRecomeReq::set_has_reserved() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRecomeReq::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRecomeReq::clear_reserved() {
  reserved_ = 0u;
  clear_has_reserved();
}
inline ::google::protobuf::uint32 UserRecomeReq::reserved() const {
  return reserved_;
}
inline void UserRecomeReq::set_reserved(::google::protobuf::uint32 value) {
  set_has_reserved();
  reserved_ = value;
}

// -------------------------------------------------------------------

// UserRecomeRsp

// optional int32 result = 1;
inline bool UserRecomeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRecomeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRecomeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRecomeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserRecomeRsp::result() const {
  return result_;
}
inline void UserRecomeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GameChairInfo

// optional uint32 chair_id = 1;
inline bool GameChairInfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameChairInfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameChairInfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameChairInfo::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 GameChairInfo::chair_id() const {
  return chair_id_;
}
inline void GameChairInfo::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional uint32 chair_status = 2;
inline bool GameChairInfo::has_chair_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameChairInfo::set_has_chair_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameChairInfo::clear_has_chair_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameChairInfo::clear_chair_status() {
  chair_status_ = 0u;
  clear_has_chair_status();
}
inline ::google::protobuf::uint32 GameChairInfo::chair_status() const {
  return chair_status_;
}
inline void GameChairInfo::set_chair_status(::google::protobuf::uint32 value) {
  set_has_chair_status();
  chair_status_ = value;
}

// -------------------------------------------------------------------

// GameDeskInfo

// optional uint32 desk_id = 1;
inline bool GameDeskInfo::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameDeskInfo::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameDeskInfo::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameDeskInfo::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 GameDeskInfo::desk_id() const {
  return desk_id_;
}
inline void GameDeskInfo::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional string desk_name = 2;
inline bool GameDeskInfo::has_desk_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameDeskInfo::set_has_desk_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameDeskInfo::clear_has_desk_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameDeskInfo::clear_desk_name() {
  if (desk_name_ != &::google::protobuf::internal::kEmptyString) {
    desk_name_->clear();
  }
  clear_has_desk_name();
}
inline const ::std::string& GameDeskInfo::desk_name() const {
  return *desk_name_;
}
inline void GameDeskInfo::set_desk_name(const ::std::string& value) {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  desk_name_->assign(value);
}
inline void GameDeskInfo::set_desk_name(const char* value) {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  desk_name_->assign(value);
}
inline void GameDeskInfo::set_desk_name(const char* value, size_t size) {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  desk_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameDeskInfo::mutable_desk_name() {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  return desk_name_;
}
inline ::std::string* GameDeskInfo::release_desk_name() {
  clear_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desk_name_;
    desk_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameDeskInfo::set_allocated_desk_name(::std::string* desk_name) {
  if (desk_name_ != &::google::protobuf::internal::kEmptyString) {
    delete desk_name_;
  }
  if (desk_name) {
    set_has_desk_name();
    desk_name_ = desk_name;
  } else {
    clear_has_desk_name();
    desk_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 desk_status = 3;
inline bool GameDeskInfo::has_desk_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameDeskInfo::set_has_desk_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameDeskInfo::clear_has_desk_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameDeskInfo::clear_desk_status() {
  desk_status_ = 0u;
  clear_has_desk_status();
}
inline ::google::protobuf::uint32 GameDeskInfo::desk_status() const {
  return desk_status_;
}
inline void GameDeskInfo::set_desk_status(::google::protobuf::uint32 value) {
  set_has_desk_status();
  desk_status_ = value;
}

// optional uint32 chair_count = 4;
inline bool GameDeskInfo::has_chair_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameDeskInfo::set_has_chair_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameDeskInfo::clear_has_chair_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameDeskInfo::clear_chair_count() {
  chair_count_ = 0u;
  clear_has_chair_count();
}
inline ::google::protobuf::uint32 GameDeskInfo::chair_count() const {
  return chair_count_;
}
inline void GameDeskInfo::set_chair_count(::google::protobuf::uint32 value) {
  set_has_chair_count();
  chair_count_ = value;
}

// repeated .proto_ff.GameChairInfo chairs = 5;
inline int GameDeskInfo::chairs_size() const {
  return chairs_.size();
}
inline void GameDeskInfo::clear_chairs() {
  chairs_.Clear();
}
inline const ::proto_ff::GameChairInfo& GameDeskInfo::chairs(int index) const {
  return chairs_.Get(index);
}
inline ::proto_ff::GameChairInfo* GameDeskInfo::mutable_chairs(int index) {
  return chairs_.Mutable(index);
}
inline ::proto_ff::GameChairInfo* GameDeskInfo::add_chairs() {
  return chairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo >&
GameDeskInfo::chairs() const {
  return chairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo >*
GameDeskInfo::mutable_chairs() {
  return &chairs_;
}

// -------------------------------------------------------------------

// DeskListReq

// optional uint32 room_id = 1;
inline bool DeskListReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeskListReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeskListReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeskListReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 DeskListReq::room_id() const {
  return room_id_;
}
inline void DeskListReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_id = 2;
inline bool DeskListReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeskListReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeskListReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeskListReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 DeskListReq::game_id() const {
  return game_id_;
}
inline void DeskListReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint64 cur_money = 3;
inline bool DeskListReq::has_cur_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeskListReq::set_has_cur_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeskListReq::clear_has_cur_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeskListReq::clear_cur_money() {
  cur_money_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_money();
}
inline ::google::protobuf::uint64 DeskListReq::cur_money() const {
  return cur_money_;
}
inline void DeskListReq::set_cur_money(::google::protobuf::uint64 value) {
  set_has_cur_money();
  cur_money_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool DeskListReq::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeskListReq::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeskListReq::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeskListReq::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 DeskListReq::game_bus_id() const {
  return game_bus_id_;
}
inline void DeskListReq::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// -------------------------------------------------------------------

// DeskListRsp

// optional int32 result = 1;
inline bool DeskListRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeskListRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeskListRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeskListRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DeskListRsp::result() const {
  return result_;
}
inline void DeskListRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .proto_ff.GameDeskInfo desks = 2;
inline int DeskListRsp::desks_size() const {
  return desks_.size();
}
inline void DeskListRsp::clear_desks() {
  desks_.Clear();
}
inline const ::proto_ff::GameDeskInfo& DeskListRsp::desks(int index) const {
  return desks_.Get(index);
}
inline ::proto_ff::GameDeskInfo* DeskListRsp::mutable_desks(int index) {
  return desks_.Mutable(index);
}
inline ::proto_ff::GameDeskInfo* DeskListRsp::add_desks() {
  return desks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo >&
DeskListRsp::desks() const {
  return desks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo >*
DeskListRsp::mutable_desks() {
  return &desks_;
}

// -------------------------------------------------------------------

// ChairCheckReq

// optional uint32 room_id = 1;
inline bool ChairCheckReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChairCheckReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChairCheckReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChairCheckReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 ChairCheckReq::room_id() const {
  return room_id_;
}
inline void ChairCheckReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_id = 2;
inline bool ChairCheckReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChairCheckReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChairCheckReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChairCheckReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 ChairCheckReq::game_id() const {
  return game_id_;
}
inline void ChairCheckReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 desk_id = 3;
inline bool ChairCheckReq::has_desk_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChairCheckReq::set_has_desk_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChairCheckReq::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChairCheckReq::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 ChairCheckReq::desk_id() const {
  return desk_id_;
}
inline void ChairCheckReq::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional uint32 chair_id = 4;
inline bool ChairCheckReq::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChairCheckReq::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChairCheckReq::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChairCheckReq::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 ChairCheckReq::chair_id() const {
  return chair_id_;
}
inline void ChairCheckReq::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// -------------------------------------------------------------------

// ChairCheckRsp

// optional int32 result = 1;
inline bool ChairCheckRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChairCheckRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChairCheckRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChairCheckRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ChairCheckRsp::result() const {
  return result_;
}
inline void ChairCheckRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ExitRoomReq

// optional uint32 room_id = 1;
inline bool ExitRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 ExitRoomReq::room_id() const {
  return room_id_;
}
inline void ExitRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_id = 2;
inline bool ExitRoomReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitRoomReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitRoomReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitRoomReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 ExitRoomReq::game_id() const {
  return game_id_;
}
inline void ExitRoomReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// -------------------------------------------------------------------

// ExitRoomRsp

// optional int32 result = 1;
inline bool ExitRoomRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitRoomRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitRoomRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitRoomRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ExitRoomRsp::result() const {
  return result_;
}
inline void ExitRoomRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ExitGameReq

// optional uint32 reserved = 1;
inline bool ExitGameReq::has_reserved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGameReq::set_has_reserved() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGameReq::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGameReq::clear_reserved() {
  reserved_ = 0u;
  clear_has_reserved();
}
inline ::google::protobuf::uint32 ExitGameReq::reserved() const {
  return reserved_;
}
inline void ExitGameReq::set_reserved(::google::protobuf::uint32 value) {
  set_has_reserved();
  reserved_ = value;
}

// -------------------------------------------------------------------

// ExitGameRsp

// optional uint32 exit_type = 1;
inline bool ExitGameRsp::has_exit_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGameRsp::set_has_exit_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGameRsp::clear_has_exit_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGameRsp::clear_exit_type() {
  exit_type_ = 0u;
  clear_has_exit_type();
}
inline ::google::protobuf::uint32 ExitGameRsp::exit_type() const {
  return exit_type_;
}
inline void ExitGameRsp::set_exit_type(::google::protobuf::uint32 value) {
  set_has_exit_type();
  exit_type_ = value;
}

// -------------------------------------------------------------------

// GameRoomInfo_1

// optional uint32 room_id = 1;
inline bool GameRoomInfo_1::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRoomInfo_1::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRoomInfo_1::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRoomInfo_1::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 GameRoomInfo_1::room_id() const {
  return room_id_;
}
inline void GameRoomInfo_1::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional string room_name = 2;
inline bool GameRoomInfo_1::has_room_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameRoomInfo_1::set_has_room_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameRoomInfo_1::clear_has_room_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameRoomInfo_1::clear_room_name() {
  if (room_name_ != &::google::protobuf::internal::kEmptyString) {
    room_name_->clear();
  }
  clear_has_room_name();
}
inline const ::std::string& GameRoomInfo_1::room_name() const {
  return *room_name_;
}
inline void GameRoomInfo_1::set_room_name(const ::std::string& value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
}
inline void GameRoomInfo_1::set_room_name(const char* value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
}
inline void GameRoomInfo_1::set_room_name(const char* value, size_t size) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameRoomInfo_1::mutable_room_name() {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  return room_name_;
}
inline ::std::string* GameRoomInfo_1::release_room_name() {
  clear_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = room_name_;
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameRoomInfo_1::set_allocated_room_name(::std::string* room_name) {
  if (room_name_ != &::google::protobuf::internal::kEmptyString) {
    delete room_name_;
  }
  if (room_name) {
    set_has_room_name();
    room_name_ = room_name;
  } else {
    clear_has_room_name();
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 min_coins = 3;
inline bool GameRoomInfo_1::has_min_coins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameRoomInfo_1::set_has_min_coins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameRoomInfo_1::clear_has_min_coins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameRoomInfo_1::clear_min_coins() {
  min_coins_ = 0u;
  clear_has_min_coins();
}
inline ::google::protobuf::uint32 GameRoomInfo_1::min_coins() const {
  return min_coins_;
}
inline void GameRoomInfo_1::set_min_coins(::google::protobuf::uint32 value) {
  set_has_min_coins();
  min_coins_ = value;
}

// optional uint32 online_count = 4;
inline bool GameRoomInfo_1::has_online_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameRoomInfo_1::set_has_online_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameRoomInfo_1::clear_has_online_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameRoomInfo_1::clear_online_count() {
  online_count_ = 0u;
  clear_has_online_count();
}
inline ::google::protobuf::uint32 GameRoomInfo_1::online_count() const {
  return online_count_;
}
inline void GameRoomInfo_1::set_online_count(::google::protobuf::uint32 value) {
  set_has_online_count();
  online_count_ = value;
}

// -------------------------------------------------------------------

// GameChairInfo_1

// optional uint32 chair_id = 1;
inline bool GameChairInfo_1::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameChairInfo_1::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameChairInfo_1::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameChairInfo_1::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 GameChairInfo_1::chair_id() const {
  return chair_id_;
}
inline void GameChairInfo_1::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional uint64 player_id = 2;
inline bool GameChairInfo_1::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameChairInfo_1::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameChairInfo_1::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameChairInfo_1::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 GameChairInfo_1::player_id() const {
  return player_id_;
}
inline void GameChairInfo_1::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// GameDeskInfo_1

// optional uint32 desk_id = 1;
inline bool GameDeskInfo_1::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameDeskInfo_1::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameDeskInfo_1::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameDeskInfo_1::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 GameDeskInfo_1::desk_id() const {
  return desk_id_;
}
inline void GameDeskInfo_1::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional string desk_name = 2;
inline bool GameDeskInfo_1::has_desk_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameDeskInfo_1::set_has_desk_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameDeskInfo_1::clear_has_desk_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameDeskInfo_1::clear_desk_name() {
  if (desk_name_ != &::google::protobuf::internal::kEmptyString) {
    desk_name_->clear();
  }
  clear_has_desk_name();
}
inline const ::std::string& GameDeskInfo_1::desk_name() const {
  return *desk_name_;
}
inline void GameDeskInfo_1::set_desk_name(const ::std::string& value) {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  desk_name_->assign(value);
}
inline void GameDeskInfo_1::set_desk_name(const char* value) {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  desk_name_->assign(value);
}
inline void GameDeskInfo_1::set_desk_name(const char* value, size_t size) {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  desk_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameDeskInfo_1::mutable_desk_name() {
  set_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    desk_name_ = new ::std::string;
  }
  return desk_name_;
}
inline ::std::string* GameDeskInfo_1::release_desk_name() {
  clear_has_desk_name();
  if (desk_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desk_name_;
    desk_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameDeskInfo_1::set_allocated_desk_name(::std::string* desk_name) {
  if (desk_name_ != &::google::protobuf::internal::kEmptyString) {
    delete desk_name_;
  }
  if (desk_name) {
    set_has_desk_name();
    desk_name_ = desk_name;
  } else {
    clear_has_desk_name();
    desk_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 chair_count = 3;
inline bool GameDeskInfo_1::has_chair_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameDeskInfo_1::set_has_chair_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameDeskInfo_1::clear_has_chair_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameDeskInfo_1::clear_chair_count() {
  chair_count_ = 0u;
  clear_has_chair_count();
}
inline ::google::protobuf::uint32 GameDeskInfo_1::chair_count() const {
  return chair_count_;
}
inline void GameDeskInfo_1::set_chair_count(::google::protobuf::uint32 value) {
  set_has_chair_count();
  chair_count_ = value;
}

// repeated .proto_ff.GameChairInfo_1 chars = 4;
inline int GameDeskInfo_1::chars_size() const {
  return chars_.size();
}
inline void GameDeskInfo_1::clear_chars() {
  chars_.Clear();
}
inline const ::proto_ff::GameChairInfo_1& GameDeskInfo_1::chars(int index) const {
  return chars_.Get(index);
}
inline ::proto_ff::GameChairInfo_1* GameDeskInfo_1::mutable_chars(int index) {
  return chars_.Mutable(index);
}
inline ::proto_ff::GameChairInfo_1* GameDeskInfo_1::add_chars() {
  return chars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo_1 >&
GameDeskInfo_1::chars() const {
  return chars_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameChairInfo_1 >*
GameDeskInfo_1::mutable_chars() {
  return &chars_;
}

// -------------------------------------------------------------------

// GetRoomListReq_1

// optional uint32 game_id = 1;
inline bool GetRoomListReq_1::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomListReq_1::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomListReq_1::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomListReq_1::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 GetRoomListReq_1::game_id() const {
  return game_id_;
}
inline void GetRoomListReq_1::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// -------------------------------------------------------------------

// GetRoomListRsp_1

// repeated .proto_ff.GameRoomInfo_1 rooms = 1;
inline int GetRoomListRsp_1::rooms_size() const {
  return rooms_.size();
}
inline void GetRoomListRsp_1::clear_rooms() {
  rooms_.Clear();
}
inline const ::proto_ff::GameRoomInfo_1& GetRoomListRsp_1::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::proto_ff::GameRoomInfo_1* GetRoomListRsp_1::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::proto_ff::GameRoomInfo_1* GetRoomListRsp_1::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameRoomInfo_1 >&
GetRoomListRsp_1::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameRoomInfo_1 >*
GetRoomListRsp_1::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// GetDeskListReq_1

// optional uint32 room_id = 1;
inline bool GetDeskListReq_1::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDeskListReq_1::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDeskListReq_1::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDeskListReq_1::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 GetDeskListReq_1::room_id() const {
  return room_id_;
}
inline void GetDeskListReq_1::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// GetDeskListRsp_1

// repeated .proto_ff.GameDeskInfo_1 desks = 1;
inline int GetDeskListRsp_1::desks_size() const {
  return desks_.size();
}
inline void GetDeskListRsp_1::clear_desks() {
  desks_.Clear();
}
inline const ::proto_ff::GameDeskInfo_1& GetDeskListRsp_1::desks(int index) const {
  return desks_.Get(index);
}
inline ::proto_ff::GameDeskInfo_1* GetDeskListRsp_1::mutable_desks(int index) {
  return desks_.Mutable(index);
}
inline ::proto_ff::GameDeskInfo_1* GetDeskListRsp_1::add_desks() {
  return desks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo_1 >&
GetDeskListRsp_1::desks() const {
  return desks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GameDeskInfo_1 >*
GetDeskListRsp_1::mutable_desks() {
  return &desks_;
}

// -------------------------------------------------------------------

// NotifyPlayerLeaveGame

// optional uint64 player_id = 1;
inline bool NotifyPlayerLeaveGame::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyPlayerLeaveGame::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyPlayerLeaveGame::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyPlayerLeaveGame::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyPlayerLeaveGame::player_id() const {
  return player_id_;
}
inline void NotifyPlayerLeaveGame::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool NotifyPlayerLeaveGame::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyPlayerLeaveGame::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyPlayerLeaveGame::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyPlayerLeaveGame::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 NotifyPlayerLeaveGame::game_id() const {
  return game_id_;
}
inline void NotifyPlayerLeaveGame::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool NotifyPlayerLeaveGame::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyPlayerLeaveGame::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyPlayerLeaveGame::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyPlayerLeaveGame::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 NotifyPlayerLeaveGame::room_id() const {
  return room_id_;
}
inline void NotifyPlayerLeaveGame::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 desk_id = 4;
inline bool NotifyPlayerLeaveGame::has_desk_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyPlayerLeaveGame::set_has_desk_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyPlayerLeaveGame::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyPlayerLeaveGame::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 NotifyPlayerLeaveGame::desk_id() const {
  return desk_id_;
}
inline void NotifyPlayerLeaveGame::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// -------------------------------------------------------------------

// MoneyChangeNotify

// optional uint64 cur_money = 1;
inline bool MoneyChangeNotify::has_cur_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyChangeNotify::set_has_cur_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyChangeNotify::clear_has_cur_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyChangeNotify::clear_cur_money() {
  cur_money_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_money();
}
inline ::google::protobuf::uint64 MoneyChangeNotify::cur_money() const {
  return cur_money_;
}
inline void MoneyChangeNotify::set_cur_money(::google::protobuf::uint64 value) {
  set_has_cur_money();
  cur_money_ = value;
}

// optional uint64 cur_bank_money = 2;
inline bool MoneyChangeNotify::has_cur_bank_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyChangeNotify::set_has_cur_bank_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyChangeNotify::clear_has_cur_bank_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyChangeNotify::clear_cur_bank_money() {
  cur_bank_money_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_bank_money();
}
inline ::google::protobuf::uint64 MoneyChangeNotify::cur_bank_money() const {
  return cur_bank_money_;
}
inline void MoneyChangeNotify::set_cur_bank_money(::google::protobuf::uint64 value) {
  set_has_cur_bank_money();
  cur_bank_money_ = value;
}

// -------------------------------------------------------------------

// OnePaoMaDengInfo

// optional string user_name = 1;
inline bool OnePaoMaDengInfo::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnePaoMaDengInfo::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnePaoMaDengInfo::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnePaoMaDengInfo::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& OnePaoMaDengInfo::user_name() const {
  return *user_name_;
}
inline void OnePaoMaDengInfo::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void OnePaoMaDengInfo::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void OnePaoMaDengInfo::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OnePaoMaDengInfo::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* OnePaoMaDengInfo::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OnePaoMaDengInfo::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 game_id = 2;
inline bool OnePaoMaDengInfo::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnePaoMaDengInfo::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnePaoMaDengInfo::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnePaoMaDengInfo::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 OnePaoMaDengInfo::game_id() const {
  return game_id_;
}
inline void OnePaoMaDengInfo::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional string game_name = 3;
inline bool OnePaoMaDengInfo::has_game_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnePaoMaDengInfo::set_has_game_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnePaoMaDengInfo::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnePaoMaDengInfo::clear_game_name() {
  if (game_name_ != &::google::protobuf::internal::kEmptyString) {
    game_name_->clear();
  }
  clear_has_game_name();
}
inline const ::std::string& OnePaoMaDengInfo::game_name() const {
  return *game_name_;
}
inline void OnePaoMaDengInfo::set_game_name(const ::std::string& value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::kEmptyString) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
}
inline void OnePaoMaDengInfo::set_game_name(const char* value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::kEmptyString) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
}
inline void OnePaoMaDengInfo::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::kEmptyString) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OnePaoMaDengInfo::mutable_game_name() {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::kEmptyString) {
    game_name_ = new ::std::string;
  }
  return game_name_;
}
inline ::std::string* OnePaoMaDengInfo::release_game_name() {
  clear_has_game_name();
  if (game_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = game_name_;
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OnePaoMaDengInfo::set_allocated_game_name(::std::string* game_name) {
  if (game_name_ != &::google::protobuf::internal::kEmptyString) {
    delete game_name_;
  }
  if (game_name) {
    set_has_game_name();
    game_name_ = game_name;
  } else {
    clear_has_game_name();
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 room_id = 4;
inline bool OnePaoMaDengInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OnePaoMaDengInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OnePaoMaDengInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OnePaoMaDengInfo::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 OnePaoMaDengInfo::room_id() const {
  return room_id_;
}
inline void OnePaoMaDengInfo::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional string room_name = 5;
inline bool OnePaoMaDengInfo::has_room_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OnePaoMaDengInfo::set_has_room_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OnePaoMaDengInfo::clear_has_room_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OnePaoMaDengInfo::clear_room_name() {
  if (room_name_ != &::google::protobuf::internal::kEmptyString) {
    room_name_->clear();
  }
  clear_has_room_name();
}
inline const ::std::string& OnePaoMaDengInfo::room_name() const {
  return *room_name_;
}
inline void OnePaoMaDengInfo::set_room_name(const ::std::string& value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
}
inline void OnePaoMaDengInfo::set_room_name(const char* value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
}
inline void OnePaoMaDengInfo::set_room_name(const char* value, size_t size) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OnePaoMaDengInfo::mutable_room_name() {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    room_name_ = new ::std::string;
  }
  return room_name_;
}
inline ::std::string* OnePaoMaDengInfo::release_room_name() {
  clear_has_room_name();
  if (room_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = room_name_;
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OnePaoMaDengInfo::set_allocated_room_name(::std::string* room_name) {
  if (room_name_ != &::google::protobuf::internal::kEmptyString) {
    delete room_name_;
  }
  if (room_name) {
    set_has_room_name();
    room_name_ = room_name;
  } else {
    clear_has_room_name();
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 win_jetton = 6;
inline bool OnePaoMaDengInfo::has_win_jetton() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OnePaoMaDengInfo::set_has_win_jetton() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OnePaoMaDengInfo::clear_has_win_jetton() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OnePaoMaDengInfo::clear_win_jetton() {
  win_jetton_ = GOOGLE_ULONGLONG(0);
  clear_has_win_jetton();
}
inline ::google::protobuf::uint64 OnePaoMaDengInfo::win_jetton() const {
  return win_jetton_;
}
inline void OnePaoMaDengInfo::set_win_jetton(::google::protobuf::uint64 value) {
  set_has_win_jetton();
  win_jetton_ = value;
}

// -------------------------------------------------------------------

// Proto_SCPaoMaDengNotify

// repeated .proto_ff.OnePaoMaDengInfo info = 1;
inline int Proto_SCPaoMaDengNotify::info_size() const {
  return info_.size();
}
inline void Proto_SCPaoMaDengNotify::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::OnePaoMaDengInfo& Proto_SCPaoMaDengNotify::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::OnePaoMaDengInfo* Proto_SCPaoMaDengNotify::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::OnePaoMaDengInfo* Proto_SCPaoMaDengNotify::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::OnePaoMaDengInfo >&
Proto_SCPaoMaDengNotify::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::OnePaoMaDengInfo >*
Proto_SCPaoMaDengNotify::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// Proto_CSRedeemCodeReq

// optional string id = 1;
inline bool Proto_CSRedeemCodeReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_CSRedeemCodeReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_CSRedeemCodeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_CSRedeemCodeReq::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& Proto_CSRedeemCodeReq::id() const {
  return *id_;
}
inline void Proto_CSRedeemCodeReq::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Proto_CSRedeemCodeReq::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Proto_CSRedeemCodeReq::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_CSRedeemCodeReq::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* Proto_CSRedeemCodeReq::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_CSRedeemCodeReq::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Proto_SCRedeemCodeRsp

// optional int32 result = 1;
inline bool Proto_SCRedeemCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SCRedeemCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SCRedeemCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SCRedeemCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_SCRedeemCodeRsp::result() const {
  return result_;
}
inline void Proto_SCRedeemCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSGame_2eproto__INCLUDED
