// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#ifndef PROTOBUF_room_2eproto__INCLUDED
#define PROTOBUF_room_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_room_2eproto();
void protobuf_AssignDesc_room_2eproto();
void protobuf_ShutdownFile_room_2eproto();

class E_RoomRoom;
class Sheet_RoomRoom;

// ===================================================================

class E_RoomRoom : public ::google::protobuf::Message {
 public:
  E_RoomRoom();
  virtual ~E_RoomRoom();

  E_RoomRoom(const E_RoomRoom& from);

  inline E_RoomRoom& operator=(const E_RoomRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RoomRoom& default_instance();

  void Swap(E_RoomRoom* other);

  // implements Message ----------------------------------------------

  E_RoomRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RoomRoom& from);
  void MergeFrom(const E_RoomRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_roomid = 2;
  inline bool has_m_roomid() const;
  inline void clear_m_roomid();
  static const int kMRoomidFieldNumber = 2;
  inline ::google::protobuf::int32 m_roomid() const;
  inline void set_m_roomid(::google::protobuf::int32 value);

  // optional int32 m_gameid = 3;
  inline bool has_m_gameid() const;
  inline void clear_m_gameid();
  static const int kMGameidFieldNumber = 3;
  inline ::google::protobuf::int32 m_gameid() const;
  inline void set_m_gameid(::google::protobuf::int32 value);

  // optional string m_gamename = 4;
  inline bool has_m_gamename() const;
  inline void clear_m_gamename();
  static const int kMGamenameFieldNumber = 4;
  inline const ::std::string& m_gamename() const;
  inline void set_m_gamename(const ::std::string& value);
  inline void set_m_gamename(const char* value);
  inline void set_m_gamename(const char* value, size_t size);
  inline ::std::string* mutable_m_gamename();
  inline ::std::string* release_m_gamename();
  inline void set_allocated_m_gamename(::std::string* m_gamename);

  // optional int32 m_roomtype = 5;
  inline bool has_m_roomtype() const;
  inline void clear_m_roomtype();
  static const int kMRoomtypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_roomtype() const;
  inline void set_m_roomtype(::google::protobuf::int32 value);

  // optional int32 m_roomlevel = 6;
  inline bool has_m_roomlevel() const;
  inline void clear_m_roomlevel();
  static const int kMRoomlevelFieldNumber = 6;
  inline ::google::protobuf::int32 m_roomlevel() const;
  inline void set_m_roomlevel(::google::protobuf::int32 value);

  // optional string m_roomname = 7;
  inline bool has_m_roomname() const;
  inline void clear_m_roomname();
  static const int kMRoomnameFieldNumber = 7;
  inline const ::std::string& m_roomname() const;
  inline void set_m_roomname(const ::std::string& value);
  inline void set_m_roomname(const char* value);
  inline void set_m_roomname(const char* value, size_t size);
  inline ::std::string* mutable_m_roomname();
  inline ::std::string* release_m_roomname();
  inline void set_allocated_m_roomname(::std::string* m_roomname);

  // optional int32 m_sitenum = 8;
  inline bool has_m_sitenum() const;
  inline void clear_m_sitenum();
  static const int kMSitenumFieldNumber = 8;
  inline ::google::protobuf::int32 m_sitenum() const;
  inline void set_m_sitenum(::google::protobuf::int32 value);

  // optional int32 m_deskcount = 9;
  inline bool has_m_deskcount() const;
  inline void clear_m_deskcount();
  static const int kMDeskcountFieldNumber = 9;
  inline ::google::protobuf::int32 m_deskcount() const;
  inline void set_m_deskcount(::google::protobuf::int32 value);

  // optional int32 m_maxpeople = 10;
  inline bool has_m_maxpeople() const;
  inline void clear_m_maxpeople();
  static const int kMMaxpeopleFieldNumber = 10;
  inline ::google::protobuf::int32 m_maxpeople() const;
  inline void set_m_maxpeople(::google::protobuf::int32 value);

  // optional int32 m_enter_min = 11;
  inline bool has_m_enter_min() const;
  inline void clear_m_enter_min();
  static const int kMEnterMinFieldNumber = 11;
  inline ::google::protobuf::int32 m_enter_min() const;
  inline void set_m_enter_min(::google::protobuf::int32 value);

  // optional int32 m_enter_max = 12;
  inline bool has_m_enter_max() const;
  inline void clear_m_enter_max();
  static const int kMEnterMaxFieldNumber = 12;
  inline ::google::protobuf::int32 m_enter_max() const;
  inline void set_m_enter_max(::google::protobuf::int32 value);

  // optional int32 m_auto_chair = 13;
  inline bool has_m_auto_chair() const;
  inline void clear_m_auto_chair();
  static const int kMAutoChairFieldNumber = 13;
  inline ::google::protobuf::int32 m_auto_chair() const;
  inline void set_m_auto_chair(::google::protobuf::int32 value);

  // optional int32 m_is_exp_scene = 14;
  inline bool has_m_is_exp_scene() const;
  inline void clear_m_is_exp_scene();
  static const int kMIsExpSceneFieldNumber = 14;
  inline ::google::protobuf::int32 m_is_exp_scene() const;
  inline void set_m_is_exp_scene(::google::protobuf::int32 value);

  // optional int32 m_exp_scene_gold = 15;
  inline bool has_m_exp_scene_gold() const;
  inline void clear_m_exp_scene_gold();
  static const int kMExpSceneGoldFieldNumber = 15;
  inline ::google::protobuf::int32 m_exp_scene_gold() const;
  inline void set_m_exp_scene_gold(::google::protobuf::int32 value);

  // optional int32 m_tax = 16;
  inline bool has_m_tax() const;
  inline void clear_m_tax();
  static const int kMTaxFieldNumber = 16;
  inline ::google::protobuf::int32 m_tax() const;
  inline void set_m_tax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RoomRoom)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_roomid();
  inline void clear_has_m_roomid();
  inline void set_has_m_gameid();
  inline void clear_has_m_gameid();
  inline void set_has_m_gamename();
  inline void clear_has_m_gamename();
  inline void set_has_m_roomtype();
  inline void clear_has_m_roomtype();
  inline void set_has_m_roomlevel();
  inline void clear_has_m_roomlevel();
  inline void set_has_m_roomname();
  inline void clear_has_m_roomname();
  inline void set_has_m_sitenum();
  inline void clear_has_m_sitenum();
  inline void set_has_m_deskcount();
  inline void clear_has_m_deskcount();
  inline void set_has_m_maxpeople();
  inline void clear_has_m_maxpeople();
  inline void set_has_m_enter_min();
  inline void clear_has_m_enter_min();
  inline void set_has_m_enter_max();
  inline void clear_has_m_enter_max();
  inline void set_has_m_auto_chair();
  inline void clear_has_m_auto_chair();
  inline void set_has_m_is_exp_scene();
  inline void clear_has_m_is_exp_scene();
  inline void set_has_m_exp_scene_gold();
  inline void clear_has_m_exp_scene_gold();
  inline void set_has_m_tax();
  inline void clear_has_m_tax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_roomid_;
  ::std::string* m_gamename_;
  ::google::protobuf::int32 m_gameid_;
  ::google::protobuf::int32 m_roomtype_;
  ::std::string* m_roomname_;
  ::google::protobuf::int32 m_roomlevel_;
  ::google::protobuf::int32 m_sitenum_;
  ::google::protobuf::int32 m_deskcount_;
  ::google::protobuf::int32 m_maxpeople_;
  ::google::protobuf::int32 m_enter_min_;
  ::google::protobuf::int32 m_enter_max_;
  ::google::protobuf::int32 m_auto_chair_;
  ::google::protobuf::int32 m_is_exp_scene_;
  ::google::protobuf::int32 m_exp_scene_gold_;
  ::google::protobuf::int32 m_tax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static E_RoomRoom* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RoomRoom : public ::google::protobuf::Message {
 public:
  Sheet_RoomRoom();
  virtual ~Sheet_RoomRoom();

  Sheet_RoomRoom(const Sheet_RoomRoom& from);

  inline Sheet_RoomRoom& operator=(const Sheet_RoomRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RoomRoom& default_instance();

  void Swap(Sheet_RoomRoom* other);

  // implements Message ----------------------------------------------

  Sheet_RoomRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RoomRoom& from);
  void MergeFrom(const Sheet_RoomRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RoomRoom E_RoomRoom_List = 1;
  inline int e_roomroom_list_size() const;
  inline void clear_e_roomroom_list();
  static const int kERoomRoomListFieldNumber = 1;
  inline const ::proto_ff::E_RoomRoom& e_roomroom_list(int index) const;
  inline ::proto_ff::E_RoomRoom* mutable_e_roomroom_list(int index);
  inline ::proto_ff::E_RoomRoom* add_e_roomroom_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RoomRoom >&
      e_roomroom_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RoomRoom >*
      mutable_e_roomroom_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RoomRoom)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RoomRoom > e_roomroom_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RoomRoom* default_instance_;
};
// ===================================================================


// ===================================================================

// E_RoomRoom

// optional int32 m_id = 1;
inline bool E_RoomRoom::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RoomRoom::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RoomRoom::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RoomRoom::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RoomRoom::m_id() const {
  return m_id_;
}
inline void E_RoomRoom::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_roomid = 2;
inline bool E_RoomRoom::has_m_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RoomRoom::set_has_m_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RoomRoom::clear_has_m_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RoomRoom::clear_m_roomid() {
  m_roomid_ = 0;
  clear_has_m_roomid();
}
inline ::google::protobuf::int32 E_RoomRoom::m_roomid() const {
  return m_roomid_;
}
inline void E_RoomRoom::set_m_roomid(::google::protobuf::int32 value) {
  set_has_m_roomid();
  m_roomid_ = value;
}

// optional int32 m_gameid = 3;
inline bool E_RoomRoom::has_m_gameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_RoomRoom::set_has_m_gameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_RoomRoom::clear_has_m_gameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_RoomRoom::clear_m_gameid() {
  m_gameid_ = 0;
  clear_has_m_gameid();
}
inline ::google::protobuf::int32 E_RoomRoom::m_gameid() const {
  return m_gameid_;
}
inline void E_RoomRoom::set_m_gameid(::google::protobuf::int32 value) {
  set_has_m_gameid();
  m_gameid_ = value;
}

// optional string m_gamename = 4;
inline bool E_RoomRoom::has_m_gamename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_RoomRoom::set_has_m_gamename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_RoomRoom::clear_has_m_gamename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_RoomRoom::clear_m_gamename() {
  if (m_gamename_ != &::google::protobuf::internal::kEmptyString) {
    m_gamename_->clear();
  }
  clear_has_m_gamename();
}
inline const ::std::string& E_RoomRoom::m_gamename() const {
  return *m_gamename_;
}
inline void E_RoomRoom::set_m_gamename(const ::std::string& value) {
  set_has_m_gamename();
  if (m_gamename_ == &::google::protobuf::internal::kEmptyString) {
    m_gamename_ = new ::std::string;
  }
  m_gamename_->assign(value);
}
inline void E_RoomRoom::set_m_gamename(const char* value) {
  set_has_m_gamename();
  if (m_gamename_ == &::google::protobuf::internal::kEmptyString) {
    m_gamename_ = new ::std::string;
  }
  m_gamename_->assign(value);
}
inline void E_RoomRoom::set_m_gamename(const char* value, size_t size) {
  set_has_m_gamename();
  if (m_gamename_ == &::google::protobuf::internal::kEmptyString) {
    m_gamename_ = new ::std::string;
  }
  m_gamename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RoomRoom::mutable_m_gamename() {
  set_has_m_gamename();
  if (m_gamename_ == &::google::protobuf::internal::kEmptyString) {
    m_gamename_ = new ::std::string;
  }
  return m_gamename_;
}
inline ::std::string* E_RoomRoom::release_m_gamename() {
  clear_has_m_gamename();
  if (m_gamename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_gamename_;
    m_gamename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RoomRoom::set_allocated_m_gamename(::std::string* m_gamename) {
  if (m_gamename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gamename_;
  }
  if (m_gamename) {
    set_has_m_gamename();
    m_gamename_ = m_gamename;
  } else {
    clear_has_m_gamename();
    m_gamename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_roomtype = 5;
inline bool E_RoomRoom::has_m_roomtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_RoomRoom::set_has_m_roomtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_RoomRoom::clear_has_m_roomtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_RoomRoom::clear_m_roomtype() {
  m_roomtype_ = 0;
  clear_has_m_roomtype();
}
inline ::google::protobuf::int32 E_RoomRoom::m_roomtype() const {
  return m_roomtype_;
}
inline void E_RoomRoom::set_m_roomtype(::google::protobuf::int32 value) {
  set_has_m_roomtype();
  m_roomtype_ = value;
}

// optional int32 m_roomlevel = 6;
inline bool E_RoomRoom::has_m_roomlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_RoomRoom::set_has_m_roomlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_RoomRoom::clear_has_m_roomlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_RoomRoom::clear_m_roomlevel() {
  m_roomlevel_ = 0;
  clear_has_m_roomlevel();
}
inline ::google::protobuf::int32 E_RoomRoom::m_roomlevel() const {
  return m_roomlevel_;
}
inline void E_RoomRoom::set_m_roomlevel(::google::protobuf::int32 value) {
  set_has_m_roomlevel();
  m_roomlevel_ = value;
}

// optional string m_roomname = 7;
inline bool E_RoomRoom::has_m_roomname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_RoomRoom::set_has_m_roomname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_RoomRoom::clear_has_m_roomname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_RoomRoom::clear_m_roomname() {
  if (m_roomname_ != &::google::protobuf::internal::kEmptyString) {
    m_roomname_->clear();
  }
  clear_has_m_roomname();
}
inline const ::std::string& E_RoomRoom::m_roomname() const {
  return *m_roomname_;
}
inline void E_RoomRoom::set_m_roomname(const ::std::string& value) {
  set_has_m_roomname();
  if (m_roomname_ == &::google::protobuf::internal::kEmptyString) {
    m_roomname_ = new ::std::string;
  }
  m_roomname_->assign(value);
}
inline void E_RoomRoom::set_m_roomname(const char* value) {
  set_has_m_roomname();
  if (m_roomname_ == &::google::protobuf::internal::kEmptyString) {
    m_roomname_ = new ::std::string;
  }
  m_roomname_->assign(value);
}
inline void E_RoomRoom::set_m_roomname(const char* value, size_t size) {
  set_has_m_roomname();
  if (m_roomname_ == &::google::protobuf::internal::kEmptyString) {
    m_roomname_ = new ::std::string;
  }
  m_roomname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RoomRoom::mutable_m_roomname() {
  set_has_m_roomname();
  if (m_roomname_ == &::google::protobuf::internal::kEmptyString) {
    m_roomname_ = new ::std::string;
  }
  return m_roomname_;
}
inline ::std::string* E_RoomRoom::release_m_roomname() {
  clear_has_m_roomname();
  if (m_roomname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_roomname_;
    m_roomname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RoomRoom::set_allocated_m_roomname(::std::string* m_roomname) {
  if (m_roomname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_roomname_;
  }
  if (m_roomname) {
    set_has_m_roomname();
    m_roomname_ = m_roomname;
  } else {
    clear_has_m_roomname();
    m_roomname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_sitenum = 8;
inline bool E_RoomRoom::has_m_sitenum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_RoomRoom::set_has_m_sitenum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_RoomRoom::clear_has_m_sitenum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_RoomRoom::clear_m_sitenum() {
  m_sitenum_ = 0;
  clear_has_m_sitenum();
}
inline ::google::protobuf::int32 E_RoomRoom::m_sitenum() const {
  return m_sitenum_;
}
inline void E_RoomRoom::set_m_sitenum(::google::protobuf::int32 value) {
  set_has_m_sitenum();
  m_sitenum_ = value;
}

// optional int32 m_deskcount = 9;
inline bool E_RoomRoom::has_m_deskcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_RoomRoom::set_has_m_deskcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_RoomRoom::clear_has_m_deskcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_RoomRoom::clear_m_deskcount() {
  m_deskcount_ = 0;
  clear_has_m_deskcount();
}
inline ::google::protobuf::int32 E_RoomRoom::m_deskcount() const {
  return m_deskcount_;
}
inline void E_RoomRoom::set_m_deskcount(::google::protobuf::int32 value) {
  set_has_m_deskcount();
  m_deskcount_ = value;
}

// optional int32 m_maxpeople = 10;
inline bool E_RoomRoom::has_m_maxpeople() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_RoomRoom::set_has_m_maxpeople() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_RoomRoom::clear_has_m_maxpeople() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_RoomRoom::clear_m_maxpeople() {
  m_maxpeople_ = 0;
  clear_has_m_maxpeople();
}
inline ::google::protobuf::int32 E_RoomRoom::m_maxpeople() const {
  return m_maxpeople_;
}
inline void E_RoomRoom::set_m_maxpeople(::google::protobuf::int32 value) {
  set_has_m_maxpeople();
  m_maxpeople_ = value;
}

// optional int32 m_enter_min = 11;
inline bool E_RoomRoom::has_m_enter_min() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_RoomRoom::set_has_m_enter_min() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_RoomRoom::clear_has_m_enter_min() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_RoomRoom::clear_m_enter_min() {
  m_enter_min_ = 0;
  clear_has_m_enter_min();
}
inline ::google::protobuf::int32 E_RoomRoom::m_enter_min() const {
  return m_enter_min_;
}
inline void E_RoomRoom::set_m_enter_min(::google::protobuf::int32 value) {
  set_has_m_enter_min();
  m_enter_min_ = value;
}

// optional int32 m_enter_max = 12;
inline bool E_RoomRoom::has_m_enter_max() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_RoomRoom::set_has_m_enter_max() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_RoomRoom::clear_has_m_enter_max() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_RoomRoom::clear_m_enter_max() {
  m_enter_max_ = 0;
  clear_has_m_enter_max();
}
inline ::google::protobuf::int32 E_RoomRoom::m_enter_max() const {
  return m_enter_max_;
}
inline void E_RoomRoom::set_m_enter_max(::google::protobuf::int32 value) {
  set_has_m_enter_max();
  m_enter_max_ = value;
}

// optional int32 m_auto_chair = 13;
inline bool E_RoomRoom::has_m_auto_chair() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_RoomRoom::set_has_m_auto_chair() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_RoomRoom::clear_has_m_auto_chair() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_RoomRoom::clear_m_auto_chair() {
  m_auto_chair_ = 0;
  clear_has_m_auto_chair();
}
inline ::google::protobuf::int32 E_RoomRoom::m_auto_chair() const {
  return m_auto_chair_;
}
inline void E_RoomRoom::set_m_auto_chair(::google::protobuf::int32 value) {
  set_has_m_auto_chair();
  m_auto_chair_ = value;
}

// optional int32 m_is_exp_scene = 14;
inline bool E_RoomRoom::has_m_is_exp_scene() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_RoomRoom::set_has_m_is_exp_scene() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_RoomRoom::clear_has_m_is_exp_scene() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_RoomRoom::clear_m_is_exp_scene() {
  m_is_exp_scene_ = 0;
  clear_has_m_is_exp_scene();
}
inline ::google::protobuf::int32 E_RoomRoom::m_is_exp_scene() const {
  return m_is_exp_scene_;
}
inline void E_RoomRoom::set_m_is_exp_scene(::google::protobuf::int32 value) {
  set_has_m_is_exp_scene();
  m_is_exp_scene_ = value;
}

// optional int32 m_exp_scene_gold = 15;
inline bool E_RoomRoom::has_m_exp_scene_gold() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_RoomRoom::set_has_m_exp_scene_gold() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_RoomRoom::clear_has_m_exp_scene_gold() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_RoomRoom::clear_m_exp_scene_gold() {
  m_exp_scene_gold_ = 0;
  clear_has_m_exp_scene_gold();
}
inline ::google::protobuf::int32 E_RoomRoom::m_exp_scene_gold() const {
  return m_exp_scene_gold_;
}
inline void E_RoomRoom::set_m_exp_scene_gold(::google::protobuf::int32 value) {
  set_has_m_exp_scene_gold();
  m_exp_scene_gold_ = value;
}

// optional int32 m_tax = 16;
inline bool E_RoomRoom::has_m_tax() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_RoomRoom::set_has_m_tax() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_RoomRoom::clear_has_m_tax() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_RoomRoom::clear_m_tax() {
  m_tax_ = 0;
  clear_has_m_tax();
}
inline ::google::protobuf::int32 E_RoomRoom::m_tax() const {
  return m_tax_;
}
inline void E_RoomRoom::set_m_tax(::google::protobuf::int32 value) {
  set_has_m_tax();
  m_tax_ = value;
}

// -------------------------------------------------------------------

// Sheet_RoomRoom

// repeated .proto_ff.E_RoomRoom E_RoomRoom_List = 1;
inline int Sheet_RoomRoom::e_roomroom_list_size() const {
  return e_roomroom_list_.size();
}
inline void Sheet_RoomRoom::clear_e_roomroom_list() {
  e_roomroom_list_.Clear();
}
inline const ::proto_ff::E_RoomRoom& Sheet_RoomRoom::e_roomroom_list(int index) const {
  return e_roomroom_list_.Get(index);
}
inline ::proto_ff::E_RoomRoom* Sheet_RoomRoom::mutable_e_roomroom_list(int index) {
  return e_roomroom_list_.Mutable(index);
}
inline ::proto_ff::E_RoomRoom* Sheet_RoomRoom::add_e_roomroom_list() {
  return e_roomroom_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RoomRoom >&
Sheet_RoomRoom::e_roomroom_list() const {
  return e_roomroom_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RoomRoom >*
Sheet_RoomRoom::mutable_e_roomroom_list() {
  return &e_roomroom_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_room_2eproto__INCLUDED
