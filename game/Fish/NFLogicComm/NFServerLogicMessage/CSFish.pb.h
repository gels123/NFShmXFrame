// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSFish.proto

#ifndef PROTOBUF_CSFish_2eproto__INCLUDED
#define PROTOBUF_CSFish_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace gamefish {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSFish_2eproto();
void protobuf_AssignDesc_CSFish_2eproto();
void protobuf_ShutdownFile_CSFish_2eproto();

class FishInfo;
class FishList;
class cgUserReady;
class ShootBulletReq;
class ShootBulletRsp;
class cgBulletSpeed;
class gcBulletSpeed;
class gcStatus;
class cgHitfish;
class gcKillSubFish;
class KillFishRsp;
class cgAutoShoot;
class gcAutoShoot;
class cgLockOnOff;
class gcLockOnOff;
class cgLockFish;
class gcLockFish;
class UserInfo;
class UserStatus;
class UserStatusReq;
class UserStatusRsp;
class gcUserEnterDesk;
class gcUserLeaveDesk;
class gcUserDisconnectDesk;
class CannonInfo;
class cgChangeCannon;
class gcChangeCannon;
class ChangeSceneRsp;
class gcUserMoney;
class SC_DoubleGunOnOff;
class PromptInfoRsp;
class GameStatusRsp;
class CreateDianCiCannonRsp;
class DianCiCannonAimReq;
class DianCiCannonAimRsp;
class DianCiCannonShootReq;
class DianCiCannonShootRsp;
class DianCiCannonHitFishReq;
class DianCiCannonDestroyRsp;
class CreateZuanTouRsp;
class ZuanTouAimReq;
class ZuanTouAimRsp;
class ZuanTouShootReq;
class ZuanTouShootRsp;
class ZuanTouHitFishReq;
class ZuanTouBombRsp;
class SomeZuanTouInfo;
class CreateSomeZuanTouRsp;
class SomeZuanTouShootRsp;
class SomeZuanTouHitFishReq;
class SomeZuanTouBombRsp;
class CreateFireStormRsp;
class DestoryFireStormRsp;
class FireStormStatusRsp;
class FireStormScoreRsp;
class CreateMadCowRsp;
class DestoryMadCowRsp;
class MadCowStatusRsp;
class MadCowScoreRsp;
class CreateSerialBombCrabRsp;
class SerialBombCrabBombRsp;
class DestorySerialBombCrabRsp;
class HaiWangCrabHitPartReq;
class CrabPart;
class HaiWangCrabKilledPartRsp;
class HaiWangCrabKilledDeadRsp;
class CreateDelayBombRsp;
class DelayBomb_Bomb_Rsp;

// ===================================================================

class FishInfo : public ::google::protobuf::Message {
 public:
  FishInfo();
  virtual ~FishInfo();

  FishInfo(const FishInfo& from);

  inline FishInfo& operator=(const FishInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishInfo& default_instance();

  void Swap(FishInfo* other);

  // implements Message ----------------------------------------------

  FishInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishInfo& from);
  void MergeFrom(const FishInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 usFishKind = 1;
  inline bool has_usfishkind() const;
  inline void clear_usfishkind();
  static const int kUsFishKindFieldNumber = 1;
  inline ::google::protobuf::uint32 usfishkind() const;
  inline void set_usfishkind(::google::protobuf::uint32 value);

  // optional uint32 usFishID = 2;
  inline bool has_usfishid() const;
  inline void clear_usfishid();
  static const int kUsFishIDFieldNumber = 2;
  inline ::google::protobuf::uint32 usfishid() const;
  inline void set_usfishid(::google::protobuf::uint32 value);

  // repeated uint32 subFishKinds = 3;
  inline int subfishkinds_size() const;
  inline void clear_subfishkinds();
  static const int kSubFishKindsFieldNumber = 3;
  inline ::google::protobuf::uint32 subfishkinds(int index) const;
  inline void set_subfishkinds(int index, ::google::protobuf::uint32 value);
  inline void add_subfishkinds(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      subfishkinds() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_subfishkinds();

  // optional uint32 usTraceId = 4;
  inline bool has_ustraceid() const;
  inline void clear_ustraceid();
  static const int kUsTraceIdFieldNumber = 4;
  inline ::google::protobuf::uint32 ustraceid() const;
  inline void set_ustraceid(::google::protobuf::uint32 value);

  // optional uint32 usStartIndex = 5;
  inline bool has_usstartindex() const;
  inline void clear_usstartindex();
  static const int kUsStartIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 usstartindex() const;
  inline void set_usstartindex(::google::protobuf::uint32 value);

  // optional uint32 usOffsetIndex = 6;
  inline bool has_usoffsetindex() const;
  inline void clear_usoffsetindex();
  static const int kUsOffsetIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 usoffsetindex() const;
  inline void set_usoffsetindex(::google::protobuf::uint32 value);

  // optional int32 usOffsetPosX = 7;
  inline bool has_usoffsetposx() const;
  inline void clear_usoffsetposx();
  static const int kUsOffsetPosXFieldNumber = 7;
  inline ::google::protobuf::int32 usoffsetposx() const;
  inline void set_usoffsetposx(::google::protobuf::int32 value);

  // optional int32 usOffsetPoxY = 8;
  inline bool has_usoffsetpoxy() const;
  inline void clear_usoffsetpoxy();
  static const int kUsOffsetPoxYFieldNumber = 8;
  inline ::google::protobuf::int32 usoffsetpoxy() const;
  inline void set_usoffsetpoxy(::google::protobuf::int32 value);

  // optional uint32 usBirthDelay = 9;
  inline bool has_usbirthdelay() const;
  inline void clear_usbirthdelay();
  static const int kUsBirthDelayFieldNumber = 9;
  inline ::google::protobuf::uint32 usbirthdelay() const;
  inline void set_usbirthdelay(::google::protobuf::uint32 value);

  // optional uint32 usIsRedFish = 10;
  inline bool has_usisredfish() const;
  inline void clear_usisredfish();
  static const int kUsIsRedFishFieldNumber = 10;
  inline ::google::protobuf::uint32 usisredfish() const;
  inline void set_usisredfish(::google::protobuf::uint32 value);

  // optional uint32 usGroupId = 11;
  inline bool has_usgroupid() const;
  inline void clear_usgroupid();
  static const int kUsGroupIdFieldNumber = 11;
  inline ::google::protobuf::uint32 usgroupid() const;
  inline void set_usgroupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.FishInfo)
 private:
  inline void set_has_usfishkind();
  inline void clear_has_usfishkind();
  inline void set_has_usfishid();
  inline void clear_has_usfishid();
  inline void set_has_ustraceid();
  inline void clear_has_ustraceid();
  inline void set_has_usstartindex();
  inline void clear_has_usstartindex();
  inline void set_has_usoffsetindex();
  inline void clear_has_usoffsetindex();
  inline void set_has_usoffsetposx();
  inline void clear_has_usoffsetposx();
  inline void set_has_usoffsetpoxy();
  inline void clear_has_usoffsetpoxy();
  inline void set_has_usbirthdelay();
  inline void clear_has_usbirthdelay();
  inline void set_has_usisredfish();
  inline void clear_has_usisredfish();
  inline void set_has_usgroupid();
  inline void clear_has_usgroupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 usfishkind_;
  ::google::protobuf::uint32 usfishid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > subfishkinds_;
  ::google::protobuf::uint32 ustraceid_;
  ::google::protobuf::uint32 usstartindex_;
  ::google::protobuf::uint32 usoffsetindex_;
  ::google::protobuf::int32 usoffsetposx_;
  ::google::protobuf::int32 usoffsetpoxy_;
  ::google::protobuf::uint32 usbirthdelay_;
  ::google::protobuf::uint32 usisredfish_;
  ::google::protobuf::uint32 usgroupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static FishInfo* default_instance_;
};
// -------------------------------------------------------------------

class FishList : public ::google::protobuf::Message {
 public:
  FishList();
  virtual ~FishList();

  FishList(const FishList& from);

  inline FishList& operator=(const FishList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishList& default_instance();

  void Swap(FishList* other);

  // implements Message ----------------------------------------------

  FishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishList& from);
  void MergeFrom(const FishList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gamefish.FishInfo Fishes = 1;
  inline int fishes_size() const;
  inline void clear_fishes();
  static const int kFishesFieldNumber = 1;
  inline const ::gamefish::FishInfo& fishes(int index) const;
  inline ::gamefish::FishInfo* mutable_fishes(int index);
  inline ::gamefish::FishInfo* add_fishes();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::FishInfo >&
      fishes() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::FishInfo >*
      mutable_fishes();

  // @@protoc_insertion_point(class_scope:gamefish.FishList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::gamefish::FishInfo > fishes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static FishList* default_instance_;
};
// -------------------------------------------------------------------

class cgUserReady : public ::google::protobuf::Message {
 public:
  cgUserReady();
  virtual ~cgUserReady();

  cgUserReady(const cgUserReady& from);

  inline cgUserReady& operator=(const cgUserReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgUserReady& default_instance();

  void Swap(cgUserReady* other);

  // implements Message ----------------------------------------------

  cgUserReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgUserReady& from);
  void MergeFrom(const cgUserReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usResvered = 1;
  inline bool has_usresvered() const;
  inline void clear_usresvered();
  static const int kUsResveredFieldNumber = 1;
  inline ::google::protobuf::int32 usresvered() const;
  inline void set_usresvered(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.cgUserReady)
 private:
  inline void set_has_usresvered();
  inline void clear_has_usresvered();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usresvered_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgUserReady* default_instance_;
};
// -------------------------------------------------------------------

class ShootBulletReq : public ::google::protobuf::Message {
 public:
  ShootBulletReq();
  virtual ~ShootBulletReq();

  ShootBulletReq(const ShootBulletReq& from);

  inline ShootBulletReq& operator=(const ShootBulletReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShootBulletReq& default_instance();

  void Swap(ShootBulletReq* other);

  // implements Message ----------------------------------------------

  ShootBulletReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShootBulletReq& from);
  void MergeFrom(const ShootBulletReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usBulletId = 1;
  inline bool has_usbulletid() const;
  inline void clear_usbulletid();
  static const int kUsBulletIdFieldNumber = 1;
  inline ::google::protobuf::int32 usbulletid() const;
  inline void set_usbulletid(::google::protobuf::int32 value);

  // optional int32 sAngle = 2;
  inline bool has_sangle() const;
  inline void clear_sangle();
  static const int kSAngleFieldNumber = 2;
  inline ::google::protobuf::int32 sangle() const;
  inline void set_sangle(::google::protobuf::int32 value);

  // optional int32 byCannonLevelIndex = 3;
  inline bool has_bycannonlevelindex() const;
  inline void clear_bycannonlevelindex();
  static const int kByCannonLevelIndexFieldNumber = 3;
  inline ::google::protobuf::int32 bycannonlevelindex() const;
  inline void set_bycannonlevelindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ShootBulletReq)
 private:
  inline void set_has_usbulletid();
  inline void clear_has_usbulletid();
  inline void set_has_sangle();
  inline void clear_has_sangle();
  inline void set_has_bycannonlevelindex();
  inline void clear_has_bycannonlevelindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usbulletid_;
  ::google::protobuf::int32 sangle_;
  ::google::protobuf::int32 bycannonlevelindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ShootBulletReq* default_instance_;
};
// -------------------------------------------------------------------

class ShootBulletRsp : public ::google::protobuf::Message {
 public:
  ShootBulletRsp();
  virtual ~ShootBulletRsp();

  ShootBulletRsp(const ShootBulletRsp& from);

  inline ShootBulletRsp& operator=(const ShootBulletRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShootBulletRsp& default_instance();

  void Swap(ShootBulletRsp* other);

  // implements Message ----------------------------------------------

  ShootBulletRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShootBulletRsp& from);
  void MergeFrom(const ShootBulletRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usBulletId = 1;
  inline bool has_usbulletid() const;
  inline void clear_usbulletid();
  static const int kUsBulletIdFieldNumber = 1;
  inline ::google::protobuf::int32 usbulletid() const;
  inline void set_usbulletid(::google::protobuf::int32 value);

  // optional int32 sAngle = 2;
  inline bool has_sangle() const;
  inline void clear_sangle();
  static const int kSAngleFieldNumber = 2;
  inline ::google::protobuf::int32 sangle() const;
  inline void set_sangle(::google::protobuf::int32 value);

  // optional int32 usSpeedIndex = 3;
  inline bool has_usspeedindex() const;
  inline void clear_usspeedindex();
  static const int kUsSpeedIndexFieldNumber = 3;
  inline ::google::protobuf::int32 usspeedindex() const;
  inline void set_usspeedindex(::google::protobuf::int32 value);

  // optional int32 usIntervalIndex = 4;
  inline bool has_usintervalindex() const;
  inline void clear_usintervalindex();
  static const int kUsIntervalIndexFieldNumber = 4;
  inline ::google::protobuf::int32 usintervalindex() const;
  inline void set_usintervalindex(::google::protobuf::int32 value);

  // optional int32 usLevelIndex = 5;
  inline bool has_uslevelindex() const;
  inline void clear_uslevelindex();
  static const int kUsLevelIndexFieldNumber = 5;
  inline ::google::protobuf::int32 uslevelindex() const;
  inline void set_uslevelindex(::google::protobuf::int32 value);

  // optional int32 usChairId = 6;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 6;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usErrorCode = 7;
  inline bool has_userrorcode() const;
  inline void clear_userrorcode();
  static const int kUsErrorCodeFieldNumber = 7;
  inline ::google::protobuf::int32 userrorcode() const;
  inline void set_userrorcode(::google::protobuf::int32 value);

  // optional int32 usProcUserChairId = 8;
  inline bool has_usprocuserchairid() const;
  inline void clear_usprocuserchairid();
  static const int kUsProcUserChairIdFieldNumber = 8;
  inline ::google::protobuf::int32 usprocuserchairid() const;
  inline void set_usprocuserchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ShootBulletRsp)
 private:
  inline void set_has_usbulletid();
  inline void clear_has_usbulletid();
  inline void set_has_sangle();
  inline void clear_has_sangle();
  inline void set_has_usspeedindex();
  inline void clear_has_usspeedindex();
  inline void set_has_usintervalindex();
  inline void clear_has_usintervalindex();
  inline void set_has_uslevelindex();
  inline void clear_has_uslevelindex();
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_userrorcode();
  inline void clear_has_userrorcode();
  inline void set_has_usprocuserchairid();
  inline void clear_has_usprocuserchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usbulletid_;
  ::google::protobuf::int32 sangle_;
  ::google::protobuf::int32 usspeedindex_;
  ::google::protobuf::int32 usintervalindex_;
  ::google::protobuf::int32 uslevelindex_;
  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 userrorcode_;
  ::google::protobuf::int32 usprocuserchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ShootBulletRsp* default_instance_;
};
// -------------------------------------------------------------------

class cgBulletSpeed : public ::google::protobuf::Message {
 public:
  cgBulletSpeed();
  virtual ~cgBulletSpeed();

  cgBulletSpeed(const cgBulletSpeed& from);

  inline cgBulletSpeed& operator=(const cgBulletSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgBulletSpeed& default_instance();

  void Swap(cgBulletSpeed* other);

  // implements Message ----------------------------------------------

  cgBulletSpeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgBulletSpeed& from);
  void MergeFrom(const cgBulletSpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usSpeedIndex = 1;
  inline bool has_usspeedindex() const;
  inline void clear_usspeedindex();
  static const int kUsSpeedIndexFieldNumber = 1;
  inline ::google::protobuf::int32 usspeedindex() const;
  inline void set_usspeedindex(::google::protobuf::int32 value);

  // optional int32 usIntervalIndex = 2;
  inline bool has_usintervalindex() const;
  inline void clear_usintervalindex();
  static const int kUsIntervalIndexFieldNumber = 2;
  inline ::google::protobuf::int32 usintervalindex() const;
  inline void set_usintervalindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.cgBulletSpeed)
 private:
  inline void set_has_usspeedindex();
  inline void clear_has_usspeedindex();
  inline void set_has_usintervalindex();
  inline void clear_has_usintervalindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usspeedindex_;
  ::google::protobuf::int32 usintervalindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgBulletSpeed* default_instance_;
};
// -------------------------------------------------------------------

class gcBulletSpeed : public ::google::protobuf::Message {
 public:
  gcBulletSpeed();
  virtual ~gcBulletSpeed();

  gcBulletSpeed(const gcBulletSpeed& from);

  inline gcBulletSpeed& operator=(const gcBulletSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcBulletSpeed& default_instance();

  void Swap(gcBulletSpeed* other);

  // implements Message ----------------------------------------------

  gcBulletSpeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcBulletSpeed& from);
  void MergeFrom(const gcBulletSpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSpeedIndex = 2;
  inline bool has_usspeedindex() const;
  inline void clear_usspeedindex();
  static const int kUsSpeedIndexFieldNumber = 2;
  inline ::google::protobuf::int32 usspeedindex() const;
  inline void set_usspeedindex(::google::protobuf::int32 value);

  // optional int32 usIntervalIndex = 3;
  inline bool has_usintervalindex() const;
  inline void clear_usintervalindex();
  static const int kUsIntervalIndexFieldNumber = 3;
  inline ::google::protobuf::int32 usintervalindex() const;
  inline void set_usintervalindex(::google::protobuf::int32 value);

  // optional int32 usErrorCode = 4;
  inline bool has_userrorcode() const;
  inline void clear_userrorcode();
  static const int kUsErrorCodeFieldNumber = 4;
  inline ::google::protobuf::int32 userrorcode() const;
  inline void set_userrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcBulletSpeed)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usspeedindex();
  inline void clear_has_usspeedindex();
  inline void set_has_usintervalindex();
  inline void clear_has_usintervalindex();
  inline void set_has_userrorcode();
  inline void clear_has_userrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usspeedindex_;
  ::google::protobuf::int32 usintervalindex_;
  ::google::protobuf::int32 userrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcBulletSpeed* default_instance_;
};
// -------------------------------------------------------------------

class gcStatus : public ::google::protobuf::Message {
 public:
  gcStatus();
  virtual ~gcStatus();

  gcStatus(const gcStatus& from);

  inline gcStatus& operator=(const gcStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcStatus& default_instance();

  void Swap(gcStatus* other);

  // implements Message ----------------------------------------------

  gcStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcStatus& from);
  void MergeFrom(const gcStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usStatus = 1;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 1;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcStatus)
 private:
  inline void set_has_usstatus();
  inline void clear_has_usstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcStatus* default_instance_;
};
// -------------------------------------------------------------------

class cgHitfish : public ::google::protobuf::Message {
 public:
  cgHitfish();
  virtual ~cgHitfish();

  cgHitfish(const cgHitfish& from);

  inline cgHitfish& operator=(const cgHitfish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgHitfish& default_instance();

  void Swap(cgHitfish* other);

  // implements Message ----------------------------------------------

  cgHitfish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgHitfish& from);
  void MergeFrom(const cgHitfish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  inline bool has_fishid() const;
  inline void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  inline ::google::protobuf::int32 fishid() const;
  inline void set_fishid(::google::protobuf::int32 value);

  // optional int32 subFishId = 2;
  inline bool has_subfishid() const;
  inline void clear_subfishid();
  static const int kSubFishIdFieldNumber = 2;
  inline ::google::protobuf::int32 subfishid() const;
  inline void set_subfishid(::google::protobuf::int32 value);

  // optional int32 bulletid = 3;
  inline bool has_bulletid() const;
  inline void clear_bulletid();
  static const int kBulletidFieldNumber = 3;
  inline ::google::protobuf::int32 bulletid() const;
  inline void set_bulletid(::google::protobuf::int32 value);

  // optional int32 usRobotChairId = 4;
  inline bool has_usrobotchairid() const;
  inline void clear_usrobotchairid();
  static const int kUsRobotChairIdFieldNumber = 4;
  inline ::google::protobuf::int32 usrobotchairid() const;
  inline void set_usrobotchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.cgHitfish)
 private:
  inline void set_has_fishid();
  inline void clear_has_fishid();
  inline void set_has_subfishid();
  inline void clear_has_subfishid();
  inline void set_has_bulletid();
  inline void clear_has_bulletid();
  inline void set_has_usrobotchairid();
  inline void clear_has_usrobotchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int32 subfishid_;
  ::google::protobuf::int32 bulletid_;
  ::google::protobuf::int32 usrobotchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgHitfish* default_instance_;
};
// -------------------------------------------------------------------

class gcKillSubFish : public ::google::protobuf::Message {
 public:
  gcKillSubFish();
  virtual ~gcKillSubFish();

  gcKillSubFish(const gcKillSubFish& from);

  inline gcKillSubFish& operator=(const gcKillSubFish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcKillSubFish& default_instance();

  void Swap(gcKillSubFish* other);

  // implements Message ----------------------------------------------

  gcKillSubFish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcKillSubFish& from);
  void MergeFrom(const gcKillSubFish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  inline bool has_fishid() const;
  inline void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  inline ::google::protobuf::int32 fishid() const;
  inline void set_fishid(::google::protobuf::int32 value);

  // optional int32 fishType = 2;
  inline bool has_fishtype() const;
  inline void clear_fishtype();
  static const int kFishTypeFieldNumber = 2;
  inline ::google::protobuf::int32 fishtype() const;
  inline void set_fishtype(::google::protobuf::int32 value);

  // optional int32 multiple = 3;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 3;
  inline ::google::protobuf::int32 multiple() const;
  inline void set_multiple(::google::protobuf::int32 value);

  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcKillSubFish)
 private:
  inline void set_has_fishid();
  inline void clear_has_fishid();
  inline void set_has_fishtype();
  inline void clear_has_fishtype();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int32 fishtype_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcKillSubFish* default_instance_;
};
// -------------------------------------------------------------------

class KillFishRsp : public ::google::protobuf::Message {
 public:
  KillFishRsp();
  virtual ~KillFishRsp();

  KillFishRsp(const KillFishRsp& from);

  inline KillFishRsp& operator=(const KillFishRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillFishRsp& default_instance();

  void Swap(KillFishRsp* other);

  // implements Message ----------------------------------------------

  KillFishRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillFishRsp& from);
  void MergeFrom(const KillFishRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bombUID = 1;
  inline bool has_bombuid() const;
  inline void clear_bombuid();
  static const int kBombUIDFieldNumber = 1;
  inline ::google::protobuf::int32 bombuid() const;
  inline void set_bombuid(::google::protobuf::int32 value);

  // optional int32 mainFishUID = 2;
  inline bool has_mainfishuid() const;
  inline void clear_mainfishuid();
  static const int kMainFishUIDFieldNumber = 2;
  inline ::google::protobuf::int32 mainfishuid() const;
  inline void set_mainfishuid(::google::protobuf::int32 value);

  // optional int32 mainFishId = 3;
  inline bool has_mainfishid() const;
  inline void clear_mainfishid();
  static const int kMainFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 mainfishid() const;
  inline void set_mainfishid(::google::protobuf::int32 value);

  // optional int32 mainFishType = 4;
  inline bool has_mainfishtype() const;
  inline void clear_mainfishtype();
  static const int kMainFishTypeFieldNumber = 4;
  inline ::google::protobuf::int32 mainfishtype() const;
  inline void set_mainfishtype(::google::protobuf::int32 value);

  // optional int32 mainMultiple = 5;
  inline bool has_mainmultiple() const;
  inline void clear_mainmultiple();
  static const int kMainMultipleFieldNumber = 5;
  inline ::google::protobuf::int32 mainmultiple() const;
  inline void set_mainmultiple(::google::protobuf::int32 value);

  // optional int32 mainScore = 6;
  inline bool has_mainscore() const;
  inline void clear_mainscore();
  static const int kMainScoreFieldNumber = 6;
  inline ::google::protobuf::int32 mainscore() const;
  inline void set_mainscore(::google::protobuf::int32 value);

  // optional int32 totalScore = 7;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalScoreFieldNumber = 7;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // optional int32 totalRatio = 8;
  inline bool has_totalratio() const;
  inline void clear_totalratio();
  static const int kTotalRatioFieldNumber = 8;
  inline ::google::protobuf::int32 totalratio() const;
  inline void set_totalratio(::google::protobuf::int32 value);

  // optional int32 chairId = 9;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIdFieldNumber = 9;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 usErrorCode = 10;
  inline bool has_userrorcode() const;
  inline void clear_userrorcode();
  static const int kUsErrorCodeFieldNumber = 10;
  inline ::google::protobuf::int32 userrorcode() const;
  inline void set_userrorcode(::google::protobuf::int32 value);

  // optional int32 subFishCount = 11;
  inline bool has_subfishcount() const;
  inline void clear_subfishcount();
  static const int kSubFishCountFieldNumber = 11;
  inline ::google::protobuf::int32 subfishcount() const;
  inline void set_subfishcount(::google::protobuf::int32 value);

  // repeated .gamefish.KillFishRsp SubFishes = 12;
  inline int subfishes_size() const;
  inline void clear_subfishes();
  static const int kSubFishesFieldNumber = 12;
  inline const ::gamefish::KillFishRsp& subfishes(int index) const;
  inline ::gamefish::KillFishRsp* mutable_subfishes(int index);
  inline ::gamefish::KillFishRsp* add_subfishes();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::KillFishRsp >&
      subfishes() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::KillFishRsp >*
      mutable_subfishes();

  // optional int32 bulletid = 13;
  inline bool has_bulletid() const;
  inline void clear_bulletid();
  static const int kBulletidFieldNumber = 13;
  inline ::google::protobuf::int32 bulletid() const;
  inline void set_bulletid(::google::protobuf::int32 value);

  // optional int32 bombFishId = 14;
  inline bool has_bombfishid() const;
  inline void clear_bombfishid();
  static const int kBombFishIdFieldNumber = 14;
  inline ::google::protobuf::int32 bombfishid() const;
  inline void set_bombfishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.KillFishRsp)
 private:
  inline void set_has_bombuid();
  inline void clear_has_bombuid();
  inline void set_has_mainfishuid();
  inline void clear_has_mainfishuid();
  inline void set_has_mainfishid();
  inline void clear_has_mainfishid();
  inline void set_has_mainfishtype();
  inline void clear_has_mainfishtype();
  inline void set_has_mainmultiple();
  inline void clear_has_mainmultiple();
  inline void set_has_mainscore();
  inline void clear_has_mainscore();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_totalratio();
  inline void clear_has_totalratio();
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_userrorcode();
  inline void clear_has_userrorcode();
  inline void set_has_subfishcount();
  inline void clear_has_subfishcount();
  inline void set_has_bulletid();
  inline void clear_has_bulletid();
  inline void set_has_bombfishid();
  inline void clear_has_bombfishid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bombuid_;
  ::google::protobuf::int32 mainfishuid_;
  ::google::protobuf::int32 mainfishid_;
  ::google::protobuf::int32 mainfishtype_;
  ::google::protobuf::int32 mainmultiple_;
  ::google::protobuf::int32 mainscore_;
  ::google::protobuf::int32 totalscore_;
  ::google::protobuf::int32 totalratio_;
  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 userrorcode_;
  ::google::protobuf::RepeatedPtrField< ::gamefish::KillFishRsp > subfishes_;
  ::google::protobuf::int32 subfishcount_;
  ::google::protobuf::int32 bulletid_;
  ::google::protobuf::int32 bombfishid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static KillFishRsp* default_instance_;
};
// -------------------------------------------------------------------

class cgAutoShoot : public ::google::protobuf::Message {
 public:
  cgAutoShoot();
  virtual ~cgAutoShoot();

  cgAutoShoot(const cgAutoShoot& from);

  inline cgAutoShoot& operator=(const cgAutoShoot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgAutoShoot& default_instance();

  void Swap(cgAutoShoot* other);

  // implements Message ----------------------------------------------

  cgAutoShoot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgAutoShoot& from);
  void MergeFrom(const cgAutoShoot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool onOff = 1;
  inline bool has_onoff() const;
  inline void clear_onoff();
  static const int kOnOffFieldNumber = 1;
  inline bool onoff() const;
  inline void set_onoff(bool value);

  // @@protoc_insertion_point(class_scope:gamefish.cgAutoShoot)
 private:
  inline void set_has_onoff();
  inline void clear_has_onoff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool onoff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgAutoShoot* default_instance_;
};
// -------------------------------------------------------------------

class gcAutoShoot : public ::google::protobuf::Message {
 public:
  gcAutoShoot();
  virtual ~gcAutoShoot();

  gcAutoShoot(const gcAutoShoot& from);

  inline gcAutoShoot& operator=(const gcAutoShoot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcAutoShoot& default_instance();

  void Swap(gcAutoShoot* other);

  // implements Message ----------------------------------------------

  gcAutoShoot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcAutoShoot& from);
  void MergeFrom(const gcAutoShoot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairId = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 onOff = 2;
  inline bool has_onoff() const;
  inline void clear_onoff();
  static const int kOnOffFieldNumber = 2;
  inline ::google::protobuf::int32 onoff() const;
  inline void set_onoff(::google::protobuf::int32 value);

  // optional int32 usErrorCode = 3;
  inline bool has_userrorcode() const;
  inline void clear_userrorcode();
  static const int kUsErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 userrorcode() const;
  inline void set_userrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcAutoShoot)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_onoff();
  inline void clear_has_onoff();
  inline void set_has_userrorcode();
  inline void clear_has_userrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 onoff_;
  ::google::protobuf::int32 userrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcAutoShoot* default_instance_;
};
// -------------------------------------------------------------------

class cgLockOnOff : public ::google::protobuf::Message {
 public:
  cgLockOnOff();
  virtual ~cgLockOnOff();

  cgLockOnOff(const cgLockOnOff& from);

  inline cgLockOnOff& operator=(const cgLockOnOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgLockOnOff& default_instance();

  void Swap(cgLockOnOff* other);

  // implements Message ----------------------------------------------

  cgLockOnOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgLockOnOff& from);
  void MergeFrom(const cgLockOnOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool onOff = 1;
  inline bool has_onoff() const;
  inline void clear_onoff();
  static const int kOnOffFieldNumber = 1;
  inline bool onoff() const;
  inline void set_onoff(bool value);

  // @@protoc_insertion_point(class_scope:gamefish.cgLockOnOff)
 private:
  inline void set_has_onoff();
  inline void clear_has_onoff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool onoff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgLockOnOff* default_instance_;
};
// -------------------------------------------------------------------

class gcLockOnOff : public ::google::protobuf::Message {
 public:
  gcLockOnOff();
  virtual ~gcLockOnOff();

  gcLockOnOff(const gcLockOnOff& from);

  inline gcLockOnOff& operator=(const gcLockOnOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcLockOnOff& default_instance();

  void Swap(gcLockOnOff* other);

  // implements Message ----------------------------------------------

  gcLockOnOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcLockOnOff& from);
  void MergeFrom(const gcLockOnOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairId = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional bool onOff = 2;
  inline bool has_onoff() const;
  inline void clear_onoff();
  static const int kOnOffFieldNumber = 2;
  inline bool onoff() const;
  inline void set_onoff(bool value);

  // optional int32 usErrorCode = 3;
  inline bool has_userrorcode() const;
  inline void clear_userrorcode();
  static const int kUsErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 userrorcode() const;
  inline void set_userrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcLockOnOff)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_onoff();
  inline void clear_has_onoff();
  inline void set_has_userrorcode();
  inline void clear_has_userrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  bool onoff_;
  ::google::protobuf::int32 userrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcLockOnOff* default_instance_;
};
// -------------------------------------------------------------------

class cgLockFish : public ::google::protobuf::Message {
 public:
  cgLockFish();
  virtual ~cgLockFish();

  cgLockFish(const cgLockFish& from);

  inline cgLockFish& operator=(const cgLockFish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgLockFish& default_instance();

  void Swap(cgLockFish* other);

  // implements Message ----------------------------------------------

  cgLockFish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgLockFish& from);
  void MergeFrom(const cgLockFish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  inline bool has_fishid() const;
  inline void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  inline ::google::protobuf::int32 fishid() const;
  inline void set_fishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.cgLockFish)
 private:
  inline void set_has_fishid();
  inline void clear_has_fishid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fishid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgLockFish* default_instance_;
};
// -------------------------------------------------------------------

class gcLockFish : public ::google::protobuf::Message {
 public:
  gcLockFish();
  virtual ~gcLockFish();

  gcLockFish(const gcLockFish& from);

  inline gcLockFish& operator=(const gcLockFish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcLockFish& default_instance();

  void Swap(gcLockFish* other);

  // implements Message ----------------------------------------------

  gcLockFish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcLockFish& from);
  void MergeFrom(const gcLockFish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairId = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 fishId = 2;
  inline bool has_fishid() const;
  inline void clear_fishid();
  static const int kFishIdFieldNumber = 2;
  inline ::google::protobuf::int32 fishid() const;
  inline void set_fishid(::google::protobuf::int32 value);

  // optional int32 usErrorCode = 3;
  inline bool has_userrorcode() const;
  inline void clear_userrorcode();
  static const int kUsErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 userrorcode() const;
  inline void set_userrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcLockFish)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_fishid();
  inline void clear_has_fishid();
  inline void set_has_userrorcode();
  inline void clear_has_userrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int32 userrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcLockFish* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  UserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional uint64 user_money = 3;
  inline bool has_user_money() const;
  inline void clear_user_money();
  static const int kUserMoneyFieldNumber = 3;
  inline ::google::protobuf::uint64 user_money() const;
  inline void set_user_money(::google::protobuf::uint64 value);

  // optional uint32 cannon_id = 4;
  inline bool has_cannon_id() const;
  inline void clear_cannon_id();
  static const int kCannonIdFieldNumber = 4;
  inline ::google::protobuf::uint32 cannon_id() const;
  inline void set_cannon_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.UserInfo)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_user_money();
  inline void clear_has_user_money();
  inline void set_has_cannon_id();
  inline void clear_has_cannon_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_name_;
  ::google::protobuf::uint32 chair_id_;
  ::google::protobuf::uint32 cannon_id_;
  ::google::protobuf::uint64 user_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserStatus : public ::google::protobuf::Message {
 public:
  UserStatus();
  virtual ~UserStatus();

  UserStatus(const UserStatus& from);

  inline UserStatus& operator=(const UserStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatus& default_instance();

  void Swap(UserStatus* other);

  // implements Message ----------------------------------------------

  UserStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserStatus& from);
  void MergeFrom(const UserStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional bool lockfish_onoff = 2;
  inline bool has_lockfish_onoff() const;
  inline void clear_lockfish_onoff();
  static const int kLockfishOnoffFieldNumber = 2;
  inline bool lockfish_onoff() const;
  inline void set_lockfish_onoff(bool value);

  // optional uint32 lockfish_uid = 3;
  inline bool has_lockfish_uid() const;
  inline void clear_lockfish_uid();
  static const int kLockfishUidFieldNumber = 3;
  inline ::google::protobuf::uint32 lockfish_uid() const;
  inline void set_lockfish_uid(::google::protobuf::uint32 value);

  // optional bool autoshoot_onoff = 4;
  inline bool has_autoshoot_onoff() const;
  inline void clear_autoshoot_onoff();
  static const int kAutoshootOnoffFieldNumber = 4;
  inline bool autoshoot_onoff() const;
  inline void set_autoshoot_onoff(bool value);

  // optional uint32 bullet_speedlev = 5;
  inline bool has_bullet_speedlev() const;
  inline void clear_bullet_speedlev();
  static const int kBulletSpeedlevFieldNumber = 5;
  inline ::google::protobuf::uint32 bullet_speedlev() const;
  inline void set_bullet_speedlev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.UserStatus)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_lockfish_onoff();
  inline void clear_has_lockfish_onoff();
  inline void set_has_lockfish_uid();
  inline void clear_has_lockfish_uid();
  inline void set_has_autoshoot_onoff();
  inline void clear_has_autoshoot_onoff();
  inline void set_has_bullet_speedlev();
  inline void clear_has_bullet_speedlev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chair_id_;
  ::google::protobuf::uint32 lockfish_uid_;
  bool lockfish_onoff_;
  bool autoshoot_onoff_;
  ::google::protobuf::uint32 bullet_speedlev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static UserStatus* default_instance_;
};
// -------------------------------------------------------------------

class UserStatusReq : public ::google::protobuf::Message {
 public:
  UserStatusReq();
  virtual ~UserStatusReq();

  UserStatusReq(const UserStatusReq& from);

  inline UserStatusReq& operator=(const UserStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatusReq& default_instance();

  void Swap(UserStatusReq* other);

  // implements Message ----------------------------------------------

  UserStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserStatusReq& from);
  void MergeFrom(const UserStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reserved = 1;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 1;
  inline ::google::protobuf::uint32 reserved() const;
  inline void set_reserved(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.UserStatusReq)
 private:
  inline void set_has_reserved();
  inline void clear_has_reserved();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reserved_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static UserStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class UserStatusRsp : public ::google::protobuf::Message {
 public:
  UserStatusRsp();
  virtual ~UserStatusRsp();

  UserStatusRsp(const UserStatusRsp& from);

  inline UserStatusRsp& operator=(const UserStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatusRsp& default_instance();

  void Swap(UserStatusRsp* other);

  // implements Message ----------------------------------------------

  UserStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserStatusRsp& from);
  void MergeFrom(const UserStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gamefish.UserStatus userstatuslist = 1;
  inline int userstatuslist_size() const;
  inline void clear_userstatuslist();
  static const int kUserstatuslistFieldNumber = 1;
  inline const ::gamefish::UserStatus& userstatuslist(int index) const;
  inline ::gamefish::UserStatus* mutable_userstatuslist(int index);
  inline ::gamefish::UserStatus* add_userstatuslist();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::UserStatus >&
      userstatuslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::UserStatus >*
      mutable_userstatuslist();

  // @@protoc_insertion_point(class_scope:gamefish.UserStatusRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::gamefish::UserStatus > userstatuslist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static UserStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class gcUserEnterDesk : public ::google::protobuf::Message {
 public:
  gcUserEnterDesk();
  virtual ~gcUserEnterDesk();

  gcUserEnterDesk(const gcUserEnterDesk& from);

  inline gcUserEnterDesk& operator=(const gcUserEnterDesk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcUserEnterDesk& default_instance();

  void Swap(gcUserEnterDesk* other);

  // implements Message ----------------------------------------------

  gcUserEnterDesk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcUserEnterDesk& from);
  void MergeFrom(const gcUserEnterDesk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gamefish.UserInfo userInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  inline const ::gamefish::UserInfo& userinfo() const;
  inline ::gamefish::UserInfo* mutable_userinfo();
  inline ::gamefish::UserInfo* release_userinfo();
  inline void set_allocated_userinfo(::gamefish::UserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:gamefish.gcUserEnterDesk)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::gamefish::UserInfo* userinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcUserEnterDesk* default_instance_;
};
// -------------------------------------------------------------------

class gcUserLeaveDesk : public ::google::protobuf::Message {
 public:
  gcUserLeaveDesk();
  virtual ~gcUserLeaveDesk();

  gcUserLeaveDesk(const gcUserLeaveDesk& from);

  inline gcUserLeaveDesk& operator=(const gcUserLeaveDesk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcUserLeaveDesk& default_instance();

  void Swap(gcUserLeaveDesk* other);

  // implements Message ----------------------------------------------

  gcUserLeaveDesk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcUserLeaveDesk& from);
  void MergeFrom(const gcUserLeaveDesk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcUserLeaveDesk)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcUserLeaveDesk* default_instance_;
};
// -------------------------------------------------------------------

class gcUserDisconnectDesk : public ::google::protobuf::Message {
 public:
  gcUserDisconnectDesk();
  virtual ~gcUserDisconnectDesk();

  gcUserDisconnectDesk(const gcUserDisconnectDesk& from);

  inline gcUserDisconnectDesk& operator=(const gcUserDisconnectDesk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcUserDisconnectDesk& default_instance();

  void Swap(gcUserDisconnectDesk* other);

  // implements Message ----------------------------------------------

  gcUserDisconnectDesk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcUserDisconnectDesk& from);
  void MergeFrom(const gcUserDisconnectDesk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcUserDisconnectDesk)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcUserDisconnectDesk* default_instance_;
};
// -------------------------------------------------------------------

class CannonInfo : public ::google::protobuf::Message {
 public:
  CannonInfo();
  virtual ~CannonInfo();

  CannonInfo(const CannonInfo& from);

  inline CannonInfo& operator=(const CannonInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CannonInfo& default_instance();

  void Swap(CannonInfo* other);

  // implements Message ----------------------------------------------

  CannonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CannonInfo& from);
  void MergeFrom(const CannonInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cannon_id = 1;
  inline bool has_cannon_id() const;
  inline void clear_cannon_id();
  static const int kCannonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cannon_id() const;
  inline void set_cannon_id(::google::protobuf::uint32 value);

  // optional uint32 cannon_value = 2;
  inline bool has_cannon_value() const;
  inline void clear_cannon_value();
  static const int kCannonValueFieldNumber = 2;
  inline ::google::protobuf::uint32 cannon_value() const;
  inline void set_cannon_value(::google::protobuf::uint32 value);

  // optional uint32 cannon_gun_id = 3;
  inline bool has_cannon_gun_id() const;
  inline void clear_cannon_gun_id();
  static const int kCannonGunIdFieldNumber = 3;
  inline ::google::protobuf::uint32 cannon_gun_id() const;
  inline void set_cannon_gun_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CannonInfo)
 private:
  inline void set_has_cannon_id();
  inline void clear_has_cannon_id();
  inline void set_has_cannon_value();
  inline void clear_has_cannon_value();
  inline void set_has_cannon_gun_id();
  inline void clear_has_cannon_gun_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cannon_id_;
  ::google::protobuf::uint32 cannon_value_;
  ::google::protobuf::uint32 cannon_gun_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CannonInfo* default_instance_;
};
// -------------------------------------------------------------------

class cgChangeCannon : public ::google::protobuf::Message {
 public:
  cgChangeCannon();
  virtual ~cgChangeCannon();

  cgChangeCannon(const cgChangeCannon& from);

  inline cgChangeCannon& operator=(const cgChangeCannon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgChangeCannon& default_instance();

  void Swap(cgChangeCannon* other);

  // implements Message ----------------------------------------------

  cgChangeCannon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cgChangeCannon& from);
  void MergeFrom(const cgChangeCannon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cannon_id = 1;
  inline bool has_cannon_id() const;
  inline void clear_cannon_id();
  static const int kCannonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cannon_id() const;
  inline void set_cannon_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.cgChangeCannon)
 private:
  inline void set_has_cannon_id();
  inline void clear_has_cannon_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cannon_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static cgChangeCannon* default_instance_;
};
// -------------------------------------------------------------------

class gcChangeCannon : public ::google::protobuf::Message {
 public:
  gcChangeCannon();
  virtual ~gcChangeCannon();

  gcChangeCannon(const gcChangeCannon& from);

  inline gcChangeCannon& operator=(const gcChangeCannon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcChangeCannon& default_instance();

  void Swap(gcChangeCannon* other);

  // implements Message ----------------------------------------------

  gcChangeCannon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcChangeCannon& from);
  void MergeFrom(const gcChangeCannon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cannon_id = 1;
  inline bool has_cannon_id() const;
  inline void clear_cannon_id();
  static const int kCannonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cannon_id() const;
  inline void set_cannon_id(::google::protobuf::uint32 value);

  // optional uint32 chair_id = 3;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 3;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcChangeCannon)
 private:
  inline void set_has_cannon_id();
  inline void clear_has_cannon_id();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cannon_id_;
  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcChangeCannon* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneRsp : public ::google::protobuf::Message {
 public:
  ChangeSceneRsp();
  virtual ~ChangeSceneRsp();

  ChangeSceneRsp(const ChangeSceneRsp& from);

  inline ChangeSceneRsp& operator=(const ChangeSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneRsp& default_instance();

  void Swap(ChangeSceneRsp* other);

  // implements Message ----------------------------------------------

  ChangeSceneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneRsp& from);
  void MergeFrom(const ChangeSceneRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // optional float time_seconds = 2;
  inline bool has_time_seconds() const;
  inline void clear_time_seconds();
  static const int kTimeSecondsFieldNumber = 2;
  inline float time_seconds() const;
  inline void set_time_seconds(float value);

  // optional uint32 scene_change_type = 3;
  inline bool has_scene_change_type() const;
  inline void clear_scene_change_type();
  static const int kSceneChangeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_change_type() const;
  inline void set_scene_change_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ChangeSceneRsp)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_time_seconds();
  inline void clear_has_time_seconds();
  inline void set_has_scene_change_type();
  inline void clear_has_scene_change_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 scene_id_;
  float time_seconds_;
  ::google::protobuf::uint32 scene_change_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneRsp* default_instance_;
};
// -------------------------------------------------------------------

class gcUserMoney : public ::google::protobuf::Message {
 public:
  gcUserMoney();
  virtual ~gcUserMoney();

  gcUserMoney(const gcUserMoney& from);

  inline gcUserMoney& operator=(const gcUserMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcUserMoney& default_instance();

  void Swap(gcUserMoney* other);

  // implements Message ----------------------------------------------

  gcUserMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gcUserMoney& from);
  void MergeFrom(const gcUserMoney& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional uint64 user_money = 2;
  inline bool has_user_money() const;
  inline void clear_user_money();
  static const int kUserMoneyFieldNumber = 2;
  inline ::google::protobuf::uint64 user_money() const;
  inline void set_user_money(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:gamefish.gcUserMoney)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_user_money();
  inline void clear_has_user_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_money_;
  ::google::protobuf::uint32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static gcUserMoney* default_instance_;
};
// -------------------------------------------------------------------

class SC_DoubleGunOnOff : public ::google::protobuf::Message {
 public:
  SC_DoubleGunOnOff();
  virtual ~SC_DoubleGunOnOff();

  SC_DoubleGunOnOff(const SC_DoubleGunOnOff& from);

  inline SC_DoubleGunOnOff& operator=(const SC_DoubleGunOnOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_DoubleGunOnOff& default_instance();

  void Swap(SC_DoubleGunOnOff* other);

  // implements Message ----------------------------------------------

  SC_DoubleGunOnOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_DoubleGunOnOff& from);
  void MergeFrom(const SC_DoubleGunOnOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chairId = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chairid() const;
  inline void set_chairid(::google::protobuf::uint32 value);

  // optional uint32 onOff = 2;
  inline bool has_onoff() const;
  inline void clear_onoff();
  static const int kOnOffFieldNumber = 2;
  inline ::google::protobuf::uint32 onoff() const;
  inline void set_onoff(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.SC_DoubleGunOnOff)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_onoff();
  inline void clear_has_onoff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chairid_;
  ::google::protobuf::uint32 onoff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static SC_DoubleGunOnOff* default_instance_;
};
// -------------------------------------------------------------------

class PromptInfoRsp : public ::google::protobuf::Message {
 public:
  PromptInfoRsp();
  virtual ~PromptInfoRsp();

  PromptInfoRsp(const PromptInfoRsp& from);

  inline PromptInfoRsp& operator=(const PromptInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PromptInfoRsp& default_instance();

  void Swap(PromptInfoRsp* other);

  // implements Message ----------------------------------------------

  PromptInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PromptInfoRsp& from);
  void MergeFrom(const PromptInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 infoType = 1;
  inline bool has_infotype() const;
  inline void clear_infotype();
  static const int kInfoTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 infotype() const;
  inline void set_infotype(::google::protobuf::uint32 value);

  // optional uint32 fishKindId = 2;
  inline bool has_fishkindid() const;
  inline void clear_fishkindid();
  static const int kFishKindIdFieldNumber = 2;
  inline ::google::protobuf::uint32 fishkindid() const;
  inline void set_fishkindid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gamefish.PromptInfoRsp)
 private:
  inline void set_has_infotype();
  inline void clear_has_infotype();
  inline void set_has_fishkindid();
  inline void clear_has_fishkindid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 infotype_;
  ::google::protobuf::uint32 fishkindid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static PromptInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class GameStatusRsp : public ::google::protobuf::Message {
 public:
  GameStatusRsp();
  virtual ~GameStatusRsp();

  GameStatusRsp(const GameStatusRsp& from);

  inline GameStatusRsp& operator=(const GameStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStatusRsp& default_instance();

  void Swap(GameStatusRsp* other);

  // implements Message ----------------------------------------------

  GameStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameStatusRsp& from);
  void MergeFrom(const GameStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 background_index = 1;
  inline bool has_background_index() const;
  inline void clear_background_index();
  static const int kBackgroundIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 background_index() const;
  inline void set_background_index(::google::protobuf::uint32 value);

  // repeated .gamefish.CannonInfo cannonlist = 2;
  inline int cannonlist_size() const;
  inline void clear_cannonlist();
  static const int kCannonlistFieldNumber = 2;
  inline const ::gamefish::CannonInfo& cannonlist(int index) const;
  inline ::gamefish::CannonInfo* mutable_cannonlist(int index);
  inline ::gamefish::CannonInfo* add_cannonlist();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::CannonInfo >&
      cannonlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::CannonInfo >*
      mutable_cannonlist();

  // repeated .gamefish.UserInfo userlist = 3;
  inline int userlist_size() const;
  inline void clear_userlist();
  static const int kUserlistFieldNumber = 3;
  inline const ::gamefish::UserInfo& userlist(int index) const;
  inline ::gamefish::UserInfo* mutable_userlist(int index);
  inline ::gamefish::UserInfo* add_userlist();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::UserInfo >&
      userlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::UserInfo >*
      mutable_userlist();

  // @@protoc_insertion_point(class_scope:gamefish.GameStatusRsp)
 private:
  inline void set_has_background_index();
  inline void clear_has_background_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::gamefish::CannonInfo > cannonlist_;
  ::google::protobuf::RepeatedPtrField< ::gamefish::UserInfo > userlist_;
  ::google::protobuf::uint32 background_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static GameStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateDianCiCannonRsp : public ::google::protobuf::Message {
 public:
  CreateDianCiCannonRsp();
  virtual ~CreateDianCiCannonRsp();

  CreateDianCiCannonRsp(const CreateDianCiCannonRsp& from);

  inline CreateDianCiCannonRsp& operator=(const CreateDianCiCannonRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDianCiCannonRsp& default_instance();

  void Swap(CreateDianCiCannonRsp* other);

  // implements Message ----------------------------------------------

  CreateDianCiCannonRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateDianCiCannonRsp& from);
  void MergeFrom(const CreateDianCiCannonRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonStatus = 4;
  inline bool has_usdiancicannonstatus() const;
  inline void clear_usdiancicannonstatus();
  static const int kUsDianCiCannonStatusFieldNumber = 4;
  inline ::google::protobuf::int32 usdiancicannonstatus() const;
  inline void set_usdiancicannonstatus(::google::protobuf::int32 value);

  // optional float usDianCiCannonStatusTime = 5;
  inline bool has_usdiancicannonstatustime() const;
  inline void clear_usdiancicannonstatustime();
  static const int kUsDianCiCannonStatusTimeFieldNumber = 5;
  inline float usdiancicannonstatustime() const;
  inline void set_usdiancicannonstatustime(float value);

  // optional int32 usKilledFishKind = 6;
  inline bool has_uskilledfishkind() const;
  inline void clear_uskilledfishkind();
  static const int kUsKilledFishKindFieldNumber = 6;
  inline ::google::protobuf::int32 uskilledfishkind() const;
  inline void set_uskilledfishkind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CreateDianCiCannonRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_usdiancicannonstatus();
  inline void clear_has_usdiancicannonstatus();
  inline void set_has_usdiancicannonstatustime();
  inline void clear_has_usdiancicannonstatustime();
  inline void set_has_uskilledfishkind();
  inline void clear_has_uskilledfishkind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 usdiancicannonstatus_;
  float usdiancicannonstatustime_;
  ::google::protobuf::int32 uskilledfishkind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateDianCiCannonRsp* default_instance_;
};
// -------------------------------------------------------------------

class DianCiCannonAimReq : public ::google::protobuf::Message {
 public:
  DianCiCannonAimReq();
  virtual ~DianCiCannonAimReq();

  DianCiCannonAimReq(const DianCiCannonAimReq& from);

  inline DianCiCannonAimReq& operator=(const DianCiCannonAimReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianCiCannonAimReq& default_instance();

  void Swap(DianCiCannonAimReq* other);

  // implements Message ----------------------------------------------

  DianCiCannonAimReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianCiCannonAimReq& from);
  void MergeFrom(const DianCiCannonAimReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DianCiCannonAimReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_usangle();
  inline void clear_has_usangle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::int32 usangle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DianCiCannonAimReq* default_instance_;
};
// -------------------------------------------------------------------

class DianCiCannonAimRsp : public ::google::protobuf::Message {
 public:
  DianCiCannonAimRsp();
  virtual ~DianCiCannonAimRsp();

  DianCiCannonAimRsp(const DianCiCannonAimRsp& from);

  inline DianCiCannonAimRsp& operator=(const DianCiCannonAimRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianCiCannonAimRsp& default_instance();

  void Swap(DianCiCannonAimRsp* other);

  // implements Message ----------------------------------------------

  DianCiCannonAimRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianCiCannonAimRsp& from);
  void MergeFrom(const DianCiCannonAimRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DianCiCannonAimRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_usangle();
  inline void clear_has_usangle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::int32 usangle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DianCiCannonAimRsp* default_instance_;
};
// -------------------------------------------------------------------

class DianCiCannonShootReq : public ::google::protobuf::Message {
 public:
  DianCiCannonShootReq();
  virtual ~DianCiCannonShootReq();

  DianCiCannonShootReq(const DianCiCannonShootReq& from);

  inline DianCiCannonShootReq& operator=(const DianCiCannonShootReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianCiCannonShootReq& default_instance();

  void Swap(DianCiCannonShootReq* other);

  // implements Message ----------------------------------------------

  DianCiCannonShootReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianCiCannonShootReq& from);
  void MergeFrom(const DianCiCannonShootReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DianCiCannonShootReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_usangle();
  inline void clear_has_usangle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::int32 usangle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DianCiCannonShootReq* default_instance_;
};
// -------------------------------------------------------------------

class DianCiCannonShootRsp : public ::google::protobuf::Message {
 public:
  DianCiCannonShootRsp();
  virtual ~DianCiCannonShootRsp();

  DianCiCannonShootRsp(const DianCiCannonShootRsp& from);

  inline DianCiCannonShootRsp& operator=(const DianCiCannonShootRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianCiCannonShootRsp& default_instance();

  void Swap(DianCiCannonShootRsp* other);

  // implements Message ----------------------------------------------

  DianCiCannonShootRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianCiCannonShootRsp& from);
  void MergeFrom(const DianCiCannonShootRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // optional int32 usProcUserChairId = 4;
  inline bool has_usprocuserchairid() const;
  inline void clear_usprocuserchairid();
  static const int kUsProcUserChairIdFieldNumber = 4;
  inline ::google::protobuf::int32 usprocuserchairid() const;
  inline void set_usprocuserchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DianCiCannonShootRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_usangle();
  inline void clear_has_usangle();
  inline void set_has_usprocuserchairid();
  inline void clear_has_usprocuserchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::int32 usangle_;
  ::google::protobuf::int32 usprocuserchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DianCiCannonShootRsp* default_instance_;
};
// -------------------------------------------------------------------

class DianCiCannonHitFishReq : public ::google::protobuf::Message {
 public:
  DianCiCannonHitFishReq();
  virtual ~DianCiCannonHitFishReq();

  DianCiCannonHitFishReq(const DianCiCannonHitFishReq& from);

  inline DianCiCannonHitFishReq& operator=(const DianCiCannonHitFishReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianCiCannonHitFishReq& default_instance();

  void Swap(DianCiCannonHitFishReq* other);

  // implements Message ----------------------------------------------

  DianCiCannonHitFishReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianCiCannonHitFishReq& from);
  void MergeFrom(const DianCiCannonHitFishReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // repeated int32 SubFishes = 3;
  inline int subfishes_size() const;
  inline void clear_subfishes();
  static const int kSubFishesFieldNumber = 3;
  inline ::google::protobuf::int32 subfishes(int index) const;
  inline void set_subfishes(int index, ::google::protobuf::int32 value);
  inline void add_subfishes(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      subfishes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_subfishes();

  // optional int32 usRobotChairId = 4;
  inline bool has_usrobotchairid() const;
  inline void clear_usrobotchairid();
  static const int kUsRobotChairIdFieldNumber = 4;
  inline ::google::protobuf::int32 usrobotchairid() const;
  inline void set_usrobotchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DianCiCannonHitFishReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_usrobotchairid();
  inline void clear_has_usrobotchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > subfishes_;
  ::google::protobuf::int32 usrobotchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DianCiCannonHitFishReq* default_instance_;
};
// -------------------------------------------------------------------

class DianCiCannonDestroyRsp : public ::google::protobuf::Message {
 public:
  DianCiCannonDestroyRsp();
  virtual ~DianCiCannonDestroyRsp();

  DianCiCannonDestroyRsp(const DianCiCannonDestroyRsp& from);

  inline DianCiCannonDestroyRsp& operator=(const DianCiCannonDestroyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DianCiCannonDestroyRsp& default_instance();

  void Swap(DianCiCannonDestroyRsp* other);

  // implements Message ----------------------------------------------

  DianCiCannonDestroyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DianCiCannonDestroyRsp& from);
  void MergeFrom(const DianCiCannonDestroyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDianCiCannonId = 2;
  inline bool has_usdiancicannonid() const;
  inline void clear_usdiancicannonid();
  static const int kUsDianCiCannonIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdiancicannonid() const;
  inline void set_usdiancicannonid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DianCiCannonDestroyRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdiancicannonid();
  inline void clear_has_usdiancicannonid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdiancicannonid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DianCiCannonDestroyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateZuanTouRsp : public ::google::protobuf::Message {
 public:
  CreateZuanTouRsp();
  virtual ~CreateZuanTouRsp();

  CreateZuanTouRsp(const CreateZuanTouRsp& from);

  inline CreateZuanTouRsp& operator=(const CreateZuanTouRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateZuanTouRsp& default_instance();

  void Swap(CreateZuanTouRsp* other);

  // implements Message ----------------------------------------------

  CreateZuanTouRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateZuanTouRsp& from);
  void MergeFrom(const CreateZuanTouRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usTraceId = 4;
  inline bool has_ustraceid() const;
  inline void clear_ustraceid();
  static const int kUsTraceIdFieldNumber = 4;
  inline ::google::protobuf::int32 ustraceid() const;
  inline void set_ustraceid(::google::protobuf::int32 value);

  // optional int32 usTraceStartPt = 5;
  inline bool has_ustracestartpt() const;
  inline void clear_ustracestartpt();
  static const int kUsTraceStartPtFieldNumber = 5;
  inline ::google::protobuf::int32 ustracestartpt() const;
  inline void set_ustracestartpt(::google::protobuf::int32 value);

  // optional int32 usZuanTouStatus = 6;
  inline bool has_uszuantoustatus() const;
  inline void clear_uszuantoustatus();
  static const int kUsZuanTouStatusFieldNumber = 6;
  inline ::google::protobuf::int32 uszuantoustatus() const;
  inline void set_uszuantoustatus(::google::protobuf::int32 value);

  // optional float usZuanTouStatusTime = 7;
  inline bool has_uszuantoustatustime() const;
  inline void clear_uszuantoustatustime();
  static const int kUsZuanTouStatusTimeFieldNumber = 7;
  inline float uszuantoustatustime() const;
  inline void set_uszuantoustatustime(float value);

  // optional int32 bombFishId = 8;
  inline bool has_bombfishid() const;
  inline void clear_bombfishid();
  static const int kBombFishIdFieldNumber = 8;
  inline ::google::protobuf::int32 bombfishid() const;
  inline void set_bombfishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CreateZuanTouRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_ustraceid();
  inline void clear_has_ustraceid();
  inline void set_has_ustracestartpt();
  inline void clear_has_ustracestartpt();
  inline void set_has_uszuantoustatus();
  inline void clear_has_uszuantoustatus();
  inline void set_has_uszuantoustatustime();
  inline void clear_has_uszuantoustatustime();
  inline void set_has_bombfishid();
  inline void clear_has_bombfishid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 ustraceid_;
  ::google::protobuf::int32 ustracestartpt_;
  ::google::protobuf::int32 uszuantoustatus_;
  float uszuantoustatustime_;
  ::google::protobuf::int32 bombfishid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateZuanTouRsp* default_instance_;
};
// -------------------------------------------------------------------

class ZuanTouAimReq : public ::google::protobuf::Message {
 public:
  ZuanTouAimReq();
  virtual ~ZuanTouAimReq();

  ZuanTouAimReq(const ZuanTouAimReq& from);

  inline ZuanTouAimReq& operator=(const ZuanTouAimReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZuanTouAimReq& default_instance();

  void Swap(ZuanTouAimReq* other);

  // implements Message ----------------------------------------------

  ZuanTouAimReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZuanTouAimReq& from);
  void MergeFrom(const ZuanTouAimReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ZuanTouAimReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_usangle();
  inline void clear_has_usangle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 usangle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ZuanTouAimReq* default_instance_;
};
// -------------------------------------------------------------------

class ZuanTouAimRsp : public ::google::protobuf::Message {
 public:
  ZuanTouAimRsp();
  virtual ~ZuanTouAimRsp();

  ZuanTouAimRsp(const ZuanTouAimRsp& from);

  inline ZuanTouAimRsp& operator=(const ZuanTouAimRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZuanTouAimRsp& default_instance();

  void Swap(ZuanTouAimRsp* other);

  // implements Message ----------------------------------------------

  ZuanTouAimRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZuanTouAimRsp& from);
  void MergeFrom(const ZuanTouAimRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ZuanTouAimRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_usangle();
  inline void clear_has_usangle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 usangle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ZuanTouAimRsp* default_instance_;
};
// -------------------------------------------------------------------

class ZuanTouShootReq : public ::google::protobuf::Message {
 public:
  ZuanTouShootReq();
  virtual ~ZuanTouShootReq();

  ZuanTouShootReq(const ZuanTouShootReq& from);

  inline ZuanTouShootReq& operator=(const ZuanTouShootReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZuanTouShootReq& default_instance();

  void Swap(ZuanTouShootReq* other);

  // implements Message ----------------------------------------------

  ZuanTouShootReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZuanTouShootReq& from);
  void MergeFrom(const ZuanTouShootReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ZuanTouShootReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_usangle();
  inline void clear_has_usangle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 usangle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ZuanTouShootReq* default_instance_;
};
// -------------------------------------------------------------------

class ZuanTouShootRsp : public ::google::protobuf::Message {
 public:
  ZuanTouShootRsp();
  virtual ~ZuanTouShootRsp();

  ZuanTouShootRsp(const ZuanTouShootRsp& from);

  inline ZuanTouShootRsp& operator=(const ZuanTouShootRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZuanTouShootRsp& default_instance();

  void Swap(ZuanTouShootRsp* other);

  // implements Message ----------------------------------------------

  ZuanTouShootRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZuanTouShootRsp& from);
  void MergeFrom(const ZuanTouShootRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usAngle = 3;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 3;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // optional int32 usTraceId = 4;
  inline bool has_ustraceid() const;
  inline void clear_ustraceid();
  static const int kUsTraceIdFieldNumber = 4;
  inline ::google::protobuf::int32 ustraceid() const;
  inline void set_ustraceid(::google::protobuf::int32 value);

  // optional int32 usTraceStartPt = 5;
  inline bool has_ustracestartpt() const;
  inline void clear_ustracestartpt();
  static const int kUsTraceStartPtFieldNumber = 5;
  inline ::google::protobuf::int32 ustracestartpt() const;
  inline void set_ustracestartpt(::google::protobuf::int32 value);

  // optional int32 usProcUserChairId = 6;
  inline bool has_usprocuserchairid() const;
  inline void clear_usprocuserchairid();
  static const int kUsProcUserChairIdFieldNumber = 6;
  inline ::google::protobuf::int32 usprocuserchairid() const;
  inline void set_usprocuserchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ZuanTouShootRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_usangle();
  inline void clear_has_usangle();
  inline void set_has_ustraceid();
  inline void clear_has_ustraceid();
  inline void set_has_ustracestartpt();
  inline void clear_has_ustracestartpt();
  inline void set_has_usprocuserchairid();
  inline void clear_has_usprocuserchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 usangle_;
  ::google::protobuf::int32 ustraceid_;
  ::google::protobuf::int32 ustracestartpt_;
  ::google::protobuf::int32 usprocuserchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ZuanTouShootRsp* default_instance_;
};
// -------------------------------------------------------------------

class ZuanTouHitFishReq : public ::google::protobuf::Message {
 public:
  ZuanTouHitFishReq();
  virtual ~ZuanTouHitFishReq();

  ZuanTouHitFishReq(const ZuanTouHitFishReq& from);

  inline ZuanTouHitFishReq& operator=(const ZuanTouHitFishReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZuanTouHitFishReq& default_instance();

  void Swap(ZuanTouHitFishReq* other);

  // implements Message ----------------------------------------------

  ZuanTouHitFishReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZuanTouHitFishReq& from);
  void MergeFrom(const ZuanTouHitFishReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // repeated int32 SubFishes = 3;
  inline int subfishes_size() const;
  inline void clear_subfishes();
  static const int kSubFishesFieldNumber = 3;
  inline ::google::protobuf::int32 subfishes(int index) const;
  inline void set_subfishes(int index, ::google::protobuf::int32 value);
  inline void add_subfishes(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      subfishes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_subfishes();

  // optional int32 usRobotChairId = 4;
  inline bool has_usrobotchairid() const;
  inline void clear_usrobotchairid();
  static const int kUsRobotChairIdFieldNumber = 4;
  inline ::google::protobuf::int32 usrobotchairid() const;
  inline void set_usrobotchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ZuanTouHitFishReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_usrobotchairid();
  inline void clear_has_usrobotchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > subfishes_;
  ::google::protobuf::int32 usrobotchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ZuanTouHitFishReq* default_instance_;
};
// -------------------------------------------------------------------

class ZuanTouBombRsp : public ::google::protobuf::Message {
 public:
  ZuanTouBombRsp();
  virtual ~ZuanTouBombRsp();

  ZuanTouBombRsp(const ZuanTouBombRsp& from);

  inline ZuanTouBombRsp& operator=(const ZuanTouBombRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZuanTouBombRsp& default_instance();

  void Swap(ZuanTouBombRsp* other);

  // implements Message ----------------------------------------------

  ZuanTouBombRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZuanTouBombRsp& from);
  void MergeFrom(const ZuanTouBombRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 2;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.ZuanTouBombRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static ZuanTouBombRsp* default_instance_;
};
// -------------------------------------------------------------------

class SomeZuanTouInfo : public ::google::protobuf::Message {
 public:
  SomeZuanTouInfo();
  virtual ~SomeZuanTouInfo();

  SomeZuanTouInfo(const SomeZuanTouInfo& from);

  inline SomeZuanTouInfo& operator=(const SomeZuanTouInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SomeZuanTouInfo& default_instance();

  void Swap(SomeZuanTouInfo* other);

  // implements Message ----------------------------------------------

  SomeZuanTouInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SomeZuanTouInfo& from);
  void MergeFrom(const SomeZuanTouInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usZuanTouId = 1;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 1;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // optional int32 usAngle = 2;
  inline bool has_usangle() const;
  inline void clear_usangle();
  static const int kUsAngleFieldNumber = 2;
  inline ::google::protobuf::int32 usangle() const;
  inline void set_usangle(::google::protobuf::int32 value);

  // optional int32 usTraceId = 3;
  inline bool has_ustraceid() const;
  inline void clear_ustraceid();
  static const int kUsTraceIdFieldNumber = 3;
  inline ::google::protobuf::int32 ustraceid() const;
  inline void set_ustraceid(::google::protobuf::int32 value);

  // optional int32 usTraceStartPt = 4;
  inline bool has_ustracestartpt() const;
  inline void clear_ustracestartpt();
  static const int kUsTraceStartPtFieldNumber = 4;
  inline ::google::protobuf::int32 ustracestartpt() const;
  inline void set_ustracestartpt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.SomeZuanTouInfo)
 private:
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();
  inline void set_has_usangle();
  inline void clear_has_usangle();
  inline void set_has_ustraceid();
  inline void clear_has_ustraceid();
  inline void set_has_ustracestartpt();
  inline void clear_has_ustracestartpt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uszuantouid_;
  ::google::protobuf::int32 usangle_;
  ::google::protobuf::int32 ustraceid_;
  ::google::protobuf::int32 ustracestartpt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static SomeZuanTouInfo* default_instance_;
};
// -------------------------------------------------------------------

class CreateSomeZuanTouRsp : public ::google::protobuf::Message {
 public:
  CreateSomeZuanTouRsp();
  virtual ~CreateSomeZuanTouRsp();

  CreateSomeZuanTouRsp(const CreateSomeZuanTouRsp& from);

  inline CreateSomeZuanTouRsp& operator=(const CreateSomeZuanTouRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSomeZuanTouRsp& default_instance();

  void Swap(CreateSomeZuanTouRsp* other);

  // implements Message ----------------------------------------------

  CreateSomeZuanTouRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateSomeZuanTouRsp& from);
  void MergeFrom(const CreateSomeZuanTouRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSomeZuanTouId = 2;
  inline bool has_ussomezuantouid() const;
  inline void clear_ussomezuantouid();
  static const int kUsSomeZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 ussomezuantouid() const;
  inline void set_ussomezuantouid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usZuanTouStatus = 4;
  inline bool has_uszuantoustatus() const;
  inline void clear_uszuantoustatus();
  static const int kUsZuanTouStatusFieldNumber = 4;
  inline ::google::protobuf::int32 uszuantoustatus() const;
  inline void set_uszuantoustatus(::google::protobuf::int32 value);

  // optional int32 usZuanTouStatusTime = 5;
  inline bool has_uszuantoustatustime() const;
  inline void clear_uszuantoustatustime();
  static const int kUsZuanTouStatusTimeFieldNumber = 5;
  inline ::google::protobuf::int32 uszuantoustatustime() const;
  inline void set_uszuantoustatustime(::google::protobuf::int32 value);

  // repeated .gamefish.SomeZuanTouInfo zuanTous = 6;
  inline int zuantous_size() const;
  inline void clear_zuantous();
  static const int kZuanTousFieldNumber = 6;
  inline const ::gamefish::SomeZuanTouInfo& zuantous(int index) const;
  inline ::gamefish::SomeZuanTouInfo* mutable_zuantous(int index);
  inline ::gamefish::SomeZuanTouInfo* add_zuantous();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::SomeZuanTouInfo >&
      zuantous() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::SomeZuanTouInfo >*
      mutable_zuantous();

  // @@protoc_insertion_point(class_scope:gamefish.CreateSomeZuanTouRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_ussomezuantouid();
  inline void clear_has_ussomezuantouid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_uszuantoustatus();
  inline void clear_has_uszuantoustatus();
  inline void set_has_uszuantoustatustime();
  inline void clear_has_uszuantoustatustime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 ussomezuantouid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 uszuantoustatus_;
  ::google::protobuf::RepeatedPtrField< ::gamefish::SomeZuanTouInfo > zuantous_;
  ::google::protobuf::int32 uszuantoustatustime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateSomeZuanTouRsp* default_instance_;
};
// -------------------------------------------------------------------

class SomeZuanTouShootRsp : public ::google::protobuf::Message {
 public:
  SomeZuanTouShootRsp();
  virtual ~SomeZuanTouShootRsp();

  SomeZuanTouShootRsp(const SomeZuanTouShootRsp& from);

  inline SomeZuanTouShootRsp& operator=(const SomeZuanTouShootRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SomeZuanTouShootRsp& default_instance();

  void Swap(SomeZuanTouShootRsp* other);

  // implements Message ----------------------------------------------

  SomeZuanTouShootRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SomeZuanTouShootRsp& from);
  void MergeFrom(const SomeZuanTouShootRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSomeZuanTouId = 2;
  inline bool has_ussomezuantouid() const;
  inline void clear_ussomezuantouid();
  static const int kUsSomeZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 ussomezuantouid() const;
  inline void set_ussomezuantouid(::google::protobuf::int32 value);

  // optional .gamefish.SomeZuanTouInfo someZuanTou = 3;
  inline bool has_somezuantou() const;
  inline void clear_somezuantou();
  static const int kSomeZuanTouFieldNumber = 3;
  inline const ::gamefish::SomeZuanTouInfo& somezuantou() const;
  inline ::gamefish::SomeZuanTouInfo* mutable_somezuantou();
  inline ::gamefish::SomeZuanTouInfo* release_somezuantou();
  inline void set_allocated_somezuantou(::gamefish::SomeZuanTouInfo* somezuantou);

  // @@protoc_insertion_point(class_scope:gamefish.SomeZuanTouShootRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_ussomezuantouid();
  inline void clear_has_ussomezuantouid();
  inline void set_has_somezuantou();
  inline void clear_has_somezuantou();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 ussomezuantouid_;
  ::gamefish::SomeZuanTouInfo* somezuantou_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static SomeZuanTouShootRsp* default_instance_;
};
// -------------------------------------------------------------------

class SomeZuanTouHitFishReq : public ::google::protobuf::Message {
 public:
  SomeZuanTouHitFishReq();
  virtual ~SomeZuanTouHitFishReq();

  SomeZuanTouHitFishReq(const SomeZuanTouHitFishReq& from);

  inline SomeZuanTouHitFishReq& operator=(const SomeZuanTouHitFishReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SomeZuanTouHitFishReq& default_instance();

  void Swap(SomeZuanTouHitFishReq* other);

  // implements Message ----------------------------------------------

  SomeZuanTouHitFishReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SomeZuanTouHitFishReq& from);
  void MergeFrom(const SomeZuanTouHitFishReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSomeZuanTouId = 2;
  inline bool has_ussomezuantouid() const;
  inline void clear_ussomezuantouid();
  static const int kUsSomeZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 ussomezuantouid() const;
  inline void set_ussomezuantouid(::google::protobuf::int32 value);

  // optional int32 usZuanTouId = 3;
  inline bool has_uszuantouid() const;
  inline void clear_uszuantouid();
  static const int kUsZuanTouIdFieldNumber = 3;
  inline ::google::protobuf::int32 uszuantouid() const;
  inline void set_uszuantouid(::google::protobuf::int32 value);

  // repeated int32 SubFishes = 4;
  inline int subfishes_size() const;
  inline void clear_subfishes();
  static const int kSubFishesFieldNumber = 4;
  inline ::google::protobuf::int32 subfishes(int index) const;
  inline void set_subfishes(int index, ::google::protobuf::int32 value);
  inline void add_subfishes(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      subfishes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_subfishes();

  // @@protoc_insertion_point(class_scope:gamefish.SomeZuanTouHitFishReq)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_ussomezuantouid();
  inline void clear_has_ussomezuantouid();
  inline void set_has_uszuantouid();
  inline void clear_has_uszuantouid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 ussomezuantouid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > subfishes_;
  ::google::protobuf::int32 uszuantouid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static SomeZuanTouHitFishReq* default_instance_;
};
// -------------------------------------------------------------------

class SomeZuanTouBombRsp : public ::google::protobuf::Message {
 public:
  SomeZuanTouBombRsp();
  virtual ~SomeZuanTouBombRsp();

  SomeZuanTouBombRsp(const SomeZuanTouBombRsp& from);

  inline SomeZuanTouBombRsp& operator=(const SomeZuanTouBombRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SomeZuanTouBombRsp& default_instance();

  void Swap(SomeZuanTouBombRsp* other);

  // implements Message ----------------------------------------------

  SomeZuanTouBombRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SomeZuanTouBombRsp& from);
  void MergeFrom(const SomeZuanTouBombRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSomeZuanTouId = 2;
  inline bool has_ussomezuantouid() const;
  inline void clear_ussomezuantouid();
  static const int kUsSomeZuanTouIdFieldNumber = 2;
  inline ::google::protobuf::int32 ussomezuantouid() const;
  inline void set_ussomezuantouid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.SomeZuanTouBombRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_ussomezuantouid();
  inline void clear_has_ussomezuantouid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 ussomezuantouid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static SomeZuanTouBombRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateFireStormRsp : public ::google::protobuf::Message {
 public:
  CreateFireStormRsp();
  virtual ~CreateFireStormRsp();

  CreateFireStormRsp(const CreateFireStormRsp& from);

  inline CreateFireStormRsp& operator=(const CreateFireStormRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateFireStormRsp& default_instance();

  void Swap(CreateFireStormRsp* other);

  // implements Message ----------------------------------------------

  CreateFireStormRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateFireStormRsp& from);
  void MergeFrom(const CreateFireStormRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usFireStormId = 2;
  inline bool has_usfirestormid() const;
  inline void clear_usfirestormid();
  static const int kUsFireStormIdFieldNumber = 2;
  inline ::google::protobuf::int32 usfirestormid() const;
  inline void set_usfirestormid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usStatus = 4;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 4;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // optional int32 usStatusTime = 5;
  inline bool has_usstatustime() const;
  inline void clear_usstatustime();
  static const int kUsStatusTimeFieldNumber = 5;
  inline ::google::protobuf::int32 usstatustime() const;
  inline void set_usstatustime(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 6;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 6;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 7;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 7;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CreateFireStormRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usfirestormid();
  inline void clear_has_usfirestormid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_usstatus();
  inline void clear_has_usstatus();
  inline void set_has_usstatustime();
  inline void clear_has_usstatustime();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usfirestormid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 usstatus_;
  ::google::protobuf::int32 usstatustime_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateFireStormRsp* default_instance_;
};
// -------------------------------------------------------------------

class DestoryFireStormRsp : public ::google::protobuf::Message {
 public:
  DestoryFireStormRsp();
  virtual ~DestoryFireStormRsp();

  DestoryFireStormRsp(const DestoryFireStormRsp& from);

  inline DestoryFireStormRsp& operator=(const DestoryFireStormRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestoryFireStormRsp& default_instance();

  void Swap(DestoryFireStormRsp* other);

  // implements Message ----------------------------------------------

  DestoryFireStormRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestoryFireStormRsp& from);
  void MergeFrom(const DestoryFireStormRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usFireStormId = 2;
  inline bool has_usfirestormid() const;
  inline void clear_usfirestormid();
  static const int kUsFireStormIdFieldNumber = 2;
  inline ::google::protobuf::int32 usfirestormid() const;
  inline void set_usfirestormid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DestoryFireStormRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usfirestormid();
  inline void clear_has_usfirestormid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usfirestormid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DestoryFireStormRsp* default_instance_;
};
// -------------------------------------------------------------------

class FireStormStatusRsp : public ::google::protobuf::Message {
 public:
  FireStormStatusRsp();
  virtual ~FireStormStatusRsp();

  FireStormStatusRsp(const FireStormStatusRsp& from);

  inline FireStormStatusRsp& operator=(const FireStormStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FireStormStatusRsp& default_instance();

  void Swap(FireStormStatusRsp* other);

  // implements Message ----------------------------------------------

  FireStormStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FireStormStatusRsp& from);
  void MergeFrom(const FireStormStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usFireStormId = 2;
  inline bool has_usfirestormid() const;
  inline void clear_usfirestormid();
  static const int kUsFireStormIdFieldNumber = 2;
  inline ::google::protobuf::int32 usfirestormid() const;
  inline void set_usfirestormid(::google::protobuf::int32 value);

  // optional int32 usStatus = 3;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 3;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.FireStormStatusRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usfirestormid();
  inline void clear_has_usfirestormid();
  inline void set_has_usstatus();
  inline void clear_has_usstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usfirestormid_;
  ::google::protobuf::int32 usstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static FireStormStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class FireStormScoreRsp : public ::google::protobuf::Message {
 public:
  FireStormScoreRsp();
  virtual ~FireStormScoreRsp();

  FireStormScoreRsp(const FireStormScoreRsp& from);

  inline FireStormScoreRsp& operator=(const FireStormScoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FireStormScoreRsp& default_instance();

  void Swap(FireStormScoreRsp* other);

  // implements Message ----------------------------------------------

  FireStormScoreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FireStormScoreRsp& from);
  void MergeFrom(const FireStormScoreRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usFireStormId = 2;
  inline bool has_usfirestormid() const;
  inline void clear_usfirestormid();
  static const int kUsFireStormIdFieldNumber = 2;
  inline ::google::protobuf::int32 usfirestormid() const;
  inline void set_usfirestormid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.FireStormScoreRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usfirestormid();
  inline void clear_has_usfirestormid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usfirestormid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static FireStormScoreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateMadCowRsp : public ::google::protobuf::Message {
 public:
  CreateMadCowRsp();
  virtual ~CreateMadCowRsp();

  CreateMadCowRsp(const CreateMadCowRsp& from);

  inline CreateMadCowRsp& operator=(const CreateMadCowRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMadCowRsp& default_instance();

  void Swap(CreateMadCowRsp* other);

  // implements Message ----------------------------------------------

  CreateMadCowRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateMadCowRsp& from);
  void MergeFrom(const CreateMadCowRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usMadCowId = 2;
  inline bool has_usmadcowid() const;
  inline void clear_usmadcowid();
  static const int kUsMadCowIdFieldNumber = 2;
  inline ::google::protobuf::int32 usmadcowid() const;
  inline void set_usmadcowid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usRunDirection = 4;
  inline bool has_usrundirection() const;
  inline void clear_usrundirection();
  static const int kUsRunDirectionFieldNumber = 4;
  inline ::google::protobuf::int32 usrundirection() const;
  inline void set_usrundirection(::google::protobuf::int32 value);

  // optional int32 usStatus = 5;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 5;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // optional int32 usStatusTime = 6;
  inline bool has_usstatustime() const;
  inline void clear_usstatustime();
  static const int kUsStatusTimeFieldNumber = 6;
  inline ::google::protobuf::int32 usstatustime() const;
  inline void set_usstatustime(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 7;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 7;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 8;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 8;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CreateMadCowRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usmadcowid();
  inline void clear_has_usmadcowid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_usrundirection();
  inline void clear_has_usrundirection();
  inline void set_has_usstatus();
  inline void clear_has_usstatus();
  inline void set_has_usstatustime();
  inline void clear_has_usstatustime();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usmadcowid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 usrundirection_;
  ::google::protobuf::int32 usstatus_;
  ::google::protobuf::int32 usstatustime_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateMadCowRsp* default_instance_;
};
// -------------------------------------------------------------------

class DestoryMadCowRsp : public ::google::protobuf::Message {
 public:
  DestoryMadCowRsp();
  virtual ~DestoryMadCowRsp();

  DestoryMadCowRsp(const DestoryMadCowRsp& from);

  inline DestoryMadCowRsp& operator=(const DestoryMadCowRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestoryMadCowRsp& default_instance();

  void Swap(DestoryMadCowRsp* other);

  // implements Message ----------------------------------------------

  DestoryMadCowRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestoryMadCowRsp& from);
  void MergeFrom(const DestoryMadCowRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usMadCowId = 2;
  inline bool has_usmadcowid() const;
  inline void clear_usmadcowid();
  static const int kUsMadCowIdFieldNumber = 2;
  inline ::google::protobuf::int32 usmadcowid() const;
  inline void set_usmadcowid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DestoryMadCowRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usmadcowid();
  inline void clear_has_usmadcowid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usmadcowid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DestoryMadCowRsp* default_instance_;
};
// -------------------------------------------------------------------

class MadCowStatusRsp : public ::google::protobuf::Message {
 public:
  MadCowStatusRsp();
  virtual ~MadCowStatusRsp();

  MadCowStatusRsp(const MadCowStatusRsp& from);

  inline MadCowStatusRsp& operator=(const MadCowStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MadCowStatusRsp& default_instance();

  void Swap(MadCowStatusRsp* other);

  // implements Message ----------------------------------------------

  MadCowStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MadCowStatusRsp& from);
  void MergeFrom(const MadCowStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usMadCowId = 2;
  inline bool has_usmadcowid() const;
  inline void clear_usmadcowid();
  static const int kUsMadCowIdFieldNumber = 2;
  inline ::google::protobuf::int32 usmadcowid() const;
  inline void set_usmadcowid(::google::protobuf::int32 value);

  // optional int32 usStatus = 3;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 3;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.MadCowStatusRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usmadcowid();
  inline void clear_has_usmadcowid();
  inline void set_has_usstatus();
  inline void clear_has_usstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usmadcowid_;
  ::google::protobuf::int32 usstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static MadCowStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class MadCowScoreRsp : public ::google::protobuf::Message {
 public:
  MadCowScoreRsp();
  virtual ~MadCowScoreRsp();

  MadCowScoreRsp(const MadCowScoreRsp& from);

  inline MadCowScoreRsp& operator=(const MadCowScoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MadCowScoreRsp& default_instance();

  void Swap(MadCowScoreRsp* other);

  // implements Message ----------------------------------------------

  MadCowScoreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MadCowScoreRsp& from);
  void MergeFrom(const MadCowScoreRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usMadCowId = 2;
  inline bool has_usmadcowid() const;
  inline void clear_usmadcowid();
  static const int kUsMadCowIdFieldNumber = 2;
  inline ::google::protobuf::int32 usmadcowid() const;
  inline void set_usmadcowid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.MadCowScoreRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usmadcowid();
  inline void clear_has_usmadcowid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usmadcowid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static MadCowScoreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateSerialBombCrabRsp : public ::google::protobuf::Message {
 public:
  CreateSerialBombCrabRsp();
  virtual ~CreateSerialBombCrabRsp();

  CreateSerialBombCrabRsp(const CreateSerialBombCrabRsp& from);

  inline CreateSerialBombCrabRsp& operator=(const CreateSerialBombCrabRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSerialBombCrabRsp& default_instance();

  void Swap(CreateSerialBombCrabRsp* other);

  // implements Message ----------------------------------------------

  CreateSerialBombCrabRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateSerialBombCrabRsp& from);
  void MergeFrom(const CreateSerialBombCrabRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSerialBombCrabId = 2;
  inline bool has_usserialbombcrabid() const;
  inline void clear_usserialbombcrabid();
  static const int kUsSerialBombCrabIdFieldNumber = 2;
  inline ::google::protobuf::int32 usserialbombcrabid() const;
  inline void set_usserialbombcrabid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usStatus = 4;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 4;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // optional int32 usStatusTime = 5;
  inline bool has_usstatustime() const;
  inline void clear_usstatustime();
  static const int kUsStatusTimeFieldNumber = 5;
  inline ::google::protobuf::int32 usstatustime() const;
  inline void set_usstatustime(::google::protobuf::int32 value);

  // optional int32 usBombPosX = 6;
  inline bool has_usbombposx() const;
  inline void clear_usbombposx();
  static const int kUsBombPosXFieldNumber = 6;
  inline ::google::protobuf::int32 usbombposx() const;
  inline void set_usbombposx(::google::protobuf::int32 value);

  // optional int32 usBombPosY = 7;
  inline bool has_usbombposy() const;
  inline void clear_usbombposy();
  static const int kUsBombPosYFieldNumber = 7;
  inline ::google::protobuf::int32 usbombposy() const;
  inline void set_usbombposy(::google::protobuf::int32 value);

  // optional int32 usNextBombPosX = 8;
  inline bool has_usnextbombposx() const;
  inline void clear_usnextbombposx();
  static const int kUsNextBombPosXFieldNumber = 8;
  inline ::google::protobuf::int32 usnextbombposx() const;
  inline void set_usnextbombposx(::google::protobuf::int32 value);

  // optional int32 usNextBombPosy = 9;
  inline bool has_usnextbombposy() const;
  inline void clear_usnextbombposy();
  static const int kUsNextBombPosyFieldNumber = 9;
  inline ::google::protobuf::int32 usnextbombposy() const;
  inline void set_usnextbombposy(::google::protobuf::int32 value);

  // optional int32 usBombCount = 10;
  inline bool has_usbombcount() const;
  inline void clear_usbombcount();
  static const int kUsBombCountFieldNumber = 10;
  inline ::google::protobuf::int32 usbombcount() const;
  inline void set_usbombcount(::google::protobuf::int32 value);

  // optional int32 bombFishId = 11;
  inline bool has_bombfishid() const;
  inline void clear_bombfishid();
  static const int kBombFishIdFieldNumber = 11;
  inline ::google::protobuf::int32 bombfishid() const;
  inline void set_bombfishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CreateSerialBombCrabRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usserialbombcrabid();
  inline void clear_has_usserialbombcrabid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_usstatus();
  inline void clear_has_usstatus();
  inline void set_has_usstatustime();
  inline void clear_has_usstatustime();
  inline void set_has_usbombposx();
  inline void clear_has_usbombposx();
  inline void set_has_usbombposy();
  inline void clear_has_usbombposy();
  inline void set_has_usnextbombposx();
  inline void clear_has_usnextbombposx();
  inline void set_has_usnextbombposy();
  inline void clear_has_usnextbombposy();
  inline void set_has_usbombcount();
  inline void clear_has_usbombcount();
  inline void set_has_bombfishid();
  inline void clear_has_bombfishid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usserialbombcrabid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 usstatus_;
  ::google::protobuf::int32 usstatustime_;
  ::google::protobuf::int32 usbombposx_;
  ::google::protobuf::int32 usbombposy_;
  ::google::protobuf::int32 usnextbombposx_;
  ::google::protobuf::int32 usnextbombposy_;
  ::google::protobuf::int32 usbombcount_;
  ::google::protobuf::int32 bombfishid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateSerialBombCrabRsp* default_instance_;
};
// -------------------------------------------------------------------

class SerialBombCrabBombRsp : public ::google::protobuf::Message {
 public:
  SerialBombCrabBombRsp();
  virtual ~SerialBombCrabBombRsp();

  SerialBombCrabBombRsp(const SerialBombCrabBombRsp& from);

  inline SerialBombCrabBombRsp& operator=(const SerialBombCrabBombRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerialBombCrabBombRsp& default_instance();

  void Swap(SerialBombCrabBombRsp* other);

  // implements Message ----------------------------------------------

  SerialBombCrabBombRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerialBombCrabBombRsp& from);
  void MergeFrom(const SerialBombCrabBombRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSerialBombCrabId = 2;
  inline bool has_usserialbombcrabid() const;
  inline void clear_usserialbombcrabid();
  static const int kUsSerialBombCrabIdFieldNumber = 2;
  inline ::google::protobuf::int32 usserialbombcrabid() const;
  inline void set_usserialbombcrabid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // optional int32 usBombPosX = 5;
  inline bool has_usbombposx() const;
  inline void clear_usbombposx();
  static const int kUsBombPosXFieldNumber = 5;
  inline ::google::protobuf::int32 usbombposx() const;
  inline void set_usbombposx(::google::protobuf::int32 value);

  // optional int32 usBombPosY = 6;
  inline bool has_usbombposy() const;
  inline void clear_usbombposy();
  static const int kUsBombPosYFieldNumber = 6;
  inline ::google::protobuf::int32 usbombposy() const;
  inline void set_usbombposy(::google::protobuf::int32 value);

  // optional int32 usNextBombPosX = 7;
  inline bool has_usnextbombposx() const;
  inline void clear_usnextbombposx();
  static const int kUsNextBombPosXFieldNumber = 7;
  inline ::google::protobuf::int32 usnextbombposx() const;
  inline void set_usnextbombposx(::google::protobuf::int32 value);

  // optional int32 usNextBombPosy = 8;
  inline bool has_usnextbombposy() const;
  inline void clear_usnextbombposy();
  static const int kUsNextBombPosyFieldNumber = 8;
  inline ::google::protobuf::int32 usnextbombposy() const;
  inline void set_usnextbombposy(::google::protobuf::int32 value);

  // optional int32 usBombCount = 9;
  inline bool has_usbombcount() const;
  inline void clear_usbombcount();
  static const int kUsBombCountFieldNumber = 9;
  inline ::google::protobuf::int32 usbombcount() const;
  inline void set_usbombcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.SerialBombCrabBombRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usserialbombcrabid();
  inline void clear_has_usserialbombcrabid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();
  inline void set_has_usbombposx();
  inline void clear_has_usbombposx();
  inline void set_has_usbombposy();
  inline void clear_has_usbombposy();
  inline void set_has_usnextbombposx();
  inline void clear_has_usnextbombposx();
  inline void set_has_usnextbombposy();
  inline void clear_has_usnextbombposy();
  inline void set_has_usbombcount();
  inline void clear_has_usbombcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usserialbombcrabid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;
  ::google::protobuf::int32 usbombposx_;
  ::google::protobuf::int32 usbombposy_;
  ::google::protobuf::int32 usnextbombposx_;
  ::google::protobuf::int32 usnextbombposy_;
  ::google::protobuf::int32 usbombcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static SerialBombCrabBombRsp* default_instance_;
};
// -------------------------------------------------------------------

class DestorySerialBombCrabRsp : public ::google::protobuf::Message {
 public:
  DestorySerialBombCrabRsp();
  virtual ~DestorySerialBombCrabRsp();

  DestorySerialBombCrabRsp(const DestorySerialBombCrabRsp& from);

  inline DestorySerialBombCrabRsp& operator=(const DestorySerialBombCrabRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestorySerialBombCrabRsp& default_instance();

  void Swap(DestorySerialBombCrabRsp* other);

  // implements Message ----------------------------------------------

  DestorySerialBombCrabRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestorySerialBombCrabRsp& from);
  void MergeFrom(const DestorySerialBombCrabRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usSerialBombCrabId = 2;
  inline bool has_usserialbombcrabid() const;
  inline void clear_usserialbombcrabid();
  static const int kUsSerialBombCrabIdFieldNumber = 2;
  inline ::google::protobuf::int32 usserialbombcrabid() const;
  inline void set_usserialbombcrabid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DestorySerialBombCrabRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usserialbombcrabid();
  inline void clear_has_usserialbombcrabid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usserialbombcrabid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DestorySerialBombCrabRsp* default_instance_;
};
// -------------------------------------------------------------------

class HaiWangCrabHitPartReq : public ::google::protobuf::Message {
 public:
  HaiWangCrabHitPartReq();
  virtual ~HaiWangCrabHitPartReq();

  HaiWangCrabHitPartReq(const HaiWangCrabHitPartReq& from);

  inline HaiWangCrabHitPartReq& operator=(const HaiWangCrabHitPartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaiWangCrabHitPartReq& default_instance();

  void Swap(HaiWangCrabHitPartReq* other);

  // implements Message ----------------------------------------------

  HaiWangCrabHitPartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HaiWangCrabHitPartReq& from);
  void MergeFrom(const HaiWangCrabHitPartReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usBulletId = 1;
  inline bool has_usbulletid() const;
  inline void clear_usbulletid();
  static const int kUsBulletIdFieldNumber = 1;
  inline ::google::protobuf::int32 usbulletid() const;
  inline void set_usbulletid(::google::protobuf::int32 value);

  // optional int32 usHaiWangCrabId = 2;
  inline bool has_ushaiwangcrabid() const;
  inline void clear_ushaiwangcrabid();
  static const int kUsHaiWangCrabIdFieldNumber = 2;
  inline ::google::protobuf::int32 ushaiwangcrabid() const;
  inline void set_ushaiwangcrabid(::google::protobuf::int32 value);

  // optional int32 usPartId = 3;
  inline bool has_uspartid() const;
  inline void clear_uspartid();
  static const int kUsPartIdFieldNumber = 3;
  inline ::google::protobuf::int32 uspartid() const;
  inline void set_uspartid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.HaiWangCrabHitPartReq)
 private:
  inline void set_has_usbulletid();
  inline void clear_has_usbulletid();
  inline void set_has_ushaiwangcrabid();
  inline void clear_has_ushaiwangcrabid();
  inline void set_has_uspartid();
  inline void clear_has_uspartid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 usbulletid_;
  ::google::protobuf::int32 ushaiwangcrabid_;
  ::google::protobuf::int32 uspartid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static HaiWangCrabHitPartReq* default_instance_;
};
// -------------------------------------------------------------------

class CrabPart : public ::google::protobuf::Message {
 public:
  CrabPart();
  virtual ~CrabPart();

  CrabPart(const CrabPart& from);

  inline CrabPart& operator=(const CrabPart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrabPart& default_instance();

  void Swap(CrabPart* other);

  // implements Message ----------------------------------------------

  CrabPart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrabPart& from);
  void MergeFrom(const CrabPart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usPartId = 2;
  inline bool has_uspartid() const;
  inline void clear_uspartid();
  static const int kUsPartIdFieldNumber = 2;
  inline ::google::protobuf::int32 uspartid() const;
  inline void set_uspartid(::google::protobuf::int32 value);

  // optional int32 usPartMul = 3;
  inline bool has_uspartmul() const;
  inline void clear_uspartmul();
  static const int kUsPartMulFieldNumber = 3;
  inline ::google::protobuf::int32 uspartmul() const;
  inline void set_uspartmul(::google::protobuf::int32 value);

  // optional int32 usScore = 4;
  inline bool has_usscore() const;
  inline void clear_usscore();
  static const int kUsScoreFieldNumber = 4;
  inline ::google::protobuf::int32 usscore() const;
  inline void set_usscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CrabPart)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_uspartid();
  inline void clear_has_uspartid();
  inline void set_has_uspartmul();
  inline void clear_has_uspartmul();
  inline void set_has_usscore();
  inline void clear_has_usscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 uspartid_;
  ::google::protobuf::int32 uspartmul_;
  ::google::protobuf::int32 usscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CrabPart* default_instance_;
};
// -------------------------------------------------------------------

class HaiWangCrabKilledPartRsp : public ::google::protobuf::Message {
 public:
  HaiWangCrabKilledPartRsp();
  virtual ~HaiWangCrabKilledPartRsp();

  HaiWangCrabKilledPartRsp(const HaiWangCrabKilledPartRsp& from);

  inline HaiWangCrabKilledPartRsp& operator=(const HaiWangCrabKilledPartRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaiWangCrabKilledPartRsp& default_instance();

  void Swap(HaiWangCrabKilledPartRsp* other);

  // implements Message ----------------------------------------------

  HaiWangCrabKilledPartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HaiWangCrabKilledPartRsp& from);
  void MergeFrom(const HaiWangCrabKilledPartRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usHaiwangCrabId = 1;
  inline bool has_ushaiwangcrabid() const;
  inline void clear_ushaiwangcrabid();
  static const int kUsHaiwangCrabIdFieldNumber = 1;
  inline ::google::protobuf::int32 ushaiwangcrabid() const;
  inline void set_ushaiwangcrabid(::google::protobuf::int32 value);

  // repeated .gamefish.CrabPart aryKilledParts = 2;
  inline int arykilledparts_size() const;
  inline void clear_arykilledparts();
  static const int kAryKilledPartsFieldNumber = 2;
  inline const ::gamefish::CrabPart& arykilledparts(int index) const;
  inline ::gamefish::CrabPart* mutable_arykilledparts(int index);
  inline ::gamefish::CrabPart* add_arykilledparts();
  inline const ::google::protobuf::RepeatedPtrField< ::gamefish::CrabPart >&
      arykilledparts() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamefish::CrabPart >*
      mutable_arykilledparts();

  // @@protoc_insertion_point(class_scope:gamefish.HaiWangCrabKilledPartRsp)
 private:
  inline void set_has_ushaiwangcrabid();
  inline void clear_has_ushaiwangcrabid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::gamefish::CrabPart > arykilledparts_;
  ::google::protobuf::int32 ushaiwangcrabid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static HaiWangCrabKilledPartRsp* default_instance_;
};
// -------------------------------------------------------------------

class HaiWangCrabKilledDeadRsp : public ::google::protobuf::Message {
 public:
  HaiWangCrabKilledDeadRsp();
  virtual ~HaiWangCrabKilledDeadRsp();

  HaiWangCrabKilledDeadRsp(const HaiWangCrabKilledDeadRsp& from);

  inline HaiWangCrabKilledDeadRsp& operator=(const HaiWangCrabKilledDeadRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaiWangCrabKilledDeadRsp& default_instance();

  void Swap(HaiWangCrabKilledDeadRsp* other);

  // implements Message ----------------------------------------------

  HaiWangCrabKilledDeadRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HaiWangCrabKilledDeadRsp& from);
  void MergeFrom(const HaiWangCrabKilledDeadRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usHaiwangCrabId = 2;
  inline bool has_ushaiwangcrabid() const;
  inline void clear_ushaiwangcrabid();
  static const int kUsHaiwangCrabIdFieldNumber = 2;
  inline ::google::protobuf::int32 ushaiwangcrabid() const;
  inline void set_ushaiwangcrabid(::google::protobuf::int32 value);

  // optional int32 usPartMul = 3;
  inline bool has_uspartmul() const;
  inline void clear_uspartmul();
  static const int kUsPartMulFieldNumber = 3;
  inline ::google::protobuf::int32 uspartmul() const;
  inline void set_uspartmul(::google::protobuf::int32 value);

  // optional int32 usSelfScore = 4;
  inline bool has_usselfscore() const;
  inline void clear_usselfscore();
  static const int kUsSelfScoreFieldNumber = 4;
  inline ::google::protobuf::int32 usselfscore() const;
  inline void set_usselfscore(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 5;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 5;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 6;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 6;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.HaiWangCrabKilledDeadRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_ushaiwangcrabid();
  inline void clear_has_ushaiwangcrabid();
  inline void set_has_uspartmul();
  inline void clear_has_uspartmul();
  inline void set_has_usselfscore();
  inline void clear_has_usselfscore();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 ushaiwangcrabid_;
  ::google::protobuf::int32 uspartmul_;
  ::google::protobuf::int32 usselfscore_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static HaiWangCrabKilledDeadRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateDelayBombRsp : public ::google::protobuf::Message {
 public:
  CreateDelayBombRsp();
  virtual ~CreateDelayBombRsp();

  CreateDelayBombRsp(const CreateDelayBombRsp& from);

  inline CreateDelayBombRsp& operator=(const CreateDelayBombRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDelayBombRsp& default_instance();

  void Swap(CreateDelayBombRsp* other);

  // implements Message ----------------------------------------------

  CreateDelayBombRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateDelayBombRsp& from);
  void MergeFrom(const CreateDelayBombRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDelayBombId = 2;
  inline bool has_usdelaybombid() const;
  inline void clear_usdelaybombid();
  static const int kUsDelayBombIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdelaybombid() const;
  inline void set_usdelaybombid(::google::protobuf::int32 value);

  // optional int32 usKilledFishId = 3;
  inline bool has_uskilledfishid() const;
  inline void clear_uskilledfishid();
  static const int kUsKilledFishIdFieldNumber = 3;
  inline ::google::protobuf::int32 uskilledfishid() const;
  inline void set_uskilledfishid(::google::protobuf::int32 value);

  // optional int32 usStatus = 4;
  inline bool has_usstatus() const;
  inline void clear_usstatus();
  static const int kUsStatusFieldNumber = 4;
  inline ::google::protobuf::int32 usstatus() const;
  inline void set_usstatus(::google::protobuf::int32 value);

  // optional int32 usStatusTime = 5;
  inline bool has_usstatustime() const;
  inline void clear_usstatustime();
  static const int kUsStatusTimeFieldNumber = 5;
  inline ::google::protobuf::int32 usstatustime() const;
  inline void set_usstatustime(::google::protobuf::int32 value);

  // optional int32 usPosX = 6;
  inline bool has_usposx() const;
  inline void clear_usposx();
  static const int kUsPosXFieldNumber = 6;
  inline ::google::protobuf::int32 usposx() const;
  inline void set_usposx(::google::protobuf::int32 value);

  // optional int32 usPoxY = 7;
  inline bool has_uspoxy() const;
  inline void clear_uspoxy();
  static const int kUsPoxYFieldNumber = 7;
  inline ::google::protobuf::int32 uspoxy() const;
  inline void set_uspoxy(::google::protobuf::int32 value);

  // optional int32 bombFishId = 8;
  inline bool has_bombfishid() const;
  inline void clear_bombfishid();
  static const int kBombFishIdFieldNumber = 8;
  inline ::google::protobuf::int32 bombfishid() const;
  inline void set_bombfishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.CreateDelayBombRsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdelaybombid();
  inline void clear_has_usdelaybombid();
  inline void set_has_uskilledfishid();
  inline void clear_has_uskilledfishid();
  inline void set_has_usstatus();
  inline void clear_has_usstatus();
  inline void set_has_usstatustime();
  inline void clear_has_usstatustime();
  inline void set_has_usposx();
  inline void clear_has_usposx();
  inline void set_has_uspoxy();
  inline void clear_has_uspoxy();
  inline void set_has_bombfishid();
  inline void clear_has_bombfishid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdelaybombid_;
  ::google::protobuf::int32 uskilledfishid_;
  ::google::protobuf::int32 usstatus_;
  ::google::protobuf::int32 usstatustime_;
  ::google::protobuf::int32 usposx_;
  ::google::protobuf::int32 uspoxy_;
  ::google::protobuf::int32 bombfishid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static CreateDelayBombRsp* default_instance_;
};
// -------------------------------------------------------------------

class DelayBomb_Bomb_Rsp : public ::google::protobuf::Message {
 public:
  DelayBomb_Bomb_Rsp();
  virtual ~DelayBomb_Bomb_Rsp();

  DelayBomb_Bomb_Rsp(const DelayBomb_Bomb_Rsp& from);

  inline DelayBomb_Bomb_Rsp& operator=(const DelayBomb_Bomb_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelayBomb_Bomb_Rsp& default_instance();

  void Swap(DelayBomb_Bomb_Rsp* other);

  // implements Message ----------------------------------------------

  DelayBomb_Bomb_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelayBomb_Bomb_Rsp& from);
  void MergeFrom(const DelayBomb_Bomb_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 usChairId = 1;
  inline bool has_uschairid() const;
  inline void clear_uschairid();
  static const int kUsChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 uschairid() const;
  inline void set_uschairid(::google::protobuf::int32 value);

  // optional int32 usDelayBombId = 2;
  inline bool has_usdelaybombid() const;
  inline void clear_usdelaybombid();
  static const int kUsDelayBombIdFieldNumber = 2;
  inline ::google::protobuf::int32 usdelaybombid() const;
  inline void set_usdelaybombid(::google::protobuf::int32 value);

  // optional int32 usTotalScore = 3;
  inline bool has_ustotalscore() const;
  inline void clear_ustotalscore();
  static const int kUsTotalScoreFieldNumber = 3;
  inline ::google::protobuf::int32 ustotalscore() const;
  inline void set_ustotalscore(::google::protobuf::int32 value);

  // optional int32 usTotalMul = 4;
  inline bool has_ustotalmul() const;
  inline void clear_ustotalmul();
  static const int kUsTotalMulFieldNumber = 4;
  inline ::google::protobuf::int32 ustotalmul() const;
  inline void set_ustotalmul(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamefish.DelayBomb_Bomb_Rsp)
 private:
  inline void set_has_uschairid();
  inline void clear_has_uschairid();
  inline void set_has_usdelaybombid();
  inline void clear_has_usdelaybombid();
  inline void set_has_ustotalscore();
  inline void clear_has_ustotalscore();
  inline void set_has_ustotalmul();
  inline void clear_has_ustotalmul();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uschairid_;
  ::google::protobuf::int32 usdelaybombid_;
  ::google::protobuf::int32 ustotalscore_;
  ::google::protobuf::int32 ustotalmul_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSFish_2eproto();
  friend void protobuf_AssignDesc_CSFish_2eproto();
  friend void protobuf_ShutdownFile_CSFish_2eproto();

  void InitAsDefaultInstance();
  static DelayBomb_Bomb_Rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// FishInfo

// optional uint32 usFishKind = 1;
inline bool FishInfo::has_usfishkind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FishInfo::set_has_usfishkind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FishInfo::clear_has_usfishkind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FishInfo::clear_usfishkind() {
  usfishkind_ = 0u;
  clear_has_usfishkind();
}
inline ::google::protobuf::uint32 FishInfo::usfishkind() const {
  return usfishkind_;
}
inline void FishInfo::set_usfishkind(::google::protobuf::uint32 value) {
  set_has_usfishkind();
  usfishkind_ = value;
}

// optional uint32 usFishID = 2;
inline bool FishInfo::has_usfishid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FishInfo::set_has_usfishid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FishInfo::clear_has_usfishid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FishInfo::clear_usfishid() {
  usfishid_ = 0u;
  clear_has_usfishid();
}
inline ::google::protobuf::uint32 FishInfo::usfishid() const {
  return usfishid_;
}
inline void FishInfo::set_usfishid(::google::protobuf::uint32 value) {
  set_has_usfishid();
  usfishid_ = value;
}

// repeated uint32 subFishKinds = 3;
inline int FishInfo::subfishkinds_size() const {
  return subfishkinds_.size();
}
inline void FishInfo::clear_subfishkinds() {
  subfishkinds_.Clear();
}
inline ::google::protobuf::uint32 FishInfo::subfishkinds(int index) const {
  return subfishkinds_.Get(index);
}
inline void FishInfo::set_subfishkinds(int index, ::google::protobuf::uint32 value) {
  subfishkinds_.Set(index, value);
}
inline void FishInfo::add_subfishkinds(::google::protobuf::uint32 value) {
  subfishkinds_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FishInfo::subfishkinds() const {
  return subfishkinds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FishInfo::mutable_subfishkinds() {
  return &subfishkinds_;
}

// optional uint32 usTraceId = 4;
inline bool FishInfo::has_ustraceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FishInfo::set_has_ustraceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FishInfo::clear_has_ustraceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FishInfo::clear_ustraceid() {
  ustraceid_ = 0u;
  clear_has_ustraceid();
}
inline ::google::protobuf::uint32 FishInfo::ustraceid() const {
  return ustraceid_;
}
inline void FishInfo::set_ustraceid(::google::protobuf::uint32 value) {
  set_has_ustraceid();
  ustraceid_ = value;
}

// optional uint32 usStartIndex = 5;
inline bool FishInfo::has_usstartindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FishInfo::set_has_usstartindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FishInfo::clear_has_usstartindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FishInfo::clear_usstartindex() {
  usstartindex_ = 0u;
  clear_has_usstartindex();
}
inline ::google::protobuf::uint32 FishInfo::usstartindex() const {
  return usstartindex_;
}
inline void FishInfo::set_usstartindex(::google::protobuf::uint32 value) {
  set_has_usstartindex();
  usstartindex_ = value;
}

// optional uint32 usOffsetIndex = 6;
inline bool FishInfo::has_usoffsetindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FishInfo::set_has_usoffsetindex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FishInfo::clear_has_usoffsetindex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FishInfo::clear_usoffsetindex() {
  usoffsetindex_ = 0u;
  clear_has_usoffsetindex();
}
inline ::google::protobuf::uint32 FishInfo::usoffsetindex() const {
  return usoffsetindex_;
}
inline void FishInfo::set_usoffsetindex(::google::protobuf::uint32 value) {
  set_has_usoffsetindex();
  usoffsetindex_ = value;
}

// optional int32 usOffsetPosX = 7;
inline bool FishInfo::has_usoffsetposx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FishInfo::set_has_usoffsetposx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FishInfo::clear_has_usoffsetposx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FishInfo::clear_usoffsetposx() {
  usoffsetposx_ = 0;
  clear_has_usoffsetposx();
}
inline ::google::protobuf::int32 FishInfo::usoffsetposx() const {
  return usoffsetposx_;
}
inline void FishInfo::set_usoffsetposx(::google::protobuf::int32 value) {
  set_has_usoffsetposx();
  usoffsetposx_ = value;
}

// optional int32 usOffsetPoxY = 8;
inline bool FishInfo::has_usoffsetpoxy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FishInfo::set_has_usoffsetpoxy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FishInfo::clear_has_usoffsetpoxy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FishInfo::clear_usoffsetpoxy() {
  usoffsetpoxy_ = 0;
  clear_has_usoffsetpoxy();
}
inline ::google::protobuf::int32 FishInfo::usoffsetpoxy() const {
  return usoffsetpoxy_;
}
inline void FishInfo::set_usoffsetpoxy(::google::protobuf::int32 value) {
  set_has_usoffsetpoxy();
  usoffsetpoxy_ = value;
}

// optional uint32 usBirthDelay = 9;
inline bool FishInfo::has_usbirthdelay() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FishInfo::set_has_usbirthdelay() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FishInfo::clear_has_usbirthdelay() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FishInfo::clear_usbirthdelay() {
  usbirthdelay_ = 0u;
  clear_has_usbirthdelay();
}
inline ::google::protobuf::uint32 FishInfo::usbirthdelay() const {
  return usbirthdelay_;
}
inline void FishInfo::set_usbirthdelay(::google::protobuf::uint32 value) {
  set_has_usbirthdelay();
  usbirthdelay_ = value;
}

// optional uint32 usIsRedFish = 10;
inline bool FishInfo::has_usisredfish() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FishInfo::set_has_usisredfish() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FishInfo::clear_has_usisredfish() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FishInfo::clear_usisredfish() {
  usisredfish_ = 0u;
  clear_has_usisredfish();
}
inline ::google::protobuf::uint32 FishInfo::usisredfish() const {
  return usisredfish_;
}
inline void FishInfo::set_usisredfish(::google::protobuf::uint32 value) {
  set_has_usisredfish();
  usisredfish_ = value;
}

// optional uint32 usGroupId = 11;
inline bool FishInfo::has_usgroupid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FishInfo::set_has_usgroupid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FishInfo::clear_has_usgroupid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FishInfo::clear_usgroupid() {
  usgroupid_ = 0u;
  clear_has_usgroupid();
}
inline ::google::protobuf::uint32 FishInfo::usgroupid() const {
  return usgroupid_;
}
inline void FishInfo::set_usgroupid(::google::protobuf::uint32 value) {
  set_has_usgroupid();
  usgroupid_ = value;
}

// -------------------------------------------------------------------

// FishList

// repeated .gamefish.FishInfo Fishes = 1;
inline int FishList::fishes_size() const {
  return fishes_.size();
}
inline void FishList::clear_fishes() {
  fishes_.Clear();
}
inline const ::gamefish::FishInfo& FishList::fishes(int index) const {
  return fishes_.Get(index);
}
inline ::gamefish::FishInfo* FishList::mutable_fishes(int index) {
  return fishes_.Mutable(index);
}
inline ::gamefish::FishInfo* FishList::add_fishes() {
  return fishes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::FishInfo >&
FishList::fishes() const {
  return fishes_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::FishInfo >*
FishList::mutable_fishes() {
  return &fishes_;
}

// -------------------------------------------------------------------

// cgUserReady

// optional int32 usResvered = 1;
inline bool cgUserReady::has_usresvered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgUserReady::set_has_usresvered() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgUserReady::clear_has_usresvered() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgUserReady::clear_usresvered() {
  usresvered_ = 0;
  clear_has_usresvered();
}
inline ::google::protobuf::int32 cgUserReady::usresvered() const {
  return usresvered_;
}
inline void cgUserReady::set_usresvered(::google::protobuf::int32 value) {
  set_has_usresvered();
  usresvered_ = value;
}

// -------------------------------------------------------------------

// ShootBulletReq

// optional int32 usBulletId = 1;
inline bool ShootBulletReq::has_usbulletid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShootBulletReq::set_has_usbulletid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShootBulletReq::clear_has_usbulletid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShootBulletReq::clear_usbulletid() {
  usbulletid_ = 0;
  clear_has_usbulletid();
}
inline ::google::protobuf::int32 ShootBulletReq::usbulletid() const {
  return usbulletid_;
}
inline void ShootBulletReq::set_usbulletid(::google::protobuf::int32 value) {
  set_has_usbulletid();
  usbulletid_ = value;
}

// optional int32 sAngle = 2;
inline bool ShootBulletReq::has_sangle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShootBulletReq::set_has_sangle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShootBulletReq::clear_has_sangle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShootBulletReq::clear_sangle() {
  sangle_ = 0;
  clear_has_sangle();
}
inline ::google::protobuf::int32 ShootBulletReq::sangle() const {
  return sangle_;
}
inline void ShootBulletReq::set_sangle(::google::protobuf::int32 value) {
  set_has_sangle();
  sangle_ = value;
}

// optional int32 byCannonLevelIndex = 3;
inline bool ShootBulletReq::has_bycannonlevelindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShootBulletReq::set_has_bycannonlevelindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShootBulletReq::clear_has_bycannonlevelindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShootBulletReq::clear_bycannonlevelindex() {
  bycannonlevelindex_ = 0;
  clear_has_bycannonlevelindex();
}
inline ::google::protobuf::int32 ShootBulletReq::bycannonlevelindex() const {
  return bycannonlevelindex_;
}
inline void ShootBulletReq::set_bycannonlevelindex(::google::protobuf::int32 value) {
  set_has_bycannonlevelindex();
  bycannonlevelindex_ = value;
}

// -------------------------------------------------------------------

// ShootBulletRsp

// optional int32 usBulletId = 1;
inline bool ShootBulletRsp::has_usbulletid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShootBulletRsp::set_has_usbulletid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShootBulletRsp::clear_has_usbulletid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShootBulletRsp::clear_usbulletid() {
  usbulletid_ = 0;
  clear_has_usbulletid();
}
inline ::google::protobuf::int32 ShootBulletRsp::usbulletid() const {
  return usbulletid_;
}
inline void ShootBulletRsp::set_usbulletid(::google::protobuf::int32 value) {
  set_has_usbulletid();
  usbulletid_ = value;
}

// optional int32 sAngle = 2;
inline bool ShootBulletRsp::has_sangle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShootBulletRsp::set_has_sangle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShootBulletRsp::clear_has_sangle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShootBulletRsp::clear_sangle() {
  sangle_ = 0;
  clear_has_sangle();
}
inline ::google::protobuf::int32 ShootBulletRsp::sangle() const {
  return sangle_;
}
inline void ShootBulletRsp::set_sangle(::google::protobuf::int32 value) {
  set_has_sangle();
  sangle_ = value;
}

// optional int32 usSpeedIndex = 3;
inline bool ShootBulletRsp::has_usspeedindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShootBulletRsp::set_has_usspeedindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShootBulletRsp::clear_has_usspeedindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShootBulletRsp::clear_usspeedindex() {
  usspeedindex_ = 0;
  clear_has_usspeedindex();
}
inline ::google::protobuf::int32 ShootBulletRsp::usspeedindex() const {
  return usspeedindex_;
}
inline void ShootBulletRsp::set_usspeedindex(::google::protobuf::int32 value) {
  set_has_usspeedindex();
  usspeedindex_ = value;
}

// optional int32 usIntervalIndex = 4;
inline bool ShootBulletRsp::has_usintervalindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShootBulletRsp::set_has_usintervalindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShootBulletRsp::clear_has_usintervalindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShootBulletRsp::clear_usintervalindex() {
  usintervalindex_ = 0;
  clear_has_usintervalindex();
}
inline ::google::protobuf::int32 ShootBulletRsp::usintervalindex() const {
  return usintervalindex_;
}
inline void ShootBulletRsp::set_usintervalindex(::google::protobuf::int32 value) {
  set_has_usintervalindex();
  usintervalindex_ = value;
}

// optional int32 usLevelIndex = 5;
inline bool ShootBulletRsp::has_uslevelindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShootBulletRsp::set_has_uslevelindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShootBulletRsp::clear_has_uslevelindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShootBulletRsp::clear_uslevelindex() {
  uslevelindex_ = 0;
  clear_has_uslevelindex();
}
inline ::google::protobuf::int32 ShootBulletRsp::uslevelindex() const {
  return uslevelindex_;
}
inline void ShootBulletRsp::set_uslevelindex(::google::protobuf::int32 value) {
  set_has_uslevelindex();
  uslevelindex_ = value;
}

// optional int32 usChairId = 6;
inline bool ShootBulletRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShootBulletRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShootBulletRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShootBulletRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ShootBulletRsp::uschairid() const {
  return uschairid_;
}
inline void ShootBulletRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usErrorCode = 7;
inline bool ShootBulletRsp::has_userrorcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShootBulletRsp::set_has_userrorcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShootBulletRsp::clear_has_userrorcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShootBulletRsp::clear_userrorcode() {
  userrorcode_ = 0;
  clear_has_userrorcode();
}
inline ::google::protobuf::int32 ShootBulletRsp::userrorcode() const {
  return userrorcode_;
}
inline void ShootBulletRsp::set_userrorcode(::google::protobuf::int32 value) {
  set_has_userrorcode();
  userrorcode_ = value;
}

// optional int32 usProcUserChairId = 8;
inline bool ShootBulletRsp::has_usprocuserchairid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShootBulletRsp::set_has_usprocuserchairid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShootBulletRsp::clear_has_usprocuserchairid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShootBulletRsp::clear_usprocuserchairid() {
  usprocuserchairid_ = 0;
  clear_has_usprocuserchairid();
}
inline ::google::protobuf::int32 ShootBulletRsp::usprocuserchairid() const {
  return usprocuserchairid_;
}
inline void ShootBulletRsp::set_usprocuserchairid(::google::protobuf::int32 value) {
  set_has_usprocuserchairid();
  usprocuserchairid_ = value;
}

// -------------------------------------------------------------------

// cgBulletSpeed

// optional int32 usSpeedIndex = 1;
inline bool cgBulletSpeed::has_usspeedindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgBulletSpeed::set_has_usspeedindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgBulletSpeed::clear_has_usspeedindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgBulletSpeed::clear_usspeedindex() {
  usspeedindex_ = 0;
  clear_has_usspeedindex();
}
inline ::google::protobuf::int32 cgBulletSpeed::usspeedindex() const {
  return usspeedindex_;
}
inline void cgBulletSpeed::set_usspeedindex(::google::protobuf::int32 value) {
  set_has_usspeedindex();
  usspeedindex_ = value;
}

// optional int32 usIntervalIndex = 2;
inline bool cgBulletSpeed::has_usintervalindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgBulletSpeed::set_has_usintervalindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgBulletSpeed::clear_has_usintervalindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgBulletSpeed::clear_usintervalindex() {
  usintervalindex_ = 0;
  clear_has_usintervalindex();
}
inline ::google::protobuf::int32 cgBulletSpeed::usintervalindex() const {
  return usintervalindex_;
}
inline void cgBulletSpeed::set_usintervalindex(::google::protobuf::int32 value) {
  set_has_usintervalindex();
  usintervalindex_ = value;
}

// -------------------------------------------------------------------

// gcBulletSpeed

// optional int32 usChairId = 1;
inline bool gcBulletSpeed::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcBulletSpeed::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcBulletSpeed::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcBulletSpeed::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 gcBulletSpeed::uschairid() const {
  return uschairid_;
}
inline void gcBulletSpeed::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSpeedIndex = 2;
inline bool gcBulletSpeed::has_usspeedindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcBulletSpeed::set_has_usspeedindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcBulletSpeed::clear_has_usspeedindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcBulletSpeed::clear_usspeedindex() {
  usspeedindex_ = 0;
  clear_has_usspeedindex();
}
inline ::google::protobuf::int32 gcBulletSpeed::usspeedindex() const {
  return usspeedindex_;
}
inline void gcBulletSpeed::set_usspeedindex(::google::protobuf::int32 value) {
  set_has_usspeedindex();
  usspeedindex_ = value;
}

// optional int32 usIntervalIndex = 3;
inline bool gcBulletSpeed::has_usintervalindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcBulletSpeed::set_has_usintervalindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcBulletSpeed::clear_has_usintervalindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcBulletSpeed::clear_usintervalindex() {
  usintervalindex_ = 0;
  clear_has_usintervalindex();
}
inline ::google::protobuf::int32 gcBulletSpeed::usintervalindex() const {
  return usintervalindex_;
}
inline void gcBulletSpeed::set_usintervalindex(::google::protobuf::int32 value) {
  set_has_usintervalindex();
  usintervalindex_ = value;
}

// optional int32 usErrorCode = 4;
inline bool gcBulletSpeed::has_userrorcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gcBulletSpeed::set_has_userrorcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gcBulletSpeed::clear_has_userrorcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gcBulletSpeed::clear_userrorcode() {
  userrorcode_ = 0;
  clear_has_userrorcode();
}
inline ::google::protobuf::int32 gcBulletSpeed::userrorcode() const {
  return userrorcode_;
}
inline void gcBulletSpeed::set_userrorcode(::google::protobuf::int32 value) {
  set_has_userrorcode();
  userrorcode_ = value;
}

// -------------------------------------------------------------------

// gcStatus

// optional int32 usStatus = 1;
inline bool gcStatus::has_usstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcStatus::set_has_usstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcStatus::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcStatus::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 gcStatus::usstatus() const {
  return usstatus_;
}
inline void gcStatus::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// -------------------------------------------------------------------

// cgHitfish

// optional int32 fishId = 1;
inline bool cgHitfish::has_fishid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgHitfish::set_has_fishid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgHitfish::clear_has_fishid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgHitfish::clear_fishid() {
  fishid_ = 0;
  clear_has_fishid();
}
inline ::google::protobuf::int32 cgHitfish::fishid() const {
  return fishid_;
}
inline void cgHitfish::set_fishid(::google::protobuf::int32 value) {
  set_has_fishid();
  fishid_ = value;
}

// optional int32 subFishId = 2;
inline bool cgHitfish::has_subfishid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgHitfish::set_has_subfishid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgHitfish::clear_has_subfishid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgHitfish::clear_subfishid() {
  subfishid_ = 0;
  clear_has_subfishid();
}
inline ::google::protobuf::int32 cgHitfish::subfishid() const {
  return subfishid_;
}
inline void cgHitfish::set_subfishid(::google::protobuf::int32 value) {
  set_has_subfishid();
  subfishid_ = value;
}

// optional int32 bulletid = 3;
inline bool cgHitfish::has_bulletid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cgHitfish::set_has_bulletid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cgHitfish::clear_has_bulletid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cgHitfish::clear_bulletid() {
  bulletid_ = 0;
  clear_has_bulletid();
}
inline ::google::protobuf::int32 cgHitfish::bulletid() const {
  return bulletid_;
}
inline void cgHitfish::set_bulletid(::google::protobuf::int32 value) {
  set_has_bulletid();
  bulletid_ = value;
}

// optional int32 usRobotChairId = 4;
inline bool cgHitfish::has_usrobotchairid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void cgHitfish::set_has_usrobotchairid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void cgHitfish::clear_has_usrobotchairid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void cgHitfish::clear_usrobotchairid() {
  usrobotchairid_ = 0;
  clear_has_usrobotchairid();
}
inline ::google::protobuf::int32 cgHitfish::usrobotchairid() const {
  return usrobotchairid_;
}
inline void cgHitfish::set_usrobotchairid(::google::protobuf::int32 value) {
  set_has_usrobotchairid();
  usrobotchairid_ = value;
}

// -------------------------------------------------------------------

// gcKillSubFish

// optional int32 fishId = 1;
inline bool gcKillSubFish::has_fishid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcKillSubFish::set_has_fishid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcKillSubFish::clear_has_fishid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcKillSubFish::clear_fishid() {
  fishid_ = 0;
  clear_has_fishid();
}
inline ::google::protobuf::int32 gcKillSubFish::fishid() const {
  return fishid_;
}
inline void gcKillSubFish::set_fishid(::google::protobuf::int32 value) {
  set_has_fishid();
  fishid_ = value;
}

// optional int32 fishType = 2;
inline bool gcKillSubFish::has_fishtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcKillSubFish::set_has_fishtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcKillSubFish::clear_has_fishtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcKillSubFish::clear_fishtype() {
  fishtype_ = 0;
  clear_has_fishtype();
}
inline ::google::protobuf::int32 gcKillSubFish::fishtype() const {
  return fishtype_;
}
inline void gcKillSubFish::set_fishtype(::google::protobuf::int32 value) {
  set_has_fishtype();
  fishtype_ = value;
}

// optional int32 multiple = 3;
inline bool gcKillSubFish::has_multiple() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcKillSubFish::set_has_multiple() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcKillSubFish::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcKillSubFish::clear_multiple() {
  multiple_ = 0;
  clear_has_multiple();
}
inline ::google::protobuf::int32 gcKillSubFish::multiple() const {
  return multiple_;
}
inline void gcKillSubFish::set_multiple(::google::protobuf::int32 value) {
  set_has_multiple();
  multiple_ = value;
}

// optional int32 score = 4;
inline bool gcKillSubFish::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gcKillSubFish::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gcKillSubFish::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gcKillSubFish::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 gcKillSubFish::score() const {
  return score_;
}
inline void gcKillSubFish::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// KillFishRsp

// optional int32 bombUID = 1;
inline bool KillFishRsp::has_bombuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillFishRsp::set_has_bombuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillFishRsp::clear_has_bombuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillFishRsp::clear_bombuid() {
  bombuid_ = 0;
  clear_has_bombuid();
}
inline ::google::protobuf::int32 KillFishRsp::bombuid() const {
  return bombuid_;
}
inline void KillFishRsp::set_bombuid(::google::protobuf::int32 value) {
  set_has_bombuid();
  bombuid_ = value;
}

// optional int32 mainFishUID = 2;
inline bool KillFishRsp::has_mainfishuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KillFishRsp::set_has_mainfishuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KillFishRsp::clear_has_mainfishuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KillFishRsp::clear_mainfishuid() {
  mainfishuid_ = 0;
  clear_has_mainfishuid();
}
inline ::google::protobuf::int32 KillFishRsp::mainfishuid() const {
  return mainfishuid_;
}
inline void KillFishRsp::set_mainfishuid(::google::protobuf::int32 value) {
  set_has_mainfishuid();
  mainfishuid_ = value;
}

// optional int32 mainFishId = 3;
inline bool KillFishRsp::has_mainfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KillFishRsp::set_has_mainfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KillFishRsp::clear_has_mainfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KillFishRsp::clear_mainfishid() {
  mainfishid_ = 0;
  clear_has_mainfishid();
}
inline ::google::protobuf::int32 KillFishRsp::mainfishid() const {
  return mainfishid_;
}
inline void KillFishRsp::set_mainfishid(::google::protobuf::int32 value) {
  set_has_mainfishid();
  mainfishid_ = value;
}

// optional int32 mainFishType = 4;
inline bool KillFishRsp::has_mainfishtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KillFishRsp::set_has_mainfishtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KillFishRsp::clear_has_mainfishtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KillFishRsp::clear_mainfishtype() {
  mainfishtype_ = 0;
  clear_has_mainfishtype();
}
inline ::google::protobuf::int32 KillFishRsp::mainfishtype() const {
  return mainfishtype_;
}
inline void KillFishRsp::set_mainfishtype(::google::protobuf::int32 value) {
  set_has_mainfishtype();
  mainfishtype_ = value;
}

// optional int32 mainMultiple = 5;
inline bool KillFishRsp::has_mainmultiple() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KillFishRsp::set_has_mainmultiple() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KillFishRsp::clear_has_mainmultiple() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KillFishRsp::clear_mainmultiple() {
  mainmultiple_ = 0;
  clear_has_mainmultiple();
}
inline ::google::protobuf::int32 KillFishRsp::mainmultiple() const {
  return mainmultiple_;
}
inline void KillFishRsp::set_mainmultiple(::google::protobuf::int32 value) {
  set_has_mainmultiple();
  mainmultiple_ = value;
}

// optional int32 mainScore = 6;
inline bool KillFishRsp::has_mainscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KillFishRsp::set_has_mainscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KillFishRsp::clear_has_mainscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KillFishRsp::clear_mainscore() {
  mainscore_ = 0;
  clear_has_mainscore();
}
inline ::google::protobuf::int32 KillFishRsp::mainscore() const {
  return mainscore_;
}
inline void KillFishRsp::set_mainscore(::google::protobuf::int32 value) {
  set_has_mainscore();
  mainscore_ = value;
}

// optional int32 totalScore = 7;
inline bool KillFishRsp::has_totalscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void KillFishRsp::set_has_totalscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void KillFishRsp::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void KillFishRsp::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 KillFishRsp::totalscore() const {
  return totalscore_;
}
inline void KillFishRsp::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// optional int32 totalRatio = 8;
inline bool KillFishRsp::has_totalratio() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void KillFishRsp::set_has_totalratio() {
  _has_bits_[0] |= 0x00000080u;
}
inline void KillFishRsp::clear_has_totalratio() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void KillFishRsp::clear_totalratio() {
  totalratio_ = 0;
  clear_has_totalratio();
}
inline ::google::protobuf::int32 KillFishRsp::totalratio() const {
  return totalratio_;
}
inline void KillFishRsp::set_totalratio(::google::protobuf::int32 value) {
  set_has_totalratio();
  totalratio_ = value;
}

// optional int32 chairId = 9;
inline bool KillFishRsp::has_chairid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void KillFishRsp::set_has_chairid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void KillFishRsp::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void KillFishRsp::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 KillFishRsp::chairid() const {
  return chairid_;
}
inline void KillFishRsp::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 usErrorCode = 10;
inline bool KillFishRsp::has_userrorcode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void KillFishRsp::set_has_userrorcode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void KillFishRsp::clear_has_userrorcode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void KillFishRsp::clear_userrorcode() {
  userrorcode_ = 0;
  clear_has_userrorcode();
}
inline ::google::protobuf::int32 KillFishRsp::userrorcode() const {
  return userrorcode_;
}
inline void KillFishRsp::set_userrorcode(::google::protobuf::int32 value) {
  set_has_userrorcode();
  userrorcode_ = value;
}

// optional int32 subFishCount = 11;
inline bool KillFishRsp::has_subfishcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void KillFishRsp::set_has_subfishcount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void KillFishRsp::clear_has_subfishcount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void KillFishRsp::clear_subfishcount() {
  subfishcount_ = 0;
  clear_has_subfishcount();
}
inline ::google::protobuf::int32 KillFishRsp::subfishcount() const {
  return subfishcount_;
}
inline void KillFishRsp::set_subfishcount(::google::protobuf::int32 value) {
  set_has_subfishcount();
  subfishcount_ = value;
}

// repeated .gamefish.KillFishRsp SubFishes = 12;
inline int KillFishRsp::subfishes_size() const {
  return subfishes_.size();
}
inline void KillFishRsp::clear_subfishes() {
  subfishes_.Clear();
}
inline const ::gamefish::KillFishRsp& KillFishRsp::subfishes(int index) const {
  return subfishes_.Get(index);
}
inline ::gamefish::KillFishRsp* KillFishRsp::mutable_subfishes(int index) {
  return subfishes_.Mutable(index);
}
inline ::gamefish::KillFishRsp* KillFishRsp::add_subfishes() {
  return subfishes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::KillFishRsp >&
KillFishRsp::subfishes() const {
  return subfishes_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::KillFishRsp >*
KillFishRsp::mutable_subfishes() {
  return &subfishes_;
}

// optional int32 bulletid = 13;
inline bool KillFishRsp::has_bulletid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void KillFishRsp::set_has_bulletid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void KillFishRsp::clear_has_bulletid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void KillFishRsp::clear_bulletid() {
  bulletid_ = 0;
  clear_has_bulletid();
}
inline ::google::protobuf::int32 KillFishRsp::bulletid() const {
  return bulletid_;
}
inline void KillFishRsp::set_bulletid(::google::protobuf::int32 value) {
  set_has_bulletid();
  bulletid_ = value;
}

// optional int32 bombFishId = 14;
inline bool KillFishRsp::has_bombfishid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void KillFishRsp::set_has_bombfishid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void KillFishRsp::clear_has_bombfishid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void KillFishRsp::clear_bombfishid() {
  bombfishid_ = 0;
  clear_has_bombfishid();
}
inline ::google::protobuf::int32 KillFishRsp::bombfishid() const {
  return bombfishid_;
}
inline void KillFishRsp::set_bombfishid(::google::protobuf::int32 value) {
  set_has_bombfishid();
  bombfishid_ = value;
}

// -------------------------------------------------------------------

// cgAutoShoot

// optional bool onOff = 1;
inline bool cgAutoShoot::has_onoff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgAutoShoot::set_has_onoff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgAutoShoot::clear_has_onoff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgAutoShoot::clear_onoff() {
  onoff_ = false;
  clear_has_onoff();
}
inline bool cgAutoShoot::onoff() const {
  return onoff_;
}
inline void cgAutoShoot::set_onoff(bool value) {
  set_has_onoff();
  onoff_ = value;
}

// -------------------------------------------------------------------

// gcAutoShoot

// optional int32 chairId = 1;
inline bool gcAutoShoot::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcAutoShoot::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcAutoShoot::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcAutoShoot::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 gcAutoShoot::chairid() const {
  return chairid_;
}
inline void gcAutoShoot::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 onOff = 2;
inline bool gcAutoShoot::has_onoff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcAutoShoot::set_has_onoff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcAutoShoot::clear_has_onoff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcAutoShoot::clear_onoff() {
  onoff_ = 0;
  clear_has_onoff();
}
inline ::google::protobuf::int32 gcAutoShoot::onoff() const {
  return onoff_;
}
inline void gcAutoShoot::set_onoff(::google::protobuf::int32 value) {
  set_has_onoff();
  onoff_ = value;
}

// optional int32 usErrorCode = 3;
inline bool gcAutoShoot::has_userrorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcAutoShoot::set_has_userrorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcAutoShoot::clear_has_userrorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcAutoShoot::clear_userrorcode() {
  userrorcode_ = 0;
  clear_has_userrorcode();
}
inline ::google::protobuf::int32 gcAutoShoot::userrorcode() const {
  return userrorcode_;
}
inline void gcAutoShoot::set_userrorcode(::google::protobuf::int32 value) {
  set_has_userrorcode();
  userrorcode_ = value;
}

// -------------------------------------------------------------------

// cgLockOnOff

// optional bool onOff = 1;
inline bool cgLockOnOff::has_onoff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgLockOnOff::set_has_onoff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgLockOnOff::clear_has_onoff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgLockOnOff::clear_onoff() {
  onoff_ = false;
  clear_has_onoff();
}
inline bool cgLockOnOff::onoff() const {
  return onoff_;
}
inline void cgLockOnOff::set_onoff(bool value) {
  set_has_onoff();
  onoff_ = value;
}

// -------------------------------------------------------------------

// gcLockOnOff

// optional int32 chairId = 1;
inline bool gcLockOnOff::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcLockOnOff::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcLockOnOff::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcLockOnOff::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 gcLockOnOff::chairid() const {
  return chairid_;
}
inline void gcLockOnOff::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional bool onOff = 2;
inline bool gcLockOnOff::has_onoff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcLockOnOff::set_has_onoff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcLockOnOff::clear_has_onoff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcLockOnOff::clear_onoff() {
  onoff_ = false;
  clear_has_onoff();
}
inline bool gcLockOnOff::onoff() const {
  return onoff_;
}
inline void gcLockOnOff::set_onoff(bool value) {
  set_has_onoff();
  onoff_ = value;
}

// optional int32 usErrorCode = 3;
inline bool gcLockOnOff::has_userrorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcLockOnOff::set_has_userrorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcLockOnOff::clear_has_userrorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcLockOnOff::clear_userrorcode() {
  userrorcode_ = 0;
  clear_has_userrorcode();
}
inline ::google::protobuf::int32 gcLockOnOff::userrorcode() const {
  return userrorcode_;
}
inline void gcLockOnOff::set_userrorcode(::google::protobuf::int32 value) {
  set_has_userrorcode();
  userrorcode_ = value;
}

// -------------------------------------------------------------------

// cgLockFish

// optional int32 fishId = 1;
inline bool cgLockFish::has_fishid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgLockFish::set_has_fishid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgLockFish::clear_has_fishid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgLockFish::clear_fishid() {
  fishid_ = 0;
  clear_has_fishid();
}
inline ::google::protobuf::int32 cgLockFish::fishid() const {
  return fishid_;
}
inline void cgLockFish::set_fishid(::google::protobuf::int32 value) {
  set_has_fishid();
  fishid_ = value;
}

// -------------------------------------------------------------------

// gcLockFish

// optional int32 chairId = 1;
inline bool gcLockFish::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcLockFish::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcLockFish::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcLockFish::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 gcLockFish::chairid() const {
  return chairid_;
}
inline void gcLockFish::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 fishId = 2;
inline bool gcLockFish::has_fishid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcLockFish::set_has_fishid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcLockFish::clear_has_fishid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcLockFish::clear_fishid() {
  fishid_ = 0;
  clear_has_fishid();
}
inline ::google::protobuf::int32 gcLockFish::fishid() const {
  return fishid_;
}
inline void gcLockFish::set_fishid(::google::protobuf::int32 value) {
  set_has_fishid();
  fishid_ = value;
}

// optional int32 usErrorCode = 3;
inline bool gcLockFish::has_userrorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcLockFish::set_has_userrorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcLockFish::clear_has_userrorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcLockFish::clear_userrorcode() {
  userrorcode_ = 0;
  clear_has_userrorcode();
}
inline ::google::protobuf::int32 gcLockFish::userrorcode() const {
  return userrorcode_;
}
inline void gcLockFish::set_userrorcode(::google::protobuf::int32 value) {
  set_has_userrorcode();
  userrorcode_ = value;
}

// -------------------------------------------------------------------

// UserInfo

// optional uint32 chair_id = 1;
inline bool UserInfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 UserInfo::chair_id() const {
  return chair_id_;
}
inline void UserInfo::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional string user_name = 2;
inline bool UserInfo::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfo::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfo::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfo::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& UserInfo::user_name() const {
  return *user_name_;
}
inline void UserInfo::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void UserInfo::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void UserInfo::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserInfo::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* UserInfo::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserInfo::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 user_money = 3;
inline bool UserInfo::has_user_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfo::set_has_user_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfo::clear_has_user_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfo::clear_user_money() {
  user_money_ = GOOGLE_ULONGLONG(0);
  clear_has_user_money();
}
inline ::google::protobuf::uint64 UserInfo::user_money() const {
  return user_money_;
}
inline void UserInfo::set_user_money(::google::protobuf::uint64 value) {
  set_has_user_money();
  user_money_ = value;
}

// optional uint32 cannon_id = 4;
inline bool UserInfo::has_cannon_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserInfo::set_has_cannon_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserInfo::clear_has_cannon_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserInfo::clear_cannon_id() {
  cannon_id_ = 0u;
  clear_has_cannon_id();
}
inline ::google::protobuf::uint32 UserInfo::cannon_id() const {
  return cannon_id_;
}
inline void UserInfo::set_cannon_id(::google::protobuf::uint32 value) {
  set_has_cannon_id();
  cannon_id_ = value;
}

// -------------------------------------------------------------------

// UserStatus

// optional uint32 chair_id = 1;
inline bool UserStatus::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatus::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatus::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatus::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 UserStatus::chair_id() const {
  return chair_id_;
}
inline void UserStatus::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional bool lockfish_onoff = 2;
inline bool UserStatus::has_lockfish_onoff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatus::set_has_lockfish_onoff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatus::clear_has_lockfish_onoff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatus::clear_lockfish_onoff() {
  lockfish_onoff_ = false;
  clear_has_lockfish_onoff();
}
inline bool UserStatus::lockfish_onoff() const {
  return lockfish_onoff_;
}
inline void UserStatus::set_lockfish_onoff(bool value) {
  set_has_lockfish_onoff();
  lockfish_onoff_ = value;
}

// optional uint32 lockfish_uid = 3;
inline bool UserStatus::has_lockfish_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserStatus::set_has_lockfish_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserStatus::clear_has_lockfish_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserStatus::clear_lockfish_uid() {
  lockfish_uid_ = 0u;
  clear_has_lockfish_uid();
}
inline ::google::protobuf::uint32 UserStatus::lockfish_uid() const {
  return lockfish_uid_;
}
inline void UserStatus::set_lockfish_uid(::google::protobuf::uint32 value) {
  set_has_lockfish_uid();
  lockfish_uid_ = value;
}

// optional bool autoshoot_onoff = 4;
inline bool UserStatus::has_autoshoot_onoff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserStatus::set_has_autoshoot_onoff() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserStatus::clear_has_autoshoot_onoff() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserStatus::clear_autoshoot_onoff() {
  autoshoot_onoff_ = false;
  clear_has_autoshoot_onoff();
}
inline bool UserStatus::autoshoot_onoff() const {
  return autoshoot_onoff_;
}
inline void UserStatus::set_autoshoot_onoff(bool value) {
  set_has_autoshoot_onoff();
  autoshoot_onoff_ = value;
}

// optional uint32 bullet_speedlev = 5;
inline bool UserStatus::has_bullet_speedlev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserStatus::set_has_bullet_speedlev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserStatus::clear_has_bullet_speedlev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserStatus::clear_bullet_speedlev() {
  bullet_speedlev_ = 0u;
  clear_has_bullet_speedlev();
}
inline ::google::protobuf::uint32 UserStatus::bullet_speedlev() const {
  return bullet_speedlev_;
}
inline void UserStatus::set_bullet_speedlev(::google::protobuf::uint32 value) {
  set_has_bullet_speedlev();
  bullet_speedlev_ = value;
}

// -------------------------------------------------------------------

// UserStatusReq

// optional uint32 reserved = 1;
inline bool UserStatusReq::has_reserved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatusReq::set_has_reserved() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatusReq::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatusReq::clear_reserved() {
  reserved_ = 0u;
  clear_has_reserved();
}
inline ::google::protobuf::uint32 UserStatusReq::reserved() const {
  return reserved_;
}
inline void UserStatusReq::set_reserved(::google::protobuf::uint32 value) {
  set_has_reserved();
  reserved_ = value;
}

// -------------------------------------------------------------------

// UserStatusRsp

// repeated .gamefish.UserStatus userstatuslist = 1;
inline int UserStatusRsp::userstatuslist_size() const {
  return userstatuslist_.size();
}
inline void UserStatusRsp::clear_userstatuslist() {
  userstatuslist_.Clear();
}
inline const ::gamefish::UserStatus& UserStatusRsp::userstatuslist(int index) const {
  return userstatuslist_.Get(index);
}
inline ::gamefish::UserStatus* UserStatusRsp::mutable_userstatuslist(int index) {
  return userstatuslist_.Mutable(index);
}
inline ::gamefish::UserStatus* UserStatusRsp::add_userstatuslist() {
  return userstatuslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::UserStatus >&
UserStatusRsp::userstatuslist() const {
  return userstatuslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::UserStatus >*
UserStatusRsp::mutable_userstatuslist() {
  return &userstatuslist_;
}

// -------------------------------------------------------------------

// gcUserEnterDesk

// optional .gamefish.UserInfo userInfo = 1;
inline bool gcUserEnterDesk::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcUserEnterDesk::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcUserEnterDesk::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcUserEnterDesk::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::gamefish::UserInfo::Clear();
  clear_has_userinfo();
}
inline const ::gamefish::UserInfo& gcUserEnterDesk::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::gamefish::UserInfo* gcUserEnterDesk::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::gamefish::UserInfo;
  return userinfo_;
}
inline ::gamefish::UserInfo* gcUserEnterDesk::release_userinfo() {
  clear_has_userinfo();
  ::gamefish::UserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void gcUserEnterDesk::set_allocated_userinfo(::gamefish::UserInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
}

// -------------------------------------------------------------------

// gcUserLeaveDesk

// optional uint32 chair_id = 1;
inline bool gcUserLeaveDesk::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcUserLeaveDesk::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcUserLeaveDesk::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcUserLeaveDesk::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 gcUserLeaveDesk::chair_id() const {
  return chair_id_;
}
inline void gcUserLeaveDesk::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// -------------------------------------------------------------------

// gcUserDisconnectDesk

// optional uint32 chair_id = 1;
inline bool gcUserDisconnectDesk::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcUserDisconnectDesk::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcUserDisconnectDesk::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcUserDisconnectDesk::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 gcUserDisconnectDesk::chair_id() const {
  return chair_id_;
}
inline void gcUserDisconnectDesk::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// -------------------------------------------------------------------

// CannonInfo

// optional uint32 cannon_id = 1;
inline bool CannonInfo::has_cannon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CannonInfo::set_has_cannon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CannonInfo::clear_has_cannon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CannonInfo::clear_cannon_id() {
  cannon_id_ = 0u;
  clear_has_cannon_id();
}
inline ::google::protobuf::uint32 CannonInfo::cannon_id() const {
  return cannon_id_;
}
inline void CannonInfo::set_cannon_id(::google::protobuf::uint32 value) {
  set_has_cannon_id();
  cannon_id_ = value;
}

// optional uint32 cannon_value = 2;
inline bool CannonInfo::has_cannon_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CannonInfo::set_has_cannon_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CannonInfo::clear_has_cannon_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CannonInfo::clear_cannon_value() {
  cannon_value_ = 0u;
  clear_has_cannon_value();
}
inline ::google::protobuf::uint32 CannonInfo::cannon_value() const {
  return cannon_value_;
}
inline void CannonInfo::set_cannon_value(::google::protobuf::uint32 value) {
  set_has_cannon_value();
  cannon_value_ = value;
}

// optional uint32 cannon_gun_id = 3;
inline bool CannonInfo::has_cannon_gun_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CannonInfo::set_has_cannon_gun_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CannonInfo::clear_has_cannon_gun_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CannonInfo::clear_cannon_gun_id() {
  cannon_gun_id_ = 0u;
  clear_has_cannon_gun_id();
}
inline ::google::protobuf::uint32 CannonInfo::cannon_gun_id() const {
  return cannon_gun_id_;
}
inline void CannonInfo::set_cannon_gun_id(::google::protobuf::uint32 value) {
  set_has_cannon_gun_id();
  cannon_gun_id_ = value;
}

// -------------------------------------------------------------------

// cgChangeCannon

// optional uint32 cannon_id = 1;
inline bool cgChangeCannon::has_cannon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgChangeCannon::set_has_cannon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgChangeCannon::clear_has_cannon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgChangeCannon::clear_cannon_id() {
  cannon_id_ = 0u;
  clear_has_cannon_id();
}
inline ::google::protobuf::uint32 cgChangeCannon::cannon_id() const {
  return cannon_id_;
}
inline void cgChangeCannon::set_cannon_id(::google::protobuf::uint32 value) {
  set_has_cannon_id();
  cannon_id_ = value;
}

// -------------------------------------------------------------------

// gcChangeCannon

// optional uint32 cannon_id = 1;
inline bool gcChangeCannon::has_cannon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcChangeCannon::set_has_cannon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcChangeCannon::clear_has_cannon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcChangeCannon::clear_cannon_id() {
  cannon_id_ = 0u;
  clear_has_cannon_id();
}
inline ::google::protobuf::uint32 gcChangeCannon::cannon_id() const {
  return cannon_id_;
}
inline void gcChangeCannon::set_cannon_id(::google::protobuf::uint32 value) {
  set_has_cannon_id();
  cannon_id_ = value;
}

// optional uint32 chair_id = 3;
inline bool gcChangeCannon::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcChangeCannon::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcChangeCannon::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcChangeCannon::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 gcChangeCannon::chair_id() const {
  return chair_id_;
}
inline void gcChangeCannon::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// -------------------------------------------------------------------

// ChangeSceneRsp

// optional uint32 scene_id = 1;
inline bool ChangeSceneRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 ChangeSceneRsp::scene_id() const {
  return scene_id_;
}
inline void ChangeSceneRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional float time_seconds = 2;
inline bool ChangeSceneRsp::has_time_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSceneRsp::set_has_time_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSceneRsp::clear_has_time_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSceneRsp::clear_time_seconds() {
  time_seconds_ = 0;
  clear_has_time_seconds();
}
inline float ChangeSceneRsp::time_seconds() const {
  return time_seconds_;
}
inline void ChangeSceneRsp::set_time_seconds(float value) {
  set_has_time_seconds();
  time_seconds_ = value;
}

// optional uint32 scene_change_type = 3;
inline bool ChangeSceneRsp::has_scene_change_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSceneRsp::set_has_scene_change_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSceneRsp::clear_has_scene_change_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSceneRsp::clear_scene_change_type() {
  scene_change_type_ = 0u;
  clear_has_scene_change_type();
}
inline ::google::protobuf::uint32 ChangeSceneRsp::scene_change_type() const {
  return scene_change_type_;
}
inline void ChangeSceneRsp::set_scene_change_type(::google::protobuf::uint32 value) {
  set_has_scene_change_type();
  scene_change_type_ = value;
}

// -------------------------------------------------------------------

// gcUserMoney

// optional uint32 chair_id = 1;
inline bool gcUserMoney::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcUserMoney::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcUserMoney::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcUserMoney::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 gcUserMoney::chair_id() const {
  return chair_id_;
}
inline void gcUserMoney::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional uint64 user_money = 2;
inline bool gcUserMoney::has_user_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcUserMoney::set_has_user_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcUserMoney::clear_has_user_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcUserMoney::clear_user_money() {
  user_money_ = GOOGLE_ULONGLONG(0);
  clear_has_user_money();
}
inline ::google::protobuf::uint64 gcUserMoney::user_money() const {
  return user_money_;
}
inline void gcUserMoney::set_user_money(::google::protobuf::uint64 value) {
  set_has_user_money();
  user_money_ = value;
}

// -------------------------------------------------------------------

// SC_DoubleGunOnOff

// optional uint32 chairId = 1;
inline bool SC_DoubleGunOnOff::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_DoubleGunOnOff::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_DoubleGunOnOff::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_DoubleGunOnOff::clear_chairid() {
  chairid_ = 0u;
  clear_has_chairid();
}
inline ::google::protobuf::uint32 SC_DoubleGunOnOff::chairid() const {
  return chairid_;
}
inline void SC_DoubleGunOnOff::set_chairid(::google::protobuf::uint32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional uint32 onOff = 2;
inline bool SC_DoubleGunOnOff::has_onoff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_DoubleGunOnOff::set_has_onoff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_DoubleGunOnOff::clear_has_onoff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_DoubleGunOnOff::clear_onoff() {
  onoff_ = 0u;
  clear_has_onoff();
}
inline ::google::protobuf::uint32 SC_DoubleGunOnOff::onoff() const {
  return onoff_;
}
inline void SC_DoubleGunOnOff::set_onoff(::google::protobuf::uint32 value) {
  set_has_onoff();
  onoff_ = value;
}

// -------------------------------------------------------------------

// PromptInfoRsp

// optional uint32 infoType = 1;
inline bool PromptInfoRsp::has_infotype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PromptInfoRsp::set_has_infotype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PromptInfoRsp::clear_has_infotype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PromptInfoRsp::clear_infotype() {
  infotype_ = 0u;
  clear_has_infotype();
}
inline ::google::protobuf::uint32 PromptInfoRsp::infotype() const {
  return infotype_;
}
inline void PromptInfoRsp::set_infotype(::google::protobuf::uint32 value) {
  set_has_infotype();
  infotype_ = value;
}

// optional uint32 fishKindId = 2;
inline bool PromptInfoRsp::has_fishkindid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PromptInfoRsp::set_has_fishkindid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PromptInfoRsp::clear_has_fishkindid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PromptInfoRsp::clear_fishkindid() {
  fishkindid_ = 0u;
  clear_has_fishkindid();
}
inline ::google::protobuf::uint32 PromptInfoRsp::fishkindid() const {
  return fishkindid_;
}
inline void PromptInfoRsp::set_fishkindid(::google::protobuf::uint32 value) {
  set_has_fishkindid();
  fishkindid_ = value;
}

// -------------------------------------------------------------------

// GameStatusRsp

// optional uint32 background_index = 1;
inline bool GameStatusRsp::has_background_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStatusRsp::set_has_background_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStatusRsp::clear_has_background_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStatusRsp::clear_background_index() {
  background_index_ = 0u;
  clear_has_background_index();
}
inline ::google::protobuf::uint32 GameStatusRsp::background_index() const {
  return background_index_;
}
inline void GameStatusRsp::set_background_index(::google::protobuf::uint32 value) {
  set_has_background_index();
  background_index_ = value;
}

// repeated .gamefish.CannonInfo cannonlist = 2;
inline int GameStatusRsp::cannonlist_size() const {
  return cannonlist_.size();
}
inline void GameStatusRsp::clear_cannonlist() {
  cannonlist_.Clear();
}
inline const ::gamefish::CannonInfo& GameStatusRsp::cannonlist(int index) const {
  return cannonlist_.Get(index);
}
inline ::gamefish::CannonInfo* GameStatusRsp::mutable_cannonlist(int index) {
  return cannonlist_.Mutable(index);
}
inline ::gamefish::CannonInfo* GameStatusRsp::add_cannonlist() {
  return cannonlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::CannonInfo >&
GameStatusRsp::cannonlist() const {
  return cannonlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::CannonInfo >*
GameStatusRsp::mutable_cannonlist() {
  return &cannonlist_;
}

// repeated .gamefish.UserInfo userlist = 3;
inline int GameStatusRsp::userlist_size() const {
  return userlist_.size();
}
inline void GameStatusRsp::clear_userlist() {
  userlist_.Clear();
}
inline const ::gamefish::UserInfo& GameStatusRsp::userlist(int index) const {
  return userlist_.Get(index);
}
inline ::gamefish::UserInfo* GameStatusRsp::mutable_userlist(int index) {
  return userlist_.Mutable(index);
}
inline ::gamefish::UserInfo* GameStatusRsp::add_userlist() {
  return userlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::UserInfo >&
GameStatusRsp::userlist() const {
  return userlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::UserInfo >*
GameStatusRsp::mutable_userlist() {
  return &userlist_;
}

// -------------------------------------------------------------------

// CreateDianCiCannonRsp

// optional int32 usChairId = 1;
inline bool CreateDianCiCannonRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateDianCiCannonRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateDianCiCannonRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateDianCiCannonRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateDianCiCannonRsp::uschairid() const {
  return uschairid_;
}
inline void CreateDianCiCannonRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool CreateDianCiCannonRsp::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateDianCiCannonRsp::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateDianCiCannonRsp::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateDianCiCannonRsp::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 CreateDianCiCannonRsp::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void CreateDianCiCannonRsp::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateDianCiCannonRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateDianCiCannonRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateDianCiCannonRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateDianCiCannonRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateDianCiCannonRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateDianCiCannonRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usDianCiCannonStatus = 4;
inline bool CreateDianCiCannonRsp::has_usdiancicannonstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateDianCiCannonRsp::set_has_usdiancicannonstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateDianCiCannonRsp::clear_has_usdiancicannonstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateDianCiCannonRsp::clear_usdiancicannonstatus() {
  usdiancicannonstatus_ = 0;
  clear_has_usdiancicannonstatus();
}
inline ::google::protobuf::int32 CreateDianCiCannonRsp::usdiancicannonstatus() const {
  return usdiancicannonstatus_;
}
inline void CreateDianCiCannonRsp::set_usdiancicannonstatus(::google::protobuf::int32 value) {
  set_has_usdiancicannonstatus();
  usdiancicannonstatus_ = value;
}

// optional float usDianCiCannonStatusTime = 5;
inline bool CreateDianCiCannonRsp::has_usdiancicannonstatustime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateDianCiCannonRsp::set_has_usdiancicannonstatustime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateDianCiCannonRsp::clear_has_usdiancicannonstatustime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateDianCiCannonRsp::clear_usdiancicannonstatustime() {
  usdiancicannonstatustime_ = 0;
  clear_has_usdiancicannonstatustime();
}
inline float CreateDianCiCannonRsp::usdiancicannonstatustime() const {
  return usdiancicannonstatustime_;
}
inline void CreateDianCiCannonRsp::set_usdiancicannonstatustime(float value) {
  set_has_usdiancicannonstatustime();
  usdiancicannonstatustime_ = value;
}

// optional int32 usKilledFishKind = 6;
inline bool CreateDianCiCannonRsp::has_uskilledfishkind() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateDianCiCannonRsp::set_has_uskilledfishkind() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateDianCiCannonRsp::clear_has_uskilledfishkind() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateDianCiCannonRsp::clear_uskilledfishkind() {
  uskilledfishkind_ = 0;
  clear_has_uskilledfishkind();
}
inline ::google::protobuf::int32 CreateDianCiCannonRsp::uskilledfishkind() const {
  return uskilledfishkind_;
}
inline void CreateDianCiCannonRsp::set_uskilledfishkind(::google::protobuf::int32 value) {
  set_has_uskilledfishkind();
  uskilledfishkind_ = value;
}

// -------------------------------------------------------------------

// DianCiCannonAimReq

// optional int32 usChairId = 1;
inline bool DianCiCannonAimReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianCiCannonAimReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianCiCannonAimReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianCiCannonAimReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DianCiCannonAimReq::uschairid() const {
  return uschairid_;
}
inline void DianCiCannonAimReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool DianCiCannonAimReq::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianCiCannonAimReq::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianCiCannonAimReq::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianCiCannonAimReq::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 DianCiCannonAimReq::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void DianCiCannonAimReq::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// optional int32 usAngle = 3;
inline bool DianCiCannonAimReq::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DianCiCannonAimReq::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DianCiCannonAimReq::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DianCiCannonAimReq::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 DianCiCannonAimReq::usangle() const {
  return usangle_;
}
inline void DianCiCannonAimReq::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// -------------------------------------------------------------------

// DianCiCannonAimRsp

// optional int32 usChairId = 1;
inline bool DianCiCannonAimRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianCiCannonAimRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianCiCannonAimRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianCiCannonAimRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DianCiCannonAimRsp::uschairid() const {
  return uschairid_;
}
inline void DianCiCannonAimRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool DianCiCannonAimRsp::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianCiCannonAimRsp::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianCiCannonAimRsp::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianCiCannonAimRsp::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 DianCiCannonAimRsp::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void DianCiCannonAimRsp::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// optional int32 usAngle = 3;
inline bool DianCiCannonAimRsp::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DianCiCannonAimRsp::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DianCiCannonAimRsp::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DianCiCannonAimRsp::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 DianCiCannonAimRsp::usangle() const {
  return usangle_;
}
inline void DianCiCannonAimRsp::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// -------------------------------------------------------------------

// DianCiCannonShootReq

// optional int32 usChairId = 1;
inline bool DianCiCannonShootReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianCiCannonShootReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianCiCannonShootReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianCiCannonShootReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DianCiCannonShootReq::uschairid() const {
  return uschairid_;
}
inline void DianCiCannonShootReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool DianCiCannonShootReq::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianCiCannonShootReq::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianCiCannonShootReq::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianCiCannonShootReq::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 DianCiCannonShootReq::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void DianCiCannonShootReq::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// optional int32 usAngle = 3;
inline bool DianCiCannonShootReq::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DianCiCannonShootReq::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DianCiCannonShootReq::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DianCiCannonShootReq::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 DianCiCannonShootReq::usangle() const {
  return usangle_;
}
inline void DianCiCannonShootReq::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// -------------------------------------------------------------------

// DianCiCannonShootRsp

// optional int32 usChairId = 1;
inline bool DianCiCannonShootRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianCiCannonShootRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianCiCannonShootRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianCiCannonShootRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DianCiCannonShootRsp::uschairid() const {
  return uschairid_;
}
inline void DianCiCannonShootRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool DianCiCannonShootRsp::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianCiCannonShootRsp::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianCiCannonShootRsp::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianCiCannonShootRsp::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 DianCiCannonShootRsp::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void DianCiCannonShootRsp::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// optional int32 usAngle = 3;
inline bool DianCiCannonShootRsp::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DianCiCannonShootRsp::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DianCiCannonShootRsp::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DianCiCannonShootRsp::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 DianCiCannonShootRsp::usangle() const {
  return usangle_;
}
inline void DianCiCannonShootRsp::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// optional int32 usProcUserChairId = 4;
inline bool DianCiCannonShootRsp::has_usprocuserchairid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DianCiCannonShootRsp::set_has_usprocuserchairid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DianCiCannonShootRsp::clear_has_usprocuserchairid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DianCiCannonShootRsp::clear_usprocuserchairid() {
  usprocuserchairid_ = 0;
  clear_has_usprocuserchairid();
}
inline ::google::protobuf::int32 DianCiCannonShootRsp::usprocuserchairid() const {
  return usprocuserchairid_;
}
inline void DianCiCannonShootRsp::set_usprocuserchairid(::google::protobuf::int32 value) {
  set_has_usprocuserchairid();
  usprocuserchairid_ = value;
}

// -------------------------------------------------------------------

// DianCiCannonHitFishReq

// optional int32 usChairId = 1;
inline bool DianCiCannonHitFishReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianCiCannonHitFishReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianCiCannonHitFishReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianCiCannonHitFishReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DianCiCannonHitFishReq::uschairid() const {
  return uschairid_;
}
inline void DianCiCannonHitFishReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool DianCiCannonHitFishReq::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianCiCannonHitFishReq::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianCiCannonHitFishReq::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianCiCannonHitFishReq::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 DianCiCannonHitFishReq::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void DianCiCannonHitFishReq::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// repeated int32 SubFishes = 3;
inline int DianCiCannonHitFishReq::subfishes_size() const {
  return subfishes_.size();
}
inline void DianCiCannonHitFishReq::clear_subfishes() {
  subfishes_.Clear();
}
inline ::google::protobuf::int32 DianCiCannonHitFishReq::subfishes(int index) const {
  return subfishes_.Get(index);
}
inline void DianCiCannonHitFishReq::set_subfishes(int index, ::google::protobuf::int32 value) {
  subfishes_.Set(index, value);
}
inline void DianCiCannonHitFishReq::add_subfishes(::google::protobuf::int32 value) {
  subfishes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DianCiCannonHitFishReq::subfishes() const {
  return subfishes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DianCiCannonHitFishReq::mutable_subfishes() {
  return &subfishes_;
}

// optional int32 usRobotChairId = 4;
inline bool DianCiCannonHitFishReq::has_usrobotchairid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DianCiCannonHitFishReq::set_has_usrobotchairid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DianCiCannonHitFishReq::clear_has_usrobotchairid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DianCiCannonHitFishReq::clear_usrobotchairid() {
  usrobotchairid_ = 0;
  clear_has_usrobotchairid();
}
inline ::google::protobuf::int32 DianCiCannonHitFishReq::usrobotchairid() const {
  return usrobotchairid_;
}
inline void DianCiCannonHitFishReq::set_usrobotchairid(::google::protobuf::int32 value) {
  set_has_usrobotchairid();
  usrobotchairid_ = value;
}

// -------------------------------------------------------------------

// DianCiCannonDestroyRsp

// optional int32 usChairId = 1;
inline bool DianCiCannonDestroyRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DianCiCannonDestroyRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DianCiCannonDestroyRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DianCiCannonDestroyRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DianCiCannonDestroyRsp::uschairid() const {
  return uschairid_;
}
inline void DianCiCannonDestroyRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDianCiCannonId = 2;
inline bool DianCiCannonDestroyRsp::has_usdiancicannonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DianCiCannonDestroyRsp::set_has_usdiancicannonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DianCiCannonDestroyRsp::clear_has_usdiancicannonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DianCiCannonDestroyRsp::clear_usdiancicannonid() {
  usdiancicannonid_ = 0;
  clear_has_usdiancicannonid();
}
inline ::google::protobuf::int32 DianCiCannonDestroyRsp::usdiancicannonid() const {
  return usdiancicannonid_;
}
inline void DianCiCannonDestroyRsp::set_usdiancicannonid(::google::protobuf::int32 value) {
  set_has_usdiancicannonid();
  usdiancicannonid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool DianCiCannonDestroyRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DianCiCannonDestroyRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DianCiCannonDestroyRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DianCiCannonDestroyRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 DianCiCannonDestroyRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void DianCiCannonDestroyRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool DianCiCannonDestroyRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DianCiCannonDestroyRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DianCiCannonDestroyRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DianCiCannonDestroyRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 DianCiCannonDestroyRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void DianCiCannonDestroyRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// CreateZuanTouRsp

// optional int32 usChairId = 1;
inline bool CreateZuanTouRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateZuanTouRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateZuanTouRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateZuanTouRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::uschairid() const {
  return uschairid_;
}
inline void CreateZuanTouRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool CreateZuanTouRsp::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateZuanTouRsp::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateZuanTouRsp::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateZuanTouRsp::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::uszuantouid() const {
  return uszuantouid_;
}
inline void CreateZuanTouRsp::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateZuanTouRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateZuanTouRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateZuanTouRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateZuanTouRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateZuanTouRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usTraceId = 4;
inline bool CreateZuanTouRsp::has_ustraceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateZuanTouRsp::set_has_ustraceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateZuanTouRsp::clear_has_ustraceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateZuanTouRsp::clear_ustraceid() {
  ustraceid_ = 0;
  clear_has_ustraceid();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::ustraceid() const {
  return ustraceid_;
}
inline void CreateZuanTouRsp::set_ustraceid(::google::protobuf::int32 value) {
  set_has_ustraceid();
  ustraceid_ = value;
}

// optional int32 usTraceStartPt = 5;
inline bool CreateZuanTouRsp::has_ustracestartpt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateZuanTouRsp::set_has_ustracestartpt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateZuanTouRsp::clear_has_ustracestartpt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateZuanTouRsp::clear_ustracestartpt() {
  ustracestartpt_ = 0;
  clear_has_ustracestartpt();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::ustracestartpt() const {
  return ustracestartpt_;
}
inline void CreateZuanTouRsp::set_ustracestartpt(::google::protobuf::int32 value) {
  set_has_ustracestartpt();
  ustracestartpt_ = value;
}

// optional int32 usZuanTouStatus = 6;
inline bool CreateZuanTouRsp::has_uszuantoustatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateZuanTouRsp::set_has_uszuantoustatus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateZuanTouRsp::clear_has_uszuantoustatus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateZuanTouRsp::clear_uszuantoustatus() {
  uszuantoustatus_ = 0;
  clear_has_uszuantoustatus();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::uszuantoustatus() const {
  return uszuantoustatus_;
}
inline void CreateZuanTouRsp::set_uszuantoustatus(::google::protobuf::int32 value) {
  set_has_uszuantoustatus();
  uszuantoustatus_ = value;
}

// optional float usZuanTouStatusTime = 7;
inline bool CreateZuanTouRsp::has_uszuantoustatustime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateZuanTouRsp::set_has_uszuantoustatustime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateZuanTouRsp::clear_has_uszuantoustatustime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateZuanTouRsp::clear_uszuantoustatustime() {
  uszuantoustatustime_ = 0;
  clear_has_uszuantoustatustime();
}
inline float CreateZuanTouRsp::uszuantoustatustime() const {
  return uszuantoustatustime_;
}
inline void CreateZuanTouRsp::set_uszuantoustatustime(float value) {
  set_has_uszuantoustatustime();
  uszuantoustatustime_ = value;
}

// optional int32 bombFishId = 8;
inline bool CreateZuanTouRsp::has_bombfishid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateZuanTouRsp::set_has_bombfishid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateZuanTouRsp::clear_has_bombfishid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateZuanTouRsp::clear_bombfishid() {
  bombfishid_ = 0;
  clear_has_bombfishid();
}
inline ::google::protobuf::int32 CreateZuanTouRsp::bombfishid() const {
  return bombfishid_;
}
inline void CreateZuanTouRsp::set_bombfishid(::google::protobuf::int32 value) {
  set_has_bombfishid();
  bombfishid_ = value;
}

// -------------------------------------------------------------------

// ZuanTouAimReq

// optional int32 usChairId = 1;
inline bool ZuanTouAimReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZuanTouAimReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZuanTouAimReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZuanTouAimReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ZuanTouAimReq::uschairid() const {
  return uschairid_;
}
inline void ZuanTouAimReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool ZuanTouAimReq::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZuanTouAimReq::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZuanTouAimReq::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZuanTouAimReq::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 ZuanTouAimReq::uszuantouid() const {
  return uszuantouid_;
}
inline void ZuanTouAimReq::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usAngle = 3;
inline bool ZuanTouAimReq::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZuanTouAimReq::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZuanTouAimReq::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZuanTouAimReq::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 ZuanTouAimReq::usangle() const {
  return usangle_;
}
inline void ZuanTouAimReq::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// -------------------------------------------------------------------

// ZuanTouAimRsp

// optional int32 usChairId = 1;
inline bool ZuanTouAimRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZuanTouAimRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZuanTouAimRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZuanTouAimRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ZuanTouAimRsp::uschairid() const {
  return uschairid_;
}
inline void ZuanTouAimRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool ZuanTouAimRsp::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZuanTouAimRsp::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZuanTouAimRsp::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZuanTouAimRsp::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 ZuanTouAimRsp::uszuantouid() const {
  return uszuantouid_;
}
inline void ZuanTouAimRsp::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usAngle = 3;
inline bool ZuanTouAimRsp::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZuanTouAimRsp::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZuanTouAimRsp::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZuanTouAimRsp::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 ZuanTouAimRsp::usangle() const {
  return usangle_;
}
inline void ZuanTouAimRsp::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// -------------------------------------------------------------------

// ZuanTouShootReq

// optional int32 usChairId = 1;
inline bool ZuanTouShootReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZuanTouShootReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZuanTouShootReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZuanTouShootReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ZuanTouShootReq::uschairid() const {
  return uschairid_;
}
inline void ZuanTouShootReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool ZuanTouShootReq::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZuanTouShootReq::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZuanTouShootReq::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZuanTouShootReq::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 ZuanTouShootReq::uszuantouid() const {
  return uszuantouid_;
}
inline void ZuanTouShootReq::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usAngle = 3;
inline bool ZuanTouShootReq::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZuanTouShootReq::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZuanTouShootReq::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZuanTouShootReq::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 ZuanTouShootReq::usangle() const {
  return usangle_;
}
inline void ZuanTouShootReq::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// -------------------------------------------------------------------

// ZuanTouShootRsp

// optional int32 usChairId = 1;
inline bool ZuanTouShootRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZuanTouShootRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZuanTouShootRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZuanTouShootRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ZuanTouShootRsp::uschairid() const {
  return uschairid_;
}
inline void ZuanTouShootRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool ZuanTouShootRsp::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZuanTouShootRsp::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZuanTouShootRsp::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZuanTouShootRsp::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 ZuanTouShootRsp::uszuantouid() const {
  return uszuantouid_;
}
inline void ZuanTouShootRsp::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usAngle = 3;
inline bool ZuanTouShootRsp::has_usangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZuanTouShootRsp::set_has_usangle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZuanTouShootRsp::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZuanTouShootRsp::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 ZuanTouShootRsp::usangle() const {
  return usangle_;
}
inline void ZuanTouShootRsp::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// optional int32 usTraceId = 4;
inline bool ZuanTouShootRsp::has_ustraceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ZuanTouShootRsp::set_has_ustraceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ZuanTouShootRsp::clear_has_ustraceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ZuanTouShootRsp::clear_ustraceid() {
  ustraceid_ = 0;
  clear_has_ustraceid();
}
inline ::google::protobuf::int32 ZuanTouShootRsp::ustraceid() const {
  return ustraceid_;
}
inline void ZuanTouShootRsp::set_ustraceid(::google::protobuf::int32 value) {
  set_has_ustraceid();
  ustraceid_ = value;
}

// optional int32 usTraceStartPt = 5;
inline bool ZuanTouShootRsp::has_ustracestartpt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ZuanTouShootRsp::set_has_ustracestartpt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ZuanTouShootRsp::clear_has_ustracestartpt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ZuanTouShootRsp::clear_ustracestartpt() {
  ustracestartpt_ = 0;
  clear_has_ustracestartpt();
}
inline ::google::protobuf::int32 ZuanTouShootRsp::ustracestartpt() const {
  return ustracestartpt_;
}
inline void ZuanTouShootRsp::set_ustracestartpt(::google::protobuf::int32 value) {
  set_has_ustracestartpt();
  ustracestartpt_ = value;
}

// optional int32 usProcUserChairId = 6;
inline bool ZuanTouShootRsp::has_usprocuserchairid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ZuanTouShootRsp::set_has_usprocuserchairid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ZuanTouShootRsp::clear_has_usprocuserchairid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ZuanTouShootRsp::clear_usprocuserchairid() {
  usprocuserchairid_ = 0;
  clear_has_usprocuserchairid();
}
inline ::google::protobuf::int32 ZuanTouShootRsp::usprocuserchairid() const {
  return usprocuserchairid_;
}
inline void ZuanTouShootRsp::set_usprocuserchairid(::google::protobuf::int32 value) {
  set_has_usprocuserchairid();
  usprocuserchairid_ = value;
}

// -------------------------------------------------------------------

// ZuanTouHitFishReq

// optional int32 usChairId = 1;
inline bool ZuanTouHitFishReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZuanTouHitFishReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZuanTouHitFishReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZuanTouHitFishReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ZuanTouHitFishReq::uschairid() const {
  return uschairid_;
}
inline void ZuanTouHitFishReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool ZuanTouHitFishReq::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZuanTouHitFishReq::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZuanTouHitFishReq::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZuanTouHitFishReq::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 ZuanTouHitFishReq::uszuantouid() const {
  return uszuantouid_;
}
inline void ZuanTouHitFishReq::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// repeated int32 SubFishes = 3;
inline int ZuanTouHitFishReq::subfishes_size() const {
  return subfishes_.size();
}
inline void ZuanTouHitFishReq::clear_subfishes() {
  subfishes_.Clear();
}
inline ::google::protobuf::int32 ZuanTouHitFishReq::subfishes(int index) const {
  return subfishes_.Get(index);
}
inline void ZuanTouHitFishReq::set_subfishes(int index, ::google::protobuf::int32 value) {
  subfishes_.Set(index, value);
}
inline void ZuanTouHitFishReq::add_subfishes(::google::protobuf::int32 value) {
  subfishes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ZuanTouHitFishReq::subfishes() const {
  return subfishes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ZuanTouHitFishReq::mutable_subfishes() {
  return &subfishes_;
}

// optional int32 usRobotChairId = 4;
inline bool ZuanTouHitFishReq::has_usrobotchairid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ZuanTouHitFishReq::set_has_usrobotchairid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ZuanTouHitFishReq::clear_has_usrobotchairid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ZuanTouHitFishReq::clear_usrobotchairid() {
  usrobotchairid_ = 0;
  clear_has_usrobotchairid();
}
inline ::google::protobuf::int32 ZuanTouHitFishReq::usrobotchairid() const {
  return usrobotchairid_;
}
inline void ZuanTouHitFishReq::set_usrobotchairid(::google::protobuf::int32 value) {
  set_has_usrobotchairid();
  usrobotchairid_ = value;
}

// -------------------------------------------------------------------

// ZuanTouBombRsp

// optional int32 usChairId = 1;
inline bool ZuanTouBombRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZuanTouBombRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZuanTouBombRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZuanTouBombRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 ZuanTouBombRsp::uschairid() const {
  return uschairid_;
}
inline void ZuanTouBombRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usZuanTouId = 2;
inline bool ZuanTouBombRsp::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZuanTouBombRsp::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZuanTouBombRsp::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZuanTouBombRsp::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 ZuanTouBombRsp::uszuantouid() const {
  return uszuantouid_;
}
inline void ZuanTouBombRsp::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool ZuanTouBombRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZuanTouBombRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZuanTouBombRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZuanTouBombRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 ZuanTouBombRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void ZuanTouBombRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool ZuanTouBombRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ZuanTouBombRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ZuanTouBombRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ZuanTouBombRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 ZuanTouBombRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void ZuanTouBombRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// SomeZuanTouInfo

// optional int32 usZuanTouId = 1;
inline bool SomeZuanTouInfo::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SomeZuanTouInfo::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SomeZuanTouInfo::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SomeZuanTouInfo::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 SomeZuanTouInfo::uszuantouid() const {
  return uszuantouid_;
}
inline void SomeZuanTouInfo::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// optional int32 usAngle = 2;
inline bool SomeZuanTouInfo::has_usangle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SomeZuanTouInfo::set_has_usangle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SomeZuanTouInfo::clear_has_usangle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SomeZuanTouInfo::clear_usangle() {
  usangle_ = 0;
  clear_has_usangle();
}
inline ::google::protobuf::int32 SomeZuanTouInfo::usangle() const {
  return usangle_;
}
inline void SomeZuanTouInfo::set_usangle(::google::protobuf::int32 value) {
  set_has_usangle();
  usangle_ = value;
}

// optional int32 usTraceId = 3;
inline bool SomeZuanTouInfo::has_ustraceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SomeZuanTouInfo::set_has_ustraceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SomeZuanTouInfo::clear_has_ustraceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SomeZuanTouInfo::clear_ustraceid() {
  ustraceid_ = 0;
  clear_has_ustraceid();
}
inline ::google::protobuf::int32 SomeZuanTouInfo::ustraceid() const {
  return ustraceid_;
}
inline void SomeZuanTouInfo::set_ustraceid(::google::protobuf::int32 value) {
  set_has_ustraceid();
  ustraceid_ = value;
}

// optional int32 usTraceStartPt = 4;
inline bool SomeZuanTouInfo::has_ustracestartpt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SomeZuanTouInfo::set_has_ustracestartpt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SomeZuanTouInfo::clear_has_ustracestartpt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SomeZuanTouInfo::clear_ustracestartpt() {
  ustracestartpt_ = 0;
  clear_has_ustracestartpt();
}
inline ::google::protobuf::int32 SomeZuanTouInfo::ustracestartpt() const {
  return ustracestartpt_;
}
inline void SomeZuanTouInfo::set_ustracestartpt(::google::protobuf::int32 value) {
  set_has_ustracestartpt();
  ustracestartpt_ = value;
}

// -------------------------------------------------------------------

// CreateSomeZuanTouRsp

// optional int32 usChairId = 1;
inline bool CreateSomeZuanTouRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateSomeZuanTouRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateSomeZuanTouRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateSomeZuanTouRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateSomeZuanTouRsp::uschairid() const {
  return uschairid_;
}
inline void CreateSomeZuanTouRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSomeZuanTouId = 2;
inline bool CreateSomeZuanTouRsp::has_ussomezuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateSomeZuanTouRsp::set_has_ussomezuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateSomeZuanTouRsp::clear_has_ussomezuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateSomeZuanTouRsp::clear_ussomezuantouid() {
  ussomezuantouid_ = 0;
  clear_has_ussomezuantouid();
}
inline ::google::protobuf::int32 CreateSomeZuanTouRsp::ussomezuantouid() const {
  return ussomezuantouid_;
}
inline void CreateSomeZuanTouRsp::set_ussomezuantouid(::google::protobuf::int32 value) {
  set_has_ussomezuantouid();
  ussomezuantouid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateSomeZuanTouRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateSomeZuanTouRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateSomeZuanTouRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateSomeZuanTouRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateSomeZuanTouRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateSomeZuanTouRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usZuanTouStatus = 4;
inline bool CreateSomeZuanTouRsp::has_uszuantoustatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateSomeZuanTouRsp::set_has_uszuantoustatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateSomeZuanTouRsp::clear_has_uszuantoustatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateSomeZuanTouRsp::clear_uszuantoustatus() {
  uszuantoustatus_ = 0;
  clear_has_uszuantoustatus();
}
inline ::google::protobuf::int32 CreateSomeZuanTouRsp::uszuantoustatus() const {
  return uszuantoustatus_;
}
inline void CreateSomeZuanTouRsp::set_uszuantoustatus(::google::protobuf::int32 value) {
  set_has_uszuantoustatus();
  uszuantoustatus_ = value;
}

// optional int32 usZuanTouStatusTime = 5;
inline bool CreateSomeZuanTouRsp::has_uszuantoustatustime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateSomeZuanTouRsp::set_has_uszuantoustatustime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateSomeZuanTouRsp::clear_has_uszuantoustatustime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateSomeZuanTouRsp::clear_uszuantoustatustime() {
  uszuantoustatustime_ = 0;
  clear_has_uszuantoustatustime();
}
inline ::google::protobuf::int32 CreateSomeZuanTouRsp::uszuantoustatustime() const {
  return uszuantoustatustime_;
}
inline void CreateSomeZuanTouRsp::set_uszuantoustatustime(::google::protobuf::int32 value) {
  set_has_uszuantoustatustime();
  uszuantoustatustime_ = value;
}

// repeated .gamefish.SomeZuanTouInfo zuanTous = 6;
inline int CreateSomeZuanTouRsp::zuantous_size() const {
  return zuantous_.size();
}
inline void CreateSomeZuanTouRsp::clear_zuantous() {
  zuantous_.Clear();
}
inline const ::gamefish::SomeZuanTouInfo& CreateSomeZuanTouRsp::zuantous(int index) const {
  return zuantous_.Get(index);
}
inline ::gamefish::SomeZuanTouInfo* CreateSomeZuanTouRsp::mutable_zuantous(int index) {
  return zuantous_.Mutable(index);
}
inline ::gamefish::SomeZuanTouInfo* CreateSomeZuanTouRsp::add_zuantous() {
  return zuantous_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::SomeZuanTouInfo >&
CreateSomeZuanTouRsp::zuantous() const {
  return zuantous_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::SomeZuanTouInfo >*
CreateSomeZuanTouRsp::mutable_zuantous() {
  return &zuantous_;
}

// -------------------------------------------------------------------

// SomeZuanTouShootRsp

// optional int32 usChairId = 1;
inline bool SomeZuanTouShootRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SomeZuanTouShootRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SomeZuanTouShootRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SomeZuanTouShootRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 SomeZuanTouShootRsp::uschairid() const {
  return uschairid_;
}
inline void SomeZuanTouShootRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSomeZuanTouId = 2;
inline bool SomeZuanTouShootRsp::has_ussomezuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SomeZuanTouShootRsp::set_has_ussomezuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SomeZuanTouShootRsp::clear_has_ussomezuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SomeZuanTouShootRsp::clear_ussomezuantouid() {
  ussomezuantouid_ = 0;
  clear_has_ussomezuantouid();
}
inline ::google::protobuf::int32 SomeZuanTouShootRsp::ussomezuantouid() const {
  return ussomezuantouid_;
}
inline void SomeZuanTouShootRsp::set_ussomezuantouid(::google::protobuf::int32 value) {
  set_has_ussomezuantouid();
  ussomezuantouid_ = value;
}

// optional .gamefish.SomeZuanTouInfo someZuanTou = 3;
inline bool SomeZuanTouShootRsp::has_somezuantou() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SomeZuanTouShootRsp::set_has_somezuantou() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SomeZuanTouShootRsp::clear_has_somezuantou() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SomeZuanTouShootRsp::clear_somezuantou() {
  if (somezuantou_ != NULL) somezuantou_->::gamefish::SomeZuanTouInfo::Clear();
  clear_has_somezuantou();
}
inline const ::gamefish::SomeZuanTouInfo& SomeZuanTouShootRsp::somezuantou() const {
  return somezuantou_ != NULL ? *somezuantou_ : *default_instance_->somezuantou_;
}
inline ::gamefish::SomeZuanTouInfo* SomeZuanTouShootRsp::mutable_somezuantou() {
  set_has_somezuantou();
  if (somezuantou_ == NULL) somezuantou_ = new ::gamefish::SomeZuanTouInfo;
  return somezuantou_;
}
inline ::gamefish::SomeZuanTouInfo* SomeZuanTouShootRsp::release_somezuantou() {
  clear_has_somezuantou();
  ::gamefish::SomeZuanTouInfo* temp = somezuantou_;
  somezuantou_ = NULL;
  return temp;
}
inline void SomeZuanTouShootRsp::set_allocated_somezuantou(::gamefish::SomeZuanTouInfo* somezuantou) {
  delete somezuantou_;
  somezuantou_ = somezuantou;
  if (somezuantou) {
    set_has_somezuantou();
  } else {
    clear_has_somezuantou();
  }
}

// -------------------------------------------------------------------

// SomeZuanTouHitFishReq

// optional int32 usChairId = 1;
inline bool SomeZuanTouHitFishReq::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SomeZuanTouHitFishReq::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SomeZuanTouHitFishReq::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SomeZuanTouHitFishReq::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 SomeZuanTouHitFishReq::uschairid() const {
  return uschairid_;
}
inline void SomeZuanTouHitFishReq::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSomeZuanTouId = 2;
inline bool SomeZuanTouHitFishReq::has_ussomezuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SomeZuanTouHitFishReq::set_has_ussomezuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SomeZuanTouHitFishReq::clear_has_ussomezuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SomeZuanTouHitFishReq::clear_ussomezuantouid() {
  ussomezuantouid_ = 0;
  clear_has_ussomezuantouid();
}
inline ::google::protobuf::int32 SomeZuanTouHitFishReq::ussomezuantouid() const {
  return ussomezuantouid_;
}
inline void SomeZuanTouHitFishReq::set_ussomezuantouid(::google::protobuf::int32 value) {
  set_has_ussomezuantouid();
  ussomezuantouid_ = value;
}

// optional int32 usZuanTouId = 3;
inline bool SomeZuanTouHitFishReq::has_uszuantouid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SomeZuanTouHitFishReq::set_has_uszuantouid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SomeZuanTouHitFishReq::clear_has_uszuantouid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SomeZuanTouHitFishReq::clear_uszuantouid() {
  uszuantouid_ = 0;
  clear_has_uszuantouid();
}
inline ::google::protobuf::int32 SomeZuanTouHitFishReq::uszuantouid() const {
  return uszuantouid_;
}
inline void SomeZuanTouHitFishReq::set_uszuantouid(::google::protobuf::int32 value) {
  set_has_uszuantouid();
  uszuantouid_ = value;
}

// repeated int32 SubFishes = 4;
inline int SomeZuanTouHitFishReq::subfishes_size() const {
  return subfishes_.size();
}
inline void SomeZuanTouHitFishReq::clear_subfishes() {
  subfishes_.Clear();
}
inline ::google::protobuf::int32 SomeZuanTouHitFishReq::subfishes(int index) const {
  return subfishes_.Get(index);
}
inline void SomeZuanTouHitFishReq::set_subfishes(int index, ::google::protobuf::int32 value) {
  subfishes_.Set(index, value);
}
inline void SomeZuanTouHitFishReq::add_subfishes(::google::protobuf::int32 value) {
  subfishes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SomeZuanTouHitFishReq::subfishes() const {
  return subfishes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SomeZuanTouHitFishReq::mutable_subfishes() {
  return &subfishes_;
}

// -------------------------------------------------------------------

// SomeZuanTouBombRsp

// optional int32 usChairId = 1;
inline bool SomeZuanTouBombRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SomeZuanTouBombRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SomeZuanTouBombRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SomeZuanTouBombRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 SomeZuanTouBombRsp::uschairid() const {
  return uschairid_;
}
inline void SomeZuanTouBombRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSomeZuanTouId = 2;
inline bool SomeZuanTouBombRsp::has_ussomezuantouid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SomeZuanTouBombRsp::set_has_ussomezuantouid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SomeZuanTouBombRsp::clear_has_ussomezuantouid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SomeZuanTouBombRsp::clear_ussomezuantouid() {
  ussomezuantouid_ = 0;
  clear_has_ussomezuantouid();
}
inline ::google::protobuf::int32 SomeZuanTouBombRsp::ussomezuantouid() const {
  return ussomezuantouid_;
}
inline void SomeZuanTouBombRsp::set_ussomezuantouid(::google::protobuf::int32 value) {
  set_has_ussomezuantouid();
  ussomezuantouid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool SomeZuanTouBombRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SomeZuanTouBombRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SomeZuanTouBombRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SomeZuanTouBombRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 SomeZuanTouBombRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void SomeZuanTouBombRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool SomeZuanTouBombRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SomeZuanTouBombRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SomeZuanTouBombRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SomeZuanTouBombRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 SomeZuanTouBombRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void SomeZuanTouBombRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// CreateFireStormRsp

// optional int32 usChairId = 1;
inline bool CreateFireStormRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFireStormRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateFireStormRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateFireStormRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateFireStormRsp::uschairid() const {
  return uschairid_;
}
inline void CreateFireStormRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usFireStormId = 2;
inline bool CreateFireStormRsp::has_usfirestormid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateFireStormRsp::set_has_usfirestormid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateFireStormRsp::clear_has_usfirestormid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateFireStormRsp::clear_usfirestormid() {
  usfirestormid_ = 0;
  clear_has_usfirestormid();
}
inline ::google::protobuf::int32 CreateFireStormRsp::usfirestormid() const {
  return usfirestormid_;
}
inline void CreateFireStormRsp::set_usfirestormid(::google::protobuf::int32 value) {
  set_has_usfirestormid();
  usfirestormid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateFireStormRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateFireStormRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateFireStormRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateFireStormRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateFireStormRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateFireStormRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usStatus = 4;
inline bool CreateFireStormRsp::has_usstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateFireStormRsp::set_has_usstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateFireStormRsp::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateFireStormRsp::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 CreateFireStormRsp::usstatus() const {
  return usstatus_;
}
inline void CreateFireStormRsp::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// optional int32 usStatusTime = 5;
inline bool CreateFireStormRsp::has_usstatustime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateFireStormRsp::set_has_usstatustime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateFireStormRsp::clear_has_usstatustime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateFireStormRsp::clear_usstatustime() {
  usstatustime_ = 0;
  clear_has_usstatustime();
}
inline ::google::protobuf::int32 CreateFireStormRsp::usstatustime() const {
  return usstatustime_;
}
inline void CreateFireStormRsp::set_usstatustime(::google::protobuf::int32 value) {
  set_has_usstatustime();
  usstatustime_ = value;
}

// optional int32 usTotalScore = 6;
inline bool CreateFireStormRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateFireStormRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateFireStormRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateFireStormRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 CreateFireStormRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void CreateFireStormRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 7;
inline bool CreateFireStormRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateFireStormRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateFireStormRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateFireStormRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 CreateFireStormRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void CreateFireStormRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// DestoryFireStormRsp

// optional int32 usChairId = 1;
inline bool DestoryFireStormRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestoryFireStormRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestoryFireStormRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestoryFireStormRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DestoryFireStormRsp::uschairid() const {
  return uschairid_;
}
inline void DestoryFireStormRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usFireStormId = 2;
inline bool DestoryFireStormRsp::has_usfirestormid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestoryFireStormRsp::set_has_usfirestormid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestoryFireStormRsp::clear_has_usfirestormid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestoryFireStormRsp::clear_usfirestormid() {
  usfirestormid_ = 0;
  clear_has_usfirestormid();
}
inline ::google::protobuf::int32 DestoryFireStormRsp::usfirestormid() const {
  return usfirestormid_;
}
inline void DestoryFireStormRsp::set_usfirestormid(::google::protobuf::int32 value) {
  set_has_usfirestormid();
  usfirestormid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool DestoryFireStormRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DestoryFireStormRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DestoryFireStormRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DestoryFireStormRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 DestoryFireStormRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void DestoryFireStormRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool DestoryFireStormRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DestoryFireStormRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DestoryFireStormRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DestoryFireStormRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 DestoryFireStormRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void DestoryFireStormRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// FireStormStatusRsp

// optional int32 usChairId = 1;
inline bool FireStormStatusRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FireStormStatusRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FireStormStatusRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FireStormStatusRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 FireStormStatusRsp::uschairid() const {
  return uschairid_;
}
inline void FireStormStatusRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usFireStormId = 2;
inline bool FireStormStatusRsp::has_usfirestormid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FireStormStatusRsp::set_has_usfirestormid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FireStormStatusRsp::clear_has_usfirestormid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FireStormStatusRsp::clear_usfirestormid() {
  usfirestormid_ = 0;
  clear_has_usfirestormid();
}
inline ::google::protobuf::int32 FireStormStatusRsp::usfirestormid() const {
  return usfirestormid_;
}
inline void FireStormStatusRsp::set_usfirestormid(::google::protobuf::int32 value) {
  set_has_usfirestormid();
  usfirestormid_ = value;
}

// optional int32 usStatus = 3;
inline bool FireStormStatusRsp::has_usstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FireStormStatusRsp::set_has_usstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FireStormStatusRsp::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FireStormStatusRsp::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 FireStormStatusRsp::usstatus() const {
  return usstatus_;
}
inline void FireStormStatusRsp::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// -------------------------------------------------------------------

// FireStormScoreRsp

// optional int32 usChairId = 1;
inline bool FireStormScoreRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FireStormScoreRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FireStormScoreRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FireStormScoreRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 FireStormScoreRsp::uschairid() const {
  return uschairid_;
}
inline void FireStormScoreRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usFireStormId = 2;
inline bool FireStormScoreRsp::has_usfirestormid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FireStormScoreRsp::set_has_usfirestormid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FireStormScoreRsp::clear_has_usfirestormid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FireStormScoreRsp::clear_usfirestormid() {
  usfirestormid_ = 0;
  clear_has_usfirestormid();
}
inline ::google::protobuf::int32 FireStormScoreRsp::usfirestormid() const {
  return usfirestormid_;
}
inline void FireStormScoreRsp::set_usfirestormid(::google::protobuf::int32 value) {
  set_has_usfirestormid();
  usfirestormid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool FireStormScoreRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FireStormScoreRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FireStormScoreRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FireStormScoreRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 FireStormScoreRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void FireStormScoreRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool FireStormScoreRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FireStormScoreRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FireStormScoreRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FireStormScoreRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 FireStormScoreRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void FireStormScoreRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// CreateMadCowRsp

// optional int32 usChairId = 1;
inline bool CreateMadCowRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateMadCowRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateMadCowRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateMadCowRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateMadCowRsp::uschairid() const {
  return uschairid_;
}
inline void CreateMadCowRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usMadCowId = 2;
inline bool CreateMadCowRsp::has_usmadcowid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateMadCowRsp::set_has_usmadcowid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateMadCowRsp::clear_has_usmadcowid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateMadCowRsp::clear_usmadcowid() {
  usmadcowid_ = 0;
  clear_has_usmadcowid();
}
inline ::google::protobuf::int32 CreateMadCowRsp::usmadcowid() const {
  return usmadcowid_;
}
inline void CreateMadCowRsp::set_usmadcowid(::google::protobuf::int32 value) {
  set_has_usmadcowid();
  usmadcowid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateMadCowRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateMadCowRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateMadCowRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateMadCowRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateMadCowRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateMadCowRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usRunDirection = 4;
inline bool CreateMadCowRsp::has_usrundirection() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateMadCowRsp::set_has_usrundirection() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateMadCowRsp::clear_has_usrundirection() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateMadCowRsp::clear_usrundirection() {
  usrundirection_ = 0;
  clear_has_usrundirection();
}
inline ::google::protobuf::int32 CreateMadCowRsp::usrundirection() const {
  return usrundirection_;
}
inline void CreateMadCowRsp::set_usrundirection(::google::protobuf::int32 value) {
  set_has_usrundirection();
  usrundirection_ = value;
}

// optional int32 usStatus = 5;
inline bool CreateMadCowRsp::has_usstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateMadCowRsp::set_has_usstatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateMadCowRsp::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateMadCowRsp::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 CreateMadCowRsp::usstatus() const {
  return usstatus_;
}
inline void CreateMadCowRsp::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// optional int32 usStatusTime = 6;
inline bool CreateMadCowRsp::has_usstatustime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateMadCowRsp::set_has_usstatustime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateMadCowRsp::clear_has_usstatustime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateMadCowRsp::clear_usstatustime() {
  usstatustime_ = 0;
  clear_has_usstatustime();
}
inline ::google::protobuf::int32 CreateMadCowRsp::usstatustime() const {
  return usstatustime_;
}
inline void CreateMadCowRsp::set_usstatustime(::google::protobuf::int32 value) {
  set_has_usstatustime();
  usstatustime_ = value;
}

// optional int32 usTotalScore = 7;
inline bool CreateMadCowRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateMadCowRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateMadCowRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateMadCowRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 CreateMadCowRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void CreateMadCowRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 8;
inline bool CreateMadCowRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateMadCowRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateMadCowRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateMadCowRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 CreateMadCowRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void CreateMadCowRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// DestoryMadCowRsp

// optional int32 usChairId = 1;
inline bool DestoryMadCowRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestoryMadCowRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestoryMadCowRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestoryMadCowRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DestoryMadCowRsp::uschairid() const {
  return uschairid_;
}
inline void DestoryMadCowRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usMadCowId = 2;
inline bool DestoryMadCowRsp::has_usmadcowid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestoryMadCowRsp::set_has_usmadcowid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestoryMadCowRsp::clear_has_usmadcowid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestoryMadCowRsp::clear_usmadcowid() {
  usmadcowid_ = 0;
  clear_has_usmadcowid();
}
inline ::google::protobuf::int32 DestoryMadCowRsp::usmadcowid() const {
  return usmadcowid_;
}
inline void DestoryMadCowRsp::set_usmadcowid(::google::protobuf::int32 value) {
  set_has_usmadcowid();
  usmadcowid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool DestoryMadCowRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DestoryMadCowRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DestoryMadCowRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DestoryMadCowRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 DestoryMadCowRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void DestoryMadCowRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool DestoryMadCowRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DestoryMadCowRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DestoryMadCowRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DestoryMadCowRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 DestoryMadCowRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void DestoryMadCowRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// MadCowStatusRsp

// optional int32 usChairId = 1;
inline bool MadCowStatusRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MadCowStatusRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MadCowStatusRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MadCowStatusRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 MadCowStatusRsp::uschairid() const {
  return uschairid_;
}
inline void MadCowStatusRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usMadCowId = 2;
inline bool MadCowStatusRsp::has_usmadcowid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MadCowStatusRsp::set_has_usmadcowid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MadCowStatusRsp::clear_has_usmadcowid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MadCowStatusRsp::clear_usmadcowid() {
  usmadcowid_ = 0;
  clear_has_usmadcowid();
}
inline ::google::protobuf::int32 MadCowStatusRsp::usmadcowid() const {
  return usmadcowid_;
}
inline void MadCowStatusRsp::set_usmadcowid(::google::protobuf::int32 value) {
  set_has_usmadcowid();
  usmadcowid_ = value;
}

// optional int32 usStatus = 3;
inline bool MadCowStatusRsp::has_usstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MadCowStatusRsp::set_has_usstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MadCowStatusRsp::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MadCowStatusRsp::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 MadCowStatusRsp::usstatus() const {
  return usstatus_;
}
inline void MadCowStatusRsp::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// -------------------------------------------------------------------

// MadCowScoreRsp

// optional int32 usChairId = 1;
inline bool MadCowScoreRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MadCowScoreRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MadCowScoreRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MadCowScoreRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 MadCowScoreRsp::uschairid() const {
  return uschairid_;
}
inline void MadCowScoreRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usMadCowId = 2;
inline bool MadCowScoreRsp::has_usmadcowid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MadCowScoreRsp::set_has_usmadcowid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MadCowScoreRsp::clear_has_usmadcowid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MadCowScoreRsp::clear_usmadcowid() {
  usmadcowid_ = 0;
  clear_has_usmadcowid();
}
inline ::google::protobuf::int32 MadCowScoreRsp::usmadcowid() const {
  return usmadcowid_;
}
inline void MadCowScoreRsp::set_usmadcowid(::google::protobuf::int32 value) {
  set_has_usmadcowid();
  usmadcowid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool MadCowScoreRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MadCowScoreRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MadCowScoreRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MadCowScoreRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 MadCowScoreRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void MadCowScoreRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool MadCowScoreRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MadCowScoreRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MadCowScoreRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MadCowScoreRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 MadCowScoreRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void MadCowScoreRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// CreateSerialBombCrabRsp

// optional int32 usChairId = 1;
inline bool CreateSerialBombCrabRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateSerialBombCrabRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateSerialBombCrabRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::uschairid() const {
  return uschairid_;
}
inline void CreateSerialBombCrabRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSerialBombCrabId = 2;
inline bool CreateSerialBombCrabRsp::has_usserialbombcrabid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usserialbombcrabid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateSerialBombCrabRsp::clear_has_usserialbombcrabid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateSerialBombCrabRsp::clear_usserialbombcrabid() {
  usserialbombcrabid_ = 0;
  clear_has_usserialbombcrabid();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usserialbombcrabid() const {
  return usserialbombcrabid_;
}
inline void CreateSerialBombCrabRsp::set_usserialbombcrabid(::google::protobuf::int32 value) {
  set_has_usserialbombcrabid();
  usserialbombcrabid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateSerialBombCrabRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateSerialBombCrabRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateSerialBombCrabRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateSerialBombCrabRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usStatus = 4;
inline bool CreateSerialBombCrabRsp::has_usstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateSerialBombCrabRsp::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateSerialBombCrabRsp::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usstatus() const {
  return usstatus_;
}
inline void CreateSerialBombCrabRsp::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// optional int32 usStatusTime = 5;
inline bool CreateSerialBombCrabRsp::has_usstatustime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usstatustime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateSerialBombCrabRsp::clear_has_usstatustime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateSerialBombCrabRsp::clear_usstatustime() {
  usstatustime_ = 0;
  clear_has_usstatustime();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usstatustime() const {
  return usstatustime_;
}
inline void CreateSerialBombCrabRsp::set_usstatustime(::google::protobuf::int32 value) {
  set_has_usstatustime();
  usstatustime_ = value;
}

// optional int32 usBombPosX = 6;
inline bool CreateSerialBombCrabRsp::has_usbombposx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usbombposx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateSerialBombCrabRsp::clear_has_usbombposx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateSerialBombCrabRsp::clear_usbombposx() {
  usbombposx_ = 0;
  clear_has_usbombposx();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usbombposx() const {
  return usbombposx_;
}
inline void CreateSerialBombCrabRsp::set_usbombposx(::google::protobuf::int32 value) {
  set_has_usbombposx();
  usbombposx_ = value;
}

// optional int32 usBombPosY = 7;
inline bool CreateSerialBombCrabRsp::has_usbombposy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usbombposy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateSerialBombCrabRsp::clear_has_usbombposy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateSerialBombCrabRsp::clear_usbombposy() {
  usbombposy_ = 0;
  clear_has_usbombposy();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usbombposy() const {
  return usbombposy_;
}
inline void CreateSerialBombCrabRsp::set_usbombposy(::google::protobuf::int32 value) {
  set_has_usbombposy();
  usbombposy_ = value;
}

// optional int32 usNextBombPosX = 8;
inline bool CreateSerialBombCrabRsp::has_usnextbombposx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usnextbombposx() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateSerialBombCrabRsp::clear_has_usnextbombposx() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateSerialBombCrabRsp::clear_usnextbombposx() {
  usnextbombposx_ = 0;
  clear_has_usnextbombposx();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usnextbombposx() const {
  return usnextbombposx_;
}
inline void CreateSerialBombCrabRsp::set_usnextbombposx(::google::protobuf::int32 value) {
  set_has_usnextbombposx();
  usnextbombposx_ = value;
}

// optional int32 usNextBombPosy = 9;
inline bool CreateSerialBombCrabRsp::has_usnextbombposy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usnextbombposy() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateSerialBombCrabRsp::clear_has_usnextbombposy() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateSerialBombCrabRsp::clear_usnextbombposy() {
  usnextbombposy_ = 0;
  clear_has_usnextbombposy();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usnextbombposy() const {
  return usnextbombposy_;
}
inline void CreateSerialBombCrabRsp::set_usnextbombposy(::google::protobuf::int32 value) {
  set_has_usnextbombposy();
  usnextbombposy_ = value;
}

// optional int32 usBombCount = 10;
inline bool CreateSerialBombCrabRsp::has_usbombcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_usbombcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CreateSerialBombCrabRsp::clear_has_usbombcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CreateSerialBombCrabRsp::clear_usbombcount() {
  usbombcount_ = 0;
  clear_has_usbombcount();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::usbombcount() const {
  return usbombcount_;
}
inline void CreateSerialBombCrabRsp::set_usbombcount(::google::protobuf::int32 value) {
  set_has_usbombcount();
  usbombcount_ = value;
}

// optional int32 bombFishId = 11;
inline bool CreateSerialBombCrabRsp::has_bombfishid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CreateSerialBombCrabRsp::set_has_bombfishid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CreateSerialBombCrabRsp::clear_has_bombfishid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CreateSerialBombCrabRsp::clear_bombfishid() {
  bombfishid_ = 0;
  clear_has_bombfishid();
}
inline ::google::protobuf::int32 CreateSerialBombCrabRsp::bombfishid() const {
  return bombfishid_;
}
inline void CreateSerialBombCrabRsp::set_bombfishid(::google::protobuf::int32 value) {
  set_has_bombfishid();
  bombfishid_ = value;
}

// -------------------------------------------------------------------

// SerialBombCrabBombRsp

// optional int32 usChairId = 1;
inline bool SerialBombCrabBombRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SerialBombCrabBombRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SerialBombCrabBombRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::uschairid() const {
  return uschairid_;
}
inline void SerialBombCrabBombRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSerialBombCrabId = 2;
inline bool SerialBombCrabBombRsp::has_usserialbombcrabid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_usserialbombcrabid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SerialBombCrabBombRsp::clear_has_usserialbombcrabid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SerialBombCrabBombRsp::clear_usserialbombcrabid() {
  usserialbombcrabid_ = 0;
  clear_has_usserialbombcrabid();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::usserialbombcrabid() const {
  return usserialbombcrabid_;
}
inline void SerialBombCrabBombRsp::set_usserialbombcrabid(::google::protobuf::int32 value) {
  set_has_usserialbombcrabid();
  usserialbombcrabid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool SerialBombCrabBombRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SerialBombCrabBombRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SerialBombCrabBombRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void SerialBombCrabBombRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool SerialBombCrabBombRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SerialBombCrabBombRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SerialBombCrabBombRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void SerialBombCrabBombRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// optional int32 usBombPosX = 5;
inline bool SerialBombCrabBombRsp::has_usbombposx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_usbombposx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SerialBombCrabBombRsp::clear_has_usbombposx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SerialBombCrabBombRsp::clear_usbombposx() {
  usbombposx_ = 0;
  clear_has_usbombposx();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::usbombposx() const {
  return usbombposx_;
}
inline void SerialBombCrabBombRsp::set_usbombposx(::google::protobuf::int32 value) {
  set_has_usbombposx();
  usbombposx_ = value;
}

// optional int32 usBombPosY = 6;
inline bool SerialBombCrabBombRsp::has_usbombposy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_usbombposy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SerialBombCrabBombRsp::clear_has_usbombposy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SerialBombCrabBombRsp::clear_usbombposy() {
  usbombposy_ = 0;
  clear_has_usbombposy();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::usbombposy() const {
  return usbombposy_;
}
inline void SerialBombCrabBombRsp::set_usbombposy(::google::protobuf::int32 value) {
  set_has_usbombposy();
  usbombposy_ = value;
}

// optional int32 usNextBombPosX = 7;
inline bool SerialBombCrabBombRsp::has_usnextbombposx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_usnextbombposx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SerialBombCrabBombRsp::clear_has_usnextbombposx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SerialBombCrabBombRsp::clear_usnextbombposx() {
  usnextbombposx_ = 0;
  clear_has_usnextbombposx();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::usnextbombposx() const {
  return usnextbombposx_;
}
inline void SerialBombCrabBombRsp::set_usnextbombposx(::google::protobuf::int32 value) {
  set_has_usnextbombposx();
  usnextbombposx_ = value;
}

// optional int32 usNextBombPosy = 8;
inline bool SerialBombCrabBombRsp::has_usnextbombposy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_usnextbombposy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SerialBombCrabBombRsp::clear_has_usnextbombposy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SerialBombCrabBombRsp::clear_usnextbombposy() {
  usnextbombposy_ = 0;
  clear_has_usnextbombposy();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::usnextbombposy() const {
  return usnextbombposy_;
}
inline void SerialBombCrabBombRsp::set_usnextbombposy(::google::protobuf::int32 value) {
  set_has_usnextbombposy();
  usnextbombposy_ = value;
}

// optional int32 usBombCount = 9;
inline bool SerialBombCrabBombRsp::has_usbombcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SerialBombCrabBombRsp::set_has_usbombcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SerialBombCrabBombRsp::clear_has_usbombcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SerialBombCrabBombRsp::clear_usbombcount() {
  usbombcount_ = 0;
  clear_has_usbombcount();
}
inline ::google::protobuf::int32 SerialBombCrabBombRsp::usbombcount() const {
  return usbombcount_;
}
inline void SerialBombCrabBombRsp::set_usbombcount(::google::protobuf::int32 value) {
  set_has_usbombcount();
  usbombcount_ = value;
}

// -------------------------------------------------------------------

// DestorySerialBombCrabRsp

// optional int32 usChairId = 1;
inline bool DestorySerialBombCrabRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestorySerialBombCrabRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestorySerialBombCrabRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestorySerialBombCrabRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DestorySerialBombCrabRsp::uschairid() const {
  return uschairid_;
}
inline void DestorySerialBombCrabRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usSerialBombCrabId = 2;
inline bool DestorySerialBombCrabRsp::has_usserialbombcrabid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestorySerialBombCrabRsp::set_has_usserialbombcrabid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestorySerialBombCrabRsp::clear_has_usserialbombcrabid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestorySerialBombCrabRsp::clear_usserialbombcrabid() {
  usserialbombcrabid_ = 0;
  clear_has_usserialbombcrabid();
}
inline ::google::protobuf::int32 DestorySerialBombCrabRsp::usserialbombcrabid() const {
  return usserialbombcrabid_;
}
inline void DestorySerialBombCrabRsp::set_usserialbombcrabid(::google::protobuf::int32 value) {
  set_has_usserialbombcrabid();
  usserialbombcrabid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool DestorySerialBombCrabRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DestorySerialBombCrabRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DestorySerialBombCrabRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DestorySerialBombCrabRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 DestorySerialBombCrabRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void DestorySerialBombCrabRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool DestorySerialBombCrabRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DestorySerialBombCrabRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DestorySerialBombCrabRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DestorySerialBombCrabRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 DestorySerialBombCrabRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void DestorySerialBombCrabRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// HaiWangCrabHitPartReq

// optional int32 usBulletId = 1;
inline bool HaiWangCrabHitPartReq::has_usbulletid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaiWangCrabHitPartReq::set_has_usbulletid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaiWangCrabHitPartReq::clear_has_usbulletid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaiWangCrabHitPartReq::clear_usbulletid() {
  usbulletid_ = 0;
  clear_has_usbulletid();
}
inline ::google::protobuf::int32 HaiWangCrabHitPartReq::usbulletid() const {
  return usbulletid_;
}
inline void HaiWangCrabHitPartReq::set_usbulletid(::google::protobuf::int32 value) {
  set_has_usbulletid();
  usbulletid_ = value;
}

// optional int32 usHaiWangCrabId = 2;
inline bool HaiWangCrabHitPartReq::has_ushaiwangcrabid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HaiWangCrabHitPartReq::set_has_ushaiwangcrabid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HaiWangCrabHitPartReq::clear_has_ushaiwangcrabid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HaiWangCrabHitPartReq::clear_ushaiwangcrabid() {
  ushaiwangcrabid_ = 0;
  clear_has_ushaiwangcrabid();
}
inline ::google::protobuf::int32 HaiWangCrabHitPartReq::ushaiwangcrabid() const {
  return ushaiwangcrabid_;
}
inline void HaiWangCrabHitPartReq::set_ushaiwangcrabid(::google::protobuf::int32 value) {
  set_has_ushaiwangcrabid();
  ushaiwangcrabid_ = value;
}

// optional int32 usPartId = 3;
inline bool HaiWangCrabHitPartReq::has_uspartid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HaiWangCrabHitPartReq::set_has_uspartid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HaiWangCrabHitPartReq::clear_has_uspartid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HaiWangCrabHitPartReq::clear_uspartid() {
  uspartid_ = 0;
  clear_has_uspartid();
}
inline ::google::protobuf::int32 HaiWangCrabHitPartReq::uspartid() const {
  return uspartid_;
}
inline void HaiWangCrabHitPartReq::set_uspartid(::google::protobuf::int32 value) {
  set_has_uspartid();
  uspartid_ = value;
}

// -------------------------------------------------------------------

// CrabPart

// optional int32 usChairId = 1;
inline bool CrabPart::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrabPart::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrabPart::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrabPart::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CrabPart::uschairid() const {
  return uschairid_;
}
inline void CrabPart::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usPartId = 2;
inline bool CrabPart::has_uspartid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrabPart::set_has_uspartid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrabPart::clear_has_uspartid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrabPart::clear_uspartid() {
  uspartid_ = 0;
  clear_has_uspartid();
}
inline ::google::protobuf::int32 CrabPart::uspartid() const {
  return uspartid_;
}
inline void CrabPart::set_uspartid(::google::protobuf::int32 value) {
  set_has_uspartid();
  uspartid_ = value;
}

// optional int32 usPartMul = 3;
inline bool CrabPart::has_uspartmul() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrabPart::set_has_uspartmul() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrabPart::clear_has_uspartmul() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrabPart::clear_uspartmul() {
  uspartmul_ = 0;
  clear_has_uspartmul();
}
inline ::google::protobuf::int32 CrabPart::uspartmul() const {
  return uspartmul_;
}
inline void CrabPart::set_uspartmul(::google::protobuf::int32 value) {
  set_has_uspartmul();
  uspartmul_ = value;
}

// optional int32 usScore = 4;
inline bool CrabPart::has_usscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrabPart::set_has_usscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrabPart::clear_has_usscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrabPart::clear_usscore() {
  usscore_ = 0;
  clear_has_usscore();
}
inline ::google::protobuf::int32 CrabPart::usscore() const {
  return usscore_;
}
inline void CrabPart::set_usscore(::google::protobuf::int32 value) {
  set_has_usscore();
  usscore_ = value;
}

// -------------------------------------------------------------------

// HaiWangCrabKilledPartRsp

// optional int32 usHaiwangCrabId = 1;
inline bool HaiWangCrabKilledPartRsp::has_ushaiwangcrabid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaiWangCrabKilledPartRsp::set_has_ushaiwangcrabid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaiWangCrabKilledPartRsp::clear_has_ushaiwangcrabid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaiWangCrabKilledPartRsp::clear_ushaiwangcrabid() {
  ushaiwangcrabid_ = 0;
  clear_has_ushaiwangcrabid();
}
inline ::google::protobuf::int32 HaiWangCrabKilledPartRsp::ushaiwangcrabid() const {
  return ushaiwangcrabid_;
}
inline void HaiWangCrabKilledPartRsp::set_ushaiwangcrabid(::google::protobuf::int32 value) {
  set_has_ushaiwangcrabid();
  ushaiwangcrabid_ = value;
}

// repeated .gamefish.CrabPart aryKilledParts = 2;
inline int HaiWangCrabKilledPartRsp::arykilledparts_size() const {
  return arykilledparts_.size();
}
inline void HaiWangCrabKilledPartRsp::clear_arykilledparts() {
  arykilledparts_.Clear();
}
inline const ::gamefish::CrabPart& HaiWangCrabKilledPartRsp::arykilledparts(int index) const {
  return arykilledparts_.Get(index);
}
inline ::gamefish::CrabPart* HaiWangCrabKilledPartRsp::mutable_arykilledparts(int index) {
  return arykilledparts_.Mutable(index);
}
inline ::gamefish::CrabPart* HaiWangCrabKilledPartRsp::add_arykilledparts() {
  return arykilledparts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamefish::CrabPart >&
HaiWangCrabKilledPartRsp::arykilledparts() const {
  return arykilledparts_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamefish::CrabPart >*
HaiWangCrabKilledPartRsp::mutable_arykilledparts() {
  return &arykilledparts_;
}

// -------------------------------------------------------------------

// HaiWangCrabKilledDeadRsp

// optional int32 usChairId = 1;
inline bool HaiWangCrabKilledDeadRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HaiWangCrabKilledDeadRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HaiWangCrabKilledDeadRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HaiWangCrabKilledDeadRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 HaiWangCrabKilledDeadRsp::uschairid() const {
  return uschairid_;
}
inline void HaiWangCrabKilledDeadRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usHaiwangCrabId = 2;
inline bool HaiWangCrabKilledDeadRsp::has_ushaiwangcrabid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HaiWangCrabKilledDeadRsp::set_has_ushaiwangcrabid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HaiWangCrabKilledDeadRsp::clear_has_ushaiwangcrabid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HaiWangCrabKilledDeadRsp::clear_ushaiwangcrabid() {
  ushaiwangcrabid_ = 0;
  clear_has_ushaiwangcrabid();
}
inline ::google::protobuf::int32 HaiWangCrabKilledDeadRsp::ushaiwangcrabid() const {
  return ushaiwangcrabid_;
}
inline void HaiWangCrabKilledDeadRsp::set_ushaiwangcrabid(::google::protobuf::int32 value) {
  set_has_ushaiwangcrabid();
  ushaiwangcrabid_ = value;
}

// optional int32 usPartMul = 3;
inline bool HaiWangCrabKilledDeadRsp::has_uspartmul() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HaiWangCrabKilledDeadRsp::set_has_uspartmul() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HaiWangCrabKilledDeadRsp::clear_has_uspartmul() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HaiWangCrabKilledDeadRsp::clear_uspartmul() {
  uspartmul_ = 0;
  clear_has_uspartmul();
}
inline ::google::protobuf::int32 HaiWangCrabKilledDeadRsp::uspartmul() const {
  return uspartmul_;
}
inline void HaiWangCrabKilledDeadRsp::set_uspartmul(::google::protobuf::int32 value) {
  set_has_uspartmul();
  uspartmul_ = value;
}

// optional int32 usSelfScore = 4;
inline bool HaiWangCrabKilledDeadRsp::has_usselfscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HaiWangCrabKilledDeadRsp::set_has_usselfscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HaiWangCrabKilledDeadRsp::clear_has_usselfscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HaiWangCrabKilledDeadRsp::clear_usselfscore() {
  usselfscore_ = 0;
  clear_has_usselfscore();
}
inline ::google::protobuf::int32 HaiWangCrabKilledDeadRsp::usselfscore() const {
  return usselfscore_;
}
inline void HaiWangCrabKilledDeadRsp::set_usselfscore(::google::protobuf::int32 value) {
  set_has_usselfscore();
  usselfscore_ = value;
}

// optional int32 usTotalScore = 5;
inline bool HaiWangCrabKilledDeadRsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HaiWangCrabKilledDeadRsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HaiWangCrabKilledDeadRsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HaiWangCrabKilledDeadRsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 HaiWangCrabKilledDeadRsp::ustotalscore() const {
  return ustotalscore_;
}
inline void HaiWangCrabKilledDeadRsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 6;
inline bool HaiWangCrabKilledDeadRsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HaiWangCrabKilledDeadRsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HaiWangCrabKilledDeadRsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HaiWangCrabKilledDeadRsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 HaiWangCrabKilledDeadRsp::ustotalmul() const {
  return ustotalmul_;
}
inline void HaiWangCrabKilledDeadRsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}

// -------------------------------------------------------------------

// CreateDelayBombRsp

// optional int32 usChairId = 1;
inline bool CreateDelayBombRsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateDelayBombRsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateDelayBombRsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateDelayBombRsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::uschairid() const {
  return uschairid_;
}
inline void CreateDelayBombRsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDelayBombId = 2;
inline bool CreateDelayBombRsp::has_usdelaybombid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateDelayBombRsp::set_has_usdelaybombid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateDelayBombRsp::clear_has_usdelaybombid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateDelayBombRsp::clear_usdelaybombid() {
  usdelaybombid_ = 0;
  clear_has_usdelaybombid();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::usdelaybombid() const {
  return usdelaybombid_;
}
inline void CreateDelayBombRsp::set_usdelaybombid(::google::protobuf::int32 value) {
  set_has_usdelaybombid();
  usdelaybombid_ = value;
}

// optional int32 usKilledFishId = 3;
inline bool CreateDelayBombRsp::has_uskilledfishid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateDelayBombRsp::set_has_uskilledfishid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateDelayBombRsp::clear_has_uskilledfishid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateDelayBombRsp::clear_uskilledfishid() {
  uskilledfishid_ = 0;
  clear_has_uskilledfishid();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::uskilledfishid() const {
  return uskilledfishid_;
}
inline void CreateDelayBombRsp::set_uskilledfishid(::google::protobuf::int32 value) {
  set_has_uskilledfishid();
  uskilledfishid_ = value;
}

// optional int32 usStatus = 4;
inline bool CreateDelayBombRsp::has_usstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateDelayBombRsp::set_has_usstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateDelayBombRsp::clear_has_usstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateDelayBombRsp::clear_usstatus() {
  usstatus_ = 0;
  clear_has_usstatus();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::usstatus() const {
  return usstatus_;
}
inline void CreateDelayBombRsp::set_usstatus(::google::protobuf::int32 value) {
  set_has_usstatus();
  usstatus_ = value;
}

// optional int32 usStatusTime = 5;
inline bool CreateDelayBombRsp::has_usstatustime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateDelayBombRsp::set_has_usstatustime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateDelayBombRsp::clear_has_usstatustime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateDelayBombRsp::clear_usstatustime() {
  usstatustime_ = 0;
  clear_has_usstatustime();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::usstatustime() const {
  return usstatustime_;
}
inline void CreateDelayBombRsp::set_usstatustime(::google::protobuf::int32 value) {
  set_has_usstatustime();
  usstatustime_ = value;
}

// optional int32 usPosX = 6;
inline bool CreateDelayBombRsp::has_usposx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateDelayBombRsp::set_has_usposx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateDelayBombRsp::clear_has_usposx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateDelayBombRsp::clear_usposx() {
  usposx_ = 0;
  clear_has_usposx();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::usposx() const {
  return usposx_;
}
inline void CreateDelayBombRsp::set_usposx(::google::protobuf::int32 value) {
  set_has_usposx();
  usposx_ = value;
}

// optional int32 usPoxY = 7;
inline bool CreateDelayBombRsp::has_uspoxy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateDelayBombRsp::set_has_uspoxy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateDelayBombRsp::clear_has_uspoxy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateDelayBombRsp::clear_uspoxy() {
  uspoxy_ = 0;
  clear_has_uspoxy();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::uspoxy() const {
  return uspoxy_;
}
inline void CreateDelayBombRsp::set_uspoxy(::google::protobuf::int32 value) {
  set_has_uspoxy();
  uspoxy_ = value;
}

// optional int32 bombFishId = 8;
inline bool CreateDelayBombRsp::has_bombfishid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateDelayBombRsp::set_has_bombfishid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateDelayBombRsp::clear_has_bombfishid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateDelayBombRsp::clear_bombfishid() {
  bombfishid_ = 0;
  clear_has_bombfishid();
}
inline ::google::protobuf::int32 CreateDelayBombRsp::bombfishid() const {
  return bombfishid_;
}
inline void CreateDelayBombRsp::set_bombfishid(::google::protobuf::int32 value) {
  set_has_bombfishid();
  bombfishid_ = value;
}

// -------------------------------------------------------------------

// DelayBomb_Bomb_Rsp

// optional int32 usChairId = 1;
inline bool DelayBomb_Bomb_Rsp::has_uschairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelayBomb_Bomb_Rsp::set_has_uschairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelayBomb_Bomb_Rsp::clear_has_uschairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelayBomb_Bomb_Rsp::clear_uschairid() {
  uschairid_ = 0;
  clear_has_uschairid();
}
inline ::google::protobuf::int32 DelayBomb_Bomb_Rsp::uschairid() const {
  return uschairid_;
}
inline void DelayBomb_Bomb_Rsp::set_uschairid(::google::protobuf::int32 value) {
  set_has_uschairid();
  uschairid_ = value;
}

// optional int32 usDelayBombId = 2;
inline bool DelayBomb_Bomb_Rsp::has_usdelaybombid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelayBomb_Bomb_Rsp::set_has_usdelaybombid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelayBomb_Bomb_Rsp::clear_has_usdelaybombid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelayBomb_Bomb_Rsp::clear_usdelaybombid() {
  usdelaybombid_ = 0;
  clear_has_usdelaybombid();
}
inline ::google::protobuf::int32 DelayBomb_Bomb_Rsp::usdelaybombid() const {
  return usdelaybombid_;
}
inline void DelayBomb_Bomb_Rsp::set_usdelaybombid(::google::protobuf::int32 value) {
  set_has_usdelaybombid();
  usdelaybombid_ = value;
}

// optional int32 usTotalScore = 3;
inline bool DelayBomb_Bomb_Rsp::has_ustotalscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelayBomb_Bomb_Rsp::set_has_ustotalscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelayBomb_Bomb_Rsp::clear_has_ustotalscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelayBomb_Bomb_Rsp::clear_ustotalscore() {
  ustotalscore_ = 0;
  clear_has_ustotalscore();
}
inline ::google::protobuf::int32 DelayBomb_Bomb_Rsp::ustotalscore() const {
  return ustotalscore_;
}
inline void DelayBomb_Bomb_Rsp::set_ustotalscore(::google::protobuf::int32 value) {
  set_has_ustotalscore();
  ustotalscore_ = value;
}

// optional int32 usTotalMul = 4;
inline bool DelayBomb_Bomb_Rsp::has_ustotalmul() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DelayBomb_Bomb_Rsp::set_has_ustotalmul() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DelayBomb_Bomb_Rsp::clear_has_ustotalmul() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DelayBomb_Bomb_Rsp::clear_ustotalmul() {
  ustotalmul_ = 0;
  clear_has_ustotalmul();
}
inline ::google::protobuf::int32 DelayBomb_Bomb_Rsp::ustotalmul() const {
  return ustotalmul_;
}
inline void DelayBomb_Bomb_Rsp::set_ustotalmul(::google::protobuf::int32 value) {
  set_has_ustotalmul();
  ustotalmul_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gamefish

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSFish_2eproto__INCLUDED
