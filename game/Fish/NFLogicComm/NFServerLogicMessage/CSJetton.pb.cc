// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSJetton.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CSJetton.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* Proto_CSBankGetDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankGetDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SCBankGetDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SCBankGetDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSBankSaveMoneyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankSaveMoneyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SCBankSaveMoneyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SCBankSaveMoneyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSBankGetMoneyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankGetMoneyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SCBankGetMoneyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SCBankGetMoneyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSBankSetPasswordReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankSetPasswordReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SCBankSetPasswordRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SCBankSetPasswordRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSBankGiveMoneyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankGiveMoneyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSBankGiveMoneyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankGiveMoneyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SCBankGiveJettonAutoPushRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SCBankGiveJettonAutoPushRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSBankGetRecordReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSBankGetRecordReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SCBankGetRecordRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SCBankGetRecordRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CSJetton_2eproto() {
  protobuf_AddDesc_CSJetton_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CSJetton.proto");
  GOOGLE_CHECK(file != NULL);
  Proto_CSBankGetDataReq_descriptor_ = file->message_type(0);
  static const int Proto_CSBankGetDataReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetDataReq, bank_password_),
  };
  Proto_CSBankGetDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankGetDataReq_descriptor_,
      Proto_CSBankGetDataReq::default_instance_,
      Proto_CSBankGetDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankGetDataReq));
  Proto_SCBankGetDataRsp_descriptor_ = file->message_type(1);
  static const int Proto_SCBankGetDataRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetDataRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetDataRsp, jetton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetDataRsp, bank_jetton_),
  };
  Proto_SCBankGetDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_SCBankGetDataRsp_descriptor_,
      Proto_SCBankGetDataRsp::default_instance_,
      Proto_SCBankGetDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_SCBankGetDataRsp));
  Proto_CSBankSaveMoneyReq_descriptor_ = file->message_type(2);
  static const int Proto_CSBankSaveMoneyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSaveMoneyReq, save_jetton_),
  };
  Proto_CSBankSaveMoneyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankSaveMoneyReq_descriptor_,
      Proto_CSBankSaveMoneyReq::default_instance_,
      Proto_CSBankSaveMoneyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSaveMoneyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSaveMoneyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankSaveMoneyReq));
  Proto_SCBankSaveMoneyRsp_descriptor_ = file->message_type(3);
  static const int Proto_SCBankSaveMoneyRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSaveMoneyRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSaveMoneyRsp, jetton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSaveMoneyRsp, bank_jetton_),
  };
  Proto_SCBankSaveMoneyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_SCBankSaveMoneyRsp_descriptor_,
      Proto_SCBankSaveMoneyRsp::default_instance_,
      Proto_SCBankSaveMoneyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSaveMoneyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSaveMoneyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_SCBankSaveMoneyRsp));
  Proto_CSBankGetMoneyReq_descriptor_ = file->message_type(4);
  static const int Proto_CSBankGetMoneyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetMoneyReq, get_jetton_),
  };
  Proto_CSBankGetMoneyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankGetMoneyReq_descriptor_,
      Proto_CSBankGetMoneyReq::default_instance_,
      Proto_CSBankGetMoneyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetMoneyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetMoneyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankGetMoneyReq));
  Proto_SCBankGetMoneyRsp_descriptor_ = file->message_type(5);
  static const int Proto_SCBankGetMoneyRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetMoneyRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetMoneyRsp, jetton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetMoneyRsp, bank_jetton_),
  };
  Proto_SCBankGetMoneyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_SCBankGetMoneyRsp_descriptor_,
      Proto_SCBankGetMoneyRsp::default_instance_,
      Proto_SCBankGetMoneyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetMoneyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetMoneyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_SCBankGetMoneyRsp));
  Proto_CSBankSetPasswordReq_descriptor_ = file->message_type(6);
  static const int Proto_CSBankSetPasswordReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSetPasswordReq, old_password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSetPasswordReq, new_password_),
  };
  Proto_CSBankSetPasswordReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankSetPasswordReq_descriptor_,
      Proto_CSBankSetPasswordReq::default_instance_,
      Proto_CSBankSetPasswordReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSetPasswordReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankSetPasswordReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankSetPasswordReq));
  Proto_SCBankSetPasswordRsp_descriptor_ = file->message_type(7);
  static const int Proto_SCBankSetPasswordRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSetPasswordRsp, result_),
  };
  Proto_SCBankSetPasswordRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_SCBankSetPasswordRsp_descriptor_,
      Proto_SCBankSetPasswordRsp::default_instance_,
      Proto_SCBankSetPasswordRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSetPasswordRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankSetPasswordRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_SCBankSetPasswordRsp));
  Proto_CSBankGiveMoneyReq_descriptor_ = file->message_type(8);
  static const int Proto_CSBankGiveMoneyReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyReq, give_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyReq, give_jetton_),
  };
  Proto_CSBankGiveMoneyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankGiveMoneyReq_descriptor_,
      Proto_CSBankGiveMoneyReq::default_instance_,
      Proto_CSBankGiveMoneyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankGiveMoneyReq));
  Proto_CSBankGiveMoneyRsp_descriptor_ = file->message_type(9);
  static const int Proto_CSBankGiveMoneyRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyRsp, record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyRsp, jetton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyRsp, bank_jetton_),
  };
  Proto_CSBankGiveMoneyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankGiveMoneyRsp_descriptor_,
      Proto_CSBankGiveMoneyRsp::default_instance_,
      Proto_CSBankGiveMoneyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGiveMoneyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankGiveMoneyRsp));
  Proto_SCBankGiveJettonAutoPushRsp_descriptor_ = file->message_type(10);
  static const int Proto_SCBankGiveJettonAutoPushRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGiveJettonAutoPushRsp, record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGiveJettonAutoPushRsp, jetton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGiveJettonAutoPushRsp, bank_jetton_),
  };
  Proto_SCBankGiveJettonAutoPushRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_SCBankGiveJettonAutoPushRsp_descriptor_,
      Proto_SCBankGiveJettonAutoPushRsp::default_instance_,
      Proto_SCBankGiveJettonAutoPushRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGiveJettonAutoPushRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGiveJettonAutoPushRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_SCBankGiveJettonAutoPushRsp));
  Proto_CSBankGetRecordReq_descriptor_ = file->message_type(11);
  static const int Proto_CSBankGetRecordReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetRecordReq, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetRecordReq, end_),
  };
  Proto_CSBankGetRecordReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSBankGetRecordReq_descriptor_,
      Proto_CSBankGetRecordReq::default_instance_,
      Proto_CSBankGetRecordReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetRecordReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSBankGetRecordReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSBankGetRecordReq));
  Proto_SCBankGetRecordRsp_descriptor_ = file->message_type(12);
  static const int Proto_SCBankGetRecordRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetRecordRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetRecordRsp, record_),
  };
  Proto_SCBankGetRecordRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_SCBankGetRecordRsp_descriptor_,
      Proto_SCBankGetRecordRsp::default_instance_,
      Proto_SCBankGetRecordRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetRecordRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SCBankGetRecordRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_SCBankGetRecordRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CSJetton_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankGetDataReq_descriptor_, &Proto_CSBankGetDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_SCBankGetDataRsp_descriptor_, &Proto_SCBankGetDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankSaveMoneyReq_descriptor_, &Proto_CSBankSaveMoneyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_SCBankSaveMoneyRsp_descriptor_, &Proto_SCBankSaveMoneyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankGetMoneyReq_descriptor_, &Proto_CSBankGetMoneyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_SCBankGetMoneyRsp_descriptor_, &Proto_SCBankGetMoneyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankSetPasswordReq_descriptor_, &Proto_CSBankSetPasswordReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_SCBankSetPasswordRsp_descriptor_, &Proto_SCBankSetPasswordRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankGiveMoneyReq_descriptor_, &Proto_CSBankGiveMoneyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankGiveMoneyRsp_descriptor_, &Proto_CSBankGiveMoneyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_SCBankGiveJettonAutoPushRsp_descriptor_, &Proto_SCBankGiveJettonAutoPushRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSBankGetRecordReq_descriptor_, &Proto_CSBankGetRecordReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_SCBankGetRecordRsp_descriptor_, &Proto_SCBankGetRecordRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CSJetton_2eproto() {
  delete Proto_CSBankGetDataReq::default_instance_;
  delete Proto_CSBankGetDataReq_reflection_;
  delete Proto_SCBankGetDataRsp::default_instance_;
  delete Proto_SCBankGetDataRsp_reflection_;
  delete Proto_CSBankSaveMoneyReq::default_instance_;
  delete Proto_CSBankSaveMoneyReq_reflection_;
  delete Proto_SCBankSaveMoneyRsp::default_instance_;
  delete Proto_SCBankSaveMoneyRsp_reflection_;
  delete Proto_CSBankGetMoneyReq::default_instance_;
  delete Proto_CSBankGetMoneyReq_reflection_;
  delete Proto_SCBankGetMoneyRsp::default_instance_;
  delete Proto_SCBankGetMoneyRsp_reflection_;
  delete Proto_CSBankSetPasswordReq::default_instance_;
  delete Proto_CSBankSetPasswordReq_reflection_;
  delete Proto_SCBankSetPasswordRsp::default_instance_;
  delete Proto_SCBankSetPasswordRsp_reflection_;
  delete Proto_CSBankGiveMoneyReq::default_instance_;
  delete Proto_CSBankGiveMoneyReq_reflection_;
  delete Proto_CSBankGiveMoneyRsp::default_instance_;
  delete Proto_CSBankGiveMoneyRsp_reflection_;
  delete Proto_SCBankGiveJettonAutoPushRsp::default_instance_;
  delete Proto_SCBankGiveJettonAutoPushRsp_reflection_;
  delete Proto_CSBankGetRecordReq::default_instance_;
  delete Proto_CSBankGetRecordReq_reflection_;
  delete Proto_SCBankGetRecordRsp::default_instance_;
  delete Proto_SCBankGetRecordRsp_reflection_;
}

void protobuf_AddDesc_CSJetton_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016CSJetton.proto\022\010proto_ff\032\tCom.proto\032\017C"
    "omDefine.proto\"/\n\026Proto_CSBankGetDataReq"
    "\022\025\n\rbank_password\030\001 \001(\t\"M\n\026Proto_SCBankG"
    "etDataRsp\022\016\n\006result\030\001 \001(\005\022\016\n\006jetton\030\002 \001("
    "\004\022\023\n\013bank_jetton\030\003 \001(\004\"/\n\030Proto_CSBankSa"
    "veMoneyReq\022\023\n\013save_jetton\030\001 \001(\004\"O\n\030Proto"
    "_SCBankSaveMoneyRsp\022\016\n\006result\030\001 \001(\005\022\016\n\006j"
    "etton\030\002 \001(\004\022\023\n\013bank_jetton\030\003 \001(\004\"-\n\027Prot"
    "o_CSBankGetMoneyReq\022\022\n\nget_jetton\030\001 \001(\004\""
    "N\n\027Proto_SCBankGetMoneyRsp\022\016\n\006result\030\001 \001"
    "(\005\022\016\n\006jetton\030\002 \001(\004\022\023\n\013bank_jetton\030\003 \001(\004\""
    "H\n\032Proto_CSBankSetPasswordReq\022\024\n\014old_pas"
    "sword\030\001 \001(\t\022\024\n\014new_password\030\002 \001(\t\",\n\032Pro"
    "to_SCBankSetPasswordRsp\022\016\n\006result\030\001 \001(\005\""
    "E\n\030Proto_CSBankGiveMoneyReq\022\024\n\014give_user"
    "_id\030\001 \001(\004\022\023\n\013give_jetton\030\002 \001(\004\"{\n\030Proto_"
    "CSBankGiveMoneyRsp\022\016\n\006result\030\001 \001(\005\022*\n\006re"
    "cord\030\002 \001(\0132\032.proto_ff.tbGiveBankJetton\022\016"
    "\n\006jetton\030\003 \001(\004\022\023\n\013bank_jetton\030\004 \001(\004\"t\n!P"
    "roto_SCBankGiveJettonAutoPushRsp\022*\n\006reco"
    "rd\030\002 \001(\0132\032.proto_ff.tbGiveBankJetton\022\016\n\006"
    "jetton\030\003 \001(\004\022\023\n\013bank_jetton\030\004 \001(\004\"6\n\030Pro"
    "to_CSBankGetRecordReq\022\r\n\005begin\030\001 \001(\r\022\013\n\003"
    "end\030\002 \001(\r\"V\n\030Proto_SCBankGetRecordRsp\022\016\n"
    "\006result\030\001 \001(\005\022*\n\006record\030\002 \003(\0132\032.proto_ff"
    ".tbGiveBankJetton", 1017);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CSJetton.proto", &protobuf_RegisterTypes);
  Proto_CSBankGetDataReq::default_instance_ = new Proto_CSBankGetDataReq();
  Proto_SCBankGetDataRsp::default_instance_ = new Proto_SCBankGetDataRsp();
  Proto_CSBankSaveMoneyReq::default_instance_ = new Proto_CSBankSaveMoneyReq();
  Proto_SCBankSaveMoneyRsp::default_instance_ = new Proto_SCBankSaveMoneyRsp();
  Proto_CSBankGetMoneyReq::default_instance_ = new Proto_CSBankGetMoneyReq();
  Proto_SCBankGetMoneyRsp::default_instance_ = new Proto_SCBankGetMoneyRsp();
  Proto_CSBankSetPasswordReq::default_instance_ = new Proto_CSBankSetPasswordReq();
  Proto_SCBankSetPasswordRsp::default_instance_ = new Proto_SCBankSetPasswordRsp();
  Proto_CSBankGiveMoneyReq::default_instance_ = new Proto_CSBankGiveMoneyReq();
  Proto_CSBankGiveMoneyRsp::default_instance_ = new Proto_CSBankGiveMoneyRsp();
  Proto_SCBankGiveJettonAutoPushRsp::default_instance_ = new Proto_SCBankGiveJettonAutoPushRsp();
  Proto_CSBankGetRecordReq::default_instance_ = new Proto_CSBankGetRecordReq();
  Proto_SCBankGetRecordRsp::default_instance_ = new Proto_SCBankGetRecordRsp();
  Proto_CSBankGetDataReq::default_instance_->InitAsDefaultInstance();
  Proto_SCBankGetDataRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSBankSaveMoneyReq::default_instance_->InitAsDefaultInstance();
  Proto_SCBankSaveMoneyRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSBankGetMoneyReq::default_instance_->InitAsDefaultInstance();
  Proto_SCBankGetMoneyRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSBankSetPasswordReq::default_instance_->InitAsDefaultInstance();
  Proto_SCBankSetPasswordRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSBankGiveMoneyReq::default_instance_->InitAsDefaultInstance();
  Proto_CSBankGiveMoneyRsp::default_instance_->InitAsDefaultInstance();
  Proto_SCBankGiveJettonAutoPushRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSBankGetRecordReq::default_instance_->InitAsDefaultInstance();
  Proto_SCBankGetRecordRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CSJetton_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CSJetton_2eproto {
  StaticDescriptorInitializer_CSJetton_2eproto() {
    protobuf_AddDesc_CSJetton_2eproto();
  }
} static_descriptor_initializer_CSJetton_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankGetDataReq::kBankPasswordFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankGetDataReq::Proto_CSBankGetDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankGetDataReq::InitAsDefaultInstance() {
}

Proto_CSBankGetDataReq::Proto_CSBankGetDataReq(const Proto_CSBankGetDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankGetDataReq::SharedCtor() {
  _cached_size_ = 0;
  bank_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankGetDataReq::~Proto_CSBankGetDataReq() {
  SharedDtor();
}

void Proto_CSBankGetDataReq::SharedDtor() {
  if (bank_password_ != &::google::protobuf::internal::kEmptyString) {
    delete bank_password_;
  }
  if (this != default_instance_) {
  }
}

void Proto_CSBankGetDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankGetDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankGetDataReq_descriptor_;
}

const Proto_CSBankGetDataReq& Proto_CSBankGetDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankGetDataReq* Proto_CSBankGetDataReq::default_instance_ = NULL;

Proto_CSBankGetDataReq* Proto_CSBankGetDataReq::New() const {
  return new Proto_CSBankGetDataReq;
}

void Proto_CSBankGetDataReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bank_password()) {
      if (bank_password_ != &::google::protobuf::internal::kEmptyString) {
        bank_password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankGetDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bank_password = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bank_password().data(), this->bank_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankGetDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string bank_password = 1;
  if (has_bank_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bank_password().data(), this->bank_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bank_password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankGetDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string bank_password = 1;
  if (has_bank_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bank_password().data(), this->bank_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bank_password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankGetDataReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string bank_password = 1;
    if (has_bank_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankGetDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankGetDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankGetDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankGetDataReq::MergeFrom(const Proto_CSBankGetDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bank_password()) {
      set_bank_password(from.bank_password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankGetDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankGetDataReq::CopyFrom(const Proto_CSBankGetDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankGetDataReq::IsInitialized() const {

  return true;
}

void Proto_CSBankGetDataReq::Swap(Proto_CSBankGetDataReq* other) {
  if (other != this) {
    std::swap(bank_password_, other->bank_password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankGetDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankGetDataReq_descriptor_;
  metadata.reflection = Proto_CSBankGetDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_SCBankGetDataRsp::kResultFieldNumber;
const int Proto_SCBankGetDataRsp::kJettonFieldNumber;
const int Proto_SCBankGetDataRsp::kBankJettonFieldNumber;
#endif  // !_MSC_VER

Proto_SCBankGetDataRsp::Proto_SCBankGetDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_SCBankGetDataRsp::InitAsDefaultInstance() {
}

Proto_SCBankGetDataRsp::Proto_SCBankGetDataRsp(const Proto_SCBankGetDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_SCBankGetDataRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  jetton_ = GOOGLE_ULONGLONG(0);
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_SCBankGetDataRsp::~Proto_SCBankGetDataRsp() {
  SharedDtor();
}

void Proto_SCBankGetDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SCBankGetDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SCBankGetDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SCBankGetDataRsp_descriptor_;
}

const Proto_SCBankGetDataRsp& Proto_SCBankGetDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_SCBankGetDataRsp* Proto_SCBankGetDataRsp::default_instance_ = NULL;

Proto_SCBankGetDataRsp* Proto_SCBankGetDataRsp::New() const {
  return new Proto_SCBankGetDataRsp;
}

void Proto_SCBankGetDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    jetton_ = GOOGLE_ULONGLONG(0);
    bank_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_SCBankGetDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jetton;
        break;
      }

      // optional uint64 jetton = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jetton_)));
          set_has_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bank_jetton;
        break;
      }

      // optional uint64 bank_jetton = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bank_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bank_jetton_)));
          set_has_bank_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_SCBankGetDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint64 jetton = 2;
  if (has_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->jetton(), output);
  }

  // optional uint64 bank_jetton = 3;
  if (has_bank_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bank_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_SCBankGetDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint64 jetton = 2;
  if (has_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->jetton(), target);
  }

  // optional uint64 bank_jetton = 3;
  if (has_bank_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bank_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_SCBankGetDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint64 jetton = 2;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jetton());
    }

    // optional uint64 bank_jetton = 3;
    if (has_bank_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bank_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SCBankGetDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_SCBankGetDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_SCBankGetDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_SCBankGetDataRsp::MergeFrom(const Proto_SCBankGetDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_jetton()) {
      set_jetton(from.jetton());
    }
    if (from.has_bank_jetton()) {
      set_bank_jetton(from.bank_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_SCBankGetDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SCBankGetDataRsp::CopyFrom(const Proto_SCBankGetDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SCBankGetDataRsp::IsInitialized() const {

  return true;
}

void Proto_SCBankGetDataRsp::Swap(Proto_SCBankGetDataRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(jetton_, other->jetton_);
    std::swap(bank_jetton_, other->bank_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_SCBankGetDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SCBankGetDataRsp_descriptor_;
  metadata.reflection = Proto_SCBankGetDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankSaveMoneyReq::kSaveJettonFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankSaveMoneyReq::Proto_CSBankSaveMoneyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankSaveMoneyReq::InitAsDefaultInstance() {
}

Proto_CSBankSaveMoneyReq::Proto_CSBankSaveMoneyReq(const Proto_CSBankSaveMoneyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankSaveMoneyReq::SharedCtor() {
  _cached_size_ = 0;
  save_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankSaveMoneyReq::~Proto_CSBankSaveMoneyReq() {
  SharedDtor();
}

void Proto_CSBankSaveMoneyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSBankSaveMoneyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankSaveMoneyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankSaveMoneyReq_descriptor_;
}

const Proto_CSBankSaveMoneyReq& Proto_CSBankSaveMoneyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankSaveMoneyReq* Proto_CSBankSaveMoneyReq::default_instance_ = NULL;

Proto_CSBankSaveMoneyReq* Proto_CSBankSaveMoneyReq::New() const {
  return new Proto_CSBankSaveMoneyReq;
}

void Proto_CSBankSaveMoneyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    save_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankSaveMoneyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 save_jetton = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &save_jetton_)));
          set_has_save_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankSaveMoneyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 save_jetton = 1;
  if (has_save_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->save_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankSaveMoneyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 save_jetton = 1;
  if (has_save_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->save_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankSaveMoneyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 save_jetton = 1;
    if (has_save_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->save_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankSaveMoneyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankSaveMoneyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankSaveMoneyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankSaveMoneyReq::MergeFrom(const Proto_CSBankSaveMoneyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_save_jetton()) {
      set_save_jetton(from.save_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankSaveMoneyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankSaveMoneyReq::CopyFrom(const Proto_CSBankSaveMoneyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankSaveMoneyReq::IsInitialized() const {

  return true;
}

void Proto_CSBankSaveMoneyReq::Swap(Proto_CSBankSaveMoneyReq* other) {
  if (other != this) {
    std::swap(save_jetton_, other->save_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankSaveMoneyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankSaveMoneyReq_descriptor_;
  metadata.reflection = Proto_CSBankSaveMoneyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_SCBankSaveMoneyRsp::kResultFieldNumber;
const int Proto_SCBankSaveMoneyRsp::kJettonFieldNumber;
const int Proto_SCBankSaveMoneyRsp::kBankJettonFieldNumber;
#endif  // !_MSC_VER

Proto_SCBankSaveMoneyRsp::Proto_SCBankSaveMoneyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_SCBankSaveMoneyRsp::InitAsDefaultInstance() {
}

Proto_SCBankSaveMoneyRsp::Proto_SCBankSaveMoneyRsp(const Proto_SCBankSaveMoneyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_SCBankSaveMoneyRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  jetton_ = GOOGLE_ULONGLONG(0);
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_SCBankSaveMoneyRsp::~Proto_SCBankSaveMoneyRsp() {
  SharedDtor();
}

void Proto_SCBankSaveMoneyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SCBankSaveMoneyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SCBankSaveMoneyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SCBankSaveMoneyRsp_descriptor_;
}

const Proto_SCBankSaveMoneyRsp& Proto_SCBankSaveMoneyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_SCBankSaveMoneyRsp* Proto_SCBankSaveMoneyRsp::default_instance_ = NULL;

Proto_SCBankSaveMoneyRsp* Proto_SCBankSaveMoneyRsp::New() const {
  return new Proto_SCBankSaveMoneyRsp;
}

void Proto_SCBankSaveMoneyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    jetton_ = GOOGLE_ULONGLONG(0);
    bank_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_SCBankSaveMoneyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jetton;
        break;
      }

      // optional uint64 jetton = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jetton_)));
          set_has_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bank_jetton;
        break;
      }

      // optional uint64 bank_jetton = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bank_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bank_jetton_)));
          set_has_bank_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_SCBankSaveMoneyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint64 jetton = 2;
  if (has_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->jetton(), output);
  }

  // optional uint64 bank_jetton = 3;
  if (has_bank_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bank_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_SCBankSaveMoneyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint64 jetton = 2;
  if (has_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->jetton(), target);
  }

  // optional uint64 bank_jetton = 3;
  if (has_bank_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bank_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_SCBankSaveMoneyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint64 jetton = 2;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jetton());
    }

    // optional uint64 bank_jetton = 3;
    if (has_bank_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bank_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SCBankSaveMoneyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_SCBankSaveMoneyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_SCBankSaveMoneyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_SCBankSaveMoneyRsp::MergeFrom(const Proto_SCBankSaveMoneyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_jetton()) {
      set_jetton(from.jetton());
    }
    if (from.has_bank_jetton()) {
      set_bank_jetton(from.bank_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_SCBankSaveMoneyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SCBankSaveMoneyRsp::CopyFrom(const Proto_SCBankSaveMoneyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SCBankSaveMoneyRsp::IsInitialized() const {

  return true;
}

void Proto_SCBankSaveMoneyRsp::Swap(Proto_SCBankSaveMoneyRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(jetton_, other->jetton_);
    std::swap(bank_jetton_, other->bank_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_SCBankSaveMoneyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SCBankSaveMoneyRsp_descriptor_;
  metadata.reflection = Proto_SCBankSaveMoneyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankGetMoneyReq::kGetJettonFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankGetMoneyReq::Proto_CSBankGetMoneyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankGetMoneyReq::InitAsDefaultInstance() {
}

Proto_CSBankGetMoneyReq::Proto_CSBankGetMoneyReq(const Proto_CSBankGetMoneyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankGetMoneyReq::SharedCtor() {
  _cached_size_ = 0;
  get_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankGetMoneyReq::~Proto_CSBankGetMoneyReq() {
  SharedDtor();
}

void Proto_CSBankGetMoneyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSBankGetMoneyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankGetMoneyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankGetMoneyReq_descriptor_;
}

const Proto_CSBankGetMoneyReq& Proto_CSBankGetMoneyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankGetMoneyReq* Proto_CSBankGetMoneyReq::default_instance_ = NULL;

Proto_CSBankGetMoneyReq* Proto_CSBankGetMoneyReq::New() const {
  return new Proto_CSBankGetMoneyReq;
}

void Proto_CSBankGetMoneyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    get_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankGetMoneyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 get_jetton = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &get_jetton_)));
          set_has_get_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankGetMoneyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 get_jetton = 1;
  if (has_get_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->get_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankGetMoneyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 get_jetton = 1;
  if (has_get_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->get_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankGetMoneyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 get_jetton = 1;
    if (has_get_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->get_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankGetMoneyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankGetMoneyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankGetMoneyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankGetMoneyReq::MergeFrom(const Proto_CSBankGetMoneyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_get_jetton()) {
      set_get_jetton(from.get_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankGetMoneyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankGetMoneyReq::CopyFrom(const Proto_CSBankGetMoneyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankGetMoneyReq::IsInitialized() const {

  return true;
}

void Proto_CSBankGetMoneyReq::Swap(Proto_CSBankGetMoneyReq* other) {
  if (other != this) {
    std::swap(get_jetton_, other->get_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankGetMoneyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankGetMoneyReq_descriptor_;
  metadata.reflection = Proto_CSBankGetMoneyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_SCBankGetMoneyRsp::kResultFieldNumber;
const int Proto_SCBankGetMoneyRsp::kJettonFieldNumber;
const int Proto_SCBankGetMoneyRsp::kBankJettonFieldNumber;
#endif  // !_MSC_VER

Proto_SCBankGetMoneyRsp::Proto_SCBankGetMoneyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_SCBankGetMoneyRsp::InitAsDefaultInstance() {
}

Proto_SCBankGetMoneyRsp::Proto_SCBankGetMoneyRsp(const Proto_SCBankGetMoneyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_SCBankGetMoneyRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  jetton_ = GOOGLE_ULONGLONG(0);
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_SCBankGetMoneyRsp::~Proto_SCBankGetMoneyRsp() {
  SharedDtor();
}

void Proto_SCBankGetMoneyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SCBankGetMoneyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SCBankGetMoneyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SCBankGetMoneyRsp_descriptor_;
}

const Proto_SCBankGetMoneyRsp& Proto_SCBankGetMoneyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_SCBankGetMoneyRsp* Proto_SCBankGetMoneyRsp::default_instance_ = NULL;

Proto_SCBankGetMoneyRsp* Proto_SCBankGetMoneyRsp::New() const {
  return new Proto_SCBankGetMoneyRsp;
}

void Proto_SCBankGetMoneyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    jetton_ = GOOGLE_ULONGLONG(0);
    bank_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_SCBankGetMoneyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jetton;
        break;
      }

      // optional uint64 jetton = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jetton_)));
          set_has_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bank_jetton;
        break;
      }

      // optional uint64 bank_jetton = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bank_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bank_jetton_)));
          set_has_bank_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_SCBankGetMoneyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint64 jetton = 2;
  if (has_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->jetton(), output);
  }

  // optional uint64 bank_jetton = 3;
  if (has_bank_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bank_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_SCBankGetMoneyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint64 jetton = 2;
  if (has_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->jetton(), target);
  }

  // optional uint64 bank_jetton = 3;
  if (has_bank_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bank_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_SCBankGetMoneyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint64 jetton = 2;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jetton());
    }

    // optional uint64 bank_jetton = 3;
    if (has_bank_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bank_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SCBankGetMoneyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_SCBankGetMoneyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_SCBankGetMoneyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_SCBankGetMoneyRsp::MergeFrom(const Proto_SCBankGetMoneyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_jetton()) {
      set_jetton(from.jetton());
    }
    if (from.has_bank_jetton()) {
      set_bank_jetton(from.bank_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_SCBankGetMoneyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SCBankGetMoneyRsp::CopyFrom(const Proto_SCBankGetMoneyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SCBankGetMoneyRsp::IsInitialized() const {

  return true;
}

void Proto_SCBankGetMoneyRsp::Swap(Proto_SCBankGetMoneyRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(jetton_, other->jetton_);
    std::swap(bank_jetton_, other->bank_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_SCBankGetMoneyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SCBankGetMoneyRsp_descriptor_;
  metadata.reflection = Proto_SCBankGetMoneyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankSetPasswordReq::kOldPasswordFieldNumber;
const int Proto_CSBankSetPasswordReq::kNewPasswordFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankSetPasswordReq::Proto_CSBankSetPasswordReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankSetPasswordReq::InitAsDefaultInstance() {
}

Proto_CSBankSetPasswordReq::Proto_CSBankSetPasswordReq(const Proto_CSBankSetPasswordReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankSetPasswordReq::SharedCtor() {
  _cached_size_ = 0;
  old_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  new_password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankSetPasswordReq::~Proto_CSBankSetPasswordReq() {
  SharedDtor();
}

void Proto_CSBankSetPasswordReq::SharedDtor() {
  if (old_password_ != &::google::protobuf::internal::kEmptyString) {
    delete old_password_;
  }
  if (new_password_ != &::google::protobuf::internal::kEmptyString) {
    delete new_password_;
  }
  if (this != default_instance_) {
  }
}

void Proto_CSBankSetPasswordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankSetPasswordReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankSetPasswordReq_descriptor_;
}

const Proto_CSBankSetPasswordReq& Proto_CSBankSetPasswordReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankSetPasswordReq* Proto_CSBankSetPasswordReq::default_instance_ = NULL;

Proto_CSBankSetPasswordReq* Proto_CSBankSetPasswordReq::New() const {
  return new Proto_CSBankSetPasswordReq;
}

void Proto_CSBankSetPasswordReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_old_password()) {
      if (old_password_ != &::google::protobuf::internal::kEmptyString) {
        old_password_->clear();
      }
    }
    if (has_new_password()) {
      if (new_password_ != &::google::protobuf::internal::kEmptyString) {
        new_password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankSetPasswordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string old_password = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->old_password().data(), this->old_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_new_password;
        break;
      }

      // optional string new_password = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_new_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->new_password().data(), this->new_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankSetPasswordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string old_password = 1;
  if (has_old_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->old_password().data(), this->old_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->old_password(), output);
  }

  // optional string new_password = 2;
  if (has_new_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->new_password().data(), this->new_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->new_password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankSetPasswordReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string old_password = 1;
  if (has_old_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->old_password().data(), this->old_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->old_password(), target);
  }

  // optional string new_password = 2;
  if (has_new_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->new_password().data(), this->new_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankSetPasswordReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string old_password = 1;
    if (has_old_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_password());
    }

    // optional string new_password = 2;
    if (has_new_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankSetPasswordReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankSetPasswordReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankSetPasswordReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankSetPasswordReq::MergeFrom(const Proto_CSBankSetPasswordReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_old_password()) {
      set_old_password(from.old_password());
    }
    if (from.has_new_password()) {
      set_new_password(from.new_password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankSetPasswordReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankSetPasswordReq::CopyFrom(const Proto_CSBankSetPasswordReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankSetPasswordReq::IsInitialized() const {

  return true;
}

void Proto_CSBankSetPasswordReq::Swap(Proto_CSBankSetPasswordReq* other) {
  if (other != this) {
    std::swap(old_password_, other->old_password_);
    std::swap(new_password_, other->new_password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankSetPasswordReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankSetPasswordReq_descriptor_;
  metadata.reflection = Proto_CSBankSetPasswordReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_SCBankSetPasswordRsp::kResultFieldNumber;
#endif  // !_MSC_VER

Proto_SCBankSetPasswordRsp::Proto_SCBankSetPasswordRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_SCBankSetPasswordRsp::InitAsDefaultInstance() {
}

Proto_SCBankSetPasswordRsp::Proto_SCBankSetPasswordRsp(const Proto_SCBankSetPasswordRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_SCBankSetPasswordRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_SCBankSetPasswordRsp::~Proto_SCBankSetPasswordRsp() {
  SharedDtor();
}

void Proto_SCBankSetPasswordRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SCBankSetPasswordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SCBankSetPasswordRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SCBankSetPasswordRsp_descriptor_;
}

const Proto_SCBankSetPasswordRsp& Proto_SCBankSetPasswordRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_SCBankSetPasswordRsp* Proto_SCBankSetPasswordRsp::default_instance_ = NULL;

Proto_SCBankSetPasswordRsp* Proto_SCBankSetPasswordRsp::New() const {
  return new Proto_SCBankSetPasswordRsp;
}

void Proto_SCBankSetPasswordRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_SCBankSetPasswordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_SCBankSetPasswordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_SCBankSetPasswordRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_SCBankSetPasswordRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SCBankSetPasswordRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_SCBankSetPasswordRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_SCBankSetPasswordRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_SCBankSetPasswordRsp::MergeFrom(const Proto_SCBankSetPasswordRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_SCBankSetPasswordRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SCBankSetPasswordRsp::CopyFrom(const Proto_SCBankSetPasswordRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SCBankSetPasswordRsp::IsInitialized() const {

  return true;
}

void Proto_SCBankSetPasswordRsp::Swap(Proto_SCBankSetPasswordRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_SCBankSetPasswordRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SCBankSetPasswordRsp_descriptor_;
  metadata.reflection = Proto_SCBankSetPasswordRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankGiveMoneyReq::kGiveUserIdFieldNumber;
const int Proto_CSBankGiveMoneyReq::kGiveJettonFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankGiveMoneyReq::Proto_CSBankGiveMoneyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankGiveMoneyReq::InitAsDefaultInstance() {
}

Proto_CSBankGiveMoneyReq::Proto_CSBankGiveMoneyReq(const Proto_CSBankGiveMoneyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankGiveMoneyReq::SharedCtor() {
  _cached_size_ = 0;
  give_user_id_ = GOOGLE_ULONGLONG(0);
  give_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankGiveMoneyReq::~Proto_CSBankGiveMoneyReq() {
  SharedDtor();
}

void Proto_CSBankGiveMoneyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSBankGiveMoneyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankGiveMoneyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankGiveMoneyReq_descriptor_;
}

const Proto_CSBankGiveMoneyReq& Proto_CSBankGiveMoneyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankGiveMoneyReq* Proto_CSBankGiveMoneyReq::default_instance_ = NULL;

Proto_CSBankGiveMoneyReq* Proto_CSBankGiveMoneyReq::New() const {
  return new Proto_CSBankGiveMoneyReq;
}

void Proto_CSBankGiveMoneyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    give_user_id_ = GOOGLE_ULONGLONG(0);
    give_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankGiveMoneyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 give_user_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &give_user_id_)));
          set_has_give_user_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_give_jetton;
        break;
      }

      // optional uint64 give_jetton = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_give_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &give_jetton_)));
          set_has_give_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankGiveMoneyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 give_user_id = 1;
  if (has_give_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->give_user_id(), output);
  }

  // optional uint64 give_jetton = 2;
  if (has_give_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->give_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankGiveMoneyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 give_user_id = 1;
  if (has_give_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->give_user_id(), target);
  }

  // optional uint64 give_jetton = 2;
  if (has_give_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->give_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankGiveMoneyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 give_user_id = 1;
    if (has_give_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->give_user_id());
    }

    // optional uint64 give_jetton = 2;
    if (has_give_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->give_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankGiveMoneyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankGiveMoneyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankGiveMoneyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankGiveMoneyReq::MergeFrom(const Proto_CSBankGiveMoneyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_give_user_id()) {
      set_give_user_id(from.give_user_id());
    }
    if (from.has_give_jetton()) {
      set_give_jetton(from.give_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankGiveMoneyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankGiveMoneyReq::CopyFrom(const Proto_CSBankGiveMoneyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankGiveMoneyReq::IsInitialized() const {

  return true;
}

void Proto_CSBankGiveMoneyReq::Swap(Proto_CSBankGiveMoneyReq* other) {
  if (other != this) {
    std::swap(give_user_id_, other->give_user_id_);
    std::swap(give_jetton_, other->give_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankGiveMoneyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankGiveMoneyReq_descriptor_;
  metadata.reflection = Proto_CSBankGiveMoneyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankGiveMoneyRsp::kResultFieldNumber;
const int Proto_CSBankGiveMoneyRsp::kRecordFieldNumber;
const int Proto_CSBankGiveMoneyRsp::kJettonFieldNumber;
const int Proto_CSBankGiveMoneyRsp::kBankJettonFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankGiveMoneyRsp::Proto_CSBankGiveMoneyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankGiveMoneyRsp::InitAsDefaultInstance() {
  record_ = const_cast< ::proto_ff::tbGiveBankJetton*>(&::proto_ff::tbGiveBankJetton::default_instance());
}

Proto_CSBankGiveMoneyRsp::Proto_CSBankGiveMoneyRsp(const Proto_CSBankGiveMoneyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankGiveMoneyRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  record_ = NULL;
  jetton_ = GOOGLE_ULONGLONG(0);
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankGiveMoneyRsp::~Proto_CSBankGiveMoneyRsp() {
  SharedDtor();
}

void Proto_CSBankGiveMoneyRsp::SharedDtor() {
  if (this != default_instance_) {
    delete record_;
  }
}

void Proto_CSBankGiveMoneyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankGiveMoneyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankGiveMoneyRsp_descriptor_;
}

const Proto_CSBankGiveMoneyRsp& Proto_CSBankGiveMoneyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankGiveMoneyRsp* Proto_CSBankGiveMoneyRsp::default_instance_ = NULL;

Proto_CSBankGiveMoneyRsp* Proto_CSBankGiveMoneyRsp::New() const {
  return new Proto_CSBankGiveMoneyRsp;
}

void Proto_CSBankGiveMoneyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_record()) {
      if (record_ != NULL) record_->::proto_ff::tbGiveBankJetton::Clear();
    }
    jetton_ = GOOGLE_ULONGLONG(0);
    bank_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankGiveMoneyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_record;
        break;
      }

      // optional .proto_ff.tbGiveBankJetton record = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_jetton;
        break;
      }

      // optional uint64 jetton = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jetton_)));
          set_has_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bank_jetton;
        break;
      }

      // optional uint64 bank_jetton = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bank_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bank_jetton_)));
          set_has_bank_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankGiveMoneyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .proto_ff.tbGiveBankJetton record = 2;
  if (has_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record(), output);
  }

  // optional uint64 jetton = 3;
  if (has_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->jetton(), output);
  }

  // optional uint64 bank_jetton = 4;
  if (has_bank_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bank_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankGiveMoneyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .proto_ff.tbGiveBankJetton record = 2;
  if (has_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->record(), target);
  }

  // optional uint64 jetton = 3;
  if (has_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->jetton(), target);
  }

  // optional uint64 bank_jetton = 4;
  if (has_bank_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bank_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankGiveMoneyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .proto_ff.tbGiveBankJetton record = 2;
    if (has_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record());
    }

    // optional uint64 jetton = 3;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jetton());
    }

    // optional uint64 bank_jetton = 4;
    if (has_bank_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bank_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankGiveMoneyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankGiveMoneyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankGiveMoneyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankGiveMoneyRsp::MergeFrom(const Proto_CSBankGiveMoneyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_record()) {
      mutable_record()->::proto_ff::tbGiveBankJetton::MergeFrom(from.record());
    }
    if (from.has_jetton()) {
      set_jetton(from.jetton());
    }
    if (from.has_bank_jetton()) {
      set_bank_jetton(from.bank_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankGiveMoneyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankGiveMoneyRsp::CopyFrom(const Proto_CSBankGiveMoneyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankGiveMoneyRsp::IsInitialized() const {

  if (has_record()) {
    if (!this->record().IsInitialized()) return false;
  }
  return true;
}

void Proto_CSBankGiveMoneyRsp::Swap(Proto_CSBankGiveMoneyRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(record_, other->record_);
    std::swap(jetton_, other->jetton_);
    std::swap(bank_jetton_, other->bank_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankGiveMoneyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankGiveMoneyRsp_descriptor_;
  metadata.reflection = Proto_CSBankGiveMoneyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_SCBankGiveJettonAutoPushRsp::kRecordFieldNumber;
const int Proto_SCBankGiveJettonAutoPushRsp::kJettonFieldNumber;
const int Proto_SCBankGiveJettonAutoPushRsp::kBankJettonFieldNumber;
#endif  // !_MSC_VER

Proto_SCBankGiveJettonAutoPushRsp::Proto_SCBankGiveJettonAutoPushRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_SCBankGiveJettonAutoPushRsp::InitAsDefaultInstance() {
  record_ = const_cast< ::proto_ff::tbGiveBankJetton*>(&::proto_ff::tbGiveBankJetton::default_instance());
}

Proto_SCBankGiveJettonAutoPushRsp::Proto_SCBankGiveJettonAutoPushRsp(const Proto_SCBankGiveJettonAutoPushRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_SCBankGiveJettonAutoPushRsp::SharedCtor() {
  _cached_size_ = 0;
  record_ = NULL;
  jetton_ = GOOGLE_ULONGLONG(0);
  bank_jetton_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_SCBankGiveJettonAutoPushRsp::~Proto_SCBankGiveJettonAutoPushRsp() {
  SharedDtor();
}

void Proto_SCBankGiveJettonAutoPushRsp::SharedDtor() {
  if (this != default_instance_) {
    delete record_;
  }
}

void Proto_SCBankGiveJettonAutoPushRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SCBankGiveJettonAutoPushRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SCBankGiveJettonAutoPushRsp_descriptor_;
}

const Proto_SCBankGiveJettonAutoPushRsp& Proto_SCBankGiveJettonAutoPushRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_SCBankGiveJettonAutoPushRsp* Proto_SCBankGiveJettonAutoPushRsp::default_instance_ = NULL;

Proto_SCBankGiveJettonAutoPushRsp* Proto_SCBankGiveJettonAutoPushRsp::New() const {
  return new Proto_SCBankGiveJettonAutoPushRsp;
}

void Proto_SCBankGiveJettonAutoPushRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_record()) {
      if (record_ != NULL) record_->::proto_ff::tbGiveBankJetton::Clear();
    }
    jetton_ = GOOGLE_ULONGLONG(0);
    bank_jetton_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_SCBankGiveJettonAutoPushRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.tbGiveBankJetton record = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_jetton;
        break;
      }

      // optional uint64 jetton = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &jetton_)));
          set_has_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bank_jetton;
        break;
      }

      // optional uint64 bank_jetton = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bank_jetton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bank_jetton_)));
          set_has_bank_jetton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_SCBankGiveJettonAutoPushRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.tbGiveBankJetton record = 2;
  if (has_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record(), output);
  }

  // optional uint64 jetton = 3;
  if (has_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->jetton(), output);
  }

  // optional uint64 bank_jetton = 4;
  if (has_bank_jetton()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bank_jetton(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_SCBankGiveJettonAutoPushRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.tbGiveBankJetton record = 2;
  if (has_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->record(), target);
  }

  // optional uint64 jetton = 3;
  if (has_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->jetton(), target);
  }

  // optional uint64 bank_jetton = 4;
  if (has_bank_jetton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bank_jetton(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_SCBankGiveJettonAutoPushRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.tbGiveBankJetton record = 2;
    if (has_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->record());
    }

    // optional uint64 jetton = 3;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->jetton());
    }

    // optional uint64 bank_jetton = 4;
    if (has_bank_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bank_jetton());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SCBankGiveJettonAutoPushRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_SCBankGiveJettonAutoPushRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_SCBankGiveJettonAutoPushRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_SCBankGiveJettonAutoPushRsp::MergeFrom(const Proto_SCBankGiveJettonAutoPushRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record()) {
      mutable_record()->::proto_ff::tbGiveBankJetton::MergeFrom(from.record());
    }
    if (from.has_jetton()) {
      set_jetton(from.jetton());
    }
    if (from.has_bank_jetton()) {
      set_bank_jetton(from.bank_jetton());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_SCBankGiveJettonAutoPushRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SCBankGiveJettonAutoPushRsp::CopyFrom(const Proto_SCBankGiveJettonAutoPushRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SCBankGiveJettonAutoPushRsp::IsInitialized() const {

  if (has_record()) {
    if (!this->record().IsInitialized()) return false;
  }
  return true;
}

void Proto_SCBankGiveJettonAutoPushRsp::Swap(Proto_SCBankGiveJettonAutoPushRsp* other) {
  if (other != this) {
    std::swap(record_, other->record_);
    std::swap(jetton_, other->jetton_);
    std::swap(bank_jetton_, other->bank_jetton_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_SCBankGiveJettonAutoPushRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SCBankGiveJettonAutoPushRsp_descriptor_;
  metadata.reflection = Proto_SCBankGiveJettonAutoPushRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSBankGetRecordReq::kBeginFieldNumber;
const int Proto_CSBankGetRecordReq::kEndFieldNumber;
#endif  // !_MSC_VER

Proto_CSBankGetRecordReq::Proto_CSBankGetRecordReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSBankGetRecordReq::InitAsDefaultInstance() {
}

Proto_CSBankGetRecordReq::Proto_CSBankGetRecordReq(const Proto_CSBankGetRecordReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSBankGetRecordReq::SharedCtor() {
  _cached_size_ = 0;
  begin_ = 0u;
  end_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSBankGetRecordReq::~Proto_CSBankGetRecordReq() {
  SharedDtor();
}

void Proto_CSBankGetRecordReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSBankGetRecordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSBankGetRecordReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSBankGetRecordReq_descriptor_;
}

const Proto_CSBankGetRecordReq& Proto_CSBankGetRecordReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_CSBankGetRecordReq* Proto_CSBankGetRecordReq::default_instance_ = NULL;

Proto_CSBankGetRecordReq* Proto_CSBankGetRecordReq::New() const {
  return new Proto_CSBankGetRecordReq;
}

void Proto_CSBankGetRecordReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    begin_ = 0u;
    end_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSBankGetRecordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 begin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_)));
          set_has_begin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // optional uint32 end = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSBankGetRecordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 begin = 1;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->begin(), output);
  }

  // optional uint32 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSBankGetRecordReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 begin = 1;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->begin(), target);
  }

  // optional uint32 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSBankGetRecordReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 begin = 1;
    if (has_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->begin());
    }

    // optional uint32 end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->end());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSBankGetRecordReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSBankGetRecordReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSBankGetRecordReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSBankGetRecordReq::MergeFrom(const Proto_CSBankGetRecordReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin()) {
      set_begin(from.begin());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSBankGetRecordReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSBankGetRecordReq::CopyFrom(const Proto_CSBankGetRecordReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSBankGetRecordReq::IsInitialized() const {

  return true;
}

void Proto_CSBankGetRecordReq::Swap(Proto_CSBankGetRecordReq* other) {
  if (other != this) {
    std::swap(begin_, other->begin_);
    std::swap(end_, other->end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSBankGetRecordReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSBankGetRecordReq_descriptor_;
  metadata.reflection = Proto_CSBankGetRecordReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_SCBankGetRecordRsp::kResultFieldNumber;
const int Proto_SCBankGetRecordRsp::kRecordFieldNumber;
#endif  // !_MSC_VER

Proto_SCBankGetRecordRsp::Proto_SCBankGetRecordRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_SCBankGetRecordRsp::InitAsDefaultInstance() {
}

Proto_SCBankGetRecordRsp::Proto_SCBankGetRecordRsp(const Proto_SCBankGetRecordRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_SCBankGetRecordRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_SCBankGetRecordRsp::~Proto_SCBankGetRecordRsp() {
  SharedDtor();
}

void Proto_SCBankGetRecordRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SCBankGetRecordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SCBankGetRecordRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SCBankGetRecordRsp_descriptor_;
}

const Proto_SCBankGetRecordRsp& Proto_SCBankGetRecordRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSJetton_2eproto();
  return *default_instance_;
}

Proto_SCBankGetRecordRsp* Proto_SCBankGetRecordRsp::default_instance_ = NULL;

Proto_SCBankGetRecordRsp* Proto_SCBankGetRecordRsp::New() const {
  return new Proto_SCBankGetRecordRsp;
}

void Proto_SCBankGetRecordRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_SCBankGetRecordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_record;
        break;
      }

      // repeated .proto_ff.tbGiveBankJetton record = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_record;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_SCBankGetRecordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .proto_ff.tbGiveBankJetton record = 2;
  for (int i = 0; i < this->record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_SCBankGetRecordRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .proto_ff.tbGiveBankJetton record = 2;
  for (int i = 0; i < this->record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->record(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_SCBankGetRecordRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .proto_ff.tbGiveBankJetton record = 2;
  total_size += 1 * this->record_size();
  for (int i = 0; i < this->record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SCBankGetRecordRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_SCBankGetRecordRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_SCBankGetRecordRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_SCBankGetRecordRsp::MergeFrom(const Proto_SCBankGetRecordRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_.MergeFrom(from.record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_SCBankGetRecordRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SCBankGetRecordRsp::CopyFrom(const Proto_SCBankGetRecordRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SCBankGetRecordRsp::IsInitialized() const {

  for (int i = 0; i < record_size(); i++) {
    if (!this->record(i).IsInitialized()) return false;
  }
  return true;
}

void Proto_SCBankGetRecordRsp::Swap(Proto_SCBankGetRecordRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    record_.Swap(&other->record_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_SCBankGetRecordRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SCBankGetRecordRsp_descriptor_;
  metadata.reflection = Proto_SCBankGetRecordRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
