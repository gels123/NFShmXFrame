package proto_ff;

import "yd_fieldoptions.proto";
import "Com.proto";
import "ServerConfig.proto";


enum Proto_AccountState
{
  E_ACCOUNTSTATE_OK = 0;        // 状态ok
  E_ACCOUNTSTATE_FREEZE = 1;        // 冻结，有时间周期
  E_ACCOUNTSTATE_FORBIT = 2;        // 禁止，无限期
}

////////////////////////////////login/////////////////////////////////

message Proto_PTWUserLoginReq
{
  optional uint64 user_id = 1;
  optional string account = 2;
  optional uint32 proxy_bus_id = 3; //proxy bus id
  optional string client_ip = 4;
  optional Proto_UserLoginExternalData ext_data = 5;
}

message Proto_WTPPlayerLoginRsp
{
  optional int32 result = 1;
  optional uint64 user_id = 2;
  optional uint32 game_id = 3;
  optional uint32 room_id = 4;
  optional uint32 game_bus_id = 5;
  optional uint32 logic_bus_id = 6;
  optional Proto_UserDetailCommonData detail_data = 7;
}

message Proto_WorldToLogicLoginReq
{
  optional uint64 user_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 game_bus_id = 4;
  optional uint32 proxy_bus_id = 5;
  optional string client_ip = 7;
  optional Proto_UserLoginExternalData ext_data = 8;
}

message Proto_LogicToWorldLoginRsp
{
  optional uint32 result = 1;
  optional uint64 user_id = 2;
  optional Proto_LTSSyncData sns_sync = 3;
  optional Proto_UserDetailCommonData detail_data = 4;
}

message Proto_WTSLoginReq
{
  optional uint64 user_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 game_bus_id = 4;
  optional uint32 proxy_bus_id = 5;
  optional string client_ip = 7;
  optional uint32 logic_bus_id = 8;
  optional Proto_LTSSyncData sns_sync = 9;
}

message Proto_STWLoginRsp
{
  optional uint32 result = 1;
  optional uint64 user_id = 2;
}
////////////////////////////////////disconnect///////////////////////////////
message NotifyPlayerDisconnect
{
  optional uint64 player_id = 1;
}

////////////////////////////////////reconnect///////////////////////////////

message PTWPlayerReconnectReq
{
  optional uint64 player_id = 1;
  optional uint32 proxy_bus_id = 2;
}

message WTPPlayerReconnctRsp
{
  optional int32 result = 1;
  optional uint64 player_id = 2;
  optional uint32 game_id = 3;
  optional uint32 room_id = 4;
  optional uint32 game_bus_id = 5;
  optional uint32 logic_bus_id = 6;
}

message WTLPlayerReconnectReq
{
  optional uint64 player_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 game_bus_id = 4;
  optional uint32 proxy_bus_id = 6;
}

message LTWPlayerReconnectRsp
{
  optional int32 result = 1;
  optional uint64 player_id = 2;
}

message WTGPlayerReconnectReq
{
  optional uint64 player_id = 1;
  optional uint32 proxy_bus_id = 2;
  optional uint32 logic_bus_id = 3;
}

message GTWPlayerReconnectRsp
{
  optional int32 result = 1;
  optional uint64 player_id = 2;
}

message WTSPlayerReconnectReq
{
  optional uint64 player_id = 1;
  optional uint32 logic_bus_id = 2;
  optional uint32 game_bus_id = 3;
  optional uint32 proxy_bus_id = 4;
}

message STWPlayerReconnectRsp
{
  optional int32 result = 1;
  optional uint64 player_id = 2;
}

/////////////////////////////////////////////logout////////////////////////////////////////////////
message Proto_LTWLogoutNotify
{
  optional uint64 player_id = 1;
}

message Proto_WTLLogoutNotify
{
  optional uint64 player_id = 1;
}

message Proto_WTSLogoutNotify
{
  optional uint64 player_id = 1;
}

message Proto_LTSBankGetDataReq
{
  optional uint64 jetton = 1;
  optional string bank_password = 2;
}

///////////////////////bank jetton////////////////////////////////
//NF_LTS_PLAYER_ADD_BANK_JETTON_RPC = 500; logi添加sns银行筹码
message Proto_LTS_PlayerAddBankJettonReq
{
  optional uint64 add_jetton = 1;
}

message Proto_STL_PlayerAddBankJettonRsp
{
  optional int32 ret_code = 1;
  optional uint64 add_jetton = 2;
  optional uint64 bank_jetton = 3;
}

//NF_LTS_PLAYER_REDUCE_BANK_JETTON_RPC = 501; logic减少sns银行筹码
message Proto_LTS_PlayerReduceBankJettonReq
{
  optional uint64 reduce_jetton = 1;
}

message Proto_STL_PlayerReduceBankJettonRsp
{
  optional int32 ret_code = 1;
  optional uint64 reduce_jetton = 2;
  optional uint64 bank_jetton = 3;
}

//NF_TS_QUERY_PLAYER_SIMPLE_DATA_RPC = 150;
message Proto_TS_QueryPlayerSimpleDataReq
{
  repeated uint64 query_user_id = 1;
}

message Proto_ST_QueryPlayerSimpleDataRsp
{
  optional int32 result = 1;
  repeated Proto_UserSimpleData query_user_list = 2;
}

//NF_GTW_REGISTER_ROOM_INFO_RPC = 130;
message Proto_GTW_RegisterRoomInfoReq
{
  repeated GameExternalGame game = 1;
  optional uint32 bus_id = 2;
}

message Proto_WTG_RgisterRoomInfoRsp
{
  optional int32 result = 1;
}