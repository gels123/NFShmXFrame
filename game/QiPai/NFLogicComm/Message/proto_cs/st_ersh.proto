package progame;
import "st_human.proto";



message ershuser   //拼三张 
{
	optional int32 userid = 1;
	optional int32 chairid = 2;           	// 座位ID，取值为1,2
	optional string jifen = 3;        		// 每局玩家的积分 初始化是都为,用string表示晚上身上的钱
	optional int32 state = 4;				// 玩家状态标志位
	repeated int32 handpoker = 5;          	// 手上的牌列表
	optional int32 pattern = 6;				// 牌型
	optional string jetton = 7;   			// 已投注的量,用string表示int64的类型
	repeated string jettonlist = 8; 		// 玩家的下注列表,用string表示int64的类型
	optional string nickname = 9; 
	repeated string raiselist = 10;			// 加注的列表,用string表示int64的类型
	repeated int32 actionlist = 11;			// 操作列表
	optional int32 lastaction = 12;			// 最后一次操作

	optional int32 cardtype = 13;		    //胜利次数
}

message ershoptinfo
{
	optional int32 userid = 1;				// 用户id, 0:无效
	optional int32 actiontype = 2;
	optional string jetton = 3;				// 用string表示int64的类型
}

message ershinfo
{
	
	optional int32 tableid = 1;				//牌桌ID
	optional int32 tablemark = 2;   		//牌桌的一个标签
	optional int32 tabletime = 3;
	optional int32 state = 4;       		//桌子的状态
	optional int32 timemark = 5;      		//时间的标签

	optional int32 tabletype = 6;   		//场次类型：初级场：101；中级场：102；高级场：103；专家场：104；私人场：201
	optional string difen = 7;  	 		//低分,用string表示int64的类型
	optional int32 doublecomp = 8;			//双倍比牌 0 双倍比牌 1 单倍比牌
	optional int32 boutcapp = 9; 			//最大投注回合  5 五轮封顶 10 十轮封顶 15 十五轮封顶
	optional int32 mincomp = 10;			//比牌起始回合： 0 一轮可比 1 二轮可比 2 三轮可比
	optional int32 menpai = 11;				//闷牌： 0 不闷牌 2 闷两轮 3 闷三轮 5 闷五轮
	optional int32 maxplaynum = 12;     	//最大的场次 	10局或20局
	optional int32 paytype = 13;			//支付类型：暂时提供由钻石来支付的，后期可能提供其他的支付方式
	optional int32 restrict = 14;			//限制  		游戏开始后不加人
	optional int32 autoready = 15;			//自动准备
	
	optional int32 ownerid = 16;      		//房主ID
	optional int32 bankerID = 17;			//庄家ID：每局开始优先投注
	repeated ershuser situser = 18;      	//坐下的玩家列表
	repeated int32 standuser = 19;    		//无座玩家列表,不存在站立的列表
	optional int32 usevipnum = 20;     		//已经玩了几局
	optional int32 guodi = 21;				//锅底
	optional int32 oncepour = 22; 			//单注
	optional int32 presentbout = 23; 		//当前投注回合
	optional int32 dissolveinfo = 24;       //这个是退出时候的位数运行：总共五位，2~5位分别表示1~4号玩家的状态：0：等待操作；1：申请退出，2：已经同意
	optional string straction = 25;        	//通常的情况下，这个变量是空串，只有在有玩家申请解散房间时，会被用来保存【玩家["..pInfo.nickname.."]申请解散房间，请问是否同意？(超过5分钟未做选择，则默认同意)"】
	
	optional int32 payway = 26;   			//支付类型：1：房主支付，2：均摊
	optional int32 paynum = 27;   			//需要支付的费用

	optional int32 maxuser = 29;			//最大人数
	
	repeated int32 actionlist = 30;			//玩家行动列表
	optional int32 deluser = 31;		
	optional int32 actionuser = 32; 		//当前行动玩家
	optional int32 usernum = 33;			//玩家数量
	
	optional int32 julebuid = 34;        	//当全部发了牌后。记录玩家的牌型信息
	optional int32 flag = 35; 				//用来标记 结算后需要亮赢家牌的

	optional int32 ershtype = 36;			//拼三张的玩法: 普通玩法:g_ErshType.type_ersh 

	// ersh
	optional int32 dealcnt = 37;			// 每个玩家各发了多少张牌
	optional ershoptinfo maxactioninfo = 38;		// 最后一次操作信息
	optional string maxpourjetton = 39;		// 每个最大下注值 也是梭哈的峰值,用string表示int64的类型
}

message ershhandpoker
{
	repeated int32 handpoker = 1;
}


message ershhistoryitem    //单局牌的结算信息
{
	optional int32 leg = 1;		  				//第几局
	optional int32 guodi = 2;		  			//锅底
	optional int32 presentbout = 3;		  		//下注回合
	optional int32 oncepour = 4;		  		//单注
	optional int32 winerid = 5;		  			//赢家
	repeated int32 useridlist = 6;    			//对应的userid
	repeated string nicklist = 7;     			//对应的昵称
	repeated int32 jetton = 8;       			//对应的玩家投注的量
	repeated ershhandpoker pokerlist = 9; 		//对应的玩家的手牌列表
	repeated int32 ershtypelist = 10;   			//对应的玩家的手牌类型
	repeated int32 winlist = 11;       			//对应的赢输单局积分
	repeated int32 resultlist = 17;				//0： 赢家 1： 比牌输  2： 弃牌
}

message ershhistory	//一整个牌局的结算信息
{
	optional int32 tableid = 1;   	//房间号
	optional int32 playnummax= 2;   //最大局数
	optional int32 playnum = 3;     //已完局数
	optional int32 difen = 4;		//底分 
	optional int32 gametime = 6;   	//时间
	optional int32 ownerid = 7;		//房主ID
	repeated string nicklist = 8;   //对应的昵称
	repeated int32 useridlist = 9;  //对应的userid
	repeated int32 winlist = 10;     //对应的赢输总积分
	repeated ershhistoryitem hitemlist = 11;   //详细的列表
}

message ershcardlist
{
	repeated int32 list = 1;
}



