// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: st_gdmj.proto

#ifndef PROTOBUF_st_5fgdmj_2eproto__INCLUDED
#define PROTOBUF_st_5fgdmj_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "st_human.pb.h"
// @@protoc_insertion_point(includes)

namespace progame {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_st_5fgdmj_2eproto();
void protobuf_AssignDesc_st_5fgdmj_2eproto();
void protobuf_ShutdownFile_st_5fgdmj_2eproto();

class gdmjpoker;
class gdmjuser;
class gdmjnextaction;
class gdmjviprecord;
class mjvipinfo;
class gdmjplaydetail;
class gdmjinfo;
class gdmjtdh;
class gdmjztdh;
class gdmjjph;
class gdmjhzz;
class gdmjhdz;
class gdmjcountinfo;
class gdmjhistoryitem;
class gdmjhistory;
class gdmjhistorypair;
class gdmjhandpoker;

// ===================================================================

class gdmjpoker : public ::google::protobuf::Message {
 public:
  gdmjpoker();
  virtual ~gdmjpoker();

  gdmjpoker(const gdmjpoker& from);

  inline gdmjpoker& operator=(const gdmjpoker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjpoker& default_instance();

  void Swap(gdmjpoker* other);

  // implements Message ----------------------------------------------

  gdmjpoker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjpoker& from);
  void MergeFrom(const gdmjpoker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pokertype = 1;
  inline bool has_pokertype() const;
  inline void clear_pokertype();
  static const int kPokertypeFieldNumber = 1;
  inline ::google::protobuf::int32 pokertype() const;
  inline void set_pokertype(::google::protobuf::int32 value);

  // optional int32 typedetail = 2;
  inline bool has_typedetail() const;
  inline void clear_typedetail();
  static const int kTypedetailFieldNumber = 2;
  inline ::google::protobuf::int32 typedetail() const;
  inline void set_typedetail(::google::protobuf::int32 value);

  // repeated int32 pokerlist = 3;
  inline int pokerlist_size() const;
  inline void clear_pokerlist();
  static const int kPokerlistFieldNumber = 3;
  inline ::google::protobuf::int32 pokerlist(int index) const;
  inline void set_pokerlist(int index, ::google::protobuf::int32 value);
  inline void add_pokerlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pokerlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pokerlist();

  // optional int32 tarchairid = 4;
  inline bool has_tarchairid() const;
  inline void clear_tarchairid();
  static const int kTarchairidFieldNumber = 4;
  inline ::google::protobuf::int32 tarchairid() const;
  inline void set_tarchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjpoker)
 private:
  inline void set_has_pokertype();
  inline void clear_has_pokertype();
  inline void set_has_typedetail();
  inline void clear_has_typedetail();
  inline void set_has_tarchairid();
  inline void clear_has_tarchairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pokertype_;
  ::google::protobuf::int32 typedetail_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pokerlist_;
  ::google::protobuf::int32 tarchairid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjpoker* default_instance_;
};
// -------------------------------------------------------------------

class gdmjuser : public ::google::protobuf::Message {
 public:
  gdmjuser();
  virtual ~gdmjuser();

  gdmjuser(const gdmjuser& from);

  inline gdmjuser& operator=(const gdmjuser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjuser& default_instance();

  void Swap(gdmjuser* other);

  // implements Message ----------------------------------------------

  gdmjuser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjuser& from);
  void MergeFrom(const gdmjuser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // repeated int32 handpoker = 2;
  inline int handpoker_size() const;
  inline void clear_handpoker();
  static const int kHandpokerFieldNumber = 2;
  inline ::google::protobuf::int32 handpoker(int index) const;
  inline void set_handpoker(int index, ::google::protobuf::int32 value);
  inline void add_handpoker(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handpoker() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handpoker();

  // repeated int32 outpoker = 3;
  inline int outpoker_size() const;
  inline void clear_outpoker();
  static const int kOutpokerFieldNumber = 3;
  inline ::google::protobuf::int32 outpoker(int index) const;
  inline void set_outpoker(int index, ::google::protobuf::int32 value);
  inline void add_outpoker(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outpoker() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outpoker();

  // repeated .progame.gdmjpoker mjpokerlist = 4;
  inline int mjpokerlist_size() const;
  inline void clear_mjpokerlist();
  static const int kMjpokerlistFieldNumber = 4;
  inline const ::progame::gdmjpoker& mjpokerlist(int index) const;
  inline ::progame::gdmjpoker* mutable_mjpokerlist(int index);
  inline ::progame::gdmjpoker* add_mjpokerlist();
  inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >&
      mjpokerlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >*
      mutable_mjpokerlist();

  // optional int32 playstate = 5;
  inline bool has_playstate() const;
  inline void clear_playstate();
  static const int kPlaystateFieldNumber = 5;
  inline ::google::protobuf::int32 playstate() const;
  inline void set_playstate(::google::protobuf::int32 value);

  // optional int32 autoplayer = 6;
  inline bool has_autoplayer() const;
  inline void clear_autoplayer();
  static const int kAutoplayerFieldNumber = 6;
  inline ::google::protobuf::int32 autoplayer() const;
  inline void set_autoplayer(::google::protobuf::int32 value);

  // optional int32 carryjetton = 8;
  inline bool has_carryjetton() const;
  inline void clear_carryjetton();
  static const int kCarryjettonFieldNumber = 8;
  inline ::google::protobuf::int32 carryjetton() const;
  inline void set_carryjetton(::google::protobuf::int32 value);

  // optional .progame.playersimpleinfo psinfo = 9;
  inline bool has_psinfo() const;
  inline void clear_psinfo();
  static const int kPsinfoFieldNumber = 9;
  inline const ::progame::playersimpleinfo& psinfo() const;
  inline ::progame::playersimpleinfo* mutable_psinfo();
  inline ::progame::playersimpleinfo* release_psinfo();
  inline void set_allocated_psinfo(::progame::playersimpleinfo* psinfo);

  // optional int32 chairid = 10;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 10;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 robottime = 11;
  inline bool has_robottime() const;
  inline void clear_robottime();
  static const int kRobottimeFieldNumber = 11;
  inline ::google::protobuf::int32 robottime() const;
  inline void set_robottime(::google::protobuf::int32 value);

  // repeated int32 tinglist = 12;
  inline int tinglist_size() const;
  inline void clear_tinglist();
  static const int kTinglistFieldNumber = 12;
  inline ::google::protobuf::int32 tinglist(int index) const;
  inline void set_tinglist(int index, ::google::protobuf::int32 value);
  inline void add_tinglist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tinglist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tinglist();

  // repeated int32 tingtype = 13;
  inline int tingtype_size() const;
  inline void clear_tingtype();
  static const int kTingtypeFieldNumber = 13;
  inline ::google::protobuf::int32 tingtype(int index) const;
  inline void set_tingtype(int index, ::google::protobuf::int32 value);
  inline void add_tingtype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tingtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tingtype();

  // optional int32 isrobot = 14;
  inline bool has_isrobot() const;
  inline void clear_isrobot();
  static const int kIsrobotFieldNumber = 14;
  inline ::google::protobuf::int32 isrobot() const;
  inline void set_isrobot(::google::protobuf::int32 value);

  // optional int32 beinum = 15;
  inline bool has_beinum() const;
  inline void clear_beinum();
  static const int kBeinumFieldNumber = 15;
  inline ::google::protobuf::int32 beinum() const;
  inline void set_beinum(::google::protobuf::int32 value);

  // optional int32 prop1 = 30;
  inline bool has_prop1() const;
  inline void clear_prop1();
  static const int kProp1FieldNumber = 30;
  inline ::google::protobuf::int32 prop1() const;
  inline void set_prop1(::google::protobuf::int32 value);

  // optional int32 humark = 31;
  inline bool has_humark() const;
  inline void clear_humark();
  static const int kHumarkFieldNumber = 31;
  inline ::google::protobuf::int32 humark() const;
  inline void set_humark(::google::protobuf::int32 value);

  // optional int32 guohu = 32;
  inline bool has_guohu() const;
  inline void clear_guohu();
  static const int kGuohuFieldNumber = 32;
  inline ::google::protobuf::int32 guohu() const;
  inline void set_guohu(::google::protobuf::int32 value);

  // repeated int32 guopeng = 33;
  inline int guopeng_size() const;
  inline void clear_guopeng();
  static const int kGuopengFieldNumber = 33;
  inline ::google::protobuf::int32 guopeng(int index) const;
  inline void set_guopeng(int index, ::google::protobuf::int32 value);
  inline void add_guopeng(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guopeng() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guopeng();

  // repeated int32 guogang = 34;
  inline int guogang_size() const;
  inline void clear_guogang();
  static const int kGuogangFieldNumber = 34;
  inline ::google::protobuf::int32 guogang(int index) const;
  inline void set_guogang(int index, ::google::protobuf::int32 value);
  inline void add_guogang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guogang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guogang();

  // optional int32 jinhu = 35;
  inline bool has_jinhu() const;
  inline void clear_jinhu();
  static const int kJinhuFieldNumber = 35;
  inline ::google::protobuf::int32 jinhu() const;
  inline void set_jinhu(::google::protobuf::int32 value);

  // optional int32 zimoguohu = 36;
  inline bool has_zimoguohu() const;
  inline void clear_zimoguohu();
  static const int kZimoguohuFieldNumber = 36;
  inline ::google::protobuf::int32 zimoguohu() const;
  inline void set_zimoguohu(::google::protobuf::int32 value);

  // optional int32 julebu_jetton = 37;
  inline bool has_julebu_jetton() const;
  inline void clear_julebu_jetton();
  static const int kJulebuJettonFieldNumber = 37;
  inline ::google::protobuf::int32 julebu_jetton() const;
  inline void set_julebu_jetton(::google::protobuf::int32 value);

  // repeated int32 outhuapoker = 38;
  inline int outhuapoker_size() const;
  inline void clear_outhuapoker();
  static const int kOuthuapokerFieldNumber = 38;
  inline ::google::protobuf::int32 outhuapoker(int index) const;
  inline void set_outhuapoker(int index, ::google::protobuf::int32 value);
  inline void add_outhuapoker(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outhuapoker() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outhuapoker();

  // optional int32 tingcardstate = 39;
  inline bool has_tingcardstate() const;
  inline void clear_tingcardstate();
  static const int kTingcardstateFieldNumber = 39;
  inline ::google::protobuf::int32 tingcardstate() const;
  inline void set_tingcardstate(::google::protobuf::int32 value);

  // optional int32 pokeridgang = 40;
  inline bool has_pokeridgang() const;
  inline void clear_pokeridgang();
  static const int kPokeridgangFieldNumber = 40;
  inline ::google::protobuf::int32 pokeridgang() const;
  inline void set_pokeridgang(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjuser)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_playstate();
  inline void clear_has_playstate();
  inline void set_has_autoplayer();
  inline void clear_has_autoplayer();
  inline void set_has_carryjetton();
  inline void clear_has_carryjetton();
  inline void set_has_psinfo();
  inline void clear_has_psinfo();
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_robottime();
  inline void clear_has_robottime();
  inline void set_has_isrobot();
  inline void clear_has_isrobot();
  inline void set_has_beinum();
  inline void clear_has_beinum();
  inline void set_has_prop1();
  inline void clear_has_prop1();
  inline void set_has_humark();
  inline void clear_has_humark();
  inline void set_has_guohu();
  inline void clear_has_guohu();
  inline void set_has_jinhu();
  inline void clear_has_jinhu();
  inline void set_has_zimoguohu();
  inline void clear_has_zimoguohu();
  inline void set_has_julebu_jetton();
  inline void clear_has_julebu_jetton();
  inline void set_has_tingcardstate();
  inline void clear_has_tingcardstate();
  inline void set_has_pokeridgang();
  inline void clear_has_pokeridgang();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handpoker_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outpoker_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 playstate_;
  ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker > mjpokerlist_;
  ::google::protobuf::int32 autoplayer_;
  ::google::protobuf::int32 carryjetton_;
  ::progame::playersimpleinfo* psinfo_;
  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 robottime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tinglist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tingtype_;
  ::google::protobuf::int32 isrobot_;
  ::google::protobuf::int32 beinum_;
  ::google::protobuf::int32 prop1_;
  ::google::protobuf::int32 humark_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guopeng_;
  ::google::protobuf::int32 guohu_;
  ::google::protobuf::int32 jinhu_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guogang_;
  ::google::protobuf::int32 zimoguohu_;
  ::google::protobuf::int32 julebu_jetton_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outhuapoker_;
  ::google::protobuf::int32 tingcardstate_;
  ::google::protobuf::int32 pokeridgang_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(25 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjuser* default_instance_;
};
// -------------------------------------------------------------------

class gdmjnextaction : public ::google::protobuf::Message {
 public:
  gdmjnextaction();
  virtual ~gdmjnextaction();

  gdmjnextaction(const gdmjnextaction& from);

  inline gdmjnextaction& operator=(const gdmjnextaction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjnextaction& default_instance();

  void Swap(gdmjnextaction* other);

  // implements Message ----------------------------------------------

  gdmjnextaction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjnextaction& from);
  void MergeFrom(const gdmjnextaction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 actchairid = 1;
  inline int actchairid_size() const;
  inline void clear_actchairid();
  static const int kActchairidFieldNumber = 1;
  inline ::google::protobuf::int32 actchairid(int index) const;
  inline void set_actchairid(int index, ::google::protobuf::int32 value);
  inline void add_actchairid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      actchairid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_actchairid();

  // optional int32 tarchairid = 2;
  inline bool has_tarchairid() const;
  inline void clear_tarchairid();
  static const int kTarchairidFieldNumber = 2;
  inline ::google::protobuf::int32 tarchairid() const;
  inline void set_tarchairid(::google::protobuf::int32 value);

  // repeated int32 actiontype = 3;
  inline int actiontype_size() const;
  inline void clear_actiontype();
  static const int kActiontypeFieldNumber = 3;
  inline ::google::protobuf::int32 actiontype(int index) const;
  inline void set_actiontype(int index, ::google::protobuf::int32 value);
  inline void add_actiontype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      actiontype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_actiontype();

  // optional int32 actpokerid = 4;
  inline bool has_actpokerid() const;
  inline void clear_actpokerid();
  static const int kActpokeridFieldNumber = 4;
  inline ::google::protobuf::int32 actpokerid() const;
  inline void set_actpokerid(::google::protobuf::int32 value);

  // optional int32 typedetail = 5;
  inline bool has_typedetail() const;
  inline void clear_typedetail();
  static const int kTypedetailFieldNumber = 5;
  inline ::google::protobuf::int32 typedetail() const;
  inline void set_typedetail(::google::protobuf::int32 value);

  // optional int32 canplay = 6;
  inline bool has_canplay() const;
  inline void clear_canplay();
  static const int kCanplayFieldNumber = 6;
  inline ::google::protobuf::int32 canplay() const;
  inline void set_canplay(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjnextaction)
 private:
  inline void set_has_tarchairid();
  inline void clear_has_tarchairid();
  inline void set_has_actpokerid();
  inline void clear_has_actpokerid();
  inline void set_has_typedetail();
  inline void clear_has_typedetail();
  inline void set_has_canplay();
  inline void clear_has_canplay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > actchairid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > actiontype_;
  ::google::protobuf::int32 tarchairid_;
  ::google::protobuf::int32 actpokerid_;
  ::google::protobuf::int32 typedetail_;
  ::google::protobuf::int32 canplay_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjnextaction* default_instance_;
};
// -------------------------------------------------------------------

class gdmjviprecord : public ::google::protobuf::Message {
 public:
  gdmjviprecord();
  virtual ~gdmjviprecord();

  gdmjviprecord(const gdmjviprecord& from);

  inline gdmjviprecord& operator=(const gdmjviprecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjviprecord& default_instance();

  void Swap(gdmjviprecord* other);

  // implements Message ----------------------------------------------

  gdmjviprecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjviprecord& from);
  void MergeFrom(const gdmjviprecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roundid = 1;
  inline bool has_roundid() const;
  inline void clear_roundid();
  static const int kRoundidFieldNumber = 1;
  inline ::google::protobuf::int32 roundid() const;
  inline void set_roundid(::google::protobuf::int32 value);

  // repeated int32 score = 2;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score(int index) const;
  inline void set_score(int index, ::google::protobuf::int32 value);
  inline void add_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_score();

  // @@protoc_insertion_point(class_scope:progame.gdmjviprecord)
 private:
  inline void set_has_roundid();
  inline void clear_has_roundid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > score_;
  ::google::protobuf::int32 roundid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjviprecord* default_instance_;
};
// -------------------------------------------------------------------

class mjvipinfo : public ::google::protobuf::Message {
 public:
  mjvipinfo();
  virtual ~mjvipinfo();

  mjvipinfo(const mjvipinfo& from);

  inline mjvipinfo& operator=(const mjvipinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mjvipinfo& default_instance();

  void Swap(mjvipinfo* other);

  // implements Message ----------------------------------------------

  mjvipinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mjvipinfo& from);
  void MergeFrom(const mjvipinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viptype = 1;
  inline bool has_viptype() const;
  inline void clear_viptype();
  static const int kViptypeFieldNumber = 1;
  inline ::google::protobuf::int32 viptype() const;
  inline void set_viptype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.mjvipinfo)
 private:
  inline void set_has_viptype();
  inline void clear_has_viptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 viptype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static mjvipinfo* default_instance_;
};
// -------------------------------------------------------------------

class gdmjplaydetail : public ::google::protobuf::Message {
 public:
  gdmjplaydetail();
  virtual ~gdmjplaydetail();

  gdmjplaydetail(const gdmjplaydetail& from);

  inline gdmjplaydetail& operator=(const gdmjplaydetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjplaydetail& default_instance();

  void Swap(gdmjplaydetail* other);

  // implements Message ----------------------------------------------

  gdmjplaydetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjplaydetail& from);
  void MergeFrom(const gdmjplaydetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 winnum = 2;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinnumFieldNumber = 2;
  inline ::google::protobuf::int32 winnum() const;
  inline void set_winnum(::google::protobuf::int32 value);

  // optional int32 zimonum = 3;
  inline bool has_zimonum() const;
  inline void clear_zimonum();
  static const int kZimonumFieldNumber = 3;
  inline ::google::protobuf::int32 zimonum() const;
  inline void set_zimonum(::google::protobuf::int32 value);

  // optional int32 hunum = 4;
  inline bool has_hunum() const;
  inline void clear_hunum();
  static const int kHunumFieldNumber = 4;
  inline ::google::protobuf::int32 hunum() const;
  inline void set_hunum(::google::protobuf::int32 value);

  // optional int32 dianpaonum = 5;
  inline bool has_dianpaonum() const;
  inline void clear_dianpaonum();
  static const int kDianpaonumFieldNumber = 5;
  inline ::google::protobuf::int32 dianpaonum() const;
  inline void set_dianpaonum(::google::protobuf::int32 value);

  // optional int32 jiepaonum = 6;
  inline bool has_jiepaonum() const;
  inline void clear_jiepaonum();
  static const int kJiepaonumFieldNumber = 6;
  inline ::google::protobuf::int32 jiepaonum() const;
  inline void set_jiepaonum(::google::protobuf::int32 value);

  // optional int32 angangnum = 7;
  inline bool has_angangnum() const;
  inline void clear_angangnum();
  static const int kAngangnumFieldNumber = 7;
  inline ::google::protobuf::int32 angangnum() const;
  inline void set_angangnum(::google::protobuf::int32 value);

  // optional int32 minggangnum = 8;
  inline bool has_minggangnum() const;
  inline void clear_minggangnum();
  static const int kMinggangnumFieldNumber = 8;
  inline ::google::protobuf::int32 minggangnum() const;
  inline void set_minggangnum(::google::protobuf::int32 value);

  // optional int32 wuguizimo = 9;
  inline bool has_wuguizimo() const;
  inline void clear_wuguizimo();
  static const int kWuguizimoFieldNumber = 9;
  inline ::google::protobuf::int32 wuguizimo() const;
  inline void set_wuguizimo(::google::protobuf::int32 value);

  // optional int32 youguizimo = 10;
  inline bool has_youguizimo() const;
  inline void clear_youguizimo();
  static const int kYouguizimoFieldNumber = 10;
  inline ::google::protobuf::int32 youguizimo() const;
  inline void set_youguizimo(::google::protobuf::int32 value);

  // optional int32 zhongmanum = 11;
  inline bool has_zhongmanum() const;
  inline void clear_zhongmanum();
  static const int kZhongmanumFieldNumber = 11;
  inline ::google::protobuf::int32 zhongmanum() const;
  inline void set_zhongmanum(::google::protobuf::int32 value);

  // optional int32 maxMultiple = 12;
  inline bool has_maxmultiple() const;
  inline void clear_maxmultiple();
  static const int kMaxMultipleFieldNumber = 12;
  inline ::google::protobuf::int32 maxmultiple() const;
  inline void set_maxmultiple(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjplaydetail)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_winnum();
  inline void clear_has_winnum();
  inline void set_has_zimonum();
  inline void clear_has_zimonum();
  inline void set_has_hunum();
  inline void clear_has_hunum();
  inline void set_has_dianpaonum();
  inline void clear_has_dianpaonum();
  inline void set_has_jiepaonum();
  inline void clear_has_jiepaonum();
  inline void set_has_angangnum();
  inline void clear_has_angangnum();
  inline void set_has_minggangnum();
  inline void clear_has_minggangnum();
  inline void set_has_wuguizimo();
  inline void clear_has_wuguizimo();
  inline void set_has_youguizimo();
  inline void clear_has_youguizimo();
  inline void set_has_zhongmanum();
  inline void clear_has_zhongmanum();
  inline void set_has_maxmultiple();
  inline void clear_has_maxmultiple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 winnum_;
  ::google::protobuf::int32 zimonum_;
  ::google::protobuf::int32 hunum_;
  ::google::protobuf::int32 dianpaonum_;
  ::google::protobuf::int32 jiepaonum_;
  ::google::protobuf::int32 angangnum_;
  ::google::protobuf::int32 minggangnum_;
  ::google::protobuf::int32 wuguizimo_;
  ::google::protobuf::int32 youguizimo_;
  ::google::protobuf::int32 zhongmanum_;
  ::google::protobuf::int32 maxmultiple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjplaydetail* default_instance_;
};
// -------------------------------------------------------------------

class gdmjinfo : public ::google::protobuf::Message {
 public:
  gdmjinfo();
  virtual ~gdmjinfo();

  gdmjinfo(const gdmjinfo& from);

  inline gdmjinfo& operator=(const gdmjinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjinfo& default_instance();

  void Swap(gdmjinfo* other);

  // implements Message ----------------------------------------------

  gdmjinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjinfo& from);
  void MergeFrom(const gdmjinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mjtype = 1;
  inline bool has_mjtype() const;
  inline void clear_mjtype();
  static const int kMjtypeFieldNumber = 1;
  inline ::google::protobuf::int32 mjtype() const;
  inline void set_mjtype(::google::protobuf::int32 value);

  // optional int32 tabletype = 2;
  inline bool has_tabletype() const;
  inline void clear_tabletype();
  static const int kTabletypeFieldNumber = 2;
  inline ::google::protobuf::int32 tabletype() const;
  inline void set_tabletype(::google::protobuf::int32 value);

  // optional int32 tableid = 3;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 3;
  inline ::google::protobuf::int32 tableid() const;
  inline void set_tableid(::google::protobuf::int32 value);

  // optional int32 tablemark = 4;
  inline bool has_tablemark() const;
  inline void clear_tablemark();
  static const int kTablemarkFieldNumber = 4;
  inline ::google::protobuf::int32 tablemark() const;
  inline void set_tablemark(::google::protobuf::int32 value);

  // optional int32 manum = 5;
  inline bool has_manum() const;
  inline void clear_manum();
  static const int kManumFieldNumber = 5;
  inline ::google::protobuf::int32 manum() const;
  inline void set_manum(::google::protobuf::int32 value);

  // optional int32 doubleamount = 6;
  inline bool has_doubleamount() const;
  inline void clear_doubleamount();
  static const int kDoubleamountFieldNumber = 6;
  inline ::google::protobuf::int32 doubleamount() const;
  inline void set_doubleamount(::google::protobuf::int32 value);

  // optional int32 pourjetton = 7;
  inline bool has_pourjetton() const;
  inline void clear_pourjetton();
  static const int kPourjettonFieldNumber = 7;
  inline ::google::protobuf::int32 pourjetton() const;
  inline void set_pourjetton(::google::protobuf::int32 value);

  // optional int32 fengid = 8;
  inline bool has_fengid() const;
  inline void clear_fengid();
  static const int kFengidFieldNumber = 8;
  inline ::google::protobuf::int32 fengid() const;
  inline void set_fengid(::google::protobuf::int32 value);

  // optional int32 laizinum = 9;
  inline bool has_laizinum() const;
  inline void clear_laizinum();
  static const int kLaizinumFieldNumber = 9;
  inline ::google::protobuf::int32 laizinum() const;
  inline void set_laizinum(::google::protobuf::int32 value);

  // optional int32 frameid = 10;
  inline bool has_frameid() const;
  inline void clear_frameid();
  static const int kFrameidFieldNumber = 10;
  inline ::google::protobuf::int32 frameid() const;
  inline void set_frameid(::google::protobuf::int32 value);

  // optional int32 status = 11;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 11;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated int32 publicpoker = 12;
  inline int publicpoker_size() const;
  inline void clear_publicpoker();
  static const int kPublicpokerFieldNumber = 12;
  inline ::google::protobuf::int32 publicpoker(int index) const;
  inline void set_publicpoker(int index, ::google::protobuf::int32 value);
  inline void add_publicpoker(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      publicpoker() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_publicpoker();

  // optional int32 maxplayernum = 13;
  inline bool has_maxplayernum() const;
  inline void clear_maxplayernum();
  static const int kMaxplayernumFieldNumber = 13;
  inline ::google::protobuf::int32 maxplayernum() const;
  inline void set_maxplayernum(::google::protobuf::int32 value);

  // optional int32 playernum = 14;
  inline bool has_playernum() const;
  inline void clear_playernum();
  static const int kPlayernumFieldNumber = 14;
  inline ::google::protobuf::int32 playernum() const;
  inline void set_playernum(::google::protobuf::int32 value);

  // optional int32 viptable = 15;
  inline bool has_viptable() const;
  inline void clear_viptable();
  static const int kViptableFieldNumber = 15;
  inline ::google::protobuf::int32 viptable() const;
  inline void set_viptable(::google::protobuf::int32 value);

  // optional int32 timemark = 16;
  inline bool has_timemark() const;
  inline void clear_timemark();
  static const int kTimemarkFieldNumber = 16;
  inline ::google::protobuf::int32 timemark() const;
  inline void set_timemark(::google::protobuf::int32 value);

  // optional int32 bankerpos = 17;
  inline bool has_bankerpos() const;
  inline void clear_bankerpos();
  static const int kBankerposFieldNumber = 17;
  inline ::google::protobuf::int32 bankerpos() const;
  inline void set_bankerpos(::google::protobuf::int32 value);

  // optional int32 prevpos = 18;
  inline bool has_prevpos() const;
  inline void clear_prevpos();
  static const int kPrevposFieldNumber = 18;
  inline ::google::protobuf::int32 prevpos() const;
  inline void set_prevpos(::google::protobuf::int32 value);

  // optional int32 userstate = 19;
  inline bool has_userstate() const;
  inline void clear_userstate();
  static const int kUserstateFieldNumber = 19;
  inline ::google::protobuf::int32 userstate() const;
  inline void set_userstate(::google::protobuf::int32 value);

  // optional int32 bankercount = 20;
  inline bool has_bankercount() const;
  inline void clear_bankercount();
  static const int kBankercountFieldNumber = 20;
  inline ::google::protobuf::int32 bankercount() const;
  inline void set_bankercount(::google::protobuf::int32 value);

  // optional int32 beingpoker = 21;
  inline bool has_beingpoker() const;
  inline void clear_beingpoker();
  static const int kBeingpokerFieldNumber = 21;
  inline ::google::protobuf::int32 beingpoker() const;
  inline void set_beingpoker(::google::protobuf::int32 value);

  // optional int32 actiontime = 22;
  inline bool has_actiontime() const;
  inline void clear_actiontime();
  static const int kActiontimeFieldNumber = 22;
  inline ::google::protobuf::int32 actiontime() const;
  inline void set_actiontime(::google::protobuf::int32 value);

  // optional int32 ownerid = 23;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwneridFieldNumber = 23;
  inline ::google::protobuf::int32 ownerid() const;
  inline void set_ownerid(::google::protobuf::int32 value);

  // repeated int32 situser = 24;
  inline int situser_size() const;
  inline void clear_situser();
  static const int kSituserFieldNumber = 24;
  inline ::google::protobuf::int32 situser(int index) const;
  inline void set_situser(int index, ::google::protobuf::int32 value);
  inline void add_situser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      situser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_situser();

  // repeated int32 standuser = 25;
  inline int standuser_size() const;
  inline void clear_standuser();
  static const int kStanduserFieldNumber = 25;
  inline ::google::protobuf::int32 standuser(int index) const;
  inline void set_standuser(int index, ::google::protobuf::int32 value);
  inline void add_standuser(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      standuser() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_standuser();

  // optional .progame.gdmjnextaction nextinfo = 26;
  inline bool has_nextinfo() const;
  inline void clear_nextinfo();
  static const int kNextinfoFieldNumber = 26;
  inline const ::progame::gdmjnextaction& nextinfo() const;
  inline ::progame::gdmjnextaction* mutable_nextinfo();
  inline ::progame::gdmjnextaction* release_nextinfo();
  inline void set_allocated_nextinfo(::progame::gdmjnextaction* nextinfo);

  // repeated int32 winchairlist = 27;
  inline int winchairlist_size() const;
  inline void clear_winchairlist();
  static const int kWinchairlistFieldNumber = 27;
  inline ::google::protobuf::int32 winchairlist(int index) const;
  inline void set_winchairlist(int index, ::google::protobuf::int32 value);
  inline void add_winchairlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      winchairlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_winchairlist();

  // optional int32 tableuserid = 28;
  inline bool has_tableuserid() const;
  inline void clear_tableuserid();
  static const int kTableuseridFieldNumber = 28;
  inline ::google::protobuf::int32 tableuserid() const;
  inline void set_tableuserid(::google::protobuf::int32 value);

  // optional int32 maxvipnum = 29;
  inline bool has_maxvipnum() const;
  inline void clear_maxvipnum();
  static const int kMaxvipnumFieldNumber = 29;
  inline ::google::protobuf::int32 maxvipnum() const;
  inline void set_maxvipnum(::google::protobuf::int32 value);

  // optional int32 usevipnum = 30;
  inline bool has_usevipnum() const;
  inline void clear_usevipnum();
  static const int kUsevipnumFieldNumber = 30;
  inline ::google::protobuf::int32 usevipnum() const;
  inline void set_usevipnum(::google::protobuf::int32 value);

  // optional .progame.gdmjviprecord viprecord = 31;
  inline bool has_viprecord() const;
  inline void clear_viprecord();
  static const int kViprecordFieldNumber = 31;
  inline const ::progame::gdmjviprecord& viprecord() const;
  inline ::progame::gdmjviprecord* mutable_viprecord();
  inline ::progame::gdmjviprecord* release_viprecord();
  inline void set_allocated_viprecord(::progame::gdmjviprecord* viprecord);

  // repeated .progame.gdmjviprecord recordlist = 32;
  inline int recordlist_size() const;
  inline void clear_recordlist();
  static const int kRecordlistFieldNumber = 32;
  inline const ::progame::gdmjviprecord& recordlist(int index) const;
  inline ::progame::gdmjviprecord* mutable_recordlist(int index);
  inline ::progame::gdmjviprecord* add_recordlist();
  inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjviprecord >&
      recordlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjviprecord >*
      mutable_recordlist();

  // repeated int32 guilist = 33;
  inline int guilist_size() const;
  inline void clear_guilist();
  static const int kGuilistFieldNumber = 33;
  inline ::google::protobuf::int32 guilist(int index) const;
  inline void set_guilist(int index, ::google::protobuf::int32 value);
  inline void add_guilist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guilist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guilist();

  // repeated int32 chihulist = 34;
  inline int chihulist_size() const;
  inline void clear_chihulist();
  static const int kChihulistFieldNumber = 34;
  inline ::google::protobuf::int32 chihulist(int index) const;
  inline void set_chihulist(int index, ::google::protobuf::int32 value);
  inline void add_chihulist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chihulist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chihulist();

  // optional int32 wintype = 35;
  inline bool has_wintype() const;
  inline void clear_wintype();
  static const int kWintypeFieldNumber = 35;
  inline ::google::protobuf::int32 wintype() const;
  inline void set_wintype(::google::protobuf::int32 value);

  // optional int32 dissolveinfo = 37;
  inline bool has_dissolveinfo() const;
  inline void clear_dissolveinfo();
  static const int kDissolveinfoFieldNumber = 37;
  inline ::google::protobuf::int32 dissolveinfo() const;
  inline void set_dissolveinfo(::google::protobuf::int32 value);

  // optional string straction = 38;
  inline bool has_straction() const;
  inline void clear_straction();
  static const int kStractionFieldNumber = 38;
  inline const ::std::string& straction() const;
  inline void set_straction(const ::std::string& value);
  inline void set_straction(const char* value);
  inline void set_straction(const char* value, size_t size);
  inline ::std::string* mutable_straction();
  inline ::std::string* release_straction();
  inline void set_allocated_straction(::std::string* straction);

  // optional int32 paytype = 39;
  inline bool has_paytype() const;
  inline void clear_paytype();
  static const int kPaytypeFieldNumber = 39;
  inline ::google::protobuf::int32 paytype() const;
  inline void set_paytype(::google::protobuf::int32 value);

  // optional int32 payway = 40;
  inline bool has_payway() const;
  inline void clear_payway();
  static const int kPaywayFieldNumber = 40;
  inline ::google::protobuf::int32 payway() const;
  inline void set_payway(::google::protobuf::int32 value);

  // optional int32 paynum = 41;
  inline bool has_paynum() const;
  inline void clear_paynum();
  static const int kPaynumFieldNumber = 41;
  inline ::google::protobuf::int32 paynum() const;
  inline void set_paynum(::google::protobuf::int32 value);

  // optional int32 genzhuang = 42;
  inline bool has_genzhuang() const;
  inline void clear_genzhuang();
  static const int kGenzhuangFieldNumber = 42;
  inline ::google::protobuf::int32 genzhuang() const;
  inline void set_genzhuang(::google::protobuf::int32 value);

  // optional int32 julebuid = 43;
  inline bool has_julebuid() const;
  inline void clear_julebuid();
  static const int kJulebuidFieldNumber = 43;
  inline ::google::protobuf::int32 julebuid() const;
  inline void set_julebuid(::google::protobuf::int32 value);

  // optional int32 julebutype = 44;
  inline bool has_julebutype() const;
  inline void clear_julebutype();
  static const int kJulebutypeFieldNumber = 44;
  inline ::google::protobuf::int32 julebutype() const;
  inline void set_julebutype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjinfo)
 private:
  inline void set_has_mjtype();
  inline void clear_has_mjtype();
  inline void set_has_tabletype();
  inline void clear_has_tabletype();
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_tablemark();
  inline void clear_has_tablemark();
  inline void set_has_manum();
  inline void clear_has_manum();
  inline void set_has_doubleamount();
  inline void clear_has_doubleamount();
  inline void set_has_pourjetton();
  inline void clear_has_pourjetton();
  inline void set_has_fengid();
  inline void clear_has_fengid();
  inline void set_has_laizinum();
  inline void clear_has_laizinum();
  inline void set_has_frameid();
  inline void clear_has_frameid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_maxplayernum();
  inline void clear_has_maxplayernum();
  inline void set_has_playernum();
  inline void clear_has_playernum();
  inline void set_has_viptable();
  inline void clear_has_viptable();
  inline void set_has_timemark();
  inline void clear_has_timemark();
  inline void set_has_bankerpos();
  inline void clear_has_bankerpos();
  inline void set_has_prevpos();
  inline void clear_has_prevpos();
  inline void set_has_userstate();
  inline void clear_has_userstate();
  inline void set_has_bankercount();
  inline void clear_has_bankercount();
  inline void set_has_beingpoker();
  inline void clear_has_beingpoker();
  inline void set_has_actiontime();
  inline void clear_has_actiontime();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_nextinfo();
  inline void clear_has_nextinfo();
  inline void set_has_tableuserid();
  inline void clear_has_tableuserid();
  inline void set_has_maxvipnum();
  inline void clear_has_maxvipnum();
  inline void set_has_usevipnum();
  inline void clear_has_usevipnum();
  inline void set_has_viprecord();
  inline void clear_has_viprecord();
  inline void set_has_wintype();
  inline void clear_has_wintype();
  inline void set_has_dissolveinfo();
  inline void clear_has_dissolveinfo();
  inline void set_has_straction();
  inline void clear_has_straction();
  inline void set_has_paytype();
  inline void clear_has_paytype();
  inline void set_has_payway();
  inline void clear_has_payway();
  inline void set_has_paynum();
  inline void clear_has_paynum();
  inline void set_has_genzhuang();
  inline void clear_has_genzhuang();
  inline void set_has_julebuid();
  inline void clear_has_julebuid();
  inline void set_has_julebutype();
  inline void clear_has_julebutype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mjtype_;
  ::google::protobuf::int32 tabletype_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 tablemark_;
  ::google::protobuf::int32 manum_;
  ::google::protobuf::int32 doubleamount_;
  ::google::protobuf::int32 pourjetton_;
  ::google::protobuf::int32 fengid_;
  ::google::protobuf::int32 laizinum_;
  ::google::protobuf::int32 frameid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > publicpoker_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 maxplayernum_;
  ::google::protobuf::int32 playernum_;
  ::google::protobuf::int32 viptable_;
  ::google::protobuf::int32 timemark_;
  ::google::protobuf::int32 bankerpos_;
  ::google::protobuf::int32 prevpos_;
  ::google::protobuf::int32 userstate_;
  ::google::protobuf::int32 bankercount_;
  ::google::protobuf::int32 beingpoker_;
  ::google::protobuf::int32 actiontime_;
  ::google::protobuf::int32 ownerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > situser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > standuser_;
  ::progame::gdmjnextaction* nextinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > winchairlist_;
  ::google::protobuf::int32 tableuserid_;
  ::google::protobuf::int32 maxvipnum_;
  ::progame::gdmjviprecord* viprecord_;
  ::google::protobuf::RepeatedPtrField< ::progame::gdmjviprecord > recordlist_;
  ::google::protobuf::int32 usevipnum_;
  ::google::protobuf::int32 wintype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guilist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chihulist_;
  ::std::string* straction_;
  ::google::protobuf::int32 dissolveinfo_;
  ::google::protobuf::int32 paytype_;
  ::google::protobuf::int32 payway_;
  ::google::protobuf::int32 paynum_;
  ::google::protobuf::int32 genzhuang_;
  ::google::protobuf::int32 julebuid_;
  ::google::protobuf::int32 julebutype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjinfo* default_instance_;
};
// -------------------------------------------------------------------

class gdmjtdh : public ::google::protobuf::Message {
 public:
  gdmjtdh();
  virtual ~gdmjtdh();

  gdmjtdh(const gdmjtdh& from);

  inline gdmjtdh& operator=(const gdmjtdh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjtdh& default_instance();

  void Swap(gdmjtdh* other);

  // implements Message ----------------------------------------------

  gdmjtdh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjtdh& from);
  void MergeFrom(const gdmjtdh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mjtype = 1;
  inline bool has_mjtype() const;
  inline void clear_mjtype();
  static const int kMjtypeFieldNumber = 1;
  inline ::google::protobuf::int32 mjtype() const;
  inline void set_mjtype(::google::protobuf::int32 value);

  // optional int32 typegui = 2;
  inline bool has_typegui() const;
  inline void clear_typegui();
  static const int kTypeguiFieldNumber = 2;
  inline ::google::protobuf::int32 typegui() const;
  inline void set_typegui(::google::protobuf::int32 value);

  // optional int32 manum = 3;
  inline bool has_manum() const;
  inline void clear_manum();
  static const int kManumFieldNumber = 3;
  inline ::google::protobuf::int32 manum() const;
  inline void set_manum(::google::protobuf::int32 value);

  // optional int32 shuanggui = 4;
  inline bool has_shuanggui() const;
  inline void clear_shuanggui();
  static const int kShuangguiFieldNumber = 4;
  inline ::google::protobuf::int32 shuanggui() const;
  inline void set_shuanggui(::google::protobuf::int32 value);

  // optional int32 kehuqidui = 11;
  inline bool has_kehuqidui() const;
  inline void clear_kehuqidui();
  static const int kKehuqiduiFieldNumber = 11;
  inline ::google::protobuf::int32 kehuqidui() const;
  inline void set_kehuqidui(::google::protobuf::int32 value);

  // optional int32 qiduijiafan = 12;
  inline bool has_qiduijiafan() const;
  inline void clear_qiduijiafan();
  static const int kQiduijiafanFieldNumber = 12;
  inline ::google::protobuf::int32 qiduijiafan() const;
  inline void set_qiduijiafan(::google::protobuf::int32 value);

  // optional int32 keqiangganghu = 13;
  inline bool has_keqiangganghu() const;
  inline void clear_keqiangganghu();
  static const int kKeqiangganghuFieldNumber = 13;
  inline ::google::protobuf::int32 keqiangganghu() const;
  inline void set_keqiangganghu(::google::protobuf::int32 value);

  // optional int32 minggangkeqiang = 14;
  inline bool has_minggangkeqiang() const;
  inline void clear_minggangkeqiang();
  static const int kMinggangkeqiangFieldNumber = 14;
  inline ::google::protobuf::int32 minggangkeqiang() const;
  inline void set_minggangkeqiang(::google::protobuf::int32 value);

  // optional int32 qianggangquanbao = 15;
  inline bool has_qianggangquanbao() const;
  inline void clear_qianggangquanbao();
  static const int kQianggangquanbaoFieldNumber = 15;
  inline ::google::protobuf::int32 qianggangquanbao() const;
  inline void set_qianggangquanbao(::google::protobuf::int32 value);

  // optional int32 gangbaoquanbao = 16;
  inline bool has_gangbaoquanbao() const;
  inline void clear_gangbaoquanbao();
  static const int kGangbaoquanbaoFieldNumber = 16;
  inline ::google::protobuf::int32 gangbaoquanbao() const;
  inline void set_gangbaoquanbao(::google::protobuf::int32 value);

  // optional int32 wuguijiabei = 17;
  inline bool has_wuguijiabei() const;
  inline void clear_wuguijiabei();
  static const int kWuguijiabeiFieldNumber = 17;
  inline ::google::protobuf::int32 wuguijiabei() const;
  inline void set_wuguijiabei(::google::protobuf::int32 value);

  // optional int32 budaifeng = 18;
  inline bool has_budaifeng() const;
  inline void clear_budaifeng();
  static const int kBudaifengFieldNumber = 18;
  inline ::google::protobuf::int32 budaifeng() const;
  inline void set_budaifeng(::google::protobuf::int32 value);

  // optional int32 gengzhuang = 19;
  inline bool has_gengzhuang() const;
  inline void clear_gengzhuang();
  static const int kGengzhuangFieldNumber = 19;
  inline ::google::protobuf::int32 gengzhuang() const;
  inline void set_gengzhuang(::google::protobuf::int32 value);

  // optional int32 jiejiegao = 20;
  inline bool has_jiejiegao() const;
  inline void clear_jiejiegao();
  static const int kJiejiegaoFieldNumber = 20;
  inline ::google::protobuf::int32 jiejiegao() const;
  inline void set_jiejiegao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjtdh)
 private:
  inline void set_has_mjtype();
  inline void clear_has_mjtype();
  inline void set_has_typegui();
  inline void clear_has_typegui();
  inline void set_has_manum();
  inline void clear_has_manum();
  inline void set_has_shuanggui();
  inline void clear_has_shuanggui();
  inline void set_has_kehuqidui();
  inline void clear_has_kehuqidui();
  inline void set_has_qiduijiafan();
  inline void clear_has_qiduijiafan();
  inline void set_has_keqiangganghu();
  inline void clear_has_keqiangganghu();
  inline void set_has_minggangkeqiang();
  inline void clear_has_minggangkeqiang();
  inline void set_has_qianggangquanbao();
  inline void clear_has_qianggangquanbao();
  inline void set_has_gangbaoquanbao();
  inline void clear_has_gangbaoquanbao();
  inline void set_has_wuguijiabei();
  inline void clear_has_wuguijiabei();
  inline void set_has_budaifeng();
  inline void clear_has_budaifeng();
  inline void set_has_gengzhuang();
  inline void clear_has_gengzhuang();
  inline void set_has_jiejiegao();
  inline void clear_has_jiejiegao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mjtype_;
  ::google::protobuf::int32 typegui_;
  ::google::protobuf::int32 manum_;
  ::google::protobuf::int32 shuanggui_;
  ::google::protobuf::int32 kehuqidui_;
  ::google::protobuf::int32 qiduijiafan_;
  ::google::protobuf::int32 keqiangganghu_;
  ::google::protobuf::int32 minggangkeqiang_;
  ::google::protobuf::int32 qianggangquanbao_;
  ::google::protobuf::int32 gangbaoquanbao_;
  ::google::protobuf::int32 wuguijiabei_;
  ::google::protobuf::int32 budaifeng_;
  ::google::protobuf::int32 gengzhuang_;
  ::google::protobuf::int32 jiejiegao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjtdh* default_instance_;
};
// -------------------------------------------------------------------

class gdmjztdh : public ::google::protobuf::Message {
 public:
  gdmjztdh();
  virtual ~gdmjztdh();

  gdmjztdh(const gdmjztdh& from);

  inline gdmjztdh& operator=(const gdmjztdh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjztdh& default_instance();

  void Swap(gdmjztdh* other);

  // implements Message ----------------------------------------------

  gdmjztdh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjztdh& from);
  void MergeFrom(const gdmjztdh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mjtype = 1;
  inline bool has_mjtype() const;
  inline void clear_mjtype();
  static const int kMjtypeFieldNumber = 1;
  inline ::google::protobuf::int32 mjtype() const;
  inline void set_mjtype(::google::protobuf::int32 value);

  // optional int32 typegui = 2;
  inline bool has_typegui() const;
  inline void clear_typegui();
  static const int kTypeguiFieldNumber = 2;
  inline ::google::protobuf::int32 typegui() const;
  inline void set_typegui(::google::protobuf::int32 value);

  // optional int32 manum = 3;
  inline bool has_manum() const;
  inline void clear_manum();
  static const int kManumFieldNumber = 3;
  inline ::google::protobuf::int32 manum() const;
  inline void set_manum(::google::protobuf::int32 value);

  // optional int32 shuanggui = 4;
  inline bool has_shuanggui() const;
  inline void clear_shuanggui();
  static const int kShuangguiFieldNumber = 4;
  inline ::google::protobuf::int32 shuanggui() const;
  inline void set_shuanggui(::google::protobuf::int32 value);

  // optional int32 kechihu = 11;
  inline bool has_kechihu() const;
  inline void clear_kechihu();
  static const int kKechihuFieldNumber = 11;
  inline ::google::protobuf::int32 kechihu() const;
  inline void set_kechihu(::google::protobuf::int32 value);

  // optional int32 kehuqidui = 12;
  inline bool has_kehuqidui() const;
  inline void clear_kehuqidui();
  static const int kKehuqiduiFieldNumber = 12;
  inline ::google::protobuf::int32 kehuqidui() const;
  inline void set_kehuqidui(::google::protobuf::int32 value);

  // optional int32 keqiangganghu = 14;
  inline bool has_keqiangganghu() const;
  inline void clear_keqiangganghu();
  static const int kKeqiangganghuFieldNumber = 14;
  inline ::google::protobuf::int32 keqiangganghu() const;
  inline void set_keqiangganghu(::google::protobuf::int32 value);

  // optional int32 minggangkeqiang = 15;
  inline bool has_minggangkeqiang() const;
  inline void clear_minggangkeqiang();
  static const int kMinggangkeqiangFieldNumber = 15;
  inline ::google::protobuf::int32 minggangkeqiang() const;
  inline void set_minggangkeqiang(::google::protobuf::int32 value);

  // optional int32 qianggangquanbao = 16;
  inline bool has_qianggangquanbao() const;
  inline void clear_qianggangquanbao();
  static const int kQianggangquanbaoFieldNumber = 16;
  inline ::google::protobuf::int32 qianggangquanbao() const;
  inline void set_qianggangquanbao(::google::protobuf::int32 value);

  // optional int32 gangbaoquanbao = 17;
  inline bool has_gangbaoquanbao() const;
  inline void clear_gangbaoquanbao();
  static const int kGangbaoquanbaoFieldNumber = 17;
  inline ::google::protobuf::int32 gangbaoquanbao() const;
  inline void set_gangbaoquanbao(::google::protobuf::int32 value);

  // optional int32 budaifeng = 18;
  inline bool has_budaifeng() const;
  inline void clear_budaifeng();
  static const int kBudaifengFieldNumber = 18;
  inline ::google::protobuf::int32 budaifeng() const;
  inline void set_budaifeng(::google::protobuf::int32 value);

  // optional int32 gengzhuang = 19;
  inline bool has_gengzhuang() const;
  inline void clear_gengzhuang();
  static const int kGengzhuangFieldNumber = 19;
  inline ::google::protobuf::int32 gengzhuang() const;
  inline void set_gengzhuang(::google::protobuf::int32 value);

  // optional int32 siguihupai = 20;
  inline bool has_siguihupai() const;
  inline void clear_siguihupai();
  static const int kSiguihupaiFieldNumber = 20;
  inline ::google::protobuf::int32 siguihupai() const;
  inline void set_siguihupai(::google::protobuf::int32 value);

  // optional int32 qiduisibei = 21;
  inline bool has_qiduisibei() const;
  inline void clear_qiduisibei();
  static const int kQiduisibeiFieldNumber = 21;
  inline ::google::protobuf::int32 qiduisibei() const;
  inline void set_qiduisibei(::google::protobuf::int32 value);

  // optional int32 pengpenghu = 22;
  inline bool has_pengpenghu() const;
  inline void clear_pengpenghu();
  static const int kPengpenghuFieldNumber = 22;
  inline ::google::protobuf::int32 pengpenghu() const;
  inline void set_pengpenghu(::google::protobuf::int32 value);

  // optional int32 qingyises = 23;
  inline bool has_qingyises() const;
  inline void clear_qingyises();
  static const int kQingyisesFieldNumber = 23;
  inline ::google::protobuf::int32 qingyises() const;
  inline void set_qingyises(::google::protobuf::int32 value);

  // optional int32 quanfeng = 24;
  inline bool has_quanfeng() const;
  inline void clear_quanfeng();
  static const int kQuanfengFieldNumber = 24;
  inline ::google::protobuf::int32 quanfeng() const;
  inline void set_quanfeng(::google::protobuf::int32 value);

  // optional int32 shisanyao = 25;
  inline bool has_shisanyao() const;
  inline void clear_shisanyao();
  static const int kShisanyaoFieldNumber = 25;
  inline ::google::protobuf::int32 shisanyao() const;
  inline void set_shisanyao(::google::protobuf::int32 value);

  // optional int32 yaomeyao = 26;
  inline bool has_yaomeyao() const;
  inline void clear_yaomeyao();
  static const int kYaomeyaoFieldNumber = 26;
  inline ::google::protobuf::int32 yaomeyao() const;
  inline void set_yaomeyao(::google::protobuf::int32 value);

  // optional int32 yaojiujike = 27;
  inline bool has_yaojiujike() const;
  inline void clear_yaojiujike();
  static const int kYaojiujikeFieldNumber = 27;
  inline ::google::protobuf::int32 yaojiujike() const;
  inline void set_yaojiujike(::google::protobuf::int32 value);

  // optional int32 wuguijiabei = 28;
  inline bool has_wuguijiabei() const;
  inline void clear_wuguijiabei();
  static const int kWuguijiabeiFieldNumber = 28;
  inline ::google::protobuf::int32 wuguijiabei() const;
  inline void set_wuguijiabei(::google::protobuf::int32 value);

  // optional int32 siguiliangbei = 29;
  inline bool has_siguiliangbei() const;
  inline void clear_siguiliangbei();
  static const int kSiguiliangbeiFieldNumber = 29;
  inline ::google::protobuf::int32 siguiliangbei() const;
  inline void set_siguiliangbei(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjztdh)
 private:
  inline void set_has_mjtype();
  inline void clear_has_mjtype();
  inline void set_has_typegui();
  inline void clear_has_typegui();
  inline void set_has_manum();
  inline void clear_has_manum();
  inline void set_has_shuanggui();
  inline void clear_has_shuanggui();
  inline void set_has_kechihu();
  inline void clear_has_kechihu();
  inline void set_has_kehuqidui();
  inline void clear_has_kehuqidui();
  inline void set_has_keqiangganghu();
  inline void clear_has_keqiangganghu();
  inline void set_has_minggangkeqiang();
  inline void clear_has_minggangkeqiang();
  inline void set_has_qianggangquanbao();
  inline void clear_has_qianggangquanbao();
  inline void set_has_gangbaoquanbao();
  inline void clear_has_gangbaoquanbao();
  inline void set_has_budaifeng();
  inline void clear_has_budaifeng();
  inline void set_has_gengzhuang();
  inline void clear_has_gengzhuang();
  inline void set_has_siguihupai();
  inline void clear_has_siguihupai();
  inline void set_has_qiduisibei();
  inline void clear_has_qiduisibei();
  inline void set_has_pengpenghu();
  inline void clear_has_pengpenghu();
  inline void set_has_qingyises();
  inline void clear_has_qingyises();
  inline void set_has_quanfeng();
  inline void clear_has_quanfeng();
  inline void set_has_shisanyao();
  inline void clear_has_shisanyao();
  inline void set_has_yaomeyao();
  inline void clear_has_yaomeyao();
  inline void set_has_yaojiujike();
  inline void clear_has_yaojiujike();
  inline void set_has_wuguijiabei();
  inline void clear_has_wuguijiabei();
  inline void set_has_siguiliangbei();
  inline void clear_has_siguiliangbei();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mjtype_;
  ::google::protobuf::int32 typegui_;
  ::google::protobuf::int32 manum_;
  ::google::protobuf::int32 shuanggui_;
  ::google::protobuf::int32 kechihu_;
  ::google::protobuf::int32 kehuqidui_;
  ::google::protobuf::int32 keqiangganghu_;
  ::google::protobuf::int32 minggangkeqiang_;
  ::google::protobuf::int32 qianggangquanbao_;
  ::google::protobuf::int32 gangbaoquanbao_;
  ::google::protobuf::int32 budaifeng_;
  ::google::protobuf::int32 gengzhuang_;
  ::google::protobuf::int32 siguihupai_;
  ::google::protobuf::int32 qiduisibei_;
  ::google::protobuf::int32 pengpenghu_;
  ::google::protobuf::int32 qingyises_;
  ::google::protobuf::int32 quanfeng_;
  ::google::protobuf::int32 shisanyao_;
  ::google::protobuf::int32 yaomeyao_;
  ::google::protobuf::int32 yaojiujike_;
  ::google::protobuf::int32 wuguijiabei_;
  ::google::protobuf::int32 siguiliangbei_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjztdh* default_instance_;
};
// -------------------------------------------------------------------

class gdmjjph : public ::google::protobuf::Message {
 public:
  gdmjjph();
  virtual ~gdmjjph();

  gdmjjph(const gdmjjph& from);

  inline gdmjjph& operator=(const gdmjjph& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjjph& default_instance();

  void Swap(gdmjjph* other);

  // implements Message ----------------------------------------------

  gdmjjph* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjjph& from);
  void MergeFrom(const gdmjjph& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mjtype = 1;
  inline bool has_mjtype() const;
  inline void clear_mjtype();
  static const int kMjtypeFieldNumber = 1;
  inline ::google::protobuf::int32 mjtype() const;
  inline void set_mjtype(::google::protobuf::int32 value);

  // optional int32 fantype = 2;
  inline bool has_fantype() const;
  inline void clear_fantype();
  static const int kFantypeFieldNumber = 2;
  inline ::google::protobuf::int32 fantype() const;
  inline void set_fantype(::google::protobuf::int32 value);

  // optional int32 maxfan = 3;
  inline bool has_maxfan() const;
  inline void clear_maxfan();
  static const int kMaxfanFieldNumber = 3;
  inline ::google::protobuf::int32 maxfan() const;
  inline void set_maxfan(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjjph)
 private:
  inline void set_has_mjtype();
  inline void clear_has_mjtype();
  inline void set_has_fantype();
  inline void clear_has_fantype();
  inline void set_has_maxfan();
  inline void clear_has_maxfan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mjtype_;
  ::google::protobuf::int32 fantype_;
  ::google::protobuf::int32 maxfan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjjph* default_instance_;
};
// -------------------------------------------------------------------

class gdmjhzz : public ::google::protobuf::Message {
 public:
  gdmjhzz();
  virtual ~gdmjhzz();

  gdmjhzz(const gdmjhzz& from);

  inline gdmjhzz& operator=(const gdmjhzz& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjhzz& default_instance();

  void Swap(gdmjhzz* other);

  // implements Message ----------------------------------------------

  gdmjhzz* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjhzz& from);
  void MergeFrom(const gdmjhzz& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mjtype = 1;
  inline bool has_mjtype() const;
  inline void clear_mjtype();
  static const int kMjtypeFieldNumber = 1;
  inline ::google::protobuf::int32 mjtype() const;
  inline void set_mjtype(::google::protobuf::int32 value);

  // optional int32 bukejihu = 2;
  inline bool has_bukejihu() const;
  inline void clear_bukejihu();
  static const int kBukejihuFieldNumber = 2;
  inline ::google::protobuf::int32 bukejihu() const;
  inline void set_bukejihu(::google::protobuf::int32 value);

  // optional int32 menqingjiafen = 3;
  inline bool has_menqingjiafen() const;
  inline void clear_menqingjiafen();
  static const int kMenqingjiafenFieldNumber = 3;
  inline ::google::protobuf::int32 menqingjiafen() const;
  inline void set_menqingjiafen(::google::protobuf::int32 value);

  // optional int32 genzhuang = 4;
  inline bool has_genzhuang() const;
  inline void clear_genzhuang();
  static const int kGenzhuangFieldNumber = 4;
  inline ::google::protobuf::int32 genzhuang() const;
  inline void set_genzhuang(::google::protobuf::int32 value);

  // optional int32 duohuahupai = 5;
  inline bool has_duohuahupai() const;
  inline void clear_duohuahupai();
  static const int kDuohuahupaiFieldNumber = 5;
  inline ::google::protobuf::int32 duohuahupai() const;
  inline void set_duohuahupai(::google::protobuf::int32 value);

  // optional int32 ganggenma = 6;
  inline bool has_ganggenma() const;
  inline void clear_ganggenma();
  static const int kGanggenmaFieldNumber = 6;
  inline ::google::protobuf::int32 ganggenma() const;
  inline void set_ganggenma(::google::protobuf::int32 value);

  // optional int32 manum = 7;
  inline bool has_manum() const;
  inline void clear_manum();
  static const int kManumFieldNumber = 7;
  inline ::google::protobuf::int32 manum() const;
  inline void set_manum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjhzz)
 private:
  inline void set_has_mjtype();
  inline void clear_has_mjtype();
  inline void set_has_bukejihu();
  inline void clear_has_bukejihu();
  inline void set_has_menqingjiafen();
  inline void clear_has_menqingjiafen();
  inline void set_has_genzhuang();
  inline void clear_has_genzhuang();
  inline void set_has_duohuahupai();
  inline void clear_has_duohuahupai();
  inline void set_has_ganggenma();
  inline void clear_has_ganggenma();
  inline void set_has_manum();
  inline void clear_has_manum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mjtype_;
  ::google::protobuf::int32 bukejihu_;
  ::google::protobuf::int32 menqingjiafen_;
  ::google::protobuf::int32 genzhuang_;
  ::google::protobuf::int32 duohuahupai_;
  ::google::protobuf::int32 ganggenma_;
  ::google::protobuf::int32 manum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjhzz* default_instance_;
};
// -------------------------------------------------------------------

class gdmjhdz : public ::google::protobuf::Message {
 public:
  gdmjhdz();
  virtual ~gdmjhdz();

  gdmjhdz(const gdmjhdz& from);

  inline gdmjhdz& operator=(const gdmjhdz& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjhdz& default_instance();

  void Swap(gdmjhdz* other);

  // implements Message ----------------------------------------------

  gdmjhdz* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjhdz& from);
  void MergeFrom(const gdmjhdz& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mjtype = 1;
  inline bool has_mjtype() const;
  inline void clear_mjtype();
  static const int kMjtypeFieldNumber = 1;
  inline ::google::protobuf::int32 mjtype() const;
  inline void set_mjtype(::google::protobuf::int32 value);

  // optional int32 bukejihu = 2;
  inline bool has_bukejihu() const;
  inline void clear_bukejihu();
  static const int kBukejihuFieldNumber = 2;
  inline ::google::protobuf::int32 bukejihu() const;
  inline void set_bukejihu(::google::protobuf::int32 value);

  // optional int32 menqingjiafen = 3;
  inline bool has_menqingjiafen() const;
  inline void clear_menqingjiafen();
  static const int kMenqingjiafenFieldNumber = 3;
  inline ::google::protobuf::int32 menqingjiafen() const;
  inline void set_menqingjiafen(::google::protobuf::int32 value);

  // optional int32 genzhuang = 4;
  inline bool has_genzhuang() const;
  inline void clear_genzhuang();
  static const int kGenzhuangFieldNumber = 4;
  inline ::google::protobuf::int32 genzhuang() const;
  inline void set_genzhuang(::google::protobuf::int32 value);

  // optional int32 duohuahupai = 5;
  inline bool has_duohuahupai() const;
  inline void clear_duohuahupai();
  static const int kDuohuahupaiFieldNumber = 5;
  inline ::google::protobuf::int32 duohuahupai() const;
  inline void set_duohuahupai(::google::protobuf::int32 value);

  // optional int32 ganggenma = 6;
  inline bool has_ganggenma() const;
  inline void clear_ganggenma();
  static const int kGanggenmaFieldNumber = 6;
  inline ::google::protobuf::int32 ganggenma() const;
  inline void set_ganggenma(::google::protobuf::int32 value);

  // optional int32 manum = 7;
  inline bool has_manum() const;
  inline void clear_manum();
  static const int kManumFieldNumber = 7;
  inline ::google::protobuf::int32 manum() const;
  inline void set_manum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjhdz)
 private:
  inline void set_has_mjtype();
  inline void clear_has_mjtype();
  inline void set_has_bukejihu();
  inline void clear_has_bukejihu();
  inline void set_has_menqingjiafen();
  inline void clear_has_menqingjiafen();
  inline void set_has_genzhuang();
  inline void clear_has_genzhuang();
  inline void set_has_duohuahupai();
  inline void clear_has_duohuahupai();
  inline void set_has_ganggenma();
  inline void clear_has_ganggenma();
  inline void set_has_manum();
  inline void clear_has_manum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mjtype_;
  ::google::protobuf::int32 bukejihu_;
  ::google::protobuf::int32 menqingjiafen_;
  ::google::protobuf::int32 genzhuang_;
  ::google::protobuf::int32 duohuahupai_;
  ::google::protobuf::int32 ganggenma_;
  ::google::protobuf::int32 manum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjhdz* default_instance_;
};
// -------------------------------------------------------------------

class gdmjcountinfo : public ::google::protobuf::Message {
 public:
  gdmjcountinfo();
  virtual ~gdmjcountinfo();

  gdmjcountinfo(const gdmjcountinfo& from);

  inline gdmjcountinfo& operator=(const gdmjcountinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjcountinfo& default_instance();

  void Swap(gdmjcountinfo* other);

  // implements Message ----------------------------------------------

  gdmjcountinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjcountinfo& from);
  void MergeFrom(const gdmjcountinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional int32 iswin = 2;
  inline bool has_iswin() const;
  inline void clear_iswin();
  static const int kIswinFieldNumber = 2;
  inline ::google::protobuf::int32 iswin() const;
  inline void set_iswin(::google::protobuf::int32 value);

  // optional int32 winjetton = 3;
  inline bool has_winjetton() const;
  inline void clear_winjetton();
  static const int kWinjettonFieldNumber = 3;
  inline ::google::protobuf::int32 winjetton() const;
  inline void set_winjetton(::google::protobuf::int32 value);

  // optional int32 gangjetton = 4;
  inline bool has_gangjetton() const;
  inline void clear_gangjetton();
  static const int kGangjettonFieldNumber = 4;
  inline ::google::protobuf::int32 gangjetton() const;
  inline void set_gangjetton(::google::protobuf::int32 value);

  // optional int32 fannum = 5;
  inline bool has_fannum() const;
  inline void clear_fannum();
  static const int kFannumFieldNumber = 5;
  inline ::google::protobuf::int32 fannum() const;
  inline void set_fannum(::google::protobuf::int32 value);

  // repeated string des = 6;
  inline int des_size() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des(int index) const;
  inline ::std::string* mutable_des(int index);
  inline void set_des(int index, const ::std::string& value);
  inline void set_des(int index, const char* value);
  inline void set_des(int index, const char* value, size_t size);
  inline ::std::string* add_des();
  inline void add_des(const ::std::string& value);
  inline void add_des(const char* value);
  inline void add_des(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& des() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_des();

  // optional int32 beinum = 7;
  inline bool has_beinum() const;
  inline void clear_beinum();
  static const int kBeinumFieldNumber = 7;
  inline ::google::protobuf::int32 beinum() const;
  inline void set_beinum(::google::protobuf::int32 value);

  // optional int32 hunum = 8;
  inline bool has_hunum() const;
  inline void clear_hunum();
  static const int kHunumFieldNumber = 8;
  inline ::google::protobuf::int32 hunum() const;
  inline void set_hunum(::google::protobuf::int32 value);

  // optional int32 carryjetton = 9;
  inline bool has_carryjetton() const;
  inline void clear_carryjetton();
  static const int kCarryjettonFieldNumber = 9;
  inline ::google::protobuf::int32 carryjetton() const;
  inline void set_carryjetton(::google::protobuf::int32 value);

  // optional int32 julebu_jetton = 10;
  inline bool has_julebu_jetton() const;
  inline void clear_julebu_jetton();
  static const int kJulebuJettonFieldNumber = 10;
  inline ::google::protobuf::int32 julebu_jetton() const;
  inline void set_julebu_jetton(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:progame.gdmjcountinfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_iswin();
  inline void clear_has_iswin();
  inline void set_has_winjetton();
  inline void clear_has_winjetton();
  inline void set_has_gangjetton();
  inline void clear_has_gangjetton();
  inline void set_has_fannum();
  inline void clear_has_fannum();
  inline void set_has_beinum();
  inline void clear_has_beinum();
  inline void set_has_hunum();
  inline void clear_has_hunum();
  inline void set_has_carryjetton();
  inline void clear_has_carryjetton();
  inline void set_has_julebu_jetton();
  inline void clear_has_julebu_jetton();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 iswin_;
  ::google::protobuf::int32 winjetton_;
  ::google::protobuf::int32 gangjetton_;
  ::google::protobuf::RepeatedPtrField< ::std::string> des_;
  ::google::protobuf::int32 fannum_;
  ::google::protobuf::int32 beinum_;
  ::google::protobuf::int32 hunum_;
  ::google::protobuf::int32 carryjetton_;
  ::google::protobuf::int32 julebu_jetton_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjcountinfo* default_instance_;
};
// -------------------------------------------------------------------

class gdmjhistoryitem : public ::google::protobuf::Message {
 public:
  gdmjhistoryitem();
  virtual ~gdmjhistoryitem();

  gdmjhistoryitem(const gdmjhistoryitem& from);

  inline gdmjhistoryitem& operator=(const gdmjhistoryitem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjhistoryitem& default_instance();

  void Swap(gdmjhistoryitem* other);

  // implements Message ----------------------------------------------

  gdmjhistoryitem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjhistoryitem& from);
  void MergeFrom(const gdmjhistoryitem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tableplayid = 1;
  inline bool has_tableplayid() const;
  inline void clear_tableplayid();
  static const int kTableplayidFieldNumber = 1;
  inline ::google::protobuf::int32 tableplayid() const;
  inline void set_tableplayid(::google::protobuf::int32 value);

  // optional int32 tableid = 2;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 2;
  inline ::google::protobuf::int32 tableid() const;
  inline void set_tableid(::google::protobuf::int32 value);

  // optional int32 playtime = 3;
  inline bool has_playtime() const;
  inline void clear_playtime();
  static const int kPlaytimeFieldNumber = 3;
  inline ::google::protobuf::int32 playtime() const;
  inline void set_playtime(::google::protobuf::int32 value);

  // optional int32 playstate = 4;
  inline bool has_playstate() const;
  inline void clear_playstate();
  static const int kPlaystateFieldNumber = 4;
  inline ::google::protobuf::int32 playstate() const;
  inline void set_playstate(::google::protobuf::int32 value);

  // repeated int32 useridlist = 5;
  inline int useridlist_size() const;
  inline void clear_useridlist();
  static const int kUseridlistFieldNumber = 5;
  inline ::google::protobuf::int32 useridlist(int index) const;
  inline void set_useridlist(int index, ::google::protobuf::int32 value);
  inline void add_useridlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      useridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_useridlist();

  // repeated string nicklist = 6;
  inline int nicklist_size() const;
  inline void clear_nicklist();
  static const int kNicklistFieldNumber = 6;
  inline const ::std::string& nicklist(int index) const;
  inline ::std::string* mutable_nicklist(int index);
  inline void set_nicklist(int index, const ::std::string& value);
  inline void set_nicklist(int index, const char* value);
  inline void set_nicklist(int index, const char* value, size_t size);
  inline ::std::string* add_nicklist();
  inline void add_nicklist(const ::std::string& value);
  inline void add_nicklist(const char* value);
  inline void add_nicklist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& nicklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_nicklist();

  // repeated int32 winlist = 7;
  inline int winlist_size() const;
  inline void clear_winlist();
  static const int kWinlistFieldNumber = 7;
  inline ::google::protobuf::int32 winlist(int index) const;
  inline void set_winlist(int index, ::google::protobuf::int32 value);
  inline void add_winlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      winlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_winlist();

  // optional string quitdes = 8;
  inline bool has_quitdes() const;
  inline void clear_quitdes();
  static const int kQuitdesFieldNumber = 8;
  inline const ::std::string& quitdes() const;
  inline void set_quitdes(const ::std::string& value);
  inline void set_quitdes(const char* value);
  inline void set_quitdes(const char* value, size_t size);
  inline ::std::string* mutable_quitdes();
  inline ::std::string* release_quitdes();
  inline void set_allocated_quitdes(::std::string* quitdes);

  // repeated string userdes = 9;
  inline int userdes_size() const;
  inline void clear_userdes();
  static const int kUserdesFieldNumber = 9;
  inline const ::std::string& userdes(int index) const;
  inline ::std::string* mutable_userdes(int index);
  inline void set_userdes(int index, const ::std::string& value);
  inline void set_userdes(int index, const char* value);
  inline void set_userdes(int index, const char* value, size_t size);
  inline ::std::string* add_userdes();
  inline void add_userdes(const ::std::string& value);
  inline void add_userdes(const char* value);
  inline void add_userdes(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& userdes() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_userdes();

  // @@protoc_insertion_point(class_scope:progame.gdmjhistoryitem)
 private:
  inline void set_has_tableplayid();
  inline void clear_has_tableplayid();
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_playtime();
  inline void clear_has_playtime();
  inline void set_has_playstate();
  inline void clear_has_playstate();
  inline void set_has_quitdes();
  inline void clear_has_quitdes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tableplayid_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 playtime_;
  ::google::protobuf::int32 playstate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > useridlist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> nicklist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > winlist_;
  ::std::string* quitdes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> userdes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjhistoryitem* default_instance_;
};
// -------------------------------------------------------------------

class gdmjhistory : public ::google::protobuf::Message {
 public:
  gdmjhistory();
  virtual ~gdmjhistory();

  gdmjhistory(const gdmjhistory& from);

  inline gdmjhistory& operator=(const gdmjhistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjhistory& default_instance();

  void Swap(gdmjhistory* other);

  // implements Message ----------------------------------------------

  gdmjhistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjhistory& from);
  void MergeFrom(const gdmjhistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tableid = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 1;
  inline ::google::protobuf::int32 tableid() const;
  inline void set_tableid(::google::protobuf::int32 value);

  // optional int32 tablemark = 2;
  inline bool has_tablemark() const;
  inline void clear_tablemark();
  static const int kTablemarkFieldNumber = 2;
  inline ::google::protobuf::int32 tablemark() const;
  inline void set_tablemark(::google::protobuf::int32 value);

  // optional int32 gametime = 3;
  inline bool has_gametime() const;
  inline void clear_gametime();
  static const int kGametimeFieldNumber = 3;
  inline ::google::protobuf::int32 gametime() const;
  inline void set_gametime(::google::protobuf::int32 value);

  // optional int32 playnum = 4;
  inline bool has_playnum() const;
  inline void clear_playnum();
  static const int kPlaynumFieldNumber = 4;
  inline ::google::protobuf::int32 playnum() const;
  inline void set_playnum(::google::protobuf::int32 value);

  // repeated int32 useridlist = 5;
  inline int useridlist_size() const;
  inline void clear_useridlist();
  static const int kUseridlistFieldNumber = 5;
  inline ::google::protobuf::int32 useridlist(int index) const;
  inline void set_useridlist(int index, ::google::protobuf::int32 value);
  inline void add_useridlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      useridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_useridlist();

  // repeated string nicklist = 6;
  inline int nicklist_size() const;
  inline void clear_nicklist();
  static const int kNicklistFieldNumber = 6;
  inline const ::std::string& nicklist(int index) const;
  inline ::std::string* mutable_nicklist(int index);
  inline void set_nicklist(int index, const ::std::string& value);
  inline void set_nicklist(int index, const char* value);
  inline void set_nicklist(int index, const char* value, size_t size);
  inline ::std::string* add_nicklist();
  inline void add_nicklist(const ::std::string& value);
  inline void add_nicklist(const char* value);
  inline void add_nicklist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& nicklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_nicklist();

  // repeated int32 winlist = 7;
  inline int winlist_size() const;
  inline void clear_winlist();
  static const int kWinlistFieldNumber = 7;
  inline ::google::protobuf::int32 winlist(int index) const;
  inline void set_winlist(int index, ::google::protobuf::int32 value);
  inline void add_winlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      winlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_winlist();

  // repeated .progame.gdmjhistoryitem hitemlist = 8;
  inline int hitemlist_size() const;
  inline void clear_hitemlist();
  static const int kHitemlistFieldNumber = 8;
  inline const ::progame::gdmjhistoryitem& hitemlist(int index) const;
  inline ::progame::gdmjhistoryitem* mutable_hitemlist(int index);
  inline ::progame::gdmjhistoryitem* add_hitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjhistoryitem >&
      hitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjhistoryitem >*
      mutable_hitemlist();

  // @@protoc_insertion_point(class_scope:progame.gdmjhistory)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_tablemark();
  inline void clear_has_tablemark();
  inline void set_has_gametime();
  inline void clear_has_gametime();
  inline void set_has_playnum();
  inline void clear_has_playnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 tablemark_;
  ::google::protobuf::int32 gametime_;
  ::google::protobuf::int32 playnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > useridlist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> nicklist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > winlist_;
  ::google::protobuf::RepeatedPtrField< ::progame::gdmjhistoryitem > hitemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjhistory* default_instance_;
};
// -------------------------------------------------------------------

class gdmjhistorypair : public ::google::protobuf::Message {
 public:
  gdmjhistorypair();
  virtual ~gdmjhistorypair();

  gdmjhistorypair(const gdmjhistorypair& from);

  inline gdmjhistorypair& operator=(const gdmjhistorypair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjhistorypair& default_instance();

  void Swap(gdmjhistorypair* other);

  // implements Message ----------------------------------------------

  gdmjhistorypair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjhistorypair& from);
  void MergeFrom(const gdmjhistorypair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 packetcode = 1;
  inline bool has_packetcode() const;
  inline void clear_packetcode();
  static const int kPacketcodeFieldNumber = 1;
  inline ::google::protobuf::int32 packetcode() const;
  inline void set_packetcode(::google::protobuf::int32 value);

  // optional string pkginfo = 2;
  inline bool has_pkginfo() const;
  inline void clear_pkginfo();
  static const int kPkginfoFieldNumber = 2;
  inline const ::std::string& pkginfo() const;
  inline void set_pkginfo(const ::std::string& value);
  inline void set_pkginfo(const char* value);
  inline void set_pkginfo(const char* value, size_t size);
  inline ::std::string* mutable_pkginfo();
  inline ::std::string* release_pkginfo();
  inline void set_allocated_pkginfo(::std::string* pkginfo);

  // @@protoc_insertion_point(class_scope:progame.gdmjhistorypair)
 private:
  inline void set_has_packetcode();
  inline void clear_has_packetcode();
  inline void set_has_pkginfo();
  inline void clear_has_pkginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* pkginfo_;
  ::google::protobuf::int32 packetcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjhistorypair* default_instance_;
};
// -------------------------------------------------------------------

class gdmjhandpoker : public ::google::protobuf::Message {
 public:
  gdmjhandpoker();
  virtual ~gdmjhandpoker();

  gdmjhandpoker(const gdmjhandpoker& from);

  inline gdmjhandpoker& operator=(const gdmjhandpoker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gdmjhandpoker& default_instance();

  void Swap(gdmjhandpoker* other);

  // implements Message ----------------------------------------------

  gdmjhandpoker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gdmjhandpoker& from);
  void MergeFrom(const gdmjhandpoker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // repeated .progame.gdmjpoker mjpokerlist = 2;
  inline int mjpokerlist_size() const;
  inline void clear_mjpokerlist();
  static const int kMjpokerlistFieldNumber = 2;
  inline const ::progame::gdmjpoker& mjpokerlist(int index) const;
  inline ::progame::gdmjpoker* mutable_mjpokerlist(int index);
  inline ::progame::gdmjpoker* add_mjpokerlist();
  inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >&
      mjpokerlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >*
      mutable_mjpokerlist();

  // repeated int32 handpoker = 3;
  inline int handpoker_size() const;
  inline void clear_handpoker();
  static const int kHandpokerFieldNumber = 3;
  inline ::google::protobuf::int32 handpoker(int index) const;
  inline void set_handpoker(int index, ::google::protobuf::int32 value);
  inline void add_handpoker(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handpoker() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handpoker();

  // repeated int32 magetlist = 4;
  inline int magetlist_size() const;
  inline void clear_magetlist();
  static const int kMagetlistFieldNumber = 4;
  inline ::google::protobuf::int32 magetlist(int index) const;
  inline void set_magetlist(int index, ::google::protobuf::int32 value);
  inline void add_magetlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      magetlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_magetlist();

  // @@protoc_insertion_point(class_scope:progame.gdmjhandpoker)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker > mjpokerlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handpoker_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > magetlist_;
  ::google::protobuf::int32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_st_5fgdmj_2eproto();
  friend void protobuf_AssignDesc_st_5fgdmj_2eproto();
  friend void protobuf_ShutdownFile_st_5fgdmj_2eproto();

  void InitAsDefaultInstance();
  static gdmjhandpoker* default_instance_;
};
// ===================================================================


// ===================================================================

// gdmjpoker

// optional int32 pokertype = 1;
inline bool gdmjpoker::has_pokertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjpoker::set_has_pokertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjpoker::clear_has_pokertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjpoker::clear_pokertype() {
  pokertype_ = 0;
  clear_has_pokertype();
}
inline ::google::protobuf::int32 gdmjpoker::pokertype() const {
  return pokertype_;
}
inline void gdmjpoker::set_pokertype(::google::protobuf::int32 value) {
  set_has_pokertype();
  pokertype_ = value;
}

// optional int32 typedetail = 2;
inline bool gdmjpoker::has_typedetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjpoker::set_has_typedetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjpoker::clear_has_typedetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjpoker::clear_typedetail() {
  typedetail_ = 0;
  clear_has_typedetail();
}
inline ::google::protobuf::int32 gdmjpoker::typedetail() const {
  return typedetail_;
}
inline void gdmjpoker::set_typedetail(::google::protobuf::int32 value) {
  set_has_typedetail();
  typedetail_ = value;
}

// repeated int32 pokerlist = 3;
inline int gdmjpoker::pokerlist_size() const {
  return pokerlist_.size();
}
inline void gdmjpoker::clear_pokerlist() {
  pokerlist_.Clear();
}
inline ::google::protobuf::int32 gdmjpoker::pokerlist(int index) const {
  return pokerlist_.Get(index);
}
inline void gdmjpoker::set_pokerlist(int index, ::google::protobuf::int32 value) {
  pokerlist_.Set(index, value);
}
inline void gdmjpoker::add_pokerlist(::google::protobuf::int32 value) {
  pokerlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjpoker::pokerlist() const {
  return pokerlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjpoker::mutable_pokerlist() {
  return &pokerlist_;
}

// optional int32 tarchairid = 4;
inline bool gdmjpoker::has_tarchairid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjpoker::set_has_tarchairid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjpoker::clear_has_tarchairid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjpoker::clear_tarchairid() {
  tarchairid_ = 0;
  clear_has_tarchairid();
}
inline ::google::protobuf::int32 gdmjpoker::tarchairid() const {
  return tarchairid_;
}
inline void gdmjpoker::set_tarchairid(::google::protobuf::int32 value) {
  set_has_tarchairid();
  tarchairid_ = value;
}

// -------------------------------------------------------------------

// gdmjuser

// optional int32 userid = 1;
inline bool gdmjuser::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjuser::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjuser::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjuser::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gdmjuser::userid() const {
  return userid_;
}
inline void gdmjuser::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// repeated int32 handpoker = 2;
inline int gdmjuser::handpoker_size() const {
  return handpoker_.size();
}
inline void gdmjuser::clear_handpoker() {
  handpoker_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::handpoker(int index) const {
  return handpoker_.Get(index);
}
inline void gdmjuser::set_handpoker(int index, ::google::protobuf::int32 value) {
  handpoker_.Set(index, value);
}
inline void gdmjuser::add_handpoker(::google::protobuf::int32 value) {
  handpoker_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::handpoker() const {
  return handpoker_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_handpoker() {
  return &handpoker_;
}

// repeated int32 outpoker = 3;
inline int gdmjuser::outpoker_size() const {
  return outpoker_.size();
}
inline void gdmjuser::clear_outpoker() {
  outpoker_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::outpoker(int index) const {
  return outpoker_.Get(index);
}
inline void gdmjuser::set_outpoker(int index, ::google::protobuf::int32 value) {
  outpoker_.Set(index, value);
}
inline void gdmjuser::add_outpoker(::google::protobuf::int32 value) {
  outpoker_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::outpoker() const {
  return outpoker_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_outpoker() {
  return &outpoker_;
}

// repeated .progame.gdmjpoker mjpokerlist = 4;
inline int gdmjuser::mjpokerlist_size() const {
  return mjpokerlist_.size();
}
inline void gdmjuser::clear_mjpokerlist() {
  mjpokerlist_.Clear();
}
inline const ::progame::gdmjpoker& gdmjuser::mjpokerlist(int index) const {
  return mjpokerlist_.Get(index);
}
inline ::progame::gdmjpoker* gdmjuser::mutable_mjpokerlist(int index) {
  return mjpokerlist_.Mutable(index);
}
inline ::progame::gdmjpoker* gdmjuser::add_mjpokerlist() {
  return mjpokerlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >&
gdmjuser::mjpokerlist() const {
  return mjpokerlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >*
gdmjuser::mutable_mjpokerlist() {
  return &mjpokerlist_;
}

// optional int32 playstate = 5;
inline bool gdmjuser::has_playstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjuser::set_has_playstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjuser::clear_has_playstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjuser::clear_playstate() {
  playstate_ = 0;
  clear_has_playstate();
}
inline ::google::protobuf::int32 gdmjuser::playstate() const {
  return playstate_;
}
inline void gdmjuser::set_playstate(::google::protobuf::int32 value) {
  set_has_playstate();
  playstate_ = value;
}

// optional int32 autoplayer = 6;
inline bool gdmjuser::has_autoplayer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjuser::set_has_autoplayer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjuser::clear_has_autoplayer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjuser::clear_autoplayer() {
  autoplayer_ = 0;
  clear_has_autoplayer();
}
inline ::google::protobuf::int32 gdmjuser::autoplayer() const {
  return autoplayer_;
}
inline void gdmjuser::set_autoplayer(::google::protobuf::int32 value) {
  set_has_autoplayer();
  autoplayer_ = value;
}

// optional int32 carryjetton = 8;
inline bool gdmjuser::has_carryjetton() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjuser::set_has_carryjetton() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjuser::clear_has_carryjetton() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjuser::clear_carryjetton() {
  carryjetton_ = 0;
  clear_has_carryjetton();
}
inline ::google::protobuf::int32 gdmjuser::carryjetton() const {
  return carryjetton_;
}
inline void gdmjuser::set_carryjetton(::google::protobuf::int32 value) {
  set_has_carryjetton();
  carryjetton_ = value;
}

// optional .progame.playersimpleinfo psinfo = 9;
inline bool gdmjuser::has_psinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjuser::set_has_psinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjuser::clear_has_psinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjuser::clear_psinfo() {
  if (psinfo_ != NULL) psinfo_->::progame::playersimpleinfo::Clear();
  clear_has_psinfo();
}
inline const ::progame::playersimpleinfo& gdmjuser::psinfo() const {
  return psinfo_ != NULL ? *psinfo_ : *default_instance_->psinfo_;
}
inline ::progame::playersimpleinfo* gdmjuser::mutable_psinfo() {
  set_has_psinfo();
  if (psinfo_ == NULL) psinfo_ = new ::progame::playersimpleinfo;
  return psinfo_;
}
inline ::progame::playersimpleinfo* gdmjuser::release_psinfo() {
  clear_has_psinfo();
  ::progame::playersimpleinfo* temp = psinfo_;
  psinfo_ = NULL;
  return temp;
}
inline void gdmjuser::set_allocated_psinfo(::progame::playersimpleinfo* psinfo) {
  delete psinfo_;
  psinfo_ = psinfo;
  if (psinfo) {
    set_has_psinfo();
  } else {
    clear_has_psinfo();
  }
}

// optional int32 chairid = 10;
inline bool gdmjuser::has_chairid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gdmjuser::set_has_chairid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gdmjuser::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gdmjuser::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 gdmjuser::chairid() const {
  return chairid_;
}
inline void gdmjuser::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 robottime = 11;
inline bool gdmjuser::has_robottime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gdmjuser::set_has_robottime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gdmjuser::clear_has_robottime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gdmjuser::clear_robottime() {
  robottime_ = 0;
  clear_has_robottime();
}
inline ::google::protobuf::int32 gdmjuser::robottime() const {
  return robottime_;
}
inline void gdmjuser::set_robottime(::google::protobuf::int32 value) {
  set_has_robottime();
  robottime_ = value;
}

// repeated int32 tinglist = 12;
inline int gdmjuser::tinglist_size() const {
  return tinglist_.size();
}
inline void gdmjuser::clear_tinglist() {
  tinglist_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::tinglist(int index) const {
  return tinglist_.Get(index);
}
inline void gdmjuser::set_tinglist(int index, ::google::protobuf::int32 value) {
  tinglist_.Set(index, value);
}
inline void gdmjuser::add_tinglist(::google::protobuf::int32 value) {
  tinglist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::tinglist() const {
  return tinglist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_tinglist() {
  return &tinglist_;
}

// repeated int32 tingtype = 13;
inline int gdmjuser::tingtype_size() const {
  return tingtype_.size();
}
inline void gdmjuser::clear_tingtype() {
  tingtype_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::tingtype(int index) const {
  return tingtype_.Get(index);
}
inline void gdmjuser::set_tingtype(int index, ::google::protobuf::int32 value) {
  tingtype_.Set(index, value);
}
inline void gdmjuser::add_tingtype(::google::protobuf::int32 value) {
  tingtype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::tingtype() const {
  return tingtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_tingtype() {
  return &tingtype_;
}

// optional int32 isrobot = 14;
inline bool gdmjuser::has_isrobot() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gdmjuser::set_has_isrobot() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gdmjuser::clear_has_isrobot() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gdmjuser::clear_isrobot() {
  isrobot_ = 0;
  clear_has_isrobot();
}
inline ::google::protobuf::int32 gdmjuser::isrobot() const {
  return isrobot_;
}
inline void gdmjuser::set_isrobot(::google::protobuf::int32 value) {
  set_has_isrobot();
  isrobot_ = value;
}

// optional int32 beinum = 15;
inline bool gdmjuser::has_beinum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gdmjuser::set_has_beinum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gdmjuser::clear_has_beinum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gdmjuser::clear_beinum() {
  beinum_ = 0;
  clear_has_beinum();
}
inline ::google::protobuf::int32 gdmjuser::beinum() const {
  return beinum_;
}
inline void gdmjuser::set_beinum(::google::protobuf::int32 value) {
  set_has_beinum();
  beinum_ = value;
}

// optional int32 prop1 = 30;
inline bool gdmjuser::has_prop1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void gdmjuser::set_has_prop1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void gdmjuser::clear_has_prop1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void gdmjuser::clear_prop1() {
  prop1_ = 0;
  clear_has_prop1();
}
inline ::google::protobuf::int32 gdmjuser::prop1() const {
  return prop1_;
}
inline void gdmjuser::set_prop1(::google::protobuf::int32 value) {
  set_has_prop1();
  prop1_ = value;
}

// optional int32 humark = 31;
inline bool gdmjuser::has_humark() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void gdmjuser::set_has_humark() {
  _has_bits_[0] |= 0x00008000u;
}
inline void gdmjuser::clear_has_humark() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void gdmjuser::clear_humark() {
  humark_ = 0;
  clear_has_humark();
}
inline ::google::protobuf::int32 gdmjuser::humark() const {
  return humark_;
}
inline void gdmjuser::set_humark(::google::protobuf::int32 value) {
  set_has_humark();
  humark_ = value;
}

// optional int32 guohu = 32;
inline bool gdmjuser::has_guohu() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void gdmjuser::set_has_guohu() {
  _has_bits_[0] |= 0x00010000u;
}
inline void gdmjuser::clear_has_guohu() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void gdmjuser::clear_guohu() {
  guohu_ = 0;
  clear_has_guohu();
}
inline ::google::protobuf::int32 gdmjuser::guohu() const {
  return guohu_;
}
inline void gdmjuser::set_guohu(::google::protobuf::int32 value) {
  set_has_guohu();
  guohu_ = value;
}

// repeated int32 guopeng = 33;
inline int gdmjuser::guopeng_size() const {
  return guopeng_.size();
}
inline void gdmjuser::clear_guopeng() {
  guopeng_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::guopeng(int index) const {
  return guopeng_.Get(index);
}
inline void gdmjuser::set_guopeng(int index, ::google::protobuf::int32 value) {
  guopeng_.Set(index, value);
}
inline void gdmjuser::add_guopeng(::google::protobuf::int32 value) {
  guopeng_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::guopeng() const {
  return guopeng_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_guopeng() {
  return &guopeng_;
}

// repeated int32 guogang = 34;
inline int gdmjuser::guogang_size() const {
  return guogang_.size();
}
inline void gdmjuser::clear_guogang() {
  guogang_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::guogang(int index) const {
  return guogang_.Get(index);
}
inline void gdmjuser::set_guogang(int index, ::google::protobuf::int32 value) {
  guogang_.Set(index, value);
}
inline void gdmjuser::add_guogang(::google::protobuf::int32 value) {
  guogang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::guogang() const {
  return guogang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_guogang() {
  return &guogang_;
}

// optional int32 jinhu = 35;
inline bool gdmjuser::has_jinhu() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void gdmjuser::set_has_jinhu() {
  _has_bits_[0] |= 0x00080000u;
}
inline void gdmjuser::clear_has_jinhu() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void gdmjuser::clear_jinhu() {
  jinhu_ = 0;
  clear_has_jinhu();
}
inline ::google::protobuf::int32 gdmjuser::jinhu() const {
  return jinhu_;
}
inline void gdmjuser::set_jinhu(::google::protobuf::int32 value) {
  set_has_jinhu();
  jinhu_ = value;
}

// optional int32 zimoguohu = 36;
inline bool gdmjuser::has_zimoguohu() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void gdmjuser::set_has_zimoguohu() {
  _has_bits_[0] |= 0x00100000u;
}
inline void gdmjuser::clear_has_zimoguohu() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void gdmjuser::clear_zimoguohu() {
  zimoguohu_ = 0;
  clear_has_zimoguohu();
}
inline ::google::protobuf::int32 gdmjuser::zimoguohu() const {
  return zimoguohu_;
}
inline void gdmjuser::set_zimoguohu(::google::protobuf::int32 value) {
  set_has_zimoguohu();
  zimoguohu_ = value;
}

// optional int32 julebu_jetton = 37;
inline bool gdmjuser::has_julebu_jetton() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void gdmjuser::set_has_julebu_jetton() {
  _has_bits_[0] |= 0x00200000u;
}
inline void gdmjuser::clear_has_julebu_jetton() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void gdmjuser::clear_julebu_jetton() {
  julebu_jetton_ = 0;
  clear_has_julebu_jetton();
}
inline ::google::protobuf::int32 gdmjuser::julebu_jetton() const {
  return julebu_jetton_;
}
inline void gdmjuser::set_julebu_jetton(::google::protobuf::int32 value) {
  set_has_julebu_jetton();
  julebu_jetton_ = value;
}

// repeated int32 outhuapoker = 38;
inline int gdmjuser::outhuapoker_size() const {
  return outhuapoker_.size();
}
inline void gdmjuser::clear_outhuapoker() {
  outhuapoker_.Clear();
}
inline ::google::protobuf::int32 gdmjuser::outhuapoker(int index) const {
  return outhuapoker_.Get(index);
}
inline void gdmjuser::set_outhuapoker(int index, ::google::protobuf::int32 value) {
  outhuapoker_.Set(index, value);
}
inline void gdmjuser::add_outhuapoker(::google::protobuf::int32 value) {
  outhuapoker_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjuser::outhuapoker() const {
  return outhuapoker_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjuser::mutable_outhuapoker() {
  return &outhuapoker_;
}

// optional int32 tingcardstate = 39;
inline bool gdmjuser::has_tingcardstate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void gdmjuser::set_has_tingcardstate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void gdmjuser::clear_has_tingcardstate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void gdmjuser::clear_tingcardstate() {
  tingcardstate_ = 0;
  clear_has_tingcardstate();
}
inline ::google::protobuf::int32 gdmjuser::tingcardstate() const {
  return tingcardstate_;
}
inline void gdmjuser::set_tingcardstate(::google::protobuf::int32 value) {
  set_has_tingcardstate();
  tingcardstate_ = value;
}

// optional int32 pokeridgang = 40;
inline bool gdmjuser::has_pokeridgang() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void gdmjuser::set_has_pokeridgang() {
  _has_bits_[0] |= 0x01000000u;
}
inline void gdmjuser::clear_has_pokeridgang() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void gdmjuser::clear_pokeridgang() {
  pokeridgang_ = 0;
  clear_has_pokeridgang();
}
inline ::google::protobuf::int32 gdmjuser::pokeridgang() const {
  return pokeridgang_;
}
inline void gdmjuser::set_pokeridgang(::google::protobuf::int32 value) {
  set_has_pokeridgang();
  pokeridgang_ = value;
}

// -------------------------------------------------------------------

// gdmjnextaction

// repeated int32 actchairid = 1;
inline int gdmjnextaction::actchairid_size() const {
  return actchairid_.size();
}
inline void gdmjnextaction::clear_actchairid() {
  actchairid_.Clear();
}
inline ::google::protobuf::int32 gdmjnextaction::actchairid(int index) const {
  return actchairid_.Get(index);
}
inline void gdmjnextaction::set_actchairid(int index, ::google::protobuf::int32 value) {
  actchairid_.Set(index, value);
}
inline void gdmjnextaction::add_actchairid(::google::protobuf::int32 value) {
  actchairid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjnextaction::actchairid() const {
  return actchairid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjnextaction::mutable_actchairid() {
  return &actchairid_;
}

// optional int32 tarchairid = 2;
inline bool gdmjnextaction::has_tarchairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjnextaction::set_has_tarchairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjnextaction::clear_has_tarchairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjnextaction::clear_tarchairid() {
  tarchairid_ = 0;
  clear_has_tarchairid();
}
inline ::google::protobuf::int32 gdmjnextaction::tarchairid() const {
  return tarchairid_;
}
inline void gdmjnextaction::set_tarchairid(::google::protobuf::int32 value) {
  set_has_tarchairid();
  tarchairid_ = value;
}

// repeated int32 actiontype = 3;
inline int gdmjnextaction::actiontype_size() const {
  return actiontype_.size();
}
inline void gdmjnextaction::clear_actiontype() {
  actiontype_.Clear();
}
inline ::google::protobuf::int32 gdmjnextaction::actiontype(int index) const {
  return actiontype_.Get(index);
}
inline void gdmjnextaction::set_actiontype(int index, ::google::protobuf::int32 value) {
  actiontype_.Set(index, value);
}
inline void gdmjnextaction::add_actiontype(::google::protobuf::int32 value) {
  actiontype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjnextaction::actiontype() const {
  return actiontype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjnextaction::mutable_actiontype() {
  return &actiontype_;
}

// optional int32 actpokerid = 4;
inline bool gdmjnextaction::has_actpokerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjnextaction::set_has_actpokerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjnextaction::clear_has_actpokerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjnextaction::clear_actpokerid() {
  actpokerid_ = 0;
  clear_has_actpokerid();
}
inline ::google::protobuf::int32 gdmjnextaction::actpokerid() const {
  return actpokerid_;
}
inline void gdmjnextaction::set_actpokerid(::google::protobuf::int32 value) {
  set_has_actpokerid();
  actpokerid_ = value;
}

// optional int32 typedetail = 5;
inline bool gdmjnextaction::has_typedetail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjnextaction::set_has_typedetail() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjnextaction::clear_has_typedetail() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjnextaction::clear_typedetail() {
  typedetail_ = 0;
  clear_has_typedetail();
}
inline ::google::protobuf::int32 gdmjnextaction::typedetail() const {
  return typedetail_;
}
inline void gdmjnextaction::set_typedetail(::google::protobuf::int32 value) {
  set_has_typedetail();
  typedetail_ = value;
}

// optional int32 canplay = 6;
inline bool gdmjnextaction::has_canplay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjnextaction::set_has_canplay() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjnextaction::clear_has_canplay() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjnextaction::clear_canplay() {
  canplay_ = 0;
  clear_has_canplay();
}
inline ::google::protobuf::int32 gdmjnextaction::canplay() const {
  return canplay_;
}
inline void gdmjnextaction::set_canplay(::google::protobuf::int32 value) {
  set_has_canplay();
  canplay_ = value;
}

// -------------------------------------------------------------------

// gdmjviprecord

// optional int32 roundid = 1;
inline bool gdmjviprecord::has_roundid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjviprecord::set_has_roundid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjviprecord::clear_has_roundid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjviprecord::clear_roundid() {
  roundid_ = 0;
  clear_has_roundid();
}
inline ::google::protobuf::int32 gdmjviprecord::roundid() const {
  return roundid_;
}
inline void gdmjviprecord::set_roundid(::google::protobuf::int32 value) {
  set_has_roundid();
  roundid_ = value;
}

// repeated int32 score = 2;
inline int gdmjviprecord::score_size() const {
  return score_.size();
}
inline void gdmjviprecord::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::int32 gdmjviprecord::score(int index) const {
  return score_.Get(index);
}
inline void gdmjviprecord::set_score(int index, ::google::protobuf::int32 value) {
  score_.Set(index, value);
}
inline void gdmjviprecord::add_score(::google::protobuf::int32 value) {
  score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjviprecord::score() const {
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjviprecord::mutable_score() {
  return &score_;
}

// -------------------------------------------------------------------

// mjvipinfo

// optional int32 viptype = 1;
inline bool mjvipinfo::has_viptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mjvipinfo::set_has_viptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mjvipinfo::clear_has_viptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mjvipinfo::clear_viptype() {
  viptype_ = 0;
  clear_has_viptype();
}
inline ::google::protobuf::int32 mjvipinfo::viptype() const {
  return viptype_;
}
inline void mjvipinfo::set_viptype(::google::protobuf::int32 value) {
  set_has_viptype();
  viptype_ = value;
}

// -------------------------------------------------------------------

// gdmjplaydetail

// optional int32 chairid = 1;
inline bool gdmjplaydetail::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjplaydetail::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjplaydetail::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjplaydetail::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 gdmjplaydetail::chairid() const {
  return chairid_;
}
inline void gdmjplaydetail::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
}

// optional int32 winnum = 2;
inline bool gdmjplaydetail::has_winnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjplaydetail::set_has_winnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjplaydetail::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjplaydetail::clear_winnum() {
  winnum_ = 0;
  clear_has_winnum();
}
inline ::google::protobuf::int32 gdmjplaydetail::winnum() const {
  return winnum_;
}
inline void gdmjplaydetail::set_winnum(::google::protobuf::int32 value) {
  set_has_winnum();
  winnum_ = value;
}

// optional int32 zimonum = 3;
inline bool gdmjplaydetail::has_zimonum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjplaydetail::set_has_zimonum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjplaydetail::clear_has_zimonum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjplaydetail::clear_zimonum() {
  zimonum_ = 0;
  clear_has_zimonum();
}
inline ::google::protobuf::int32 gdmjplaydetail::zimonum() const {
  return zimonum_;
}
inline void gdmjplaydetail::set_zimonum(::google::protobuf::int32 value) {
  set_has_zimonum();
  zimonum_ = value;
}

// optional int32 hunum = 4;
inline bool gdmjplaydetail::has_hunum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjplaydetail::set_has_hunum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjplaydetail::clear_has_hunum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjplaydetail::clear_hunum() {
  hunum_ = 0;
  clear_has_hunum();
}
inline ::google::protobuf::int32 gdmjplaydetail::hunum() const {
  return hunum_;
}
inline void gdmjplaydetail::set_hunum(::google::protobuf::int32 value) {
  set_has_hunum();
  hunum_ = value;
}

// optional int32 dianpaonum = 5;
inline bool gdmjplaydetail::has_dianpaonum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjplaydetail::set_has_dianpaonum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjplaydetail::clear_has_dianpaonum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjplaydetail::clear_dianpaonum() {
  dianpaonum_ = 0;
  clear_has_dianpaonum();
}
inline ::google::protobuf::int32 gdmjplaydetail::dianpaonum() const {
  return dianpaonum_;
}
inline void gdmjplaydetail::set_dianpaonum(::google::protobuf::int32 value) {
  set_has_dianpaonum();
  dianpaonum_ = value;
}

// optional int32 jiepaonum = 6;
inline bool gdmjplaydetail::has_jiepaonum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjplaydetail::set_has_jiepaonum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjplaydetail::clear_has_jiepaonum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjplaydetail::clear_jiepaonum() {
  jiepaonum_ = 0;
  clear_has_jiepaonum();
}
inline ::google::protobuf::int32 gdmjplaydetail::jiepaonum() const {
  return jiepaonum_;
}
inline void gdmjplaydetail::set_jiepaonum(::google::protobuf::int32 value) {
  set_has_jiepaonum();
  jiepaonum_ = value;
}

// optional int32 angangnum = 7;
inline bool gdmjplaydetail::has_angangnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjplaydetail::set_has_angangnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjplaydetail::clear_has_angangnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjplaydetail::clear_angangnum() {
  angangnum_ = 0;
  clear_has_angangnum();
}
inline ::google::protobuf::int32 gdmjplaydetail::angangnum() const {
  return angangnum_;
}
inline void gdmjplaydetail::set_angangnum(::google::protobuf::int32 value) {
  set_has_angangnum();
  angangnum_ = value;
}

// optional int32 minggangnum = 8;
inline bool gdmjplaydetail::has_minggangnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjplaydetail::set_has_minggangnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjplaydetail::clear_has_minggangnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjplaydetail::clear_minggangnum() {
  minggangnum_ = 0;
  clear_has_minggangnum();
}
inline ::google::protobuf::int32 gdmjplaydetail::minggangnum() const {
  return minggangnum_;
}
inline void gdmjplaydetail::set_minggangnum(::google::protobuf::int32 value) {
  set_has_minggangnum();
  minggangnum_ = value;
}

// optional int32 wuguizimo = 9;
inline bool gdmjplaydetail::has_wuguizimo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gdmjplaydetail::set_has_wuguizimo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gdmjplaydetail::clear_has_wuguizimo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gdmjplaydetail::clear_wuguizimo() {
  wuguizimo_ = 0;
  clear_has_wuguizimo();
}
inline ::google::protobuf::int32 gdmjplaydetail::wuguizimo() const {
  return wuguizimo_;
}
inline void gdmjplaydetail::set_wuguizimo(::google::protobuf::int32 value) {
  set_has_wuguizimo();
  wuguizimo_ = value;
}

// optional int32 youguizimo = 10;
inline bool gdmjplaydetail::has_youguizimo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gdmjplaydetail::set_has_youguizimo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gdmjplaydetail::clear_has_youguizimo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gdmjplaydetail::clear_youguizimo() {
  youguizimo_ = 0;
  clear_has_youguizimo();
}
inline ::google::protobuf::int32 gdmjplaydetail::youguizimo() const {
  return youguizimo_;
}
inline void gdmjplaydetail::set_youguizimo(::google::protobuf::int32 value) {
  set_has_youguizimo();
  youguizimo_ = value;
}

// optional int32 zhongmanum = 11;
inline bool gdmjplaydetail::has_zhongmanum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gdmjplaydetail::set_has_zhongmanum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gdmjplaydetail::clear_has_zhongmanum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gdmjplaydetail::clear_zhongmanum() {
  zhongmanum_ = 0;
  clear_has_zhongmanum();
}
inline ::google::protobuf::int32 gdmjplaydetail::zhongmanum() const {
  return zhongmanum_;
}
inline void gdmjplaydetail::set_zhongmanum(::google::protobuf::int32 value) {
  set_has_zhongmanum();
  zhongmanum_ = value;
}

// optional int32 maxMultiple = 12;
inline bool gdmjplaydetail::has_maxmultiple() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void gdmjplaydetail::set_has_maxmultiple() {
  _has_bits_[0] |= 0x00000800u;
}
inline void gdmjplaydetail::clear_has_maxmultiple() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void gdmjplaydetail::clear_maxmultiple() {
  maxmultiple_ = 0;
  clear_has_maxmultiple();
}
inline ::google::protobuf::int32 gdmjplaydetail::maxmultiple() const {
  return maxmultiple_;
}
inline void gdmjplaydetail::set_maxmultiple(::google::protobuf::int32 value) {
  set_has_maxmultiple();
  maxmultiple_ = value;
}

// -------------------------------------------------------------------

// gdmjinfo

// optional int32 mjtype = 1;
inline bool gdmjinfo::has_mjtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjinfo::set_has_mjtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjinfo::clear_has_mjtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjinfo::clear_mjtype() {
  mjtype_ = 0;
  clear_has_mjtype();
}
inline ::google::protobuf::int32 gdmjinfo::mjtype() const {
  return mjtype_;
}
inline void gdmjinfo::set_mjtype(::google::protobuf::int32 value) {
  set_has_mjtype();
  mjtype_ = value;
}

// optional int32 tabletype = 2;
inline bool gdmjinfo::has_tabletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjinfo::set_has_tabletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjinfo::clear_has_tabletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjinfo::clear_tabletype() {
  tabletype_ = 0;
  clear_has_tabletype();
}
inline ::google::protobuf::int32 gdmjinfo::tabletype() const {
  return tabletype_;
}
inline void gdmjinfo::set_tabletype(::google::protobuf::int32 value) {
  set_has_tabletype();
  tabletype_ = value;
}

// optional int32 tableid = 3;
inline bool gdmjinfo::has_tableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjinfo::set_has_tableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjinfo::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjinfo::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 gdmjinfo::tableid() const {
  return tableid_;
}
inline void gdmjinfo::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
}

// optional int32 tablemark = 4;
inline bool gdmjinfo::has_tablemark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjinfo::set_has_tablemark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjinfo::clear_has_tablemark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjinfo::clear_tablemark() {
  tablemark_ = 0;
  clear_has_tablemark();
}
inline ::google::protobuf::int32 gdmjinfo::tablemark() const {
  return tablemark_;
}
inline void gdmjinfo::set_tablemark(::google::protobuf::int32 value) {
  set_has_tablemark();
  tablemark_ = value;
}

// optional int32 manum = 5;
inline bool gdmjinfo::has_manum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjinfo::set_has_manum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjinfo::clear_has_manum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjinfo::clear_manum() {
  manum_ = 0;
  clear_has_manum();
}
inline ::google::protobuf::int32 gdmjinfo::manum() const {
  return manum_;
}
inline void gdmjinfo::set_manum(::google::protobuf::int32 value) {
  set_has_manum();
  manum_ = value;
}

// optional int32 doubleamount = 6;
inline bool gdmjinfo::has_doubleamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjinfo::set_has_doubleamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjinfo::clear_has_doubleamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjinfo::clear_doubleamount() {
  doubleamount_ = 0;
  clear_has_doubleamount();
}
inline ::google::protobuf::int32 gdmjinfo::doubleamount() const {
  return doubleamount_;
}
inline void gdmjinfo::set_doubleamount(::google::protobuf::int32 value) {
  set_has_doubleamount();
  doubleamount_ = value;
}

// optional int32 pourjetton = 7;
inline bool gdmjinfo::has_pourjetton() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjinfo::set_has_pourjetton() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjinfo::clear_has_pourjetton() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjinfo::clear_pourjetton() {
  pourjetton_ = 0;
  clear_has_pourjetton();
}
inline ::google::protobuf::int32 gdmjinfo::pourjetton() const {
  return pourjetton_;
}
inline void gdmjinfo::set_pourjetton(::google::protobuf::int32 value) {
  set_has_pourjetton();
  pourjetton_ = value;
}

// optional int32 fengid = 8;
inline bool gdmjinfo::has_fengid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjinfo::set_has_fengid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjinfo::clear_has_fengid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjinfo::clear_fengid() {
  fengid_ = 0;
  clear_has_fengid();
}
inline ::google::protobuf::int32 gdmjinfo::fengid() const {
  return fengid_;
}
inline void gdmjinfo::set_fengid(::google::protobuf::int32 value) {
  set_has_fengid();
  fengid_ = value;
}

// optional int32 laizinum = 9;
inline bool gdmjinfo::has_laizinum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gdmjinfo::set_has_laizinum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gdmjinfo::clear_has_laizinum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gdmjinfo::clear_laizinum() {
  laizinum_ = 0;
  clear_has_laizinum();
}
inline ::google::protobuf::int32 gdmjinfo::laizinum() const {
  return laizinum_;
}
inline void gdmjinfo::set_laizinum(::google::protobuf::int32 value) {
  set_has_laizinum();
  laizinum_ = value;
}

// optional int32 frameid = 10;
inline bool gdmjinfo::has_frameid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gdmjinfo::set_has_frameid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gdmjinfo::clear_has_frameid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gdmjinfo::clear_frameid() {
  frameid_ = 0;
  clear_has_frameid();
}
inline ::google::protobuf::int32 gdmjinfo::frameid() const {
  return frameid_;
}
inline void gdmjinfo::set_frameid(::google::protobuf::int32 value) {
  set_has_frameid();
  frameid_ = value;
}

// optional int32 status = 11;
inline bool gdmjinfo::has_status() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gdmjinfo::set_has_status() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gdmjinfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gdmjinfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 gdmjinfo::status() const {
  return status_;
}
inline void gdmjinfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated int32 publicpoker = 12;
inline int gdmjinfo::publicpoker_size() const {
  return publicpoker_.size();
}
inline void gdmjinfo::clear_publicpoker() {
  publicpoker_.Clear();
}
inline ::google::protobuf::int32 gdmjinfo::publicpoker(int index) const {
  return publicpoker_.Get(index);
}
inline void gdmjinfo::set_publicpoker(int index, ::google::protobuf::int32 value) {
  publicpoker_.Set(index, value);
}
inline void gdmjinfo::add_publicpoker(::google::protobuf::int32 value) {
  publicpoker_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjinfo::publicpoker() const {
  return publicpoker_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjinfo::mutable_publicpoker() {
  return &publicpoker_;
}

// optional int32 maxplayernum = 13;
inline bool gdmjinfo::has_maxplayernum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gdmjinfo::set_has_maxplayernum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gdmjinfo::clear_has_maxplayernum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gdmjinfo::clear_maxplayernum() {
  maxplayernum_ = 0;
  clear_has_maxplayernum();
}
inline ::google::protobuf::int32 gdmjinfo::maxplayernum() const {
  return maxplayernum_;
}
inline void gdmjinfo::set_maxplayernum(::google::protobuf::int32 value) {
  set_has_maxplayernum();
  maxplayernum_ = value;
}

// optional int32 playernum = 14;
inline bool gdmjinfo::has_playernum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gdmjinfo::set_has_playernum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gdmjinfo::clear_has_playernum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gdmjinfo::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google::protobuf::int32 gdmjinfo::playernum() const {
  return playernum_;
}
inline void gdmjinfo::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
}

// optional int32 viptable = 15;
inline bool gdmjinfo::has_viptable() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void gdmjinfo::set_has_viptable() {
  _has_bits_[0] |= 0x00004000u;
}
inline void gdmjinfo::clear_has_viptable() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void gdmjinfo::clear_viptable() {
  viptable_ = 0;
  clear_has_viptable();
}
inline ::google::protobuf::int32 gdmjinfo::viptable() const {
  return viptable_;
}
inline void gdmjinfo::set_viptable(::google::protobuf::int32 value) {
  set_has_viptable();
  viptable_ = value;
}

// optional int32 timemark = 16;
inline bool gdmjinfo::has_timemark() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void gdmjinfo::set_has_timemark() {
  _has_bits_[0] |= 0x00008000u;
}
inline void gdmjinfo::clear_has_timemark() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void gdmjinfo::clear_timemark() {
  timemark_ = 0;
  clear_has_timemark();
}
inline ::google::protobuf::int32 gdmjinfo::timemark() const {
  return timemark_;
}
inline void gdmjinfo::set_timemark(::google::protobuf::int32 value) {
  set_has_timemark();
  timemark_ = value;
}

// optional int32 bankerpos = 17;
inline bool gdmjinfo::has_bankerpos() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void gdmjinfo::set_has_bankerpos() {
  _has_bits_[0] |= 0x00010000u;
}
inline void gdmjinfo::clear_has_bankerpos() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void gdmjinfo::clear_bankerpos() {
  bankerpos_ = 0;
  clear_has_bankerpos();
}
inline ::google::protobuf::int32 gdmjinfo::bankerpos() const {
  return bankerpos_;
}
inline void gdmjinfo::set_bankerpos(::google::protobuf::int32 value) {
  set_has_bankerpos();
  bankerpos_ = value;
}

// optional int32 prevpos = 18;
inline bool gdmjinfo::has_prevpos() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void gdmjinfo::set_has_prevpos() {
  _has_bits_[0] |= 0x00020000u;
}
inline void gdmjinfo::clear_has_prevpos() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void gdmjinfo::clear_prevpos() {
  prevpos_ = 0;
  clear_has_prevpos();
}
inline ::google::protobuf::int32 gdmjinfo::prevpos() const {
  return prevpos_;
}
inline void gdmjinfo::set_prevpos(::google::protobuf::int32 value) {
  set_has_prevpos();
  prevpos_ = value;
}

// optional int32 userstate = 19;
inline bool gdmjinfo::has_userstate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void gdmjinfo::set_has_userstate() {
  _has_bits_[0] |= 0x00040000u;
}
inline void gdmjinfo::clear_has_userstate() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void gdmjinfo::clear_userstate() {
  userstate_ = 0;
  clear_has_userstate();
}
inline ::google::protobuf::int32 gdmjinfo::userstate() const {
  return userstate_;
}
inline void gdmjinfo::set_userstate(::google::protobuf::int32 value) {
  set_has_userstate();
  userstate_ = value;
}

// optional int32 bankercount = 20;
inline bool gdmjinfo::has_bankercount() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void gdmjinfo::set_has_bankercount() {
  _has_bits_[0] |= 0x00080000u;
}
inline void gdmjinfo::clear_has_bankercount() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void gdmjinfo::clear_bankercount() {
  bankercount_ = 0;
  clear_has_bankercount();
}
inline ::google::protobuf::int32 gdmjinfo::bankercount() const {
  return bankercount_;
}
inline void gdmjinfo::set_bankercount(::google::protobuf::int32 value) {
  set_has_bankercount();
  bankercount_ = value;
}

// optional int32 beingpoker = 21;
inline bool gdmjinfo::has_beingpoker() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void gdmjinfo::set_has_beingpoker() {
  _has_bits_[0] |= 0x00100000u;
}
inline void gdmjinfo::clear_has_beingpoker() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void gdmjinfo::clear_beingpoker() {
  beingpoker_ = 0;
  clear_has_beingpoker();
}
inline ::google::protobuf::int32 gdmjinfo::beingpoker() const {
  return beingpoker_;
}
inline void gdmjinfo::set_beingpoker(::google::protobuf::int32 value) {
  set_has_beingpoker();
  beingpoker_ = value;
}

// optional int32 actiontime = 22;
inline bool gdmjinfo::has_actiontime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void gdmjinfo::set_has_actiontime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void gdmjinfo::clear_has_actiontime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void gdmjinfo::clear_actiontime() {
  actiontime_ = 0;
  clear_has_actiontime();
}
inline ::google::protobuf::int32 gdmjinfo::actiontime() const {
  return actiontime_;
}
inline void gdmjinfo::set_actiontime(::google::protobuf::int32 value) {
  set_has_actiontime();
  actiontime_ = value;
}

// optional int32 ownerid = 23;
inline bool gdmjinfo::has_ownerid() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void gdmjinfo::set_has_ownerid() {
  _has_bits_[0] |= 0x00400000u;
}
inline void gdmjinfo::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void gdmjinfo::clear_ownerid() {
  ownerid_ = 0;
  clear_has_ownerid();
}
inline ::google::protobuf::int32 gdmjinfo::ownerid() const {
  return ownerid_;
}
inline void gdmjinfo::set_ownerid(::google::protobuf::int32 value) {
  set_has_ownerid();
  ownerid_ = value;
}

// repeated int32 situser = 24;
inline int gdmjinfo::situser_size() const {
  return situser_.size();
}
inline void gdmjinfo::clear_situser() {
  situser_.Clear();
}
inline ::google::protobuf::int32 gdmjinfo::situser(int index) const {
  return situser_.Get(index);
}
inline void gdmjinfo::set_situser(int index, ::google::protobuf::int32 value) {
  situser_.Set(index, value);
}
inline void gdmjinfo::add_situser(::google::protobuf::int32 value) {
  situser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjinfo::situser() const {
  return situser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjinfo::mutable_situser() {
  return &situser_;
}

// repeated int32 standuser = 25;
inline int gdmjinfo::standuser_size() const {
  return standuser_.size();
}
inline void gdmjinfo::clear_standuser() {
  standuser_.Clear();
}
inline ::google::protobuf::int32 gdmjinfo::standuser(int index) const {
  return standuser_.Get(index);
}
inline void gdmjinfo::set_standuser(int index, ::google::protobuf::int32 value) {
  standuser_.Set(index, value);
}
inline void gdmjinfo::add_standuser(::google::protobuf::int32 value) {
  standuser_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjinfo::standuser() const {
  return standuser_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjinfo::mutable_standuser() {
  return &standuser_;
}

// optional .progame.gdmjnextaction nextinfo = 26;
inline bool gdmjinfo::has_nextinfo() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void gdmjinfo::set_has_nextinfo() {
  _has_bits_[0] |= 0x02000000u;
}
inline void gdmjinfo::clear_has_nextinfo() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void gdmjinfo::clear_nextinfo() {
  if (nextinfo_ != NULL) nextinfo_->::progame::gdmjnextaction::Clear();
  clear_has_nextinfo();
}
inline const ::progame::gdmjnextaction& gdmjinfo::nextinfo() const {
  return nextinfo_ != NULL ? *nextinfo_ : *default_instance_->nextinfo_;
}
inline ::progame::gdmjnextaction* gdmjinfo::mutable_nextinfo() {
  set_has_nextinfo();
  if (nextinfo_ == NULL) nextinfo_ = new ::progame::gdmjnextaction;
  return nextinfo_;
}
inline ::progame::gdmjnextaction* gdmjinfo::release_nextinfo() {
  clear_has_nextinfo();
  ::progame::gdmjnextaction* temp = nextinfo_;
  nextinfo_ = NULL;
  return temp;
}
inline void gdmjinfo::set_allocated_nextinfo(::progame::gdmjnextaction* nextinfo) {
  delete nextinfo_;
  nextinfo_ = nextinfo;
  if (nextinfo) {
    set_has_nextinfo();
  } else {
    clear_has_nextinfo();
  }
}

// repeated int32 winchairlist = 27;
inline int gdmjinfo::winchairlist_size() const {
  return winchairlist_.size();
}
inline void gdmjinfo::clear_winchairlist() {
  winchairlist_.Clear();
}
inline ::google::protobuf::int32 gdmjinfo::winchairlist(int index) const {
  return winchairlist_.Get(index);
}
inline void gdmjinfo::set_winchairlist(int index, ::google::protobuf::int32 value) {
  winchairlist_.Set(index, value);
}
inline void gdmjinfo::add_winchairlist(::google::protobuf::int32 value) {
  winchairlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjinfo::winchairlist() const {
  return winchairlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjinfo::mutable_winchairlist() {
  return &winchairlist_;
}

// optional int32 tableuserid = 28;
inline bool gdmjinfo::has_tableuserid() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void gdmjinfo::set_has_tableuserid() {
  _has_bits_[0] |= 0x08000000u;
}
inline void gdmjinfo::clear_has_tableuserid() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void gdmjinfo::clear_tableuserid() {
  tableuserid_ = 0;
  clear_has_tableuserid();
}
inline ::google::protobuf::int32 gdmjinfo::tableuserid() const {
  return tableuserid_;
}
inline void gdmjinfo::set_tableuserid(::google::protobuf::int32 value) {
  set_has_tableuserid();
  tableuserid_ = value;
}

// optional int32 maxvipnum = 29;
inline bool gdmjinfo::has_maxvipnum() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void gdmjinfo::set_has_maxvipnum() {
  _has_bits_[0] |= 0x10000000u;
}
inline void gdmjinfo::clear_has_maxvipnum() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void gdmjinfo::clear_maxvipnum() {
  maxvipnum_ = 0;
  clear_has_maxvipnum();
}
inline ::google::protobuf::int32 gdmjinfo::maxvipnum() const {
  return maxvipnum_;
}
inline void gdmjinfo::set_maxvipnum(::google::protobuf::int32 value) {
  set_has_maxvipnum();
  maxvipnum_ = value;
}

// optional int32 usevipnum = 30;
inline bool gdmjinfo::has_usevipnum() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void gdmjinfo::set_has_usevipnum() {
  _has_bits_[0] |= 0x20000000u;
}
inline void gdmjinfo::clear_has_usevipnum() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void gdmjinfo::clear_usevipnum() {
  usevipnum_ = 0;
  clear_has_usevipnum();
}
inline ::google::protobuf::int32 gdmjinfo::usevipnum() const {
  return usevipnum_;
}
inline void gdmjinfo::set_usevipnum(::google::protobuf::int32 value) {
  set_has_usevipnum();
  usevipnum_ = value;
}

// optional .progame.gdmjviprecord viprecord = 31;
inline bool gdmjinfo::has_viprecord() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void gdmjinfo::set_has_viprecord() {
  _has_bits_[0] |= 0x40000000u;
}
inline void gdmjinfo::clear_has_viprecord() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void gdmjinfo::clear_viprecord() {
  if (viprecord_ != NULL) viprecord_->::progame::gdmjviprecord::Clear();
  clear_has_viprecord();
}
inline const ::progame::gdmjviprecord& gdmjinfo::viprecord() const {
  return viprecord_ != NULL ? *viprecord_ : *default_instance_->viprecord_;
}
inline ::progame::gdmjviprecord* gdmjinfo::mutable_viprecord() {
  set_has_viprecord();
  if (viprecord_ == NULL) viprecord_ = new ::progame::gdmjviprecord;
  return viprecord_;
}
inline ::progame::gdmjviprecord* gdmjinfo::release_viprecord() {
  clear_has_viprecord();
  ::progame::gdmjviprecord* temp = viprecord_;
  viprecord_ = NULL;
  return temp;
}
inline void gdmjinfo::set_allocated_viprecord(::progame::gdmjviprecord* viprecord) {
  delete viprecord_;
  viprecord_ = viprecord;
  if (viprecord) {
    set_has_viprecord();
  } else {
    clear_has_viprecord();
  }
}

// repeated .progame.gdmjviprecord recordlist = 32;
inline int gdmjinfo::recordlist_size() const {
  return recordlist_.size();
}
inline void gdmjinfo::clear_recordlist() {
  recordlist_.Clear();
}
inline const ::progame::gdmjviprecord& gdmjinfo::recordlist(int index) const {
  return recordlist_.Get(index);
}
inline ::progame::gdmjviprecord* gdmjinfo::mutable_recordlist(int index) {
  return recordlist_.Mutable(index);
}
inline ::progame::gdmjviprecord* gdmjinfo::add_recordlist() {
  return recordlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjviprecord >&
gdmjinfo::recordlist() const {
  return recordlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjviprecord >*
gdmjinfo::mutable_recordlist() {
  return &recordlist_;
}

// repeated int32 guilist = 33;
inline int gdmjinfo::guilist_size() const {
  return guilist_.size();
}
inline void gdmjinfo::clear_guilist() {
  guilist_.Clear();
}
inline ::google::protobuf::int32 gdmjinfo::guilist(int index) const {
  return guilist_.Get(index);
}
inline void gdmjinfo::set_guilist(int index, ::google::protobuf::int32 value) {
  guilist_.Set(index, value);
}
inline void gdmjinfo::add_guilist(::google::protobuf::int32 value) {
  guilist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjinfo::guilist() const {
  return guilist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjinfo::mutable_guilist() {
  return &guilist_;
}

// repeated int32 chihulist = 34;
inline int gdmjinfo::chihulist_size() const {
  return chihulist_.size();
}
inline void gdmjinfo::clear_chihulist() {
  chihulist_.Clear();
}
inline ::google::protobuf::int32 gdmjinfo::chihulist(int index) const {
  return chihulist_.Get(index);
}
inline void gdmjinfo::set_chihulist(int index, ::google::protobuf::int32 value) {
  chihulist_.Set(index, value);
}
inline void gdmjinfo::add_chihulist(::google::protobuf::int32 value) {
  chihulist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjinfo::chihulist() const {
  return chihulist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjinfo::mutable_chihulist() {
  return &chihulist_;
}

// optional int32 wintype = 35;
inline bool gdmjinfo::has_wintype() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void gdmjinfo::set_has_wintype() {
  _has_bits_[1] |= 0x00000004u;
}
inline void gdmjinfo::clear_has_wintype() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void gdmjinfo::clear_wintype() {
  wintype_ = 0;
  clear_has_wintype();
}
inline ::google::protobuf::int32 gdmjinfo::wintype() const {
  return wintype_;
}
inline void gdmjinfo::set_wintype(::google::protobuf::int32 value) {
  set_has_wintype();
  wintype_ = value;
}

// optional int32 dissolveinfo = 37;
inline bool gdmjinfo::has_dissolveinfo() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void gdmjinfo::set_has_dissolveinfo() {
  _has_bits_[1] |= 0x00000008u;
}
inline void gdmjinfo::clear_has_dissolveinfo() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void gdmjinfo::clear_dissolveinfo() {
  dissolveinfo_ = 0;
  clear_has_dissolveinfo();
}
inline ::google::protobuf::int32 gdmjinfo::dissolveinfo() const {
  return dissolveinfo_;
}
inline void gdmjinfo::set_dissolveinfo(::google::protobuf::int32 value) {
  set_has_dissolveinfo();
  dissolveinfo_ = value;
}

// optional string straction = 38;
inline bool gdmjinfo::has_straction() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void gdmjinfo::set_has_straction() {
  _has_bits_[1] |= 0x00000010u;
}
inline void gdmjinfo::clear_has_straction() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void gdmjinfo::clear_straction() {
  if (straction_ != &::google::protobuf::internal::kEmptyString) {
    straction_->clear();
  }
  clear_has_straction();
}
inline const ::std::string& gdmjinfo::straction() const {
  return *straction_;
}
inline void gdmjinfo::set_straction(const ::std::string& value) {
  set_has_straction();
  if (straction_ == &::google::protobuf::internal::kEmptyString) {
    straction_ = new ::std::string;
  }
  straction_->assign(value);
}
inline void gdmjinfo::set_straction(const char* value) {
  set_has_straction();
  if (straction_ == &::google::protobuf::internal::kEmptyString) {
    straction_ = new ::std::string;
  }
  straction_->assign(value);
}
inline void gdmjinfo::set_straction(const char* value, size_t size) {
  set_has_straction();
  if (straction_ == &::google::protobuf::internal::kEmptyString) {
    straction_ = new ::std::string;
  }
  straction_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjinfo::mutable_straction() {
  set_has_straction();
  if (straction_ == &::google::protobuf::internal::kEmptyString) {
    straction_ = new ::std::string;
  }
  return straction_;
}
inline ::std::string* gdmjinfo::release_straction() {
  clear_has_straction();
  if (straction_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straction_;
    straction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gdmjinfo::set_allocated_straction(::std::string* straction) {
  if (straction_ != &::google::protobuf::internal::kEmptyString) {
    delete straction_;
  }
  if (straction) {
    set_has_straction();
    straction_ = straction;
  } else {
    clear_has_straction();
    straction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 paytype = 39;
inline bool gdmjinfo::has_paytype() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void gdmjinfo::set_has_paytype() {
  _has_bits_[1] |= 0x00000020u;
}
inline void gdmjinfo::clear_has_paytype() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void gdmjinfo::clear_paytype() {
  paytype_ = 0;
  clear_has_paytype();
}
inline ::google::protobuf::int32 gdmjinfo::paytype() const {
  return paytype_;
}
inline void gdmjinfo::set_paytype(::google::protobuf::int32 value) {
  set_has_paytype();
  paytype_ = value;
}

// optional int32 payway = 40;
inline bool gdmjinfo::has_payway() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void gdmjinfo::set_has_payway() {
  _has_bits_[1] |= 0x00000040u;
}
inline void gdmjinfo::clear_has_payway() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void gdmjinfo::clear_payway() {
  payway_ = 0;
  clear_has_payway();
}
inline ::google::protobuf::int32 gdmjinfo::payway() const {
  return payway_;
}
inline void gdmjinfo::set_payway(::google::protobuf::int32 value) {
  set_has_payway();
  payway_ = value;
}

// optional int32 paynum = 41;
inline bool gdmjinfo::has_paynum() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void gdmjinfo::set_has_paynum() {
  _has_bits_[1] |= 0x00000080u;
}
inline void gdmjinfo::clear_has_paynum() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void gdmjinfo::clear_paynum() {
  paynum_ = 0;
  clear_has_paynum();
}
inline ::google::protobuf::int32 gdmjinfo::paynum() const {
  return paynum_;
}
inline void gdmjinfo::set_paynum(::google::protobuf::int32 value) {
  set_has_paynum();
  paynum_ = value;
}

// optional int32 genzhuang = 42;
inline bool gdmjinfo::has_genzhuang() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void gdmjinfo::set_has_genzhuang() {
  _has_bits_[1] |= 0x00000100u;
}
inline void gdmjinfo::clear_has_genzhuang() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void gdmjinfo::clear_genzhuang() {
  genzhuang_ = 0;
  clear_has_genzhuang();
}
inline ::google::protobuf::int32 gdmjinfo::genzhuang() const {
  return genzhuang_;
}
inline void gdmjinfo::set_genzhuang(::google::protobuf::int32 value) {
  set_has_genzhuang();
  genzhuang_ = value;
}

// optional int32 julebuid = 43;
inline bool gdmjinfo::has_julebuid() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void gdmjinfo::set_has_julebuid() {
  _has_bits_[1] |= 0x00000200u;
}
inline void gdmjinfo::clear_has_julebuid() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void gdmjinfo::clear_julebuid() {
  julebuid_ = 0;
  clear_has_julebuid();
}
inline ::google::protobuf::int32 gdmjinfo::julebuid() const {
  return julebuid_;
}
inline void gdmjinfo::set_julebuid(::google::protobuf::int32 value) {
  set_has_julebuid();
  julebuid_ = value;
}

// optional int32 julebutype = 44;
inline bool gdmjinfo::has_julebutype() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void gdmjinfo::set_has_julebutype() {
  _has_bits_[1] |= 0x00000400u;
}
inline void gdmjinfo::clear_has_julebutype() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void gdmjinfo::clear_julebutype() {
  julebutype_ = 0;
  clear_has_julebutype();
}
inline ::google::protobuf::int32 gdmjinfo::julebutype() const {
  return julebutype_;
}
inline void gdmjinfo::set_julebutype(::google::protobuf::int32 value) {
  set_has_julebutype();
  julebutype_ = value;
}

// -------------------------------------------------------------------

// gdmjtdh

// optional int32 mjtype = 1;
inline bool gdmjtdh::has_mjtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjtdh::set_has_mjtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjtdh::clear_has_mjtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjtdh::clear_mjtype() {
  mjtype_ = 0;
  clear_has_mjtype();
}
inline ::google::protobuf::int32 gdmjtdh::mjtype() const {
  return mjtype_;
}
inline void gdmjtdh::set_mjtype(::google::protobuf::int32 value) {
  set_has_mjtype();
  mjtype_ = value;
}

// optional int32 typegui = 2;
inline bool gdmjtdh::has_typegui() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjtdh::set_has_typegui() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjtdh::clear_has_typegui() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjtdh::clear_typegui() {
  typegui_ = 0;
  clear_has_typegui();
}
inline ::google::protobuf::int32 gdmjtdh::typegui() const {
  return typegui_;
}
inline void gdmjtdh::set_typegui(::google::protobuf::int32 value) {
  set_has_typegui();
  typegui_ = value;
}

// optional int32 manum = 3;
inline bool gdmjtdh::has_manum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjtdh::set_has_manum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjtdh::clear_has_manum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjtdh::clear_manum() {
  manum_ = 0;
  clear_has_manum();
}
inline ::google::protobuf::int32 gdmjtdh::manum() const {
  return manum_;
}
inline void gdmjtdh::set_manum(::google::protobuf::int32 value) {
  set_has_manum();
  manum_ = value;
}

// optional int32 shuanggui = 4;
inline bool gdmjtdh::has_shuanggui() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjtdh::set_has_shuanggui() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjtdh::clear_has_shuanggui() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjtdh::clear_shuanggui() {
  shuanggui_ = 0;
  clear_has_shuanggui();
}
inline ::google::protobuf::int32 gdmjtdh::shuanggui() const {
  return shuanggui_;
}
inline void gdmjtdh::set_shuanggui(::google::protobuf::int32 value) {
  set_has_shuanggui();
  shuanggui_ = value;
}

// optional int32 kehuqidui = 11;
inline bool gdmjtdh::has_kehuqidui() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjtdh::set_has_kehuqidui() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjtdh::clear_has_kehuqidui() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjtdh::clear_kehuqidui() {
  kehuqidui_ = 0;
  clear_has_kehuqidui();
}
inline ::google::protobuf::int32 gdmjtdh::kehuqidui() const {
  return kehuqidui_;
}
inline void gdmjtdh::set_kehuqidui(::google::protobuf::int32 value) {
  set_has_kehuqidui();
  kehuqidui_ = value;
}

// optional int32 qiduijiafan = 12;
inline bool gdmjtdh::has_qiduijiafan() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjtdh::set_has_qiduijiafan() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjtdh::clear_has_qiduijiafan() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjtdh::clear_qiduijiafan() {
  qiduijiafan_ = 0;
  clear_has_qiduijiafan();
}
inline ::google::protobuf::int32 gdmjtdh::qiduijiafan() const {
  return qiduijiafan_;
}
inline void gdmjtdh::set_qiduijiafan(::google::protobuf::int32 value) {
  set_has_qiduijiafan();
  qiduijiafan_ = value;
}

// optional int32 keqiangganghu = 13;
inline bool gdmjtdh::has_keqiangganghu() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjtdh::set_has_keqiangganghu() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjtdh::clear_has_keqiangganghu() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjtdh::clear_keqiangganghu() {
  keqiangganghu_ = 0;
  clear_has_keqiangganghu();
}
inline ::google::protobuf::int32 gdmjtdh::keqiangganghu() const {
  return keqiangganghu_;
}
inline void gdmjtdh::set_keqiangganghu(::google::protobuf::int32 value) {
  set_has_keqiangganghu();
  keqiangganghu_ = value;
}

// optional int32 minggangkeqiang = 14;
inline bool gdmjtdh::has_minggangkeqiang() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjtdh::set_has_minggangkeqiang() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjtdh::clear_has_minggangkeqiang() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjtdh::clear_minggangkeqiang() {
  minggangkeqiang_ = 0;
  clear_has_minggangkeqiang();
}
inline ::google::protobuf::int32 gdmjtdh::minggangkeqiang() const {
  return minggangkeqiang_;
}
inline void gdmjtdh::set_minggangkeqiang(::google::protobuf::int32 value) {
  set_has_minggangkeqiang();
  minggangkeqiang_ = value;
}

// optional int32 qianggangquanbao = 15;
inline bool gdmjtdh::has_qianggangquanbao() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gdmjtdh::set_has_qianggangquanbao() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gdmjtdh::clear_has_qianggangquanbao() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gdmjtdh::clear_qianggangquanbao() {
  qianggangquanbao_ = 0;
  clear_has_qianggangquanbao();
}
inline ::google::protobuf::int32 gdmjtdh::qianggangquanbao() const {
  return qianggangquanbao_;
}
inline void gdmjtdh::set_qianggangquanbao(::google::protobuf::int32 value) {
  set_has_qianggangquanbao();
  qianggangquanbao_ = value;
}

// optional int32 gangbaoquanbao = 16;
inline bool gdmjtdh::has_gangbaoquanbao() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gdmjtdh::set_has_gangbaoquanbao() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gdmjtdh::clear_has_gangbaoquanbao() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gdmjtdh::clear_gangbaoquanbao() {
  gangbaoquanbao_ = 0;
  clear_has_gangbaoquanbao();
}
inline ::google::protobuf::int32 gdmjtdh::gangbaoquanbao() const {
  return gangbaoquanbao_;
}
inline void gdmjtdh::set_gangbaoquanbao(::google::protobuf::int32 value) {
  set_has_gangbaoquanbao();
  gangbaoquanbao_ = value;
}

// optional int32 wuguijiabei = 17;
inline bool gdmjtdh::has_wuguijiabei() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gdmjtdh::set_has_wuguijiabei() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gdmjtdh::clear_has_wuguijiabei() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gdmjtdh::clear_wuguijiabei() {
  wuguijiabei_ = 0;
  clear_has_wuguijiabei();
}
inline ::google::protobuf::int32 gdmjtdh::wuguijiabei() const {
  return wuguijiabei_;
}
inline void gdmjtdh::set_wuguijiabei(::google::protobuf::int32 value) {
  set_has_wuguijiabei();
  wuguijiabei_ = value;
}

// optional int32 budaifeng = 18;
inline bool gdmjtdh::has_budaifeng() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void gdmjtdh::set_has_budaifeng() {
  _has_bits_[0] |= 0x00000800u;
}
inline void gdmjtdh::clear_has_budaifeng() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void gdmjtdh::clear_budaifeng() {
  budaifeng_ = 0;
  clear_has_budaifeng();
}
inline ::google::protobuf::int32 gdmjtdh::budaifeng() const {
  return budaifeng_;
}
inline void gdmjtdh::set_budaifeng(::google::protobuf::int32 value) {
  set_has_budaifeng();
  budaifeng_ = value;
}

// optional int32 gengzhuang = 19;
inline bool gdmjtdh::has_gengzhuang() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gdmjtdh::set_has_gengzhuang() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gdmjtdh::clear_has_gengzhuang() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gdmjtdh::clear_gengzhuang() {
  gengzhuang_ = 0;
  clear_has_gengzhuang();
}
inline ::google::protobuf::int32 gdmjtdh::gengzhuang() const {
  return gengzhuang_;
}
inline void gdmjtdh::set_gengzhuang(::google::protobuf::int32 value) {
  set_has_gengzhuang();
  gengzhuang_ = value;
}

// optional int32 jiejiegao = 20;
inline bool gdmjtdh::has_jiejiegao() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gdmjtdh::set_has_jiejiegao() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gdmjtdh::clear_has_jiejiegao() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gdmjtdh::clear_jiejiegao() {
  jiejiegao_ = 0;
  clear_has_jiejiegao();
}
inline ::google::protobuf::int32 gdmjtdh::jiejiegao() const {
  return jiejiegao_;
}
inline void gdmjtdh::set_jiejiegao(::google::protobuf::int32 value) {
  set_has_jiejiegao();
  jiejiegao_ = value;
}

// -------------------------------------------------------------------

// gdmjztdh

// optional int32 mjtype = 1;
inline bool gdmjztdh::has_mjtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjztdh::set_has_mjtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjztdh::clear_has_mjtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjztdh::clear_mjtype() {
  mjtype_ = 0;
  clear_has_mjtype();
}
inline ::google::protobuf::int32 gdmjztdh::mjtype() const {
  return mjtype_;
}
inline void gdmjztdh::set_mjtype(::google::protobuf::int32 value) {
  set_has_mjtype();
  mjtype_ = value;
}

// optional int32 typegui = 2;
inline bool gdmjztdh::has_typegui() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjztdh::set_has_typegui() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjztdh::clear_has_typegui() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjztdh::clear_typegui() {
  typegui_ = 0;
  clear_has_typegui();
}
inline ::google::protobuf::int32 gdmjztdh::typegui() const {
  return typegui_;
}
inline void gdmjztdh::set_typegui(::google::protobuf::int32 value) {
  set_has_typegui();
  typegui_ = value;
}

// optional int32 manum = 3;
inline bool gdmjztdh::has_manum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjztdh::set_has_manum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjztdh::clear_has_manum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjztdh::clear_manum() {
  manum_ = 0;
  clear_has_manum();
}
inline ::google::protobuf::int32 gdmjztdh::manum() const {
  return manum_;
}
inline void gdmjztdh::set_manum(::google::protobuf::int32 value) {
  set_has_manum();
  manum_ = value;
}

// optional int32 shuanggui = 4;
inline bool gdmjztdh::has_shuanggui() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjztdh::set_has_shuanggui() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjztdh::clear_has_shuanggui() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjztdh::clear_shuanggui() {
  shuanggui_ = 0;
  clear_has_shuanggui();
}
inline ::google::protobuf::int32 gdmjztdh::shuanggui() const {
  return shuanggui_;
}
inline void gdmjztdh::set_shuanggui(::google::protobuf::int32 value) {
  set_has_shuanggui();
  shuanggui_ = value;
}

// optional int32 kechihu = 11;
inline bool gdmjztdh::has_kechihu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjztdh::set_has_kechihu() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjztdh::clear_has_kechihu() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjztdh::clear_kechihu() {
  kechihu_ = 0;
  clear_has_kechihu();
}
inline ::google::protobuf::int32 gdmjztdh::kechihu() const {
  return kechihu_;
}
inline void gdmjztdh::set_kechihu(::google::protobuf::int32 value) {
  set_has_kechihu();
  kechihu_ = value;
}

// optional int32 kehuqidui = 12;
inline bool gdmjztdh::has_kehuqidui() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjztdh::set_has_kehuqidui() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjztdh::clear_has_kehuqidui() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjztdh::clear_kehuqidui() {
  kehuqidui_ = 0;
  clear_has_kehuqidui();
}
inline ::google::protobuf::int32 gdmjztdh::kehuqidui() const {
  return kehuqidui_;
}
inline void gdmjztdh::set_kehuqidui(::google::protobuf::int32 value) {
  set_has_kehuqidui();
  kehuqidui_ = value;
}

// optional int32 keqiangganghu = 14;
inline bool gdmjztdh::has_keqiangganghu() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjztdh::set_has_keqiangganghu() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjztdh::clear_has_keqiangganghu() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjztdh::clear_keqiangganghu() {
  keqiangganghu_ = 0;
  clear_has_keqiangganghu();
}
inline ::google::protobuf::int32 gdmjztdh::keqiangganghu() const {
  return keqiangganghu_;
}
inline void gdmjztdh::set_keqiangganghu(::google::protobuf::int32 value) {
  set_has_keqiangganghu();
  keqiangganghu_ = value;
}

// optional int32 minggangkeqiang = 15;
inline bool gdmjztdh::has_minggangkeqiang() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjztdh::set_has_minggangkeqiang() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjztdh::clear_has_minggangkeqiang() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjztdh::clear_minggangkeqiang() {
  minggangkeqiang_ = 0;
  clear_has_minggangkeqiang();
}
inline ::google::protobuf::int32 gdmjztdh::minggangkeqiang() const {
  return minggangkeqiang_;
}
inline void gdmjztdh::set_minggangkeqiang(::google::protobuf::int32 value) {
  set_has_minggangkeqiang();
  minggangkeqiang_ = value;
}

// optional int32 qianggangquanbao = 16;
inline bool gdmjztdh::has_qianggangquanbao() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gdmjztdh::set_has_qianggangquanbao() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gdmjztdh::clear_has_qianggangquanbao() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gdmjztdh::clear_qianggangquanbao() {
  qianggangquanbao_ = 0;
  clear_has_qianggangquanbao();
}
inline ::google::protobuf::int32 gdmjztdh::qianggangquanbao() const {
  return qianggangquanbao_;
}
inline void gdmjztdh::set_qianggangquanbao(::google::protobuf::int32 value) {
  set_has_qianggangquanbao();
  qianggangquanbao_ = value;
}

// optional int32 gangbaoquanbao = 17;
inline bool gdmjztdh::has_gangbaoquanbao() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gdmjztdh::set_has_gangbaoquanbao() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gdmjztdh::clear_has_gangbaoquanbao() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gdmjztdh::clear_gangbaoquanbao() {
  gangbaoquanbao_ = 0;
  clear_has_gangbaoquanbao();
}
inline ::google::protobuf::int32 gdmjztdh::gangbaoquanbao() const {
  return gangbaoquanbao_;
}
inline void gdmjztdh::set_gangbaoquanbao(::google::protobuf::int32 value) {
  set_has_gangbaoquanbao();
  gangbaoquanbao_ = value;
}

// optional int32 budaifeng = 18;
inline bool gdmjztdh::has_budaifeng() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gdmjztdh::set_has_budaifeng() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gdmjztdh::clear_has_budaifeng() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gdmjztdh::clear_budaifeng() {
  budaifeng_ = 0;
  clear_has_budaifeng();
}
inline ::google::protobuf::int32 gdmjztdh::budaifeng() const {
  return budaifeng_;
}
inline void gdmjztdh::set_budaifeng(::google::protobuf::int32 value) {
  set_has_budaifeng();
  budaifeng_ = value;
}

// optional int32 gengzhuang = 19;
inline bool gdmjztdh::has_gengzhuang() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void gdmjztdh::set_has_gengzhuang() {
  _has_bits_[0] |= 0x00000800u;
}
inline void gdmjztdh::clear_has_gengzhuang() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void gdmjztdh::clear_gengzhuang() {
  gengzhuang_ = 0;
  clear_has_gengzhuang();
}
inline ::google::protobuf::int32 gdmjztdh::gengzhuang() const {
  return gengzhuang_;
}
inline void gdmjztdh::set_gengzhuang(::google::protobuf::int32 value) {
  set_has_gengzhuang();
  gengzhuang_ = value;
}

// optional int32 siguihupai = 20;
inline bool gdmjztdh::has_siguihupai() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gdmjztdh::set_has_siguihupai() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gdmjztdh::clear_has_siguihupai() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gdmjztdh::clear_siguihupai() {
  siguihupai_ = 0;
  clear_has_siguihupai();
}
inline ::google::protobuf::int32 gdmjztdh::siguihupai() const {
  return siguihupai_;
}
inline void gdmjztdh::set_siguihupai(::google::protobuf::int32 value) {
  set_has_siguihupai();
  siguihupai_ = value;
}

// optional int32 qiduisibei = 21;
inline bool gdmjztdh::has_qiduisibei() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gdmjztdh::set_has_qiduisibei() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gdmjztdh::clear_has_qiduisibei() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gdmjztdh::clear_qiduisibei() {
  qiduisibei_ = 0;
  clear_has_qiduisibei();
}
inline ::google::protobuf::int32 gdmjztdh::qiduisibei() const {
  return qiduisibei_;
}
inline void gdmjztdh::set_qiduisibei(::google::protobuf::int32 value) {
  set_has_qiduisibei();
  qiduisibei_ = value;
}

// optional int32 pengpenghu = 22;
inline bool gdmjztdh::has_pengpenghu() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void gdmjztdh::set_has_pengpenghu() {
  _has_bits_[0] |= 0x00004000u;
}
inline void gdmjztdh::clear_has_pengpenghu() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void gdmjztdh::clear_pengpenghu() {
  pengpenghu_ = 0;
  clear_has_pengpenghu();
}
inline ::google::protobuf::int32 gdmjztdh::pengpenghu() const {
  return pengpenghu_;
}
inline void gdmjztdh::set_pengpenghu(::google::protobuf::int32 value) {
  set_has_pengpenghu();
  pengpenghu_ = value;
}

// optional int32 qingyises = 23;
inline bool gdmjztdh::has_qingyises() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void gdmjztdh::set_has_qingyises() {
  _has_bits_[0] |= 0x00008000u;
}
inline void gdmjztdh::clear_has_qingyises() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void gdmjztdh::clear_qingyises() {
  qingyises_ = 0;
  clear_has_qingyises();
}
inline ::google::protobuf::int32 gdmjztdh::qingyises() const {
  return qingyises_;
}
inline void gdmjztdh::set_qingyises(::google::protobuf::int32 value) {
  set_has_qingyises();
  qingyises_ = value;
}

// optional int32 quanfeng = 24;
inline bool gdmjztdh::has_quanfeng() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void gdmjztdh::set_has_quanfeng() {
  _has_bits_[0] |= 0x00010000u;
}
inline void gdmjztdh::clear_has_quanfeng() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void gdmjztdh::clear_quanfeng() {
  quanfeng_ = 0;
  clear_has_quanfeng();
}
inline ::google::protobuf::int32 gdmjztdh::quanfeng() const {
  return quanfeng_;
}
inline void gdmjztdh::set_quanfeng(::google::protobuf::int32 value) {
  set_has_quanfeng();
  quanfeng_ = value;
}

// optional int32 shisanyao = 25;
inline bool gdmjztdh::has_shisanyao() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void gdmjztdh::set_has_shisanyao() {
  _has_bits_[0] |= 0x00020000u;
}
inline void gdmjztdh::clear_has_shisanyao() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void gdmjztdh::clear_shisanyao() {
  shisanyao_ = 0;
  clear_has_shisanyao();
}
inline ::google::protobuf::int32 gdmjztdh::shisanyao() const {
  return shisanyao_;
}
inline void gdmjztdh::set_shisanyao(::google::protobuf::int32 value) {
  set_has_shisanyao();
  shisanyao_ = value;
}

// optional int32 yaomeyao = 26;
inline bool gdmjztdh::has_yaomeyao() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void gdmjztdh::set_has_yaomeyao() {
  _has_bits_[0] |= 0x00040000u;
}
inline void gdmjztdh::clear_has_yaomeyao() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void gdmjztdh::clear_yaomeyao() {
  yaomeyao_ = 0;
  clear_has_yaomeyao();
}
inline ::google::protobuf::int32 gdmjztdh::yaomeyao() const {
  return yaomeyao_;
}
inline void gdmjztdh::set_yaomeyao(::google::protobuf::int32 value) {
  set_has_yaomeyao();
  yaomeyao_ = value;
}

// optional int32 yaojiujike = 27;
inline bool gdmjztdh::has_yaojiujike() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void gdmjztdh::set_has_yaojiujike() {
  _has_bits_[0] |= 0x00080000u;
}
inline void gdmjztdh::clear_has_yaojiujike() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void gdmjztdh::clear_yaojiujike() {
  yaojiujike_ = 0;
  clear_has_yaojiujike();
}
inline ::google::protobuf::int32 gdmjztdh::yaojiujike() const {
  return yaojiujike_;
}
inline void gdmjztdh::set_yaojiujike(::google::protobuf::int32 value) {
  set_has_yaojiujike();
  yaojiujike_ = value;
}

// optional int32 wuguijiabei = 28;
inline bool gdmjztdh::has_wuguijiabei() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void gdmjztdh::set_has_wuguijiabei() {
  _has_bits_[0] |= 0x00100000u;
}
inline void gdmjztdh::clear_has_wuguijiabei() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void gdmjztdh::clear_wuguijiabei() {
  wuguijiabei_ = 0;
  clear_has_wuguijiabei();
}
inline ::google::protobuf::int32 gdmjztdh::wuguijiabei() const {
  return wuguijiabei_;
}
inline void gdmjztdh::set_wuguijiabei(::google::protobuf::int32 value) {
  set_has_wuguijiabei();
  wuguijiabei_ = value;
}

// optional int32 siguiliangbei = 29;
inline bool gdmjztdh::has_siguiliangbei() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void gdmjztdh::set_has_siguiliangbei() {
  _has_bits_[0] |= 0x00200000u;
}
inline void gdmjztdh::clear_has_siguiliangbei() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void gdmjztdh::clear_siguiliangbei() {
  siguiliangbei_ = 0;
  clear_has_siguiliangbei();
}
inline ::google::protobuf::int32 gdmjztdh::siguiliangbei() const {
  return siguiliangbei_;
}
inline void gdmjztdh::set_siguiliangbei(::google::protobuf::int32 value) {
  set_has_siguiliangbei();
  siguiliangbei_ = value;
}

// -------------------------------------------------------------------

// gdmjjph

// optional int32 mjtype = 1;
inline bool gdmjjph::has_mjtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjjph::set_has_mjtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjjph::clear_has_mjtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjjph::clear_mjtype() {
  mjtype_ = 0;
  clear_has_mjtype();
}
inline ::google::protobuf::int32 gdmjjph::mjtype() const {
  return mjtype_;
}
inline void gdmjjph::set_mjtype(::google::protobuf::int32 value) {
  set_has_mjtype();
  mjtype_ = value;
}

// optional int32 fantype = 2;
inline bool gdmjjph::has_fantype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjjph::set_has_fantype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjjph::clear_has_fantype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjjph::clear_fantype() {
  fantype_ = 0;
  clear_has_fantype();
}
inline ::google::protobuf::int32 gdmjjph::fantype() const {
  return fantype_;
}
inline void gdmjjph::set_fantype(::google::protobuf::int32 value) {
  set_has_fantype();
  fantype_ = value;
}

// optional int32 maxfan = 3;
inline bool gdmjjph::has_maxfan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjjph::set_has_maxfan() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjjph::clear_has_maxfan() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjjph::clear_maxfan() {
  maxfan_ = 0;
  clear_has_maxfan();
}
inline ::google::protobuf::int32 gdmjjph::maxfan() const {
  return maxfan_;
}
inline void gdmjjph::set_maxfan(::google::protobuf::int32 value) {
  set_has_maxfan();
  maxfan_ = value;
}

// -------------------------------------------------------------------

// gdmjhzz

// optional int32 mjtype = 1;
inline bool gdmjhzz::has_mjtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjhzz::set_has_mjtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjhzz::clear_has_mjtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjhzz::clear_mjtype() {
  mjtype_ = 0;
  clear_has_mjtype();
}
inline ::google::protobuf::int32 gdmjhzz::mjtype() const {
  return mjtype_;
}
inline void gdmjhzz::set_mjtype(::google::protobuf::int32 value) {
  set_has_mjtype();
  mjtype_ = value;
}

// optional int32 bukejihu = 2;
inline bool gdmjhzz::has_bukejihu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjhzz::set_has_bukejihu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjhzz::clear_has_bukejihu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjhzz::clear_bukejihu() {
  bukejihu_ = 0;
  clear_has_bukejihu();
}
inline ::google::protobuf::int32 gdmjhzz::bukejihu() const {
  return bukejihu_;
}
inline void gdmjhzz::set_bukejihu(::google::protobuf::int32 value) {
  set_has_bukejihu();
  bukejihu_ = value;
}

// optional int32 menqingjiafen = 3;
inline bool gdmjhzz::has_menqingjiafen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjhzz::set_has_menqingjiafen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjhzz::clear_has_menqingjiafen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjhzz::clear_menqingjiafen() {
  menqingjiafen_ = 0;
  clear_has_menqingjiafen();
}
inline ::google::protobuf::int32 gdmjhzz::menqingjiafen() const {
  return menqingjiafen_;
}
inline void gdmjhzz::set_menqingjiafen(::google::protobuf::int32 value) {
  set_has_menqingjiafen();
  menqingjiafen_ = value;
}

// optional int32 genzhuang = 4;
inline bool gdmjhzz::has_genzhuang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjhzz::set_has_genzhuang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjhzz::clear_has_genzhuang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjhzz::clear_genzhuang() {
  genzhuang_ = 0;
  clear_has_genzhuang();
}
inline ::google::protobuf::int32 gdmjhzz::genzhuang() const {
  return genzhuang_;
}
inline void gdmjhzz::set_genzhuang(::google::protobuf::int32 value) {
  set_has_genzhuang();
  genzhuang_ = value;
}

// optional int32 duohuahupai = 5;
inline bool gdmjhzz::has_duohuahupai() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjhzz::set_has_duohuahupai() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjhzz::clear_has_duohuahupai() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjhzz::clear_duohuahupai() {
  duohuahupai_ = 0;
  clear_has_duohuahupai();
}
inline ::google::protobuf::int32 gdmjhzz::duohuahupai() const {
  return duohuahupai_;
}
inline void gdmjhzz::set_duohuahupai(::google::protobuf::int32 value) {
  set_has_duohuahupai();
  duohuahupai_ = value;
}

// optional int32 ganggenma = 6;
inline bool gdmjhzz::has_ganggenma() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjhzz::set_has_ganggenma() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjhzz::clear_has_ganggenma() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjhzz::clear_ganggenma() {
  ganggenma_ = 0;
  clear_has_ganggenma();
}
inline ::google::protobuf::int32 gdmjhzz::ganggenma() const {
  return ganggenma_;
}
inline void gdmjhzz::set_ganggenma(::google::protobuf::int32 value) {
  set_has_ganggenma();
  ganggenma_ = value;
}

// optional int32 manum = 7;
inline bool gdmjhzz::has_manum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjhzz::set_has_manum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjhzz::clear_has_manum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjhzz::clear_manum() {
  manum_ = 0;
  clear_has_manum();
}
inline ::google::protobuf::int32 gdmjhzz::manum() const {
  return manum_;
}
inline void gdmjhzz::set_manum(::google::protobuf::int32 value) {
  set_has_manum();
  manum_ = value;
}

// -------------------------------------------------------------------

// gdmjhdz

// optional int32 mjtype = 1;
inline bool gdmjhdz::has_mjtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjhdz::set_has_mjtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjhdz::clear_has_mjtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjhdz::clear_mjtype() {
  mjtype_ = 0;
  clear_has_mjtype();
}
inline ::google::protobuf::int32 gdmjhdz::mjtype() const {
  return mjtype_;
}
inline void gdmjhdz::set_mjtype(::google::protobuf::int32 value) {
  set_has_mjtype();
  mjtype_ = value;
}

// optional int32 bukejihu = 2;
inline bool gdmjhdz::has_bukejihu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjhdz::set_has_bukejihu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjhdz::clear_has_bukejihu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjhdz::clear_bukejihu() {
  bukejihu_ = 0;
  clear_has_bukejihu();
}
inline ::google::protobuf::int32 gdmjhdz::bukejihu() const {
  return bukejihu_;
}
inline void gdmjhdz::set_bukejihu(::google::protobuf::int32 value) {
  set_has_bukejihu();
  bukejihu_ = value;
}

// optional int32 menqingjiafen = 3;
inline bool gdmjhdz::has_menqingjiafen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjhdz::set_has_menqingjiafen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjhdz::clear_has_menqingjiafen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjhdz::clear_menqingjiafen() {
  menqingjiafen_ = 0;
  clear_has_menqingjiafen();
}
inline ::google::protobuf::int32 gdmjhdz::menqingjiafen() const {
  return menqingjiafen_;
}
inline void gdmjhdz::set_menqingjiafen(::google::protobuf::int32 value) {
  set_has_menqingjiafen();
  menqingjiafen_ = value;
}

// optional int32 genzhuang = 4;
inline bool gdmjhdz::has_genzhuang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjhdz::set_has_genzhuang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjhdz::clear_has_genzhuang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjhdz::clear_genzhuang() {
  genzhuang_ = 0;
  clear_has_genzhuang();
}
inline ::google::protobuf::int32 gdmjhdz::genzhuang() const {
  return genzhuang_;
}
inline void gdmjhdz::set_genzhuang(::google::protobuf::int32 value) {
  set_has_genzhuang();
  genzhuang_ = value;
}

// optional int32 duohuahupai = 5;
inline bool gdmjhdz::has_duohuahupai() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjhdz::set_has_duohuahupai() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjhdz::clear_has_duohuahupai() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjhdz::clear_duohuahupai() {
  duohuahupai_ = 0;
  clear_has_duohuahupai();
}
inline ::google::protobuf::int32 gdmjhdz::duohuahupai() const {
  return duohuahupai_;
}
inline void gdmjhdz::set_duohuahupai(::google::protobuf::int32 value) {
  set_has_duohuahupai();
  duohuahupai_ = value;
}

// optional int32 ganggenma = 6;
inline bool gdmjhdz::has_ganggenma() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gdmjhdz::set_has_ganggenma() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gdmjhdz::clear_has_ganggenma() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gdmjhdz::clear_ganggenma() {
  ganggenma_ = 0;
  clear_has_ganggenma();
}
inline ::google::protobuf::int32 gdmjhdz::ganggenma() const {
  return ganggenma_;
}
inline void gdmjhdz::set_ganggenma(::google::protobuf::int32 value) {
  set_has_ganggenma();
  ganggenma_ = value;
}

// optional int32 manum = 7;
inline bool gdmjhdz::has_manum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjhdz::set_has_manum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjhdz::clear_has_manum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjhdz::clear_manum() {
  manum_ = 0;
  clear_has_manum();
}
inline ::google::protobuf::int32 gdmjhdz::manum() const {
  return manum_;
}
inline void gdmjhdz::set_manum(::google::protobuf::int32 value) {
  set_has_manum();
  manum_ = value;
}

// -------------------------------------------------------------------

// gdmjcountinfo

// optional int32 userid = 1;
inline bool gdmjcountinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjcountinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjcountinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjcountinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gdmjcountinfo::userid() const {
  return userid_;
}
inline void gdmjcountinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// optional int32 iswin = 2;
inline bool gdmjcountinfo::has_iswin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjcountinfo::set_has_iswin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjcountinfo::clear_has_iswin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjcountinfo::clear_iswin() {
  iswin_ = 0;
  clear_has_iswin();
}
inline ::google::protobuf::int32 gdmjcountinfo::iswin() const {
  return iswin_;
}
inline void gdmjcountinfo::set_iswin(::google::protobuf::int32 value) {
  set_has_iswin();
  iswin_ = value;
}

// optional int32 winjetton = 3;
inline bool gdmjcountinfo::has_winjetton() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjcountinfo::set_has_winjetton() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjcountinfo::clear_has_winjetton() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjcountinfo::clear_winjetton() {
  winjetton_ = 0;
  clear_has_winjetton();
}
inline ::google::protobuf::int32 gdmjcountinfo::winjetton() const {
  return winjetton_;
}
inline void gdmjcountinfo::set_winjetton(::google::protobuf::int32 value) {
  set_has_winjetton();
  winjetton_ = value;
}

// optional int32 gangjetton = 4;
inline bool gdmjcountinfo::has_gangjetton() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjcountinfo::set_has_gangjetton() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjcountinfo::clear_has_gangjetton() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjcountinfo::clear_gangjetton() {
  gangjetton_ = 0;
  clear_has_gangjetton();
}
inline ::google::protobuf::int32 gdmjcountinfo::gangjetton() const {
  return gangjetton_;
}
inline void gdmjcountinfo::set_gangjetton(::google::protobuf::int32 value) {
  set_has_gangjetton();
  gangjetton_ = value;
}

// optional int32 fannum = 5;
inline bool gdmjcountinfo::has_fannum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gdmjcountinfo::set_has_fannum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gdmjcountinfo::clear_has_fannum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gdmjcountinfo::clear_fannum() {
  fannum_ = 0;
  clear_has_fannum();
}
inline ::google::protobuf::int32 gdmjcountinfo::fannum() const {
  return fannum_;
}
inline void gdmjcountinfo::set_fannum(::google::protobuf::int32 value) {
  set_has_fannum();
  fannum_ = value;
}

// repeated string des = 6;
inline int gdmjcountinfo::des_size() const {
  return des_.size();
}
inline void gdmjcountinfo::clear_des() {
  des_.Clear();
}
inline const ::std::string& gdmjcountinfo::des(int index) const {
  return des_.Get(index);
}
inline ::std::string* gdmjcountinfo::mutable_des(int index) {
  return des_.Mutable(index);
}
inline void gdmjcountinfo::set_des(int index, const ::std::string& value) {
  des_.Mutable(index)->assign(value);
}
inline void gdmjcountinfo::set_des(int index, const char* value) {
  des_.Mutable(index)->assign(value);
}
inline void gdmjcountinfo::set_des(int index, const char* value, size_t size) {
  des_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjcountinfo::add_des() {
  return des_.Add();
}
inline void gdmjcountinfo::add_des(const ::std::string& value) {
  des_.Add()->assign(value);
}
inline void gdmjcountinfo::add_des(const char* value) {
  des_.Add()->assign(value);
}
inline void gdmjcountinfo::add_des(const char* value, size_t size) {
  des_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gdmjcountinfo::des() const {
  return des_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gdmjcountinfo::mutable_des() {
  return &des_;
}

// optional int32 beinum = 7;
inline bool gdmjcountinfo::has_beinum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gdmjcountinfo::set_has_beinum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gdmjcountinfo::clear_has_beinum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gdmjcountinfo::clear_beinum() {
  beinum_ = 0;
  clear_has_beinum();
}
inline ::google::protobuf::int32 gdmjcountinfo::beinum() const {
  return beinum_;
}
inline void gdmjcountinfo::set_beinum(::google::protobuf::int32 value) {
  set_has_beinum();
  beinum_ = value;
}

// optional int32 hunum = 8;
inline bool gdmjcountinfo::has_hunum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjcountinfo::set_has_hunum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjcountinfo::clear_has_hunum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjcountinfo::clear_hunum() {
  hunum_ = 0;
  clear_has_hunum();
}
inline ::google::protobuf::int32 gdmjcountinfo::hunum() const {
  return hunum_;
}
inline void gdmjcountinfo::set_hunum(::google::protobuf::int32 value) {
  set_has_hunum();
  hunum_ = value;
}

// optional int32 carryjetton = 9;
inline bool gdmjcountinfo::has_carryjetton() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gdmjcountinfo::set_has_carryjetton() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gdmjcountinfo::clear_has_carryjetton() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gdmjcountinfo::clear_carryjetton() {
  carryjetton_ = 0;
  clear_has_carryjetton();
}
inline ::google::protobuf::int32 gdmjcountinfo::carryjetton() const {
  return carryjetton_;
}
inline void gdmjcountinfo::set_carryjetton(::google::protobuf::int32 value) {
  set_has_carryjetton();
  carryjetton_ = value;
}

// optional int32 julebu_jetton = 10;
inline bool gdmjcountinfo::has_julebu_jetton() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gdmjcountinfo::set_has_julebu_jetton() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gdmjcountinfo::clear_has_julebu_jetton() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gdmjcountinfo::clear_julebu_jetton() {
  julebu_jetton_ = 0;
  clear_has_julebu_jetton();
}
inline ::google::protobuf::int32 gdmjcountinfo::julebu_jetton() const {
  return julebu_jetton_;
}
inline void gdmjcountinfo::set_julebu_jetton(::google::protobuf::int32 value) {
  set_has_julebu_jetton();
  julebu_jetton_ = value;
}

// -------------------------------------------------------------------

// gdmjhistoryitem

// optional int32 tableplayid = 1;
inline bool gdmjhistoryitem::has_tableplayid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjhistoryitem::set_has_tableplayid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjhistoryitem::clear_has_tableplayid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjhistoryitem::clear_tableplayid() {
  tableplayid_ = 0;
  clear_has_tableplayid();
}
inline ::google::protobuf::int32 gdmjhistoryitem::tableplayid() const {
  return tableplayid_;
}
inline void gdmjhistoryitem::set_tableplayid(::google::protobuf::int32 value) {
  set_has_tableplayid();
  tableplayid_ = value;
}

// optional int32 tableid = 2;
inline bool gdmjhistoryitem::has_tableid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjhistoryitem::set_has_tableid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjhistoryitem::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjhistoryitem::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 gdmjhistoryitem::tableid() const {
  return tableid_;
}
inline void gdmjhistoryitem::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
}

// optional int32 playtime = 3;
inline bool gdmjhistoryitem::has_playtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjhistoryitem::set_has_playtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjhistoryitem::clear_has_playtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjhistoryitem::clear_playtime() {
  playtime_ = 0;
  clear_has_playtime();
}
inline ::google::protobuf::int32 gdmjhistoryitem::playtime() const {
  return playtime_;
}
inline void gdmjhistoryitem::set_playtime(::google::protobuf::int32 value) {
  set_has_playtime();
  playtime_ = value;
}

// optional int32 playstate = 4;
inline bool gdmjhistoryitem::has_playstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjhistoryitem::set_has_playstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjhistoryitem::clear_has_playstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjhistoryitem::clear_playstate() {
  playstate_ = 0;
  clear_has_playstate();
}
inline ::google::protobuf::int32 gdmjhistoryitem::playstate() const {
  return playstate_;
}
inline void gdmjhistoryitem::set_playstate(::google::protobuf::int32 value) {
  set_has_playstate();
  playstate_ = value;
}

// repeated int32 useridlist = 5;
inline int gdmjhistoryitem::useridlist_size() const {
  return useridlist_.size();
}
inline void gdmjhistoryitem::clear_useridlist() {
  useridlist_.Clear();
}
inline ::google::protobuf::int32 gdmjhistoryitem::useridlist(int index) const {
  return useridlist_.Get(index);
}
inline void gdmjhistoryitem::set_useridlist(int index, ::google::protobuf::int32 value) {
  useridlist_.Set(index, value);
}
inline void gdmjhistoryitem::add_useridlist(::google::protobuf::int32 value) {
  useridlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjhistoryitem::useridlist() const {
  return useridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjhistoryitem::mutable_useridlist() {
  return &useridlist_;
}

// repeated string nicklist = 6;
inline int gdmjhistoryitem::nicklist_size() const {
  return nicklist_.size();
}
inline void gdmjhistoryitem::clear_nicklist() {
  nicklist_.Clear();
}
inline const ::std::string& gdmjhistoryitem::nicklist(int index) const {
  return nicklist_.Get(index);
}
inline ::std::string* gdmjhistoryitem::mutable_nicklist(int index) {
  return nicklist_.Mutable(index);
}
inline void gdmjhistoryitem::set_nicklist(int index, const ::std::string& value) {
  nicklist_.Mutable(index)->assign(value);
}
inline void gdmjhistoryitem::set_nicklist(int index, const char* value) {
  nicklist_.Mutable(index)->assign(value);
}
inline void gdmjhistoryitem::set_nicklist(int index, const char* value, size_t size) {
  nicklist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjhistoryitem::add_nicklist() {
  return nicklist_.Add();
}
inline void gdmjhistoryitem::add_nicklist(const ::std::string& value) {
  nicklist_.Add()->assign(value);
}
inline void gdmjhistoryitem::add_nicklist(const char* value) {
  nicklist_.Add()->assign(value);
}
inline void gdmjhistoryitem::add_nicklist(const char* value, size_t size) {
  nicklist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gdmjhistoryitem::nicklist() const {
  return nicklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gdmjhistoryitem::mutable_nicklist() {
  return &nicklist_;
}

// repeated int32 winlist = 7;
inline int gdmjhistoryitem::winlist_size() const {
  return winlist_.size();
}
inline void gdmjhistoryitem::clear_winlist() {
  winlist_.Clear();
}
inline ::google::protobuf::int32 gdmjhistoryitem::winlist(int index) const {
  return winlist_.Get(index);
}
inline void gdmjhistoryitem::set_winlist(int index, ::google::protobuf::int32 value) {
  winlist_.Set(index, value);
}
inline void gdmjhistoryitem::add_winlist(::google::protobuf::int32 value) {
  winlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjhistoryitem::winlist() const {
  return winlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjhistoryitem::mutable_winlist() {
  return &winlist_;
}

// optional string quitdes = 8;
inline bool gdmjhistoryitem::has_quitdes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gdmjhistoryitem::set_has_quitdes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gdmjhistoryitem::clear_has_quitdes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gdmjhistoryitem::clear_quitdes() {
  if (quitdes_ != &::google::protobuf::internal::kEmptyString) {
    quitdes_->clear();
  }
  clear_has_quitdes();
}
inline const ::std::string& gdmjhistoryitem::quitdes() const {
  return *quitdes_;
}
inline void gdmjhistoryitem::set_quitdes(const ::std::string& value) {
  set_has_quitdes();
  if (quitdes_ == &::google::protobuf::internal::kEmptyString) {
    quitdes_ = new ::std::string;
  }
  quitdes_->assign(value);
}
inline void gdmjhistoryitem::set_quitdes(const char* value) {
  set_has_quitdes();
  if (quitdes_ == &::google::protobuf::internal::kEmptyString) {
    quitdes_ = new ::std::string;
  }
  quitdes_->assign(value);
}
inline void gdmjhistoryitem::set_quitdes(const char* value, size_t size) {
  set_has_quitdes();
  if (quitdes_ == &::google::protobuf::internal::kEmptyString) {
    quitdes_ = new ::std::string;
  }
  quitdes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjhistoryitem::mutable_quitdes() {
  set_has_quitdes();
  if (quitdes_ == &::google::protobuf::internal::kEmptyString) {
    quitdes_ = new ::std::string;
  }
  return quitdes_;
}
inline ::std::string* gdmjhistoryitem::release_quitdes() {
  clear_has_quitdes();
  if (quitdes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = quitdes_;
    quitdes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gdmjhistoryitem::set_allocated_quitdes(::std::string* quitdes) {
  if (quitdes_ != &::google::protobuf::internal::kEmptyString) {
    delete quitdes_;
  }
  if (quitdes) {
    set_has_quitdes();
    quitdes_ = quitdes;
  } else {
    clear_has_quitdes();
    quitdes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string userdes = 9;
inline int gdmjhistoryitem::userdes_size() const {
  return userdes_.size();
}
inline void gdmjhistoryitem::clear_userdes() {
  userdes_.Clear();
}
inline const ::std::string& gdmjhistoryitem::userdes(int index) const {
  return userdes_.Get(index);
}
inline ::std::string* gdmjhistoryitem::mutable_userdes(int index) {
  return userdes_.Mutable(index);
}
inline void gdmjhistoryitem::set_userdes(int index, const ::std::string& value) {
  userdes_.Mutable(index)->assign(value);
}
inline void gdmjhistoryitem::set_userdes(int index, const char* value) {
  userdes_.Mutable(index)->assign(value);
}
inline void gdmjhistoryitem::set_userdes(int index, const char* value, size_t size) {
  userdes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjhistoryitem::add_userdes() {
  return userdes_.Add();
}
inline void gdmjhistoryitem::add_userdes(const ::std::string& value) {
  userdes_.Add()->assign(value);
}
inline void gdmjhistoryitem::add_userdes(const char* value) {
  userdes_.Add()->assign(value);
}
inline void gdmjhistoryitem::add_userdes(const char* value, size_t size) {
  userdes_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gdmjhistoryitem::userdes() const {
  return userdes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gdmjhistoryitem::mutable_userdes() {
  return &userdes_;
}

// -------------------------------------------------------------------

// gdmjhistory

// optional int32 tableid = 1;
inline bool gdmjhistory::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjhistory::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjhistory::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjhistory::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 gdmjhistory::tableid() const {
  return tableid_;
}
inline void gdmjhistory::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
}

// optional int32 tablemark = 2;
inline bool gdmjhistory::has_tablemark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjhistory::set_has_tablemark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjhistory::clear_has_tablemark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjhistory::clear_tablemark() {
  tablemark_ = 0;
  clear_has_tablemark();
}
inline ::google::protobuf::int32 gdmjhistory::tablemark() const {
  return tablemark_;
}
inline void gdmjhistory::set_tablemark(::google::protobuf::int32 value) {
  set_has_tablemark();
  tablemark_ = value;
}

// optional int32 gametime = 3;
inline bool gdmjhistory::has_gametime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gdmjhistory::set_has_gametime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gdmjhistory::clear_has_gametime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gdmjhistory::clear_gametime() {
  gametime_ = 0;
  clear_has_gametime();
}
inline ::google::protobuf::int32 gdmjhistory::gametime() const {
  return gametime_;
}
inline void gdmjhistory::set_gametime(::google::protobuf::int32 value) {
  set_has_gametime();
  gametime_ = value;
}

// optional int32 playnum = 4;
inline bool gdmjhistory::has_playnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gdmjhistory::set_has_playnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gdmjhistory::clear_has_playnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gdmjhistory::clear_playnum() {
  playnum_ = 0;
  clear_has_playnum();
}
inline ::google::protobuf::int32 gdmjhistory::playnum() const {
  return playnum_;
}
inline void gdmjhistory::set_playnum(::google::protobuf::int32 value) {
  set_has_playnum();
  playnum_ = value;
}

// repeated int32 useridlist = 5;
inline int gdmjhistory::useridlist_size() const {
  return useridlist_.size();
}
inline void gdmjhistory::clear_useridlist() {
  useridlist_.Clear();
}
inline ::google::protobuf::int32 gdmjhistory::useridlist(int index) const {
  return useridlist_.Get(index);
}
inline void gdmjhistory::set_useridlist(int index, ::google::protobuf::int32 value) {
  useridlist_.Set(index, value);
}
inline void gdmjhistory::add_useridlist(::google::protobuf::int32 value) {
  useridlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjhistory::useridlist() const {
  return useridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjhistory::mutable_useridlist() {
  return &useridlist_;
}

// repeated string nicklist = 6;
inline int gdmjhistory::nicklist_size() const {
  return nicklist_.size();
}
inline void gdmjhistory::clear_nicklist() {
  nicklist_.Clear();
}
inline const ::std::string& gdmjhistory::nicklist(int index) const {
  return nicklist_.Get(index);
}
inline ::std::string* gdmjhistory::mutable_nicklist(int index) {
  return nicklist_.Mutable(index);
}
inline void gdmjhistory::set_nicklist(int index, const ::std::string& value) {
  nicklist_.Mutable(index)->assign(value);
}
inline void gdmjhistory::set_nicklist(int index, const char* value) {
  nicklist_.Mutable(index)->assign(value);
}
inline void gdmjhistory::set_nicklist(int index, const char* value, size_t size) {
  nicklist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjhistory::add_nicklist() {
  return nicklist_.Add();
}
inline void gdmjhistory::add_nicklist(const ::std::string& value) {
  nicklist_.Add()->assign(value);
}
inline void gdmjhistory::add_nicklist(const char* value) {
  nicklist_.Add()->assign(value);
}
inline void gdmjhistory::add_nicklist(const char* value, size_t size) {
  nicklist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gdmjhistory::nicklist() const {
  return nicklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gdmjhistory::mutable_nicklist() {
  return &nicklist_;
}

// repeated int32 winlist = 7;
inline int gdmjhistory::winlist_size() const {
  return winlist_.size();
}
inline void gdmjhistory::clear_winlist() {
  winlist_.Clear();
}
inline ::google::protobuf::int32 gdmjhistory::winlist(int index) const {
  return winlist_.Get(index);
}
inline void gdmjhistory::set_winlist(int index, ::google::protobuf::int32 value) {
  winlist_.Set(index, value);
}
inline void gdmjhistory::add_winlist(::google::protobuf::int32 value) {
  winlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjhistory::winlist() const {
  return winlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjhistory::mutable_winlist() {
  return &winlist_;
}

// repeated .progame.gdmjhistoryitem hitemlist = 8;
inline int gdmjhistory::hitemlist_size() const {
  return hitemlist_.size();
}
inline void gdmjhistory::clear_hitemlist() {
  hitemlist_.Clear();
}
inline const ::progame::gdmjhistoryitem& gdmjhistory::hitemlist(int index) const {
  return hitemlist_.Get(index);
}
inline ::progame::gdmjhistoryitem* gdmjhistory::mutable_hitemlist(int index) {
  return hitemlist_.Mutable(index);
}
inline ::progame::gdmjhistoryitem* gdmjhistory::add_hitemlist() {
  return hitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjhistoryitem >&
gdmjhistory::hitemlist() const {
  return hitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjhistoryitem >*
gdmjhistory::mutable_hitemlist() {
  return &hitemlist_;
}

// -------------------------------------------------------------------

// gdmjhistorypair

// optional int32 packetcode = 1;
inline bool gdmjhistorypair::has_packetcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjhistorypair::set_has_packetcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjhistorypair::clear_has_packetcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjhistorypair::clear_packetcode() {
  packetcode_ = 0;
  clear_has_packetcode();
}
inline ::google::protobuf::int32 gdmjhistorypair::packetcode() const {
  return packetcode_;
}
inline void gdmjhistorypair::set_packetcode(::google::protobuf::int32 value) {
  set_has_packetcode();
  packetcode_ = value;
}

// optional string pkginfo = 2;
inline bool gdmjhistorypair::has_pkginfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gdmjhistorypair::set_has_pkginfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gdmjhistorypair::clear_has_pkginfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gdmjhistorypair::clear_pkginfo() {
  if (pkginfo_ != &::google::protobuf::internal::kEmptyString) {
    pkginfo_->clear();
  }
  clear_has_pkginfo();
}
inline const ::std::string& gdmjhistorypair::pkginfo() const {
  return *pkginfo_;
}
inline void gdmjhistorypair::set_pkginfo(const ::std::string& value) {
  set_has_pkginfo();
  if (pkginfo_ == &::google::protobuf::internal::kEmptyString) {
    pkginfo_ = new ::std::string;
  }
  pkginfo_->assign(value);
}
inline void gdmjhistorypair::set_pkginfo(const char* value) {
  set_has_pkginfo();
  if (pkginfo_ == &::google::protobuf::internal::kEmptyString) {
    pkginfo_ = new ::std::string;
  }
  pkginfo_->assign(value);
}
inline void gdmjhistorypair::set_pkginfo(const char* value, size_t size) {
  set_has_pkginfo();
  if (pkginfo_ == &::google::protobuf::internal::kEmptyString) {
    pkginfo_ = new ::std::string;
  }
  pkginfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gdmjhistorypair::mutable_pkginfo() {
  set_has_pkginfo();
  if (pkginfo_ == &::google::protobuf::internal::kEmptyString) {
    pkginfo_ = new ::std::string;
  }
  return pkginfo_;
}
inline ::std::string* gdmjhistorypair::release_pkginfo() {
  clear_has_pkginfo();
  if (pkginfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pkginfo_;
    pkginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gdmjhistorypair::set_allocated_pkginfo(::std::string* pkginfo) {
  if (pkginfo_ != &::google::protobuf::internal::kEmptyString) {
    delete pkginfo_;
  }
  if (pkginfo) {
    set_has_pkginfo();
    pkginfo_ = pkginfo;
  } else {
    clear_has_pkginfo();
    pkginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// gdmjhandpoker

// optional int32 userid = 1;
inline bool gdmjhandpoker::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gdmjhandpoker::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gdmjhandpoker::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gdmjhandpoker::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gdmjhandpoker::userid() const {
  return userid_;
}
inline void gdmjhandpoker::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// repeated .progame.gdmjpoker mjpokerlist = 2;
inline int gdmjhandpoker::mjpokerlist_size() const {
  return mjpokerlist_.size();
}
inline void gdmjhandpoker::clear_mjpokerlist() {
  mjpokerlist_.Clear();
}
inline const ::progame::gdmjpoker& gdmjhandpoker::mjpokerlist(int index) const {
  return mjpokerlist_.Get(index);
}
inline ::progame::gdmjpoker* gdmjhandpoker::mutable_mjpokerlist(int index) {
  return mjpokerlist_.Mutable(index);
}
inline ::progame::gdmjpoker* gdmjhandpoker::add_mjpokerlist() {
  return mjpokerlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >&
gdmjhandpoker::mjpokerlist() const {
  return mjpokerlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::progame::gdmjpoker >*
gdmjhandpoker::mutable_mjpokerlist() {
  return &mjpokerlist_;
}

// repeated int32 handpoker = 3;
inline int gdmjhandpoker::handpoker_size() const {
  return handpoker_.size();
}
inline void gdmjhandpoker::clear_handpoker() {
  handpoker_.Clear();
}
inline ::google::protobuf::int32 gdmjhandpoker::handpoker(int index) const {
  return handpoker_.Get(index);
}
inline void gdmjhandpoker::set_handpoker(int index, ::google::protobuf::int32 value) {
  handpoker_.Set(index, value);
}
inline void gdmjhandpoker::add_handpoker(::google::protobuf::int32 value) {
  handpoker_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjhandpoker::handpoker() const {
  return handpoker_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjhandpoker::mutable_handpoker() {
  return &handpoker_;
}

// repeated int32 magetlist = 4;
inline int gdmjhandpoker::magetlist_size() const {
  return magetlist_.size();
}
inline void gdmjhandpoker::clear_magetlist() {
  magetlist_.Clear();
}
inline ::google::protobuf::int32 gdmjhandpoker::magetlist(int index) const {
  return magetlist_.Get(index);
}
inline void gdmjhandpoker::set_magetlist(int index, ::google::protobuf::int32 value) {
  magetlist_.Set(index, value);
}
inline void gdmjhandpoker::add_magetlist(::google::protobuf::int32 value) {
  magetlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gdmjhandpoker::magetlist() const {
  return magetlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gdmjhandpoker::mutable_magetlist() {
  return &magetlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace progame

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_st_5fgdmj_2eproto__INCLUDED
